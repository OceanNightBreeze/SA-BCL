#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 73 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 137 (20,289,377) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 73 207 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I | ASSIGN | 5953 | = null
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1326 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 817 | if (x) -> if (!x)
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z | OPERATOR | 1616 | != -> ==
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
239 1 60 1 211 1 361 2 341 2 313 1 13 3 179 1 333 3 373 1 218 1 168 1 197 2 
253 1 361 2 341 2 146 1 226 2 310 2 313 1 81 1 261 1 168 4 239 1 157 1 294 1 60 1 211 6 193 1 353 2 13 9 331 1 179 2 14 1 333 9 373 3 218 1 358 2 16 1 197 5 76 1 
253 1 361 2 341 2 146 1 226 2 310 2 313 1 81 1 261 1 168 4 239 1 157 1 294 1 60 1 211 6 193 1 353 2 13 9 331 1 179 2 14 1 333 9 373 3 218 1 358 2 16 1 197 5 76 1 
253 1 361 2 341 2 146 1 226 2 310 2 313 1 81 1 261 1 168 5 239 1 157 1 294 1 60 1 211 7 193 1 353 2 13 10 331 1 179 2 14 1 333 10 373 4 218 1 358 2 16 1 197 6 76 1 
253 1 361 2 341 2 146 1 226 2 310 1 313 1 81 1 261 1 168 3 239 1 157 1 294 1 60 1 211 4 193 1 353 2 13 7 331 1 179 2 14 1 333 7 373 2 218 1 358 2 197 4 76 1 
239 1 211 3 361 1 341 1 226 1 146 1 353 1 310 2 313 1 13 4 333 4 373 1 218 1 168 2 358 1 16 1 197 3 76 1 
239 1 294 1 361 1 341 1 226 1 91 1 353 1 313 1 13 2 66 1 331 1 179 1 333 2 218 1 237 1 197 1 
361 2 341 2 146 1 226 1 310 2 313 1 261 1 168 4 239 1 210 1 157 1 60 1 211 7 353 1 13 9 179 1 243 1 333 9 373 3 218 1 358 1 16 1 197 5 76 1 
361 2 341 2 146 1 226 1 310 2 313 1 261 1 168 4 239 1 210 1 157 1 60 1 211 7 353 1 13 9 179 1 243 1 333 9 373 3 218 1 358 1 16 1 197 5 76 1 
351 1 308 1 252 1 362 1 93 1 124 1 128 1 345 1 95 1 300 1 38 1 54 1 131 1 101 1 
309 1 
145 1 103 1 308 2 38 1 252 2 296 1 309 1 170 1 
145 1 111 1 308 5 103 2 252 5 254 1 62 1 241 2 273 1 309 1 37 2 217 1 287 1 38 2 84 2 347 1 208 1 170 1 102 1 
145 1 321 1 309 1 
135 2 309 1 166 1 
199 1 345 2 95 1 351 2 131 2 362 2 124 2 101 2 
199 1 144 1 44 1 222 1 362 2 255 1 124 3 187 1 345 2 288 2 232 1 131 3 55 1 29 1 7 1 132 1 365 1 58 1 173 2 88 1 32 2 351 2 90 2 61 1 213 1 298 2 136 1 95 1 302 1 140 1 159 1 357 1 98 1 305 1 101 2 75 1 162 1 
345 1 95 1 351 1 54 1 131 1 362 1 93 1 124 1 101 1 128 1 
145 1 163 1 308 1 252 1 123 1 309 1 124 1 128 1 346 1 291 1 131 1 246 1 101 1 378 1 
145 1 163 1 351 1 308 2 252 2 362 1 309 1 124 1 128 1 345 1 346 1 291 1 131 1 246 1 101 1 
308 1 38 1 252 1 73 1 
145 1 103 1 308 2 38 1 252 2 309 1 170 1 324 1 
103 1 308 1 252 1 
351 1 121 1 90 1 362 1 124 2 342 1 187 1 372 1 302 1 288 1 232 1 131 2 98 1 55 1 29 1 305 1 101 1 58 1 88 1 173 1 
199 2 351 1 362 1 124 2 345 1 139 1 131 2 101 2 171 1 
366 1 342 1 251 1 
199 1 90 1 286 1 124 1 187 1 302 1 288 1 232 1 131 1 98 1 55 1 29 1 305 1 58 1 173 1 88 1 
199 1 321 1 
345 1 199 1 372 1 351 3 131 3 362 3 124 3 101 3 
351 1 131 1 362 1 93 1 124 1 101 1 128 1 
345 1 351 1 139 1 131 1 362 1 124 1 101 1 171 1 128 1 
199 1 144 1 163 1 44 1 308 1 121 1 252 1 362 3 124 4 128 1 187 1 345 2 346 1 288 1 232 1 291 1 85 1 131 4 55 1 29 1 5 1 132 1 171 1 365 1 58 1 88 1 173 1 32 2 351 3 90 1 61 1 298 1 136 1 95 1 372 1 302 1 140 1 159 1 98 1 246 1 305 1 101 3 75 1 162 1 
199 1 351 1 372 1 131 2 362 1 248 1 124 2 101 2 378 1 
163 1 351 3 308 1 252 1 121 1 225 1 362 3 309 1 124 3 128 1 345 1 372 2 346 1 291 1 131 3 246 1 101 3 5 1 171 1 
366 1 351 2 362 2 124 2 342 1 345 1 372 1 131 2 101 2 171 1 
199 1 90 1 124 1 187 1 302 1 288 1 232 1 131 1 98 1 55 1 305 1 29 1 58 1 173 1 88 1 
199 1 90 1 124 1 301 1 302 1 288 1 167 1 232 1 131 1 98 1 305 1 29 1 58 1 173 1 88 1 
144 1 342 2 104 1 132 1 365 1 174 1 32 2 366 2 268 1 192 1 328 1 61 1 136 1 299 1 298 4 92 1 68 1 357 2 375 1 75 2 185 1 250 1 251 2 162 1 
200 1 351 1 131 1 362 1 246 1 124 1 101 1 128 1 
199 1 351 4 121 1 362 4 124 5 345 1 372 2 53 1 131 5 86 1 248 1 101 5 171 1 378 1 
200 1 351 2 131 2 362 2 93 1 124 2 101 2 128 1 
137 1 332 1 20 1 289 1 
332 1 20 1 377 1 
332 1 20 1 
332 1 20 1 
332 1 137 1 20 1 289 1 
332 1 137 1 20 1 289 1 
137 1 289 1 
332 1 20 1 220 1 
332 1 20 1 220 1 
332 1 20 1 220 1 
332 1 20 1 17 1 
332 1 20 1 17 1 
332 1 20 1 17 1 
20 2 308 2 252 2 46 3 36 1 309 1 52 2 344 1 127 1 315 1 332 2 39 2 150 1 322 1 304 2 153 1 4 1 280 2 42 2 
199 1 20 1 308 1 252 1 46 1 362 2 0 1 124 2 260 1 131 2 153 1 236 1 351 2 332 1 39 1 278 1 72 1 304 1 101 2 280 1 41 1 42 1 377 1 339 1 
198 2 336 1 226 2 358 1 66 1 
226 1 358 1 353 1 
226 1 353 1 66 1 
198 1 96 1 336 1 226 3 358 2 66 1 
198 1 317 1 336 1 226 2 358 1 66 1 
145 1 103 1 308 5 252 5 0 1 309 2 125 1 166 1 206 2 234 1 84 1 190 2 169 1 191 1 170 1 174 1 10 2 135 3 192 1 271 1 241 1 62 1 92 1 273 3 242 1 37 1 217 2 38 4 278 1 41 1 375 1 306 1 
308 2 38 2 252 2 207 1 73 1 265 1 31 1 
145 1 308 3 252 3 309 3 125 1 166 2 206 2 84 1 190 1 169 1 191 1 174 1 111 1 10 2 135 4 192 1 271 1 241 1 92 1 273 3 37 1 217 2 38 2 278 1 375 1 306 1 
145 1 345 1 54 1 190 1 191 1 111 1 10 2 351 1 192 1 241 1 300 1 74 1 160 1 306 1 308 3 252 3 362 1 309 3 124 1 125 1 128 1 166 2 206 2 84 1 131 1 169 1 174 1 135 4 271 1 92 1 273 3 93 1 37 1 217 2 95 1 38 2 278 2 101 1 375 1 143 1 
209 1 
22 1 321 1 29 1 
29 1 8 1 
302 1 29 1 
354 1 302 1 22 2 232 1 48 1 29 3 
302 1 232 1 29 1 
29 1 316 1 
174 1 240 1 268 3 269 1 328 2 295 1 298 7 64 1 126 1 264 1 335 2 231 1 28 1 189 1 182 1 357 4 75 3 375 1 
144 1 283 1 204 3 126 1 82 1 264 5 28 1 231 1 152 1 191 3 132 1 240 2 174 4 32 2 268 10 269 2 295 1 270 1 192 3 328 5 61 1 352 1 136 1 298 31 92 3 64 2 94 4 116 1 335 3 357 16 182 2 75 15 375 4 338 1 
144 2 283 1 224 1 148 1 126 1 264 1 28 1 132 2 174 1 240 1 32 4 268 4 269 1 328 3 295 1 61 2 136 2 298 9 64 1 335 2 357 5 182 1 375 1 75 4 
174 1 240 1 268 3 269 1 328 2 295 1 298 7 64 1 126 1 264 1 335 2 231 1 28 1 182 1 357 4 75 3 375 1 
174 1 240 1 268 3 269 1 328 2 295 1 298 7 64 1 126 1 264 1 335 2 231 1 28 1 182 1 357 4 75 3 375 1 
360 2 361 1 341 1 227 1 202 1 288 1 3 1 323 1 29 1 58 1 173 1 88 1 158 1 112 2 90 1 115 2 13 1 179 2 333 1 302 1 40 1 305 1 380 1 
18 1 360 1 361 1 165 1 341 1 49 1 226 2 130 1 288 1 173 1 88 1 112 1 90 1 353 1 115 1 13 1 66 1 275 1 179 1 333 1 117 1 180 1 218 1 96 1 358 1 305 1 
18 1 360 1 361 1 165 1 341 1 49 1 226 2 313 1 262 1 288 1 173 1 88 1 239 1 211 1 112 1 90 1 353 1 115 1 13 2 66 1 275 1 179 1 333 2 117 1 180 1 218 1 96 1 358 1 305 1 197 1 
18 1 360 1 361 1 165 1 341 1 226 2 313 1 130 1 288 1 173 1 88 1 239 1 112 1 211 2 90 1 353 1 115 1 13 3 66 1 275 1 179 1 333 3 117 1 180 1 96 1 40 1 358 1 305 1 100 1 197 1 
18 1 360 1 165 1 226 2 313 1 130 1 288 1 173 1 88 1 239 1 112 1 211 2 90 1 115 1 353 1 13 2 66 1 179 1 333 2 180 1 96 1 358 1 305 1 100 1 197 1 
369 1 
145 1 103 6 285 1 50 1 1 1 346 1 288 2 291 1 292 2 3 1 349 2 58 2 59 2 110 1 11 2 62 1 241 1 67 1 302 1 246 1 305 1 163 1 308 5 252 5 78 1 123 1 309 2 124 1 364 1 166 2 314 1 25 1 128 1 84 1 131 1 323 1 169 1 29 1 170 3 325 2 266 1 172 4 173 2 88 1 89 2 135 2 90 2 273 2 37 1 370 2 217 2 276 1 374 1 101 1 378 1 
59 1 163 1 103 2 308 3 252 3 78 1 296 1 123 1 50 1 124 1 128 1 25 1 276 1 346 1 291 1 131 1 246 1 170 1 101 1 378 1 172 2 266 1 
163 1 145 1 103 1 308 3 78 1 252 3 123 1 50 1 309 1 124 1 25 1 128 1 346 1 291 1 131 1 170 1 266 1 172 3 89 1 296 1 276 1 246 1 101 1 378 1 
163 1 145 1 308 3 103 2 78 1 252 3 123 1 50 1 309 1 124 1 25 1 128 1 346 1 291 1 131 1 170 1 325 1 266 1 172 3 59 1 89 1 296 1 276 1 246 1 101 1 378 1 
145 5 103 7 50 1 346 1 291 1 292 2 235 1 349 2 59 4 110 1 194 1 11 2 296 1 62 1 241 1 67 1 118 1 196 1 246 1 163 1 308 5 252 5 78 1 123 1 309 5 124 1 24 1 128 1 25 1 166 2 84 1 131 1 170 3 325 4 172 6 266 1 89 4 273 1 37 1 370 2 217 1 276 1 101 1 378 1 
145 1 103 4 50 1 346 1 291 1 292 2 349 2 59 2 110 1 11 2 62 1 241 1 67 1 246 1 163 1 308 4 252 4 78 1 123 1 309 2 124 1 128 1 25 1 166 2 84 1 131 1 170 2 325 2 172 4 266 1 89 2 135 2 273 1 37 1 370 2 217 1 276 1 374 1 101 1 378 1 
145 1 163 1 103 4 308 4 78 1 252 4 123 1 50 1 309 1 124 1 166 2 25 1 128 1 346 1 84 1 291 1 292 2 131 1 235 1 349 2 170 2 325 2 266 1 172 4 59 2 110 1 89 2 11 2 194 1 62 1 241 1 273 1 67 1 37 1 370 2 217 1 276 1 118 1 246 1 101 1 378 1 
145 1 163 1 103 4 308 4 78 1 252 4 123 1 50 1 309 1 124 1 166 2 25 1 128 1 346 1 84 1 291 1 292 2 131 1 235 1 349 2 170 2 325 2 266 1 172 4 59 2 110 1 89 2 11 2 194 1 62 1 241 1 273 1 67 1 37 1 370 2 217 1 276 1 118 1 246 1 101 1 378 1 
145 1 163 1 103 4 308 4 78 1 252 4 123 1 50 1 309 1 124 1 25 1 128 1 83 2 346 1 84 1 291 1 131 1 293 2 349 2 170 2 325 2 266 1 172 4 59 2 89 2 135 2 194 1 329 1 62 1 241 1 273 1 67 1 37 1 370 2 217 1 276 1 277 1 71 1 246 1 101 1 378 1 
145 1 163 1 308 4 103 5 78 1 252 4 123 1 50 1 309 1 124 1 24 1 166 2 25 1 128 1 346 1 84 1 291 1 292 2 131 1 235 1 349 2 170 2 325 3 266 1 172 5 59 3 110 1 89 3 11 2 194 1 241 1 62 1 273 1 67 1 37 1 370 2 217 1 276 1 118 1 246 1 101 1 378 1 
145 1 163 1 308 4 103 5 78 1 252 4 123 1 50 1 309 1 124 1 24 1 166 2 25 1 128 1 346 1 84 1 291 1 292 2 131 1 235 1 349 2 170 2 325 3 266 1 172 5 59 3 110 1 89 3 11 2 194 1 241 1 62 1 273 1 67 1 37 1 370 2 217 1 276 1 118 1 246 1 101 1 378 1 
145 1 103 4 50 1 346 1 291 1 293 2 349 2 59 2 62 1 241 1 67 1 246 1 163 1 308 4 252 4 78 1 123 1 309 1 124 1 128 1 25 1 83 2 84 1 131 1 170 2 325 2 172 4 266 1 89 2 135 2 329 1 273 1 37 1 370 2 217 1 276 1 374 1 101 1 378 1 
144 2 19 1 362 1 51 1 124 1 130 1 26 1 262 1 288 8 131 1 3 1 29 3 323 1 7 2 132 2 58 2 365 2 88 2 173 7 109 1 32 4 351 1 90 8 61 2 213 1 299 1 136 2 63 1 298 2 70 1 355 1 372 1 302 2 140 1 357 1 305 2 101 1 75 1 162 2 
144 1 164 1 362 1 124 1 342 1 345 1 131 1 191 1 171 1 132 1 365 1 174 1 366 1 32 2 268 1 351 1 328 1 192 1 61 1 136 1 92 1 298 3 303 1 357 1 101 1 375 1 75 2 251 1 162 1 
144 1 199 2 342 1 126 1 28 1 321 1 132 1 365 1 174 1 366 1 32 2 268 2 269 1 295 1 328 2 61 1 136 1 299 1 298 6 64 1 335 1 357 3 375 1 75 3 251 1 162 1 
199 1 144 2 164 1 342 11 204 3 79 1 264 1 191 2 132 2 350 1 87 1 365 1 174 1 32 4 366 4 268 2 175 1 328 1 270 1 192 1 352 1 61 2 213 1 136 2 298 14 92 2 94 3 140 1 357 8 75 6 375 2 251 11 162 2 
199 1 144 1 77 1 164 1 121 1 362 1 286 1 124 2 187 1 188 1 288 1 232 1 131 2 55 1 29 1 132 1 58 1 365 1 88 1 173 1 366 1 32 2 351 1 90 1 61 1 213 1 136 1 298 2 372 1 302 1 140 1 98 1 245 1 357 1 305 1 101 1 75 1 162 1 
144 3 47 1 342 7 187 2 288 3 232 2 106 2 107 2 55 2 191 2 58 1 351 1 295 1 192 2 61 3 298 20 64 1 302 2 159 2 357 10 305 2 75 10 251 7 161 1 162 3 199 2 121 1 164 1 362 1 257 2 124 3 126 1 130 1 264 4 28 1 131 3 29 2 132 3 365 3 173 3 88 2 174 3 32 6 366 7 268 8 269 1 328 4 90 3 213 1 136 3 92 2 34 2 138 1 372 1 335 1 140 1 98 2 101 1 375 3 
144 1 366 1 32 2 268 1 61 1 298 2 299 1 136 1 92 1 342 1 68 1 264 1 357 2 132 1 375 1 251 1 365 1 162 1 
144 1 174 1 366 1 32 2 268 1 328 1 192 1 61 1 298 2 299 1 136 1 342 1 132 1 75 2 251 1 365 1 250 1 162 1 
144 1 342 2 264 1 191 1 132 1 365 1 174 1 32 2 366 2 268 2 192 1 328 1 61 1 92 1 136 1 299 1 298 4 357 2 375 1 75 2 251 2 162 1 
144 1 366 1 32 2 268 1 61 1 298 2 63 1 136 1 92 1 342 1 68 1 264 1 357 2 132 1 375 1 251 1 365 1 162 1 
144 1 174 1 366 1 32 2 268 1 328 1 192 1 61 1 298 2 63 1 136 1 342 1 132 1 75 2 251 1 365 1 250 1 162 1 
144 1 342 2 264 1 191 1 132 1 365 1 174 1 32 2 366 2 268 2 192 1 328 1 61 1 92 1 136 1 63 1 298 4 357 2 375 1 75 2 251 2 162 1 
144 1 342 2 264 1 191 1 132 1 365 1 174 1 32 2 366 2 268 2 192 1 328 1 61 1 298 4 92 1 136 1 357 2 375 1 75 2 251 2 162 1 
199 1 144 1 124 1 187 1 288 1 232 1 131 1 55 1 29 1 132 1 58 1 365 1 88 1 173 1 32 2 90 1 61 1 213 1 298 2 136 1 302 1 140 1 159 1 357 1 98 1 305 1 75 1 162 1 
199 1 144 1 124 1 167 1 288 1 232 1 131 1 29 1 132 1 58 1 365 1 88 1 173 1 32 2 90 1 61 1 213 1 298 2 136 1 301 1 302 1 140 1 357 1 98 1 183 1 305 1 75 1 162 1 
144 1 164 1 342 2 264 1 191 1 132 1 365 1 174 1 32 2 366 2 268 2 192 1 328 1 61 1 92 1 136 1 298 4 357 2 375 1 75 2 251 2 162 1 
144 1 124 1 342 2 187 1 262 1 264 1 288 1 232 1 131 1 55 1 29 1 191 1 132 1 365 1 88 1 173 1 174 1 366 2 32 2 268 2 328 1 192 1 90 1 61 1 298 4 92 1 136 1 34 1 302 1 159 1 357 2 98 1 305 1 75 2 375 1 251 2 162 1 
144 1 164 1 362 1 124 1 342 1 345 1 264 1 131 1 191 1 171 1 132 1 57 1 365 1 174 1 32 2 366 1 268 1 351 1 192 1 61 1 136 1 92 1 298 3 357 2 101 1 75 1 375 1 251 1 162 1 
144 3 283 1 224 1 343 1 191 4 154 1 108 1 192 4 295 1 61 3 352 3 298 41 64 1 357 20 15 1 75 21 307 4 201 1 204 3 126 1 27 1 264 4 28 1 320 2 132 3 174 5 32 6 268 8 269 1 270 1 328 4 92 4 136 3 94 4 216 1 335 1 184 1 99 1 375 5 281 1 142 1 282 1 340 1 
283 2 144 4 224 1 201 1 204 3 343 1 126 1 27 1 264 3 28 1 320 2 154 1 191 4 132 4 108 1 174 4 32 8 268 7 269 1 295 1 328 4 270 1 192 3 352 3 61 4 136 4 298 38 92 4 64 1 94 4 216 1 335 1 357 20 99 1 184 1 15 1 75 18 375 5 281 1 142 1 282 1 340 1 307 4 
283 1 144 2 224 1 201 1 204 4 343 1 126 1 27 1 264 7 28 1 320 1 154 1 191 7 132 2 87 2 108 1 174 8 32 4 268 14 269 1 295 1 328 7 270 2 192 7 352 2 61 2 136 2 298 52 92 7 64 1 94 4 216 1 335 1 357 27 99 1 184 1 15 1 75 25 375 8 142 1 340 1 307 4 
144 2 224 1 204 1 343 1 264 1 320 1 154 1 191 2 132 2 174 2 32 4 268 2 328 1 270 1 192 2 352 1 61 2 136 2 298 13 92 2 94 2 216 1 244 1 357 6 75 7 375 2 281 1 142 1 307 1 
283 2 144 3 224 1 201 1 204 2 343 1 27 1 264 2 320 2 154 1 191 3 132 3 108 1 174 2 32 6 268 4 328 2 192 2 61 3 352 2 136 3 298 26 92 3 94 2 216 2 357 14 99 1 15 1 184 1 75 12 375 3 142 1 340 1 307 4 
284 1 332 1 20 1 39 1 322 1 304 1 36 1 4 1 280 1 42 1 
377 1 339 1 
134 1 332 1 20 1 39 1 304 1 23 1 280 1 376 1 42 1 
20 1 308 1 252 1 46 2 36 1 309 1 52 1 127 1 315 1 332 1 39 1 150 1 322 1 153 1 304 1 4 1 280 1 42 1 
20 1 308 1 252 1 46 2 36 1 309 1 52 1 127 1 315 1 332 1 39 1 150 1 322 1 153 1 304 1 4 1 280 1 42 1 
20 1 308 1 252 1 46 2 36 1 309 1 52 1 127 1 315 1 332 1 39 1 150 1 322 1 153 1 304 1 4 1 280 1 42 1 
371 1 290 1 220 1 
371 1 290 1 220 1 
297 1 17 1 
290 1 297 1 17 1 
260 1 236 1 
199 1 20 1 45 1 308 1 252 1 46 1 0 1 362 2 124 2 52 1 315 1 260 1 131 2 236 1 351 2 332 1 38 1 39 1 278 1 72 1 304 1 101 2 280 1 41 1 42 1 377 1 339 1 
371 1 220 1 
290 1 297 1 17 1 
144 1 19 1 164 1 51 1 124 2 149 1 288 2 131 2 29 1 56 1 7 2 132 1 365 1 88 1 173 2 32 2 90 2 113 1 61 1 213 1 12 1 136 1 298 2 368 1 302 1 140 1 357 1 305 1 101 2 75 1 162 1 
90 1 227 1 115 1 363 1 129 1 302 1 288 1 3 1 305 1 29 1 323 1 58 1 88 1 173 1 
18 1 90 1 165 1 226 2 353 1 115 1 363 1 66 1 215 1 275 1 130 1 96 1 288 1 337 1 358 1 305 1 173 1 88 1 
18 1 90 2 165 1 226 2 353 1 115 1 363 1 66 1 215 1 275 1 130 1 262 1 96 1 288 2 337 1 358 1 305 1 88 1 173 2 
18 1 90 1 165 1 226 2 353 1 115 1 66 1 275 1 130 1 96 1 288 1 337 1 358 1 305 1 173 1 379 1 88 1 
334 1 
145 1 62 1 241 1 273 1 309 1 37 1 217 1 287 1 84 1 102 1 
174 2 10 5 135 10 192 2 257 1 92 2 273 5 309 5 312 1 166 5 217 5 206 5 151 2 191 2 375 2 
145 1 308 1 103 1 252 1 309 1 170 1 
43 1 103 4 308 3 252 3 285 1 364 1 314 2 288 4 84 2 3 1 29 1 169 2 323 1 170 2 58 2 88 1 173 4 111 1 90 4 241 2 62 1 273 2 178 2 37 2 217 2 195 1 302 1 221 1 305 1 
217 1 145 1 287 1 321 1 273 1 309 1 102 1 
145 1 103 1 308 1 252 1 309 2 166 1 84 1 292 1 170 1 110 1 135 1 11 1 241 1 62 1 273 1 37 1 217 1 
145 2 103 5 287 1 105 2 288 3 151 2 232 3 348 2 8 3 191 2 58 1 156 2 10 6 192 2 62 4 241 4 354 1 302 3 305 4 163 2 308 5 252 5 22 2 257 2 309 8 312 2 314 1 166 6 205 1 316 2 206 6 262 1 84 4 169 2 29 10 170 3 30 1 88 3 173 3 174 2 135 12 90 3 367 1 272 2 92 2 273 9 178 1 214 2 37 4 217 8 219 2 221 1 375 2 102 1 
145 2 308 1 103 1 252 1 201 1 203 1 309 5 312 1 204 1 314 1 166 3 206 5 27 1 151 2 84 2 169 1 155 1 170 1 191 2 174 2 10 5 135 6 192 2 352 1 241 2 62 2 92 2 273 8 94 1 37 2 217 5 99 1 15 1 184 1 375 2 
308 1 252 1 362 1 124 1 312 1 128 1 126 1 345 1 54 1 151 2 84 1 131 1 174 1 351 1 269 1 114 1 241 1 62 1 64 1 273 2 93 1 37 1 217 2 95 1 300 1 118 1 101 1 375 2 
199 1 144 1 44 1 362 2 124 3 187 1 345 2 288 1 232 1 131 3 55 1 29 1 132 1 58 1 365 1 173 1 88 1 32 2 351 2 90 1 61 1 298 1 136 1 95 1 302 1 140 1 159 1 98 1 305 1 101 2 75 1 162 1 
145 2 10 2 135 4 62 1 241 1 273 1 309 4 166 2 37 1 314 1 206 2 217 2 335 1 84 1 169 1 
39 1 4 1 6 1 236 1 42 1 
39 1 256 1 42 1 
39 1 256 1 42 1 
39 1 256 1 42 1 
212 1 39 1 42 1 
212 1 39 1 42 1 
212 1 39 1 42 1 
39 1 42 1 
332 1 20 1 
144 1 224 1 204 1 126 1 28 1 132 1 174 1 32 2 268 2 269 1 295 1 328 2 352 1 61 1 298 8 136 1 64 1 94 1 335 1 357 4 15 1 375 1 75 4 
144 2 224 1 204 1 126 1 264 1 28 1 191 1 132 2 326 1 174 1 32 4 268 3 269 1 328 2 295 1 270 1 352 1 61 2 298 11 136 2 92 1 64 1 94 2 335 1 357 6 15 1 75 5 375 2 
144 3 283 1 224 1 201 1 204 1 126 1 27 1 264 1 28 1 191 2 132 3 326 1 174 3 32 6 268 4 269 1 295 1 192 2 328 3 352 1 61 3 298 19 136 3 92 2 64 1 94 1 335 1 357 9 15 1 184 1 99 1 75 10 375 3 
283 1 144 3 224 1 201 1 204 1 126 1 27 1 264 2 28 1 191 2 132 3 326 1 174 2 32 6 268 5 269 1 295 1 192 1 328 3 352 1 61 3 298 17 136 3 92 2 64 1 94 1 335 1 357 10 15 1 184 1 99 1 75 7 375 3 
144 1 224 1 204 1 126 1 28 1 132 1 174 1 32 2 268 2 269 1 295 1 328 2 352 1 61 1 298 8 136 1 64 1 94 1 335 1 357 4 15 1 375 1 75 4 
144 1 224 1 201 1 204 1 27 1 264 1 191 2 132 1 174 2 32 2 268 2 192 2 328 1 352 1 61 1 298 12 136 1 92 2 94 1 357 6 15 1 184 1 99 1 75 6 375 2 
144 4 283 2 224 1 201 1 204 1 126 1 27 1 264 2 28 1 191 2 132 4 326 1 174 2 32 8 268 5 269 1 295 1 192 1 328 3 352 1 61 4 298 18 136 4 92 2 64 1 94 1 335 1 357 10 99 1 15 1 184 1 75 8 375 3 
144 4 283 2 224 1 201 1 204 1 27 1 264 3 191 3 132 4 174 2 32 8 268 6 192 2 328 3 352 1 61 4 298 16 136 4 92 3 94 1 357 9 99 1 15 1 184 1 75 7 375 3 281 1 
174 1 268 6 269 3 295 2 328 3 298 7 64 3 126 1 264 3 28 1 357 3 75 4 375 1 
144 4 283 2 224 1 201 1 204 1 126 1 27 1 264 1 28 1 191 2 132 4 174 2 32 8 268 4 269 1 295 1 192 1 328 3 352 1 61 4 298 18 136 4 92 2 64 1 94 1 335 1 357 10 99 1 15 1 184 1 75 8 375 3 281 1 
144 1 174 2 32 2 268 5 269 2 224 1 328 3 61 1 114 1 136 1 298 10 64 2 126 1 264 2 357 5 132 1 75 5 375 2 
144 1 32 2 268 1 224 1 61 1 136 1 92 1 298 2 264 1 357 2 132 1 375 1 
174 1 144 1 32 2 268 2 328 1 192 1 224 1 61 1 136 1 92 1 298 4 264 1 357 2 191 1 75 2 132 1 375 1 
283 1 144 3 32 6 268 2 269 1 224 1 328 1 61 3 298 3 136 3 64 1 264 1 119 1 357 1 75 2 132 3 281 1 
283 2 144 5 224 1 204 3 126 2 82 1 264 5 28 1 152 1 191 3 132 5 326 1 174 5 32 10 268 12 269 3 295 1 270 1 192 3 328 7 352 1 61 5 136 5 298 34 92 3 64 3 94 4 116 1 335 1 119 1 357 16 75 18 375 5 281 1 
174 1 144 2 283 1 32 4 268 3 269 1 328 2 295 1 61 2 298 8 136 2 64 1 126 1 264 1 335 1 28 1 357 4 375 1 75 4 132 2 
174 1 268 2 269 1 295 1 328 2 298 6 64 1 126 1 335 1 28 1 321 1 357 3 75 3 375 1 
174 1 144 1 32 2 268 2 328 1 192 1 61 1 136 1 92 1 298 4 264 1 357 2 191 1 75 2 132 1 375 1 326 1 
174 1 268 2 328 1 192 1 270 1 352 1 298 7 92 1 204 1 94 2 264 1 357 3 191 1 75 4 375 1 
283 2 144 2 204 2 79 1 126 1 264 4 28 1 191 2 132 2 87 1 174 3 32 4 268 9 269 2 295 1 270 1 192 2 328 5 61 2 92 2 298 23 136 2 64 2 94 2 335 1 119 1 357 11 375 3 75 12 
298 1 75 1 94 1 
298 1 357 1 204 1 
144 1 174 1 32 2 268 3 192 1 328 2 61 1 136 1 257 1 298 6 92 1 264 1 357 3 191 1 132 1 75 3 375 1 326 1 
144 1 224 1 201 1 204 1 27 1 264 1 191 2 132 1 174 2 32 2 268 2 192 2 328 1 352 1 61 1 298 12 136 1 92 2 94 1 357 6 15 1 184 1 99 1 75 6 375 2 
174 1 268 2 269 1 328 1 298 6 64 1 126 1 264 1 357 3 375 1 75 3 
283 1 144 1 32 2 268 2 269 1 328 1 295 1 61 1 298 3 136 1 64 1 264 1 28 1 119 1 357 1 75 2 132 1 
199 1 131 1 124 1 101 1 248 1 378 1 9 1 
199 1 229 1 122 1 131 1 124 1 101 1 248 1 141 1 249 1 378 1 80 1 9 1 
90 4 262 1 302 1 288 4 3 1 305 1 323 1 29 1 279 1 238 1 58 1 173 4 88 1 
90 2 177 1 178 1 318 1 181 1 138 1 302 1 288 2 232 1 29 1 305 2 133 1 173 2 88 1 
18 1 90 1 288 1 226 1 353 1 305 1 66 1 58 1 88 1 173 1 
149 1 130 1 262 1 19 1 302 1 90 2 288 2 305 1 29 1 88 1 173 2 
19 1 90 5 178 1 262 1 26 1 355 1 302 2 288 5 3 1 323 1 29 3 305 2 279 1 58 1 173 4 88 2 
19 1 90 5 176 1 178 1 262 1 355 1 302 2 288 5 3 1 323 1 29 3 305 2 279 1 58 1 173 4 88 2 
302 1 90 1 288 1 3 1 321 1 305 1 29 1 323 1 58 1 88 1 173 1 
199 1 351 1 90 1 362 1 124 2 187 1 372 1 302 1 288 1 232 1 131 2 98 1 29 1 305 1 101 1 58 1 173 1 88 1 
199 1 351 2 90 1 362 1 178 1 124 2 128 1 187 1 316 1 372 1 346 1 302 2 288 1 232 2 131 2 98 1 246 1 29 3 305 1 101 2 156 1 173 1 88 1 
199 1 351 2 90 2 362 1 178 1 124 2 128 1 316 1 372 1 301 1 346 1 302 2 288 2 232 2 131 2 98 1 246 1 29 3 305 1 101 2 238 1 156 1 173 2 88 1 
145 1 163 1 21 1 308 2 103 1 252 2 90 3 22 1 259 1 309 1 178 1 316 1 302 1 288 3 232 1 305 1 29 4 8 1 238 1 58 1 156 1 173 3 88 1 
145 1 163 1 308 2 103 1 252 2 90 3 22 1 309 1 178 1 214 1 316 1 302 1 288 3 232 1 305 1 29 4 8 1 238 1 58 1 156 1 173 3 88 1 
109 1 90 1 288 1 305 1 88 1 173 1 
109 1 19 1 90 7 223 1 70 1 354 1 130 1 355 1 26 1 262 1 181 1 302 2 288 7 232 1 29 3 305 3 7 1 133 1 58 2 173 6 88 2 
144 2 342 1 187 1 288 1 232 1 106 1 55 1 351 1 295 1 61 2 298 6 64 1 302 1 159 1 357 3 305 1 75 3 251 1 162 2 199 2 164 1 362 1 124 2 126 1 262 1 28 1 131 2 29 1 132 2 365 2 173 1 88 1 174 1 366 1 32 4 268 2 269 1 90 1 328 2 136 2 34 1 368 1 372 1 335 1 98 1 101 1 375 1 
145 1 163 1 308 3 103 2 252 3 22 1 309 1 287 1 105 1 288 1 84 2 29 2 8 1 170 1 58 1 173 1 90 1 241 2 62 2 272 1 273 1 214 1 37 2 217 1 38 1 219 1 221 1 102 1 
109 1 90 2 22 1 205 1 354 1 262 1 302 1 288 2 232 1 29 2 305 2 173 2 88 1 
199 1 351 1 90 1 362 1 124 2 372 1 301 1 302 1 288 1 232 1 131 2 98 1 29 1 305 1 101 1 58 1 173 1 88 1 
90 1 223 1 178 1 354 1 181 1 302 1 288 1 232 1 29 1 305 2 133 1 173 1 88 1 
199 1 267 1 330 1 35 1 327 1 
199 1 267 2 145 1 163 1 308 2 252 2 330 2 258 1 309 1 35 2 128 1 263 1 346 1 38 1 291 1 246 1 5 1 327 1 359 1 
113 1 330 1 12 1 35 1 124 1 131 1 56 1 101 1 327 1 
263 1 359 1 327 1 
239 1 333 1 218 1 361 1 341 1 313 1 13 1 197 1 
239 2 211 2 361 1 341 1 228 1 313 2 13 4 331 1 2 1 333 4 373 1 356 1 168 1 197 3 
239 1 210 1 333 2 211 1 218 1 361 1 341 1 313 1 13 2 197 1 120 1 69 1 
239 1 361 1 341 1 13 3 313 1 2 2 331 2 333 3 218 1 356 1 233 1 197 1 
319 1 186 2 147 1 197 2 
333 1 218 1 361 1 341 1 311 1 13 1 
239 1 261 1 333 2 211 1 218 1 361 1 341 1 313 1 13 2 197 1 
247 1 
239 1 333 1 218 1 361 1 341 1 313 1 13 1 197 1 
239 1 321 1 313 1 197 1 
239 1 333 1 361 1 341 1 313 1 13 1 197 1 
360 1 13 1 179 1 
239 1 361 1 341 1 13 3 313 1 2 1 331 2 230 1 333 3 218 1 356 1 197 1 
239 1 333 2 211 1 361 1 341 1 310 1 313 1 13 2 197 1 
361 1 341 1 146 1 226 1 353 1 13 1 333 1 218 1 168 1 358 1 197 1 
239 1 333 1 218 1 361 1 341 1 13 1 197 1 
239 2 333 1 218 1 361 1 341 1 313 1 13 1 
239 1 361 2 341 2 65 1 13 2 274 1 333 2 97 1 218 1 197 1 
239 1 157 1 211 2 361 1 341 1 313 1 13 3 261 1 333 3 373 1 218 1 168 1 197 2 
239 1 211 1 361 1 341 1 33 1 226 2 353 1 313 1 66 1 13 2 333 2 218 1 96 1 358 1 197 1 
239 1 211 2 361 2 341 2 310 1 313 1 13 4 333 4 373 1 218 1 168 1 16 1 197 2 
239 1 211 1 361 1 341 1 13 3 313 1 331 1 261 1 333 3 218 1 197 1 
373 1 228 1 168 1 197 1 
239 1 197 1 

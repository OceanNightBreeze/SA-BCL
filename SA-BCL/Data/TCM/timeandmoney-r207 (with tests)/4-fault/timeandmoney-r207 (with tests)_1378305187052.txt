#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.StringIndexOutOfBoundsException 18 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.StringIndexOutOfBoundsException 18 303 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 1
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1132 | stmt -> ;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | STATEMENT | 1232 | stmt -> ;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1146 | 1 -> -1
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
210 1 255 2 58 1 352 1 214 2 325 3 280 1 145 1 9 4 258 1 128 1 192 1 240 2 334 1 43 2 362 1 46 2 244 9 246 1 199 1 134 2 203 1 267 9 138 2 20 1 96 6 160 5 345 1 
210 1 255 2 58 1 352 1 214 2 325 3 280 1 145 1 9 4 258 1 128 1 192 1 240 2 334 1 43 2 362 1 46 2 244 9 246 1 199 1 134 2 203 1 267 9 138 2 20 1 96 6 160 5 345 1 
210 1 255 2 58 1 352 1 214 2 325 4 280 1 145 1 9 5 258 1 128 1 192 1 240 2 334 1 43 2 362 1 46 2 244 10 246 1 199 1 134 2 203 1 267 10 138 2 20 1 96 7 160 6 345 1 
210 1 255 2 58 1 352 1 214 2 325 2 280 1 145 1 9 3 258 1 192 1 240 2 334 1 43 1 362 1 46 2 244 7 246 1 199 1 134 2 203 1 267 7 138 2 20 1 96 4 160 4 345 1 
334 1 43 2 210 1 46 1 244 4 58 1 199 1 325 1 214 1 134 1 267 4 138 1 9 2 96 3 160 3 128 1 192 1 240 1 
334 1 46 1 265 1 255 1 244 2 199 1 214 1 145 1 267 2 138 1 20 1 160 1 86 1 192 1 141 1 240 1 
334 1 46 2 255 1 244 3 246 1 199 1 214 2 325 1 267 3 9 1 96 1 160 2 192 1 
253 1 210 1 255 1 58 1 352 1 325 3 214 2 280 1 9 4 13 1 128 1 192 1 240 1 334 1 43 2 46 2 244 9 246 1 199 1 134 1 267 9 138 1 96 7 160 5 
253 1 210 1 255 1 58 1 352 1 325 3 214 2 280 1 9 4 13 1 128 1 192 1 240 1 334 1 43 2 46 2 244 9 246 1 199 1 134 1 267 9 138 1 96 7 160 5 
346 1 227 1 218 1 
125 1 364 2 227 1 
340 2 289 2 328 1 291 2 335 2 338 2 381 1 158 2 
161 1 0 1 276 1 278 1 144 1 281 1 62 2 328 1 83 2 283 1 191 1 67 1 87 1 332 2 242 1 289 2 243 1 291 2 335 2 196 1 45 2 171 1 293 1 338 3 154 1 158 3 340 2 200 1 223 1 247 1 318 1 118 2 250 1 77 1 381 1 344 1 228 1 
74 1 340 1 289 1 291 1 335 1 122 1 236 1 338 1 381 1 158 1 
289 1 122 1 311 1 163 1 222 1 338 1 153 1 158 1 137 1 355 1 52 1 227 1 218 1 193 1 
289 1 335 1 291 1 122 1 311 1 163 1 222 1 338 1 153 1 158 1 340 1 355 2 52 2 227 1 218 1 
266 1 355 1 312 1 216 1 52 1 
266 1 355 2 146 1 216 1 52 2 300 1 227 1 218 1 
266 1 355 1 52 1 
289 1 335 1 291 1 122 1 338 1 158 1 74 1 340 1 355 1 216 1 236 1 52 1 207 1 381 1 
227 1 
266 1 355 2 216 1 52 2 300 1 140 1 227 1 218 1 
322 2 122 1 324 2 165 2 29 2 355 5 167 1 358 1 64 5 216 2 236 1 41 1 330 1 218 2 289 1 365 1 309 1 291 1 335 1 44 2 336 1 112 1 89 1 338 1 158 1 373 4 74 1 340 1 266 2 201 2 90 1 91 1 297 1 52 5 207 1 300 1 381 1 227 2 
346 1 328 1 
289 2 335 1 291 1 338 2 158 2 340 1 294 1 328 2 380 1 
361 1 1 1 37 1 
332 1 242 1 243 1 196 1 171 1 293 1 338 1 157 1 158 1 200 1 62 1 328 1 318 1 118 1 250 1 87 1 
289 5 335 4 291 4 211 1 221 1 338 5 158 5 213 2 340 1 137 1 116 1 294 1 328 1 296 1 
74 1 289 2 291 2 335 2 122 1 217 1 338 2 158 2 
332 1 242 1 289 1 243 1 196 1 335 1 291 1 171 1 221 1 293 1 338 2 158 2 200 1 213 1 62 1 318 1 118 1 250 1 37 1 87 1 
340 1 213 1 289 3 328 1 291 3 335 3 338 3 158 3 
74 1 289 1 291 1 335 1 122 1 338 1 158 1 
340 1 289 1 294 1 291 1 335 1 122 1 380 1 338 1 158 1 
0 1 276 1 122 1 278 1 163 1 144 1 213 1 281 1 31 1 355 1 62 1 328 1 83 2 283 1 191 1 67 1 87 1 332 1 242 1 289 3 243 1 196 1 291 3 335 3 311 1 45 1 171 1 221 1 222 1 293 1 338 4 154 1 153 1 158 4 200 1 340 2 294 1 223 1 318 1 118 1 250 1 343 1 52 1 381 1 
213 1 137 1 289 2 328 1 291 1 335 1 296 1 338 2 158 2 
289 3 335 3 291 3 122 1 311 1 163 1 221 1 222 1 338 3 153 1 158 3 340 1 213 2 294 1 355 1 185 1 343 1 52 1 227 1 
361 1 289 2 335 2 291 2 338 2 158 2 213 1 340 1 294 1 37 1 
332 1 242 1 243 1 196 1 171 1 293 1 338 1 158 1 200 1 62 1 328 1 318 1 118 1 250 1 87 1 
332 1 243 1 196 1 171 1 293 1 338 1 158 1 200 1 62 1 328 1 318 1 118 1 270 1 12 1 87 1 
162 1 0 1 55 1 276 2 278 1 1 2 324 1 165 1 144 1 281 1 232 1 83 2 283 1 37 2 191 1 286 1 308 1 361 2 45 4 370 1 202 1 75 1 77 2 78 1 
289 1 291 1 335 1 122 1 217 1 222 1 338 1 158 1 
136 1 126 1 
136 1 126 1 
326 1 21 1 
326 1 21 1 
326 1 21 1 
136 1 126 1 219 1 
136 1 126 1 219 1 
135 1 136 1 126 1 
326 1 136 2 98 1 126 2 21 1 97 1 
136 1 126 1 219 1 
136 1 126 1 51 1 
136 1 126 1 51 1 
136 1 126 1 51 1 
56 1 2 1 3 1 5 1 355 1 166 1 328 1 126 1 168 1 235 1 36 1 39 1 289 2 16 1 291 2 335 2 338 2 158 2 135 1 136 1 249 1 379 1 176 1 52 1 
169 2 98 1 26 1 366 1 5 2 136 2 355 2 65 1 126 2 249 2 188 1 36 2 235 2 379 3 52 2 39 1 285 1 120 1 227 1 
134 1 138 1 240 1 
138 1 86 1 240 1 
134 2 290 1 359 1 349 1 86 1 240 3 
134 1 290 1 76 1 359 1 86 1 240 2 
134 1 290 1 359 2 86 1 240 2 
322 1 82 2 56 1 2 1 324 1 165 1 29 1 256 2 125 1 355 5 358 1 168 1 64 2 35 1 216 4 190 1 107 1 308 1 218 1 364 3 262 2 152 1 198 1 370 1 155 1 115 1 373 3 201 1 266 1 52 5 300 1 227 2 
252 1 322 2 82 6 56 4 324 3 165 3 29 2 125 3 355 9 356 1 358 1 64 6 216 7 190 1 107 2 308 3 218 1 241 1 220 1 364 9 262 6 312 5 152 3 370 3 156 1 155 2 373 8 375 1 266 6 374 5 201 2 91 1 52 9 300 1 227 5 
322 1 82 2 56 1 324 1 165 1 29 1 256 1 125 2 355 3 64 2 35 1 216 2 107 1 308 1 218 1 364 4 262 2 198 1 152 1 370 1 155 1 373 3 201 1 91 1 52 3 227 3 
322 1 82 4 56 2 324 2 165 2 29 1 256 2 125 3 355 4 64 4 35 1 216 3 107 1 308 2 218 1 241 1 220 1 364 7 262 4 198 1 152 2 370 2 155 1 373 5 375 1 201 1 91 1 52 4 227 4 
287 1 346 1 293 1 
187 1 293 1 
268 1 
171 1 293 1 87 1 
101 1 293 1 
171 1 293 1 
287 2 69 1 376 1 171 1 293 3 87 1 
331 1 209 1 365 1 100 1 276 3 45 7 324 1 123 1 165 1 202 3 167 1 93 2 75 2 104 1 22 1 77 4 41 1 
331 1 209 1 365 1 100 1 276 3 45 7 324 1 123 1 165 1 202 3 167 1 93 2 75 2 104 1 22 1 77 4 41 1 
331 1 209 1 365 1 100 1 276 3 45 7 324 1 123 1 165 1 202 3 167 1 357 1 93 2 75 2 104 1 22 1 77 4 41 1 
208 1 209 1 0 1 100 1 276 15 123 2 324 4 165 4 143 1 144 1 167 2 83 2 63 1 104 2 283 1 284 3 84 1 191 1 41 1 308 3 331 1 365 2 151 1 45 31 172 1 152 3 370 3 72 4 202 10 159 1 93 3 75 5 22 5 77 16 
209 1 0 2 323 1 276 4 324 1 4 1 123 1 165 1 144 2 167 1 83 4 63 1 104 1 283 2 191 2 41 1 331 1 365 1 45 9 202 4 93 2 75 3 22 1 77 5 
28 1 255 1 349 1 214 1 62 1 86 1 239 1 192 1 42 1 240 2 332 1 334 1 148 1 196 1 170 1 46 1 244 2 48 1 199 1 134 1 200 1 267 2 138 1 319 1 248 1 118 1 119 1 96 1 160 1 299 1 
28 1 255 1 349 1 214 1 62 1 86 1 360 1 42 1 240 2 332 1 334 1 148 1 310 1 196 1 170 1 46 1 244 3 48 1 337 1 199 1 134 1 200 1 267 3 138 1 319 1 248 1 118 1 119 1 96 2 160 1 
28 1 255 1 349 1 62 1 86 1 240 2 332 1 334 1 148 1 310 1 196 1 170 1 244 2 48 1 337 1 199 1 200 1 134 1 267 2 138 1 319 1 118 1 119 1 96 2 160 1 
80 1 28 2 255 2 214 1 62 1 186 1 360 1 332 1 363 1 243 1 263 1 196 1 171 1 46 1 244 1 293 1 48 2 71 1 113 1 200 1 267 1 319 2 118 1 
28 1 255 1 349 1 214 1 62 1 86 1 239 1 192 1 42 1 240 2 332 1 148 1 196 1 170 1 46 1 244 1 48 1 337 1 134 1 200 1 267 1 138 1 319 1 248 1 118 1 119 1 
149 1 
322 1 277 2 183 2 62 2 64 2 282 1 237 1 107 1 193 1 332 2 111 1 289 1 150 1 243 2 196 1 292 2 17 4 293 1 338 1 113 1 153 1 158 1 201 1 200 1 341 1 118 2 298 2 300 3 254 1 122 1 212 1 163 1 29 1 125 2 355 5 358 1 215 1 259 1 307 2 218 1 260 1 364 2 363 1 88 1 311 1 171 1 313 2 222 1 174 2 373 2 266 6 137 1 52 5 177 1 227 2 
150 1 111 1 289 1 122 1 212 1 311 1 163 1 313 1 17 2 222 1 338 1 153 1 158 1 266 2 355 3 137 1 282 1 52 3 259 1 300 1 140 1 193 1 
150 1 111 1 289 1 122 1 277 1 212 1 311 1 163 1 17 3 222 1 338 1 153 1 158 1 266 1 355 3 137 1 282 1 52 3 259 1 300 1 140 1 227 1 218 1 193 1 
122 1 212 1 277 1 163 1 183 1 355 3 282 1 259 1 193 1 218 1 289 1 111 1 150 1 311 1 17 3 313 1 222 1 338 1 153 1 158 1 266 2 137 1 52 3 300 1 140 1 227 1 
322 1 277 4 6 1 183 4 64 1 282 1 237 1 193 1 70 1 150 1 111 1 289 1 288 1 17 6 292 2 338 1 153 1 158 1 201 1 341 1 298 2 300 3 122 1 212 1 163 1 29 1 30 1 125 2 355 5 358 1 259 1 307 2 218 5 311 1 313 4 368 1 222 1 373 1 174 2 266 7 137 1 52 5 140 1 227 5 
322 1 277 2 183 2 64 1 282 1 237 1 193 1 150 1 289 1 111 1 17 4 292 2 338 1 153 1 158 1 201 1 341 1 298 2 300 2 122 1 212 1 163 1 29 1 125 2 355 4 358 1 259 1 307 2 218 1 364 2 88 1 311 1 313 2 222 1 373 1 174 2 266 4 137 1 52 4 227 2 
322 1 122 1 277 2 212 1 163 1 29 1 30 1 183 2 125 2 355 4 358 1 64 1 282 1 237 1 259 1 307 2 218 1 193 1 70 1 289 1 111 1 150 1 311 1 313 2 292 2 17 4 368 1 222 1 338 1 153 1 174 2 373 1 158 1 266 4 201 1 137 1 341 1 298 2 52 4 300 2 227 1 
322 1 122 1 277 2 212 1 163 1 29 1 30 1 183 2 125 2 355 4 358 1 64 1 282 1 237 1 259 1 307 2 218 1 193 1 70 1 289 1 111 1 150 1 311 1 313 2 292 2 17 4 368 1 222 1 338 1 153 1 174 2 373 1 158 1 266 4 201 1 137 1 341 1 298 2 52 4 300 2 227 1 
322 1 122 1 277 2 102 2 212 1 163 1 29 1 30 1 183 2 59 1 355 4 358 1 64 1 282 1 305 1 259 1 218 1 68 2 193 1 364 2 289 1 111 1 150 1 311 1 313 2 17 4 222 1 338 1 153 1 174 2 373 1 158 1 266 4 201 1 137 1 295 1 341 1 298 2 52 4 300 2 227 1 
322 1 122 1 212 1 277 3 163 1 29 1 30 1 183 3 125 2 355 4 358 1 64 1 282 1 237 1 259 1 307 2 218 1 193 1 70 1 289 1 111 1 150 1 288 1 311 1 292 2 17 5 313 3 368 1 222 1 338 1 153 1 174 2 373 1 158 1 201 1 266 5 137 1 341 1 298 2 52 4 300 2 227 1 
322 1 122 1 212 1 277 3 163 1 29 1 30 1 183 3 125 2 355 4 358 1 64 1 282 1 237 1 259 1 307 2 218 1 193 1 70 1 289 1 111 1 150 1 288 1 311 1 292 2 17 5 313 3 368 1 222 1 338 1 153 1 174 2 373 1 158 1 201 1 266 5 137 1 341 1 298 2 52 4 300 2 227 1 
322 1 102 2 277 2 183 2 64 1 282 1 193 1 68 2 150 1 289 1 111 1 17 4 338 1 153 1 158 1 201 1 295 1 341 1 298 2 300 2 122 1 212 1 163 1 29 1 355 4 358 1 259 1 218 1 364 2 88 1 311 1 313 2 222 1 373 1 174 2 266 4 137 1 52 4 227 1 
209 1 346 1 0 1 276 3 278 1 1 1 324 1 165 1 144 1 281 1 167 1 328 2 83 2 283 1 37 1 191 1 286 1 41 1 361 1 331 1 365 1 45 6 202 2 93 1 75 2 77 3 
0 2 276 6 278 1 1 11 324 2 165 1 144 2 281 2 328 1 83 4 283 2 284 3 37 11 84 1 191 2 109 1 308 2 361 4 45 14 369 1 152 2 370 1 154 1 72 3 202 2 247 1 159 1 75 1 22 1 271 1 77 8 301 1 320 1 
0 1 276 1 278 1 144 1 213 1 281 1 62 1 328 1 83 2 283 1 191 1 87 1 332 1 361 1 242 1 289 1 243 1 196 1 291 1 335 1 171 1 45 2 221 1 293 1 338 2 154 1 157 1 158 2 200 1 224 1 117 1 247 1 318 1 118 1 250 1 77 1 301 1 54 1 
0 3 276 10 278 3 1 7 324 3 144 3 281 3 62 3 184 2 328 2 283 3 191 3 67 2 331 1 332 3 242 2 289 1 243 1 335 1 291 1 196 2 152 2 293 2 337 1 338 3 154 1 114 1 158 3 200 2 202 8 247 1 118 3 75 4 250 2 22 4 77 10 301 1 23 2 209 1 302 2 347 2 165 3 350 1 213 1 167 1 83 6 37 7 41 1 308 2 87 2 361 7 365 1 45 20 171 2 221 1 370 2 318 2 93 1 269 1 
0 2 276 1 278 2 144 2 281 2 327 1 62 7 283 2 189 1 11 1 191 2 108 1 286 1 332 6 195 1 110 1 289 1 243 2 196 3 335 1 291 1 293 4 338 1 337 1 113 1 154 1 158 1 200 4 247 1 118 7 77 1 79 1 344 2 124 1 213 1 304 1 83 4 87 1 363 1 171 3 45 2 50 1 378 1 
0 1 276 2 1 1 278 1 324 1 165 1 144 1 279 1 281 1 83 2 283 1 37 1 191 1 308 1 361 1 289 1 335 1 291 1 45 3 152 1 370 1 338 1 158 1 202 1 340 1 294 1 75 1 77 1 301 1 
361 1 162 1 0 1 1 1 45 2 278 1 324 1 144 1 202 1 281 1 83 2 283 1 37 1 22 1 191 1 77 2 286 1 308 1 
361 1 0 1 55 1 276 2 1 1 45 2 278 1 370 1 165 1 144 1 202 1 281 1 83 2 75 1 283 1 37 1 191 1 286 1 
0 1 276 2 278 1 1 2 324 1 165 1 144 1 281 1 83 2 283 1 37 2 191 1 308 1 286 1 361 2 45 4 152 1 370 1 202 2 75 1 22 1 77 2 
361 1 162 1 0 1 1 1 45 2 278 1 324 1 144 1 202 1 281 1 83 2 283 1 37 1 22 1 11 1 191 1 77 2 308 1 
361 1 0 1 55 1 276 2 1 1 45 2 278 1 370 1 165 1 144 1 202 1 281 1 83 2 75 1 283 1 37 1 11 1 191 1 
0 1 276 2 278 1 1 2 324 1 165 1 144 1 281 1 83 2 283 1 37 2 11 1 191 1 308 1 361 2 45 4 152 1 370 1 202 2 75 1 22 1 77 2 
0 1 276 2 278 1 1 2 324 1 165 1 144 1 281 1 83 2 283 1 37 2 191 1 308 1 361 2 45 4 152 1 370 1 202 2 75 1 22 1 77 2 
0 1 276 1 278 1 144 1 281 1 62 1 328 1 83 2 283 1 191 1 67 1 87 1 332 1 242 1 243 1 196 1 45 2 171 1 293 1 338 1 154 1 158 1 200 1 247 1 318 1 118 1 250 1 77 1 
0 1 276 1 278 1 144 1 281 1 62 1 328 1 83 2 66 1 283 1 12 1 191 1 87 1 332 1 243 1 196 1 45 2 171 1 293 1 338 1 154 1 158 1 200 1 247 1 318 1 118 1 270 1 77 1 
0 1 276 2 278 1 1 2 324 1 165 1 144 1 281 1 83 2 283 1 37 2 191 1 308 1 361 2 45 4 152 1 370 1 202 2 75 1 22 1 77 2 301 1 
0 1 302 1 276 2 1 2 278 1 324 1 165 1 144 1 281 1 62 1 83 2 283 1 37 2 191 1 308 1 67 1 87 1 361 2 332 1 242 1 196 1 45 4 171 1 152 1 370 1 293 1 338 1 158 1 202 2 200 1 318 1 118 1 75 1 250 1 22 1 299 1 77 2 
0 1 276 1 278 1 1 1 324 1 165 1 144 1 281 1 83 2 283 1 37 1 191 1 308 1 361 1 289 1 335 1 291 1 45 3 152 1 370 1 314 1 338 1 158 1 202 1 340 1 294 1 22 1 77 2 301 1 
25 2 0 2 81 1 276 10 164 2 4 1 324 3 165 3 144 2 234 1 83 4 283 2 284 1 84 1 191 2 308 3 130 1 197 1 45 19 152 3 370 3 339 1 315 1 72 2 202 6 159 1 75 3 205 1 22 3 77 9 
25 4 0 3 81 1 99 1 276 12 164 1 230 1 4 1 324 3 182 1 165 2 144 3 63 2 234 2 83 6 283 3 284 2 191 3 308 3 130 1 45 26 367 1 152 3 370 2 339 1 315 2 317 1 72 2 202 4 377 1 159 2 75 2 22 2 77 14 
0 3 99 1 276 21 230 1 324 5 4 1 182 1 144 3 234 1 63 1 10 1 284 3 283 3 191 3 331 1 152 4 339 1 72 4 202 8 159 3 75 4 205 1 22 4 77 20 25 4 209 1 81 1 164 1 165 5 167 1 83 6 84 1 308 4 41 1 130 1 365 1 45 41 367 1 370 4 315 2 317 1 377 1 93 1 
209 1 25 4 0 4 99 1 81 1 276 18 164 1 230 1 4 1 324 5 182 1 165 4 144 4 167 1 63 2 234 1 83 8 10 1 283 4 284 3 84 1 191 4 41 1 308 4 331 1 365 1 130 1 367 1 45 38 152 4 370 3 339 1 315 2 317 1 72 4 202 7 377 1 93 1 159 3 75 4 205 1 22 3 77 20 
209 1 25 4 0 2 99 1 81 1 276 25 164 1 230 1 4 1 324 8 182 1 165 8 144 2 167 1 63 1 234 1 83 4 283 2 284 4 84 2 191 2 41 1 308 7 331 1 365 1 130 1 367 1 45 52 152 7 370 7 339 1 315 1 317 1 72 4 202 14 377 1 93 1 159 2 75 7 22 7 77 27 320 2 
179 1 136 1 98 1 366 1 126 1 249 1 235 1 36 1 5 1 120 1 
135 1 3 1 
73 1 136 1 126 1 249 1 235 1 36 1 5 1 257 1 194 1 
206 1 219 1 
353 1 51 1 97 1 
169 1 98 1 26 1 366 1 5 1 355 1 136 1 65 1 126 1 249 1 188 1 36 1 235 1 379 2 39 1 52 1 120 1 227 1 
169 1 98 1 26 1 366 1 5 1 355 1 136 1 65 1 126 1 249 1 188 1 36 1 235 1 379 2 39 1 52 1 120 1 227 1 
169 1 98 1 26 1 366 1 5 1 355 1 136 1 65 1 126 1 249 1 188 1 36 1 235 1 379 2 39 1 52 1 120 1 227 1 
206 1 97 1 219 1 
206 1 97 1 219 1 
353 1 51 1 
353 1 51 1 97 1 
16 1 166 1 
56 1 2 1 3 1 5 1 355 1 166 1 328 1 33 1 126 1 168 1 188 1 216 1 235 1 36 1 169 1 16 1 289 2 335 2 291 2 338 2 158 2 135 1 136 1 249 1 379 1 176 1 52 1 
0 1 276 1 278 1 57 1 124 1 144 1 281 1 62 2 83 2 34 1 283 1 238 1 191 1 332 2 289 2 131 1 196 1 171 1 45 2 293 1 338 2 154 1 158 2 200 1 50 1 247 1 226 1 118 2 77 1 301 1 344 2 
332 2 196 1 264 1 170 1 349 1 337 1 48 1 316 1 134 1 200 1 62 2 32 1 138 1 248 1 118 2 119 1 299 1 86 1 240 2 
332 1 264 1 196 1 170 1 349 1 337 1 142 1 48 1 134 1 200 1 62 1 138 1 248 1 118 1 119 1 86 1 240 2 
332 1 363 1 243 1 196 1 263 1 171 1 293 1 48 1 113 1 316 1 200 1 62 1 118 1 175 1 
332 1 264 1 196 1 170 1 349 1 337 1 48 1 316 1 134 1 200 1 62 1 32 1 138 1 248 1 118 1 119 1 86 1 240 2 
178 1 
90 1 346 1 64 1 297 1 227 1 373 1 218 1 
364 1 322 1 292 1 29 1 373 1 125 1 266 1 201 1 355 1 358 1 64 1 52 1 237 1 300 1 307 1 227 2 218 1 
322 4 101 2 324 2 103 1 62 3 64 8 187 3 329 2 107 2 15 2 332 3 287 2 243 1 196 3 152 2 293 10 200 4 201 4 118 3 297 1 299 1 300 3 121 1 82 6 27 2 163 2 347 2 29 4 165 2 351 2 125 6 354 1 355 5 358 4 215 1 127 1 308 2 218 2 87 3 364 12 262 6 309 2 44 2 171 3 47 1 370 2 373 9 90 1 266 5 376 1 94 2 139 2 52 5 227 8 
321 1 322 2 99 1 82 5 230 1 324 2 182 1 29 2 165 2 125 3 355 1 358 2 215 1 64 5 284 1 107 1 308 2 218 2 364 6 309 1 262 5 44 2 367 1 152 2 370 2 373 8 72 1 266 1 201 2 19 1 377 1 159 1 52 1 300 1 227 5 
322 1 122 1 324 2 29 1 165 1 355 1 167 1 358 1 64 2 236 1 41 1 70 1 365 1 289 1 309 1 335 1 291 1 44 2 89 1 338 1 158 1 373 2 74 1 201 1 340 1 52 1 207 1 381 1 
322 1 29 1 373 1 90 1 201 1 358 1 64 1 297 1 227 1 218 1 
364 10 309 1 262 5 82 5 44 2 347 1 152 2 324 2 370 2 165 2 373 5 125 5 64 5 308 2 227 5 
266 1 355 1 52 1 300 1 227 1 218 1 
322 2 254 1 29 2 354 1 355 3 62 4 358 1 215 2 64 2 127 2 147 1 107 2 332 4 260 1 363 1 243 2 196 1 171 1 293 1 113 1 373 2 200 1 201 2 266 4 91 1 342 1 118 4 52 3 300 2 
0 1 276 1 278 1 144 1 281 1 62 1 328 1 83 2 283 1 191 1 67 1 87 1 332 1 242 1 289 2 243 1 291 2 335 2 196 1 45 1 171 1 293 1 338 3 154 1 158 3 340 2 200 1 223 1 318 1 118 1 250 1 381 1 
364 4 262 2 322 1 82 2 29 1 373 1 125 2 201 1 358 1 93 1 64 2 215 1 107 1 227 4 218 2 
229 1 249 1 235 1 
229 1 249 1 235 1 
231 1 166 1 249 1 235 1 120 1 
229 1 249 1 235 1 
249 1 235 1 53 1 
249 1 235 1 53 1 
249 1 235 1 53 1 
249 1 235 1 
136 1 126 1 
331 1 209 1 0 2 365 1 276 4 45 8 324 1 165 1 144 2 202 3 167 1 83 4 63 1 93 1 75 2 283 2 22 1 77 4 191 2 41 1 
331 1 209 1 346 1 365 1 276 3 45 6 324 1 165 1 202 2 167 1 93 1 75 2 77 3 41 1 
0 1 276 2 45 4 152 1 324 1 165 1 370 1 144 1 202 2 83 2 75 1 283 1 105 1 22 1 191 1 77 2 308 1 
276 4 45 7 152 1 324 1 165 1 370 1 72 2 202 2 159 1 75 1 284 1 84 1 22 1 77 3 308 1 
209 1 0 2 181 1 276 12 324 3 165 3 144 2 167 2 63 2 83 4 284 2 283 2 84 1 191 2 41 1 308 2 331 1 365 2 45 23 152 2 370 2 72 2 202 9 93 1 75 5 22 4 271 1 77 11 320 1 
72 1 276 1 45 1 
45 1 284 1 77 1 
0 1 276 3 347 1 45 6 152 1 324 1 370 1 165 1 144 1 202 3 83 2 75 2 283 1 105 1 22 1 191 1 77 3 308 1 
0 1 99 1 276 6 367 1 45 12 230 1 324 2 152 2 4 1 182 1 165 2 370 2 144 1 72 1 202 2 377 1 83 2 159 1 75 1 283 1 284 1 22 1 77 6 191 1 308 2 
202 2 365 1 167 1 276 3 75 1 45 6 22 1 324 1 165 1 77 3 41 1 
331 1 209 1 365 1 0 1 181 1 276 2 45 3 144 1 202 2 167 1 63 1 83 2 75 1 283 1 22 1 77 1 191 1 
0 1 365 2 276 5 45 10 89 1 4 1 324 2 165 2 144 1 202 5 167 2 83 2 75 3 283 1 22 2 191 1 77 5 41 1 
0 1 45 2 4 1 324 1 144 1 202 1 83 2 283 1 22 1 191 1 77 2 308 1 
0 1 276 2 45 4 4 1 152 1 324 1 165 1 370 1 144 1 202 2 83 2 75 1 283 1 22 1 191 1 77 2 308 1 
0 3 365 1 181 1 276 2 45 3 4 1 144 3 202 2 167 1 63 1 83 6 75 1 205 1 283 3 22 1 191 3 77 1 
209 1 0 5 181 1 276 18 4 1 324 5 165 5 143 1 144 5 167 3 63 2 83 10 283 5 284 3 84 1 105 1 191 5 41 2 308 3 331 1 365 3 151 1 45 34 172 1 152 3 370 3 72 4 202 12 93 1 159 1 75 7 205 1 22 5 77 16 
209 1 0 1 276 4 230 1 324 1 4 1 165 1 144 1 167 1 83 2 284 1 283 1 191 1 41 1 331 1 365 1 45 8 72 1 202 2 93 1 159 1 75 2 77 4 
209 1 0 2 276 5 230 1 4 1 324 2 165 1 144 2 167 1 83 4 283 2 284 1 84 1 105 1 191 2 41 1 308 1 331 1 365 1 45 11 152 1 72 2 202 3 93 1 159 1 75 2 22 1 77 6 
209 1 0 3 99 1 276 10 230 1 4 1 324 3 165 3 182 1 144 3 167 1 83 6 63 1 284 1 283 3 105 1 191 3 41 1 308 2 331 1 365 1 45 19 367 1 152 2 370 2 72 1 202 4 377 1 93 1 159 1 75 3 22 1 77 9 
209 1 0 3 99 1 276 7 230 1 4 1 324 3 165 2 182 1 144 3 167 1 63 1 83 6 284 1 283 3 105 1 191 3 41 1 308 2 331 1 365 1 45 17 367 1 152 2 370 1 72 1 202 5 377 1 93 1 159 1 75 3 22 2 77 10 
209 1 0 1 276 4 230 1 324 1 4 1 165 1 144 1 167 1 83 2 284 1 283 1 191 1 41 1 331 1 365 1 45 8 72 1 202 2 93 1 159 1 75 2 77 4 
0 1 99 1 276 6 367 1 45 12 230 1 324 2 152 2 4 1 182 1 165 2 370 2 144 1 72 1 202 2 377 1 83 2 159 1 75 1 283 1 284 1 22 1 77 6 191 1 308 2 
209 1 0 4 99 1 276 8 230 1 4 1 324 3 182 1 165 2 144 4 167 1 83 8 63 2 283 4 284 1 105 1 191 4 41 1 308 2 331 1 365 1 45 18 367 1 152 2 370 1 72 1 202 5 377 1 93 1 159 1 75 3 22 2 77 10 
0 4 99 1 276 7 230 1 4 1 324 3 182 1 165 2 144 4 83 8 63 2 283 4 284 1 191 4 308 3 45 16 367 1 152 3 370 2 72 1 202 6 377 1 159 1 75 3 205 1 22 3 77 9 
331 2 209 1 365 3 276 4 45 7 324 1 165 1 202 6 167 3 75 3 22 3 77 3 41 1 
209 1 0 4 99 1 276 8 230 1 4 1 324 3 182 1 165 2 144 4 167 1 83 8 63 2 283 4 284 1 191 4 41 1 308 2 331 1 365 1 45 18 367 1 152 2 370 1 72 1 202 4 377 1 93 1 159 1 75 3 205 1 22 1 77 10 
18 1 
303 1 8 1 233 1 18 1 14 1 129 1 
332 1 200 1 363 1 346 1 62 1 243 1 196 1 118 1 171 1 293 1 113 1 
332 1 289 1 243 1 335 1 291 1 196 1 171 1 293 1 338 2 158 2 200 1 213 1 62 1 328 1 318 1 118 1 250 1 87 1 
332 1 289 2 335 1 291 2 196 1 101 1 122 1 171 2 222 1 293 3 338 2 153 1 158 2 200 1 213 1 62 1 328 1 318 1 118 1 127 1 250 1 139 1 87 2 
101 1 122 1 348 1 213 1 62 2 328 1 127 1 87 2 332 2 289 2 196 1 291 2 335 1 171 2 222 1 293 3 338 2 153 1 158 2 200 1 318 1 118 2 270 1 139 1 
332 3 287 1 243 1 196 1 101 1 163 1 171 1 348 1 293 4 60 1 200 1 266 1 355 2 62 3 118 3 127 1 187 1 139 1 52 2 306 1 227 1 218 1 87 1 
332 3 287 1 243 1 196 1 101 1 163 1 171 1 348 1 293 4 200 1 266 1 355 2 62 3 118 3 127 1 187 1 139 1 329 1 52 2 227 1 218 1 87 1 
332 1 200 1 62 1 196 1 118 1 378 1 
124 1 7 1 62 6 327 1 189 1 108 1 87 1 332 5 195 1 110 1 243 2 196 2 171 2 293 3 337 1 200 3 376 1 118 6 378 1 344 1 
0 2 276 3 278 2 1 1 324 1 144 2 281 2 184 1 62 1 328 2 283 2 191 2 67 1 332 1 331 1 242 1 289 1 335 1 291 1 196 1 293 1 338 2 158 2 200 1 202 2 118 1 75 2 250 1 299 1 77 3 301 1 209 1 302 1 165 1 213 1 167 1 83 4 34 1 37 1 41 1 87 1 361 1 365 1 171 1 45 6 318 1 93 1 
322 2 27 1 163 1 29 2 351 1 354 1 355 3 62 1 358 2 64 1 187 1 216 1 329 1 218 1 15 1 332 1 287 1 243 1 293 2 373 1 90 1 201 2 266 2 118 1 297 1 52 3 300 1 227 1 
287 1 332 2 196 1 171 1 103 1 293 2 200 2 376 1 62 2 118 2 378 1 299 1 87 1 
332 4 363 1 243 1 274 1 196 1 171 1 348 1 293 1 113 1 200 1 62 4 118 4 299 1 
332 2 110 1 196 1 171 1 293 1 350 1 200 2 62 2 304 1 118 2 127 1 108 1 79 1 87 1 
332 1 200 1 62 1 243 1 138 1 196 1 119 1 118 1 86 1 240 1 
332 2 196 1 171 1 293 1 337 1 124 1 200 1 62 2 226 1 118 2 299 1 
332 4 195 1 363 1 243 1 274 1 196 2 171 2 293 3 113 1 124 1 200 2 62 5 327 1 118 5 127 1 299 1 
332 4 363 1 243 1 274 1 196 2 171 2 293 3 113 1 124 1 200 2 62 5 327 1 118 5 127 1 299 1 40 1 
332 1 289 1 243 1 335 1 291 1 196 1 171 1 293 1 338 2 158 2 200 1 213 1 62 1 328 1 318 1 118 1 270 1 87 1 
332 1 110 1 196 1 171 1 293 1 7 1 200 2 376 1 62 1 118 1 127 1 108 1 87 1 
261 1 328 1 225 1 95 1 24 1 
261 2 273 1 122 1 311 1 163 1 222 1 153 1 133 1 355 2 328 1 225 2 95 2 216 1 343 1 38 1 52 2 24 1 227 1 218 1 
289 1 131 1 225 1 95 1 57 1 238 1 338 1 24 1 158 1 
133 1 273 1 24 1 
334 1 199 1 346 1 160 1 
334 1 199 1 214 1 267 1 160 1 46 1 244 1 
267 1 319 1 255 1 
334 1 46 1 245 1 244 3 49 1 214 1 199 1 267 3 92 1 145 2 160 1 192 1 
334 1 199 1 43 1 214 1 267 2 96 1 160 1 46 1 244 2 
46 1 244 1 58 1 214 1 134 1 267 1 138 1 9 1 160 1 192 1 240 1 
334 1 214 1 267 1 160 1 46 1 244 1 192 1 
334 2 199 1 214 1 267 1 46 1 244 1 192 1 
334 1 46 2 244 2 173 1 372 1 214 2 267 2 160 1 106 1 192 1 
334 1 46 1 244 3 352 1 199 1 214 1 280 1 325 1 267 3 9 1 96 2 160 2 192 1 
334 1 46 1 244 2 349 1 371 1 199 1 214 1 134 1 267 2 138 1 96 1 160 1 86 1 192 1 240 2 
334 1 43 1 46 2 244 4 199 1 214 2 325 1 267 4 9 1 96 2 160 2 128 1 192 1 
334 1 199 1 214 1 267 1 160 1 46 1 244 1 192 1 
334 2 275 1 46 1 244 4 49 1 199 2 214 1 325 1 145 1 92 1 267 4 9 1 96 2 160 3 
334 1 253 1 46 1 244 2 214 1 199 1 61 1 267 2 96 1 160 1 272 1 192 1 
334 1 46 1 244 3 49 1 214 1 199 1 267 3 92 2 145 2 160 1 85 1 192 1 
333 1 204 1 160 2 251 2 
214 1 180 1 267 1 46 1 244 1 192 1 
334 1 199 1 280 1 214 1 267 2 96 1 160 1 46 1 244 2 192 1 
132 1 
334 1 199 1 214 1 267 1 160 1 46 1 244 1 192 1 
280 1 334 1 199 1 214 1 145 1 267 3 96 1 160 1 46 1 244 3 192 1 
325 1 275 1 9 1 160 1 
334 1 160 1 

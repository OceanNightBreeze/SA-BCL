#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (68,94,219,225) (68,94,219,225) (68,94,219,225) 232 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (68,94,219,225) (68,94,219,225) (68,94,219,225) 232 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (68,94,219,225) (68,94,219,225) (68,94,219,225) 232 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (68,94,219,225) (68,94,219,225) (68,94,219,225) 232 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (68,94,219,225) (68,94,219,225) (68,94,219,225) 232 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (68,94,219,225) (68,94,219,225) (68,94,219,225) 232 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (68,94,219,225) (68,94,219,225) (68,94,219,225) 232 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (68,94,219,225) (68,94,219,225) (68,94,219,225) 232 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (68,94,219,225) (68,94,219,225) (68,94,219,225) 232 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (68,94,219,225) (68,94,219,225) (68,94,219,225) 232 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (68,94,219,225) (68,94,219,225) (68,94,219,225) (37,122) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (68,94,219,225) (68,94,219,225) (37,122) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (68,94,219,225) (68,94,219,225) (68,94,219,225) (37,122) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (68,94,219,225) (68,94,219,225) (68,94,219,225) 232 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 222 127 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 222 127 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 222 127 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 222 152 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 222 127 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 772 | 0 -> -1
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1902 | = null
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
94 1 219 1 135 1 68 1 232 1 
94 1 219 1 135 1 68 1 232 1 
94 1 219 1 135 1 68 1 232 1 
94 1 219 1 135 1 68 1 232 1 
94 1 219 1 135 1 68 1 232 1 
94 1 219 1 135 1 68 1 232 1 
94 1 219 1 135 1 68 1 232 1 
94 1 219 1 135 1 68 1 232 1 
94 1 219 1 135 1 68 1 232 1 
10 1 217 1 90 1 
297 1 281 2 90 1 
296 2 131 1 325 2 205 2 278 1 33 2 79 2 262 2 
296 2 95 1 2 2 53 1 3 2 196 1 5 1 103 1 198 2 278 1 201 1 64 1 161 1 18 1 282 2 23 1 26 1 116 1 70 1 205 2 73 2 76 1 33 3 251 1 320 1 79 3 323 1 131 1 38 1 133 1 325 2 326 1 327 1 42 1 84 1 43 1 262 2 
296 1 205 1 150 1 33 1 79 1 292 1 278 1 325 1 19 1 262 1 
30 1 33 1 75 1 197 1 79 1 177 1 156 1 292 1 217 1 325 1 14 1 329 1 242 1 90 1 
296 1 205 1 30 1 33 1 75 1 79 1 177 1 156 1 292 1 217 1 325 1 14 2 329 2 262 1 90 1 
14 1 176 1 329 1 288 1 290 1 
130 1 217 1 14 2 176 1 329 2 221 1 288 1 90 1 
14 1 176 1 329 1 
296 1 205 1 150 1 33 1 79 1 288 1 292 1 278 1 325 1 85 1 14 1 329 1 19 1 262 1 
90 1 
130 1 217 1 98 1 14 2 176 1 329 2 288 1 90 1 
147 2 71 1 299 1 54 1 207 1 176 2 253 2 288 2 155 1 130 1 216 1 217 1 83 1 14 5 329 5 66 2 165 1 186 1 90 1 
131 1 10 1 
296 1 27 1 205 1 315 1 33 2 79 2 131 1 292 1 258 1 325 2 262 1 
129 1 209 1 224 1 
116 1 53 1 33 1 76 1 3 1 251 1 320 1 79 1 196 1 5 1 198 1 131 1 84 1 201 1 109 1 282 1 
296 1 116 1 53 1 209 1 76 1 33 2 251 1 3 1 320 1 196 1 79 2 5 1 60 1 198 1 158 1 325 1 201 1 84 1 282 1 262 1 
296 3 205 1 33 3 79 3 60 1 131 1 292 1 325 3 258 1 262 3 
296 1 292 1 325 1 150 1 33 1 79 1 262 1 
296 1 27 1 205 1 315 1 33 1 79 1 292 1 325 1 262 1 
296 3 95 1 2 2 53 1 273 1 3 1 196 1 5 1 103 1 60 1 198 1 156 1 158 1 278 1 201 1 14 1 64 1 161 1 18 1 282 1 116 1 30 1 205 2 315 1 73 1 76 1 33 4 75 1 251 1 320 1 79 4 177 1 131 1 292 1 38 1 133 1 325 3 326 1 327 1 84 1 43 1 138 1 329 1 262 3 
296 1 131 1 190 1 325 2 33 2 242 1 79 2 262 1 60 1 
296 3 269 1 205 1 30 1 315 1 33 3 75 1 177 1 79 3 60 2 156 1 158 1 292 1 325 3 14 1 138 1 329 1 262 3 90 1 
296 2 205 1 315 1 33 2 209 1 79 2 60 1 129 1 325 2 262 2 
116 1 53 1 33 1 76 1 3 1 251 1 320 1 79 1 196 1 5 1 198 1 131 1 84 1 201 1 282 1 
171 1 318 1 33 1 76 1 3 1 251 1 320 1 79 1 196 1 5 1 198 1 131 1 84 1 201 1 282 1 
298 1 95 2 97 1 2 2 193 1 103 1 277 1 304 1 105 1 63 1 64 1 18 1 26 2 73 4 209 2 35 1 129 2 82 1 133 1 327 1 43 1 88 1 49 1 224 2 
156 1 296 1 292 1 325 1 29 1 33 1 79 1 262 1 
296 2 205 1 315 1 33 2 79 2 60 1 131 1 292 1 258 1 325 2 262 2 
296 2 292 1 29 1 325 2 150 1 33 2 79 2 262 2 
250 1 283 1 
250 1 283 1 
106 1 233 1 
106 1 233 1 
106 1 233 1 
245 1 250 1 283 1 
250 1 283 1 311 1 
7 1 106 1 41 1 250 2 283 2 233 1 
245 1 250 1 283 1 
245 1 250 1 283 1 
104 1 250 1 283 1 
104 1 250 1 283 1 
104 1 250 1 283 1 
314 1 151 2 250 2 303 2 291 1 218 1 41 1 14 2 15 3 239 2 329 2 162 1 283 2 204 1 89 2 113 1 90 1 145 2 188 1 
296 2 172 1 72 1 151 1 33 2 250 1 34 1 102 1 79 2 303 1 131 1 325 2 108 1 14 1 15 1 240 1 239 1 202 1 329 1 283 1 262 2 113 1 89 1 311 1 
57 1 167 1 168 1 
1 1 57 1 167 1 
1 1 13 1 230 1 57 3 168 2 179 1 
1 1 13 1 57 2 168 1 179 1 91 1 
1 1 13 1 57 2 168 1 179 2 
297 1 147 1 299 3 193 1 302 2 277 1 306 1 108 1 14 5 240 1 281 3 66 1 67 1 165 1 207 2 249 1 176 1 253 1 211 2 252 1 34 1 288 4 81 1 130 1 82 1 217 1 329 5 263 2 143 1 47 1 88 1 90 2 
297 3 147 2 299 8 193 3 302 6 277 3 306 2 14 9 281 9 309 1 66 2 67 3 165 1 169 1 115 5 248 1 207 6 176 6 253 2 252 2 34 4 288 7 81 1 290 5 130 1 216 1 82 3 217 1 134 1 139 1 329 9 263 6 88 3 90 5 332 1 
297 2 147 1 299 3 193 1 302 2 277 1 306 1 14 3 281 4 66 1 67 1 207 2 249 1 253 1 252 1 211 1 34 1 288 2 82 1 216 1 217 1 329 3 263 2 47 1 88 1 90 3 
297 3 147 1 299 5 193 2 302 4 277 2 306 1 14 4 281 7 309 1 66 1 67 2 169 1 207 4 249 1 253 1 252 1 211 2 34 2 288 3 82 2 216 1 217 1 134 1 329 4 263 4 47 1 88 2 90 4 
10 1 76 1 293 1 
312 1 76 1 
316 1 
201 1 76 1 
201 1 227 1 76 3 293 2 320 1 195 1 
201 1 76 1 320 1 
76 1 22 1 
26 4 95 3 96 1 206 1 300 1 73 7 101 1 128 1 82 1 8 1 105 3 40 1 107 1 220 1 284 2 88 1 49 2 
26 4 95 3 96 1 206 1 300 1 73 7 101 1 128 1 82 1 8 1 105 3 40 1 107 1 220 1 284 2 88 1 49 2 
26 4 95 3 96 1 206 1 300 1 73 7 101 1 36 1 128 1 82 1 8 1 105 3 40 1 107 1 220 1 284 2 88 1 49 2 
95 15 148 1 270 3 51 4 2 2 96 5 300 1 193 3 101 1 58 1 59 1 275 1 277 3 8 1 105 10 107 2 64 1 18 1 67 3 284 3 26 16 206 2 73 31 214 1 128 1 257 1 82 4 40 2 133 1 327 1 136 1 220 2 88 4 49 5 
26 5 95 4 96 1 2 4 206 1 300 1 73 9 101 1 214 1 128 1 153 1 157 1 82 1 40 1 105 4 133 2 107 1 327 2 220 1 64 2 18 2 284 2 88 1 49 3 
94 1 219 1 135 1 68 1 232 1 
94 1 219 1 135 1 68 1 37 1 
219 1 135 1 122 1 225 1 
94 1 219 1 135 1 68 1 37 1 
94 1 219 1 135 1 68 1 232 1 
276 1 
0 1 3 2 4 1 196 1 197 1 5 2 198 2 200 1 201 1 14 5 281 2 282 2 287 2 30 1 207 2 208 2 33 1 123 1 126 2 130 3 132 1 292 1 217 1 142 1 48 1 297 2 147 1 299 2 55 2 56 1 156 1 306 1 308 1 66 1 164 2 165 1 163 1 242 1 173 1 76 1 75 1 176 6 253 1 79 1 177 1 322 4 325 1 84 1 181 2 260 1 330 2 329 5 331 1 90 2 189 1 
30 1 98 1 208 1 75 1 33 1 176 2 123 1 56 1 177 1 197 1 79 1 322 2 200 1 130 1 156 1 132 1 292 1 325 1 14 3 329 3 163 1 242 1 
98 1 56 1 197 1 200 1 156 1 14 3 242 1 163 1 30 1 33 1 75 1 176 1 123 1 79 1 177 1 322 3 126 1 130 1 132 1 292 1 325 1 217 1 329 3 90 1 
98 1 56 1 197 1 200 1 156 1 14 3 242 1 163 1 30 1 208 1 33 1 75 1 123 1 176 2 79 1 177 1 322 3 126 1 130 1 132 1 292 1 325 1 217 1 181 1 329 3 90 1 
0 1 98 1 197 1 200 1 14 5 287 2 30 1 117 1 207 1 208 4 33 1 123 1 126 4 130 3 132 1 292 1 217 5 141 1 147 1 297 2 52 1 299 1 56 1 55 2 156 1 66 1 163 1 242 1 165 1 164 2 75 1 176 7 253 1 177 1 79 1 322 6 325 1 181 4 86 1 329 5 330 2 331 1 90 5 264 1 
0 1 197 1 200 1 14 4 281 2 287 2 30 1 207 1 208 2 33 1 123 1 126 2 130 2 132 1 292 1 217 1 147 1 297 2 299 1 56 1 55 2 156 1 66 1 242 1 165 1 163 1 164 2 173 1 75 1 176 4 253 1 177 1 79 1 322 4 325 1 181 2 329 4 330 2 331 1 90 2 
0 1 297 2 147 1 299 1 55 2 56 1 197 1 200 1 156 1 14 4 66 1 164 2 242 1 163 1 165 1 287 2 30 1 117 1 207 1 208 2 33 1 75 1 176 4 123 1 253 1 79 1 177 1 322 4 126 2 130 2 132 1 292 1 217 1 325 1 181 2 86 1 330 2 329 4 331 1 90 1 264 1 
0 1 297 2 147 1 299 1 55 2 56 1 197 1 200 1 156 1 14 4 66 1 164 2 242 1 163 1 165 1 287 2 30 1 117 1 207 1 208 2 33 1 75 1 176 4 123 1 253 1 79 1 177 1 322 4 126 2 130 2 132 1 292 1 217 1 325 1 181 2 86 1 330 2 329 4 331 1 90 1 264 1 
0 1 147 1 191 1 299 1 194 2 56 1 197 1 200 1 156 1 14 4 281 2 66 1 242 1 163 1 165 1 287 2 30 1 117 1 207 1 208 2 33 1 75 1 176 4 123 1 253 1 79 1 177 1 255 1 322 4 126 2 130 2 132 1 292 1 217 1 325 1 181 2 330 2 329 4 87 2 90 1 265 1 
0 1 297 2 147 1 299 1 55 2 56 1 197 1 200 1 156 1 14 4 66 1 164 2 165 1 242 1 163 1 287 2 30 1 117 1 207 1 208 3 33 1 75 1 123 1 176 5 253 1 79 1 177 1 322 5 126 3 130 2 132 1 292 1 217 1 325 1 86 1 181 3 330 2 329 4 331 1 141 1 90 1 264 1 
0 1 297 2 147 1 299 1 55 2 56 1 197 1 200 1 156 1 14 4 66 1 164 2 165 1 242 1 163 1 287 2 30 1 117 1 207 1 208 3 33 1 75 1 123 1 176 5 253 1 79 1 177 1 322 5 126 3 130 2 132 1 292 1 217 1 325 1 86 1 181 3 330 2 329 4 331 1 141 1 90 1 264 1 
0 1 191 1 194 2 197 1 200 1 14 4 281 2 287 2 30 1 207 1 208 2 33 1 123 1 126 2 130 2 132 1 292 1 217 1 147 1 299 1 56 1 156 1 66 1 242 1 165 1 163 1 173 1 75 1 176 4 253 1 177 1 79 1 322 4 325 1 181 2 329 4 330 2 87 2 90 1 
26 3 95 3 298 1 2 2 206 1 73 6 300 1 209 1 101 1 103 1 128 1 129 1 131 2 82 1 10 1 105 2 133 1 40 1 327 1 43 1 64 1 18 1 284 1 88 1 49 2 224 1 
95 6 51 3 270 3 96 1 2 4 193 2 231 1 59 1 103 1 277 1 105 2 64 2 161 1 18 2 67 2 25 1 26 8 70 1 246 1 73 14 209 11 129 4 131 1 180 1 257 1 82 1 133 2 327 2 183 1 43 2 88 2 49 1 224 11 
296 1 95 1 53 1 2 2 3 1 196 1 231 1 5 1 103 1 60 1 198 1 158 1 201 1 109 1 64 1 18 1 161 1 282 1 112 1 243 1 26 1 116 1 70 1 73 2 76 1 33 2 251 1 320 1 79 2 178 1 129 1 131 1 133 1 325 1 84 1 327 1 43 1 262 1 
95 10 192 1 2 6 96 4 193 2 3 3 100 2 101 1 196 2 5 1 103 3 198 3 277 2 105 8 201 2 110 1 18 3 282 3 284 1 26 10 116 2 118 1 206 1 33 3 209 7 128 1 129 7 131 2 40 1 133 3 43 3 46 2 49 4 146 2 224 7 296 1 53 2 300 1 231 1 60 1 158 1 62 1 64 3 161 1 67 2 70 1 73 20 76 2 251 2 320 2 79 3 82 3 325 1 326 2 327 3 84 2 261 2 262 1 88 3 
268 1 296 1 298 1 95 1 192 1 149 1 2 4 228 1 3 8 196 2 5 2 60 1 103 2 198 7 201 2 64 2 18 2 161 1 282 8 308 1 286 1 26 1 70 1 73 2 120 1 33 1 76 3 77 1 79 1 323 2 325 1 133 2 84 2 327 2 182 1 43 2 262 1 295 1 189 1 
296 1 95 2 2 2 193 1 231 1 103 1 277 1 105 1 64 1 18 1 67 1 26 1 205 1 315 1 73 3 209 1 33 1 79 1 129 1 82 1 133 1 325 1 327 1 137 1 43 1 262 1 88 1 49 1 224 1 
26 2 298 1 96 1 2 2 73 2 193 1 209 1 35 1 103 1 129 1 105 1 133 1 327 1 43 1 64 1 18 1 88 1 224 1 
298 1 95 2 2 2 73 2 209 1 103 1 277 1 304 1 129 1 82 1 105 1 133 1 327 1 43 1 64 1 18 1 49 1 224 1 
298 1 95 2 2 2 96 1 193 1 103 1 277 1 105 2 64 1 18 1 67 1 26 2 73 4 209 2 129 2 82 1 133 1 327 1 43 1 88 1 49 1 224 2 
26 2 149 1 96 1 2 2 73 2 193 1 209 1 35 1 103 1 129 1 105 1 133 1 327 1 43 1 64 1 18 1 88 1 224 1 
95 2 149 1 2 2 73 2 209 1 103 1 277 1 304 1 129 1 82 1 105 1 133 1 327 1 43 1 64 1 18 1 49 1 224 1 
95 2 149 1 2 2 96 1 193 1 103 1 277 1 105 2 64 1 18 1 67 1 26 2 73 4 209 2 129 2 82 1 133 1 327 1 43 1 88 1 49 1 224 2 
95 2 2 2 96 1 193 1 103 1 277 1 105 2 64 1 18 1 67 1 26 2 73 4 209 2 129 2 82 1 133 1 327 1 43 1 88 1 49 1 224 2 
95 1 53 1 2 2 3 1 196 1 5 1 103 1 198 1 201 1 64 1 18 1 161 1 282 1 26 1 116 1 70 1 73 2 76 1 33 1 251 1 320 1 79 1 131 1 133 1 326 1 84 1 327 1 43 1 
95 1 2 2 3 1 196 1 5 1 103 1 198 1 201 1 64 1 18 1 161 1 282 1 285 1 26 1 171 1 70 1 73 2 318 1 76 1 33 1 251 1 320 1 79 1 131 1 133 1 84 1 327 1 43 1 
95 2 2 2 96 1 193 1 231 1 103 1 277 1 105 2 64 1 18 1 67 1 26 2 73 4 209 2 129 2 82 1 133 1 327 1 43 1 88 1 49 1 224 2 
95 2 96 1 53 1 2 2 193 1 100 1 3 1 196 1 103 1 277 1 198 1 105 2 201 1 64 1 18 1 282 1 67 1 286 1 26 2 116 1 73 4 209 2 76 1 33 1 251 1 320 1 79 1 129 2 82 1 133 1 326 1 84 1 327 1 43 1 88 1 49 1 224 2 
296 1 95 1 96 1 2 2 193 1 231 1 103 1 277 1 105 1 64 1 18 1 67 1 26 2 205 1 315 1 73 3 33 1 209 1 210 1 79 1 129 1 82 1 133 1 325 1 327 1 43 1 262 1 88 1 224 1 
95 5 51 2 270 1 2 4 96 1 193 1 59 1 277 1 153 1 105 2 64 2 18 2 166 1 67 1 310 1 26 4 247 1 73 9 127 1 257 1 82 1 133 2 327 2 328 1 294 1 187 1 222 1 88 1 49 1 
95 5 51 2 270 1 2 4 96 1 193 1 59 1 277 1 153 1 105 2 64 2 18 2 166 1 67 1 310 1 26 4 247 1 73 9 127 1 257 1 82 1 133 2 327 2 328 1 294 1 187 1 222 1 88 1 49 1 
95 22 51 4 270 4 2 4 96 6 300 1 193 6 101 1 59 2 277 6 153 1 305 1 105 12 64 2 18 2 241 1 166 1 67 6 284 1 310 1 26 24 313 1 206 1 247 1 73 46 214 1 127 1 128 1 215 1 257 2 82 7 40 1 324 1 133 2 327 2 183 2 328 1 187 3 222 1 88 7 223 1 49 6 
95 5 51 2 270 1 2 4 96 1 193 1 59 1 152 1 277 1 153 1 105 2 64 2 18 2 166 1 67 1 310 1 26 4 247 1 73 9 257 1 82 1 133 2 327 2 328 1 294 1 187 1 222 1 88 1 49 1 
95 9 51 2 270 2 96 1 2 6 193 2 59 2 277 1 153 1 305 1 105 2 64 3 18 3 241 1 166 2 67 2 310 1 26 11 313 1 247 1 73 20 214 2 127 1 215 1 82 1 133 3 324 1 327 3 328 2 187 3 222 1 88 2 49 1 223 1 
218 1 41 1 236 1 151 1 250 1 239 1 283 1 204 1 89 1 303 1 
172 1 311 1 
11 1 272 1 140 1 151 1 250 1 239 1 283 1 89 1 303 1 
314 1 151 1 250 1 303 1 291 1 218 1 41 1 14 1 15 2 239 1 329 1 283 1 204 1 113 1 89 1 90 1 145 1 188 1 
314 1 151 1 250 1 303 1 291 1 218 1 41 1 14 1 15 2 239 1 329 1 283 1 204 1 113 1 89 1 90 1 145 1 188 1 
314 1 151 1 250 1 303 1 291 1 218 1 41 1 14 1 15 2 239 1 329 1 283 1 204 1 113 1 89 1 90 1 145 1 188 1 
7 1 245 1 238 1 
7 1 245 1 238 1 
104 1 174 1 
7 1 104 1 174 1 
72 1 202 1 
296 2 151 1 102 1 303 1 159 1 14 1 15 1 108 1 239 1 240 1 202 1 283 1 311 1 172 1 314 1 72 1 33 2 250 1 79 2 34 1 288 1 131 1 325 2 329 1 262 2 89 1 145 1 
245 1 238 1 
7 1 104 1 174 1 
95 1 271 1 2 2 3 2 196 1 231 1 103 1 6 1 198 2 201 1 64 1 280 1 18 1 161 1 282 2 26 1 70 1 73 2 74 1 120 1 76 1 33 2 79 2 323 2 325 2 133 1 84 1 327 1 43 1 45 1 295 1 
1 1 170 1 192 1 32 1 3 2 230 1 254 1 78 1 57 2 196 1 124 1 198 2 234 1 84 1 282 2 111 1 167 1 168 1 286 1 
1 1 192 1 32 1 3 1 230 1 254 1 78 1 57 2 196 1 198 1 234 1 84 1 282 1 111 1 167 1 168 1 114 1 
76 1 3 1 254 1 196 1 124 1 5 1 198 1 84 1 201 1 282 1 308 1 21 1 203 1 189 1 
1 1 170 1 192 1 32 1 3 1 230 1 254 1 78 1 57 2 124 1 196 1 198 1 234 1 84 1 282 1 111 1 167 1 168 1 
237 1 
155 1 10 1 217 1 71 1 299 1 207 1 90 1 
297 1 147 1 299 1 55 1 14 1 281 1 66 1 164 1 165 1 207 1 176 1 253 1 130 1 217 1 329 1 331 1 90 2 
193 2 99 2 3 3 196 3 5 1 198 3 277 2 9 2 12 1 201 3 14 5 281 12 282 3 22 2 286 1 119 1 207 8 125 2 130 3 217 2 39 1 293 2 147 4 297 6 299 9 227 1 302 6 155 1 306 2 160 2 307 2 66 4 165 4 67 2 312 3 244 2 71 1 175 2 317 1 319 1 76 10 176 5 320 3 253 4 177 2 82 2 84 4 260 1 261 2 329 5 185 2 263 6 88 2 90 8 
147 2 297 3 51 1 270 1 299 8 193 2 274 1 302 5 59 1 277 2 306 1 14 1 281 6 241 1 66 2 165 2 67 2 31 1 313 1 175 2 207 5 176 1 253 2 215 1 130 1 82 2 324 1 217 2 260 1 185 1 329 1 263 5 88 2 90 5 223 1 
296 1 147 1 299 2 150 1 300 1 278 1 14 1 279 1 66 1 19 1 165 1 205 1 175 2 206 1 207 2 33 1 253 1 79 1 82 1 292 1 40 1 325 1 85 1 86 1 185 1 329 1 262 1 88 2 
147 1 71 1 299 1 207 1 253 1 155 1 217 1 66 1 165 1 90 1 
297 5 299 5 175 2 193 2 207 5 302 5 277 2 82 2 261 1 281 10 185 1 67 2 263 5 88 2 90 5 
130 1 217 1 14 1 329 1 176 1 90 1 
147 2 299 2 3 4 229 1 196 1 4 1 5 2 198 4 306 2 201 1 14 3 282 4 308 1 66 2 165 1 317 2 207 2 319 1 76 1 176 4 253 2 130 2 216 1 84 1 260 2 329 3 144 1 142 1 189 1 
296 2 95 1 2 2 53 1 3 1 196 1 5 1 103 1 198 1 278 1 201 1 64 1 161 1 18 1 282 1 116 1 205 2 73 1 33 3 76 1 251 1 320 1 79 3 131 1 38 1 133 1 325 2 326 1 327 1 84 1 43 1 262 2 
297 2 147 1 299 1 207 2 302 2 253 1 217 2 306 1 260 1 281 4 66 1 263 2 165 1 284 1 90 4 
151 1 92 1 303 1 
72 1 151 1 24 1 204 1 303 1 
151 1 92 1 303 1 
151 1 92 1 303 1 
17 1 151 1 303 1 
17 1 151 1 303 1 
17 1 151 1 303 1 
151 1 303 1 
250 1 283 1 
26 4 95 4 51 1 270 1 2 2 206 1 300 1 73 8 101 1 59 1 128 1 153 1 82 1 105 2 40 1 133 1 324 1 327 1 64 1 18 1 284 1 88 1 49 2 
95 5 51 2 270 1 2 4 96 1 300 1 193 1 101 1 59 1 153 1 105 3 64 2 18 2 67 1 284 1 26 6 206 1 73 11 289 1 128 1 82 1 257 1 40 1 324 1 133 2 327 2 88 2 49 2 
95 10 270 1 51 1 96 1 2 6 300 1 193 2 101 1 59 1 277 2 153 1 105 4 64 3 18 3 241 1 67 2 284 1 26 9 313 1 206 1 73 19 214 1 289 1 128 1 215 1 82 3 40 1 324 1 133 3 327 3 88 3 223 1 49 3 
95 7 270 1 51 1 96 2 2 6 300 1 193 2 101 1 59 1 277 1 153 1 105 5 64 3 18 3 241 1 67 2 284 1 26 10 313 1 206 1 73 17 214 1 289 1 128 1 215 1 82 2 40 1 324 1 133 3 327 3 88 3 223 1 49 3 
26 4 95 4 51 1 270 1 2 2 206 1 300 1 73 8 101 1 59 1 128 1 153 1 82 1 105 2 40 1 133 1 324 1 327 1 64 1 18 1 284 1 88 1 49 2 
95 6 270 1 51 1 96 1 2 2 193 2 59 1 277 2 153 1 105 2 64 1 18 1 241 1 67 2 26 6 313 1 73 12 215 1 82 2 324 1 133 1 327 1 88 2 223 1 49 1 
95 8 51 1 270 1 96 2 2 8 300 1 193 2 101 1 59 1 277 1 153 1 105 5 64 4 18 4 241 1 67 2 284 1 26 10 313 1 206 1 73 18 214 2 289 1 128 1 215 1 82 2 40 1 324 1 133 4 327 4 88 3 223 1 49 3 
95 7 51 1 270 1 96 3 2 8 193 3 59 1 277 2 153 1 105 6 64 4 18 4 241 1 67 3 26 9 313 1 73 16 214 2 215 1 82 2 324 1 133 4 327 4 294 1 88 3 223 1 49 3 
26 3 95 4 96 3 206 3 73 7 300 1 101 1 128 2 82 1 40 3 105 6 88 1 49 3 
95 8 51 1 270 1 96 1 2 8 300 1 193 2 101 1 59 1 277 1 153 1 105 4 64 4 18 4 241 1 67 2 284 1 26 10 313 1 206 1 73 18 214 2 128 1 215 1 82 2 40 1 324 1 133 4 327 4 294 1 88 3 223 1 49 3 
26 4 95 4 96 1 2 4 206 1 300 1 73 8 101 1 214 1 128 1 82 1 105 3 133 2 40 1 327 2 64 2 18 2 284 1 88 1 49 2 
26 3 95 3 206 1 300 1 73 6 101 1 128 1 82 1 10 1 40 1 105 2 284 1 88 1 49 2 
26 2 95 2 2 2 96 1 193 1 73 4 277 1 289 1 82 1 105 2 133 1 327 1 64 1 18 1 67 1 88 1 49 1 
26 3 95 4 51 2 270 1 96 1 73 7 193 1 59 1 277 1 82 1 257 1 105 2 67 1 88 1 49 1 
95 12 270 2 51 2 96 4 2 4 300 1 193 2 101 1 277 2 105 9 64 2 18 2 67 2 284 1 26 11 246 1 206 2 73 23 214 2 128 1 257 1 82 3 40 2 133 2 327 2 259 1 183 1 88 3 49 5 
95 1 51 1 73 1 
26 1 270 1 73 1 
26 3 95 3 2 2 96 1 73 6 193 1 289 1 277 1 82 1 133 1 105 3 327 1 64 1 261 1 18 1 67 1 88 1 49 2 
95 6 270 1 51 1 96 1 2 2 193 2 59 1 277 2 153 1 105 2 64 1 18 1 241 1 67 2 26 6 313 1 73 12 215 1 82 2 324 1 133 1 327 1 88 2 223 1 49 1 
26 3 95 3 96 1 206 1 300 1 73 6 82 1 40 1 105 2 88 1 49 1 
26 1 95 2 96 1 2 2 206 1 73 3 101 1 214 1 128 1 105 2 40 1 133 1 327 1 259 1 64 1 18 1 49 1 
26 5 95 5 2 2 96 2 206 2 73 10 300 1 153 1 82 2 133 1 40 2 105 5 327 1 64 1 279 1 18 1 88 2 49 3 
26 2 2 2 96 1 193 1 73 2 153 1 133 1 105 1 327 1 64 1 18 1 88 1 
26 2 95 2 2 2 96 1 193 1 73 4 277 1 153 1 82 1 105 2 133 1 327 1 64 1 18 1 67 1 88 1 49 1 
26 1 95 2 2 6 96 1 206 1 73 3 214 1 153 1 133 3 40 1 105 2 327 3 259 1 64 3 18 3 294 1 49 1 
148 1 95 18 51 4 270 3 2 10 96 5 300 2 193 3 101 1 58 1 275 1 59 1 277 3 153 1 105 12 64 5 18 5 67 3 284 1 26 16 206 3 73 34 214 2 289 1 128 1 257 1 82 5 40 3 133 5 327 5 259 1 294 1 88 5 49 7 
131 1 190 1 325 1 33 1 184 1 79 1 242 1 
267 1 69 1 28 1 190 1 301 1 33 1 79 1 131 1 325 1 184 1 242 1 50 1 
10 1 84 1 201 1 76 1 308 1 282 1 3 1 196 1 5 1 198 1 189 1 
296 1 53 1 76 1 33 2 251 1 3 1 320 1 79 2 196 1 5 1 60 1 198 1 131 1 325 1 201 1 84 1 282 1 262 1 
296 2 53 1 317 1 75 1 76 3 33 2 251 1 3 1 320 2 79 2 196 1 60 1 198 1 156 1 131 1 292 1 325 2 201 2 84 1 307 1 282 1 262 1 22 1 
296 2 3 2 196 1 60 1 198 2 156 1 201 2 307 1 282 2 22 1 171 1 317 1 33 2 76 3 75 1 251 1 320 2 79 2 131 1 292 1 325 2 84 1 44 1 262 1 
3 3 196 1 5 1 198 3 201 1 14 2 307 1 282 3 22 1 312 1 317 1 76 4 121 1 176 1 320 1 177 1 256 1 217 1 84 1 44 1 293 1 329 2 90 1 
312 1 317 1 76 4 3 3 176 1 320 1 177 1 196 1 5 1 198 3 217 1 201 1 84 1 14 2 160 1 44 1 307 1 329 2 282 3 293 1 22 1 90 1 
84 1 282 1 3 1 77 1 196 1 198 1 
268 1 192 1 227 1 228 1 76 3 77 1 3 7 320 1 196 2 5 2 212 1 80 1 198 6 323 1 154 1 201 2 84 3 182 1 282 7 295 1 286 1 
296 1 95 3 2 4 53 1 300 1 3 1 100 1 101 1 196 1 231 1 103 2 60 1 198 1 105 2 201 1 64 2 18 2 282 1 284 1 286 1 26 3 116 1 206 1 73 6 74 1 209 1 76 1 33 2 251 1 320 1 79 2 128 1 129 1 131 2 82 1 40 1 133 2 325 1 326 1 84 1 327 2 43 2 262 1 46 1 88 1 49 2 224 1 
147 2 299 1 3 1 5 1 198 1 155 1 9 1 14 3 160 1 282 1 66 2 165 2 312 1 244 1 71 1 207 1 319 1 76 2 176 2 253 2 177 1 288 1 125 1 130 1 217 1 329 3 293 1 90 1 
119 1 227 1 76 2 77 1 3 2 320 1 196 1 198 2 201 1 84 2 293 1 282 2 286 1 
76 1 3 4 196 1 5 1 198 4 84 1 201 1 44 1 282 4 308 1 286 1 266 1 189 1 
317 1 76 1 3 2 320 1 196 1 80 1 198 2 154 1 61 1 62 1 201 1 84 2 16 1 282 2 
1 1 84 1 32 1 282 1 3 1 57 1 196 1 167 1 5 1 198 1 
192 1 76 1 3 2 196 1 198 2 201 1 84 1 282 2 45 1 295 1 286 1 
268 1 317 1 228 1 76 3 3 5 196 2 5 1 198 4 201 2 84 2 308 1 282 5 295 1 286 1 266 1 189 1 
226 1 317 1 228 1 76 3 3 5 196 2 5 1 198 4 201 2 84 2 308 1 282 5 295 1 286 1 266 1 189 1 
296 1 171 1 76 1 33 2 251 1 3 1 320 1 79 2 196 1 5 1 60 1 198 1 131 1 325 1 201 1 84 1 282 1 262 1 
317 1 227 1 76 1 3 1 320 1 196 1 212 1 80 1 198 1 154 1 201 1 84 2 282 1 
131 1 235 1 20 1 321 1 93 1 
30 1 75 1 177 1 321 2 213 1 288 1 199 1 156 1 131 1 292 1 217 1 235 2 14 2 138 1 65 1 329 2 20 1 90 1 93 2 
325 1 271 1 235 1 280 1 33 1 20 1 79 1 6 1 93 1 
65 1 20 1 199 1 

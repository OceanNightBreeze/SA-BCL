#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver2()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver10()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | STATEMENT | 3006 | stmt -> ;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | CONDITION | 1125 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 866 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1069 | == -> !=
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
188 1 194 1 71 2 272 1 217 1 216 2 242 1 345 1 26 1 96 3 122 3 282 2 303 1 
194 1 211 1 60 2 268 1 340 1 272 2 217 1 216 3 242 3 345 2 4 1 122 7 96 7 249 2 282 2 98 1 303 1 188 1 223 1 257 1 10 2 285 1 71 2 75 1 26 4 135 1 33 1 35 1 
194 1 211 1 60 2 268 1 340 1 272 2 217 1 216 3 242 3 345 2 4 1 122 7 96 7 249 2 282 2 98 1 303 1 188 1 223 1 257 1 10 2 285 1 71 2 75 1 26 4 135 1 33 1 35 1 
194 1 211 1 60 2 268 1 340 1 272 2 217 1 216 3 242 3 345 2 4 1 122 7 96 7 249 2 282 2 98 1 303 1 188 1 223 1 257 1 10 2 285 1 71 2 75 1 26 4 135 1 33 1 35 1 
194 1 211 1 60 2 268 1 340 1 272 2 217 1 216 4 242 3 345 2 4 1 122 7 96 7 249 2 282 2 303 1 188 1 223 1 257 1 10 2 285 1 71 2 75 1 26 4 135 1 33 1 35 1 
188 1 10 1 60 1 268 1 285 1 71 1 217 1 216 1 242 1 26 1 33 1 96 2 122 2 249 1 282 1 98 1 303 1 
223 1 188 1 10 1 60 1 71 1 286 1 271 1 216 1 217 1 107 1 345 1 96 2 122 2 282 1 35 1 303 1 
194 1 211 1 268 1 60 1 340 1 90 1 272 2 216 3 217 1 242 3 345 1 122 7 96 7 249 1 282 2 98 1 303 1 188 1 10 1 284 1 285 1 71 2 26 5 33 1 
194 1 211 1 268 1 60 1 340 1 90 1 272 2 216 3 217 1 242 3 345 1 122 7 96 7 249 1 282 2 98 1 303 1 188 1 10 1 284 1 285 1 71 2 26 5 33 1 
9 1 158 1 171 1 129 1 308 1 74 1 161 1 318 1 228 1 54 1 140 1 191 1 84 1 301 1 
270 1 
20 1 256 1 9 2 228 2 54 1 270 1 151 1 148 1 
9 5 23 1 256 2 270 1 292 1 310 1 148 1 80 1 206 2 228 5 31 2 264 2 54 2 351 1 151 1 168 1 335 1 14 1 251 1 
226 1 270 1 151 1 
55 1 270 1 250 2 
318 2 129 2 308 2 300 1 191 2 140 2 301 2 161 1 
115 2 174 2 241 1 18 1 3 1 92 1 318 2 67 1 42 1 279 1 300 1 301 3 371 2 155 1 125 2 129 3 189 1 328 1 308 2 25 1 377 1 311 1 161 1 162 2 133 1 108 1 29 1 227 1 362 1 34 1 364 1 191 2 140 2 382 1 290 1 57 1 208 1 
318 1 158 1 171 1 129 1 308 1 74 1 191 1 140 1 301 1 161 1 
283 1 9 1 158 1 129 1 270 1 308 1 176 1 48 1 19 1 77 1 228 1 97 1 151 1 301 1 
9 2 158 1 129 1 270 1 308 1 176 1 48 1 19 1 77 1 318 1 228 2 151 1 140 1 191 1 301 1 
256 1 9 1 228 1 348 1 54 1 
256 1 9 2 228 2 54 1 270 1 151 1 330 1 148 1 
256 1 9 1 228 1 
129 2 0 1 308 2 318 1 50 1 300 2 140 1 191 1 301 2 
247 1 298 1 325 1 
125 1 129 1 174 1 25 1 241 1 18 1 3 1 179 1 67 1 362 1 42 1 300 1 382 1 301 1 371 1 290 1 
318 3 129 3 308 3 300 1 140 1 191 3 342 1 301 3 
318 1 158 1 129 1 308 1 74 1 191 1 301 1 
318 1 158 1 50 1 129 1 0 1 308 1 191 1 140 1 301 1 
87 1 115 1 0 1 174 1 176 1 342 1 241 1 18 1 19 1 3 1 92 1 318 3 67 1 42 1 300 1 301 4 371 1 202 1 125 1 9 1 158 1 129 4 189 1 328 1 25 1 308 3 48 1 311 1 77 1 161 1 162 2 133 1 108 1 227 1 228 1 362 1 333 1 34 1 364 1 382 1 140 2 191 3 290 1 208 1 
283 1 318 1 120 1 129 2 308 2 300 1 191 1 301 2 342 1 
87 1 9 1 158 1 129 3 0 1 270 1 308 3 48 1 176 1 342 2 19 1 77 1 318 3 228 1 6 1 140 1 191 3 301 3 202 1 
129 2 0 1 308 2 342 1 247 1 318 2 298 1 140 1 191 2 301 2 
125 1 129 1 174 1 25 1 18 1 241 1 3 1 67 1 362 1 42 1 300 1 382 1 301 1 371 1 290 1 
125 1 129 1 174 1 375 1 25 1 309 1 241 1 3 1 67 1 362 1 42 1 300 1 301 1 371 1 290 1 
368 1 115 4 92 1 247 2 181 1 298 2 183 1 154 1 155 2 325 2 22 1 189 1 328 1 162 2 313 1 133 1 108 2 190 1 111 1 230 1 364 1 383 1 208 1 16 1 
318 1 158 1 129 1 94 1 308 1 191 1 301 1 77 1 
226 1 300 1 
125 1 129 2 174 1 25 1 308 1 342 1 241 1 18 1 3 1 318 1 298 1 67 1 362 1 42 1 191 1 382 1 290 1 301 2 371 1 202 1 
283 1 129 5 44 1 0 1 308 5 342 2 219 1 318 4 120 1 300 1 191 4 140 1 301 5 202 1 
318 2 158 1 129 2 94 1 308 2 74 1 191 2 301 2 
352 1 297 1 187 1 350 1 240 2 7 2 68 1 
329 1 240 1 7 1 
240 1 7 1 85 1 
82 1 240 1 7 1 
82 1 240 1 7 1 
82 1 240 1 7 1 
240 1 7 1 
240 1 7 1 
187 1 68 1 
187 1 68 1 
187 1 68 1 
240 1 7 1 85 1 
240 1 7 1 85 1 
59 1 315 2 141 2 171 1 62 1 270 1 240 2 1 2 318 1 66 1 320 2 350 1 7 2 301 1 9 2 158 1 129 1 72 1 373 1 308 1 74 1 78 1 161 1 379 1 228 2 136 1 191 1 140 1 381 2 84 1 291 1 
315 1 141 1 214 1 240 1 1 1 318 2 369 1 319 1 347 1 320 1 123 1 300 1 7 1 301 2 9 1 129 2 308 2 329 1 357 1 312 1 228 1 191 2 381 1 291 1 
305 2 10 2 271 1 249 1 105 1 
10 1 60 1 249 1 
10 1 60 1 271 1 
305 1 10 3 142 1 271 1 249 2 105 1 
305 1 10 2 32 1 271 1 249 1 105 1 
170 1 214 1 292 1 270 2 147 1 148 1 369 1 278 1 183 1 123 1 370 1 151 1 250 3 322 2 154 1 251 2 326 1 256 1 9 5 80 3 206 1 31 1 228 5 264 1 230 1 55 1 54 4 332 1 167 2 383 1 233 2 209 1 
170 2 17 1 316 1 270 5 292 1 148 1 369 4 199 1 348 5 183 3 370 3 151 1 250 9 322 6 153 1 124 5 154 3 251 6 254 1 23 1 256 6 9 9 80 8 206 2 51 1 228 9 31 2 264 2 230 3 55 3 54 7 332 2 167 6 383 3 209 1 
170 1 270 3 147 1 369 1 278 1 183 1 370 1 151 1 322 2 250 4 154 1 251 2 9 3 23 1 80 3 206 1 31 1 228 3 264 1 230 1 55 2 54 2 332 1 167 2 383 1 233 1 
170 1 316 1 270 4 147 1 369 2 278 1 183 2 370 2 151 1 250 7 322 4 153 1 154 2 251 4 254 1 9 4 23 1 80 5 206 1 31 1 228 4 264 1 230 2 55 3 332 1 54 3 167 4 383 2 233 2 
236 1 
290 1 241 1 
67 1 299 1 290 1 132 1 384 2 241 3 
226 1 241 1 384 1 
344 1 241 1 
67 1 290 1 241 1 
366 1 241 1 
368 2 213 1 172 1 115 7 215 1 195 1 295 1 178 1 354 1 76 1 79 2 359 1 117 1 108 3 383 1 154 1 22 3 155 4 
368 5 115 31 172 2 213 2 269 1 195 1 295 2 178 5 117 1 92 1 218 1 349 1 183 3 370 3 281 3 201 1 154 4 252 4 155 16 22 10 100 1 304 1 102 1 189 1 354 2 76 1 162 2 79 3 359 1 133 1 108 15 230 3 364 1 383 4 
368 3 115 9 172 1 213 1 295 1 177 1 178 1 117 1 92 2 154 1 155 5 22 4 102 1 189 2 354 1 76 1 162 4 79 2 359 1 133 2 108 4 364 2 383 1 234 1 
368 2 213 1 172 1 115 7 195 1 295 1 178 1 354 1 76 1 79 2 359 1 117 1 108 3 383 1 154 1 22 3 155 4 
368 2 213 1 172 1 115 7 195 1 295 1 178 1 354 1 76 1 79 2 359 1 117 1 108 3 383 1 154 1 22 3 155 4 
237 1 174 1 145 1 89 2 241 1 296 2 118 1 65 1 345 2 42 1 122 1 96 1 280 1 371 1 282 1 125 1 71 1 25 1 106 2 207 1 362 1 192 1 290 1 
125 1 127 1 188 1 10 2 142 1 60 1 71 1 259 1 271 1 174 1 25 1 89 1 106 1 296 1 276 1 275 1 345 1 198 1 263 1 30 1 362 1 96 1 122 1 249 1 371 1 282 1 
142 1 60 1 174 1 271 1 89 1 216 1 217 1 296 1 275 1 276 1 345 1 122 2 96 2 249 1 371 1 282 1 303 1 125 1 188 1 127 1 10 2 71 1 159 1 259 1 25 1 106 1 26 1 30 1 263 1 362 1 
142 1 60 1 174 1 271 1 89 1 216 1 217 1 296 1 275 1 276 1 198 1 345 1 122 3 96 3 249 1 371 1 282 1 303 1 125 1 127 1 10 2 71 1 259 1 25 1 106 1 205 1 26 2 263 1 207 1 362 1 
142 1 60 1 174 1 271 1 89 1 216 1 217 1 296 1 276 1 345 1 198 1 122 2 96 2 249 1 371 1 303 1 125 1 10 2 259 1 25 1 106 1 205 1 26 2 263 1 362 1 
13 1 
145 1 292 1 293 2 294 1 148 3 241 1 244 2 95 2 42 2 97 1 151 1 250 2 301 1 43 2 251 2 253 1 256 6 9 5 101 1 158 1 258 1 308 1 48 1 160 1 12 1 206 1 264 1 55 2 362 1 169 1 58 2 270 2 174 2 116 1 63 1 176 1 19 1 65 1 321 1 371 2 324 1 125 2 283 1 129 1 130 4 25 1 77 1 80 2 378 1 228 5 31 1 332 1 231 2 289 2 290 1 
116 1 176 1 19 1 148 1 20 1 321 1 97 1 301 1 324 1 283 1 101 1 9 3 256 2 158 1 129 1 130 2 308 1 48 1 77 1 378 1 228 3 231 1 
270 1 116 1 176 1 19 1 148 1 20 1 321 1 97 1 151 1 301 1 324 1 283 1 256 1 101 1 9 3 158 1 129 1 130 3 308 1 48 1 77 1 378 1 228 3 289 1 
270 1 293 1 116 1 176 1 148 1 19 1 20 1 321 1 97 1 151 1 301 1 324 1 283 1 101 1 9 3 256 2 158 1 129 1 130 3 308 1 48 1 77 1 378 1 228 3 231 1 289 1 
86 1 292 1 293 4 148 3 244 2 95 2 97 1 151 5 301 1 251 1 43 2 9 5 256 7 101 1 158 1 45 1 204 1 308 1 48 1 12 1 206 1 264 1 55 2 169 1 58 2 270 5 116 1 176 1 19 1 20 1 321 1 324 1 283 1 70 1 129 1 130 6 77 1 80 1 378 1 27 1 228 5 31 1 231 4 289 4 
292 1 293 2 148 2 244 2 95 2 97 1 151 1 250 2 301 1 251 1 43 2 9 4 101 1 256 4 158 1 258 1 308 1 48 1 12 1 206 1 264 1 55 2 169 1 58 2 270 2 116 1 176 1 19 1 321 1 324 1 283 1 129 1 130 4 77 1 80 1 378 1 228 4 31 1 231 2 289 2 
58 2 86 1 270 1 292 1 293 2 116 1 176 1 148 2 19 1 244 2 95 2 321 1 97 1 151 1 301 1 43 2 251 1 324 1 283 1 256 4 101 1 9 4 158 1 129 1 130 4 204 1 308 1 48 1 77 1 80 1 378 1 12 1 206 1 27 1 228 4 31 1 264 1 55 2 231 2 289 2 169 1 
58 2 86 1 270 1 292 1 293 2 116 1 176 1 148 2 19 1 244 2 95 2 321 1 97 1 151 1 301 1 43 2 251 1 324 1 283 1 256 4 101 1 9 4 158 1 129 1 130 4 204 1 308 1 48 1 77 1 80 1 378 1 12 1 206 1 27 1 228 4 31 1 264 1 55 2 231 2 289 2 169 1 
58 2 339 2 270 1 292 1 293 2 116 1 176 1 148 2 19 1 5 1 95 2 321 1 97 1 151 1 250 2 301 1 251 1 324 1 372 2 283 1 256 4 101 1 9 4 158 1 129 1 130 4 204 1 308 1 48 1 77 1 80 1 378 1 262 1 206 1 228 4 31 1 264 1 231 2 289 2 114 1 169 1 
58 2 86 1 270 1 292 1 293 3 116 1 176 1 148 2 19 1 244 2 95 2 321 1 97 1 151 1 301 1 43 2 251 1 324 1 283 1 101 1 9 4 70 1 256 5 158 1 129 1 130 5 204 1 308 1 48 1 77 1 80 1 378 1 12 1 206 1 27 1 31 1 228 4 264 1 55 2 231 3 289 3 169 1 
58 2 86 1 270 1 292 1 293 3 116 1 176 1 148 2 19 1 244 2 95 2 321 1 97 1 151 1 301 1 43 2 251 1 324 1 283 1 101 1 9 4 70 1 256 5 158 1 129 1 130 5 204 1 308 1 48 1 77 1 80 1 378 1 12 1 206 1 27 1 31 1 228 4 264 1 55 2 231 3 289 3 169 1 
339 2 292 1 293 2 148 2 5 1 95 2 97 1 151 1 250 2 301 1 251 1 9 4 101 1 256 4 158 1 258 1 308 1 48 1 206 1 264 1 169 1 58 2 270 1 116 1 176 1 19 1 321 1 324 1 283 1 372 2 129 1 130 4 77 1 80 1 378 1 228 4 31 1 231 2 289 2 
115 2 174 8 145 1 342 1 241 3 245 1 196 1 92 2 65 1 198 1 318 1 42 2 279 2 301 1 371 7 155 1 125 8 128 1 129 1 159 1 189 2 328 2 308 1 25 2 377 1 355 1 162 4 133 2 108 1 110 1 227 1 362 2 137 1 380 1 364 2 191 1 290 2 16 1 208 2 
368 1 115 3 0 1 92 1 247 1 318 1 298 1 248 1 183 1 370 1 301 1 154 1 22 1 325 1 155 1 129 1 189 1 328 1 308 1 162 2 133 1 108 2 230 1 113 1 364 1 191 1 140 1 383 1 208 1 
115 2 328 1 189 1 178 1 162 2 133 1 92 1 247 1 298 1 111 1 183 1 364 1 154 1 22 1 325 1 16 1 208 1 155 2 
368 1 115 2 328 1 189 1 162 2 133 1 92 1 313 1 247 1 108 2 298 1 230 1 364 1 383 1 22 1 325 1 16 1 208 1 
368 1 115 4 178 1 92 1 247 2 298 2 183 1 370 1 154 1 155 2 325 2 22 2 189 1 328 1 162 2 133 1 108 2 230 1 364 1 383 1 208 1 16 1 
115 2 328 1 189 1 178 1 162 2 133 1 92 1 247 1 110 1 298 1 111 1 183 1 364 1 154 1 22 1 325 1 208 1 155 2 
368 1 115 2 328 1 189 1 162 2 133 1 92 1 313 1 247 1 108 2 110 1 298 1 230 1 364 1 383 1 22 1 325 1 208 1 
368 1 115 4 178 1 92 1 247 2 298 2 183 1 370 1 154 1 155 2 325 2 22 2 189 1 328 1 162 2 133 1 108 2 110 1 230 1 364 1 383 1 208 1 
368 1 115 4 178 1 92 1 247 2 298 2 183 1 370 1 154 1 155 2 325 2 22 2 189 1 328 1 162 2 133 1 108 2 230 1 364 1 383 1 208 1 
115 2 174 1 18 1 241 1 3 1 92 1 67 1 42 1 300 1 371 1 301 1 155 1 125 1 129 1 328 1 189 1 25 1 377 1 162 2 133 1 108 1 227 1 362 1 34 1 364 1 382 1 290 1 208 1 
115 2 174 1 241 1 3 1 243 1 92 1 67 1 42 1 300 1 371 1 301 1 155 1 125 1 129 1 328 1 189 1 25 1 375 1 309 1 377 1 162 2 133 1 108 1 227 1 362 1 364 1 290 1 208 1 
368 1 115 4 178 1 92 1 247 2 298 2 183 1 370 1 154 1 155 2 325 2 22 2 189 1 328 1 162 2 133 1 108 2 230 1 113 1 364 1 383 1 208 1 
368 1 115 4 174 1 178 1 18 1 241 1 3 1 92 1 247 2 298 2 67 1 183 1 370 1 371 1 301 1 154 1 22 2 325 2 155 2 125 1 129 1 159 1 328 1 189 1 25 1 162 2 133 1 108 2 314 1 230 1 362 1 34 1 364 1 382 1 290 1 383 1 208 1 
115 3 0 1 178 1 92 1 318 1 247 1 298 1 183 1 370 1 301 1 154 1 22 1 155 2 325 1 129 1 189 1 328 1 308 1 162 2 133 1 108 1 230 1 113 1 364 1 191 1 140 1 383 1 208 1 37 1 
368 2 115 6 295 1 117 1 92 1 247 1 298 1 300 2 154 1 22 2 155 3 325 1 189 1 328 1 354 1 76 1 162 2 79 1 359 1 133 1 108 3 226 1 364 1 383 1 208 1 16 1 
337 1 368 1 115 14 178 1 92 2 218 1 247 4 298 11 183 2 370 2 300 1 201 1 281 3 154 2 22 2 252 3 325 11 155 8 186 1 374 1 189 2 328 2 377 1 162 4 133 2 108 6 227 1 53 1 230 1 113 1 364 2 383 1 208 1 
235 1 115 2 174 1 342 1 241 1 18 1 3 1 92 1 179 1 277 1 247 1 318 1 67 1 42 1 300 1 371 1 301 2 202 1 155 1 125 1 129 2 189 1 328 1 25 1 308 1 377 1 162 2 133 1 108 1 28 1 227 1 362 1 113 1 364 1 382 1 191 1 290 1 208 1 
295 1 341 2 342 1 241 2 3 2 92 3 198 1 247 7 298 7 42 1 300 2 301 3 154 3 202 1 155 10 308 1 354 1 162 6 359 1 108 10 314 2 362 2 113 1 364 3 15 1 208 3 368 4 115 20 317 2 174 3 175 1 178 4 18 2 117 1 318 1 67 2 183 2 370 2 371 3 323 2 325 7 22 8 125 3 129 3 24 1 328 3 189 3 25 2 377 1 76 1 79 1 133 3 227 1 230 2 34 2 191 1 382 2 290 2 383 3 
368 3 115 19 178 3 92 2 218 1 346 1 183 3 370 3 221 1 201 1 281 1 154 3 252 2 155 9 22 6 99 1 126 1 222 1 306 1 189 2 331 2 162 4 360 2 133 2 108 10 288 1 230 3 364 2 383 3 234 1 
368 2 115 26 61 1 178 2 93 1 92 3 346 2 183 3 370 3 221 1 201 2 281 2 154 3 22 4 155 14 252 2 156 1 99 2 222 1 157 1 306 1 102 2 189 3 331 4 162 6 360 1 81 1 133 3 108 12 138 1 230 2 364 3 383 2 234 1 
295 1 92 3 93 1 346 2 201 3 154 5 155 20 252 4 156 1 302 1 99 1 157 1 306 1 102 1 354 1 162 6 359 1 360 1 108 21 364 3 368 4 115 41 61 1 178 4 117 1 218 1 183 4 370 4 221 1 281 3 22 8 126 1 222 1 189 3 76 1 331 4 79 1 133 3 81 1 230 4 138 1 383 5 234 1 
368 4 115 38 61 1 295 1 178 3 117 1 93 1 92 4 218 1 346 2 183 4 370 4 221 1 201 3 281 3 154 5 302 1 156 1 252 4 155 20 22 7 99 1 126 1 157 1 222 1 306 1 102 2 189 4 354 1 76 1 79 1 331 4 162 8 359 1 360 1 81 1 133 4 108 18 138 1 230 3 364 4 383 4 234 1 
368 7 115 52 61 1 295 1 178 7 117 1 93 1 92 2 218 2 346 1 183 7 370 7 221 1 201 2 281 4 154 8 156 1 252 4 155 27 22 14 99 1 157 1 222 1 306 1 102 1 189 2 354 1 76 1 79 1 331 4 162 4 359 1 360 1 81 1 133 2 108 25 53 2 138 1 230 7 364 2 383 8 234 1 
141 1 315 1 72 1 39 1 240 1 1 1 379 1 136 1 350 1 381 1 7 1 
329 1 357 1 
91 1 315 1 141 1 144 1 152 1 240 1 7 1 381 1 1 1 
59 1 315 1 141 1 171 1 62 1 270 1 240 1 1 1 318 1 66 1 320 2 350 1 7 1 301 1 9 1 158 1 129 1 72 1 373 1 308 1 74 1 78 1 161 1 379 1 228 1 136 1 191 1 140 1 381 1 84 1 291 1 
59 1 315 1 141 1 171 1 62 1 270 1 240 1 1 1 318 1 66 1 320 2 350 1 7 1 301 1 9 1 158 1 129 1 72 1 373 1 308 1 74 1 78 1 161 1 379 1 228 1 136 1 191 1 140 1 381 1 84 1 291 1 
59 1 315 1 141 1 171 1 62 1 270 1 240 1 1 1 318 1 66 1 320 2 350 1 7 1 301 1 9 1 158 1 129 1 72 1 373 1 308 1 74 1 78 1 161 1 379 1 228 1 136 1 191 1 140 1 381 1 84 1 291 1 
193 1 297 1 85 1 
193 1 297 1 85 1 
82 1 232 1 
297 1 82 1 232 1 
319 1 347 1 
315 1 141 1 214 1 62 1 240 1 1 1 246 1 318 2 369 1 319 1 347 1 320 1 123 1 300 1 7 1 301 2 9 1 129 2 308 2 329 1 78 1 357 1 312 1 228 1 54 1 381 1 191 2 
193 1 85 1 
297 1 82 1 232 1 
212 1 115 2 174 2 241 1 92 1 279 2 8 1 301 2 371 2 155 1 125 2 129 2 189 1 328 1 25 1 308 2 377 1 162 2 261 1 133 1 164 1 108 1 227 1 166 1 362 1 137 1 113 1 380 1 364 1 290 1 208 1 
125 1 38 1 174 1 145 1 25 1 89 1 241 1 65 1 52 1 362 1 42 1 280 1 290 1 371 1 
125 1 10 2 142 1 38 1 60 1 259 1 271 1 174 1 25 1 89 1 275 1 198 1 263 1 362 1 249 1 83 1 371 1 36 1 
125 2 10 2 142 1 38 1 60 1 159 1 259 1 271 1 174 2 25 1 89 1 275 1 198 1 263 1 362 1 249 1 83 1 371 2 36 1 
125 1 10 2 142 1 60 1 203 1 259 1 271 1 174 1 89 1 25 1 275 1 198 1 263 1 362 1 249 1 83 1 371 1 
343 1 
292 1 270 1 80 1 206 1 31 1 264 1 151 1 14 1 335 1 251 1 
317 1 270 5 80 5 119 2 55 5 230 2 183 2 370 2 167 5 322 5 250 10 154 2 383 2 210 1 251 5 
9 1 256 1 228 1 270 1 151 1 148 1 
292 1 174 4 145 1 63 1 241 1 148 2 65 1 184 1 42 2 371 4 253 1 251 2 125 4 23 1 256 4 9 3 103 1 25 1 160 2 80 2 134 2 206 2 31 2 228 3 264 2 362 1 332 2 266 1 290 1 
80 1 226 1 270 1 151 1 335 1 14 1 251 1 
292 1 270 2 148 1 244 1 151 1 250 1 43 1 251 1 256 1 9 1 80 1 12 1 206 1 31 1 228 1 264 1 55 1 
238 1 292 4 239 2 2 2 241 10 148 3 344 3 200 2 42 1 299 1 151 2 250 12 154 2 251 8 256 5 9 5 103 1 159 1 48 2 160 1 206 4 264 4 362 3 55 6 167 6 14 1 210 2 366 2 317 2 174 3 270 8 119 2 67 3 220 2 121 2 183 2 370 2 322 6 371 3 125 3 327 1 25 4 80 9 134 1 31 4 228 5 229 1 332 2 230 2 334 2 335 1 290 3 384 2 383 2 
88 1 61 1 292 2 270 5 148 1 93 1 119 2 183 2 370 2 151 2 250 6 322 5 201 1 281 1 154 2 252 1 251 5 156 1 157 1 9 1 256 1 160 1 358 1 80 8 81 1 206 2 228 1 31 2 264 2 332 1 55 3 230 2 167 5 383 2 210 1 
171 1 292 1 295 1 318 1 119 2 301 1 154 2 251 2 9 1 158 1 129 1 73 1 308 1 74 1 354 1 161 1 359 1 80 2 206 1 27 1 31 1 228 1 264 1 140 1 191 1 84 1 383 1 210 1 
115 1 174 1 18 1 241 1 3 1 92 1 318 2 67 1 42 1 300 1 371 1 301 3 125 1 129 3 328 1 189 1 308 2 25 1 311 1 161 1 162 2 133 1 108 1 227 1 362 1 34 1 364 1 191 2 140 2 382 1 290 1 208 1 
292 1 270 4 160 1 79 1 80 1 206 1 31 1 264 1 55 2 332 1 167 2 151 2 250 4 322 2 251 2 
315 1 319 1 11 1 1 1 149 1 
315 1 109 1 1 1 
287 1 315 1 1 1 
287 1 315 1 1 1 
287 1 315 1 1 1 
315 1 1 1 
240 1 7 1 
315 1 109 1 1 1 
315 1 109 1 1 1 
368 3 115 10 73 1 189 1 295 2 354 2 178 2 162 2 359 1 92 1 133 1 108 5 364 1 154 2 383 2 234 1 22 5 155 5 
115 2 189 1 178 1 162 2 133 1 92 1 183 1 364 1 154 1 234 1 155 2 22 1 
368 1 115 4 189 1 178 1 162 2 133 1 92 1 108 2 230 1 183 1 370 1 364 1 383 1 154 1 22 2 234 1 155 2 
126 1 102 1 368 1 115 3 189 3 295 1 354 1 178 1 162 6 41 1 133 3 92 3 108 2 364 3 234 1 22 2 155 1 
368 7 115 34 269 1 295 3 178 5 117 1 41 1 92 5 218 1 349 1 183 3 370 3 201 1 281 3 154 5 252 4 155 16 22 12 304 1 126 1 102 2 189 5 354 3 76 1 79 1 162 10 359 2 163 1 133 5 108 18 230 3 364 5 383 5 234 1 
102 1 368 2 115 8 189 2 295 1 178 1 354 1 76 1 79 1 162 4 359 1 117 1 133 2 92 2 108 4 364 2 383 1 154 1 155 4 22 3 
368 2 115 6 295 1 354 1 76 1 79 1 359 1 117 1 108 3 226 1 154 1 383 1 22 2 155 3 
368 1 115 4 189 1 178 1 162 2 163 1 133 1 92 1 108 2 230 1 183 1 370 1 364 1 383 1 154 1 22 2 155 2 
368 1 115 7 178 1 218 1 108 4 230 1 183 1 370 1 201 1 281 1 383 1 154 1 252 2 155 3 22 2 
337 1 368 5 115 23 295 2 178 4 117 1 41 1 218 1 92 2 183 2 370 2 281 2 154 3 22 9 155 11 252 2 102 2 189 2 354 2 76 1 79 1 162 4 359 1 133 2 108 12 53 1 230 2 364 2 383 3 
108 1 115 1 252 1 
115 1 281 1 155 1 
368 2 115 6 317 1 189 1 178 1 162 2 92 1 133 1 163 1 108 3 230 1 183 1 370 1 364 1 154 1 383 1 155 3 22 3 
368 1 115 12 61 1 178 1 92 1 93 1 183 2 370 2 281 1 201 1 154 2 252 1 155 6 156 1 22 2 157 1 189 1 162 2 133 1 81 1 108 6 230 2 364 1 383 2 234 1 
368 1 115 6 295 1 354 1 178 1 359 1 108 3 154 1 383 1 155 3 22 2 
102 1 368 1 115 3 189 1 295 1 178 1 354 1 76 1 162 2 117 1 41 1 133 1 92 1 108 2 364 1 155 1 22 2 
368 2 115 8 295 1 117 1 92 1 281 1 201 1 154 1 252 1 155 4 22 2 157 1 189 1 354 1 76 1 79 1 162 2 359 1 133 1 108 4 364 1 383 1 234 1 
368 2 115 11 295 1 178 1 117 1 92 2 218 1 183 1 370 1 201 1 281 1 154 2 252 2 155 6 22 3 157 1 189 2 354 1 76 1 79 1 162 4 359 1 133 2 163 1 108 5 364 2 383 1 234 1 
368 3 115 19 61 1 295 1 178 1 117 1 92 3 93 1 183 2 370 2 281 1 201 1 154 3 252 1 155 9 156 1 22 4 157 1 102 1 189 3 354 1 76 1 79 1 162 6 359 1 163 1 81 1 133 3 108 10 230 2 364 3 383 3 234 1 
368 3 115 17 61 1 295 1 178 2 117 1 92 3 93 1 183 2 370 2 281 1 201 1 154 3 252 1 155 10 156 1 22 5 157 1 102 1 189 3 354 1 76 1 79 1 162 6 359 1 163 1 133 3 81 1 108 7 230 1 364 3 383 2 234 1 
368 2 115 8 295 1 117 1 92 1 281 1 201 1 154 1 252 1 155 4 22 2 157 1 189 1 354 1 76 1 79 1 162 2 359 1 133 1 108 4 364 1 383 1 234 1 
368 1 115 12 61 1 178 1 92 1 93 1 183 2 370 2 281 1 201 1 154 2 252 1 155 6 156 1 22 2 157 1 189 1 162 2 133 1 81 1 108 6 230 2 364 1 383 2 234 1 
368 3 115 18 61 1 295 1 178 2 117 1 93 1 92 4 183 2 370 2 201 1 281 1 154 3 252 1 155 10 156 1 22 5 157 1 102 2 189 4 354 1 76 1 79 1 162 8 359 1 81 1 163 1 133 4 108 8 230 1 364 4 383 2 234 1 
368 3 115 16 61 1 178 3 93 1 92 4 183 3 370 3 201 1 281 1 154 3 252 1 155 9 156 1 22 6 126 1 157 1 102 2 189 4 162 8 81 1 133 4 108 7 230 2 364 4 383 2 234 1 
368 3 115 7 295 3 354 3 178 3 76 1 359 1 117 2 108 4 383 1 154 1 22 6 155 3 
368 3 115 18 61 1 295 1 178 1 117 1 93 1 92 4 183 2 370 2 201 1 281 1 154 3 252 1 155 10 156 1 22 4 126 1 157 1 102 2 189 4 354 1 76 1 79 1 162 8 359 1 81 1 133 4 108 8 230 1 364 4 383 2 234 1 
283 1 338 1 129 1 120 1 308 1 300 1 301 1 
283 1 338 1 307 1 129 1 308 1 146 1 274 1 120 1 112 1 265 1 300 1 301 1 
125 4 65 1 353 1 362 1 159 1 145 1 174 4 42 1 25 1 290 1 371 4 241 1 273 1 
125 2 255 1 24 1 174 2 25 2 131 1 241 1 225 1 150 1 134 1 67 1 362 1 371 2 290 1 
125 1 10 1 60 1 362 1 259 1 271 1 174 1 42 1 25 1 371 1 
125 2 198 1 166 1 362 1 159 1 174 2 25 1 380 1 290 1 371 2 241 1 
125 5 128 1 353 1 159 1 145 1 174 5 25 2 355 1 241 3 65 1 134 1 362 2 42 1 380 1 371 4 290 2 
125 5 353 1 159 1 145 1 174 5 25 2 47 1 355 1 241 3 65 1 134 1 362 2 42 1 380 1 371 4 290 2 
125 1 65 1 226 1 362 1 145 1 174 1 42 1 25 1 290 1 371 1 241 1 
125 1 129 2 174 1 25 1 308 1 342 1 241 1 18 1 3 1 318 1 67 1 362 1 42 1 300 1 191 1 290 1 301 2 371 1 
366 1 174 1 342 1 18 1 241 3 19 1 3 1 318 2 67 2 220 1 300 1 371 1 301 2 125 1 158 1 129 2 308 2 25 1 77 1 134 1 362 1 191 1 290 2 
366 1 174 2 342 1 241 3 19 1 273 1 3 1 318 2 67 2 220 1 300 1 371 2 301 2 125 2 158 1 129 2 308 2 25 1 309 1 77 1 134 1 362 1 191 1 290 2 
125 3 366 1 9 2 256 1 270 1 174 3 376 1 25 1 104 1 48 1 241 4 273 1 344 1 134 1 67 1 220 1 228 2 362 1 42 1 151 1 290 1 371 3 384 1 
125 3 366 1 9 2 256 1 270 1 174 3 25 1 48 1 241 4 273 1 344 1 134 1 200 1 67 1 220 1 228 2 362 1 42 1 151 1 290 1 371 3 384 1 
125 1 245 1 362 1 174 1 25 1 371 1 
125 7 255 1 128 1 159 1 174 7 25 3 355 1 241 3 225 1 356 1 245 1 196 1 198 1 67 1 362 2 42 2 299 1 279 1 380 1 371 6 290 2 
295 1 341 1 342 1 241 1 3 1 92 2 247 1 298 1 300 2 301 2 154 1 155 3 159 1 308 1 354 1 162 4 359 1 164 1 108 3 314 1 362 1 113 1 364 2 208 2 368 2 115 6 174 1 18 1 117 1 318 1 67 1 371 1 22 2 325 1 125 1 129 2 328 2 189 2 25 1 76 1 79 1 133 2 34 1 382 1 191 1 290 1 383 1 
270 1 174 1 292 2 239 1 2 1 241 2 148 1 344 1 200 1 42 1 151 1 371 1 251 1 125 1 9 3 256 2 103 1 48 1 80 1 206 2 31 2 228 3 264 2 54 1 334 1 335 1 14 1 384 1 
125 2 159 1 174 2 25 2 241 2 245 1 67 1 229 1 362 1 299 1 371 2 290 1 384 1 
125 1 129 2 174 1 25 1 308 1 309 1 342 1 241 1 3 1 318 1 67 1 362 1 42 1 300 1 191 1 290 1 301 2 371 1 
125 1 255 1 174 1 25 2 241 1 225 1 356 1 134 1 67 1 362 1 299 1 371 1 290 1 
261 1 367 1 21 1 212 1 129 1 139 1 308 1 8 1 301 1 
64 1 367 1 224 1 
21 1 367 1 180 1 139 1 300 1 
87 1 367 1 9 2 158 1 143 1 224 1 270 1 48 1 176 1 77 1 19 1 64 1 21 2 180 2 228 2 54 1 139 2 300 1 151 1 
188 1 71 1 122 1 96 1 216 1 217 1 282 1 303 1 
223 1 71 1 272 1 217 2 216 3 242 1 26 2 165 1 96 4 122 4 185 1 282 1 303 2 98 1 
365 1 188 1 71 1 90 1 216 1 217 1 26 1 96 2 122 2 56 1 282 1 303 1 
188 1 223 2 71 1 46 1 216 1 217 1 165 2 96 3 122 3 185 1 282 1 303 1 
336 1 260 1 49 2 216 2 
69 1 188 1 71 1 122 1 96 1 282 1 
188 1 26 1 71 1 122 2 96 2 340 1 216 1 217 1 282 1 303 1 
363 1 
188 1 71 1 122 1 96 1 216 1 217 1 282 1 303 1 
226 1 216 1 217 1 303 1 
71 1 122 1 96 1 216 1 217 1 282 1 303 1 
296 1 345 1 122 1 
188 1 223 2 71 1 40 1 216 1 217 1 165 1 96 3 122 3 282 1 185 1 303 1 
26 1 268 1 71 1 122 2 96 2 216 1 217 1 282 1 303 1 
188 1 10 1 60 1 285 1 71 1 122 1 96 1 249 1 216 1 282 1 242 1 
188 1 71 1 122 1 96 1 216 1 282 1 303 1 
188 1 71 1 122 1 96 1 217 1 282 1 303 2 
188 1 71 2 173 1 216 1 197 1 361 1 96 2 122 2 282 2 303 1 
188 1 211 1 71 1 340 1 272 1 217 1 216 2 242 1 26 2 96 3 122 3 282 1 303 1 
188 1 10 2 142 1 60 1 71 1 271 1 216 1 217 1 26 1 182 1 96 2 122 2 249 1 282 1 303 1 
188 1 267 1 268 1 71 2 272 1 217 1 216 2 242 1 26 2 96 4 122 4 282 2 303 1 
223 1 188 1 26 1 71 1 122 3 96 3 340 1 216 1 217 1 282 1 303 1 
272 1 216 1 98 1 242 1 
216 1 303 1 

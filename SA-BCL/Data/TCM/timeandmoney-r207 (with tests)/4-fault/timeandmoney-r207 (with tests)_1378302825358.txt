#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 326 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 326 78 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 64 41 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 64 41 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 64 41 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 64 41 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 64 41 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 64 41 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 64 41 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 64 41 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 64 41 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 64 41 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 64 41 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 64 41 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 134 298 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 4646 | return null
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | ASSIGN | 2439 | = null
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I | ASSIGN | 5953 | = null
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
28 2 174 2 146 2 149 1 80 1 175 2 340 2 259 1 35 2 128 5 154 1 179 1 160 9 161 9 304 1 324 6 209 3 232 1 115 4 49 1 237 2 330 1 254 1 332 1 213 1 294 1 142 1 27 1 
28 2 174 2 146 2 149 1 80 1 175 2 340 2 259 1 35 2 128 5 154 1 179 1 160 9 161 9 304 1 324 6 209 3 232 1 115 4 49 1 237 2 330 1 254 1 332 1 213 1 294 1 142 1 27 1 
28 2 174 2 146 2 149 1 80 1 175 2 340 2 259 1 35 2 128 6 154 1 179 1 160 10 161 10 304 1 324 7 209 4 232 1 115 5 49 1 237 2 330 1 254 1 332 1 213 1 294 1 142 1 27 1 
28 2 174 2 146 2 149 1 80 1 175 2 340 2 259 1 35 1 128 4 154 1 179 1 160 7 161 7 304 1 324 4 209 2 232 1 115 3 237 2 330 1 254 1 332 1 213 1 294 1 142 1 27 1 
28 1 174 1 160 4 175 1 161 4 304 1 324 3 209 1 340 1 35 2 232 1 115 2 49 1 128 3 237 1 330 1 179 1 27 1 
190 1 174 1 146 1 160 2 175 1 161 2 304 1 340 1 128 1 355 1 219 1 154 1 237 1 179 1 294 1 27 1 
146 1 160 3 161 3 304 1 324 1 340 2 259 1 209 1 115 1 128 2 237 2 179 1 27 1 
28 1 174 1 146 1 175 1 259 1 340 2 35 2 128 5 179 1 301 1 160 9 161 9 304 1 324 7 209 3 90 1 232 1 115 4 49 1 237 2 330 1 332 1 213 1 27 1 
28 1 174 1 146 1 175 1 259 1 340 2 35 2 128 5 179 1 301 1 160 9 161 9 304 1 324 7 209 3 90 1 232 1 115 4 49 1 237 2 330 1 332 1 213 1 27 1 
225 1 240 1 183 1 
225 1 289 2 305 1 
57 2 30 2 290 2 97 2 87 2 303 2 26 1 282 1 
77 1 57 2 30 2 118 1 119 1 193 1 97 3 241 1 282 1 216 1 125 1 342 1 8 1 155 1 39 2 133 2 266 2 66 2 267 1 158 1 159 1 68 1 285 1 18 1 350 1 87 2 135 1 89 2 303 3 47 1 290 2 165 1 187 1 166 1 117 1 139 1 26 1 
5 1 57 1 30 1 290 1 210 1 97 1 87 1 338 1 303 1 282 1 
144 1 225 1 240 1 97 1 249 1 303 1 46 1 290 1 178 1 244 1 210 1 52 1 345 1 263 1 
30 1 57 1 144 1 225 1 240 1 97 1 249 2 87 1 303 1 46 2 290 1 210 1 52 1 345 1 263 1 
326 1 268 1 249 1 46 1 
251 1 291 1 225 1 240 1 268 1 249 2 323 1 46 2 
291 1 249 1 46 1 
30 1 57 1 268 1 97 1 249 1 338 1 87 1 303 1 46 1 282 1 5 1 290 1 210 1 84 1 
225 1 
251 1 243 1 291 1 225 1 240 1 268 1 249 2 46 2 
335 1 172 2 56 1 247 2 225 1 240 1 268 2 249 5 2 1 196 1 277 1 46 5 251 1 71 1 291 2 234 1 37 1 317 2 75 1 
26 1 183 1 
223 1 30 1 57 1 97 2 87 1 303 2 20 1 290 2 26 2 
36 1 145 1 176 1 
133 1 266 1 18 1 97 1 241 1 135 1 89 1 303 1 47 1 165 1 342 1 8 1 236 1 139 1 155 1 26 1 
133 1 266 1 30 1 57 1 79 1 18 1 97 2 241 1 135 1 89 1 303 2 47 1 314 1 290 1 165 1 342 1 36 1 8 1 139 1 155 1 
223 1 30 4 57 4 79 2 97 5 87 1 303 5 34 1 110 1 297 1 314 1 290 5 178 1 26 1 
5 1 57 2 30 2 290 2 210 1 97 2 242 1 303 2 
57 3 30 3 79 1 290 3 97 3 87 1 303 3 26 1 
5 1 57 1 30 1 290 1 210 1 97 1 303 1 
20 1 223 1 57 1 30 1 290 1 210 1 97 1 87 1 303 1 
57 3 30 3 118 1 119 1 79 1 144 1 193 1 97 4 241 1 313 1 282 1 314 1 342 1 8 1 155 1 345 1 263 1 39 2 133 1 15 1 223 1 266 1 66 1 267 1 158 1 68 1 18 1 350 1 87 2 249 1 135 1 89 1 303 4 46 1 47 1 165 1 290 3 187 1 166 1 210 1 117 1 139 1 52 1 26 1 
297 1 57 1 30 1 290 2 79 1 178 1 97 2 303 2 26 1 
205 1 223 1 15 1 30 3 57 3 79 2 144 1 225 1 97 3 87 1 249 1 303 3 46 1 314 1 290 3 210 1 52 1 345 1 263 1 
223 1 30 2 57 2 79 1 97 2 87 1 303 2 176 1 290 2 36 1 
133 1 266 1 18 1 97 1 241 1 135 1 89 1 303 1 47 1 165 1 342 1 8 1 139 1 155 1 26 1 
133 1 266 1 18 1 97 1 241 1 273 1 135 1 89 1 303 1 342 1 8 1 139 1 155 1 26 1 65 1 
173 1 119 1 118 2 32 1 145 2 176 2 124 1 125 2 126 1 36 2 12 1 39 2 66 4 267 1 158 1 248 1 270 1 187 1 166 1 233 1 117 1 51 1 358 1 359 1 
57 1 30 1 290 1 210 1 97 1 52 1 303 1 242 1 
352 1 253 1 
352 1 253 1 
229 1 278 1 
229 1 278 1 
229 1 278 1 
352 1 253 1 60 1 
352 1 253 1 60 1 
352 1 253 1 351 1 
151 1 229 1 352 2 253 2 180 1 278 1 
352 1 253 1 60 1 
352 1 253 1 185 1 
352 1 253 1 185 1 
352 1 253 1 185 1 
57 2 30 2 280 1 97 2 177 1 83 1 203 1 157 1 181 1 224 1 321 1 43 1 249 1 303 2 351 1 46 1 114 1 352 1 290 2 73 1 138 1 253 1 26 1 293 1 
40 1 157 2 181 2 43 2 225 1 249 2 215 1 184 1 325 1 46 2 352 2 177 1 252 1 253 2 138 2 130 1 83 3 180 1 143 2 
28 1 174 1 175 1 
174 1 355 1 175 1 
28 2 136 1 174 3 102 1 355 1 169 1 
28 1 174 2 102 1 116 1 355 1 169 1 
28 1 174 2 102 1 355 1 169 2 
172 1 191 1 173 1 280 1 192 2 240 1 2 1 197 2 284 1 101 1 37 3 104 1 203 1 317 1 247 1 268 4 225 2 249 5 302 1 289 3 275 1 305 1 277 2 46 5 251 1 114 1 291 1 51 1 356 1 331 2 358 1 359 1 
78 1 326 1 7 1 268 2 249 2 46 2 262 1 
172 1 173 1 192 1 240 1 197 2 284 1 37 3 104 1 317 1 247 1 225 3 268 2 249 3 302 1 275 1 289 4 305 2 46 3 277 2 114 1 71 1 356 1 51 1 331 2 358 1 359 1 
172 1 173 2 192 2 240 1 195 1 197 4 284 1 37 5 104 2 317 1 247 1 225 4 268 3 249 4 302 1 289 7 275 1 305 3 46 4 277 4 114 2 71 1 356 1 51 2 331 4 92 1 171 1 358 2 359 2 
18 1 183 1 348 1 
134 1 18 1 
271 1 
342 1 18 1 135 1 
343 1 18 1 
342 1 18 1 
342 1 18 3 103 1 135 1 299 1 348 2 
173 1 66 7 118 3 32 2 270 3 339 1 82 1 283 1 186 1 152 1 353 1 125 4 308 1 141 2 220 1 359 1 204 1 
173 1 66 7 118 3 32 2 270 3 339 1 82 1 283 1 186 1 152 1 353 1 125 4 308 1 141 2 220 1 359 1 204 1 
173 1 66 7 118 3 32 2 270 3 309 1 339 1 82 1 283 1 186 1 152 1 353 1 125 4 308 1 141 2 220 1 359 1 204 1 
173 4 118 15 32 5 123 1 4 1 82 2 339 2 100 1 283 1 152 2 125 16 104 3 220 1 204 2 39 2 66 31 267 1 270 10 111 3 113 1 353 1 186 5 187 1 306 1 166 1 117 1 91 1 308 1 188 4 51 3 141 3 358 3 359 4 55 1 
173 1 118 4 32 3 58 1 82 1 339 1 283 1 152 1 125 5 220 1 320 1 204 1 39 4 66 9 267 2 270 4 186 1 187 2 166 2 117 2 91 1 308 1 141 2 359 1 
28 1 174 2 146 1 214 1 194 1 175 1 340 1 128 1 201 1 155 1 179 1 260 1 133 1 266 1 16 1 17 1 160 2 89 1 70 1 161 2 304 1 324 1 136 1 21 1 355 1 139 1 237 1 53 1 27 1 76 1 
28 1 255 1 174 2 146 1 214 1 194 1 175 1 340 1 128 1 201 1 155 1 260 1 133 1 349 1 266 1 16 1 160 3 89 1 208 1 161 3 304 1 324 2 136 1 21 1 355 1 139 1 237 1 53 1 27 1 76 1 
255 1 28 1 174 2 146 1 194 1 175 1 128 1 201 1 155 1 260 1 133 1 349 1 266 1 160 2 89 1 161 2 304 1 324 2 136 1 21 1 355 1 139 1 53 1 27 1 76 1 
133 1 266 1 279 1 108 1 146 2 18 1 120 1 160 1 241 1 194 2 208 1 89 1 161 1 228 1 340 1 342 1 201 2 139 1 155 1 237 1 53 2 25 1 261 1 
28 1 255 1 174 2 146 1 214 1 194 1 175 1 340 1 201 1 155 1 179 1 260 1 133 1 266 1 16 1 17 1 160 1 89 1 161 1 136 1 21 1 355 1 139 1 237 1 53 1 76 1 
346 1 
172 1 120 1 241 2 310 1 2 1 284 1 127 1 342 1 37 1 155 1 105 1 63 1 317 1 64 1 133 2 266 2 41 1 18 1 247 1 249 2 89 2 228 1 46 2 277 1 251 1 291 2 139 1 74 1 
41 1 249 1 105 1 310 1 64 1 46 1 
41 1 249 1 105 1 310 1 64 1 46 1 
41 1 249 1 105 1 310 1 64 1 46 1 
251 1 41 1 243 1 291 1 249 2 105 1 310 1 64 1 46 2 
172 1 41 1 247 1 249 1 105 1 310 1 317 1 2 1 64 1 46 1 
41 1 249 1 105 1 310 1 64 1 46 1 
41 1 249 1 105 1 310 1 64 1 46 1 
41 1 249 1 105 1 310 1 64 1 46 1 
41 1 249 1 105 1 310 1 64 1 46 1 
41 1 249 1 105 1 310 1 64 1 46 1 
172 1 41 1 247 1 249 1 105 1 310 1 317 1 2 1 64 1 46 1 
173 1 119 1 32 2 118 3 145 1 176 1 283 1 152 1 125 3 126 1 36 1 220 1 204 1 39 2 66 6 267 1 158 1 270 2 183 1 187 1 166 1 117 1 308 1 141 1 26 2 359 1 
173 2 32 1 118 6 119 1 145 11 193 1 100 1 176 4 125 8 36 11 104 2 13 1 39 4 86 1 66 14 267 2 158 2 159 1 287 1 270 2 111 3 113 1 186 1 187 2 166 2 24 1 117 2 188 3 51 2 26 1 93 1 358 1 359 1 
57 1 30 1 119 1 79 1 118 1 97 2 193 1 241 1 176 1 258 1 314 1 125 1 342 1 8 1 129 1 155 1 222 1 133 1 39 2 266 1 86 1 66 2 267 1 158 1 159 1 18 1 135 1 89 1 303 2 47 1 165 1 290 1 166 1 187 1 236 1 139 1 117 1 26 1 
57 1 145 7 147 1 193 1 97 3 241 1 3 2 283 1 152 1 314 1 8 2 104 2 155 2 204 1 66 20 158 3 159 1 18 2 112 1 290 1 165 2 166 3 167 1 117 3 26 2 255 1 30 1 173 3 32 4 118 10 79 1 119 3 176 7 125 10 341 2 342 2 36 7 220 1 221 2 133 3 39 6 266 3 86 1 267 3 350 2 270 8 135 2 89 3 303 3 47 2 230 2 186 4 187 3 139 2 308 1 51 2 141 1 358 2 359 3 
77 2 255 1 57 1 30 1 79 1 119 2 118 1 120 1 97 1 193 1 122 1 241 2 125 1 126 1 342 2 155 2 10 1 300 1 133 8 39 4 266 7 66 2 267 2 158 2 159 1 18 3 44 1 70 1 89 8 303 1 276 1 228 1 290 1 187 2 166 2 50 1 139 2 117 2 238 1 
30 1 57 1 173 1 32 1 119 1 118 2 145 1 97 1 176 1 125 1 36 1 104 1 39 2 223 1 86 1 66 3 267 1 158 1 270 1 87 1 303 1 290 1 187 1 166 1 117 1 51 1 211 1 358 1 359 1 
39 2 66 2 173 1 119 1 267 1 158 1 145 1 270 1 176 1 124 1 186 1 125 2 126 1 36 1 166 1 187 1 117 1 51 1 
39 2 66 2 32 1 119 1 267 1 118 2 158 1 145 1 270 1 176 1 126 1 36 1 166 1 187 1 233 1 117 1 358 1 359 1 
173 1 119 1 118 2 32 1 145 2 176 2 125 2 126 1 36 2 104 1 39 2 66 4 267 1 158 1 270 2 186 1 187 1 166 1 117 1 51 1 358 1 359 1 
39 2 66 2 173 1 119 1 267 1 158 1 145 1 270 1 276 1 176 1 124 1 186 1 125 2 36 1 166 1 187 1 117 1 51 1 
39 2 66 2 32 1 119 1 267 1 118 2 158 1 145 1 270 1 276 1 176 1 36 1 166 1 187 1 233 1 117 1 358 1 359 1 
173 1 119 1 118 2 32 1 145 2 176 2 125 2 36 2 104 1 39 2 66 4 267 1 158 1 270 2 276 1 186 1 187 1 166 1 117 1 51 1 358 1 359 1 
173 1 119 1 118 2 32 1 145 2 176 2 125 2 36 2 104 1 39 2 66 4 267 1 158 1 270 2 186 1 187 1 166 1 117 1 51 1 358 1 359 1 
119 1 118 1 97 1 193 1 241 1 125 1 342 1 8 1 155 1 133 1 39 2 266 1 66 2 267 1 158 1 159 1 350 1 18 1 135 1 89 1 303 1 47 1 165 1 166 1 187 1 139 1 117 1 26 1 
39 2 133 1 266 1 66 2 118 1 267 1 119 1 158 1 159 1 18 1 193 1 97 1 241 1 273 1 135 1 89 1 303 1 125 1 342 1 187 1 166 1 8 1 117 1 139 1 155 1 26 1 333 1 65 1 
173 1 119 1 118 2 32 1 145 2 176 2 125 2 36 2 104 1 39 2 86 1 66 4 267 1 158 1 270 2 186 1 187 1 166 1 117 1 51 1 358 1 359 1 
173 1 32 1 118 2 119 1 145 2 97 1 3 1 176 2 125 2 342 1 36 2 8 1 104 1 155 1 133 1 39 2 266 1 66 4 267 1 158 1 350 1 18 1 270 2 135 1 89 1 70 1 303 1 186 1 47 1 165 1 166 1 187 1 139 1 117 1 51 1 358 1 359 1 
30 1 57 1 173 1 118 1 119 1 145 1 97 1 312 1 176 1 125 2 36 1 104 1 39 2 223 1 86 1 66 3 267 1 158 1 270 1 87 1 303 1 186 1 290 1 187 1 166 1 117 1 51 1 358 1 359 1 
173 3 32 3 118 10 256 1 281 1 100 1 62 1 125 9 104 3 319 2 347 1 320 1 39 4 265 1 66 19 267 2 270 6 19 1 111 1 113 1 186 3 187 2 166 2 328 2 117 2 188 2 51 3 140 1 358 3 359 3 
29 1 173 3 32 2 118 12 256 2 281 1 62 1 125 14 9 1 153 1 104 3 11 1 319 4 347 1 320 1 39 6 66 26 267 3 270 4 19 2 69 1 111 2 113 2 186 2 187 3 166 3 235 1 328 1 91 2 117 3 188 2 51 3 358 2 359 2 
29 1 173 5 32 4 118 21 256 1 281 1 100 1 283 1 62 1 152 1 125 20 9 1 153 1 104 4 11 1 220 1 319 4 347 1 320 1 204 1 39 6 66 41 267 3 270 8 19 2 69 1 111 3 113 3 186 4 187 3 166 3 235 1 328 1 91 1 117 3 168 1 308 1 188 4 51 4 140 1 141 1 358 4 359 5 
29 1 173 5 32 4 118 18 256 1 281 1 100 1 283 1 62 1 152 1 125 20 9 1 153 1 104 4 11 1 220 1 319 4 347 1 320 1 204 1 39 8 66 38 267 4 270 7 19 2 69 1 111 3 113 3 186 3 187 4 166 4 235 1 328 1 91 2 117 4 168 1 308 1 188 4 51 4 140 1 141 1 358 3 359 4 
29 1 173 8 32 7 118 25 256 1 281 1 100 2 283 1 62 1 152 1 125 27 9 1 153 1 104 7 11 1 220 1 319 4 347 1 320 1 204 1 39 4 66 52 267 2 270 14 19 1 69 1 111 4 113 2 186 7 187 2 166 2 235 1 24 2 328 1 91 1 117 2 308 1 188 4 51 7 141 1 358 7 359 8 
157 1 352 1 231 1 181 1 43 1 138 1 253 1 180 1 184 1 325 1 
73 1 351 1 
31 1 157 1 352 1 327 1 181 1 43 1 138 1 253 1 182 1 
318 1 60 1 
151 1 292 1 185 1 
40 1 157 1 181 1 43 1 225 1 249 1 184 1 325 1 46 1 352 1 177 1 252 1 253 1 138 1 130 1 83 2 180 1 143 1 
40 1 157 1 181 1 43 1 225 1 249 1 184 1 325 1 46 1 352 1 177 1 252 1 253 1 138 1 130 1 83 2 180 1 143 1 
40 1 157 1 181 1 43 1 225 1 249 1 184 1 325 1 46 1 352 1 177 1 252 1 253 1 138 1 130 1 83 2 180 1 143 1 
151 1 318 1 60 1 
151 1 318 1 60 1 
292 1 185 1 
151 1 292 1 185 1 
321 1 224 1 
30 2 57 2 280 1 97 2 344 1 83 1 203 1 157 1 181 1 224 1 321 1 43 1 268 1 249 1 303 2 351 1 46 1 114 1 352 1 290 2 252 1 73 1 138 1 253 1 26 1 293 1 143 1 
95 1 77 2 119 1 118 1 97 2 193 1 125 1 342 1 155 1 10 1 246 1 133 2 39 2 86 1 266 2 66 2 267 1 158 1 159 1 18 1 89 2 274 1 303 2 227 1 290 2 166 1 187 1 50 1 139 1 117 1 170 1 
133 2 85 1 28 1 255 1 266 2 16 1 174 2 272 1 175 1 89 2 70 1 136 1 21 1 355 1 139 1 155 1 189 1 53 1 76 1 
133 1 28 1 255 1 266 1 16 1 174 2 286 1 272 1 175 1 89 1 136 1 21 1 355 1 139 1 155 1 53 1 76 1 
133 1 85 1 266 1 336 1 279 1 18 1 120 1 241 1 89 1 228 1 342 1 139 1 155 1 53 1 
133 1 85 1 28 1 255 1 266 1 16 1 174 2 272 1 175 1 89 1 136 1 21 1 355 1 139 1 189 1 155 1 53 1 76 1 
121 1 
335 1 56 1 37 1 225 1 240 1 183 1 277 1 
172 1 247 1 240 1 225 2 249 1 2 1 150 1 289 1 46 1 277 1 305 1 251 1 291 1 218 1 37 1 317 1 131 1 
172 1 133 1 266 1 134 1 18 1 247 1 241 1 135 1 2 1 89 1 342 1 103 1 139 2 155 1 298 1 317 1 54 1 
172 2 29 1 173 2 240 2 98 1 2 2 197 5 284 1 127 1 9 1 37 8 104 2 317 2 11 1 247 2 225 5 249 1 69 1 289 6 46 1 305 3 111 1 277 5 113 1 251 1 354 1 48 2 137 1 291 1 235 1 188 1 51 2 331 5 358 2 359 2 
172 1 173 2 30 1 57 1 97 1 338 1 2 1 282 1 5 1 283 1 152 1 37 2 317 1 204 1 84 1 107 1 247 1 269 1 249 1 87 1 303 1 46 1 277 2 48 2 290 1 137 1 210 1 359 1 
172 1 335 1 56 1 247 1 240 1 225 1 2 1 277 1 37 1 317 1 
173 2 225 5 289 10 277 5 305 5 197 5 230 1 48 2 137 1 37 5 104 2 51 2 331 5 358 2 359 2 
251 1 291 1 225 1 240 1 249 1 46 1 
172 2 1 1 120 1 241 2 2 1 284 2 342 1 127 2 37 2 155 1 63 1 317 2 133 4 266 4 18 1 247 2 249 3 89 4 228 1 277 2 46 3 164 1 251 2 71 1 291 4 72 1 139 1 74 1 212 2 
57 2 30 2 118 1 119 1 193 1 97 3 241 1 282 1 342 1 8 1 155 1 39 2 133 1 266 1 66 1 267 1 158 1 68 1 350 1 18 1 87 2 135 1 89 1 303 3 47 1 290 2 165 1 187 1 166 1 117 1 139 1 26 1 
172 1 247 1 240 2 225 4 2 1 289 4 305 2 277 2 197 2 284 1 127 1 37 1 317 1 141 1 331 2 
157 1 138 1 329 1 
157 1 138 1 329 1 
157 1 198 1 321 1 138 1 184 1 
157 1 138 1 329 1 
157 1 138 1 59 1 
157 1 138 1 59 1 
157 1 138 1 59 1 
157 1 138 1 
352 1 253 1 
39 4 173 1 66 8 118 4 32 2 267 2 270 3 283 1 186 1 152 1 125 4 166 2 187 2 117 2 91 1 308 1 141 1 220 1 359 1 204 1 
173 1 66 6 118 3 32 2 270 2 183 1 283 1 152 1 125 3 308 1 141 1 220 1 204 1 359 1 
39 2 173 1 66 4 32 1 118 2 267 1 270 2 186 1 125 2 166 1 187 1 117 1 104 1 307 1 51 1 358 1 359 1 
66 7 173 1 32 1 118 4 270 2 111 1 100 1 113 1 186 1 125 3 104 1 188 2 51 1 358 1 359 1 
173 3 118 12 32 5 100 1 283 1 152 2 125 11 104 2 220 1 204 2 39 4 66 23 267 2 287 1 270 9 88 1 111 2 186 4 166 2 187 2 24 1 91 2 117 2 308 1 51 2 188 2 141 1 358 2 359 3 
66 1 118 1 188 1 
66 1 125 1 111 1 
39 2 66 6 173 1 267 1 118 3 32 2 270 3 230 1 186 1 125 3 187 1 166 1 117 1 104 1 307 1 51 1 358 1 359 1 
29 1 173 2 118 6 32 1 125 6 9 1 104 2 11 1 320 1 39 2 66 12 267 1 270 2 69 1 111 1 113 1 186 1 187 1 166 1 235 1 117 1 188 1 51 2 358 2 359 2 
283 1 186 1 152 1 66 6 173 1 32 1 118 3 125 3 270 2 204 1 359 1 
39 2 66 3 32 1 118 2 267 1 270 2 88 1 186 1 152 1 125 1 166 1 187 1 91 1 117 1 308 1 220 1 204 1 
39 2 66 10 173 2 267 1 32 3 118 5 107 1 270 5 283 1 152 2 186 2 125 5 187 1 166 1 117 1 320 1 204 2 359 2 
39 2 173 1 66 2 267 1 270 1 186 1 125 2 166 1 187 1 117 1 51 1 320 1 
39 2 173 1 66 4 32 1 118 2 267 1 270 2 186 1 125 2 166 1 187 1 117 1 104 1 51 1 320 1 358 1 359 1 
39 6 66 3 118 2 267 3 32 1 270 2 88 1 152 1 186 1 125 1 166 3 187 3 91 1 117 3 140 1 320 1 204 1 
173 5 118 18 32 7 4 1 100 1 283 2 152 3 125 16 104 3 220 1 320 1 204 3 39 10 66 34 267 5 270 12 88 1 111 3 113 1 186 5 306 1 187 5 166 5 91 2 117 5 308 1 188 4 307 1 51 3 140 1 141 1 358 3 55 1 359 5 
173 1 118 4 32 2 283 1 152 1 125 4 220 1 320 1 204 1 39 2 66 8 267 1 270 2 69 1 111 1 113 1 187 1 166 1 117 1 188 1 308 1 141 1 359 1 
173 2 32 2 118 5 100 1 283 1 152 1 125 6 104 1 220 1 320 1 204 1 39 4 66 11 267 2 270 3 69 1 111 1 113 1 186 1 187 2 166 2 117 2 308 1 188 2 307 1 51 1 141 1 359 1 
29 1 173 3 118 10 32 3 283 1 152 1 125 9 9 1 104 2 11 1 220 1 320 1 204 1 39 6 66 19 267 3 270 4 69 1 111 1 113 1 186 1 187 3 166 3 235 1 117 3 91 1 308 1 307 1 188 1 51 2 141 1 358 2 359 3 
29 1 173 3 118 7 32 3 283 1 152 1 125 10 9 1 104 2 11 1 220 1 320 1 204 1 39 6 66 17 267 3 270 5 69 1 111 1 113 1 186 2 187 3 166 3 235 1 91 1 117 3 308 1 307 1 188 1 51 2 141 1 358 1 359 2 
173 1 118 4 32 2 283 1 152 1 125 4 220 1 320 1 204 1 39 2 66 8 267 1 270 2 69 1 111 1 113 1 187 1 166 1 117 1 188 1 308 1 141 1 359 1 
29 1 173 2 118 6 32 1 125 6 9 1 104 2 11 1 320 1 39 2 66 12 267 1 270 2 69 1 111 1 113 1 186 1 187 1 166 1 235 1 117 1 188 1 51 2 358 2 359 2 
29 1 173 3 118 8 32 3 283 1 152 1 125 10 9 1 104 2 11 1 220 1 320 1 204 1 39 8 66 18 267 4 270 5 69 1 111 1 113 1 186 2 187 4 166 4 235 1 117 4 91 2 308 1 188 1 307 1 51 2 141 1 358 1 359 2 
29 1 173 3 118 7 32 3 125 9 9 1 104 3 11 1 320 1 39 8 66 16 267 4 270 6 69 1 111 1 113 1 186 3 187 4 166 4 235 1 117 4 91 2 188 1 51 3 140 1 358 2 359 2 
66 7 173 1 118 4 32 3 270 6 283 1 152 3 186 3 125 3 308 2 220 1 359 1 204 3 
29 1 173 3 118 8 32 3 283 1 152 1 125 10 9 1 104 2 11 1 220 1 320 1 204 1 39 8 66 18 267 4 270 4 69 1 111 1 113 1 186 1 187 4 166 4 235 1 117 4 91 2 308 1 188 1 51 2 140 1 141 1 358 1 359 2 
297 1 290 1 178 1 97 1 296 1 303 1 26 1 
297 1 96 1 290 1 178 1 22 1 42 1 97 1 296 1 303 1 26 1 61 1 245 1 
133 1 266 1 342 1 18 1 120 1 139 1 241 1 155 1 89 1 228 1 183 1 
133 1 266 1 30 1 57 1 79 1 18 1 97 2 241 1 135 1 89 1 303 2 47 1 290 1 342 1 8 1 139 1 155 1 26 1 
133 1 266 1 30 1 57 2 79 1 18 3 33 1 97 2 135 2 89 1 303 2 47 1 290 2 343 1 342 2 210 1 8 1 139 1 52 1 155 1 26 1 212 1 263 1 
57 2 30 1 79 1 97 2 33 1 342 2 343 1 8 1 316 1 155 1 263 1 133 2 266 2 18 3 273 1 135 2 89 2 303 2 290 2 210 1 139 1 52 1 26 1 212 1 
33 1 240 1 241 1 99 1 342 1 343 1 316 1 155 1 345 1 348 1 133 3 266 3 134 1 18 4 225 1 249 2 135 1 89 3 46 2 291 1 23 1 139 1 212 1 
133 3 266 3 134 1 18 4 225 1 240 1 33 1 241 1 249 2 135 1 89 3 46 2 217 1 343 1 342 1 291 1 139 1 316 1 155 1 345 1 212 1 348 1 
133 1 266 1 139 1 44 1 155 1 89 1 
77 1 133 7 255 1 266 6 18 3 148 1 44 1 122 1 241 2 135 1 70 1 89 7 342 2 199 1 50 1 103 1 139 3 155 2 300 1 238 1 94 1 
173 1 57 1 30 1 118 3 32 2 119 2 79 1 145 1 97 2 3 1 176 1 283 1 152 1 125 3 342 1 341 1 36 1 8 1 155 1 220 1 204 1 246 1 39 4 133 1 86 1 266 1 66 6 267 2 158 2 18 1 350 1 270 2 135 1 70 1 89 1 303 2 47 1 290 1 165 1 166 2 187 2 139 1 117 2 308 1 141 1 26 2 359 1 
335 1 172 2 56 1 240 1 241 1 2 2 257 1 217 1 37 1 315 1 38 1 317 2 345 1 348 1 133 1 266 1 134 1 247 2 18 2 225 1 268 1 249 3 89 1 277 1 46 3 251 1 291 2 72 1 
133 1 266 1 18 1 271 1 44 1 135 1 89 1 342 1 103 1 139 2 155 1 54 1 348 1 
133 4 266 4 120 1 18 1 226 1 241 1 89 4 70 1 228 1 342 1 139 1 316 1 155 1 
133 2 264 1 266 2 0 1 18 1 147 1 148 1 135 1 89 2 342 1 199 1 139 2 155 1 212 1 
133 1 266 1 174 1 355 1 139 1 241 1 155 1 175 1 89 1 76 1 
133 2 255 1 266 2 342 1 18 1 50 1 139 1 155 1 89 2 70 1 227 1 
133 5 266 4 120 1 18 3 226 1 241 1 89 5 70 1 228 1 342 2 50 1 139 2 155 2 212 1 238 1 300 1 
133 5 266 4 120 1 18 3 226 1 241 1 89 5 70 1 228 1 342 2 200 1 50 1 139 2 155 2 212 1 300 1 
133 1 266 1 30 1 57 1 79 1 18 1 97 2 241 1 273 1 135 1 89 1 303 2 290 1 342 1 8 1 139 1 155 1 26 1 
133 1 266 1 18 1 148 1 135 1 89 1 342 1 199 1 103 1 139 2 155 1 212 1 94 1 
106 1 6 1 202 1 288 1 26 1 
106 2 15 1 295 1 144 1 225 1 240 1 268 1 249 2 250 1 288 2 311 1 46 2 6 1 210 1 52 1 202 2 345 1 26 1 263 1 
95 1 106 1 97 1 274 1 288 1 303 1 6 1 290 1 170 1 
6 1 250 1 311 1 
128 1 304 1 183 1 27 1 
128 1 160 1 237 1 161 1 304 1 27 1 340 1 
146 1 201 1 161 1 
109 1 160 3 45 1 161 3 304 1 340 1 128 1 237 1 154 2 179 1 357 1 27 1 
35 1 128 1 160 2 237 1 161 2 304 1 324 1 27 1 340 1 
28 1 174 1 160 1 175 1 161 1 340 1 232 1 115 1 128 1 237 1 179 1 
128 1 160 1 237 1 179 1 161 1 27 1 340 1 
160 1 237 1 179 1 161 1 304 1 27 2 340 1 
156 1 160 2 81 1 161 2 340 2 128 1 237 2 179 1 27 1 132 1 
160 3 161 3 304 1 324 2 340 1 209 1 115 1 128 2 237 1 179 1 332 1 213 1 27 1 
28 1 174 2 160 2 175 1 161 2 304 1 324 1 340 1 136 1 128 1 355 1 237 1 179 1 27 1 239 1 
160 4 161 4 304 1 324 2 340 2 209 1 35 1 115 1 49 1 128 2 237 2 179 1 27 1 
128 1 160 1 237 1 179 1 161 1 304 1 27 1 340 1 
109 1 160 4 45 1 161 4 304 2 324 2 340 1 209 1 115 1 128 3 154 1 237 1 27 2 334 1 
337 1 160 2 207 1 161 2 324 1 304 1 340 1 90 1 128 1 237 1 179 1 27 1 
109 1 160 3 45 2 161 3 304 1 163 1 340 1 128 1 237 1 154 2 179 1 27 1 
14 1 67 2 128 2 162 1 
206 1 160 1 237 1 179 1 161 1 340 1 
128 1 160 2 237 1 179 1 332 1 161 2 304 1 324 1 27 1 340 1 
322 1 
128 1 160 1 237 1 179 1 161 1 304 1 27 1 340 1 
160 3 161 3 324 1 304 1 340 1 128 1 237 1 154 1 179 1 332 1 27 1 
115 1 128 1 334 1 209 1 
128 1 27 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (14,182,360) 95 (126,307,335) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException (14,182,360) 95 336 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException (14,182,360) 95 336 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (14,182,360) 95 (126,307,335) 23 352 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (14,182,360) 95 (126,307,335) 23 352 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (14,182,360) 95 (126,307,335) 23 352 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (14,182,360) 95 (126,307,335) 23 352 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (14,182,360) 95 (126,307,335) 23 352 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (14,182,360) 95 (126,307,335) 23 352 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (14,182,360) 95 (126,307,335) 23 352 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (14,182,360) 95 (126,307,335) 23 352 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (14,182,360) 95 (126,307,335) 23 352 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (14,182,360) 95 (126,307,335) 23 352 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (14,182,360) 95 (126,307,335) 23 352 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (14,182,360) 95 (126,307,335) 23 352 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 48 59 270 127 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 48 59 270 127 252 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 48 59 270 127 252 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 48 59 270 127 252 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException (14,182,360) 95 336 245 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException (14,182,360) 95 336 245 120 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2778 | = null
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 2
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 838 | = null
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2170 | stmt -> ;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
253 1 24 1 346 1 133 9 78 3 173 9 207 4 7 5 177 2 54 1 29 2 351 2 160 1 33 1 315 6 284 1 42 2 267 2 318 2 121 2 67 1 297 1 144 1 102 1 300 1 188 1 275 1 170 1 
253 1 24 1 346 1 133 9 78 3 173 9 207 4 7 5 177 2 54 1 351 2 29 2 160 1 33 1 315 6 284 1 42 2 267 2 318 2 121 2 67 1 297 1 144 1 102 1 300 1 188 1 275 1 170 1 
253 1 24 1 346 1 133 10 78 4 173 10 207 5 7 6 177 2 54 1 351 2 29 2 160 1 33 1 315 7 284 1 42 2 267 2 318 2 121 2 67 1 297 1 144 1 102 1 300 1 188 1 275 1 170 1 
253 1 346 1 133 7 78 2 173 7 207 3 7 4 177 2 54 1 351 2 29 1 160 1 33 1 315 4 284 1 42 2 267 2 318 2 121 2 67 1 297 1 144 1 102 1 300 1 188 1 275 1 170 1 
24 1 346 1 78 1 133 4 173 4 318 1 267 1 42 1 121 1 207 2 7 3 177 1 102 1 29 2 160 1 188 1 315 3 33 1 
253 1 346 1 63 1 133 2 173 2 42 1 267 1 318 1 121 1 97 1 7 1 166 1 54 1 351 1 160 1 188 1 
346 1 133 3 78 1 173 3 42 2 121 2 207 1 7 2 351 1 160 1 188 1 170 1 315 1 
24 1 346 1 78 3 133 9 173 9 207 4 7 5 177 1 351 1 29 2 160 1 315 7 33 1 35 1 284 1 42 2 267 1 318 1 121 2 102 1 300 1 341 1 188 1 170 1 
24 1 346 1 78 3 133 9 173 9 207 4 7 5 177 1 351 1 29 2 160 1 315 7 33 1 35 1 284 1 42 2 267 1 318 1 121 2 102 1 300 1 341 1 188 1 170 1 
111 1 12 1 204 1 
323 1 111 1 354 2 
156 1 222 2 182 2 360 2 44 2 129 1 14 2 247 2 
227 1 343 1 304 1 75 1 77 2 306 1 52 1 156 1 158 1 159 1 311 2 239 1 212 1 137 1 138 1 179 1 116 1 36 1 241 1 317 1 181 1 289 1 40 1 222 3 182 2 44 2 142 1 14 3 247 2 143 1 337 2 47 1 359 2 271 1 148 2 360 2 129 1 
229 1 182 1 222 1 44 1 247 1 14 1 175 1 156 1 185 1 360 1 
307 1 182 1 95 1 
229 1 335 2 61 2 111 1 12 1 182 2 222 2 327 1 44 2 247 2 14 2 175 2 156 1 185 1 125 1 126 1 211 1 360 2 196 1 
335 1 61 1 218 1 333 1 94 1 
216 1 335 2 61 2 218 1 111 1 12 1 94 1 356 1 
335 1 61 1 94 1 
229 1 335 1 61 1 218 1 182 1 222 1 44 1 175 1 247 1 14 1 156 1 185 1 360 1 196 1 
111 1 
229 1 108 1 335 2 61 2 218 1 111 1 222 1 182 1 94 1 12 1 44 1 175 1 14 1 247 1 356 1 156 1 185 1 360 1 196 1 
117 1 335 5 10 1 61 5 264 1 218 2 325 2 326 2 119 1 111 1 112 2 292 1 12 1 94 2 96 1 356 1 330 1 69 1 167 1 
204 1 129 1 
255 1 182 2 222 2 154 1 44 1 175 1 14 2 247 1 260 1 360 1 129 1 
263 1 265 1 183 1 
161 1 343 1 75 1 181 1 40 1 222 1 142 1 52 1 14 1 159 1 311 1 359 1 239 1 271 1 148 1 129 1 
343 1 75 1 181 1 40 1 183 1 182 1 222 2 142 1 52 1 247 1 14 2 237 1 159 1 124 1 311 1 359 1 239 1 271 1 148 1 360 1 
182 5 222 4 95 1 235 1 154 1 44 1 247 4 14 4 53 1 237 1 336 1 124 2 360 4 129 1 
185 1 222 1 182 1 360 1 175 1 14 1 247 1 
255 1 182 2 222 2 175 1 247 2 14 2 124 1 360 2 129 1 
185 1 222 1 182 1 360 1 175 1 14 1 247 1 
182 1 222 1 154 1 44 1 247 1 14 1 175 1 260 1 360 1 
227 1 343 1 304 1 75 1 77 1 306 1 327 1 154 1 52 1 175 1 237 1 156 1 159 1 311 1 239 1 212 1 137 1 211 1 138 1 179 1 116 1 335 1 241 1 61 1 181 1 289 1 40 1 222 4 182 3 142 1 44 2 14 4 247 3 319 1 124 1 337 2 359 1 125 1 126 1 271 1 148 1 342 1 360 3 129 1 
336 1 124 1 222 1 182 2 95 1 360 1 14 1 247 1 
335 1 61 1 111 1 82 1 182 3 222 3 327 1 44 1 154 1 175 1 247 3 14 3 237 1 124 2 125 1 126 1 211 1 360 3 342 1 
124 1 265 1 183 1 222 2 182 2 360 2 44 1 154 1 14 2 247 2 
343 1 75 1 181 1 40 1 222 1 142 1 52 1 14 1 311 1 159 1 359 1 239 1 271 1 148 1 129 1 
343 1 49 1 162 1 181 1 40 1 222 1 142 1 52 1 14 1 311 1 159 1 359 1 271 1 148 1 129 1 
227 1 304 1 77 4 306 1 349 1 136 1 90 1 137 1 212 2 91 1 179 1 263 2 241 1 62 1 220 1 265 2 317 2 221 1 244 1 183 2 184 1 298 1 337 2 18 1 
182 1 222 1 327 1 247 1 14 1 175 1 104 1 360 1 
205 1 238 1 
205 1 238 1 
299 1 331 1 
299 1 331 1 
299 1 331 1 
205 1 123 1 238 1 
205 1 123 1 238 1 
189 1 205 1 238 1 
228 1 205 2 11 1 299 1 238 2 331 1 
205 1 123 1 238 1 
205 1 109 1 238 1 
205 1 109 1 238 1 
205 1 109 1 238 1 
189 1 73 1 205 1 335 1 61 1 305 1 243 1 171 1 222 2 182 2 14 2 247 2 83 1 100 1 209 1 238 1 210 1 313 1 147 1 272 1 106 1 360 2 57 1 129 1 
228 1 205 2 335 2 61 2 254 1 243 2 131 1 111 1 171 2 163 1 209 2 238 2 101 2 202 1 210 2 313 3 240 1 106 1 21 1 
177 1 318 1 267 1 
166 1 318 1 267 1 
217 1 68 1 166 1 177 2 282 1 267 3 
68 1 166 1 177 1 282 1 233 1 267 2 
68 1 166 1 177 1 282 2 267 2 
73 1 323 1 107 1 325 1 326 1 112 1 111 2 349 1 330 2 332 1 176 1 194 2 90 1 57 1 314 2 335 5 117 3 61 5 37 1 218 4 220 1 354 3 355 2 94 1 268 1 12 1 43 1 356 1 100 1 298 1 167 1 339 1 
73 4 323 3 107 3 345 1 76 1 325 2 326 2 111 5 112 2 349 3 330 6 115 1 90 3 333 5 314 6 9 1 335 9 117 8 61 9 218 7 220 3 354 9 355 6 94 6 12 1 268 1 43 2 96 1 356 1 298 3 167 1 358 1 339 2 105 5 128 1 
73 1 323 2 107 1 325 1 326 1 111 3 112 1 349 1 330 2 176 1 194 1 90 1 314 2 335 3 117 3 61 3 37 1 218 2 220 1 12 1 43 1 355 2 354 4 96 1 298 1 339 1 
73 2 323 3 107 2 345 1 325 1 326 1 111 4 112 1 349 2 330 4 176 1 194 2 90 2 314 4 9 1 335 4 117 5 61 4 37 1 218 3 220 2 12 1 354 7 355 4 43 1 96 1 298 2 358 1 339 1 
159 1 146 1 204 1 
159 1 4 1 
258 1 
159 1 271 1 52 1 
159 1 262 1 
159 1 52 1 
159 3 146 2 135 1 26 1 271 1 52 1 
151 1 220 1 77 7 110 1 25 2 317 4 221 3 277 1 320 1 280 1 296 1 349 1 248 1 136 2 103 1 212 3 31 1 
151 1 220 1 77 7 110 1 25 2 317 4 221 3 277 1 320 1 280 1 296 1 349 1 248 1 136 2 103 1 212 3 31 1 
151 1 220 1 77 7 110 1 25 2 317 4 221 3 277 1 320 1 280 1 296 1 349 1 248 1 136 2 103 1 212 3 31 1 316 1 
227 1 107 3 22 1 151 2 50 1 77 31 110 2 306 1 25 3 277 2 280 5 349 4 136 5 212 15 90 3 31 1 179 1 59 1 241 1 286 1 288 1 220 4 317 16 221 10 41 3 65 1 320 1 296 1 164 1 298 3 337 2 248 1 103 2 48 4 
227 2 74 1 151 1 77 9 306 2 25 2 110 1 277 1 280 1 349 1 136 3 89 1 212 4 31 1 179 2 241 2 220 1 317 5 221 4 65 1 296 1 337 4 248 1 103 1 
149 1 343 1 346 1 133 2 173 2 256 1 7 1 311 1 177 1 351 1 160 1 315 1 214 1 58 1 217 1 180 1 40 1 318 1 42 1 267 2 121 1 122 1 186 1 166 1 168 1 359 1 301 1 148 1 20 1 188 1 
149 1 343 1 133 3 173 3 256 1 7 1 311 1 177 1 351 1 213 1 160 1 214 1 315 2 58 1 217 1 180 1 291 1 40 1 318 1 42 1 267 2 121 1 122 1 46 1 166 1 168 1 359 1 301 1 148 1 188 1 
343 1 133 2 173 2 7 1 311 1 177 1 351 1 213 1 160 1 214 1 315 2 58 1 217 1 180 1 291 1 40 1 267 2 318 1 122 1 166 1 168 1 359 1 301 1 148 1 188 1 
343 1 347 1 181 1 133 1 40 1 173 1 42 1 52 1 121 1 257 1 357 1 122 2 134 1 46 1 159 1 311 1 359 1 70 1 351 2 273 1 301 2 148 1 214 2 
149 1 343 1 346 1 133 1 173 1 256 1 311 1 177 1 351 1 213 1 214 1 58 1 217 1 180 1 40 1 318 1 42 1 267 2 121 1 122 1 186 1 166 1 168 1 359 1 301 1 148 1 
17 1 
23 1 343 1 325 1 326 1 307 1 112 1 51 1 52 1 257 1 208 1 310 1 330 1 134 1 159 1 311 2 178 1 352 1 335 2 117 1 61 2 181 2 40 1 182 1 94 2 95 1 356 1 167 1 359 2 339 1 148 2 71 1 
23 1 335 1 310 1 61 1 307 1 178 1 182 1 352 1 95 1 
23 1 335 1 310 1 61 1 307 1 178 1 182 1 352 1 95 1 
23 1 335 1 310 1 61 1 307 1 178 1 182 1 352 1 95 1 
23 1 108 1 335 2 310 1 61 2 307 1 178 1 182 1 352 1 94 1 95 1 356 1 
23 1 335 1 61 1 325 1 326 1 112 1 307 1 182 1 95 1 310 1 167 1 178 1 352 1 
23 1 335 1 310 1 61 1 307 1 178 1 182 1 352 1 95 1 
23 1 335 1 310 1 61 1 307 1 178 1 182 1 352 1 95 1 
23 1 335 1 310 1 61 1 307 1 178 1 182 1 352 1 95 1 
23 1 335 1 310 1 61 1 307 1 178 1 182 1 352 1 95 1 
23 1 335 1 310 1 61 1 307 1 178 1 182 1 352 1 95 1 
23 1 335 1 61 1 325 1 326 1 112 1 307 1 182 1 95 1 310 1 167 1 178 1 352 1 
227 1 304 1 151 1 77 6 110 1 306 1 25 1 349 1 136 2 137 1 212 3 31 1 179 1 263 1 241 1 265 1 220 1 317 3 221 2 183 1 296 1 337 2 248 1 18 1 204 1 129 2 
227 2 107 2 304 1 50 1 2 1 77 14 306 2 280 1 84 1 349 1 136 1 212 6 137 2 90 1 138 1 179 2 59 1 263 11 36 1 241 2 118 1 220 2 265 4 317 8 221 2 41 3 183 11 99 1 298 2 145 1 337 4 48 3 129 1 
227 1 343 1 75 1 304 1 77 2 306 1 27 1 52 1 237 1 84 1 159 1 311 1 86 1 239 1 137 1 212 1 179 1 138 1 161 1 241 1 36 1 265 1 181 1 317 1 40 1 198 1 222 2 182 1 142 1 14 2 247 1 124 1 337 2 359 1 271 1 148 1 360 1 129 1 
227 3 107 2 151 1 110 1 52 2 237 1 280 4 193 2 159 2 239 2 56 1 241 3 289 2 293 1 247 1 14 3 296 1 295 2 298 2 124 1 337 6 248 1 203 1 129 2 343 2 304 3 75 2 77 20 25 1 306 3 84 1 349 3 311 3 136 4 213 1 212 10 137 3 90 2 31 1 138 1 179 3 263 7 36 1 140 2 265 7 220 3 181 1 317 10 40 2 221 8 182 1 222 3 183 7 142 2 359 3 271 2 148 3 274 2 360 1 
227 2 343 2 304 2 153 1 77 2 306 2 80 1 81 1 52 2 257 1 85 1 134 1 159 3 311 7 213 1 137 2 212 1 32 1 179 2 138 1 241 2 36 1 181 2 317 1 40 2 222 1 182 1 14 1 247 1 165 1 124 1 337 4 359 8 47 2 18 1 148 8 20 1 360 1 361 1 
227 1 107 1 304 1 77 3 306 1 154 1 84 1 6 1 349 1 136 1 137 1 90 1 212 2 179 1 263 1 241 1 265 1 220 1 317 1 221 1 183 1 182 1 222 1 44 1 247 1 14 1 298 1 337 2 360 1 
227 1 263 1 241 1 304 1 265 1 77 2 220 1 306 1 317 2 221 1 183 1 184 1 280 1 298 1 337 2 18 1 137 1 179 1 
227 1 263 1 241 1 304 1 265 1 77 2 306 1 221 1 183 1 244 1 349 1 337 2 136 1 18 1 137 1 90 1 212 2 179 1 
227 1 263 2 107 1 241 1 304 1 265 2 77 4 220 1 306 1 317 2 221 2 183 2 280 1 349 1 298 1 337 2 136 1 212 2 90 1 18 1 137 1 179 1 
227 1 263 1 241 1 304 1 265 1 77 2 220 1 306 1 317 2 221 1 183 1 184 1 280 1 298 1 337 2 137 1 361 1 179 1 
227 1 263 1 241 1 304 1 265 1 77 2 306 1 221 1 183 1 244 1 349 1 337 2 136 1 137 1 90 1 212 2 361 1 179 1 
227 1 263 2 107 1 241 1 304 1 265 2 77 4 220 1 306 1 317 2 221 2 183 2 280 1 349 1 298 1 337 2 136 1 212 2 90 1 137 1 361 1 179 1 
227 1 263 2 107 1 241 1 304 1 265 2 220 1 77 4 306 1 317 2 221 2 183 2 280 1 349 1 298 1 337 2 136 1 212 2 90 1 137 1 179 1 
227 1 343 1 75 1 304 1 77 2 306 1 52 1 311 1 159 1 239 1 137 1 212 1 179 1 138 1 36 1 241 1 317 1 181 1 289 1 40 1 222 1 142 1 14 1 337 2 359 1 271 1 148 1 129 1 
227 1 343 1 49 1 304 1 77 2 306 1 52 1 311 1 159 1 137 1 212 1 179 1 138 1 36 1 241 1 162 1 317 1 181 1 40 1 222 1 142 1 14 1 337 2 359 1 271 1 148 1 187 1 129 1 
227 1 263 2 107 1 241 1 304 1 265 2 77 4 220 1 306 1 317 2 221 2 183 2 280 1 84 1 349 1 298 1 337 2 136 1 212 2 90 1 137 1 179 1 
227 1 343 1 107 1 75 1 304 1 77 4 306 1 52 1 280 1 349 1 193 1 311 1 159 1 239 1 136 1 212 2 90 1 137 1 179 1 263 2 241 1 265 2 220 1 317 2 289 1 221 2 40 1 183 2 222 1 142 1 14 1 298 1 337 2 359 1 271 1 148 1 20 1 
227 1 107 1 304 1 77 3 306 1 154 1 280 1 84 1 349 1 212 1 90 1 137 1 179 1 263 1 241 1 220 1 265 1 317 2 221 1 182 1 222 1 183 1 44 1 247 1 15 1 14 1 298 1 337 2 360 1 
227 2 107 3 344 1 74 1 50 1 77 19 306 2 234 1 280 3 192 2 349 3 259 2 88 1 136 3 212 10 90 3 179 2 59 1 139 1 241 2 220 3 317 9 221 6 41 1 200 1 298 3 337 4 127 1 48 2 252 1 
59 2 227 1 74 1 241 1 77 5 317 2 306 1 41 1 234 2 192 1 270 1 337 2 88 1 127 2 212 3 48 2 179 1 252 1 
227 2 107 2 74 1 50 1 77 18 306 2 234 2 280 2 192 2 349 2 259 1 88 1 195 1 136 1 212 10 90 2 179 2 59 3 139 1 241 2 220 2 317 8 221 3 41 2 200 1 270 1 298 2 337 4 127 1 48 4 252 1 
227 2 107 2 74 1 50 1 77 18 306 2 234 2 280 2 192 2 349 2 259 1 88 1 195 1 136 2 212 10 90 2 179 2 59 3 139 1 241 2 220 2 317 8 221 4 41 2 200 1 270 1 298 2 337 4 127 1 48 4 252 1 
227 1 107 2 74 1 151 1 50 1 77 20 25 1 110 1 306 1 234 1 280 2 192 1 349 3 88 1 136 3 212 10 90 2 31 1 179 1 59 2 241 1 118 1 220 3 317 10 221 5 41 2 296 1 270 1 298 2 337 2 248 1 127 1 48 3 252 1 
228 1 205 1 209 1 238 1 202 1 210 1 243 1 171 1 21 1 199 1 
189 1 83 1 
60 1 205 1 201 1 209 1 238 1 210 1 243 1 171 1 249 1 
123 1 13 1 
109 1 11 1 1 1 
228 1 205 1 335 1 61 1 243 1 131 1 111 1 171 1 163 1 209 1 238 1 101 1 202 1 210 1 313 2 240 1 106 1 21 1 
228 1 205 1 335 1 61 1 243 1 131 1 111 1 171 1 163 1 209 1 238 1 101 1 202 1 210 1 313 2 240 1 106 1 21 1 
228 1 205 1 335 1 61 1 243 1 131 1 111 1 171 1 163 1 209 1 238 1 101 1 202 1 210 1 313 2 240 1 106 1 21 1 
123 1 11 1 13 1 
123 1 11 1 13 1 
109 1 1 1 
109 1 11 1 1 1 
147 1 272 1 
73 1 189 1 205 1 305 1 131 1 171 1 83 1 209 1 238 1 210 1 313 1 57 1 335 1 287 1 61 1 218 1 243 1 222 2 182 2 14 2 247 2 100 1 101 1 272 1 147 1 360 2 129 1 
227 1 343 1 303 1 304 1 153 1 324 1 77 2 306 1 348 1 52 1 279 1 84 1 159 1 312 1 311 2 137 1 212 1 32 1 179 1 138 1 241 1 36 1 317 1 40 1 222 2 182 2 14 2 337 2 359 2 47 2 148 2 
343 1 217 1 3 1 40 1 318 1 267 2 256 1 122 1 311 2 166 1 177 1 168 1 359 2 213 1 148 2 334 1 20 1 225 1 58 1 
343 1 217 1 150 1 40 1 318 1 267 2 256 1 122 1 311 1 166 1 177 1 168 1 359 1 213 1 148 1 225 1 58 1 
343 1 181 1 40 1 52 1 113 1 257 1 122 1 134 1 159 1 311 1 359 1 70 1 148 1 334 1 
343 1 217 1 3 1 40 1 318 1 267 2 256 1 122 1 311 1 166 1 177 1 168 1 359 1 213 1 148 1 334 1 225 1 58 1 
302 1 
117 1 330 1 69 1 111 1 292 1 12 1 204 1 
323 1 0 1 325 1 326 1 232 1 112 1 111 2 330 1 117 1 335 1 61 1 354 1 94 1 12 1 356 1 167 1 250 1 
276 2 230 1 323 6 107 2 325 4 326 4 112 4 111 8 52 3 4 3 236 1 5 2 330 8 159 10 8 1 117 9 335 5 61 5 292 1 12 2 246 2 298 2 69 1 167 4 338 2 339 2 71 1 20 1 343 4 206 2 26 1 308 2 309 1 349 2 311 3 87 2 262 2 211 2 90 2 314 6 140 2 220 2 181 1 40 3 94 5 355 6 354 12 356 3 98 2 223 1 146 2 359 3 271 3 148 3 
323 3 107 2 325 2 206 2 326 2 112 2 111 5 278 1 330 5 349 2 90 2 30 1 314 5 59 1 335 1 117 8 61 1 219 1 220 2 93 1 41 1 94 1 354 6 355 5 12 2 269 1 356 1 270 1 298 2 167 2 338 1 339 1 71 1 19 1 48 1 
229 1 151 1 325 1 206 2 326 1 110 1 112 1 175 1 156 1 330 2 349 1 31 1 196 1 335 1 117 2 61 1 220 2 222 1 182 1 44 1 14 1 247 1 185 1 322 1 167 1 338 1 72 1 360 1 
117 1 325 1 326 1 112 1 111 1 292 1 12 1 330 1 167 1 69 1 
107 2 323 5 117 5 140 1 206 2 220 2 111 5 355 5 354 10 330 5 349 2 298 2 338 1 90 2 314 5 
335 1 61 1 111 1 12 1 94 1 356 1 
130 1 343 1 325 2 326 2 112 2 51 1 52 1 257 1 236 1 208 1 157 1 330 2 134 1 159 1 311 4 117 2 335 3 61 3 181 2 40 1 94 4 96 1 356 2 223 2 167 1 359 4 339 2 148 4 71 2 
227 1 343 1 75 1 304 1 77 1 306 1 52 1 156 1 311 1 159 1 239 1 212 1 137 1 138 1 179 1 116 1 241 1 181 1 289 1 40 1 222 3 182 2 44 2 142 1 14 3 247 2 337 2 359 1 271 1 148 1 360 2 129 1 
323 2 117 1 325 1 326 1 25 1 112 1 111 4 354 4 355 2 12 2 330 2 167 1 339 1 71 1 314 2 
45 1 243 1 171 1 
45 1 243 1 171 1 
215 1 202 1 243 1 171 1 147 1 
45 1 243 1 171 1 
243 1 171 1 294 1 
243 1 171 1 294 1 
243 1 171 1 294 1 
243 1 171 1 
205 1 238 1 
227 2 241 2 151 1 220 1 77 8 25 1 317 4 306 2 110 1 221 3 65 1 280 1 296 1 349 1 337 4 248 1 136 2 212 4 31 1 179 2 
151 1 220 1 77 6 25 1 110 1 317 3 221 2 296 1 349 1 248 1 136 2 212 3 204 1 31 1 
227 1 107 1 241 1 266 1 220 1 77 4 306 1 317 2 221 2 280 1 349 1 298 1 337 2 136 1 212 2 90 1 179 1 
59 1 107 1 50 1 77 7 220 1 317 3 221 2 41 1 280 1 349 1 298 1 136 1 90 1 212 4 48 2 
227 2 107 2 151 2 50 1 77 23 25 1 110 2 306 2 280 4 329 1 349 3 136 5 212 12 90 2 31 1 179 2 241 2 118 1 220 3 317 11 221 9 41 2 65 2 99 1 296 1 298 2 337 4 248 1 48 2 
77 1 212 1 48 1 
77 1 317 1 41 1 
227 1 107 1 241 1 140 1 266 1 77 6 220 1 306 1 317 3 221 3 280 1 349 1 298 1 337 2 136 2 212 3 90 1 179 1 
227 1 107 2 74 1 77 12 306 1 278 1 280 1 349 2 136 1 212 6 90 2 179 1 59 1 241 1 219 1 220 2 317 6 93 1 221 2 41 1 269 1 270 1 298 2 337 2 48 1 
151 1 220 1 77 6 317 3 110 1 221 2 280 1 349 1 136 1 212 3 31 1 
227 1 241 1 151 1 77 3 317 1 110 1 306 1 221 2 65 1 280 1 296 1 329 1 337 2 248 1 136 1 212 2 179 1 
227 1 74 1 241 1 151 2 77 10 220 2 306 1 110 2 317 5 221 5 280 2 322 1 349 2 337 2 136 3 212 5 31 1 179 1 
227 1 74 1 241 1 220 1 77 2 306 1 317 2 221 1 280 1 298 1 337 2 179 1 
227 1 107 1 74 1 241 1 220 1 77 4 306 1 317 2 221 2 280 1 349 1 298 1 337 2 136 1 212 2 90 1 179 1 
227 3 74 1 241 3 151 1 77 3 306 3 110 1 317 1 221 2 65 1 329 1 200 1 280 1 337 6 136 1 212 2 179 3 
227 5 22 1 107 3 74 1 151 3 50 1 77 34 25 1 110 3 306 5 329 1 280 5 349 5 136 7 212 18 90 3 31 2 179 5 59 1 241 5 288 1 266 1 220 5 317 16 221 12 41 3 65 2 296 1 164 1 200 1 298 3 337 10 248 1 48 4 
227 1 74 1 151 1 77 8 25 1 306 1 110 1 349 1 136 2 212 4 31 1 179 1 59 1 241 1 220 1 317 4 221 2 41 1 296 1 270 1 337 2 248 1 48 1 
227 2 107 1 74 1 151 1 50 1 77 11 25 1 110 1 306 2 280 1 349 1 136 2 212 5 31 1 179 2 59 1 241 2 266 1 220 2 317 6 221 3 41 1 296 1 270 1 298 1 337 4 248 1 48 2 
227 3 107 2 74 1 151 1 77 19 25 1 110 1 306 3 278 1 280 1 349 3 136 3 212 10 90 2 31 1 179 3 59 1 241 3 219 1 266 1 220 3 317 9 93 1 221 4 41 1 65 1 269 1 296 1 270 1 298 2 337 6 248 1 48 1 
227 3 107 2 74 1 151 1 77 17 25 1 110 1 306 3 278 1 280 2 349 2 136 3 212 7 90 1 31 1 179 3 59 1 241 3 219 1 266 1 220 3 317 10 93 1 221 5 41 1 65 1 269 1 296 1 270 1 298 2 337 6 248 1 48 1 
227 1 74 1 151 1 77 8 25 1 306 1 110 1 349 1 136 2 212 4 31 1 179 1 59 1 241 1 220 1 317 4 221 2 41 1 296 1 270 1 337 2 248 1 48 1 
227 1 107 2 74 1 77 12 306 1 278 1 280 1 349 2 136 1 212 6 90 2 179 1 59 1 241 1 219 1 220 2 317 6 93 1 221 2 41 1 269 1 270 1 298 2 337 2 48 1 
227 4 107 2 74 1 151 1 77 18 25 1 110 1 306 4 278 1 280 2 349 2 136 3 212 8 90 1 31 1 179 4 59 1 241 4 219 1 266 1 220 3 317 10 93 1 221 5 41 1 269 1 65 2 296 1 270 1 298 2 337 8 248 1 48 1 
227 4 107 3 74 1 77 16 306 4 278 1 280 3 349 2 136 3 212 7 90 2 179 4 59 1 241 4 219 1 220 3 317 9 93 1 221 6 41 1 269 1 65 2 200 1 270 1 298 3 337 8 48 1 
151 3 77 7 220 1 110 3 317 3 221 6 296 2 280 3 349 1 248 1 136 3 212 4 31 1 
227 4 107 2 74 1 151 1 77 18 25 1 110 1 306 4 278 1 280 1 349 2 136 3 212 8 90 1 31 1 179 4 59 1 241 4 219 1 220 3 317 10 93 1 221 4 41 1 269 1 65 2 296 1 200 1 270 1 298 2 337 8 248 1 48 1 
336 1 182 1 245 1 95 1 
336 1 224 1 290 1 182 1 245 1 95 1 120 1 353 1 226 1 
343 1 134 1 159 1 311 1 359 1 181 1 40 1 204 1 148 1 52 1 257 1 
343 1 75 1 181 1 40 1 182 1 222 2 142 1 52 1 247 1 14 2 159 1 124 1 311 1 359 1 271 1 148 1 360 1 129 1 
276 1 343 1 75 1 255 1 327 1 52 2 175 2 311 1 159 3 262 1 40 1 222 2 182 2 142 1 14 2 247 1 223 1 124 1 359 1 125 1 271 2 148 1 360 2 129 1 
276 1 343 1 49 1 255 1 327 1 52 2 175 2 311 1 159 3 262 1 40 1 222 2 182 2 142 1 14 2 247 1 223 1 124 1 359 1 125 1 271 2 148 1 360 2 129 1 
276 1 343 1 111 1 52 1 4 1 159 4 311 3 261 1 262 1 211 1 335 2 61 2 181 1 40 1 94 1 12 1 66 1 223 1 146 1 359 3 271 1 148 3 362 1 
276 1 343 1 335 2 61 2 181 1 111 1 40 1 308 1 12 1 94 1 52 1 4 1 66 1 223 1 311 3 159 4 146 1 359 3 262 1 211 1 271 1 148 3 
343 1 85 1 311 1 359 1 40 1 148 1 
343 3 181 2 26 1 80 1 40 2 81 1 328 1 52 2 85 1 165 1 311 6 159 3 47 1 359 7 114 1 213 1 271 1 148 7 20 1 32 1 92 1 
227 2 151 1 110 1 52 1 193 1 159 1 239 1 241 2 289 1 247 1 14 2 295 1 296 1 124 1 337 4 248 1 20 1 129 2 343 1 75 1 304 2 77 6 306 2 25 1 84 1 349 1 311 1 312 1 136 2 137 2 212 3 31 1 179 2 263 1 265 1 220 1 317 3 40 1 221 2 182 1 222 2 183 1 142 1 359 1 271 1 148 1 360 1 
325 2 326 2 111 1 112 2 308 1 4 1 236 1 5 1 330 1 311 1 159 2 87 1 211 1 117 1 335 3 61 3 218 1 181 1 292 1 12 1 246 1 94 2 356 1 69 1 167 2 146 1 359 1 148 1 
343 2 26 1 40 1 309 1 52 1 85 1 311 2 159 2 146 1 359 2 271 1 148 2 20 1 
343 1 132 1 181 1 40 1 52 1 257 1 66 1 134 1 311 4 159 1 359 4 148 4 20 1 
343 2 39 1 172 1 40 1 293 1 328 1 52 1 223 1 311 2 159 1 359 2 114 1 271 1 148 2 
343 1 311 1 166 1 168 1 359 1 181 1 40 1 318 1 267 1 148 1 
343 1 324 1 40 1 52 1 311 2 159 1 359 2 213 1 148 2 20 1 32 1 
343 2 132 1 181 1 40 2 80 1 81 1 52 2 257 1 223 1 134 1 311 4 159 3 359 5 148 5 20 1 32 1 
343 2 132 1 181 1 141 1 40 2 80 1 52 2 257 1 223 1 134 1 311 4 159 3 359 5 148 5 20 1 32 1 
343 1 49 1 181 1 40 1 182 1 222 2 142 1 52 1 247 1 14 2 159 1 124 1 311 1 359 1 271 1 148 1 360 1 129 1 
343 2 26 1 40 1 328 1 52 1 223 1 311 1 159 1 359 1 114 1 271 1 148 1 92 1 
38 1 340 1 281 1 174 1 129 1 
229 1 190 1 111 1 327 1 174 1 175 2 156 1 28 1 281 1 211 1 34 1 196 1 335 2 61 2 38 1 218 1 222 1 182 1 12 1 44 1 14 1 247 1 185 1 340 1 125 1 126 1 360 1 342 1 
303 1 38 1 348 1 281 1 222 1 182 1 279 1 174 1 14 1 
190 1 38 1 34 1 
7 1 204 1 160 1 188 1 
7 1 133 1 173 1 42 1 160 1 188 1 121 1 
351 1 173 1 301 1 
285 1 253 2 346 1 133 3 173 3 42 1 121 1 16 1 7 1 188 1 160 1 197 1 
7 1 133 2 29 1 173 2 42 1 160 1 188 1 315 1 121 1 
7 1 177 1 346 1 133 1 173 1 318 1 267 1 42 1 33 1 121 1 207 1 
7 1 346 1 133 1 173 1 42 1 160 1 121 1 
346 1 133 1 173 1 42 1 160 2 188 1 121 1 
283 1 346 1 133 2 173 2 42 2 121 2 155 1 321 1 7 1 160 1 
284 1 346 1 133 3 78 1 173 3 42 1 121 1 207 1 7 2 300 1 160 1 188 1 315 2 
217 1 346 1 64 1 133 2 173 2 267 2 42 1 318 1 121 1 7 1 166 1 177 1 160 1 188 1 315 1 
24 1 346 1 133 4 78 1 173 4 42 2 121 2 207 1 7 2 29 1 160 1 188 1 315 2 
7 1 346 1 133 1 173 1 42 1 160 1 188 1 121 1 
285 1 253 1 242 1 133 4 78 1 173 4 42 1 121 1 207 1 16 1 7 3 160 2 188 2 315 2 
231 1 346 1 133 2 173 2 191 1 42 1 121 1 7 1 341 1 160 1 315 1 188 1 
285 1 253 2 346 1 133 3 173 3 42 1 121 1 16 2 7 1 55 1 188 1 160 1 
7 2 152 1 79 1 251 2 
169 1 346 1 133 1 173 1 42 1 121 1 
7 1 346 1 133 2 300 1 173 2 42 1 160 1 188 1 315 1 121 1 
350 1 
7 1 346 1 133 1 173 1 42 1 160 1 188 1 121 1 
253 1 346 1 133 3 173 3 42 1 121 1 7 1 300 1 315 1 188 1 160 1 
7 1 242 1 78 1 207 1 
7 1 160 1 

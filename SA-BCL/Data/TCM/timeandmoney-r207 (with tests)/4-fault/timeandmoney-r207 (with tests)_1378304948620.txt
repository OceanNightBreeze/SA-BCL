#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArithmeticException 46 (43,219) (43,219) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArithmeticException 46 (43,219) (43,219) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArithmeticException 46 (43,219) (43,219) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArithmeticException 46 (43,219) (43,219) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 244 211 (48,352) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3524 | = null
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5368 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | STATEMENT | 698 | stmt -> ;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
307 1 43 1 72 1 351 1 46 1 131 1 225 1 341 1 212 1 138 1 366 1 165 1 380 1 219 1 
307 1 43 1 72 1 351 1 46 1 131 1 225 1 341 1 212 1 138 1 366 1 165 1 380 1 219 1 
307 1 43 1 72 1 351 1 46 1 131 1 225 1 341 1 212 1 138 1 366 1 165 1 380 1 219 1 
307 1 43 1 72 1 351 1 46 1 131 1 225 1 341 1 212 1 138 1 366 1 165 1 380 1 219 1 
92 1 204 1 231 1 350 3 183 2 46 1 160 1 131 1 225 1 192 3 137 1 212 4 228 2 138 1 366 1 165 1 317 1 380 4 
92 1 307 1 350 1 72 1 46 1 131 1 374 1 137 1 195 1 212 2 316 1 138 1 366 1 165 1 380 2 103 1 
92 1 187 1 95 1 72 1 46 1 172 1 225 1 192 7 228 4 366 2 100 1 317 1 204 1 231 3 350 5 183 2 160 1 131 1 137 1 212 9 138 2 242 1 165 1 380 9 
92 1 187 1 95 1 72 1 46 1 172 1 225 1 192 7 228 4 366 2 100 1 317 1 204 1 231 3 350 5 183 2 160 1 131 1 137 1 212 9 138 2 242 1 165 1 380 9 
92 1 187 1 231 1 72 1 350 2 192 1 137 1 212 3 228 1 138 2 366 2 165 1 380 3 
210 1 106 2 370 1 
41 1 324 2 329 2 251 2 186 2 259 1 54 2 313 2 
210 1 33 1 177 1 
154 1 114 1 41 1 70 1 324 1 186 1 313 1 372 1 305 1 198 1 329 1 251 1 54 1 104 1 
210 1 
372 1 210 1 180 1 154 2 56 1 234 1 198 2 177 1 
154 5 232 1 56 1 206 2 234 2 338 1 62 2 109 1 272 1 28 1 237 1 372 2 210 1 163 1 198 5 177 1 19 1 201 2 203 1 
115 1 222 1 41 1 143 2 117 2 308 1 26 1 75 2 312 1 313 2 122 1 78 2 151 1 175 1 251 3 99 1 54 3 202 1 102 1 7 1 320 1 233 1 156 1 84 1 349 1 324 2 158 1 88 1 184 1 32 2 186 2 259 1 65 1 16 1 214 1 329 2 261 1 
305 1 114 1 41 1 324 1 329 1 251 1 186 1 54 1 313 1 104 1 
154 1 286 1 118 1 340 1 185 1 210 1 240 1 329 1 198 1 177 1 251 1 293 1 54 1 104 1 
154 2 286 1 324 1 118 1 340 1 186 1 313 1 210 1 329 1 198 2 177 1 251 1 293 1 54 1 104 1 
372 1 154 1 234 1 198 1 298 1 
372 1 210 1 154 2 56 1 69 1 234 1 198 2 177 1 
154 1 234 1 198 1 
33 1 259 1 
345 1 324 1 353 1 186 1 313 1 259 2 329 2 251 2 54 2 
162 1 67 1 5 1 
233 1 222 1 143 1 117 1 308 1 184 1 32 1 259 1 249 1 122 1 175 1 251 1 261 1 54 1 102 1 7 1 
324 3 329 3 339 1 251 3 186 1 259 1 54 3 313 3 
305 1 324 1 329 1 251 1 54 1 313 1 104 1 
345 1 324 1 329 1 353 1 251 1 186 1 54 1 313 1 104 1 
93 1 115 1 222 1 41 1 143 1 308 1 118 1 117 1 26 1 339 1 75 2 340 1 313 3 122 1 78 1 151 1 175 1 198 1 251 4 99 1 54 4 102 1 7 1 104 1 154 1 320 1 233 1 286 1 322 1 84 1 349 1 324 3 353 1 184 1 88 1 32 1 186 2 259 1 16 1 214 1 329 3 20 1 261 1 293 1 
134 1 324 1 329 2 251 2 339 1 185 1 259 1 54 2 313 1 
154 1 322 1 286 1 118 1 324 3 353 1 339 2 340 1 186 1 313 3 363 1 210 1 198 1 329 3 251 3 20 1 293 1 54 3 104 1 
324 2 353 1 339 1 186 1 313 2 162 1 329 2 251 2 54 2 5 1 
233 1 222 1 143 1 117 1 308 1 184 1 32 1 259 1 122 1 175 1 251 1 261 1 54 1 102 1 7 1 
233 1 57 1 222 1 143 1 117 1 308 1 352 1 184 1 32 1 259 1 251 1 261 1 54 1 102 1 7 1 
221 1 115 1 297 1 75 2 78 4 149 1 151 1 199 1 99 1 30 1 202 2 5 2 320 1 321 1 349 1 356 1 162 2 15 1 136 1 67 2 214 1 16 2 111 1 362 1 
324 1 329 1 251 1 293 1 301 1 54 1 313 1 104 1 
233 1 222 1 143 1 308 1 324 1 117 1 339 1 184 1 32 1 313 1 122 1 162 1 329 1 175 1 251 2 20 1 261 1 54 2 102 1 7 1 
324 4 353 1 339 2 185 1 186 1 313 4 259 1 133 1 134 1 329 5 251 5 20 1 217 1 54 5 
305 1 324 2 329 2 251 2 301 1 54 2 313 2 104 1 
155 1 96 1 294 1 
166 1 155 2 245 1 294 2 139 1 264 1 
155 1 294 1 
155 1 294 1 
166 1 245 1 
166 1 245 1 
166 1 245 1 
346 1 155 1 294 1 
346 1 155 1 294 1 
346 1 155 1 294 1 
333 1 155 1 294 1 
333 1 155 1 294 1 
333 1 155 1 294 1 
38 1 82 3 154 2 40 1 155 2 223 1 309 2 258 1 238 1 13 2 304 2 210 1 280 2 18 1 198 2 29 2 262 1 294 2 264 1 
223 1 309 1 269 1 96 1 313 2 123 1 279 1 280 1 198 1 251 2 54 2 82 1 154 1 155 1 324 2 10 1 259 1 325 1 304 1 13 1 329 2 379 1 294 1 265 1 
364 1 374 1 174 1 36 1 131 2 225 1 
46 1 131 1 225 1 
374 1 46 1 131 1 
364 1 374 1 90 1 36 1 131 3 225 2 
364 1 374 1 36 2 131 2 225 1 
113 1 221 1 25 1 71 1 146 2 274 2 123 1 149 1 198 5 177 1 365 1 199 1 201 1 368 1 154 5 106 3 9 2 232 2 56 1 206 1 234 1 370 1 60 1 208 1 10 1 62 1 372 4 210 2 163 1 19 3 379 1 362 1 
221 3 23 1 25 3 298 5 146 6 28 1 47 1 149 3 80 1 281 1 198 9 177 1 365 2 199 3 201 2 285 1 154 9 106 9 9 6 232 6 56 1 234 6 206 2 370 3 59 1 60 2 10 4 208 1 62 2 209 5 372 7 210 5 163 1 19 8 362 3 
113 1 221 1 25 1 146 2 28 1 274 1 149 1 198 3 177 1 365 1 199 1 368 1 201 1 154 3 232 2 9 2 106 4 206 1 370 2 60 1 10 1 62 1 372 2 210 3 19 3 362 1 
113 1 221 2 25 2 146 4 28 1 274 2 149 2 281 1 198 4 177 1 365 1 199 2 201 1 368 1 285 1 154 4 106 7 9 4 232 4 206 1 370 3 59 1 60 1 10 2 62 1 372 3 210 4 19 5 362 2 
222 1 226 1 
33 1 222 1 34 1 
148 1 
222 1 7 1 
334 1 34 2 222 3 120 1 102 1 7 1 
222 1 102 1 7 1 
222 1 44 1 
335 1 321 3 39 1 221 1 157 1 236 1 159 1 136 2 78 7 16 3 124 1 377 2 51 1 35 1 306 1 199 1 202 4 
335 1 321 3 39 1 221 1 157 1 236 1 159 1 136 2 78 7 16 3 124 1 377 2 51 1 35 1 306 1 199 1 202 4 
335 1 321 3 39 1 221 1 157 1 236 1 159 1 136 2 78 7 16 3 328 1 124 1 51 1 377 2 35 1 306 1 199 1 202 4 
335 1 321 2 39 2 254 1 349 1 182 1 236 1 75 2 61 1 290 1 159 1 260 1 136 1 78 6 214 1 16 3 151 1 17 1 377 1 35 1 306 1 99 1 367 1 202 3 
335 1 39 1 221 1 75 4 78 9 151 2 124 1 51 1 199 1 99 2 125 1 202 5 321 4 349 2 157 1 236 1 260 1 136 3 214 2 16 4 377 2 35 1 306 1 91 1 
92 1 220 1 68 1 24 1 143 1 117 1 72 1 308 1 46 1 225 1 192 1 196 1 52 1 366 1 153 1 233 1 58 1 350 1 32 1 131 2 12 1 375 1 374 1 137 1 212 2 138 1 90 1 165 1 380 2 295 1 
92 1 220 1 68 1 24 1 143 1 246 1 117 1 72 1 308 1 267 1 224 1 46 1 225 1 192 2 196 1 52 1 366 1 233 1 58 1 350 1 32 1 131 2 12 1 375 1 374 1 137 1 212 3 138 1 90 1 380 3 
92 1 220 1 68 1 24 1 143 1 246 1 72 1 117 1 308 1 224 1 46 1 225 1 192 2 52 1 233 1 58 1 350 1 32 1 131 2 375 1 374 1 137 1 212 2 90 1 380 2 
179 1 233 1 222 1 24 2 143 1 308 1 72 2 117 1 267 1 73 1 32 1 98 1 375 2 212 1 164 1 138 1 330 1 52 2 366 1 261 1 343 1 380 1 7 1 
220 1 233 1 68 1 24 1 143 1 58 1 246 1 308 1 72 1 117 1 46 1 32 1 131 2 225 1 12 1 374 1 375 1 196 1 212 1 138 1 90 1 52 1 366 1 165 1 295 1 380 1 
110 1 
1 2 45 1 143 2 340 1 147 1 198 5 251 1 201 1 54 1 6 2 7 1 104 1 154 5 205 1 106 2 56 3 255 1 206 1 107 2 207 1 60 1 62 1 210 2 163 1 358 1 359 1 19 2 261 2 263 4 22 1 222 1 117 2 308 1 118 1 311 2 173 1 177 1 319 1 369 1 179 1 232 2 233 1 286 1 234 6 287 1 370 2 127 2 235 2 32 2 185 1 239 2 240 1 330 1 329 1 293 1 
22 1 118 1 340 1 173 1 198 3 251 1 54 1 104 1 154 3 180 1 56 1 286 1 234 2 207 1 185 1 239 1 358 1 240 1 359 1 329 1 293 1 263 2 
22 1 1 1 118 1 340 1 173 1 198 3 251 1 177 1 54 1 104 1 154 3 180 1 56 1 286 1 234 1 207 1 185 1 210 1 358 1 240 1 359 1 329 1 293 1 263 3 
22 1 1 1 118 1 340 1 173 1 198 3 251 1 177 1 54 1 104 1 180 1 154 3 56 1 286 1 234 2 207 1 235 1 185 1 239 1 210 1 358 1 240 1 359 1 329 1 293 1 263 3 
188 1 1 4 340 1 147 1 198 5 251 1 201 1 54 1 6 2 104 1 154 5 56 3 206 1 207 1 107 2 62 1 210 5 163 1 358 1 359 1 19 1 263 6 22 1 118 1 311 2 27 1 77 1 275 1 276 1 173 1 177 5 369 1 180 1 232 1 286 1 234 7 127 2 370 2 235 4 185 1 239 4 240 1 329 1 293 1 
1 2 340 1 147 1 198 4 251 1 201 1 54 1 6 2 104 1 154 4 106 2 56 2 205 1 206 1 207 1 107 2 62 1 210 2 163 1 358 1 359 1 19 1 263 4 22 1 118 1 311 2 173 1 177 1 369 1 232 1 286 1 234 4 127 2 370 2 235 2 185 1 239 2 240 1 329 1 293 1 
22 1 188 1 1 2 118 1 311 2 340 1 77 1 275 1 147 1 173 1 198 4 177 1 251 1 201 1 54 1 6 2 369 1 104 1 154 4 56 2 232 1 286 1 234 4 206 1 107 2 207 1 370 2 127 2 235 2 62 1 185 1 239 2 210 1 163 1 358 1 240 1 359 1 329 1 19 1 293 1 263 4 
22 1 188 1 1 2 118 1 311 2 340 1 77 1 275 1 147 1 173 1 198 4 177 1 251 1 201 1 54 1 6 2 369 1 104 1 154 4 56 2 232 1 286 1 234 4 206 1 107 2 207 1 370 2 127 2 235 2 62 1 185 1 239 2 210 1 163 1 358 1 240 1 359 1 329 1 19 1 293 1 263 4 
22 1 188 1 1 2 118 1 340 1 171 1 173 1 198 4 177 1 251 1 201 1 54 1 6 2 369 1 104 1 8 1 154 4 56 2 106 2 347 2 232 1 286 1 234 4 206 1 107 2 207 1 86 2 235 2 62 1 185 1 239 2 14 1 210 1 163 1 358 1 240 1 359 1 329 1 19 1 293 1 263 4 
22 1 188 1 1 3 118 1 311 2 340 1 77 1 275 1 147 1 276 1 173 1 198 4 177 1 251 1 201 1 54 1 6 2 369 1 104 1 154 4 56 2 232 1 286 1 206 1 234 5 107 2 207 1 370 2 127 2 235 3 62 1 185 1 239 3 210 1 163 1 358 1 240 1 359 1 329 1 19 1 293 1 263 5 
22 1 188 1 1 3 118 1 311 2 340 1 77 1 275 1 147 1 276 1 173 1 198 4 177 1 251 1 201 1 54 1 6 2 369 1 104 1 154 4 56 2 232 1 286 1 206 1 234 5 107 2 207 1 370 2 127 2 235 3 62 1 185 1 239 3 210 1 163 1 358 1 240 1 359 1 329 1 19 1 293 1 263 5 
1 2 340 1 198 4 251 1 201 1 54 1 6 2 104 1 8 1 154 4 347 2 106 2 56 2 205 1 206 1 207 1 107 2 62 1 210 1 163 1 358 1 359 1 19 1 263 4 22 1 118 1 173 1 177 1 369 1 232 1 286 1 234 4 86 2 235 2 185 1 239 2 240 1 329 1 293 1 
335 1 115 1 221 1 75 2 78 6 151 1 124 1 51 1 99 1 199 1 5 1 202 3 320 1 321 2 349 1 157 1 259 2 162 1 33 1 136 2 67 1 214 1 16 3 111 1 377 1 35 1 
266 1 115 2 221 2 25 2 247 1 26 1 75 4 273 1 49 1 78 11 149 1 151 2 99 2 367 2 199 1 53 1 202 6 5 3 104 1 321 2 320 1 349 2 236 1 61 2 129 1 259 1 162 8 136 1 67 8 16 5 214 2 292 1 362 2 
222 3 115 2 143 8 246 1 308 2 117 7 26 1 144 1 339 1 75 4 312 1 313 1 194 1 78 2 150 1 151 2 250 1 251 1 99 2 153 1 54 1 202 1 7 2 179 1 233 2 320 2 156 2 349 2 324 1 32 8 161 1 132 1 214 2 16 1 111 1 329 1 330 1 261 2 361 1 
115 1 221 1 25 1 247 1 75 2 313 1 78 3 149 1 151 1 251 1 99 1 199 1 54 1 5 1 202 1 321 1 320 1 349 1 324 1 353 1 186 1 291 1 162 1 136 1 67 1 214 1 16 2 329 1 362 1 
321 1 320 1 115 1 221 1 349 1 236 1 75 2 162 1 78 2 67 1 214 1 151 1 111 1 99 1 30 1 5 1 362 1 202 2 
321 1 320 1 115 1 297 1 349 1 75 2 162 1 136 1 78 2 67 1 214 1 149 1 16 2 151 1 111 1 99 1 199 1 5 1 
321 2 320 1 115 1 221 1 25 1 349 1 236 1 75 2 162 2 136 1 78 4 67 2 16 2 149 1 214 1 151 1 111 1 199 1 99 1 5 2 362 1 202 2 
321 1 320 1 115 1 221 1 349 1 236 1 75 2 162 1 132 1 78 2 67 1 214 1 151 1 99 1 30 1 5 1 362 1 202 2 
321 1 320 1 115 1 297 1 349 1 75 2 162 1 132 1 136 1 78 2 67 1 214 1 149 1 16 2 151 1 99 1 199 1 5 1 
321 2 320 1 115 1 221 1 25 1 349 1 236 1 75 2 162 2 132 1 136 1 78 4 67 2 16 2 149 1 214 1 151 1 199 1 99 1 5 2 362 1 202 2 
321 2 320 1 115 1 221 1 25 1 349 1 236 1 75 2 162 2 136 1 78 4 67 2 16 2 149 1 214 1 151 1 199 1 99 1 5 2 362 1 202 2 
222 1 115 1 143 1 308 1 117 1 26 1 75 2 312 1 122 1 78 2 151 1 175 1 251 1 99 1 54 1 202 1 102 1 7 1 233 1 320 1 349 1 184 1 88 1 32 1 259 1 214 1 16 1 261 1 
222 1 115 1 143 1 308 1 117 1 26 1 75 2 312 1 97 1 78 2 151 1 251 1 99 1 54 1 202 1 102 1 7 1 233 1 320 1 57 1 349 1 352 1 184 1 32 1 259 1 214 1 16 1 261 1 
321 2 320 1 115 1 221 1 25 1 247 1 349 1 236 1 75 2 162 2 136 1 78 4 67 2 16 2 149 1 214 1 151 1 199 1 99 1 5 2 362 1 202 2 
221 1 222 1 115 1 25 1 143 1 308 1 117 1 75 2 122 1 78 4 149 1 151 1 175 1 251 1 199 1 99 1 153 1 54 1 5 2 202 2 102 1 7 1 321 2 233 1 320 1 349 1 236 1 184 1 88 1 32 1 162 2 136 1 67 2 16 2 214 1 362 1 37 1 
115 1 221 1 25 1 247 1 75 2 313 1 78 3 149 1 151 1 251 1 199 1 99 1 54 1 202 2 5 1 321 1 320 1 349 1 324 1 353 1 236 1 87 1 186 1 162 1 67 1 16 1 214 1 329 1 362 1 
222 1 115 1 143 1 247 1 308 1 117 1 26 1 339 1 75 2 312 1 313 1 122 1 249 1 193 1 78 2 151 1 175 1 176 1 251 2 99 1 54 2 102 1 5 1 202 1 7 1 233 1 320 1 349 1 324 1 184 1 32 1 259 1 373 1 214 1 16 1 329 1 20 1 261 1 
335 1 94 2 143 3 246 1 247 1 339 1 299 1 149 2 151 3 51 1 251 3 199 3 99 3 54 3 102 2 5 7 202 10 7 2 253 1 349 3 157 1 259 2 162 7 67 7 16 10 214 3 20 1 261 1 21 2 362 2 115 3 222 2 221 3 25 2 117 3 308 2 26 1 119 1 75 6 312 1 313 1 122 2 78 20 124 1 175 2 320 3 233 2 321 8 126 2 324 1 88 2 184 2 236 4 32 3 136 4 377 1 35 1 329 1 37 2 
335 1 221 4 25 3 191 1 337 1 75 8 121 1 78 37 149 3 124 1 151 4 51 1 199 4 99 4 367 3 318 1 55 2 101 1 202 19 31 1 321 7 349 4 256 4 323 1 182 3 157 1 108 1 354 1 236 4 61 3 64 1 260 2 355 1 136 3 214 4 16 18 377 1 216 1 112 1 35 1 91 1 362 3 
335 1 221 4 25 3 191 1 337 1 75 8 121 1 78 35 149 3 124 1 151 4 51 1 199 4 99 4 367 2 318 1 55 1 101 1 202 18 321 5 349 4 256 4 323 1 182 2 157 1 108 1 354 1 236 3 61 2 64 1 260 2 355 1 136 2 214 4 16 17 377 1 216 1 112 1 35 1 91 1 362 3 
221 3 25 3 191 1 337 1 75 6 121 1 78 28 149 3 151 3 199 3 99 3 367 2 318 1 55 1 101 1 202 14 321 6 349 3 256 4 323 1 182 2 354 1 236 3 61 2 64 1 260 2 355 1 136 3 214 3 16 14 216 1 112 1 91 1 362 3 
335 1 221 4 25 3 191 1 337 1 75 8 78 33 149 3 124 1 151 4 51 1 199 4 99 4 367 2 318 1 55 1 101 1 202 17 321 6 288 1 349 4 256 3 323 1 182 2 157 1 108 1 354 1 236 3 61 2 64 1 260 2 355 1 136 3 214 4 16 16 377 1 216 1 112 1 35 1 91 1 362 3 
221 3 25 3 191 1 337 1 75 6 121 1 78 26 149 2 151 3 199 2 99 3 367 2 318 1 55 2 101 2 202 14 321 4 256 4 349 3 323 1 182 2 354 1 236 2 61 2 64 1 260 2 355 1 136 2 16 12 214 3 216 1 112 1 91 1 362 3 
38 1 304 1 13 1 155 1 309 1 280 1 332 1 262 1 294 1 264 1 
96 1 325 1 
168 1 304 1 13 1 135 1 155 1 309 1 280 1 294 1 284 1 
38 1 82 2 154 1 40 1 223 1 155 1 309 1 238 1 13 1 304 1 210 1 280 1 18 1 198 1 29 1 262 1 294 1 264 1 
38 1 82 2 154 1 40 1 223 1 155 1 309 1 238 1 13 1 304 1 210 1 280 1 18 1 198 1 29 1 262 1 294 1 264 1 
38 1 82 2 154 1 40 1 223 1 155 1 309 1 238 1 13 1 304 1 210 1 280 1 18 1 198 1 29 1 262 1 294 1 264 1 
346 1 105 1 139 1 
346 1 105 1 139 1 
333 1 213 1 
333 1 213 1 139 1 
269 1 265 1 
40 1 309 1 269 1 96 1 313 2 277 1 123 1 279 1 280 1 198 1 251 2 29 1 54 2 82 1 154 1 155 1 324 2 10 1 259 1 325 1 372 1 304 1 13 1 329 2 379 1 294 1 265 1 
346 1 105 1 
333 1 213 1 139 1 
222 1 115 1 143 2 247 1 336 1 308 1 2 1 117 2 26 1 75 2 312 1 271 1 78 2 150 1 151 1 250 1 251 2 99 1 282 1 54 2 202 1 7 1 233 1 320 1 156 2 349 1 32 2 357 1 214 1 16 1 329 2 
167 1 233 1 68 1 42 1 143 2 246 1 58 1 308 1 117 2 46 1 32 2 128 1 131 2 225 1 12 1 374 1 90 1 52 1 153 1 
167 1 68 1 233 1 143 1 246 1 58 1 117 1 308 1 46 1 32 1 131 2 302 1 225 1 12 1 374 1 90 1 52 1 
179 1 233 1 222 1 143 1 308 1 117 1 32 1 128 1 330 1 52 1 261 1 343 1 4 1 7 1 
167 1 233 1 68 1 42 1 143 1 246 1 58 1 117 1 308 1 46 1 32 1 128 1 131 2 225 1 12 1 374 1 90 1 52 1 
85 1 
210 1 232 1 33 1 177 1 19 1 272 1 237 1 
41 1 222 1 115 1 143 1 117 1 308 1 26 1 75 2 313 2 122 1 78 1 151 1 175 1 251 3 99 1 54 3 102 1 7 1 233 1 320 1 84 1 349 1 324 2 88 1 184 1 32 1 186 2 259 1 16 1 214 1 329 2 261 1 
9 2 106 4 232 2 206 1 45 1 370 2 60 1 146 2 62 1 210 4 163 1 377 1 177 2 19 1 201 1 
232 1 206 1 62 1 272 1 237 1 210 1 163 1 177 1 19 1 201 1 
232 5 9 5 106 10 221 2 94 1 25 2 116 1 370 5 146 5 210 5 149 2 376 2 19 5 199 2 362 2 
210 1 154 1 56 1 234 1 198 1 177 1 
222 1 143 4 45 2 308 1 117 4 28 1 315 1 342 1 198 3 3 1 201 2 319 1 7 1 179 1 154 3 233 1 232 2 56 2 348 2 255 1 206 2 234 4 60 2 62 2 32 4 163 1 330 1 19 2 261 2 
311 1 147 1 198 1 177 1 201 1 154 1 232 1 106 1 56 1 206 1 234 1 370 1 127 1 62 1 210 2 163 1 19 1 
141 1 334 1 94 2 45 1 143 3 44 2 248 1 146 6 50 1 149 2 198 5 3 1 199 2 153 1 201 4 102 3 7 3 154 5 56 3 9 6 106 12 348 1 206 4 60 2 62 4 63 2 210 8 163 4 19 9 261 1 362 2 222 10 221 2 25 2 116 2 308 3 117 3 118 2 272 1 226 3 177 2 178 2 233 4 232 8 234 5 289 2 370 6 32 3 237 1 34 2 376 2 241 2 243 2 244 2 
169 1 221 2 25 2 45 1 116 1 191 1 337 1 146 5 314 1 149 2 198 1 177 2 367 1 199 2 201 2 154 1 56 1 106 6 9 5 232 5 234 1 206 2 323 1 182 1 370 3 60 1 61 1 62 2 64 1 210 5 163 2 376 2 112 1 19 8 362 2 
335 1 114 1 221 2 41 1 70 1 116 1 313 1 275 1 124 1 198 1 251 1 199 1 201 1 54 1 104 1 154 1 232 2 206 1 324 1 62 1 186 1 305 1 163 1 376 2 35 1 89 1 329 1 19 2 
304 1 309 1 269 1 262 1 81 1 
304 1 309 1 74 1 
304 1 309 1 74 1 
304 1 309 1 74 1 
66 1 304 1 309 1 
66 1 304 1 309 1 
66 1 304 1 309 1 
304 1 309 1 
155 1 294 1 
335 2 221 5 25 2 337 1 191 1 75 4 78 24 149 1 124 2 151 2 51 1 367 1 99 2 199 4 202 14 321 9 349 2 182 1 323 1 157 1 236 4 61 1 64 1 260 1 136 5 16 10 214 2 377 1 112 1 89 1 35 2 91 1 362 2 
335 1 221 3 25 2 337 1 191 1 75 6 78 17 149 1 124 1 151 3 51 1 99 3 367 1 199 2 202 10 321 4 349 3 323 1 182 1 157 1 236 1 61 1 64 1 260 1 371 1 136 3 16 7 214 3 377 1 112 1 35 1 91 1 362 2 
335 1 221 3 25 2 337 1 191 1 75 6 78 19 149 2 124 1 151 3 51 1 367 1 99 3 199 3 202 9 321 4 349 3 323 1 182 1 157 1 236 1 61 1 64 1 260 1 371 1 136 3 16 10 214 3 377 1 112 1 35 1 91 1 362 2 
335 1 221 3 25 2 337 1 191 1 75 6 78 17 149 1 124 1 151 3 51 1 367 1 99 3 199 2 202 10 321 5 349 3 182 1 323 1 157 1 236 2 61 1 64 1 260 1 371 1 136 3 16 7 214 3 377 1 112 1 35 1 91 1 362 2 
335 2 221 5 25 2 337 1 191 1 75 4 78 24 149 1 124 2 151 2 51 1 367 1 99 2 199 4 202 14 321 9 349 2 182 1 323 1 157 1 236 4 61 1 64 1 260 1 136 5 16 10 214 2 377 1 112 1 89 1 35 2 91 1 362 2 
221 2 25 2 337 1 191 1 75 2 78 12 149 2 151 1 367 1 99 1 199 2 202 6 321 2 349 1 182 1 323 1 236 1 61 1 64 1 136 1 16 6 214 1 112 1 91 1 362 2 
335 1 221 3 25 2 191 1 337 1 75 8 78 18 149 1 124 1 151 4 51 1 99 4 367 1 199 2 202 10 321 5 349 4 323 1 182 1 157 1 236 2 61 1 64 1 260 2 371 1 136 3 16 8 214 4 377 1 112 1 35 1 91 1 362 2 
221 3 25 3 191 1 337 1 75 8 78 16 149 2 151 4 99 4 367 1 199 2 202 9 321 6 349 4 323 1 182 1 236 3 61 1 108 1 64 1 260 2 136 3 16 7 214 4 112 1 91 1 362 3 
335 3 321 6 221 1 157 1 236 3 78 7 136 3 16 4 124 1 51 2 35 3 199 1 202 3 
335 1 221 3 25 2 191 1 337 1 75 8 78 18 149 1 124 1 151 4 51 1 99 4 367 1 199 2 202 10 321 4 349 4 323 1 182 1 157 1 236 1 61 1 108 1 64 1 260 2 136 3 16 8 214 4 377 1 112 1 35 1 91 1 362 2 
335 1 321 3 221 1 349 2 157 1 236 1 75 4 260 1 78 8 136 2 16 4 214 2 124 1 151 2 377 1 51 1 35 1 199 1 99 2 202 4 
335 1 321 2 221 1 157 1 33 1 136 2 78 6 16 3 124 1 377 1 51 1 35 1 199 1 202 3 
321 2 221 1 25 1 349 1 75 2 236 1 371 1 136 1 78 4 16 2 149 1 214 1 151 1 199 1 99 1 362 1 202 2 
78 2 16 1 182 1 61 1 367 1 202 1 
335 2 221 5 25 2 75 2 273 1 78 25 149 2 124 2 151 1 51 1 199 5 367 2 99 1 53 1 202 13 321 8 349 1 157 1 61 2 236 4 260 1 136 4 16 12 214 1 377 1 89 1 35 2 292 1 362 2 
78 1 16 1 61 1 
78 1 367 1 202 1 
321 3 221 1 94 1 25 1 349 1 75 2 236 1 371 1 78 6 136 2 214 1 16 3 149 1 151 1 99 1 199 1 362 1 202 3 
221 2 25 2 337 1 191 1 75 2 78 12 149 2 151 1 367 1 99 1 199 2 202 6 321 2 349 1 182 1 323 1 236 1 61 1 64 1 136 1 16 6 214 1 112 1 91 1 362 2 
335 1 321 2 221 1 236 1 78 6 136 1 16 3 124 1 35 1 199 1 202 3 
335 1 321 2 349 1 157 1 236 1 290 1 75 2 260 1 136 1 78 3 16 2 214 1 151 1 51 1 35 1 99 1 202 1 
335 2 321 5 221 2 349 1 75 2 236 2 136 3 78 10 214 1 16 5 151 1 124 1 89 1 35 2 99 1 199 2 91 1 202 5 
321 1 221 1 349 1 75 2 236 1 78 2 214 1 151 1 99 1 91 1 362 1 202 2 
321 2 221 1 25 1 349 1 75 2 236 1 136 1 78 4 16 2 149 1 214 1 151 1 199 1 99 1 91 1 362 1 202 2 
335 1 321 2 349 3 290 1 108 1 75 6 236 1 260 1 78 3 136 1 16 2 214 3 151 3 35 1 99 3 91 1 202 1 
335 2 221 2 75 8 78 15 124 1 151 4 51 1 199 2 99 4 367 1 202 7 321 6 349 4 182 1 157 1 236 3 61 1 108 1 290 1 260 1 371 1 136 3 16 8 214 4 17 1 89 1 35 2 91 1 
134 1 329 1 251 1 268 1 185 1 259 1 54 1 
190 1 268 1 270 1 185 1 259 1 134 1 278 1 329 1 251 1 218 1 200 1 54 1 
179 1 233 1 33 1 222 1 143 1 308 1 117 1 330 1 32 1 261 1 7 1 
179 1 233 1 222 1 189 1 143 4 117 4 308 1 32 4 303 1 330 1 261 1 153 1 7 1 
233 2 253 1 222 1 348 1 143 2 117 2 308 1 32 2 257 1 326 1 229 1 283 1 102 1 7 1 
233 1 68 1 374 1 143 1 308 1 117 1 46 1 32 1 261 1 131 1 
233 1 222 1 143 2 150 1 246 1 308 1 117 2 32 2 282 1 153 1 7 1 
179 1 233 2 222 3 189 1 348 1 143 5 117 4 308 2 32 5 161 1 150 1 330 1 261 1 153 1 361 1 7 2 
179 1 233 2 222 3 189 1 348 1 143 5 117 4 308 2 32 5 11 1 161 1 150 1 330 1 261 1 153 1 7 2 
334 1 233 2 222 2 143 2 117 2 308 1 32 2 34 1 194 1 50 1 153 1 102 1 7 1 
233 1 222 1 143 1 324 1 117 1 308 1 339 1 184 1 32 1 259 1 313 1 122 1 329 1 251 2 261 1 54 2 102 1 7 1 
222 3 143 1 44 1 308 1 117 1 339 1 340 1 313 2 122 1 251 2 54 2 102 2 7 2 104 1 233 1 348 1 324 1 184 1 32 1 259 1 329 2 293 1 244 1 
222 3 143 2 44 1 308 1 117 2 339 1 340 1 313 2 251 2 54 2 102 2 7 2 104 1 233 1 348 1 324 1 352 1 184 1 32 2 259 1 303 1 329 2 293 1 244 1 
154 1 233 1 222 4 44 1 348 1 143 1 117 1 308 1 32 1 226 1 48 1 211 1 34 1 198 1 244 1 102 1 7 1 
154 2 233 1 222 4 44 1 348 1 143 3 234 1 289 1 118 1 117 3 308 1 32 3 303 1 226 1 210 1 34 1 198 2 177 1 261 1 244 1 102 1 7 1 
233 1 194 1 143 1 308 1 117 1 32 1 
334 1 233 3 222 3 156 1 143 7 246 1 117 6 308 2 144 1 32 7 257 1 326 1 161 1 194 1 150 1 152 1 261 2 153 1 361 1 102 1 7 2 
335 1 143 1 247 1 339 1 151 2 51 1 251 2 99 2 199 1 153 1 54 2 5 1 102 1 202 3 7 1 349 2 157 1 259 2 162 1 357 1 67 1 214 2 16 3 21 1 115 2 222 1 221 1 117 1 308 1 75 4 313 1 122 1 78 6 124 1 175 1 320 2 233 1 321 2 324 1 88 1 184 1 32 1 136 2 377 1 329 1 35 1 37 1 
222 2 143 1 117 1 118 1 272 1 226 1 198 3 177 1 3 1 178 1 201 2 154 3 232 1 56 1 206 2 234 2 289 1 32 1 62 2 237 1 372 1 210 1 163 2 34 1 241 1 19 1 243 1 261 1 
233 1 222 1 143 1 324 1 117 1 308 1 352 1 339 1 184 1 32 1 259 1 313 1 329 1 251 2 261 1 54 2 102 1 7 1 
334 1 233 2 222 1 348 1 143 1 117 1 308 1 32 1 257 1 326 1 152 1 102 1 7 1 
336 1 197 1 2 1 329 1 251 1 331 1 54 1 271 1 230 1 
296 1 227 1 331 1 
300 1 197 1 331 1 259 1 230 1 
296 1 154 2 322 1 286 1 118 1 340 1 259 1 372 1 210 1 227 1 300 2 197 2 198 2 177 1 331 1 378 1 293 1 104 1 230 2 
92 1 33 1 137 1 350 1 
92 1 350 1 172 1 192 1 195 1 137 1 212 3 138 1 366 1 165 1 380 3 
0 1 231 1 228 1 350 1 
92 1 350 1 
92 1 137 1 212 1 350 1 138 1 366 1 380 1 
24 1 72 1 380 1 
92 1 350 1 130 1 170 1 195 2 137 1 79 1 212 3 138 1 366 1 165 1 380 3 
92 1 192 1 137 1 212 2 350 1 138 1 183 1 366 1 380 2 
228 1 212 1 350 1 138 1 46 1 366 1 131 1 165 1 317 1 225 1 380 1 
92 1 212 1 350 1 138 1 366 1 165 1 380 1 
92 2 137 1 212 1 138 1 366 1 165 1 380 1 
92 1 140 1 350 1 145 1 212 2 138 2 366 2 165 1 252 1 380 2 
92 1 231 1 95 1 350 2 172 1 192 2 137 1 212 3 228 1 138 1 366 1 165 1 380 3 
92 1 83 1 350 1 46 1 131 2 225 1 192 1 374 1 137 1 212 2 138 1 90 1 366 1 165 1 380 2 
92 1 204 1 231 1 350 2 183 1 192 2 137 1 212 4 228 1 138 2 366 2 165 1 380 4 
92 1 137 1 212 1 350 1 138 1 366 1 165 1 380 1 
92 2 0 1 231 1 350 3 130 1 170 1 192 2 195 1 137 2 212 4 228 1 138 1 366 1 380 4 
92 1 350 1 192 1 137 1 212 2 138 1 215 1 366 1 242 1 360 1 165 1 380 2 
92 1 142 1 350 1 130 1 170 2 195 2 137 1 212 3 138 1 366 1 165 1 380 3 
181 2 327 1 350 2 76 1 
212 1 138 1 366 1 344 1 165 1 380 1 
92 1 192 1 137 1 212 2 350 1 138 1 366 1 165 1 172 1 380 2 
310 1 
92 1 137 1 212 1 350 1 138 1 366 1 165 1 380 1 

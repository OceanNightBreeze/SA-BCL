#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 32 10 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5189 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | OPERATOR | 2548 | >= -> <=
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1145 | return null
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
121 4 279 1 148 9 55 2 295 2 124 2 152 1 125 1 300 1 299 1 82 1 303 6 238 1 333 1 115 1 184 1 309 1 87 2 162 1 192 9 46 2 376 1 342 2 23 1 26 2 361 5 256 1 100 3 
121 4 279 1 148 9 55 2 295 2 124 2 152 1 125 1 300 1 299 1 82 1 303 6 238 1 333 1 115 1 184 1 309 1 87 2 162 1 192 9 46 2 376 1 342 2 23 1 361 5 26 2 256 1 100 3 
121 5 279 1 148 10 55 2 295 2 124 2 152 1 125 1 300 1 299 1 82 1 303 7 238 1 333 1 115 1 184 1 309 1 87 2 162 1 192 10 46 2 376 1 342 2 23 1 361 6 26 2 256 1 100 4 
121 3 279 1 148 7 55 2 295 2 124 2 152 1 125 1 299 1 82 1 303 4 238 1 333 1 115 1 184 1 309 1 87 2 162 1 192 7 46 2 376 1 342 2 23 1 361 4 26 1 256 1 100 2 
121 2 309 1 55 1 148 4 295 1 46 1 192 4 124 1 125 1 300 1 342 1 303 3 23 1 333 1 26 2 361 3 100 1 184 1 
148 2 55 1 87 1 162 1 46 1 192 2 124 1 376 1 342 1 23 1 12 1 316 1 333 1 361 1 243 1 184 1 
121 1 148 3 87 1 46 2 192 3 124 2 303 1 23 1 333 1 361 2 256 1 100 1 184 1 
121 4 148 9 55 1 295 1 124 2 152 1 125 1 300 1 303 7 333 1 115 1 184 1 309 1 87 1 192 9 46 2 273 1 342 1 23 1 361 5 26 2 256 1 100 3 31 1 
121 4 148 9 55 1 295 1 124 2 152 1 125 1 300 1 303 7 333 1 115 1 184 1 309 1 87 1 192 9 46 2 273 1 342 1 23 1 361 5 26 2 256 1 100 3 31 1 
50 1 106 1 210 1 
50 1 117 1 218 2 
259 2 248 2 45 2 141 1 15 2 34 2 48 1 197 2 
145 1 33 1 259 3 122 1 104 1 58 1 297 2 34 3 176 1 6 1 7 1 35 1 15 2 39 1 371 1 354 1 336 1 337 1 305 2 247 2 187 1 160 1 248 2 45 2 287 1 48 1 197 2 288 1 201 1 291 1 141 1 362 1 319 2 29 1 207 1 172 1 293 2 
259 1 248 1 45 1 15 1 34 1 118 1 231 1 48 1 197 1 359 1 
208 1 259 1 106 1 89 1 327 1 34 1 209 1 126 1 118 1 197 1 50 1 224 1 181 1 144 1 
208 1 259 1 248 1 106 1 89 1 327 2 45 1 209 2 34 1 118 1 197 1 50 1 181 1 15 1 144 1 
327 1 123 1 209 1 17 1 266 1 
50 1 106 1 327 2 59 1 209 2 107 1 17 1 266 1 
327 1 209 1 266 1 
259 1 325 1 248 1 327 1 45 1 209 1 34 1 118 1 48 1 197 1 359 1 15 1 231 1 17 1 
50 1 
102 1 50 1 106 1 327 2 59 1 209 2 17 1 266 1 
159 2 20 2 106 1 327 5 272 1 59 1 209 5 368 1 84 1 50 1 275 2 274 1 264 1 85 1 290 1 113 1 158 1 17 2 266 2 
141 1 210 1 
259 2 248 1 45 1 34 2 197 2 36 1 15 1 141 2 320 1 
24 1 245 1 185 1 
145 1 247 1 259 1 147 1 104 1 34 1 287 1 35 1 201 1 291 1 141 1 39 1 319 1 336 1 172 1 293 1 
259 5 188 2 248 4 45 4 34 5 197 5 199 1 224 1 213 1 15 1 141 1 317 1 335 1 320 1 
259 2 248 2 366 1 45 2 34 2 118 1 231 1 197 2 
145 1 247 1 259 2 188 1 248 1 104 1 45 1 34 2 287 1 197 1 35 1 213 1 201 1 291 1 39 1 336 1 319 1 172 1 185 1 293 1 
259 3 188 1 248 3 45 3 15 1 141 1 34 3 197 3 
259 1 248 1 45 1 34 1 118 1 231 1 197 1 
36 1 259 1 248 1 45 1 15 1 34 1 118 1 197 1 320 1 
145 1 208 1 33 1 259 4 122 1 104 1 327 1 58 1 297 2 34 4 209 1 6 1 7 1 35 1 213 1 181 1 15 2 39 1 371 1 336 1 305 1 247 1 339 1 188 1 160 1 340 1 248 3 89 1 45 3 287 1 118 1 48 1 197 3 288 1 201 1 291 1 141 1 362 1 319 1 29 1 320 1 172 1 144 1 293 1 
224 1 259 2 188 1 248 1 45 1 141 1 317 1 34 2 197 2 
208 1 259 3 188 2 248 3 340 1 327 1 89 1 45 3 209 1 34 3 175 1 118 1 197 3 50 1 213 1 181 1 15 1 320 1 144 1 
259 2 188 1 248 2 45 2 15 1 34 2 197 2 320 1 245 1 185 1 
145 1 247 1 259 1 104 1 34 1 287 1 35 1 201 1 291 1 141 1 39 1 319 1 336 1 172 1 293 1 
247 1 54 1 259 1 104 1 34 1 287 1 164 1 35 1 201 1 291 1 141 1 39 1 319 1 336 1 293 1 
33 1 346 1 297 2 6 2 7 1 8 1 237 1 371 1 305 4 245 2 185 2 187 2 189 1 69 1 195 1 341 1 72 1 165 1 343 1 288 1 24 2 230 1 362 1 29 1 
259 1 248 1 366 1 45 1 34 1 118 1 197 1 144 1 
253 1 348 1 
253 1 348 1 
283 1 222 1 
283 1 222 1 
283 1 222 1 
86 1 253 1 348 1 
253 1 353 1 348 1 
345 1 253 2 283 1 251 1 222 1 348 2 
86 1 253 1 348 1 
86 1 253 1 348 1 
253 1 170 1 348 1 
253 1 170 1 348 1 
253 1 170 1 348 1 
259 2 327 1 151 1 3 1 209 1 34 2 330 1 348 1 128 1 236 1 131 1 64 1 353 1 66 1 284 1 67 1 310 1 248 2 45 2 119 1 197 2 73 1 253 1 141 1 
310 2 260 1 174 1 327 2 209 2 347 1 348 2 128 1 50 1 345 1 62 1 253 2 73 2 131 2 304 1 182 1 66 3 67 2 173 2 
342 1 55 1 295 1 
342 1 55 1 12 1 
342 3 12 1 295 2 130 1 150 1 318 1 
342 2 308 1 12 1 295 1 150 1 318 1 
342 2 12 1 295 1 150 2 318 1 
327 5 106 1 151 1 59 1 209 5 212 1 84 1 237 1 85 2 216 2 352 1 241 1 113 3 284 1 218 3 17 4 266 1 20 1 159 1 117 1 136 1 90 1 195 1 119 1 313 2 72 1 343 1 50 2 275 1 227 1 257 2 321 1 
365 1 327 9 106 1 123 5 209 9 59 1 84 1 263 1 237 3 85 6 216 6 241 2 113 8 158 1 133 1 218 9 17 7 266 6 159 2 20 2 117 3 193 1 136 3 90 2 195 3 194 1 119 4 72 3 343 3 50 5 275 2 227 1 27 1 292 5 257 6 
106 1 327 3 209 3 212 1 237 1 85 2 216 2 241 1 113 3 158 1 218 4 17 2 20 1 159 1 117 2 90 1 136 1 195 1 119 1 313 1 72 1 50 3 343 1 275 1 321 1 257 2 
365 1 106 1 327 4 209 4 212 1 237 2 85 4 216 4 241 1 113 5 158 1 133 1 218 7 17 3 20 1 159 1 117 3 90 1 136 2 195 2 119 2 313 2 72 2 50 4 343 2 275 1 27 1 257 4 321 1 
35 1 139 1 210 1 
35 1 135 1 
301 1 
35 1 291 1 287 1 
35 1 229 1 
35 1 287 1 
35 3 350 1 139 2 68 1 291 1 287 1 
187 3 149 1 189 2 88 1 69 3 367 1 270 1 195 1 6 2 156 1 11 1 225 2 237 1 140 1 239 1 305 5 219 1 
187 3 149 1 189 2 88 1 69 3 367 1 270 1 195 1 6 2 156 1 11 1 225 2 237 1 140 1 239 1 305 5 219 1 
53 1 187 3 149 1 189 2 88 1 69 3 367 1 270 1 195 1 6 2 156 1 11 1 225 2 237 1 140 1 239 1 305 5 219 1 
33 1 1 4 149 1 105 1 326 1 281 1 367 2 297 2 156 1 6 14 7 1 180 1 11 2 237 4 239 1 371 1 132 3 305 29 116 1 219 2 187 15 189 5 88 1 270 2 69 10 136 3 195 4 250 1 72 3 343 3 225 3 288 1 140 5 75 1 
187 4 33 2 149 1 189 3 88 1 367 1 69 4 270 1 297 4 195 1 6 3 312 1 7 2 11 1 225 2 288 2 237 1 215 1 140 1 239 1 371 2 75 1 305 7 219 1 
55 1 148 2 103 1 295 1 124 1 83 1 302 1 303 1 12 1 351 1 217 1 130 1 333 1 240 1 39 1 372 1 336 1 184 1 247 1 356 1 87 1 192 2 46 1 223 1 342 2 23 1 361 1 319 1 363 1 293 1 
55 1 148 3 295 1 124 1 83 1 302 1 303 2 12 1 351 1 130 1 217 1 240 1 39 1 372 1 336 1 184 1 247 1 267 1 356 1 87 1 192 3 46 1 342 2 23 1 361 1 379 1 255 1 319 1 363 1 293 1 
148 2 55 1 295 1 83 1 302 1 303 2 12 1 217 1 130 1 39 1 372 1 336 1 184 1 247 1 356 1 87 1 192 2 342 2 23 1 361 1 379 1 255 1 319 1 363 1 293 1 
148 1 104 1 2 1 296 1 124 1 302 2 35 1 217 2 39 1 336 1 306 1 247 1 267 1 87 2 192 1 46 1 287 1 198 1 25 1 319 1 363 2 28 1 293 1 
55 1 148 1 103 1 295 1 124 1 83 1 302 1 12 1 351 1 217 1 130 1 333 1 240 1 39 1 372 1 336 1 247 1 356 1 87 1 192 1 46 1 342 2 379 1 319 1 363 1 293 1 
232 1 
208 1 259 1 104 2 106 1 262 2 59 3 209 5 153 1 112 2 265 1 113 2 218 2 307 1 266 6 159 1 20 1 117 2 268 1 118 1 224 1 275 1 276 2 319 2 28 1 76 1 77 1 323 2 324 2 327 5 34 1 126 1 369 1 35 1 84 1 332 1 37 2 85 2 181 1 40 2 39 1 242 1 336 1 247 2 44 4 89 1 90 1 287 1 197 1 198 1 50 2 96 1 204 1 206 1 293 2 144 1 
208 1 102 1 259 1 327 3 34 1 209 3 59 1 126 1 153 1 369 1 265 1 181 1 40 1 266 2 44 2 89 1 118 1 197 1 224 1 204 1 77 1 144 1 
208 1 102 1 259 1 327 3 106 1 34 1 209 3 59 1 126 1 153 1 369 1 112 1 265 1 181 1 266 1 44 3 89 1 118 1 197 1 224 1 50 1 204 1 77 1 144 1 
208 1 102 1 259 1 324 1 327 3 106 1 59 1 34 1 209 3 126 1 153 1 369 1 112 1 265 1 181 1 40 1 266 2 44 3 89 1 118 1 197 1 224 1 50 1 204 1 77 1 144 1 
208 1 102 1 259 2 106 1 262 2 209 5 59 3 153 1 211 1 13 1 112 3 265 1 15 1 113 1 266 7 159 1 20 1 117 2 118 2 359 1 224 1 275 1 276 2 231 1 77 1 78 1 323 2 324 4 325 1 327 5 34 2 126 1 369 1 84 1 181 1 85 1 37 2 40 4 248 1 44 5 89 1 45 1 48 1 197 2 50 1 96 1 252 1 204 1 206 1 381 1 144 1 
208 1 259 1 262 2 106 1 209 4 59 2 153 1 112 2 265 1 113 1 218 2 266 4 307 1 159 1 20 1 117 2 118 1 224 1 275 1 276 2 77 1 323 2 324 2 327 4 34 1 126 1 369 1 84 1 181 1 85 1 37 2 40 2 44 4 89 1 197 1 50 2 96 1 204 1 206 1 144 1 
208 1 78 1 323 2 259 1 324 2 106 1 262 2 327 4 59 2 34 1 209 4 126 1 153 1 211 1 369 1 84 1 13 1 112 2 37 2 85 1 265 1 181 1 40 2 113 1 266 4 20 1 159 1 117 2 44 4 89 1 118 1 197 1 50 1 224 1 275 1 276 2 96 1 204 1 206 1 77 1 144 1 
208 1 78 1 323 2 259 1 324 2 106 1 262 2 327 4 59 2 34 1 209 4 126 1 153 1 211 1 369 1 84 1 13 1 112 2 37 2 85 1 265 1 181 1 40 2 113 1 266 4 20 1 159 1 117 2 44 4 89 1 118 1 197 1 50 1 224 1 275 1 276 2 96 1 204 1 206 1 77 1 144 1 
208 1 233 1 323 2 259 1 324 2 106 1 327 4 4 1 59 2 34 1 209 4 126 1 153 1 369 1 84 1 13 1 112 2 37 2 85 1 265 1 181 1 40 2 113 1 218 2 266 4 338 1 20 1 159 1 44 4 89 1 311 2 118 1 197 1 49 2 50 1 224 1 275 1 96 1 204 1 77 1 144 1 
208 1 78 1 323 2 259 1 324 3 106 1 262 2 327 4 59 2 34 1 209 4 126 1 153 1 211 1 369 1 84 1 13 1 112 3 37 2 85 1 265 1 181 1 113 1 40 3 266 5 20 1 159 1 117 2 44 5 89 1 118 1 197 1 50 1 224 1 275 1 276 2 96 1 204 1 206 1 381 1 77 1 144 1 
208 1 78 1 323 2 259 1 324 3 106 1 262 2 327 4 59 2 34 1 209 4 126 1 153 1 211 1 369 1 84 1 13 1 112 3 37 2 85 1 265 1 181 1 113 1 40 3 266 5 20 1 159 1 117 2 44 5 89 1 118 1 197 1 50 1 224 1 275 1 276 2 96 1 204 1 206 1 381 1 77 1 144 1 
208 1 259 1 106 1 209 4 59 2 153 1 112 2 265 1 113 1 218 2 266 4 307 1 159 1 20 1 311 2 118 1 224 1 275 1 77 1 323 2 324 2 327 4 34 1 126 1 369 1 84 1 181 1 85 1 37 2 40 2 338 1 44 4 89 1 197 1 49 2 50 1 96 1 204 1 144 1 
33 1 149 1 367 1 297 2 210 1 6 2 7 1 237 1 239 1 371 1 245 1 305 4 185 1 219 1 187 2 189 2 88 1 69 2 195 1 341 1 288 1 225 1 24 1 141 1 362 1 29 1 
33 2 1 3 326 1 329 1 297 4 298 1 6 6 7 2 237 2 371 2 132 3 337 1 305 14 245 4 185 11 187 8 189 1 160 1 69 2 136 2 195 1 250 1 72 1 343 2 288 2 24 11 203 1 140 1 141 1 168 1 171 1 362 1 29 2 
145 1 33 1 147 1 259 2 56 1 104 1 34 2 297 2 6 1 7 1 35 1 213 1 39 1 371 1 336 1 337 1 245 1 305 2 247 1 187 1 188 1 160 1 248 1 269 1 45 1 287 1 197 1 288 1 201 1 254 1 291 1 141 1 168 1 319 1 362 1 29 1 172 1 293 1 
145 2 259 3 149 1 104 1 58 2 297 6 6 9 7 3 108 1 9 1 213 1 61 2 63 1 305 18 219 1 160 1 69 8 71 2 72 2 225 1 24 7 168 1 319 3 362 3 29 3 172 2 33 3 367 1 34 3 35 2 237 3 239 1 39 2 371 3 336 2 337 1 285 2 245 7 185 7 247 3 187 9 189 4 188 1 88 1 248 1 45 1 136 2 195 3 287 2 197 1 95 2 343 2 288 3 201 2 291 2 140 4 379 1 141 1 293 3 
33 2 259 1 104 2 34 1 297 4 176 2 6 1 7 2 127 1 35 3 39 2 371 2 336 2 337 1 305 2 19 1 247 7 187 1 188 1 160 1 248 1 21 1 45 1 377 1 287 2 196 1 341 1 197 1 94 1 198 1 223 1 288 2 202 1 379 1 319 8 362 2 29 2 28 1 293 8 
33 1 259 1 261 1 297 2 34 1 6 2 7 1 237 1 15 1 371 1 245 1 305 3 185 1 187 1 189 1 248 1 45 1 69 1 136 1 195 1 197 1 72 1 343 1 288 1 24 1 168 1 362 1 320 1 29 1 
33 1 187 2 69 1 297 2 341 1 7 1 8 1 343 1 288 1 24 1 237 1 140 1 371 1 362 1 29 1 245 1 305 2 185 1 
33 1 189 1 69 1 297 2 195 1 341 1 6 2 7 1 72 1 165 1 288 1 24 1 371 1 362 1 29 1 245 1 305 2 185 1 
33 1 297 2 6 2 7 1 237 1 371 1 305 4 245 2 185 2 187 2 189 1 69 2 136 1 195 1 341 1 72 1 343 1 288 1 24 2 140 1 362 1 29 1 
33 1 187 2 69 1 297 2 7 1 8 1 343 1 288 1 24 1 237 1 202 1 140 1 371 1 362 1 29 1 245 1 305 2 185 1 
33 1 189 1 69 1 297 2 195 1 6 2 7 1 72 1 165 1 288 1 24 1 202 1 371 1 362 1 29 1 245 1 305 2 185 1 
33 1 297 2 6 2 7 1 237 1 371 1 305 4 245 2 185 2 187 2 189 1 69 2 136 1 195 1 72 1 343 1 288 1 24 2 202 1 140 1 362 1 29 1 
33 1 297 2 6 2 7 1 237 1 371 1 305 4 245 2 185 2 187 2 189 1 69 2 136 1 195 1 72 1 343 1 288 1 24 2 140 1 362 1 29 1 
145 1 33 1 259 1 104 1 58 1 34 1 297 2 6 1 7 1 35 1 39 1 371 1 336 1 337 1 305 2 247 1 187 1 160 1 287 1 288 1 201 1 291 1 141 1 319 1 362 1 29 1 172 1 293 1 
54 1 33 1 259 1 104 1 34 1 297 2 6 1 7 1 35 1 14 1 39 1 371 1 336 1 337 1 305 2 247 1 187 1 160 1 287 1 164 1 288 1 201 1 291 1 141 1 319 1 362 1 29 1 293 1 
33 1 297 2 6 2 7 1 237 1 371 1 305 4 245 2 185 2 187 2 189 1 69 2 136 1 195 1 72 1 343 1 288 1 24 2 140 1 168 1 362 1 29 1 
145 1 33 1 259 1 58 1 34 1 297 2 6 2 7 1 35 1 237 1 61 1 39 1 371 1 336 1 245 2 305 4 185 2 247 1 187 2 189 1 69 2 136 1 195 1 287 1 72 1 223 1 343 1 288 1 24 2 201 1 140 1 291 1 319 1 362 1 29 1 172 1 293 1 
33 1 259 1 297 2 34 1 6 1 7 1 237 1 15 1 371 1 305 3 245 1 185 1 187 2 248 1 45 1 69 1 136 1 195 1 197 1 72 1 343 1 288 1 24 1 140 1 168 1 205 1 362 1 320 1 29 1 
258 1 33 2 1 2 294 1 326 1 297 4 6 10 7 2 178 1 237 3 371 2 132 1 305 19 373 1 187 9 190 1 189 3 69 6 136 3 91 1 195 3 93 2 312 1 250 1 72 3 343 3 288 2 226 1 140 3 277 2 
258 2 33 3 1 2 294 1 326 2 5 1 297 6 155 1 6 12 7 3 109 1 179 1 237 3 371 3 132 2 305 26 373 2 355 1 187 14 190 1 189 2 69 4 136 3 195 2 91 1 93 4 312 1 72 2 343 3 288 3 166 1 140 2 277 1 75 2 
258 2 1 4 294 1 149 1 5 1 297 6 6 20 155 1 7 3 109 1 305 39 219 1 355 1 69 8 312 1 72 4 166 1 225 1 75 1 277 1 364 1 33 3 326 3 367 1 178 1 179 1 237 5 239 1 132 3 371 3 373 1 187 19 189 4 190 1 88 1 136 4 195 5 91 1 93 4 250 1 343 4 288 3 140 4 
258 2 33 4 1 4 149 1 294 1 326 3 367 1 5 1 297 8 155 1 6 17 7 4 109 1 178 1 179 1 237 5 239 1 371 4 132 3 305 36 219 1 373 1 355 1 187 19 190 1 189 4 88 1 69 7 136 4 91 1 195 4 93 4 312 1 250 1 72 3 343 4 225 1 166 1 288 4 140 3 277 1 75 2 364 1 
258 1 33 2 1 4 149 1 294 1 326 2 367 1 5 1 297 4 155 1 6 24 7 2 109 1 179 1 237 8 239 1 371 2 132 4 305 50 219 1 373 1 355 1 187 26 190 1 189 7 88 1 69 14 136 7 91 1 195 8 93 4 312 1 250 2 72 7 343 7 225 1 166 1 288 2 203 2 140 7 277 1 75 1 
310 1 174 1 345 1 131 1 73 1 253 1 304 1 358 1 67 1 348 1 
3 1 353 1 
310 1 131 1 73 1 253 1 65 1 154 1 67 1 30 1 348 1 
52 1 86 1 
170 1 380 1 251 1 
310 1 174 1 327 1 209 1 347 1 348 1 128 1 50 1 345 1 62 1 253 1 73 1 131 1 304 1 182 1 66 2 67 1 173 1 
310 1 174 1 327 1 209 1 347 1 348 1 128 1 50 1 345 1 62 1 253 1 73 1 131 1 304 1 182 1 66 2 67 1 173 1 
310 1 174 1 327 1 209 1 347 1 348 1 128 1 50 1 345 1 62 1 253 1 73 1 131 1 304 1 182 1 66 2 67 1 173 1 
52 1 86 1 251 1 
52 1 86 1 251 1 
170 1 380 1 
170 1 380 1 251 1 
64 1 330 1 
259 2 327 1 151 1 3 1 34 2 347 1 209 1 330 1 348 1 236 1 131 1 64 1 353 1 66 1 284 1 67 1 114 1 17 1 310 1 248 2 45 2 119 1 197 2 73 1 253 1 141 1 173 1 
33 1 259 2 328 1 34 2 297 2 176 2 6 1 7 1 35 1 39 1 371 1 336 1 337 1 305 2 374 1 247 2 187 1 160 1 21 1 47 1 377 1 287 1 197 2 288 1 97 1 168 1 319 2 362 1 120 1 29 1 293 2 
247 2 55 1 43 1 295 1 282 1 83 1 342 2 223 1 12 1 60 1 130 1 379 1 240 1 39 1 372 1 336 1 319 2 363 1 293 2 
247 1 55 1 43 1 295 1 83 1 331 1 342 2 12 1 130 1 379 1 240 1 39 1 372 1 319 1 336 1 363 1 293 1 
247 1 104 1 296 1 271 1 282 1 287 1 35 1 198 1 39 1 336 1 319 1 363 1 28 1 293 1 
247 1 55 1 43 1 295 1 282 1 83 1 342 2 12 1 60 1 130 1 379 1 240 1 39 1 372 1 336 1 319 1 363 1 293 1 
183 1 
50 1 264 1 85 1 106 1 113 1 272 1 210 1 
262 1 327 1 106 1 59 1 209 1 84 1 85 1 113 1 218 1 266 1 20 1 159 1 117 1 50 2 275 1 276 1 206 1 
146 1 104 1 106 2 209 5 59 3 349 1 350 1 264 1 216 6 113 9 218 12 266 5 220 2 159 4 20 4 161 2 117 6 272 1 71 2 72 2 223 1 360 2 314 2 275 4 229 2 319 3 327 5 234 1 370 2 35 10 84 4 237 2 181 2 85 8 38 2 39 3 242 1 336 4 135 3 246 1 247 3 90 2 286 1 249 2 136 2 195 2 287 3 50 8 343 2 139 2 98 2 291 3 257 6 293 3 
1 1 327 1 326 1 106 2 209 1 59 1 155 1 370 1 109 1 84 2 179 1 237 2 85 5 216 5 113 8 242 1 132 1 218 6 266 1 355 1 375 1 20 2 159 2 117 3 90 1 136 2 195 2 72 2 360 2 50 5 343 2 275 2 166 1 74 1 257 5 
78 1 259 1 149 1 57 1 325 1 327 1 367 1 34 1 209 1 370 1 84 1 237 2 85 2 15 1 113 2 219 1 20 1 159 1 248 1 45 1 195 1 118 1 48 1 197 1 359 1 360 2 275 1 231 1 
159 1 20 1 106 1 272 1 84 1 50 1 275 1 264 1 85 1 113 1 
117 5 136 2 195 2 71 1 370 1 72 2 360 2 343 2 50 5 237 2 85 5 216 5 113 5 218 10 257 5 
50 1 106 1 327 1 209 1 59 1 266 1 
104 2 327 3 234 1 59 2 209 3 35 1 349 2 84 1 332 1 85 2 39 1 113 2 158 1 242 2 336 1 266 4 247 4 20 2 159 2 268 1 22 1 90 2 287 1 198 1 275 2 99 1 319 4 28 1 293 4 
145 1 33 1 259 3 104 1 122 1 58 1 297 2 34 3 6 1 7 1 35 1 15 2 39 1 371 1 336 1 305 1 247 1 160 1 248 2 45 2 48 1 287 1 197 2 288 1 201 1 291 1 141 1 319 1 362 1 29 1 172 1 293 1 
159 1 20 1 117 2 106 2 90 1 84 1 50 4 225 1 275 1 85 2 216 2 113 1 242 1 218 4 257 2 
0 1 131 1 73 1 
174 1 131 1 73 1 334 1 330 1 
0 1 131 1 73 1 
0 1 131 1 73 1 
167 1 131 1 73 1 
167 1 131 1 73 1 
167 1 131 1 73 1 
131 1 73 1 
253 1 348 1 
187 3 33 2 149 1 189 2 88 1 69 3 367 1 297 4 195 1 6 3 7 2 225 1 288 2 237 1 140 1 239 1 371 2 75 1 305 6 219 1 
187 2 225 1 237 1 149 1 189 2 88 1 69 2 367 1 239 1 195 1 210 1 6 2 305 4 219 1 
33 1 187 2 189 1 69 2 297 2 136 1 195 1 6 2 7 1 72 1 343 1 288 1 237 1 140 1 41 1 371 1 305 4 
187 3 1 2 189 1 326 1 69 2 136 1 195 1 6 4 250 1 72 1 343 1 237 1 140 1 132 1 305 7 
33 2 1 2 149 1 367 2 297 4 6 11 7 2 237 3 214 1 239 1 132 2 371 2 305 21 219 2 187 10 189 5 88 1 69 9 136 2 195 3 250 1 72 2 343 2 225 1 288 2 203 1 140 4 171 1 75 2 
1 1 6 1 305 1 
187 1 132 1 305 1 
33 1 187 3 189 2 69 3 297 2 136 1 195 1 71 1 6 3 7 1 72 1 343 1 288 1 237 1 140 1 371 1 41 1 305 6 
33 1 1 1 326 1 297 2 6 6 155 1 7 1 109 1 179 1 237 2 132 1 371 1 305 12 355 1 187 6 189 1 69 2 136 2 195 2 312 1 72 2 343 2 288 1 166 1 140 1 
187 1 237 1 149 1 195 1 6 1 305 2 
187 1 33 1 189 1 88 1 69 2 367 1 297 2 6 2 7 1 288 1 214 1 140 1 239 1 371 1 75 1 305 3 219 1 
33 1 187 4 189 2 149 1 57 1 367 1 69 4 297 2 195 2 6 4 7 1 312 1 288 1 237 2 140 2 371 1 305 8 219 1 
33 1 187 2 69 1 297 2 312 1 7 1 343 1 288 1 237 1 140 1 371 1 305 2 
33 1 187 2 189 1 69 2 297 2 136 1 195 1 6 2 312 1 7 1 72 1 343 1 288 1 237 1 140 1 371 1 305 4 
33 3 187 1 189 1 367 1 69 2 297 6 6 2 312 1 7 3 178 1 288 3 214 1 140 1 371 3 75 1 305 3 219 1 
33 5 1 4 149 2 105 1 326 1 367 2 297 10 6 16 7 5 178 1 180 1 214 1 237 5 239 1 41 1 371 5 132 3 116 1 305 30 219 2 187 14 189 6 88 1 69 11 136 3 195 5 312 1 250 1 72 3 343 3 225 1 288 5 140 5 75 2 
33 1 1 1 149 1 326 1 367 1 297 2 6 3 7 1 109 1 237 1 239 1 132 1 371 1 305 6 219 1 187 3 189 2 88 1 69 2 195 1 312 1 225 1 288 1 
33 2 1 2 149 1 326 1 367 1 297 4 6 4 7 2 109 1 237 2 239 1 371 2 41 1 132 1 305 9 219 1 187 5 189 2 88 1 69 3 136 1 195 1 312 1 250 1 343 1 225 1 288 2 140 1 
33 3 1 1 149 1 326 1 367 1 297 6 6 9 155 1 7 3 109 1 179 1 237 3 239 1 41 1 132 1 371 3 305 17 219 1 355 1 187 8 189 3 88 1 69 4 136 2 195 3 312 1 72 2 343 2 225 1 288 3 166 1 140 1 75 1 
33 3 1 1 149 1 326 1 367 1 297 6 6 6 155 1 7 3 109 1 179 1 237 3 239 1 41 1 132 1 371 3 305 15 219 1 355 1 187 9 189 3 88 1 69 5 136 2 195 2 312 1 72 1 343 2 225 1 288 3 166 1 140 2 75 1 
33 1 1 1 149 1 326 1 367 1 297 2 6 3 7 1 109 1 237 1 239 1 132 1 371 1 305 6 219 1 187 3 189 2 88 1 69 2 195 1 312 1 225 1 288 1 
33 1 1 1 326 1 297 2 6 6 155 1 7 1 109 1 179 1 237 2 132 1 371 1 305 12 355 1 187 6 189 1 69 2 136 2 195 2 312 1 72 2 343 2 288 1 166 1 140 1 
33 4 1 1 149 1 326 1 367 1 297 8 155 1 6 7 7 4 109 1 179 1 237 3 239 1 41 1 371 4 132 1 305 16 219 1 355 1 187 9 189 3 88 1 69 5 136 2 195 2 312 1 72 1 343 2 225 1 288 4 166 1 140 2 75 2 
33 4 1 1 326 1 297 8 155 1 6 7 7 4 109 1 178 1 179 1 237 3 371 4 132 1 305 16 355 1 187 9 189 3 69 6 136 3 195 2 312 1 72 2 343 3 288 4 166 1 140 3 75 2 
187 5 189 4 149 2 57 1 88 1 367 2 69 7 195 3 6 4 225 1 237 3 140 3 239 1 305 9 219 2 
33 4 1 1 149 1 326 1 367 1 297 8 155 1 6 7 7 4 109 1 178 1 179 1 237 3 239 1 371 4 132 1 305 16 219 1 355 1 187 9 189 3 88 1 69 4 136 2 195 2 312 1 72 1 343 2 225 1 288 4 166 1 140 1 75 2 
224 1 32 1 259 1 141 1 34 1 317 1 197 1 
32 1 10 1 228 1 70 1 169 1 143 1 
35 1 198 1 247 1 104 1 39 1 336 1 287 1 210 1 319 1 28 1 293 1 
145 1 247 1 259 2 188 1 248 1 104 1 45 1 34 2 287 1 197 1 35 1 201 1 291 1 141 1 39 1 336 1 319 1 293 1 
145 1 259 2 34 2 35 3 349 1 39 1 336 1 247 1 188 1 248 2 89 1 45 1 287 2 118 1 197 2 314 1 201 1 291 2 141 1 229 1 319 1 293 1 144 1 
54 1 259 2 34 2 35 3 349 1 129 1 39 1 336 1 247 2 188 1 248 2 89 1 45 1 287 2 118 1 197 2 314 1 201 1 291 2 141 1 229 1 319 2 293 2 144 1 
104 1 327 2 106 1 209 2 35 4 349 1 129 1 181 1 39 1 336 1 42 1 135 1 266 1 247 3 287 1 314 1 50 1 139 1 289 1 291 1 229 1 319 3 293 3 
247 3 104 1 106 1 327 2 209 2 287 1 35 4 314 1 349 1 50 1 129 1 139 1 181 1 98 1 291 1 229 1 39 1 336 1 319 3 135 1 293 3 266 1 
247 1 39 1 336 1 319 1 293 1 94 1 
186 1 19 1 247 6 104 2 21 1 176 1 92 1 287 2 81 1 196 1 94 1 127 1 35 3 223 1 350 1 291 1 379 1 39 2 319 7 336 3 293 7 
145 1 259 2 149 1 58 1 297 4 6 2 7 2 61 1 305 4 219 1 69 2 223 1 225 1 24 1 168 1 319 1 362 2 29 2 172 1 33 2 367 1 34 2 35 1 237 1 239 1 39 1 371 2 336 1 245 1 185 1 247 1 374 1 187 2 188 1 189 2 88 1 248 1 45 1 195 1 287 1 197 1 95 1 288 2 201 1 291 1 141 1 293 1 
104 1 106 1 327 3 234 1 209 3 59 1 35 2 84 2 264 1 85 1 181 1 113 1 38 1 17 1 135 1 266 2 220 1 247 1 20 2 159 2 272 1 249 1 50 1 275 2 139 1 98 1 319 1 293 1 
247 2 286 1 287 1 94 1 35 2 223 1 350 1 139 1 291 1 39 1 319 2 336 2 293 2 
247 4 104 1 280 1 287 1 198 1 35 1 223 1 129 1 39 1 336 1 319 4 28 1 293 4 
186 1 247 2 79 1 80 1 287 1 81 1 35 1 349 1 63 1 291 1 39 1 319 2 336 2 293 2 
342 1 247 1 55 1 12 1 104 1 39 1 336 1 319 1 83 1 293 1 
247 2 21 1 328 1 287 1 35 1 223 1 379 1 39 1 319 2 336 1 293 2 
247 4 19 1 104 1 280 1 21 1 287 2 196 1 198 1 35 3 349 1 223 1 39 2 319 5 336 2 28 1 293 5 
247 4 104 1 280 1 21 1 287 2 196 1 198 1 157 1 35 3 349 1 223 1 39 2 319 5 336 2 28 1 293 5 
247 1 54 1 259 2 188 1 248 1 104 1 45 1 34 2 287 1 197 1 35 1 201 1 291 1 141 1 39 1 336 1 319 1 293 1 
186 1 247 1 92 1 287 1 81 1 35 1 349 1 350 1 291 1 39 1 319 1 336 2 293 1 
221 1 141 1 244 1 235 1 137 1 
208 1 221 2 340 1 106 1 89 1 327 2 209 2 118 1 235 2 137 2 50 1 111 1 181 1 315 1 141 1 142 1 244 1 17 1 144 1 
259 1 221 1 47 1 34 1 197 1 137 1 97 1 244 1 120 1 
315 1 142 1 244 1 
23 1 361 1 210 1 184 1 
23 1 148 1 192 1 46 1 361 1 124 1 184 1 
148 1 87 1 217 1 
148 3 191 1 162 2 357 1 46 1 192 3 124 1 23 1 333 1 361 1 16 1 184 1 
303 1 23 1 148 2 192 2 46 1 361 1 26 1 124 1 184 1 
121 1 309 1 148 1 55 1 295 1 46 1 192 1 124 1 342 1 333 1 361 1 
148 1 192 1 46 1 333 1 361 1 124 1 184 1 
23 1 148 1 192 1 46 1 333 1 124 1 184 2 
148 2 46 2 192 2 124 2 138 1 110 1 333 1 361 1 51 1 184 1 
121 1 148 3 46 1 192 3 124 1 152 1 303 2 23 1 333 1 361 2 100 1 115 1 184 1 
148 2 55 1 295 1 46 1 192 2 124 1 342 2 303 1 23 1 12 1 378 1 130 1 333 1 361 1 184 1 
121 1 148 4 46 2 192 4 124 2 300 1 303 2 23 1 333 1 26 1 361 2 100 1 184 1 
23 1 148 1 192 1 46 1 333 1 361 1 124 1 184 1 
121 1 148 4 191 1 162 1 192 4 46 1 124 1 303 2 23 2 361 3 16 1 100 1 184 2 101 1 
322 1 148 2 46 1 192 2 124 1 303 1 23 1 333 1 361 1 31 1 184 1 278 1 
148 3 191 2 162 2 46 1 192 3 124 1 200 1 23 1 333 1 361 1 16 1 184 1 
361 2 177 2 134 1 163 1 
344 1 148 1 192 1 46 1 333 1 124 1 
303 1 23 1 148 2 192 2 46 1 333 1 361 1 124 1 115 1 184 1 
18 1 
23 1 148 1 192 1 46 1 333 1 361 1 124 1 184 1 
303 1 23 1 148 3 162 1 192 3 46 1 333 1 361 1 124 1 115 1 184 1 
121 1 361 1 100 1 101 1 
361 1 184 1 

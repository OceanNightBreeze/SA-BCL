#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (15,97,185) (15,97,185) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 45 23 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 45 23 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 45 23 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 45 23 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 45 23 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 45 23 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 45 23 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 45 23 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 45 23 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 45 23 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 45 23 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 45 23 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1107 | + -> *
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> ==
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3738 | == -> >
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V | STATEMENT | 577 | stmt -> ;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
62 1 236 1 318 5 239 1 266 1 89 2 51 4 199 1 179 1 180 1 93 1 275 1 247 1 19 2 303 3 304 1 135 2 306 1 356 2 43 2 254 6 165 9 280 2 359 1 209 1 146 2 212 1 120 9 
62 1 236 1 318 5 239 1 266 1 89 2 51 4 199 1 179 1 180 1 93 1 275 1 247 1 19 2 303 3 304 1 135 2 306 1 356 2 43 2 254 6 165 9 280 2 359 1 209 1 146 2 212 1 120 9 
62 1 236 1 318 6 239 1 266 1 89 2 51 5 199 1 179 1 180 1 93 1 275 1 247 1 19 2 303 4 304 1 135 2 306 1 356 2 43 2 254 7 165 10 280 2 359 1 209 1 146 2 212 1 120 10 
236 1 318 4 239 1 266 1 89 2 51 3 199 1 179 1 180 1 93 1 275 1 247 1 19 2 303 2 304 1 135 2 306 1 356 2 43 2 254 4 165 7 280 1 359 1 209 1 146 2 212 1 120 7 
62 1 19 1 303 1 318 3 135 1 306 1 356 1 43 1 254 3 165 4 280 2 51 2 359 1 199 1 146 1 179 1 120 4 93 1 
236 1 315 1 247 1 318 1 70 1 4 1 135 1 306 1 356 1 43 1 89 1 165 2 199 1 146 1 120 2 93 1 
303 1 318 2 135 2 306 1 89 1 254 1 165 3 51 1 199 1 146 2 120 3 180 1 93 1 
62 1 289 1 318 5 239 1 89 1 51 4 199 1 179 1 180 1 93 1 19 1 303 3 305 1 135 2 306 1 356 1 43 1 254 7 165 9 280 2 359 1 146 2 212 1 120 9 
62 1 289 1 318 5 239 1 89 1 51 4 199 1 179 1 180 1 93 1 19 1 303 3 305 1 135 2 306 1 356 1 43 1 254 7 165 9 280 2 359 1 146 2 212 1 120 9 
222 1 253 1 137 1 
333 1 336 2 137 1 
55 1 334 2 103 2 188 2 204 2 219 1 285 2 234 2 
213 2 26 2 313 1 172 1 3 1 290 2 295 2 196 1 8 1 270 1 197 1 299 1 219 1 348 1 53 1 92 1 55 1 16 1 328 1 112 2 18 1 78 1 96 1 204 2 329 1 251 1 207 1 140 1 61 1 334 2 103 2 188 2 233 1 285 3 287 1 362 1 234 3 
331 1 351 1 334 1 103 1 188 1 204 1 200 1 219 1 285 1 234 1 
121 1 293 1 253 1 229 1 137 1 50 1 331 1 139 1 101 1 334 1 177 1 157 1 285 1 234 1 
121 2 293 1 204 1 253 1 137 1 139 2 50 1 331 1 101 1 334 1 188 1 103 1 177 1 285 1 234 1 
139 1 327 1 121 1 32 1 71 1 
139 2 36 1 121 2 32 1 273 1 71 1 253 1 137 1 
139 1 121 1 71 1 
121 1 351 1 204 1 331 1 139 1 184 1 32 1 334 1 188 1 103 1 200 1 219 1 285 1 234 1 
137 1 
139 2 36 1 121 2 32 1 237 1 71 1 253 1 137 1 
33 1 36 1 121 5 202 1 122 1 64 2 71 2 253 1 137 1 5 1 58 1 139 5 155 1 32 2 259 2 168 1 178 2 47 1 288 1 
55 1 222 1 
55 2 334 2 103 1 188 1 204 1 285 2 228 1 88 1 234 2 
278 1 109 1 355 1 
55 1 313 1 16 1 3 1 112 1 18 1 290 1 227 1 295 1 207 1 61 1 299 1 285 1 53 1 362 1 234 1 
313 1 16 1 3 1 112 1 18 1 290 1 29 1 126 1 295 1 355 1 207 1 61 1 334 1 188 1 103 1 299 1 285 2 53 1 362 1 234 2 
55 1 29 1 334 3 103 3 188 3 204 1 285 3 234 3 
331 1 334 1 103 1 188 1 200 1 285 1 234 1 
331 1 334 1 103 1 188 1 204 1 228 1 285 1 234 1 88 1 
213 1 26 2 313 1 121 1 316 1 3 1 290 1 29 1 293 1 126 1 295 1 88 1 50 1 8 1 270 1 197 1 177 1 299 1 219 1 348 1 53 1 55 1 16 1 328 1 112 1 78 1 18 1 203 1 204 2 329 1 251 1 207 1 331 1 139 1 61 1 101 1 334 3 103 3 188 3 233 1 285 4 287 1 362 1 234 4 
55 1 291 1 334 2 29 1 103 1 188 1 285 2 229 1 234 2 
121 1 316 1 29 2 293 1 204 1 126 1 137 1 88 1 139 1 331 1 50 1 101 1 334 3 188 3 103 3 261 1 177 1 285 3 234 3 
29 1 204 1 355 1 88 1 334 2 109 1 188 2 103 2 285 2 234 2 
55 1 313 1 16 1 112 1 3 1 18 1 290 1 295 1 207 1 61 1 299 1 285 1 53 1 362 1 234 1 
55 1 16 1 112 1 3 1 18 1 290 1 295 1 207 1 61 1 85 1 299 1 285 1 223 1 53 1 234 1 
213 4 26 2 63 1 337 1 196 2 241 1 296 1 8 1 270 2 109 2 156 1 348 1 328 1 276 1 278 2 114 1 329 1 355 2 251 1 82 1 282 1 105 1 287 1 363 1 
331 1 334 1 352 1 293 1 103 1 188 1 285 1 234 1 
189 1 55 1 291 1 29 2 204 1 126 1 229 1 88 1 332 1 334 5 188 4 103 4 285 5 234 5 
331 1 352 1 334 2 103 2 188 2 200 1 285 2 234 2 
20 1 97 1 
20 1 97 1 
15 1 2 1 
15 1 2 1 
15 1 2 1 
159 1 20 1 97 1 
159 1 20 1 97 1 
15 1 20 2 2 1 97 2 
20 1 185 1 97 1 
159 1 20 1 97 1 
20 1 10 1 97 1 
20 1 10 1 97 1 
20 1 10 1 97 1 
35 1 121 2 97 2 107 1 125 2 249 2 42 1 195 1 252 2 137 1 323 1 20 2 100 1 139 2 256 3 52 2 186 1 300 1 170 2 
121 1 125 1 153 1 218 1 55 1 97 1 249 1 205 1 252 1 20 1 83 1 256 1 139 1 208 1 185 1 186 1 334 2 103 2 188 2 167 1 285 2 286 1 170 1 234 2 
19 1 356 1 43 1 
315 1 356 1 43 1 
315 1 19 2 73 1 116 1 215 1 43 3 
357 1 315 1 19 1 116 1 215 1 43 2 
315 1 19 1 116 2 215 1 43 2 
121 5 63 1 64 1 336 3 337 1 71 1 153 1 241 1 155 1 32 4 218 1 298 1 220 1 178 1 225 1 33 3 350 1 36 1 111 2 164 2 253 1 117 1 137 2 58 2 281 1 139 5 333 1 259 1 144 1 286 1 105 1 335 2 
121 9 63 3 122 1 64 2 336 9 337 3 71 6 321 5 343 1 241 3 271 1 155 1 32 7 218 4 298 2 220 2 178 2 225 3 33 8 34 1 327 5 36 1 37 1 111 6 133 1 164 6 253 1 81 1 137 5 58 6 139 9 333 3 259 2 144 1 105 3 
121 3 63 1 64 1 122 1 336 4 337 1 241 1 32 2 218 1 298 1 220 1 178 1 225 1 33 3 350 1 111 2 164 2 253 1 137 3 117 1 58 2 139 3 333 2 259 1 105 1 335 1 
121 4 63 2 64 1 122 1 336 7 337 2 343 1 241 2 32 3 218 2 298 1 220 1 178 1 225 2 33 5 34 1 350 1 111 4 37 1 164 4 253 1 137 4 117 1 58 4 139 4 333 3 259 1 105 2 335 2 
3 1 102 1 222 1 
3 1 67 1 
40 1 
3 1 53 1 
16 1 102 2 3 3 272 1 108 1 53 1 
16 1 3 1 53 1 
3 1 17 1 
213 7 160 1 63 1 66 2 292 1 82 3 44 1 196 4 241 1 270 3 154 1 84 1 260 1 129 1 325 1 130 1 363 2 
213 7 160 1 63 1 66 2 292 1 82 3 44 1 196 4 241 1 270 3 154 1 84 1 260 1 129 1 325 1 130 1 363 2 
213 7 160 1 63 1 66 2 292 1 342 1 82 3 44 1 196 4 241 1 270 3 154 1 84 1 260 1 129 1 325 1 130 1 363 2 
213 31 26 2 171 1 63 4 65 4 66 3 148 1 337 3 292 1 340 1 294 1 196 16 267 1 241 4 269 3 270 15 154 2 129 2 325 1 348 1 130 2 225 3 160 1 328 1 329 1 44 1 82 10 84 2 260 5 104 1 105 3 287 1 363 5 312 1 
213 9 26 4 171 1 63 1 66 2 196 5 241 1 154 1 270 4 198 1 129 1 325 1 348 2 130 1 160 1 328 2 329 2 82 4 44 1 84 1 260 1 360 1 287 2 363 3 
315 1 290 1 318 1 295 1 341 1 320 1 152 1 89 1 176 1 199 1 299 1 73 1 347 1 110 1 93 1 112 1 19 1 113 1 41 1 135 1 306 1 356 1 43 2 254 1 165 2 60 1 61 1 143 1 146 1 120 2 
315 1 290 1 318 1 295 1 320 1 89 1 176 1 73 1 299 1 347 1 110 1 93 1 112 1 19 1 226 1 353 1 113 1 41 1 135 1 306 1 356 1 43 2 254 2 165 3 60 1 61 1 143 1 262 1 146 1 120 3 
315 1 290 1 318 1 295 1 320 1 89 1 176 1 299 1 73 1 347 1 110 1 93 1 112 1 19 1 226 1 353 1 41 1 306 1 356 1 43 2 254 2 165 2 60 1 61 1 120 2 
3 1 290 1 295 1 238 1 320 2 89 2 344 1 299 1 53 1 110 2 244 1 112 1 38 1 18 1 250 1 135 1 308 1 165 1 60 2 61 1 262 1 146 1 120 1 
315 1 290 1 295 1 320 1 152 1 89 1 176 1 199 1 299 1 73 1 347 1 110 1 112 1 19 1 353 1 113 1 41 1 135 1 356 1 43 2 165 1 60 1 61 1 143 1 146 1 120 1 
118 1 
121 3 3 1 64 1 190 1 290 2 293 1 295 2 71 2 193 1 50 1 155 1 298 1 177 1 299 1 157 1 178 1 13 1 53 1 244 1 33 1 36 1 112 2 38 1 18 2 229 1 255 1 58 1 331 1 139 3 61 1 101 1 283 1 259 1 334 1 45 1 23 1 285 1 264 1 234 1 
121 2 293 1 229 1 255 1 331 1 139 2 50 1 101 1 334 1 45 1 23 1 177 1 157 1 285 1 13 1 264 1 234 1 
121 2 293 1 229 1 255 1 331 1 139 2 50 1 101 1 334 1 45 1 23 1 177 1 157 1 285 1 13 1 264 1 234 1 
121 2 293 1 229 1 255 1 331 1 139 2 50 1 101 1 334 1 45 1 23 1 177 1 157 1 285 1 13 1 264 1 234 1 
121 3 36 1 237 1 293 1 71 1 229 1 255 1 331 1 50 1 139 3 101 1 334 1 45 1 23 1 177 1 157 1 285 1 13 1 264 1 234 1 
121 2 64 1 293 1 229 1 255 1 331 1 50 1 139 2 101 1 155 1 259 1 334 1 45 1 23 1 177 1 285 1 178 1 157 1 13 1 264 1 234 1 
121 2 293 1 229 1 255 1 331 1 139 2 50 1 101 1 334 1 45 1 23 1 177 1 157 1 285 1 13 1 264 1 234 1 
121 2 293 1 229 1 255 1 331 1 139 2 50 1 101 1 334 1 45 1 23 1 177 1 157 1 285 1 13 1 264 1 234 1 
121 2 293 1 229 1 255 1 331 1 139 2 50 1 101 1 334 1 45 1 23 1 177 1 157 1 285 1 13 1 264 1 234 1 
121 2 293 1 229 1 255 1 331 1 139 2 50 1 101 1 334 1 45 1 23 1 177 1 157 1 285 1 13 1 264 1 234 1 
121 2 293 1 229 1 255 1 331 1 139 2 50 1 101 1 334 1 45 1 23 1 177 1 157 1 285 1 13 1 264 1 234 1 
121 2 64 1 293 1 229 1 255 1 331 1 50 1 139 2 101 1 155 1 259 1 334 1 45 1 23 1 177 1 285 1 178 1 157 1 13 1 264 1 234 1 
213 6 55 2 160 1 26 2 63 1 328 1 278 1 66 1 329 1 355 1 251 1 82 2 44 1 196 3 241 1 8 1 270 3 282 1 84 1 109 1 325 1 222 1 287 1 348 1 130 1 363 2 
213 14 26 4 63 2 65 3 148 1 337 2 174 1 196 8 267 1 90 1 241 1 8 2 269 3 270 6 109 4 243 1 348 2 92 1 225 2 55 1 328 2 278 11 329 2 355 11 251 1 82 2 138 1 260 1 233 1 105 1 287 2 363 1 87 1 
213 2 313 1 26 2 3 1 290 1 29 1 191 1 174 1 126 1 295 1 319 1 196 1 8 1 270 1 109 1 299 1 53 1 348 1 92 1 55 1 16 1 328 1 112 1 18 1 279 1 227 1 329 1 251 1 207 1 61 1 334 1 103 1 188 1 233 1 285 2 287 1 362 1 234 2 
213 20 313 2 3 2 126 1 174 1 7 1 8 3 270 10 325 1 221 2 53 2 130 1 92 1 225 2 55 2 16 2 328 3 132 2 278 7 18 1 329 3 61 2 334 1 284 1 188 1 103 1 233 1 285 3 105 2 287 3 234 3 26 6 63 3 66 1 290 3 29 1 337 2 149 2 295 3 196 10 241 3 109 7 72 1 299 2 348 3 160 1 112 3 77 2 78 2 353 1 355 7 251 3 44 1 82 8 207 2 84 1 260 4 363 4 362 2 
213 2 26 4 3 3 290 8 173 1 29 1 30 1 341 1 295 7 127 1 196 1 216 1 8 2 270 1 299 2 348 2 53 2 92 1 244 1 328 2 112 8 38 1 18 2 98 1 353 1 329 2 206 1 251 2 61 2 140 2 282 1 309 1 334 1 103 1 188 1 233 1 285 1 287 2 234 1 
213 3 26 2 63 1 337 1 68 1 174 1 88 1 196 1 241 1 8 1 270 2 109 1 348 1 225 1 328 1 278 1 204 1 329 1 355 1 251 1 82 1 334 1 188 1 103 1 285 1 105 1 287 1 363 1 234 1 
213 2 26 2 328 1 63 1 278 1 337 1 329 1 355 1 251 1 82 1 196 2 8 1 282 1 260 1 109 1 156 1 287 1 348 1 
213 2 26 2 328 1 278 1 329 1 355 1 251 1 82 1 296 1 241 1 8 1 282 1 270 2 109 1 105 1 287 1 348 1 363 1 
213 4 26 2 63 1 337 1 196 2 241 1 8 1 270 2 109 2 348 1 225 1 328 1 278 2 329 1 355 2 251 1 82 2 282 1 260 1 105 1 287 1 363 1 
213 2 26 2 328 1 63 1 278 1 337 1 329 1 355 1 251 1 82 1 127 1 196 2 8 1 260 1 109 1 156 1 287 1 348 1 
213 2 26 2 328 1 278 1 329 1 355 1 251 1 82 1 127 1 296 1 241 1 8 1 270 2 109 1 105 1 287 1 348 1 363 1 
213 4 26 2 63 1 337 1 127 1 196 2 241 1 8 1 270 2 109 2 348 1 225 1 328 1 278 2 329 1 355 2 251 1 82 2 260 1 105 1 287 1 363 1 
213 4 26 2 63 1 337 1 196 2 241 1 8 1 270 2 109 2 348 1 225 1 328 1 278 2 329 1 355 2 251 1 82 2 260 1 105 1 287 1 363 1 
213 2 313 1 26 2 3 1 290 1 295 1 196 1 8 1 270 1 299 1 53 1 348 1 92 1 55 1 16 1 328 1 112 1 78 1 18 1 329 1 251 1 207 1 61 1 233 1 285 1 287 1 362 1 234 1 
213 2 25 1 26 2 3 1 290 1 295 1 196 1 8 1 270 1 299 1 223 1 53 1 348 1 92 1 55 1 16 1 328 1 112 1 18 1 329 1 251 1 207 1 61 1 85 1 233 1 285 1 287 1 234 1 
213 4 26 2 63 1 337 1 174 1 196 2 241 1 8 1 270 2 109 2 348 1 225 1 328 1 278 2 329 1 355 2 251 1 82 2 260 1 105 1 287 1 363 1 
213 4 313 1 26 2 63 1 3 1 290 1 337 1 295 1 341 1 196 2 241 1 8 1 270 2 109 2 299 1 221 1 53 1 348 1 225 1 16 1 328 1 278 2 112 1 78 1 329 1 355 2 251 1 82 2 207 1 61 1 260 1 105 1 285 1 287 1 363 1 362 1 234 1 
213 3 26 2 63 1 337 1 339 1 174 1 88 1 196 2 241 1 8 1 270 1 109 1 348 1 225 1 328 1 278 1 204 1 329 1 355 1 251 1 82 1 260 1 334 1 188 1 103 1 105 1 285 1 287 1 234 1 
213 19 26 4 63 3 65 2 148 1 337 3 150 1 49 2 194 1 6 1 196 9 267 1 241 3 269 1 270 10 326 1 348 2 225 3 245 1 328 2 302 1 329 2 82 6 307 1 260 3 360 1 311 2 105 3 287 2 363 3 
213 26 171 2 26 6 1 1 63 3 106 1 65 2 337 3 49 4 194 1 196 14 241 2 267 2 269 2 270 12 242 1 326 1 348 3 225 3 245 2 328 3 302 1 56 1 329 3 82 4 307 2 59 1 260 2 360 1 311 1 105 2 287 3 363 2 86 1 
213 41 171 1 1 1 49 4 6 1 267 3 269 3 270 21 325 1 326 1 225 4 130 1 328 3 56 1 329 3 59 1 187 1 105 4 287 3 26 6 63 5 65 4 106 1 66 1 337 4 148 1 194 1 196 20 241 5 242 1 348 3 245 2 160 1 302 1 82 8 44 1 307 1 84 1 260 4 360 1 311 1 363 4 86 1 
213 38 171 2 26 8 1 1 63 5 66 1 106 1 65 4 148 1 337 4 49 4 194 1 6 1 196 20 267 3 241 4 269 3 270 18 325 1 242 1 326 1 348 4 130 1 225 4 160 1 245 2 328 4 302 1 56 1 329 4 44 1 82 7 307 1 59 1 84 1 260 3 187 1 360 1 311 1 105 3 287 4 86 1 363 4 
213 52 171 1 26 4 1 1 63 8 66 1 106 1 65 4 148 2 337 7 49 4 194 1 196 27 267 2 241 8 269 4 270 25 325 1 242 1 243 2 326 1 348 2 130 1 225 7 160 1 245 1 328 2 302 1 56 1 329 2 44 1 82 14 307 1 59 1 84 1 260 7 360 1 311 1 105 7 287 2 86 1 363 7 
20 1 100 1 35 1 97 1 124 1 249 1 125 1 300 1 252 1 170 1 
208 1 185 1 
20 1 97 1 249 1 125 1 310 1 354 1 240 1 252 1 170 1 
35 1 121 1 97 1 107 1 125 1 249 1 42 1 252 1 137 1 323 1 20 1 100 1 139 1 256 2 52 1 186 1 300 1 170 1 
35 1 121 1 97 1 107 1 125 1 249 1 42 1 252 1 137 1 323 1 20 1 100 1 139 1 256 2 52 1 186 1 300 1 170 1 
35 1 121 1 97 1 107 1 125 1 249 1 42 1 252 1 137 1 323 1 20 1 100 1 139 1 256 2 52 1 186 1 300 1 170 1 
159 1 166 1 211 1 
159 1 166 1 211 1 
10 1 128 1 
10 1 128 1 211 1 
83 1 205 1 
121 1 107 1 151 1 125 1 153 1 52 1 32 1 218 1 55 1 97 1 249 1 205 1 252 1 20 1 83 1 139 1 256 1 208 1 185 1 334 2 188 2 103 2 167 1 285 2 286 1 234 2 170 1 
159 1 166 1 
10 1 128 1 211 1 
213 2 314 1 26 2 3 1 290 2 174 1 295 2 196 1 8 1 270 1 299 1 324 1 53 1 348 1 92 1 328 1 112 2 98 1 329 1 99 1 330 1 251 1 61 1 22 1 140 2 309 1 334 2 233 1 285 2 287 1 234 2 
315 1 112 2 27 1 19 1 290 2 48 1 353 1 113 1 295 2 341 1 356 1 136 1 43 2 60 1 61 1 176 1 73 1 299 1 347 1 
315 1 112 1 19 1 290 1 39 1 48 1 353 1 113 1 295 1 356 1 43 2 60 1 61 1 176 1 73 1 299 1 347 1 
3 1 112 1 277 1 38 1 18 1 290 1 295 1 238 1 136 1 60 1 61 1 299 1 53 1 244 1 
315 1 112 1 27 1 19 1 290 1 48 1 353 1 113 1 295 1 356 1 136 1 43 2 60 1 61 1 176 1 73 1 299 1 347 1 
301 1 
33 1 58 1 202 1 222 1 253 1 137 1 288 1 
121 1 64 1 336 1 71 1 155 1 178 1 274 1 33 1 246 1 36 1 80 1 253 1 137 2 58 1 139 1 333 1 259 1 
121 5 3 10 9 2 272 1 177 2 91 2 11 1 178 4 53 3 12 1 225 2 94 1 181 2 16 3 17 2 18 1 137 8 58 8 21 1 139 5 61 3 102 2 333 6 105 2 288 1 63 2 64 4 290 3 336 12 337 2 67 3 149 2 341 1 295 3 71 5 193 1 241 2 155 4 297 1 298 2 299 4 33 9 349 2 36 3 248 2 111 6 202 1 112 3 163 2 164 6 253 2 259 4 358 2 263 2 
121 1 1 1 63 2 65 1 64 2 214 1 336 6 337 2 71 1 193 1 267 1 241 2 269 1 9 1 155 2 298 1 242 1 74 1 178 2 225 2 33 8 36 1 111 5 56 1 164 5 253 2 137 5 58 5 59 1 139 1 333 3 259 2 105 2 263 2 86 1 
121 1 63 2 64 1 241 1 9 1 155 1 200 1 219 1 178 1 130 1 14 1 33 2 160 1 351 1 204 1 115 1 58 2 331 1 139 1 184 1 84 1 259 1 334 1 188 1 103 1 285 1 263 2 234 1 
33 1 64 1 202 1 253 1 137 1 58 1 155 1 259 1 178 1 288 1 
33 5 63 2 111 5 336 10 337 2 149 1 164 5 137 5 58 5 241 2 9 1 333 5 105 2 263 2 225 2 
139 1 121 1 36 1 71 1 253 1 137 1 
121 3 122 1 3 1 190 1 64 2 290 4 295 4 71 4 175 1 193 2 155 1 297 2 298 2 299 1 178 2 11 1 53 1 244 1 33 2 36 2 112 4 38 1 18 2 58 2 139 3 141 1 61 1 283 1 259 2 
213 1 26 2 313 1 3 1 290 1 295 1 8 1 270 1 197 1 299 1 219 1 348 1 53 1 55 1 16 1 328 1 112 1 18 1 78 1 204 2 329 1 251 1 207 1 61 1 334 2 103 2 188 2 233 1 285 3 287 1 362 1 234 3 
33 1 111 2 66 1 64 1 336 4 164 2 193 1 253 2 137 4 58 2 333 2 155 1 259 1 298 1 178 1 
224 1 252 1 170 1 
224 1 252 1 170 1 
83 1 300 1 183 1 252 1 170 1 
224 1 252 1 170 1 
268 1 252 1 170 1 
268 1 252 1 170 1 
268 1 252 1 170 1 
252 1 170 1 
20 1 97 1 
213 8 160 1 26 4 171 1 63 1 328 2 66 1 329 2 82 3 44 1 196 4 241 1 270 4 84 1 260 1 325 1 287 2 348 2 130 1 363 2 
213 6 160 1 63 1 66 1 44 1 82 2 196 3 241 1 270 3 84 1 325 1 222 1 130 1 363 2 
213 4 26 2 328 1 63 1 337 1 329 1 82 2 196 2 241 1 270 2 260 1 361 1 105 1 287 1 348 1 225 1 363 1 
213 7 63 1 65 2 148 1 337 1 82 2 196 3 241 1 267 1 269 1 270 4 260 1 105 1 225 1 363 1 
213 23 171 2 26 4 63 3 66 1 65 2 337 2 148 1 196 11 241 3 269 2 270 12 325 1 243 1 348 2 130 2 225 2 160 1 328 2 329 2 44 1 82 9 84 2 260 4 105 2 287 2 24 1 363 5 87 1 
213 1 270 1 65 1 
213 1 269 1 196 1 
213 6 26 2 328 1 63 1 337 1 149 1 329 1 82 3 196 3 241 1 270 3 260 1 361 1 105 1 348 1 287 1 225 1 363 2 
213 12 26 2 1 1 63 2 65 1 337 2 196 6 267 1 241 2 269 1 270 6 242 1 348 1 225 2 328 1 56 1 329 1 82 2 59 1 260 1 360 1 105 2 287 1 86 1 363 1 
213 6 160 1 63 1 82 2 196 3 241 1 270 3 84 1 260 1 130 1 363 1 
213 3 171 1 26 2 328 1 329 1 82 2 44 1 196 1 270 2 84 1 260 1 325 1 287 1 348 1 130 1 24 1 363 1 
213 10 26 2 160 1 328 1 63 2 329 1 82 5 196 5 241 2 270 5 84 2 260 2 360 1 348 1 287 1 14 1 130 2 363 3 
213 2 26 2 328 1 63 1 337 1 329 1 82 1 196 2 260 1 360 1 287 1 348 1 
213 4 26 2 328 1 63 1 337 1 329 1 82 2 196 2 241 1 270 2 260 1 360 1 105 1 287 1 348 1 225 1 363 1 
213 3 171 1 26 6 328 3 329 3 82 2 6 1 196 1 270 2 84 1 260 1 360 1 287 3 348 3 24 1 130 1 363 1 
213 34 171 2 26 10 63 5 66 1 65 4 148 1 337 3 294 1 6 1 196 16 267 1 241 5 269 3 270 18 325 1 348 5 130 3 225 3 160 2 328 5 329 5 44 1 82 12 84 3 260 5 360 1 361 1 104 1 105 3 287 5 24 1 312 1 363 7 
213 8 26 2 63 1 66 1 65 1 196 4 241 1 267 1 269 1 270 4 325 1 348 1 130 1 160 1 328 1 56 1 329 1 44 1 82 2 84 1 360 1 287 1 363 2 
213 11 26 4 63 2 66 1 65 2 148 1 337 1 196 6 241 1 267 1 269 1 270 5 325 1 348 2 130 1 225 1 160 1 328 2 56 1 329 2 44 1 82 3 84 1 260 1 360 1 361 1 287 2 363 2 
213 19 26 6 171 1 1 1 63 3 66 1 65 1 337 2 196 9 267 1 241 3 269 1 270 10 325 1 242 1 348 3 130 1 225 2 160 1 328 3 56 1 329 3 44 1 82 4 59 1 84 1 260 1 360 1 361 1 105 2 287 3 86 1 363 3 
213 17 171 1 26 6 1 1 63 3 66 1 65 1 337 2 196 10 267 1 241 2 269 1 270 7 325 1 242 1 348 3 130 1 225 2 160 1 328 3 56 1 329 3 44 1 82 5 59 1 84 1 260 2 360 1 361 1 105 1 287 3 86 1 363 3 
213 8 26 2 63 1 66 1 65 1 196 4 241 1 267 1 269 1 270 4 325 1 348 1 130 1 160 1 328 1 56 1 329 1 44 1 82 2 84 1 360 1 287 1 363 2 
213 12 26 2 1 1 63 2 65 1 337 2 196 6 267 1 241 2 269 1 270 6 242 1 348 1 225 2 328 1 56 1 329 1 82 2 59 1 260 1 360 1 105 2 287 1 86 1 363 1 
213 18 26 8 171 2 1 1 63 3 66 1 65 1 337 2 196 10 267 1 241 2 269 1 270 8 325 1 242 1 348 4 130 1 225 2 160 1 328 4 56 1 329 4 44 1 82 5 59 1 84 1 260 2 360 1 361 1 105 1 287 4 86 1 363 3 
213 16 26 8 171 2 1 1 63 3 65 1 337 3 6 1 196 9 267 1 241 2 269 1 270 7 242 1 348 4 225 3 328 4 56 1 329 4 82 6 59 1 260 3 360 1 105 2 287 4 86 1 363 3 
213 7 160 1 63 1 44 1 82 6 196 3 241 1 270 4 84 3 260 3 325 2 130 3 363 3 
213 18 26 8 171 2 1 1 63 3 66 1 65 1 337 2 6 1 196 10 267 1 241 2 269 1 270 8 325 1 242 1 348 4 130 1 225 2 160 1 328 4 56 1 329 4 44 1 82 4 59 1 84 1 260 1 360 1 105 1 287 4 86 1 363 3 
55 1 217 1 334 1 291 1 285 1 229 1 234 1 
55 1 95 1 147 1 291 1 338 1 123 1 229 1 230 1 217 1 334 1 285 1 234 1 
61 1 3 1 38 1 112 1 290 1 18 1 299 1 222 1 295 1 53 1 244 1 
55 1 16 1 3 1 112 1 18 1 290 1 29 1 295 1 207 1 61 1 334 1 188 1 103 1 299 1 285 2 53 1 362 1 234 2 
55 1 16 2 17 1 3 3 112 1 290 1 29 1 293 1 295 1 207 1 331 1 50 1 61 1 334 2 297 1 188 1 103 2 91 1 299 1 285 2 53 2 362 1 234 2 
3 3 290 2 29 1 317 1 293 1 295 2 50 1 297 1 299 1 91 1 53 2 55 1 16 2 112 2 17 1 207 1 331 1 61 1 85 1 334 2 103 2 188 1 285 2 234 2 
121 2 3 4 28 1 290 3 317 1 67 1 71 1 295 3 297 1 177 1 299 1 91 1 53 1 16 1 112 3 17 1 18 1 253 1 137 1 139 2 61 1 102 1 232 1 
181 1 16 1 121 2 17 1 112 3 3 4 18 1 290 3 317 1 67 1 295 3 71 1 253 1 137 1 139 2 61 1 102 1 297 1 177 1 91 1 299 1 53 1 
61 1 112 1 290 1 173 1 299 1 295 1 
0 1 16 1 112 7 3 3 18 2 290 7 173 1 353 1 30 1 341 1 295 6 206 1 216 1 140 1 61 2 309 1 345 1 272 1 299 3 201 1 53 2 
213 6 26 4 313 1 63 1 66 1 3 1 290 1 29 1 174 1 341 1 295 1 196 3 241 1 8 2 270 3 109 1 299 1 325 1 221 1 53 1 348 2 130 1 55 2 160 1 16 1 328 2 278 1 112 1 132 1 78 1 329 2 355 1 330 1 251 2 82 2 44 1 207 1 61 1 84 1 334 1 103 1 188 1 285 2 287 2 363 2 362 1 234 2 
121 3 64 2 3 2 290 1 67 1 295 1 71 2 155 2 32 1 177 1 178 2 11 1 33 1 181 1 349 1 36 1 248 1 202 1 112 1 18 1 163 1 253 1 137 1 58 1 139 3 102 1 259 2 288 1 
94 1 16 1 112 2 3 2 290 2 173 1 341 1 295 2 61 1 102 1 272 1 299 2 53 1 
112 4 38 1 3 1 18 1 290 4 317 1 295 4 341 1 61 1 299 1 53 1 54 1 244 1 
0 1 16 1 112 2 3 1 290 2 295 2 322 1 61 1 142 1 297 1 345 1 72 1 299 2 53 1 
315 1 61 1 112 1 290 1 18 1 299 1 295 1 347 1 356 1 43 1 
112 2 3 1 290 2 353 1 341 1 295 2 22 1 61 1 309 1 299 1 53 1 
38 1 112 5 3 3 18 1 290 5 30 1 295 4 341 1 216 1 61 2 309 1 297 1 299 2 53 2 54 1 244 1 
38 1 112 5 3 3 18 1 290 5 295 4 341 1 216 1 61 2 309 1 297 1 299 2 53 2 54 1 244 1 76 1 
55 1 16 1 3 1 112 1 18 1 290 1 29 1 295 1 207 1 61 1 334 1 85 1 188 1 103 1 299 1 285 2 53 1 234 2 
0 1 16 1 112 1 3 1 290 1 295 1 61 1 297 1 345 1 272 1 299 2 201 1 53 1 
314 1 99 1 258 1 334 1 324 1 346 1 285 1 75 1 234 1 
210 1 134 1 75 1 
55 1 258 1 346 1 75 1 235 1 
55 1 121 2 316 1 293 1 134 1 182 1 253 1 137 1 331 1 50 1 139 2 101 1 32 1 210 1 258 2 177 1 346 2 75 1 235 2 
318 1 222 1 306 1 93 1 
165 1 318 1 146 1 135 1 306 1 120 1 93 1 
110 1 120 1 89 1 
247 2 162 1 79 1 318 1 135 1 306 1 165 3 199 1 146 1 120 3 158 1 93 1 
165 2 280 1 318 1 146 1 135 1 306 1 120 2 93 1 254 1 
19 1 318 1 135 1 356 1 43 1 165 1 51 1 359 1 199 1 146 1 120 1 
165 1 318 1 199 1 146 1 135 1 306 1 120 1 
165 1 199 1 146 1 135 1 306 2 120 1 93 1 
161 1 265 1 318 1 135 2 57 1 306 1 165 2 199 1 146 2 120 2 
303 1 318 2 239 1 135 1 306 1 254 2 165 3 51 1 199 1 146 1 212 1 120 3 93 1 
315 1 19 1 318 1 69 1 135 1 306 1 356 1 43 2 254 1 165 2 199 1 146 1 73 1 120 2 93 1 
62 1 303 1 318 2 135 2 306 1 254 2 165 4 280 1 51 1 199 1 146 2 120 4 93 1 
165 1 318 1 199 1 146 1 135 1 306 1 120 1 93 1 
247 1 131 1 79 1 162 1 303 1 318 3 135 1 306 2 254 2 165 4 51 1 146 1 120 4 93 2 
318 1 135 1 305 1 306 1 119 1 254 1 165 2 199 1 146 1 145 1 120 2 93 1 
247 2 162 1 79 2 318 1 135 1 306 1 165 3 199 1 146 1 120 3 169 1 93 1 
231 2 318 2 46 1 31 1 
165 1 192 1 199 1 146 1 135 1 120 1 
165 2 318 1 199 1 146 1 212 1 135 1 306 1 120 2 93 1 254 1 
257 1 
165 1 318 1 199 1 146 1 135 1 306 1 120 1 93 1 
247 1 318 1 135 1 306 1 254 1 165 3 199 1 146 1 212 1 120 3 93 1 
131 1 51 1 303 1 318 1 
318 1 306 1 

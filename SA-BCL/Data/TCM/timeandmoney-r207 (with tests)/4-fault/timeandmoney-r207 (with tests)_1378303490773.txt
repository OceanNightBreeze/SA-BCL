#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 98 112 223 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1043 | stmt -> ;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7622 | stmt -> ;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4835 | + -> <<
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3685 | stmt -> ;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
190 1 49 2 0 1 299 9 250 2 166 4 194 1 5 2 255 2 200 9 84 1 149 2 12 1 239 1 114 1 370 1 14 3 240 1 184 1 156 1 122 5 18 1 337 2 126 2 244 1 41 6 74 1 102 1 
190 1 49 2 0 1 299 9 250 2 166 4 194 1 5 2 255 2 200 9 84 1 149 2 12 1 239 1 114 1 370 1 14 3 240 1 184 1 156 1 122 5 18 1 337 2 126 2 244 1 41 6 74 1 102 1 
190 1 49 2 0 1 299 10 250 2 166 5 194 1 5 2 255 2 200 10 84 1 149 2 12 1 239 1 114 1 370 1 14 4 240 1 184 1 156 1 122 6 18 1 337 2 126 2 244 1 41 7 74 1 102 1 
190 1 49 2 0 1 299 7 250 2 166 3 5 2 255 2 200 7 84 1 149 1 12 1 239 1 114 1 370 1 14 2 240 1 184 1 156 1 122 4 18 1 337 2 126 2 244 1 41 4 74 1 102 1 
239 1 114 1 49 1 14 1 299 4 240 1 250 1 166 2 194 1 5 1 122 3 126 1 337 1 200 4 41 3 149 2 74 1 12 1 
239 1 114 1 0 1 49 1 299 2 210 1 250 1 156 1 122 1 5 1 255 1 126 1 200 2 294 1 317 1 12 1 
239 1 114 1 49 2 14 1 299 3 250 2 166 1 122 2 255 1 200 3 244 1 41 1 12 1 
49 2 299 9 166 4 250 2 194 1 5 1 255 1 200 9 149 2 12 1 88 1 239 1 114 1 14 3 240 1 122 5 18 1 337 1 126 1 244 1 41 7 21 1 74 1 102 1 
49 2 299 9 166 4 250 2 194 1 5 1 255 1 200 9 149 2 12 1 88 1 239 1 114 1 14 3 240 1 122 5 18 1 337 1 126 1 244 1 41 7 21 1 74 1 102 1 
10 1 
121 1 54 1 321 2 
297 2 376 2 147 1 85 2 155 2 180 2 76 2 242 1 
77 1 297 3 160 1 135 1 248 2 139 2 140 2 144 1 367 2 145 1 147 1 83 1 31 2 85 3 62 1 265 1 152 1 171 1 288 1 35 1 332 1 269 1 227 1 155 2 180 2 182 1 242 1 181 1 211 1 157 1 376 2 378 1 274 1 73 1 76 2 45 1 318 1 
297 1 90 1 376 1 100 1 85 1 155 1 180 1 76 1 238 1 242 1 
297 1 105 1 153 1 280 1 155 1 335 1 54 1 199 1 237 1 59 1 347 1 85 1 380 1 238 1 
297 1 105 1 153 1 280 1 155 1 180 1 54 1 376 1 199 1 59 2 347 1 85 1 380 2 76 1 238 1 
198 1 59 1 354 1 380 1 311 1 
54 1 198 1 153 1 36 1 59 2 354 1 75 1 380 2 
198 1 59 1 380 1 
360 1 297 1 90 1 155 1 180 1 242 1 376 1 59 1 100 1 85 1 354 1 380 1 76 1 238 1 
54 1 
54 1 359 1 198 1 153 1 36 1 59 2 354 1 380 2 
297 1 360 1 47 1 320 1 233 1 142 2 235 2 143 4 54 2 236 2 198 2 59 5 326 1 9 2 85 1 301 5 238 1 287 1 304 1 90 1 208 1 36 1 153 2 155 1 180 1 95 1 242 1 312 1 271 2 376 1 315 1 124 2 100 1 354 2 76 1 380 5 22 1 23 1 
10 1 
297 2 172 1 373 1 155 2 350 1 180 1 376 1 147 1 85 2 76 1 238 1 
260 1 3 1 309 1 
297 1 48 1 171 1 160 1 135 1 248 1 181 1 139 1 140 1 145 1 378 1 147 1 83 1 85 1 45 1 62 1 
133 2 297 5 52 1 155 5 350 1 180 4 376 4 125 1 237 1 147 1 85 5 32 1 328 1 76 1 
197 1 297 2 90 1 376 2 85 2 155 2 180 2 238 1 
133 1 297 2 171 1 160 1 135 1 155 1 248 1 180 1 181 1 139 1 140 1 376 1 145 1 378 1 83 1 260 1 32 1 85 2 45 1 62 1 
133 1 297 3 376 3 147 1 85 3 155 3 76 1 180 3 
297 1 90 1 376 1 85 1 155 1 180 1 238 1 
297 1 373 1 350 1 155 1 180 1 376 1 85 1 76 1 238 1 
77 1 297 4 133 1 160 1 105 1 135 1 280 1 248 1 139 1 140 1 254 1 367 1 199 1 145 1 59 1 147 1 83 1 31 2 347 1 85 4 32 1 62 1 238 1 265 1 171 1 288 1 35 1 332 1 269 1 227 1 350 1 155 3 180 3 242 1 181 1 211 1 157 1 376 3 378 1 218 1 45 1 76 2 380 1 318 1 
297 2 133 1 376 1 237 1 147 1 85 2 52 1 155 2 180 1 
133 2 297 3 105 1 25 1 280 1 350 1 155 3 180 3 254 1 54 1 376 3 199 1 59 1 347 1 32 1 85 3 76 1 380 1 238 1 
133 1 297 2 350 1 155 2 309 1 180 2 376 2 260 1 85 2 76 1 
297 1 171 1 160 1 135 1 248 1 181 1 139 1 140 1 145 1 378 1 147 1 83 1 85 1 45 1 62 1 
297 1 171 1 160 1 135 1 165 1 248 1 181 1 139 1 140 1 378 1 147 1 85 1 338 1 45 1 62 1 
77 1 191 1 26 1 3 2 232 1 142 1 55 1 367 4 9 1 31 2 30 1 260 2 150 1 265 1 35 2 154 1 332 1 269 1 227 1 309 2 211 1 73 2 72 1 229 1 
197 1 297 1 376 1 280 1 85 1 155 1 180 1 238 1 
158 1 245 1 
158 1 245 1 
308 1 169 1 
308 1 169 1 
308 1 169 1 
330 1 158 1 245 1 
330 1 158 1 245 1 
282 1 158 1 245 1 
206 1 362 1 158 2 308 1 169 1 245 2 
330 1 158 1 245 1 
108 1 158 1 245 1 
108 1 158 1 245 1 
108 1 158 1 245 1 
297 2 51 1 111 1 282 1 6 1 80 1 366 1 59 1 147 1 259 1 85 2 226 1 155 2 120 1 180 2 241 1 17 1 376 2 293 1 158 1 245 1 380 1 276 1 355 1 
357 1 192 1 362 1 51 2 111 1 342 2 16 1 54 1 6 2 80 2 366 2 57 1 59 2 158 2 259 3 245 2 380 2 296 1 129 1 
5 1 126 1 337 1 
5 1 126 1 210 1 
131 1 337 2 126 3 118 1 210 1 164 1 
131 1 204 1 337 1 126 2 210 1 164 1 
131 1 337 1 126 2 210 1 164 2 
246 1 47 1 278 1 321 3 363 2 364 2 26 1 142 1 54 2 143 3 322 2 236 1 81 1 198 1 59 5 9 1 301 2 11 1 36 1 153 1 120 1 241 1 334 1 17 1 121 1 186 1 271 1 124 1 354 4 217 1 229 1 380 5 
47 1 278 2 321 9 364 6 26 3 142 3 54 5 143 8 322 6 236 2 81 1 198 6 59 9 9 3 301 6 86 1 170 1 287 1 153 1 36 1 178 1 120 4 375 1 311 5 121 3 186 3 96 1 271 2 124 2 295 1 354 7 217 2 229 3 277 5 380 9 
246 1 278 1 363 1 321 4 364 2 26 1 142 1 54 3 143 3 236 1 322 2 59 3 9 1 301 2 11 1 287 1 153 1 120 1 121 2 186 1 271 1 124 1 354 2 217 1 380 3 229 1 
246 1 278 1 321 7 363 2 364 4 26 2 142 2 54 4 143 5 322 4 236 1 59 4 9 2 301 4 11 1 287 1 153 1 178 1 120 2 375 1 121 3 186 2 271 1 124 1 295 1 217 1 354 3 380 4 229 2 
10 1 
336 1 160 1 
324 1 
160 1 135 1 62 1 
160 1 305 1 
160 1 135 1 
97 1 160 3 135 1 53 2 62 1 230 1 
65 2 320 1 266 1 306 1 35 3 365 1 142 1 55 3 272 1 315 1 367 7 28 1 9 1 379 1 73 4 150 2 23 1 
65 2 320 1 266 1 306 1 35 3 365 1 142 1 55 3 272 1 315 1 367 7 28 1 9 1 379 1 73 4 150 2 23 1 
65 2 320 1 266 1 306 1 35 3 162 1 365 1 142 1 55 3 272 1 315 1 367 7 28 1 9 1 379 1 73 4 150 2 23 1 
231 1 320 1 220 1 300 1 281 1 365 1 26 3 112 1 142 4 283 1 55 10 367 31 28 2 9 4 31 2 150 5 265 1 329 1 65 3 306 1 266 1 35 15 267 4 269 1 227 1 211 1 186 3 315 2 272 5 98 3 379 2 73 16 229 3 23 2 
320 1 300 1 365 1 142 1 55 4 367 9 28 1 9 1 31 4 150 3 63 1 265 2 349 1 65 2 306 1 35 4 269 2 227 2 211 2 272 1 315 1 379 1 73 5 23 1 
49 1 299 2 248 1 139 1 250 1 140 1 5 1 255 1 346 1 200 2 58 1 61 1 264 1 12 1 239 1 114 1 34 1 205 1 174 1 210 1 118 1 179 1 122 1 314 1 187 1 337 1 126 2 41 1 378 1 45 1 
49 1 299 3 248 1 139 1 250 1 140 1 5 1 343 1 255 1 200 3 58 1 368 1 61 1 264 1 12 1 239 1 34 1 205 1 118 1 174 1 210 1 289 1 179 1 122 1 187 1 337 1 126 2 41 2 378 1 45 1 
299 2 248 1 139 1 140 1 5 1 343 1 255 1 200 2 58 1 264 1 12 1 239 1 34 1 205 1 174 1 210 1 118 1 289 1 179 1 122 1 126 2 337 1 41 2 378 1 45 1 
358 1 49 1 160 1 135 1 299 1 2 1 248 1 139 1 250 1 140 1 255 2 82 1 345 1 200 1 368 1 369 1 34 2 205 2 372 1 179 2 181 1 378 1 45 1 
49 1 299 1 248 1 139 1 250 1 140 1 5 1 343 1 255 1 200 1 58 1 61 1 264 1 114 1 34 1 205 1 174 1 210 1 118 1 179 1 314 1 187 1 337 1 126 2 378 1 45 1 
340 1 
47 1 297 1 160 1 105 1 219 1 2 1 163 1 248 2 4 1 251 2 54 2 256 1 59 5 347 1 301 2 60 2 348 1 175 2 177 4 181 2 183 1 121 2 271 1 124 1 353 2 189 2 135 1 321 2 280 1 139 2 140 2 143 2 236 1 198 6 199 1 237 1 29 1 146 1 85 1 238 1 87 1 91 2 153 1 36 3 372 1 155 1 374 1 212 1 335 1 292 1 99 2 378 1 217 1 380 5 45 1 
297 1 359 1 105 1 219 1 163 1 280 1 4 1 199 1 198 2 237 1 146 1 59 3 347 1 85 1 238 1 91 1 36 1 155 1 177 2 183 1 335 1 380 3 
297 1 359 1 105 1 219 1 163 1 280 1 4 1 54 1 198 1 199 1 237 1 146 1 59 3 347 1 85 1 238 1 153 1 36 1 155 1 177 3 183 1 335 1 353 1 380 3 
359 1 297 1 105 1 219 1 163 1 280 1 4 1 54 1 199 1 198 2 237 1 146 1 59 3 347 1 85 1 238 1 91 1 36 1 153 1 175 1 155 1 177 3 183 1 335 1 353 1 380 3 
341 1 297 1 47 1 105 1 219 1 109 1 163 1 4 1 251 2 54 5 256 1 59 5 347 1 301 1 60 2 225 1 175 4 177 6 183 1 121 2 313 1 271 1 124 1 353 4 189 2 359 1 280 1 143 1 236 1 199 1 198 7 237 1 146 1 85 1 286 1 238 1 91 4 36 3 153 5 155 1 335 1 292 1 99 2 380 5 
47 1 297 1 105 1 321 2 219 1 163 1 280 1 4 1 251 2 54 2 143 1 236 1 198 4 199 1 256 1 237 1 146 1 59 4 347 1 301 1 85 1 60 2 238 1 91 2 153 1 36 2 175 2 155 1 177 4 183 1 212 1 335 1 121 2 292 1 271 1 124 1 353 2 99 2 189 2 380 4 
297 1 47 1 105 1 219 1 109 1 163 1 280 1 4 1 251 2 54 1 143 1 236 1 198 4 256 1 199 1 237 1 146 1 59 4 347 1 286 1 301 1 85 1 60 2 238 1 91 2 153 1 36 2 175 2 155 1 177 4 183 1 335 1 121 2 313 1 292 1 271 1 124 1 353 2 99 2 189 2 380 4 
297 1 47 1 105 1 219 1 109 1 163 1 280 1 4 1 251 2 54 1 143 1 236 1 198 4 256 1 199 1 237 1 146 1 59 4 347 1 286 1 301 1 85 1 60 2 238 1 91 2 153 1 36 2 175 2 155 1 177 4 183 1 335 1 121 2 313 1 292 1 271 1 124 1 353 2 99 2 189 2 380 4 
297 1 47 1 247 2 298 2 105 1 321 2 219 1 163 1 280 1 4 1 251 2 54 1 143 1 113 1 236 1 198 4 199 1 237 1 146 1 59 4 347 1 286 1 301 1 85 1 238 1 91 2 153 1 36 2 175 2 119 1 155 1 177 4 183 1 335 1 292 1 271 1 124 1 353 2 99 2 339 1 380 4 
47 1 297 1 105 1 219 1 109 1 163 1 280 1 4 1 251 2 54 1 143 1 236 1 256 1 199 1 198 5 237 1 146 1 59 4 347 1 286 1 301 1 85 1 60 2 238 1 225 1 91 3 153 1 36 2 175 3 155 1 177 5 183 1 335 1 121 2 313 1 292 1 271 1 124 1 353 3 99 2 189 2 380 4 
47 1 297 1 105 1 219 1 109 1 163 1 280 1 4 1 251 2 54 1 143 1 236 1 256 1 199 1 198 5 237 1 146 1 59 4 347 1 286 1 301 1 85 1 60 2 238 1 225 1 91 3 153 1 36 2 175 3 155 1 177 5 183 1 335 1 121 2 313 1 292 1 271 1 124 1 353 3 99 2 189 2 380 4 
47 1 297 1 247 2 298 2 105 1 321 2 219 1 163 1 280 1 4 1 251 2 54 1 143 1 236 1 198 4 199 1 237 1 146 1 59 4 347 1 301 1 85 1 238 1 91 2 153 1 36 2 175 2 155 1 177 4 183 1 212 1 335 1 292 1 271 1 124 1 353 2 99 2 339 1 380 4 
265 1 211 1 77 1 31 2 30 1 10 1 332 1 269 1 227 1 
231 1 77 2 3 11 26 1 112 1 142 1 144 1 55 2 367 14 147 1 9 2 31 4 260 11 150 1 265 2 33 1 288 1 35 6 66 1 267 3 332 1 269 2 227 2 15 1 309 4 211 2 186 2 272 1 98 3 73 8 44 1 229 2 103 1 
77 1 48 1 297 2 133 1 160 1 135 1 248 1 139 1 140 1 144 1 367 2 145 1 147 1 83 1 31 2 148 1 85 2 32 1 262 1 62 1 265 1 171 1 288 1 35 1 332 1 227 1 269 1 155 1 309 1 15 1 180 1 181 1 211 1 376 1 378 1 73 1 45 1 159 1 
297 3 160 2 248 3 3 7 343 1 55 8 9 3 260 7 62 2 265 3 65 1 171 2 306 1 269 3 227 3 176 2 180 1 15 1 309 7 181 1 228 1 185 1 186 2 315 1 272 4 73 10 229 2 318 2 23 1 77 3 133 1 134 2 320 1 135 2 193 2 365 1 26 2 139 3 140 3 142 3 144 1 367 20 145 2 147 2 83 2 31 6 32 1 85 3 150 4 288 1 35 10 331 1 332 3 155 1 211 3 376 1 378 2 43 2 45 2 
77 2 297 1 133 1 50 1 160 3 161 1 135 2 279 1 2 1 248 7 139 8 140 8 343 1 144 1 367 2 346 1 257 1 30 1 31 4 85 1 265 2 288 1 35 1 332 2 371 1 269 2 227 2 372 1 155 1 180 1 181 2 182 2 211 2 39 1 376 1 378 2 73 1 45 2 319 1 
77 1 297 1 3 1 26 1 79 1 142 1 55 1 367 3 9 1 260 1 31 2 85 1 150 1 265 1 35 2 332 1 269 1 227 1 350 1 155 1 309 1 180 1 15 1 211 1 186 1 376 1 73 1 76 1 229 1 
265 1 77 1 332 1 227 1 269 1 3 1 309 1 232 1 211 1 55 1 272 1 367 2 9 1 260 1 30 1 31 2 73 2 229 1 
265 1 77 1 35 2 332 1 227 1 269 1 3 1 26 1 309 1 211 1 142 1 55 1 367 2 260 1 30 1 31 2 72 1 150 1 
77 1 3 2 26 1 142 1 55 2 367 4 9 1 31 2 30 1 260 2 150 1 265 1 35 2 332 1 269 1 227 1 309 2 211 1 186 1 272 1 73 2 229 1 
265 1 77 1 371 1 332 1 227 1 269 1 3 1 309 1 232 1 211 1 55 1 272 1 367 2 9 1 260 1 31 2 73 2 229 1 
265 1 77 1 35 2 371 1 332 1 227 1 269 1 3 1 26 1 309 1 211 1 142 1 55 1 367 2 260 1 31 2 72 1 150 1 
77 1 3 2 26 1 142 1 55 2 367 4 9 1 31 2 260 2 150 1 265 1 35 2 332 1 371 1 269 1 227 1 309 2 211 1 186 1 272 1 73 2 229 1 
77 1 3 2 26 1 142 1 55 2 367 4 9 1 31 2 260 2 150 1 265 1 35 2 332 1 269 1 227 1 309 2 211 1 186 1 272 1 73 2 229 1 
77 1 297 1 160 1 135 1 248 1 139 1 140 1 144 1 367 2 145 1 147 1 83 1 31 2 85 1 62 1 265 1 171 1 288 1 35 1 332 1 227 1 269 1 181 1 211 1 378 1 73 1 45 1 318 1 
265 1 77 1 297 1 171 1 160 1 106 1 288 1 135 1 35 1 332 1 269 1 227 1 165 1 248 1 181 1 139 1 140 1 211 1 144 1 367 2 378 1 147 1 31 2 85 1 338 1 73 1 45 1 62 1 
77 1 3 2 26 1 142 1 55 2 367 4 9 1 31 2 260 2 150 1 265 1 35 2 332 1 269 1 227 1 15 1 309 2 211 1 186 1 272 1 73 2 229 1 
77 1 297 1 160 1 135 1 26 1 3 2 248 1 139 1 140 1 142 1 55 2 367 4 145 1 346 1 9 1 83 1 260 2 31 2 85 1 150 1 62 1 265 1 171 1 35 2 332 1 227 1 269 1 176 1 309 2 211 1 186 1 272 1 378 1 73 2 229 1 45 1 318 1 
77 1 297 1 26 1 3 1 142 1 55 1 367 3 9 1 31 2 260 1 85 1 265 1 35 1 332 1 269 1 227 1 350 1 94 1 155 1 180 1 15 1 309 1 211 1 186 1 272 1 376 1 73 2 76 1 229 1 
356 2 231 1 107 1 136 1 78 1 26 3 112 1 253 2 142 3 196 1 55 6 367 19 9 3 201 1 31 4 203 1 150 3 63 1 265 2 35 10 92 1 267 2 269 2 227 2 211 2 186 3 272 3 98 1 73 9 229 3 
356 1 136 1 78 1 300 2 26 2 112 2 223 1 142 2 253 4 196 2 284 1 55 4 367 26 168 1 9 3 201 1 31 6 203 2 263 1 150 2 63 1 265 3 116 1 35 12 267 2 269 3 227 3 211 3 186 3 272 2 98 2 70 1 73 14 229 3 
356 1 231 1 320 1 136 1 78 1 300 1 365 1 26 4 112 3 223 1 253 4 142 5 196 2 284 1 55 8 367 41 168 1 9 5 201 1 31 6 302 1 203 1 263 1 150 4 63 1 265 3 65 1 116 1 306 1 35 21 92 1 267 4 269 3 227 3 211 3 186 4 315 1 272 4 98 3 70 1 73 20 229 4 23 1 
356 1 231 1 320 1 136 1 78 1 300 2 365 1 26 3 112 3 223 1 253 4 142 4 196 2 284 1 55 7 367 38 168 1 9 5 201 1 31 8 302 1 203 1 263 1 150 4 63 1 265 4 65 1 116 1 306 1 35 18 92 1 267 4 269 4 227 4 211 4 186 4 315 1 272 3 98 3 70 1 73 20 229 4 23 1 
356 1 231 2 320 1 136 1 78 1 300 1 365 1 26 7 112 2 223 1 253 4 142 8 196 1 284 1 55 14 367 52 168 1 9 8 201 1 31 4 203 1 263 1 150 7 63 1 265 2 65 1 116 1 306 1 35 25 267 4 269 2 227 2 211 2 186 7 315 1 272 7 98 4 70 1 73 27 229 7 23 1 103 2 
357 1 6 1 80 1 366 1 57 1 362 1 51 1 158 1 327 1 245 1 
282 1 355 1 
6 1 115 1 80 1 366 1 51 1 158 1 1 1 245 1 27 1 
307 1 330 1 
303 1 206 1 108 1 
357 1 192 1 362 1 51 1 111 1 342 1 16 1 54 1 6 1 80 1 366 1 57 1 59 1 158 1 259 2 245 1 380 1 129 1 
357 1 192 1 362 1 51 1 111 1 342 1 16 1 54 1 6 1 80 1 366 1 57 1 59 1 158 1 259 2 245 1 380 1 129 1 
357 1 192 1 362 1 51 1 111 1 342 1 16 1 54 1 6 1 80 1 366 1 57 1 59 1 158 1 259 2 245 1 380 1 129 1 
206 1 307 1 330 1 
206 1 307 1 330 1 
303 1 108 1 
303 1 206 1 108 1 
226 1 276 1 
297 2 51 1 342 1 282 1 6 1 80 1 366 1 59 1 147 1 259 1 85 2 261 1 226 1 120 1 155 2 241 1 180 2 16 1 17 1 293 1 376 2 158 1 354 1 245 1 380 1 276 1 355 1 
46 1 77 1 297 2 160 1 50 1 135 1 248 2 139 2 140 2 144 1 325 1 367 2 31 2 85 2 265 1 288 1 35 1 332 1 270 1 227 1 269 1 155 2 15 1 182 2 211 1 213 1 378 1 71 1 73 1 45 1 319 1 
24 1 205 1 118 1 210 1 174 1 248 2 139 2 140 2 5 1 352 1 343 1 187 1 337 1 126 2 346 1 378 1 69 1 58 1 45 1 
24 1 205 1 118 1 210 1 174 1 248 1 249 1 139 1 140 1 5 1 343 1 187 1 337 1 126 2 58 1 378 1 45 1 
205 1 160 1 135 1 268 1 2 1 372 1 248 1 181 1 139 1 140 1 345 1 378 1 69 1 45 1 
24 1 205 1 118 1 210 1 174 1 248 1 139 1 140 1 5 1 352 1 343 1 187 1 337 1 126 2 378 1 69 1 58 1 45 1 
138 1 
10 1 
47 1 321 1 143 1 54 2 236 1 256 1 198 1 59 1 301 1 60 1 36 1 153 1 121 1 271 1 124 1 189 1 380 1 
47 4 160 10 53 2 248 3 54 8 346 1 59 5 9 2 301 8 62 3 13 1 305 2 181 1 312 1 121 6 186 2 271 4 123 1 124 4 20 1 229 2 230 1 361 2 135 3 321 12 137 2 364 6 26 2 139 3 195 2 140 3 233 2 142 2 235 2 143 9 236 4 322 6 198 5 199 2 326 1 29 1 151 2 89 2 153 2 209 1 36 3 38 2 336 3 378 4 42 1 43 2 217 2 45 3 380 5 
47 1 321 2 267 1 364 1 112 1 223 1 121 1 54 1 143 1 236 1 271 1 322 1 124 1 98 1 301 1 
297 1 47 1 360 1 320 1 233 1 142 1 235 2 143 2 236 1 59 1 9 2 85 1 301 2 238 1 90 1 155 1 180 1 242 1 313 1 271 1 315 1 124 1 376 1 100 1 22 1 380 1 76 1 23 1 
47 1 153 1 312 1 54 1 143 1 236 1 271 1 124 1 326 1 301 1 
321 10 364 5 26 2 233 1 142 2 235 2 121 5 186 2 54 5 143 5 322 5 9 2 43 1 301 5 229 2 
54 1 198 1 153 1 59 1 36 1 380 1 
47 1 160 1 135 1 2 1 248 4 139 4 140 4 143 2 236 2 198 4 29 2 59 3 301 2 87 1 287 1 36 2 93 1 372 1 374 1 181 2 271 2 123 2 124 2 20 1 378 1 215 1 217 2 45 1 380 3 
77 1 297 3 160 1 135 1 248 1 139 1 140 1 367 1 145 1 147 1 83 1 31 2 85 3 62 1 265 1 171 1 288 1 35 1 332 1 269 1 227 1 155 2 180 2 181 1 242 1 157 1 211 1 376 2 378 1 76 2 45 1 318 1 
47 1 65 1 321 4 153 2 364 2 121 2 143 1 54 4 322 2 236 1 271 1 124 1 29 1 301 2 217 1 
80 1 366 1 285 1 
80 1 366 1 285 1 
104 1 357 1 80 1 366 1 276 1 
80 1 366 1 285 1 
80 1 366 1 221 1 
80 1 366 1 221 1 
80 1 366 1 221 1 
80 1 366 1 
158 1 245 1 
265 2 65 1 320 1 306 1 35 4 300 1 227 2 269 2 365 1 142 1 211 2 55 3 272 1 315 1 367 8 9 1 31 4 73 4 150 2 23 1 
10 1 
265 1 35 2 227 1 269 1 26 1 142 1 211 1 186 1 55 2 272 1 367 4 9 1 31 2 188 1 73 2 229 1 150 1 
231 1 35 4 267 2 26 1 112 1 142 1 186 1 55 2 272 1 367 7 98 1 9 1 73 3 229 1 150 1 
231 1 320 1 300 2 365 1 26 2 142 3 55 9 367 23 344 1 9 3 31 4 150 5 265 2 33 1 65 1 306 1 35 12 267 2 227 2 269 2 211 2 186 2 315 2 272 4 98 2 73 11 229 2 23 2 103 1 
367 1 35 1 267 1 
367 1 98 1 73 1 
265 1 35 3 269 1 227 1 26 1 211 1 142 1 186 1 55 3 272 1 367 6 9 1 31 2 43 1 188 1 73 3 229 1 150 2 
265 1 35 6 267 1 227 1 269 1 26 2 112 1 223 1 142 2 211 1 186 2 284 1 55 2 272 1 367 12 98 1 9 2 70 1 168 1 31 2 73 6 263 1 229 2 150 1 63 1 
320 1 35 3 142 1 55 2 315 1 272 1 367 6 9 1 73 3 150 1 23 1 
265 1 306 1 35 2 300 1 227 1 269 1 365 1 211 1 55 2 272 1 315 1 344 1 367 3 31 2 73 1 150 1 23 1 
265 1 320 1 35 5 269 1 227 1 211 1 142 2 55 5 315 2 272 2 367 10 9 2 31 2 73 5 22 1 150 3 63 1 23 2 
265 1 227 1 269 1 211 1 55 1 272 1 367 2 9 1 31 2 73 2 229 1 63 1 
265 1 35 2 227 1 269 1 26 1 142 1 211 1 186 1 55 2 272 1 367 4 9 1 31 2 73 2 229 1 150 1 63 1 
265 3 35 2 92 1 300 1 227 3 269 3 211 3 55 2 315 1 272 1 344 1 367 3 31 6 73 1 150 1 63 1 23 1 
231 1 320 2 300 2 220 1 281 1 365 1 26 3 112 1 142 5 55 12 344 1 367 34 9 5 31 10 150 7 63 1 329 1 265 5 65 1 306 1 35 18 92 1 267 4 269 5 227 5 211 5 186 3 315 3 272 5 98 3 188 1 73 16 229 3 23 3 
320 1 365 1 112 1 223 1 142 1 55 2 367 8 9 1 31 2 150 2 63 1 265 1 65 1 306 1 35 4 267 1 269 1 227 1 211 1 315 1 98 1 73 4 23 1 
231 1 320 1 365 1 112 1 223 1 142 1 55 3 367 11 9 2 31 4 150 2 63 1 265 2 65 1 306 1 35 5 267 2 269 2 227 2 211 2 186 1 315 1 272 1 98 1 188 1 73 6 229 1 23 1 
320 1 300 1 365 1 26 2 112 1 223 1 142 3 55 4 284 1 367 19 168 1 9 3 31 6 263 1 150 3 63 1 265 3 65 1 306 1 35 10 267 1 269 3 227 3 211 3 186 2 315 1 272 1 98 1 70 1 188 1 73 9 229 2 23 1 
320 1 300 1 365 1 26 1 112 1 223 1 142 2 55 5 284 1 367 17 168 1 9 3 31 6 263 1 150 3 63 1 265 3 65 1 306 1 35 7 267 1 269 3 227 3 211 3 186 2 315 1 272 2 98 1 70 1 188 1 73 10 229 2 23 1 
320 1 365 1 112 1 223 1 142 1 55 2 367 8 9 1 31 2 150 2 63 1 265 1 65 1 306 1 35 4 267 1 269 1 227 1 211 1 315 1 98 1 73 4 23 1 
265 1 35 6 267 1 227 1 269 1 26 2 112 1 223 1 142 2 211 1 186 2 284 1 55 2 272 1 367 12 98 1 9 2 70 1 168 1 31 2 73 6 263 1 229 2 150 1 63 1 
320 1 300 2 365 1 26 1 112 1 223 1 142 2 284 1 55 5 367 18 168 1 9 3 31 8 263 1 150 3 63 1 265 4 65 1 306 1 35 8 267 1 269 4 227 4 211 4 186 2 315 1 272 2 98 1 70 1 188 1 73 10 229 2 23 1 
300 2 26 2 112 1 223 1 142 2 284 1 55 6 367 16 168 1 9 3 31 8 263 1 150 3 63 1 265 4 35 7 92 1 267 1 269 4 227 4 211 4 186 3 272 3 98 1 70 1 73 9 229 3 
306 1 320 1 35 4 365 2 142 1 55 6 315 3 272 3 367 7 9 1 73 3 150 3 23 3 
320 1 300 2 365 1 26 1 112 1 223 1 142 2 284 1 55 4 367 18 168 1 9 3 31 8 263 1 150 3 63 1 265 4 65 1 306 1 35 8 92 1 267 1 269 4 227 4 211 4 186 2 315 1 272 1 98 1 70 1 73 10 229 2 23 1 
291 1 297 1 237 1 147 1 85 1 52 1 155 1 
297 1 64 1 52 1 155 1 141 1 234 1 291 1 273 1 237 1 147 1 101 1 85 1 
10 1 248 1 139 1 181 1 140 1 
133 1 297 2 171 1 160 1 135 1 155 1 248 1 180 1 181 1 139 1 140 1 376 1 145 1 378 1 147 1 85 2 45 1 62 1 
133 1 297 2 171 1 160 3 305 1 135 2 38 1 280 1 155 2 248 1 180 1 139 1 140 1 376 2 123 1 145 1 378 1 147 1 347 1 85 2 45 1 238 1 62 2 
297 2 133 1 160 3 135 2 280 1 165 1 248 2 139 2 140 2 147 1 347 1 85 2 62 2 238 1 171 1 305 1 38 1 155 2 180 1 123 1 376 2 377 1 378 1 45 1 
160 4 135 1 53 1 248 3 139 3 140 3 54 1 224 1 198 1 199 1 59 2 62 1 207 1 305 1 153 1 38 1 181 1 336 1 123 1 377 1 378 1 45 1 380 2 
151 1 160 4 305 1 135 1 153 1 38 1 53 1 248 3 181 1 139 3 140 3 54 1 123 1 336 1 199 1 198 1 377 1 378 1 59 2 380 2 45 1 62 1 
378 1 257 1 248 1 45 1 139 1 140 1 
50 1 160 3 161 1 135 2 279 1 67 1 248 6 182 1 181 2 139 7 140 7 252 1 39 1 343 1 346 1 257 1 258 1 378 3 45 2 62 1 230 1 
297 2 160 1 248 1 3 1 55 2 346 1 9 1 260 1 62 1 265 2 171 1 65 1 306 1 269 2 227 2 176 1 309 1 180 1 15 1 315 1 71 1 73 3 318 1 23 1 77 2 133 1 135 1 320 1 193 1 365 1 139 1 140 1 142 1 367 6 145 1 83 1 147 2 31 4 85 2 150 2 35 3 332 2 155 1 211 2 376 1 378 1 45 1 
47 2 160 2 137 1 53 1 248 1 139 1 140 1 195 1 143 1 54 1 236 2 198 2 199 1 326 1 59 3 301 1 151 1 89 1 153 1 36 1 181 1 312 1 271 2 124 2 336 1 20 1 354 1 380 3 
13 1 160 2 135 1 53 1 248 2 139 2 140 2 346 1 257 1 378 2 45 1 62 1 230 1 
160 1 135 1 2 1 372 1 248 4 181 1 139 4 140 4 40 1 377 1 346 1 378 1 45 1 
160 1 135 1 117 1 331 1 67 1 248 2 110 1 139 2 140 2 252 1 123 1 378 2 45 1 62 1 
5 1 126 1 378 1 58 1 210 1 248 1 45 1 139 1 181 1 140 1 
343 1 160 1 50 1 325 1 135 1 346 1 378 1 248 2 45 1 139 2 140 2 
50 1 160 3 135 2 161 1 279 1 2 1 372 1 248 4 181 1 139 5 140 5 40 1 123 1 346 1 378 2 45 2 
50 1 160 3 135 2 161 1 2 1 372 1 248 4 181 1 139 5 140 5 290 1 40 1 123 1 346 1 378 2 45 2 
133 1 297 2 171 1 160 1 135 1 165 1 155 1 248 1 180 1 181 1 139 1 140 1 376 1 378 1 147 1 85 2 45 1 62 1 
160 1 135 1 67 1 248 1 139 1 140 1 252 1 123 1 258 1 378 2 45 1 62 1 230 1 
243 1 19 1 167 1 147 1 216 1 
173 1 105 1 153 1 280 1 333 1 243 2 254 1 54 1 19 2 167 1 199 1 59 2 316 1 147 1 347 1 354 1 216 2 380 2 238 1 
46 1 297 1 270 1 155 1 243 1 19 1 213 1 167 1 85 1 
167 1 173 1 316 1 
10 1 
239 1 122 1 49 1 200 1 299 1 250 1 12 1 
255 1 299 1 179 1 
114 1 130 1 239 1 49 1 0 2 299 3 250 1 351 1 122 1 8 1 200 3 12 1 
239 1 122 1 49 1 41 1 200 2 299 2 149 1 250 1 12 1 
114 1 49 1 299 1 250 1 166 1 122 1 5 1 337 1 126 1 200 1 74 1 
114 1 122 1 49 1 200 1 299 1 250 1 12 1 
239 1 114 1 49 1 200 1 299 1 250 1 12 2 
114 1 122 1 323 1 56 1 49 2 200 2 299 2 127 1 250 2 12 1 
239 1 114 1 49 1 14 1 299 3 250 1 166 1 18 1 122 2 200 3 41 2 12 1 102 1 
239 1 114 1 49 1 299 2 210 1 118 1 250 1 122 1 5 1 7 1 126 2 337 1 200 2 41 1 12 1 
239 1 114 1 49 2 14 1 299 4 250 2 166 1 194 1 122 2 200 4 41 2 149 1 12 1 
239 1 114 1 122 1 49 1 200 1 299 1 250 1 12 1 
130 1 239 2 0 1 49 1 14 1 299 4 250 1 166 1 122 3 214 1 8 1 41 2 200 4 12 2 
114 1 239 1 49 1 299 2 222 1 250 1 122 1 200 2 41 1 128 1 12 1 88 1 
130 1 114 1 239 1 49 1 0 2 299 3 250 1 310 1 122 1 8 2 200 3 12 1 
122 2 37 2 202 1 275 1 
114 1 132 1 49 1 200 1 299 1 250 1 
239 1 114 1 122 1 18 1 49 1 41 1 200 2 299 2 250 1 12 1 
68 1 
239 1 114 1 122 1 49 1 200 1 299 1 250 1 12 1 
114 1 239 1 49 1 0 1 299 3 250 1 122 1 18 1 41 1 200 3 12 1 
122 1 214 1 14 1 166 1 
122 1 12 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (33,123) 11 (222,237) (222,237) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (33,123) 11 (222,237) (222,237) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (33,123) 11 (222,237) (222,237) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (33,123) 11 (222,237) (222,237) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1508 | == -> !=
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | STATEMENT | 1698 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
298 1 334 1 11 1 33 1 278 1 222 1 34 1 186 1 219 1 237 1 319 1 
298 1 334 1 11 1 33 1 278 1 222 1 34 1 186 1 219 1 237 1 319 1 
298 1 334 1 11 1 33 1 278 1 222 1 34 1 186 1 219 1 237 1 319 1 
298 1 334 1 11 1 33 1 278 1 222 1 34 1 186 1 219 1 237 1 319 1 
8 1 264 1 298 1 172 1 10 1 266 3 246 3 34 1 36 1 110 2 219 1 186 4 231 1 230 1 334 4 99 2 200 1 336 1 
298 1 10 1 246 1 34 1 290 1 218 1 219 1 186 2 375 1 231 1 334 2 166 1 278 1 200 1 336 1 319 1 
298 1 8 1 266 1 246 2 34 2 123 1 110 1 219 2 186 3 334 3 278 1 200 1 336 1 
264 1 172 1 298 1 8 3 10 1 266 7 246 5 288 1 34 2 36 1 123 1 110 4 219 2 186 9 231 1 230 1 334 9 99 2 278 1 200 1 317 1 30 1 336 1 18 1 
264 1 172 1 298 1 8 3 10 1 266 7 246 5 288 1 34 2 36 1 123 1 110 4 219 2 186 9 231 1 230 1 334 9 99 2 278 1 200 1 317 1 30 1 336 1 18 1 
358 1 2 1 250 1 
95 2 250 1 355 1 
104 2 52 2 226 2 121 2 267 1 379 2 111 2 17 1 
121 2 267 1 48 1 177 1 273 1 363 1 71 1 52 2 129 1 302 1 152 2 366 1 224 1 136 1 104 2 371 1 226 3 84 1 13 1 139 2 348 2 111 3 312 1 86 2 185 1 16 2 164 1 331 1 144 1 145 1 351 1 64 1 233 1 168 1 379 2 17 1 66 1 
210 1 104 1 346 1 52 1 226 1 121 1 122 1 379 1 111 1 17 1 
60 1 2 1 226 1 236 1 250 1 111 1 149 1 210 1 353 1 116 1 379 1 118 1 43 1 93 1 
104 1 60 1 2 1 121 1 226 1 236 1 250 1 111 1 149 1 210 1 52 1 353 1 379 1 118 2 93 2 
187 1 221 1 118 1 203 1 93 1 
9 1 127 1 187 1 2 1 221 1 250 1 118 2 93 2 
221 1 118 1 93 1 
104 1 346 1 121 1 226 1 122 1 111 1 96 1 210 1 187 1 52 1 118 1 379 1 17 1 93 1 
250 1 
9 1 143 1 187 1 2 1 221 1 250 1 118 2 93 2 
9 1 2 1 287 2 109 1 250 1 125 1 187 2 376 2 212 1 25 1 352 1 190 1 101 2 221 2 118 5 90 1 134 1 7 1 93 5 
358 1 267 1 
104 1 226 2 121 1 267 2 111 2 209 1 52 1 133 1 379 2 
173 1 325 1 14 1 
226 1 13 1 267 1 48 1 111 1 86 1 273 1 16 1 71 1 331 1 145 1 351 1 152 1 366 1 193 1 66 1 
67 1 104 1 121 1 226 2 13 1 48 1 14 1 111 2 86 1 273 1 16 1 71 1 331 1 145 1 351 1 152 1 366 1 379 1 42 1 66 1 
67 1 104 4 121 4 226 5 360 1 267 1 111 5 209 1 52 1 354 1 379 5 42 2 43 1 81 1 
210 1 104 2 346 1 226 2 121 2 374 1 379 2 111 2 
104 3 52 1 226 3 121 3 267 1 379 3 42 1 111 3 
210 1 104 1 346 1 226 1 121 1 379 1 111 1 
210 1 104 1 52 1 226 1 121 1 133 1 379 1 111 1 209 1 
67 1 121 3 236 1 300 1 267 1 48 1 177 1 149 1 273 1 363 1 71 1 302 1 52 2 152 1 366 1 136 1 60 1 104 3 371 1 226 4 13 1 139 1 348 2 209 1 111 4 86 1 185 1 16 1 164 1 331 1 210 1 144 1 145 1 351 1 64 1 353 1 259 1 168 1 379 3 118 1 42 1 17 1 66 1 93 1 
104 1 226 2 121 1 360 1 267 1 379 2 111 2 42 1 43 1 
67 1 104 3 60 1 121 3 226 3 236 1 250 1 209 1 149 1 111 3 197 1 210 1 52 1 353 1 259 1 118 1 379 3 42 2 93 1 
104 2 173 1 121 2 226 2 14 1 209 1 111 2 52 1 379 2 42 1 
226 1 13 1 267 1 48 1 111 1 86 1 273 1 16 1 71 1 331 1 145 1 351 1 152 1 366 1 66 1 
0 1 226 1 267 1 48 1 111 1 86 1 273 1 16 1 71 1 331 1 145 1 351 1 152 1 366 1 356 1 
173 2 177 1 323 1 363 1 54 1 325 2 156 1 77 1 281 1 135 1 368 1 371 1 139 4 348 2 14 2 185 1 144 2 63 1 64 1 233 2 168 1 315 1 91 1 382 1 
210 1 104 1 236 1 226 1 121 1 379 1 374 1 111 1 
39 1 44 1 
39 1 44 1 
201 1 82 1 
201 1 82 1 
201 1 82 1 
39 1 44 1 204 1 
39 1 44 1 204 1 
39 1 252 1 44 1 
39 2 120 1 108 1 201 1 44 2 82 1 
39 1 44 1 204 1 
39 1 105 1 44 1 
39 1 105 1 44 1 
39 1 105 1 44 1 
121 2 267 1 272 1 5 1 364 1 55 1 367 1 104 2 226 2 161 1 111 2 252 1 229 1 328 1 142 1 39 1 117 1 316 1 118 1 379 2 357 1 44 1 296 1 93 1 
216 1 45 1 161 3 347 2 108 1 250 1 229 2 328 1 39 2 257 1 365 1 241 1 316 2 118 2 367 2 261 1 44 2 296 2 93 2 
172 1 10 1 231 1 
10 1 231 1 375 1 
172 2 231 3 335 1 322 1 375 1 318 1 
172 1 332 1 231 2 335 1 322 1 375 1 
172 1 231 2 335 1 322 2 375 1 
215 1 1 2 2 1 95 3 22 2 323 1 125 2 49 1 5 1 303 1 182 1 54 1 101 1 221 1 279 1 28 1 77 1 7 1 9 1 287 1 250 2 109 3 142 1 187 4 376 1 357 1 355 1 169 2 118 5 294 1 382 1 93 5 
1 6 2 1 95 9 96 1 49 2 5 4 151 1 52 1 303 3 54 3 101 2 203 5 7 1 9 1 104 1 346 1 250 5 109 8 251 1 111 1 210 1 118 9 169 6 355 3 17 1 121 1 122 1 323 3 125 6 23 1 221 6 277 1 28 2 77 3 226 1 287 2 88 1 187 7 376 2 188 5 378 1 379 1 294 1 90 1 382 3 93 9 
215 1 1 2 2 1 95 4 22 1 323 1 125 2 49 1 5 1 182 1 303 1 54 1 101 1 28 1 77 1 287 1 250 3 109 3 187 2 376 1 355 2 118 3 169 2 90 1 382 1 93 3 
215 1 1 4 2 1 95 8 22 2 323 2 125 4 23 1 49 1 5 2 182 1 303 2 54 2 101 1 28 1 77 2 287 1 250 5 109 5 251 1 187 3 376 1 378 1 355 4 169 4 118 4 90 1 382 2 93 4 
330 1 358 1 145 1 
275 1 145 1 
265 1 
145 1 351 1 273 1 
145 1 141 1 
145 1 273 1 
330 2 333 1 145 3 351 1 273 1 295 1 
368 2 94 1 205 1 307 1 61 1 46 1 175 1 139 7 362 2 70 1 144 3 53 1 54 1 62 1 233 4 77 1 91 3 
368 2 94 1 205 1 307 1 61 1 46 1 175 1 139 7 362 2 70 1 144 3 53 1 54 1 62 1 233 4 77 1 91 3 
368 2 94 1 205 1 307 1 61 1 46 1 175 1 176 1 139 7 362 2 70 1 144 3 53 1 54 1 62 1 233 4 77 1 91 3 
94 1 46 2 175 2 362 3 70 1 323 3 342 1 363 1 53 2 239 1 303 3 54 4 26 1 326 1 77 4 80 1 368 5 205 2 307 5 61 1 371 1 227 3 139 31 348 2 37 1 144 15 377 4 62 1 64 1 168 1 293 1 233 16 382 3 91 10 
94 1 175 1 46 1 362 2 321 1 342 1 70 1 363 2 53 1 54 1 77 1 368 3 184 1 205 1 307 1 371 2 139 9 348 4 144 4 62 1 64 2 168 2 233 5 91 4 
172 1 298 1 339 1 266 1 69 1 219 1 71 1 152 1 278 1 200 1 103 1 31 1 10 1 246 1 34 1 35 1 86 1 162 1 186 2 375 1 16 1 331 1 231 2 334 2 260 1 336 1 380 1 171 1 318 1 92 1 
172 1 339 1 266 2 69 1 219 1 71 1 152 1 278 1 200 1 155 1 103 1 79 1 10 1 246 1 34 1 35 1 86 1 162 1 186 3 375 1 16 1 331 1 231 2 334 3 292 1 260 1 336 1 380 1 171 1 318 1 
172 1 339 1 266 2 69 1 71 1 152 1 278 1 200 1 103 1 79 1 10 1 246 1 35 1 86 1 186 2 375 1 16 1 331 1 231 2 334 2 292 1 260 1 336 1 171 1 318 1 
339 2 32 1 372 1 34 1 373 1 310 1 48 1 86 1 273 1 219 1 186 1 16 1 71 1 331 1 145 1 334 1 152 1 278 2 155 1 214 1 260 2 345 1 103 2 
172 1 298 1 339 1 69 1 219 1 71 1 152 1 278 1 103 1 10 1 34 1 35 1 86 1 162 1 186 1 375 1 16 1 331 1 231 2 334 1 292 1 260 1 380 1 171 1 318 1 92 1 
305 1 
95 2 236 1 48 2 149 1 49 1 343 2 301 2 152 2 101 1 7 1 9 3 306 2 60 1 160 2 208 1 250 1 109 2 311 1 111 1 16 2 163 2 210 1 211 4 113 1 115 1 353 1 213 1 116 1 355 2 118 5 119 2 20 1 273 1 125 2 178 1 71 1 181 1 221 6 74 1 29 1 32 1 226 1 287 1 289 1 373 1 38 2 86 2 331 1 376 1 145 1 189 1 379 1 43 1 93 5 
236 1 149 1 221 2 29 1 9 1 60 1 208 1 226 1 311 1 111 1 143 1 210 1 211 2 189 1 115 1 353 1 116 1 379 1 118 3 43 1 93 3 119 1 
2 1 236 1 149 1 221 1 29 1 9 1 60 1 208 1 226 1 250 1 311 1 111 1 163 1 143 1 210 1 211 3 189 1 115 1 353 1 116 1 379 1 118 3 43 1 93 3 
60 1 208 1 236 1 226 1 311 1 149 1 111 1 211 2 210 1 343 1 189 1 221 1 353 1 115 1 116 1 118 2 379 1 29 1 43 1 119 1 93 2 
2 1 236 1 149 1 96 1 52 1 343 4 301 2 101 1 7 1 9 3 104 1 60 1 306 2 346 1 160 2 208 1 12 1 250 1 109 1 311 1 111 2 163 2 211 4 210 2 256 1 113 1 353 1 115 1 116 1 118 5 355 2 17 1 119 4 121 1 122 1 125 1 180 1 181 1 221 7 29 1 226 2 228 1 287 1 38 2 143 1 376 1 189 1 40 1 379 2 43 1 93 5 
2 1 236 1 95 2 149 1 96 1 52 1 301 2 343 1 101 1 7 1 9 1 104 1 60 1 306 1 346 1 160 2 208 1 109 1 250 3 311 1 111 2 163 1 211 3 210 2 113 1 353 1 115 1 213 1 116 1 118 3 355 2 17 1 119 1 121 1 122 1 125 1 181 1 221 2 29 1 226 2 287 1 38 2 376 1 189 1 379 2 43 1 93 3 
2 1 236 1 149 1 96 1 52 1 301 2 343 2 101 1 7 1 9 2 104 1 60 1 306 2 346 1 160 2 208 1 12 1 109 1 250 1 311 1 111 2 163 2 211 4 210 2 256 1 113 1 353 1 115 1 116 1 118 4 355 2 17 1 119 2 121 1 122 1 125 1 181 1 221 4 29 1 226 2 287 1 38 2 376 1 189 1 40 1 379 2 43 1 93 4 
2 1 236 1 149 1 96 1 52 1 301 2 343 2 101 1 7 1 9 2 104 1 60 1 306 2 346 1 160 2 208 1 12 1 109 1 250 1 311 1 111 2 163 2 211 4 210 2 256 1 113 1 353 1 115 1 116 1 118 4 355 2 17 1 119 2 121 1 122 1 125 1 181 1 221 4 29 1 226 2 287 1 38 2 376 1 189 1 40 1 379 2 43 1 93 4 
297 2 2 1 236 1 95 2 148 2 149 1 96 1 52 1 301 2 343 2 101 1 7 1 9 2 104 1 60 1 346 1 160 2 208 1 109 1 250 1 311 1 111 2 163 2 211 4 210 2 256 1 113 1 353 1 115 1 116 1 118 4 17 1 119 2 19 1 121 1 122 1 271 1 125 1 128 1 221 4 29 1 226 2 287 1 376 1 189 1 379 2 43 1 93 4 
2 1 236 1 149 1 96 1 52 1 343 3 301 2 101 1 7 1 9 2 104 1 60 1 306 2 346 1 160 2 208 1 12 1 109 1 250 1 311 1 111 2 163 2 211 4 210 2 256 1 113 1 353 1 115 1 116 1 118 4 355 2 17 1 119 3 121 1 122 1 125 1 180 1 181 1 221 5 29 1 226 2 287 1 38 2 376 1 189 1 40 1 379 2 43 1 93 4 
2 1 236 1 149 1 96 1 52 1 343 3 301 2 101 1 7 1 9 2 104 1 60 1 306 2 346 1 160 2 208 1 12 1 109 1 250 1 311 1 111 2 163 2 211 4 210 2 256 1 113 1 353 1 115 1 116 1 118 4 355 2 17 1 119 3 121 1 122 1 125 1 180 1 181 1 221 5 29 1 226 2 287 1 38 2 376 1 189 1 40 1 379 2 43 1 93 4 
297 2 2 1 236 1 95 2 148 2 149 1 96 1 52 1 301 2 343 2 101 1 7 1 9 2 104 1 60 1 346 1 160 2 208 1 109 1 250 1 311 1 111 2 163 1 211 3 210 2 113 1 353 1 115 1 213 1 116 1 118 4 17 1 119 2 121 1 122 1 271 1 125 1 221 4 29 1 226 2 287 1 376 1 189 1 379 2 43 1 93 4 
368 2 94 1 358 1 173 1 371 1 46 1 139 6 362 1 267 2 348 2 14 1 177 1 70 1 185 1 363 1 144 3 53 1 54 1 62 1 64 1 325 1 233 3 315 1 168 1 77 1 91 2 
338 1 173 4 359 1 267 1 177 1 323 1 363 2 303 2 54 2 344 1 325 11 26 1 77 1 57 1 58 1 224 1 368 1 307 1 371 2 227 3 139 14 348 4 14 11 185 2 164 1 144 6 377 3 64 2 293 1 168 2 233 8 91 2 382 2 
67 1 173 1 121 1 359 1 196 1 267 1 48 1 177 1 273 1 363 1 71 1 152 1 366 1 224 1 104 1 226 2 371 1 13 1 139 2 348 2 140 1 86 1 111 2 185 1 16 1 164 1 331 1 144 1 145 1 351 1 64 1 167 1 168 1 233 1 379 1 42 1 193 1 66 1 
94 1 235 1 46 1 340 1 48 1 53 1 302 2 303 2 152 3 198 2 54 3 159 2 104 1 307 4 13 2 348 6 14 7 111 3 16 3 164 1 351 2 62 1 64 3 168 3 66 2 68 1 67 1 173 7 121 1 359 1 21 2 362 1 267 2 177 3 70 1 273 2 323 2 363 3 71 2 325 7 366 2 77 3 224 1 368 4 284 2 371 3 226 3 139 20 86 3 185 3 331 2 144 10 145 2 292 1 233 10 379 1 42 1 382 2 91 8 
121 1 48 2 177 2 273 2 363 2 71 2 152 8 304 1 76 1 31 1 224 1 245 1 104 1 285 1 226 1 371 2 32 1 84 2 139 2 348 4 373 1 253 1 111 1 86 7 185 2 16 8 164 1 331 2 144 1 145 3 64 2 292 1 315 1 168 2 233 1 379 1 170 1 42 1 381 1 
173 1 121 1 359 1 177 1 323 1 363 1 274 1 52 1 303 1 54 1 325 1 77 1 368 1 104 1 371 1 226 1 139 3 348 2 14 1 209 1 111 1 185 1 144 2 64 1 168 1 233 1 379 1 91 1 382 1 
307 1 173 1 371 1 139 2 348 2 14 1 177 1 185 1 363 1 54 1 64 1 325 1 315 1 168 1 233 2 135 1 91 1 382 1 
368 1 173 1 371 1 139 2 348 2 14 1 177 1 185 1 323 1 363 1 144 2 64 1 325 1 315 1 168 1 77 1 281 1 91 1 
368 1 307 1 173 2 371 1 139 4 348 2 14 2 177 1 323 1 185 1 363 1 144 2 303 1 54 1 64 1 325 2 315 1 168 1 233 2 77 1 91 2 382 1 
307 1 173 1 371 1 139 2 348 2 14 1 177 1 185 1 363 1 54 1 64 1 325 1 168 1 233 2 76 1 135 1 91 1 382 1 
368 1 173 1 371 1 139 2 348 2 14 1 177 1 185 1 323 1 363 1 144 2 64 1 325 1 168 1 76 1 77 1 281 1 91 1 
368 1 307 1 173 2 371 1 139 4 348 2 14 2 177 1 323 1 185 1 363 1 144 2 303 1 54 1 64 1 325 2 168 1 233 2 76 1 77 1 91 2 382 1 
368 1 307 1 173 2 371 1 139 4 348 2 14 2 177 1 323 1 185 1 363 1 144 2 303 1 54 1 64 1 325 2 168 1 233 2 77 1 91 2 382 1 
267 1 48 1 177 1 273 1 363 1 71 1 302 1 152 1 366 1 224 1 226 1 371 1 13 1 139 2 348 2 86 1 111 1 185 1 16 1 164 1 331 1 144 1 145 1 351 1 64 1 233 1 168 1 66 1 
0 1 267 1 48 1 177 1 273 1 363 1 71 1 152 1 366 1 78 1 224 1 226 1 371 1 139 2 348 2 86 1 111 1 185 1 16 1 164 1 331 1 144 1 145 1 351 1 64 1 233 1 168 1 356 1 
368 1 307 1 173 2 371 1 359 1 139 4 348 2 14 2 177 1 323 1 185 1 363 1 144 2 303 1 54 1 64 1 325 2 168 1 233 2 77 1 91 2 382 1 
173 2 21 1 177 1 323 1 273 1 363 1 71 1 302 1 303 1 54 1 152 1 325 2 366 1 77 1 31 1 368 1 307 1 226 1 371 1 13 1 139 4 348 2 14 2 86 1 111 1 185 1 16 1 331 1 144 2 145 1 351 1 64 1 233 2 168 1 91 2 382 1 66 1 
173 1 121 1 359 1 177 1 323 1 363 1 52 1 303 1 54 1 325 1 77 1 307 1 104 1 371 1 226 1 139 3 348 2 14 1 209 1 111 1 185 1 144 1 64 1 168 1 233 2 379 1 234 1 91 1 382 1 
94 1 3 1 217 1 46 1 268 1 362 1 269 4 70 1 342 1 323 4 363 3 179 1 53 1 238 1 130 1 303 4 54 5 199 1 26 1 27 1 242 1 154 1 77 5 282 2 368 4 184 1 307 4 371 3 227 3 139 41 348 6 314 1 144 21 377 4 114 1 62 1 64 3 293 3 168 3 233 20 382 4 91 8 263 1 
94 1 3 1 217 1 46 1 268 1 362 1 269 4 70 1 342 2 323 3 363 4 179 1 53 1 238 1 130 1 303 4 54 5 199 1 26 1 27 1 242 1 154 1 77 4 282 2 368 4 184 1 307 3 371 4 227 3 139 38 348 8 314 1 144 18 377 4 114 1 62 1 64 4 293 3 168 4 233 20 382 4 91 7 263 1 
94 1 338 2 217 1 46 1 268 1 362 1 269 4 70 1 342 1 323 7 363 2 179 1 53 1 238 1 130 1 303 7 54 8 26 2 27 1 242 1 154 1 77 8 282 1 368 7 184 1 307 7 371 2 227 4 139 52 348 4 314 1 144 25 377 4 114 1 62 1 64 2 293 2 168 2 233 27 382 7 91 14 263 1 
268 1 269 2 323 3 363 2 238 1 303 3 54 3 100 1 199 1 26 1 154 1 77 3 282 1 368 3 184 1 307 3 371 2 227 1 139 19 348 4 314 1 144 10 377 2 64 2 293 1 168 2 233 9 382 3 91 6 263 2 
217 1 268 1 269 4 342 2 323 2 363 3 179 1 238 1 130 1 303 3 54 3 154 1 242 1 27 1 77 2 282 2 368 2 184 1 307 2 371 3 227 2 139 26 348 6 314 2 144 12 377 2 114 1 64 3 168 3 233 14 293 2 91 4 382 3 263 1 
39 1 216 1 365 1 223 1 108 1 316 1 367 1 44 1 229 1 296 1 
364 1 252 1 
39 1 85 1 6 1 316 1 367 1 44 1 283 1 229 1 296 1 
258 1 204 1 
120 1 105 1 47 1 
216 1 45 1 161 2 347 1 108 1 250 1 328 1 229 1 39 1 257 1 365 1 241 1 118 1 316 1 367 1 44 1 93 1 296 1 
216 1 45 1 161 2 347 1 108 1 250 1 328 1 229 1 39 1 257 1 365 1 241 1 118 1 316 1 367 1 44 1 93 1 296 1 
216 1 45 1 161 2 347 1 108 1 250 1 328 1 229 1 39 1 257 1 365 1 241 1 118 1 316 1 367 1 44 1 93 1 296 1 
120 1 258 1 204 1 
120 1 258 1 204 1 
105 1 47 1 
120 1 105 1 47 1 
55 1 272 1 
121 2 267 1 270 1 272 1 5 1 364 1 55 1 367 1 104 2 226 2 161 1 347 1 111 2 252 1 229 1 142 1 187 1 39 1 257 1 117 1 118 1 316 1 357 1 379 2 44 1 93 1 296 1 
359 1 124 1 177 1 273 1 363 1 150 1 71 1 152 2 276 1 240 1 224 1 285 1 226 2 371 1 84 2 139 2 348 2 253 1 111 2 86 2 185 1 16 2 164 1 331 1 144 1 145 1 350 1 64 1 168 1 233 1 379 2 
172 1 10 1 69 1 35 1 86 2 162 1 375 1 16 2 71 1 231 2 331 1 152 2 73 1 292 1 75 1 260 1 31 1 262 1 318 1 
172 1 10 1 69 1 341 1 35 1 86 1 162 1 375 1 16 1 71 1 231 2 331 1 152 1 73 1 292 1 260 1 318 1 
32 1 48 1 310 1 373 1 86 1 273 1 16 1 71 1 331 1 145 1 152 1 260 1 262 1 337 1 
172 1 10 1 69 1 35 1 86 1 162 1 375 1 16 1 71 1 231 2 331 1 152 1 73 1 292 1 75 1 260 1 262 1 318 1 
327 1 
358 1 2 1 352 1 190 1 109 1 250 1 125 1 
2 1 95 1 125 1 181 1 101 1 221 1 7 1 9 1 306 1 287 1 109 1 250 2 38 1 376 1 355 1 118 1 93 1 
1 6 2 2 95 12 4 2 48 1 149 2 49 2 97 2 51 2 303 2 152 3 54 2 101 4 102 1 202 1 7 4 9 3 207 1 248 1 308 1 109 9 250 8 16 3 351 2 352 1 118 5 169 6 355 6 273 2 125 8 323 2 126 2 71 2 275 3 324 1 221 5 74 1 77 2 31 1 369 2 137 2 284 2 287 4 141 1 86 3 330 2 331 3 376 4 145 8 190 1 232 2 295 1 382 2 93 5 
1 5 2 2 95 6 174 1 125 5 323 2 49 1 179 1 130 1 303 2 54 2 221 1 101 2 74 1 242 1 27 1 77 2 7 2 9 1 137 2 286 1 227 1 287 2 109 8 250 5 376 2 377 1 114 1 232 1 293 1 118 1 169 5 355 3 382 2 93 1 
121 1 46 1 122 1 70 1 125 2 96 1 53 1 52 1 54 2 132 1 101 1 77 1 7 1 104 1 346 1 137 2 226 1 12 1 287 1 109 2 111 1 210 1 376 1 232 1 118 1 379 1 17 1 93 1 
2 1 287 1 250 1 109 1 125 1 376 1 190 1 101 1 352 1 7 1 
1 5 284 1 137 2 95 10 250 5 109 5 125 5 323 2 303 2 54 2 232 1 169 5 355 5 77 2 382 2 
9 1 2 1 221 1 250 1 118 1 93 1 
299 1 48 2 273 1 125 2 49 2 71 1 178 1 324 1 152 4 101 2 221 4 74 2 202 2 7 1 9 2 32 1 287 2 289 1 109 2 373 1 86 4 16 4 331 1 376 2 112 1 145 1 118 3 90 1 93 3 
121 2 267 1 48 1 177 1 273 1 363 1 71 1 52 2 302 1 152 1 366 1 136 1 104 2 371 1 226 3 13 1 139 1 348 2 86 1 111 3 185 1 16 1 164 1 331 1 144 1 145 1 351 1 64 1 168 1 379 2 17 1 66 1 
1 2 2 2 95 4 287 1 362 1 109 1 250 4 125 2 49 1 376 1 101 1 74 1 355 2 169 2 7 1 
194 1 229 1 296 1 
194 1 229 1 296 1 
365 1 55 1 157 1 229 1 296 1 
194 1 229 1 296 1 
89 1 229 1 296 1 
89 1 229 1 296 1 
89 1 229 1 296 1 
229 1 296 1 
39 1 44 1 
94 1 46 1 362 1 70 1 363 1 53 1 54 1 242 1 77 1 368 2 184 1 371 1 227 1 139 8 348 2 144 4 377 1 62 1 64 1 293 1 168 1 233 4 91 2 
94 1 46 1 362 1 70 1 363 2 50 1 53 1 303 1 54 2 26 1 242 1 77 1 368 2 184 1 307 1 371 2 227 1 139 11 348 4 144 5 377 2 62 1 64 2 293 1 168 2 233 6 382 1 91 3 
94 1 46 1 362 1 70 1 323 2 342 1 363 3 50 1 179 1 53 1 303 2 130 1 54 3 242 1 27 1 77 3 368 3 184 1 307 1 371 3 227 1 139 19 348 6 144 10 377 1 114 1 62 1 64 3 293 1 168 3 233 9 382 2 91 4 
94 1 46 1 362 1 70 1 342 1 323 1 363 3 50 1 179 1 53 1 303 2 130 1 54 3 242 1 27 1 77 2 368 3 184 1 307 2 371 3 227 1 139 17 348 6 144 7 377 1 114 1 62 1 64 3 293 1 168 3 233 10 382 2 91 5 
94 1 46 1 362 1 70 1 363 1 53 1 54 1 242 1 77 1 368 2 184 1 371 1 227 1 139 8 348 2 144 4 377 1 62 1 64 1 293 1 168 1 233 4 91 2 
323 2 363 1 179 1 303 2 130 1 54 2 242 1 27 1 77 2 368 1 184 1 307 1 371 1 227 1 139 12 348 2 144 6 377 1 114 1 64 1 293 1 168 1 233 6 382 2 91 2 
94 1 46 1 362 1 70 1 323 1 342 2 363 4 50 1 179 1 53 1 130 1 303 2 54 3 242 1 27 1 77 2 368 3 184 1 307 2 371 4 227 1 139 18 348 8 144 8 377 1 114 1 62 1 64 4 293 1 168 4 233 10 382 2 91 5 
323 2 342 2 363 4 179 1 130 1 303 3 54 3 199 1 242 1 27 1 77 2 368 3 184 1 307 3 371 4 227 1 139 16 348 8 144 7 377 1 114 1 64 4 293 1 168 4 233 9 382 3 91 6 
94 2 368 3 307 3 46 3 139 7 70 1 144 4 53 3 62 1 54 1 233 3 77 1 91 6 
94 1 46 1 362 1 70 1 323 1 342 2 363 4 179 1 53 1 130 1 303 2 54 3 199 1 242 1 27 1 77 2 368 3 184 1 307 1 371 4 227 1 139 18 348 8 144 8 377 1 114 1 62 1 64 4 293 1 168 4 233 10 382 2 91 4 
368 2 94 1 307 1 371 2 46 1 139 8 362 1 348 4 70 1 342 1 363 2 144 4 53 1 54 1 62 1 64 2 233 4 168 2 77 1 91 3 
94 1 368 2 358 1 46 1 139 6 362 1 70 1 144 3 53 1 62 1 54 1 233 3 77 1 91 2 
368 1 307 1 371 1 139 4 348 2 323 1 363 1 50 1 144 2 303 1 54 1 64 1 168 1 233 2 77 1 91 2 382 1 
368 1 307 1 227 1 139 7 323 1 144 4 377 2 303 1 54 1 26 1 293 1 233 3 77 1 382 1 91 2 
94 1 338 1 46 2 362 1 70 1 323 2 342 2 363 2 53 2 303 2 54 3 26 1 77 3 57 1 368 5 307 4 371 2 227 2 139 23 107 1 348 4 144 12 377 2 62 1 64 2 233 11 168 2 91 9 382 2 
144 1 377 1 139 1 
227 1 139 1 233 1 
368 2 307 1 284 1 371 1 139 6 348 2 323 1 363 1 50 1 144 3 303 1 54 1 64 1 168 1 233 3 77 1 382 1 91 3 
323 2 363 1 179 1 303 2 130 1 54 2 242 1 27 1 77 2 368 1 184 1 307 1 371 1 227 1 139 12 348 2 144 6 377 1 114 1 64 1 293 1 168 1 233 6 382 2 91 2 
368 1 307 1 46 1 139 6 70 1 144 3 53 1 54 1 233 3 77 1 91 2 
368 1 94 1 307 1 371 1 46 1 107 1 139 3 348 2 342 1 363 1 144 2 53 1 62 1 64 1 233 1 168 1 91 2 
368 3 184 1 307 2 371 1 46 2 139 10 348 2 70 1 363 1 144 5 53 2 54 2 64 1 132 1 168 1 233 5 77 2 91 5 
184 1 307 1 54 1 371 1 64 1 139 2 233 2 168 1 348 2 91 1 382 1 363 1 
368 1 184 1 307 1 371 1 139 4 348 2 323 1 363 1 144 2 303 1 54 1 64 1 168 1 233 2 77 1 91 2 382 1 
368 1 184 1 307 1 371 3 46 1 107 1 139 3 348 6 342 1 363 3 144 2 53 1 64 3 199 1 168 3 233 1 91 2 
94 1 46 3 362 1 70 2 342 2 323 3 363 5 50 1 53 3 239 1 303 3 54 5 199 1 26 1 77 5 80 1 368 7 184 1 307 5 371 5 227 3 107 1 139 34 37 1 348 10 144 18 377 4 62 1 64 5 293 1 168 5 233 16 382 3 91 12 
226 1 360 1 267 1 379 1 111 1 59 1 43 1 
226 1 360 1 147 1 267 1 313 1 111 1 87 1 255 1 65 1 379 1 59 1 43 1 
71 1 331 1 358 1 145 1 32 1 152 1 373 1 48 1 86 1 273 1 16 1 
104 1 121 1 226 2 267 1 48 1 111 2 86 1 273 1 16 1 71 1 331 1 145 1 351 1 152 1 366 1 379 1 42 1 66 1 
121 1 236 1 267 1 273 2 71 1 152 1 366 1 202 1 244 1 104 2 226 2 308 1 141 1 86 1 111 2 16 1 331 1 210 2 145 3 351 2 353 1 379 2 42 1 66 1 
0 1 121 1 236 1 267 1 273 2 71 1 152 1 366 1 202 1 244 1 104 2 226 2 308 1 141 1 86 1 111 2 16 1 331 1 210 2 145 3 351 2 353 1 379 2 42 1 
2 1 121 1 122 1 149 1 273 1 96 1 71 1 275 1 52 1 152 1 221 1 153 1 202 1 104 1 346 1 226 1 106 1 308 1 250 1 141 1 111 1 86 1 16 1 330 1 210 1 331 1 145 4 351 1 379 1 118 2 17 1 93 2 
2 1 121 1 122 1 149 1 273 1 96 1 71 1 275 1 52 1 152 1 221 1 202 1 104 1 369 1 346 1 226 1 308 1 250 1 141 1 111 1 86 1 16 1 330 1 210 1 331 1 145 4 351 1 379 1 118 2 17 1 93 2 
71 1 331 1 152 1 86 1 170 1 16 1 
206 1 245 1 84 1 48 2 253 1 86 6 273 2 16 7 220 1 71 2 331 3 145 3 351 1 152 7 292 1 304 1 41 1 170 1 31 1 381 1 295 1 
94 1 173 1 121 1 359 1 46 1 21 1 362 1 267 2 177 2 70 1 273 1 363 2 71 1 53 1 302 1 54 1 152 1 325 1 366 1 77 1 31 1 368 2 159 1 104 1 226 2 371 2 13 1 139 6 348 4 14 1 111 2 86 1 185 2 16 1 331 1 144 3 145 1 351 1 350 1 62 1 64 2 233 3 168 2 379 1 42 1 91 2 66 1 
2 1 48 1 149 1 125 1 126 1 275 1 97 1 51 1 324 1 152 1 101 2 221 2 7 2 9 1 369 1 287 2 109 1 250 1 86 1 16 1 330 1 187 1 376 2 145 2 352 1 190 1 118 3 93 3 
86 2 273 1 16 2 330 1 71 1 331 2 145 2 351 1 152 2 102 1 31 1 170 1 295 1 
225 1 32 1 48 1 373 1 86 4 273 1 16 4 71 1 331 1 145 1 152 4 280 1 31 1 
68 1 206 1 370 1 249 1 86 2 273 1 16 2 220 1 71 1 331 2 145 1 351 1 152 2 202 1 
71 1 10 1 231 1 331 1 152 1 35 1 48 1 86 1 375 1 16 1 
86 2 253 1 273 1 16 2 71 1 331 1 145 1 152 2 276 1 292 1 31 1 
245 1 225 1 32 1 373 1 48 1 86 4 253 1 273 2 16 5 71 2 331 2 145 3 152 5 202 1 31 1 381 1 
225 1 32 1 373 1 48 1 86 4 253 1 273 2 16 5 71 2 331 2 145 3 152 5 202 1 31 1 381 1 183 1 
0 1 104 1 121 1 226 2 267 1 48 1 111 2 86 1 273 1 16 1 71 1 331 1 145 1 351 1 152 1 366 1 379 1 42 1 
206 1 86 1 273 1 16 1 220 1 71 1 331 2 145 1 351 1 152 1 202 1 41 1 295 1 
349 1 165 1 247 1 267 1 309 1 
83 1 60 1 2 1 320 1 236 1 247 2 267 1 250 1 309 2 149 1 349 2 210 1 187 1 165 1 98 1 353 1 259 1 118 2 93 2 
226 1 247 1 124 1 111 1 150 1 349 1 165 1 240 1 379 1 
320 1 98 1 165 1 
358 1 246 1 200 1 336 1 
334 1 246 1 200 1 34 1 336 1 186 1 219 1 
339 1 278 1 186 1 
195 1 298 1 246 1 34 1 290 2 15 1 219 1 186 3 334 3 200 1 191 1 336 1 
334 2 266 1 246 1 99 1 200 1 34 1 336 1 186 2 219 1 
298 1 172 1 10 1 246 1 34 1 36 1 110 1 219 1 186 1 231 1 334 1 
298 1 334 1 246 1 34 1 336 1 186 1 219 1 
298 1 334 1 200 1 34 1 336 2 186 1 219 1 
298 1 246 1 138 1 34 2 219 2 186 2 254 1 334 2 336 1 158 1 
298 1 8 1 266 2 246 2 288 1 34 1 110 1 219 1 186 3 334 3 200 1 336 1 18 1 
298 1 172 1 10 1 266 1 246 1 34 1 375 1 219 1 186 2 231 2 334 2 72 1 200 1 336 1 318 1 
298 1 264 1 8 1 266 2 246 2 34 2 110 1 219 2 186 4 334 4 99 1 200 1 336 1 
298 1 334 1 246 1 200 1 34 1 336 1 186 1 219 1 
8 1 266 2 246 3 34 1 290 1 110 1 15 1 186 4 219 1 334 4 200 2 191 1 336 2 243 1 
298 1 266 1 246 1 34 1 219 1 186 2 291 1 334 2 131 1 200 1 30 1 336 1 
298 1 246 1 34 1 290 2 15 1 219 1 186 3 334 3 200 1 56 1 191 2 336 1 
246 2 361 1 192 2 329 1 
298 1 334 1 34 1 146 1 186 1 219 1 
298 1 334 2 266 1 246 1 200 1 34 1 336 1 18 1 186 2 219 1 
24 1 
298 1 334 1 246 1 200 1 34 1 336 1 186 1 219 1 
298 1 266 1 246 1 34 1 290 1 219 1 186 3 334 3 200 1 336 1 18 1 
8 1 246 1 110 1 243 1 
246 1 336 1 

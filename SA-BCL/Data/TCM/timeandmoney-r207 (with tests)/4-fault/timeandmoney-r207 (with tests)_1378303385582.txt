#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (74,95) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint; | RETURN | 4885 | return null
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z | OPERATOR | 2147 | && -> ||
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> !=
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONSTANT | 948 | 1 -> 0
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
219 3 329 5 100 1 222 1 126 1 202 2 128 1 254 1 204 2 174 9 81 1 342 2 60 1 312 6 316 4 290 2 67 1 66 9 91 1 164 1 213 1 137 2 298 1 267 1 122 2 301 2 247 1 327 1 
219 3 329 5 100 1 222 1 126 1 202 2 128 1 254 1 174 9 204 2 81 1 342 2 60 1 312 6 316 4 290 2 67 1 66 9 91 1 164 1 213 1 137 2 298 1 267 1 122 2 301 2 247 1 327 1 
219 4 329 6 100 1 222 1 126 1 202 2 128 1 254 1 174 10 204 2 81 1 342 2 60 1 312 7 316 5 290 2 67 1 66 10 91 1 164 1 213 1 137 2 298 1 267 1 122 2 301 2 247 1 327 1 
219 2 329 4 100 1 222 1 126 1 202 2 128 1 254 1 174 7 204 1 81 1 342 2 60 1 312 4 316 3 290 2 66 7 91 1 164 1 213 1 137 2 298 1 267 1 122 2 301 2 247 1 327 1 
219 1 329 3 290 1 222 1 126 1 67 1 202 1 66 4 91 1 137 1 213 1 174 4 204 2 342 1 81 1 312 3 316 2 301 1 
329 1 100 1 126 1 202 1 66 2 91 1 213 1 164 1 137 1 114 1 174 2 342 1 207 1 381 1 301 1 122 1 
219 1 329 2 126 1 202 2 66 3 91 1 213 1 174 3 312 1 316 1 301 2 122 1 327 1 
219 3 329 5 222 1 126 1 202 2 254 1 174 9 204 2 81 1 342 1 312 7 316 4 317 1 290 1 86 1 66 9 67 1 91 1 213 1 137 1 267 1 122 1 301 2 327 1 
219 3 329 5 222 1 126 1 202 2 254 1 174 9 204 2 81 1 342 1 312 7 316 4 317 1 290 1 86 1 66 9 67 1 91 1 213 1 137 1 267 1 122 1 301 2 327 1 
196 1 286 1 192 1 
113 2 143 1 192 1 
287 2 340 2 123 2 117 2 228 2 382 1 236 2 167 1 
270 1 123 2 331 1 360 1 253 1 273 1 276 1 364 1 336 1 41 2 43 2 340 3 10 1 205 2 83 1 106 1 105 2 228 2 107 1 133 1 230 1 208 2 209 1 13 1 287 2 47 1 185 1 89 1 372 1 236 3 33 1 262 1 117 2 266 1 382 1 167 1 195 1 
110 1 375 1 287 1 340 1 123 1 198 1 117 1 228 1 236 1 167 1 
196 1 271 1 29 1 123 1 305 1 1 1 124 1 189 1 90 1 236 1 375 1 239 1 340 1 192 1 
196 1 287 1 271 1 123 1 305 1 1 1 124 1 90 2 236 1 375 1 239 2 340 1 117 1 192 1 228 1 
239 1 197 1 90 1 246 1 31 1 
32 1 196 1 239 2 192 1 90 2 158 1 246 1 31 1 
239 1 90 1 31 1 
110 1 287 1 198 1 123 1 272 1 90 1 236 1 375 1 239 1 340 1 117 1 228 1 246 1 167 1 
192 1 
196 1 239 2 192 1 90 2 158 1 162 1 246 1 31 1 
17 1 196 1 320 1 90 5 4 2 31 2 6 1 8 1 239 5 115 1 280 1 70 1 192 1 313 2 158 1 61 2 194 1 246 2 229 1 
209 1 287 1 123 1 185 1 251 1 253 1 273 1 236 2 276 1 336 1 41 1 10 1 340 2 117 1 105 1 107 1 108 1 369 1 230 1 208 1 
286 1 382 1 
46 1 287 1 123 2 236 2 49 1 340 2 117 1 228 1 382 2 
95 1 217 1 251 1 
93 1 375 1 155 1 382 1 
287 3 340 3 123 3 117 3 228 1 369 1 382 1 236 3 
110 1 375 1 287 1 340 1 123 1 117 1 236 1 
46 1 375 1 49 1 287 1 340 1 123 1 117 1 228 1 236 1 
357 1 271 1 123 3 305 1 1 1 331 1 124 1 360 1 253 1 273 1 276 1 336 1 41 1 43 1 10 1 340 4 205 2 83 1 106 1 105 1 107 1 228 2 133 1 369 1 108 1 230 1 208 1 209 1 46 1 287 3 184 1 185 1 89 1 90 1 372 1 236 4 375 1 239 1 262 1 117 3 266 1 382 1 167 1 195 1 
308 1 287 1 340 2 123 2 117 1 189 1 369 1 382 1 236 2 
46 1 357 1 287 3 271 1 123 3 1 1 305 1 124 1 90 1 236 3 239 1 375 1 340 3 117 3 192 1 228 1 108 1 369 2 109 1 
46 1 287 2 123 2 251 1 236 2 95 1 340 2 117 2 228 1 369 1 
209 1 185 1 253 1 273 1 236 1 276 1 41 1 336 1 340 1 10 1 105 1 107 1 382 1 230 1 208 1 
209 1 347 1 273 1 236 1 276 1 41 1 336 1 340 1 10 1 105 1 107 1 382 1 230 1 146 1 208 1 
74 1 331 1 251 2 201 1 127 1 359 1 360 1 364 2 42 1 131 1 43 4 205 2 83 2 257 1 133 1 318 1 89 1 237 1 165 1 217 2 95 2 144 1 266 1 195 1 
375 1 271 1 287 1 340 1 123 1 117 1 380 1 236 1 
46 1 181 1 288 1 287 4 123 5 189 1 236 5 308 1 340 5 117 4 228 1 369 2 108 1 382 1 
110 1 375 1 287 2 340 2 123 2 117 2 380 1 236 2 
223 1 72 1 
223 1 72 1 
338 1 297 1 
338 1 297 1 
338 1 297 1 
223 1 244 1 72 1 
223 1 244 1 72 1 
186 1 223 1 72 1 
338 1 140 1 297 1 223 2 344 1 72 2 
223 1 244 1 72 1 
249 1 223 1 72 1 
249 1 223 1 72 1 
249 1 223 1 72 1 
285 2 183 1 223 2 90 2 65 1 334 2 339 2 278 1 239 2 366 3 243 1 263 2 299 1 104 2 352 1 344 1 192 1 72 2 345 1 
51 1 123 2 223 1 125 1 129 1 275 1 339 1 366 1 340 2 104 1 258 1 285 1 287 2 183 1 186 1 90 1 259 1 236 2 239 1 117 2 263 1 96 1 72 1 382 1 
290 1 342 1 137 1 
342 1 381 1 137 1 
290 2 342 3 306 1 163 1 381 1 350 1 
290 1 342 2 306 1 381 1 134 1 350 1 
290 1 342 2 306 2 381 1 350 1 
168 2 17 2 196 1 51 1 19 1 125 1 54 1 53 1 127 1 359 1 4 1 275 1 24 2 42 1 176 1 280 3 313 1 61 1 158 1 229 1 318 1 112 1 135 1 113 3 90 5 31 1 374 2 239 5 143 1 192 2 15 1 246 4 
168 6 17 6 51 4 196 1 19 1 197 5 54 3 224 1 127 3 359 3 4 2 6 1 102 1 42 3 103 1 176 2 280 8 313 2 158 1 61 2 229 1 370 1 318 3 113 9 349 1 90 9 31 6 374 6 141 1 239 9 242 5 143 3 192 5 15 2 246 7 
168 2 17 2 196 1 51 1 53 1 54 1 127 1 4 1 359 1 6 1 24 1 42 1 176 1 280 3 313 1 61 1 318 1 112 1 113 4 90 3 374 2 239 3 143 2 192 3 15 1 246 2 
168 4 17 4 196 1 51 2 53 1 54 2 127 2 4 1 359 2 6 1 24 2 102 1 42 2 176 1 280 5 313 1 61 1 370 1 318 2 112 1 113 7 90 4 374 4 141 1 239 4 143 3 192 4 15 1 246 3 
37 1 286 1 273 1 
101 1 273 1 
269 1 
209 1 273 1 
37 2 209 1 336 1 324 1 273 3 121 1 
209 1 336 1 273 1 
118 1 273 1 
356 1 318 1 221 1 201 3 88 1 127 1 76 1 321 1 21 1 294 1 364 4 56 1 296 2 131 2 43 7 83 3 84 1 
356 1 318 1 221 1 201 3 88 1 127 1 76 1 321 1 21 1 294 1 364 4 56 1 296 2 131 2 43 7 83 3 84 1 
356 1 318 1 221 1 201 3 88 1 127 1 76 1 321 1 21 1 294 1 364 4 56 1 296 2 131 2 43 7 83 3 84 1 354 1 
356 5 73 1 221 1 331 1 2 3 54 3 201 10 76 2 127 4 21 1 359 3 360 1 364 16 56 2 154 1 9 1 42 3 131 5 43 31 175 1 205 2 83 15 84 1 133 1 179 4 318 4 182 1 88 2 89 1 321 2 294 1 373 1 296 3 245 1 
356 1 221 1 331 2 201 4 127 1 76 1 360 2 364 5 56 1 131 3 310 1 43 9 205 4 83 4 84 1 133 2 11 1 318 1 88 1 89 2 321 1 294 1 373 1 296 2 
248 1 329 1 126 1 252 1 149 1 202 1 41 1 7 1 174 2 79 1 10 1 342 2 59 1 312 1 105 1 230 1 284 1 208 1 290 1 66 2 293 1 91 1 163 1 137 1 213 1 36 1 381 1 301 1 122 1 166 1 
248 1 329 1 126 1 252 1 20 1 149 1 202 1 41 1 7 1 174 3 10 1 342 2 59 1 312 2 105 1 315 1 230 1 284 1 208 1 290 1 66 3 91 1 163 1 137 1 238 1 36 1 381 1 301 1 122 1 166 1 
248 1 329 1 126 1 252 1 20 1 149 1 41 1 7 1 174 2 10 1 342 2 59 1 312 2 105 1 230 1 208 1 290 1 66 2 91 1 163 1 137 1 238 1 381 1 122 1 166 1 
209 1 188 1 210 1 291 1 252 2 148 1 202 1 66 1 149 2 273 1 276 1 41 1 173 1 7 2 174 1 10 1 177 1 105 1 315 1 230 1 122 2 301 1 208 1 
248 1 252 1 20 1 149 1 202 1 41 1 7 1 174 1 10 1 342 2 59 1 105 1 230 1 284 1 208 1 290 1 66 1 293 1 163 1 137 1 213 1 36 1 381 1 301 1 122 1 166 1 
307 1 
271 1 0 2 123 1 1 1 124 1 4 1 332 1 273 1 276 2 335 1 41 2 10 1 340 1 82 1 280 2 227 2 229 1 230 1 44 1 188 1 90 5 189 1 234 2 236 1 239 5 351 1 143 2 97 1 192 2 15 1 145 2 17 2 196 1 200 1 305 1 358 2 55 1 151 1 203 2 313 1 105 2 158 3 61 1 208 2 209 1 27 1 29 1 113 2 210 1 211 2 212 1 31 6 261 4 375 1 376 1 
271 1 29 1 123 1 1 1 200 1 305 1 124 1 90 3 189 1 162 1 211 1 31 2 236 1 335 1 261 2 375 1 239 3 340 1 351 1 82 1 158 1 44 1 
196 1 271 1 123 1 305 1 200 1 1 1 124 1 335 1 340 1 82 1 227 1 158 1 44 1 29 1 189 1 90 3 162 1 31 1 236 1 261 3 239 3 375 1 351 1 192 1 
196 1 271 1 123 1 305 1 200 1 1 1 124 1 358 1 335 1 340 1 82 1 227 1 158 1 44 1 29 1 189 1 90 3 162 1 211 1 236 1 31 2 261 3 239 3 375 1 351 1 192 1 
271 1 123 1 0 2 1 1 124 1 4 1 335 1 340 1 82 1 280 1 227 4 44 1 229 1 12 1 90 5 189 1 234 2 236 1 239 5 351 1 97 1 143 2 192 5 98 1 145 2 17 1 196 5 305 1 200 1 358 4 203 2 255 1 313 1 158 3 61 1 27 1 29 1 211 4 162 1 31 7 261 6 375 1 326 1 120 1 
17 1 196 1 271 1 0 2 123 1 200 1 305 1 1 1 358 2 124 1 4 1 203 2 335 1 340 1 82 1 280 1 227 2 313 1 158 2 61 1 44 1 229 1 27 1 29 1 113 2 90 4 189 1 211 2 234 2 212 1 31 4 236 1 261 4 239 4 375 1 351 1 143 2 97 1 192 2 145 2 
17 1 196 1 271 1 0 2 123 1 305 1 200 1 1 1 358 2 124 1 4 1 203 2 335 1 340 1 82 1 280 1 227 2 313 1 158 2 61 1 44 1 229 1 27 1 29 1 189 1 90 4 211 2 234 2 31 4 236 1 261 4 239 4 375 1 351 1 326 1 143 2 97 1 192 1 120 1 98 1 145 2 
17 1 196 1 271 1 0 2 123 1 305 1 200 1 1 1 358 2 124 1 4 1 203 2 335 1 340 1 82 1 280 1 227 2 313 1 158 2 61 1 44 1 229 1 27 1 29 1 189 1 90 4 211 2 234 2 31 4 236 1 261 4 239 4 375 1 351 1 326 1 143 2 97 1 192 1 120 1 98 1 145 2 
17 1 196 1 271 1 0 2 123 1 75 1 305 1 200 1 1 1 358 2 124 1 4 1 335 1 340 1 82 1 280 1 281 1 227 2 313 1 158 2 61 1 44 1 229 1 232 2 29 1 113 2 189 1 90 4 211 2 234 2 31 4 236 1 261 4 239 4 375 1 351 1 97 1 300 1 192 1 98 1 302 2 
17 1 196 1 271 1 0 2 123 1 305 1 200 1 1 1 124 1 358 3 4 1 203 2 335 1 340 1 82 1 280 1 227 3 313 1 158 2 61 1 229 1 44 1 27 1 12 1 29 1 189 1 90 4 234 2 211 3 236 1 31 5 261 5 239 4 375 1 351 1 326 1 143 2 97 1 192 1 120 1 98 1 145 2 
17 1 196 1 271 1 0 2 123 1 305 1 200 1 1 1 124 1 358 3 4 1 203 2 335 1 340 1 82 1 280 1 227 3 313 1 158 2 61 1 229 1 44 1 27 1 12 1 29 1 189 1 90 4 234 2 211 3 236 1 31 5 261 5 239 4 375 1 351 1 326 1 143 2 97 1 192 1 120 1 98 1 145 2 
17 1 196 1 271 1 0 2 123 1 200 1 305 1 1 1 75 1 358 2 124 1 4 1 335 1 340 1 82 1 280 1 227 2 313 1 158 2 61 1 44 1 229 1 232 2 29 1 113 2 90 4 189 1 211 2 234 2 212 1 31 4 236 1 261 4 239 4 375 1 351 1 97 1 192 1 302 2 
221 1 251 1 331 1 201 2 127 1 360 1 364 3 56 1 131 2 43 6 205 2 83 3 84 1 133 1 286 1 318 1 88 1 89 1 294 1 296 1 95 1 217 1 144 1 266 1 382 2 195 1 
356 1 331 2 251 11 201 2 2 3 54 2 127 2 359 2 360 2 274 1 364 8 131 1 42 1 43 14 175 1 205 4 83 6 206 1 106 1 133 2 179 3 13 1 318 1 233 1 89 2 292 1 217 11 95 4 266 2 245 1 382 1 218 1 195 1 
123 1 331 1 360 1 152 1 364 1 340 1 43 2 205 2 83 1 106 1 133 1 369 1 108 1 287 1 13 1 89 1 236 1 93 1 138 1 95 1 117 1 264 1 266 1 382 1 218 1 195 1 
221 1 123 1 331 3 127 3 171 1 273 2 276 1 41 3 336 2 131 4 42 2 340 3 43 20 10 2 83 10 84 1 133 3 230 2 13 1 287 1 185 2 88 1 89 3 235 2 294 1 236 3 296 1 95 7 50 2 195 3 356 4 251 7 54 2 201 8 20 1 359 2 360 3 253 2 362 2 364 10 56 1 205 6 157 1 106 1 105 3 314 1 107 2 108 1 369 1 208 3 209 2 371 2 318 3 262 2 217 7 117 1 266 3 382 2 218 1 
123 1 331 2 20 1 39 1 360 2 273 3 276 2 41 7 364 1 57 1 79 1 311 1 340 1 10 2 43 2 132 1 205 4 83 1 105 8 106 1 133 2 369 1 230 2 208 8 209 2 63 1 287 1 13 1 47 2 188 1 89 2 210 1 236 1 215 1 240 1 117 1 144 1 266 2 195 2 
123 1 251 1 331 1 201 1 54 1 127 1 359 1 360 1 5 1 364 1 131 1 42 1 340 1 43 3 205 2 83 2 228 1 133 1 46 1 287 1 318 1 89 1 236 1 95 1 217 1 117 1 266 1 218 1 195 1 
356 1 251 1 331 1 201 1 89 1 127 1 359 1 360 1 364 2 95 1 217 1 43 2 205 2 144 1 257 1 266 1 133 1 195 1 
318 1 251 1 331 1 201 1 89 1 360 1 237 1 131 1 42 1 95 1 217 1 43 2 205 2 144 1 83 2 266 1 133 1 195 1 
356 1 318 1 251 2 331 1 201 2 54 1 89 1 127 1 359 1 360 1 364 2 131 1 42 1 95 2 217 2 43 4 205 2 83 2 144 1 266 1 133 1 195 1 
356 1 251 1 331 1 201 1 89 1 127 1 359 1 360 1 364 2 57 1 95 1 217 1 43 2 205 2 257 1 266 1 133 1 195 1 
318 1 251 1 331 1 201 1 89 1 360 1 237 1 57 1 131 1 42 1 95 1 217 1 43 2 205 2 83 2 266 1 133 1 195 1 
356 1 318 1 251 2 331 1 201 2 54 1 89 1 127 1 359 1 360 1 364 2 57 1 131 1 42 1 95 2 217 2 43 4 205 2 83 2 266 1 133 1 195 1 
356 1 318 1 251 2 331 1 201 2 54 1 89 1 127 1 359 1 360 1 364 2 131 1 42 1 95 2 217 2 43 4 205 2 83 2 266 1 133 1 195 1 
331 1 253 1 360 1 273 1 276 1 364 1 336 1 41 1 43 2 10 1 340 1 205 2 83 1 105 1 106 1 107 1 133 1 230 1 208 1 209 1 13 1 185 1 89 1 236 1 262 1 266 1 382 1 195 1 
331 1 360 1 273 1 276 1 364 1 336 1 41 1 58 1 43 2 10 1 340 1 205 2 83 1 105 1 106 1 107 1 133 1 230 1 208 1 209 1 13 1 347 1 89 1 236 1 266 1 382 1 146 1 195 1 
356 1 318 1 251 2 331 1 201 2 54 1 89 1 127 1 359 1 360 1 364 2 131 1 42 1 95 2 217 2 43 4 205 2 83 2 266 1 133 1 218 1 195 1 
356 1 251 2 331 1 201 2 54 1 127 1 359 1 253 1 360 1 273 1 364 2 336 1 41 1 131 1 42 1 79 1 43 4 10 1 340 1 205 2 83 2 105 1 107 1 133 1 230 1 208 1 209 1 371 1 318 1 185 1 89 1 236 1 95 2 217 2 262 1 266 1 195 1 
356 1 123 1 331 1 251 1 201 1 54 1 127 1 359 1 360 1 364 2 42 1 340 1 43 3 205 2 83 1 228 1 133 1 160 1 46 1 318 1 287 1 89 1 236 1 217 1 95 1 117 1 266 1 218 1 195 1 
356 3 18 1 331 2 2 1 54 3 201 6 127 3 359 3 360 2 78 1 364 9 131 3 42 3 43 19 175 1 205 4 343 2 83 10 133 2 179 2 283 1 180 1 11 1 318 3 30 2 89 2 214 1 265 1 268 1 245 1 
356 2 18 1 38 1 199 1 331 3 201 4 2 2 54 3 127 3 359 3 360 3 78 2 277 1 364 14 309 1 131 2 42 2 43 26 175 2 226 1 205 6 83 12 343 4 133 3 179 2 283 1 180 2 11 1 318 2 30 1 89 3 373 2 214 1 216 1 
356 4 18 1 38 1 221 1 199 1 331 3 2 3 54 4 201 8 127 5 359 4 360 3 40 1 78 1 277 1 364 20 56 1 309 1 131 4 42 4 43 41 175 3 226 1 205 6 343 4 83 21 84 1 133 3 179 4 283 1 180 2 11 1 318 5 88 1 30 1 89 3 294 1 373 1 214 1 296 1 216 1 268 1 245 1 
356 3 18 1 38 1 221 1 199 1 331 4 2 3 54 4 201 7 127 5 359 4 360 4 40 1 78 1 277 1 364 20 56 1 309 1 131 4 42 3 43 38 175 3 226 1 205 8 343 4 83 18 84 1 133 4 179 4 283 1 180 2 11 1 318 4 88 1 30 1 89 4 294 1 373 2 214 1 296 1 216 1 268 1 245 1 
356 7 18 1 38 1 221 1 199 1 331 2 2 4 54 7 201 14 127 8 359 7 360 2 78 1 277 1 364 27 56 1 309 1 131 7 42 7 43 52 175 2 226 1 205 4 343 4 83 25 84 1 133 2 179 4 283 1 180 1 11 1 318 8 233 2 88 1 30 1 89 2 294 1 373 1 214 1 296 1 216 1 245 2 
285 1 339 1 243 1 263 1 223 1 104 1 352 1 344 1 71 1 72 1 
258 1 186 1 
285 1 339 1 263 1 161 1 187 1 223 1 104 1 72 1 159 1 
285 1 183 1 223 1 90 1 65 1 334 1 339 1 239 1 366 2 243 1 263 1 299 1 104 1 352 1 344 1 192 1 72 1 345 1 
285 1 183 1 223 1 90 1 65 1 334 1 339 1 239 1 366 2 243 1 263 1 299 1 104 1 352 1 344 1 192 1 72 1 345 1 
285 1 183 1 223 1 90 1 65 1 334 1 339 1 239 1 366 2 243 1 263 1 299 1 104 1 352 1 344 1 192 1 72 1 345 1 
140 1 244 1 16 1 
140 1 244 1 16 1 
249 1 68 1 
249 1 140 1 68 1 
96 1 129 1 
51 1 123 2 223 1 125 1 334 1 129 1 275 1 339 1 340 2 366 1 104 1 178 1 345 1 258 1 285 1 287 2 186 1 90 1 259 1 236 2 239 1 117 2 263 1 96 1 72 1 246 1 382 1 
244 1 16 1 
249 1 140 1 68 1 
250 1 123 2 331 1 3 1 360 1 273 1 364 1 41 2 10 1 340 2 43 2 132 1 205 2 83 1 105 2 25 1 106 1 133 1 230 1 208 2 209 1 111 1 63 1 13 1 47 2 89 1 48 1 236 2 266 1 218 1 195 1 
248 1 290 1 252 1 20 1 163 1 137 1 191 1 41 2 79 1 10 1 342 2 59 1 105 2 377 1 378 1 36 1 381 1 230 1 208 2 
248 1 290 1 252 1 20 1 163 1 137 1 191 1 41 1 10 1 342 2 59 1 367 1 105 1 36 1 381 1 230 1 208 1 
209 1 188 1 252 1 291 1 210 1 273 1 276 1 41 1 10 1 279 1 105 1 377 1 230 1 208 1 
248 1 290 1 252 1 20 1 163 1 137 1 191 1 41 1 10 1 342 2 59 1 105 1 377 1 378 1 36 1 381 1 230 1 208 1 
190 1 
17 1 196 1 286 1 280 1 70 1 192 1 194 1 
17 1 196 1 27 1 113 1 90 1 4 1 31 1 203 1 239 1 280 1 143 1 192 2 313 1 158 1 61 1 145 1 229 1 
37 2 168 6 1 2 127 2 4 4 273 10 77 1 172 2 276 1 337 2 336 3 41 3 79 1 42 2 10 4 280 9 45 1 230 3 229 4 346 2 289 2 14 2 90 5 235 2 139 2 295 1 239 5 143 6 192 8 15 2 194 1 17 8 196 2 54 2 55 1 101 3 359 2 363 2 256 2 313 4 105 3 61 4 158 3 208 3 209 3 26 1 318 2 28 1 113 12 31 5 374 6 118 2 70 1 121 1 
168 5 17 5 38 1 196 2 199 1 2 1 54 2 127 2 55 1 4 2 359 2 277 1 337 2 309 1 225 1 42 2 175 1 280 8 313 2 158 1 61 2 179 1 229 2 318 2 289 1 113 6 90 1 31 1 374 5 94 1 216 1 239 1 143 3 192 5 15 1 
17 2 198 1 123 1 272 1 127 2 4 1 337 2 56 1 340 1 280 2 313 1 61 1 228 1 229 1 110 1 318 1 287 1 289 1 88 1 90 1 236 1 294 1 375 1 239 1 117 1 119 1 120 1 167 1 
17 1 196 1 4 1 70 1 280 1 192 1 313 1 61 1 194 1 229 1 
168 5 17 5 318 2 289 1 113 10 54 2 127 2 359 2 235 1 374 5 337 2 42 2 280 5 143 5 192 5 
196 1 239 1 192 1 90 1 158 1 31 1 
17 2 304 1 332 1 4 2 55 2 273 1 151 1 77 1 6 1 276 2 41 4 10 1 280 2 313 2 105 4 61 2 158 2 45 2 230 1 229 1 208 4 209 1 188 1 90 3 210 1 31 4 323 1 239 3 15 2 
123 2 331 1 360 1 253 1 273 1 276 1 41 1 336 1 43 1 340 3 10 1 205 2 83 1 106 1 105 1 228 2 107 1 133 1 230 1 208 1 209 1 287 2 185 1 372 1 89 1 236 3 262 1 117 2 266 1 382 1 167 1 195 1 
168 2 17 2 196 2 113 4 4 1 55 1 374 2 296 1 280 1 143 2 192 4 313 1 61 1 15 1 229 1 
285 1 339 1 368 1 
285 1 339 1 368 1 
285 1 220 1 339 1 352 1 129 1 
285 1 339 1 368 1 
285 1 339 1 80 1 
285 1 339 1 80 1 
285 1 339 1 80 1 
285 1 339 1 
223 1 72 1 
356 1 318 1 221 1 331 2 201 3 88 1 127 1 89 2 360 2 294 1 373 1 364 4 56 1 296 1 131 2 43 8 205 4 83 4 84 1 133 2 
286 1 221 1 318 1 88 1 201 2 127 1 294 1 364 3 56 1 296 1 131 2 43 6 83 3 84 1 
356 1 318 1 331 1 201 2 54 1 89 1 127 1 359 1 360 1 260 1 364 2 131 1 42 1 43 4 205 2 83 2 133 1 
356 1 318 1 2 1 54 1 201 2 127 1 359 1 364 3 131 1 42 1 43 7 175 1 83 4 245 1 179 2 
356 4 221 1 331 2 201 9 54 2 2 2 127 3 359 2 360 2 274 1 364 11 56 2 42 2 131 5 43 23 205 4 83 12 84 1 133 2 179 2 318 3 233 1 88 2 89 2 294 1 373 2 296 1 325 1 245 1 
43 1 83 1 179 1 
364 1 43 1 2 1 
356 1 318 1 331 1 54 1 201 3 89 1 127 1 359 1 360 1 235 1 260 1 364 3 42 1 131 2 43 6 205 2 83 3 133 1 
356 1 38 1 199 1 331 1 2 1 54 2 201 2 127 2 359 2 360 1 364 6 277 1 309 1 42 2 131 1 43 12 175 1 205 2 83 6 133 1 179 1 11 1 318 2 89 1 216 1 
356 1 318 1 88 1 201 2 127 1 294 1 364 3 56 1 131 1 43 6 83 3 
356 1 221 1 331 1 201 2 88 1 89 1 360 1 373 1 364 1 56 1 131 1 43 3 325 1 205 2 83 2 84 1 133 1 
356 2 318 2 331 1 88 2 201 5 89 1 127 2 360 1 294 1 364 5 56 2 131 3 43 10 205 2 83 5 119 1 133 1 11 1 
356 1 331 1 201 1 89 1 127 1 359 1 360 1 364 2 43 2 205 2 133 1 11 1 
356 1 318 1 331 1 201 2 54 1 89 1 127 1 359 1 360 1 364 2 131 1 42 1 43 4 205 2 83 2 133 1 11 1 
356 1 331 3 88 1 201 2 89 3 360 3 373 1 364 1 56 1 131 1 43 3 325 1 205 6 83 2 268 1 133 3 11 1 
73 1 356 5 221 1 331 5 2 3 54 3 201 12 127 5 359 3 360 5 364 16 56 3 9 1 42 3 131 7 43 34 175 1 205 10 83 18 84 1 133 5 179 4 11 1 182 1 318 5 88 3 89 5 294 2 260 1 373 2 296 1 325 1 268 1 245 1 
38 1 221 1 331 1 2 1 201 2 127 1 360 1 364 4 56 1 131 2 43 8 175 1 205 2 83 4 84 1 133 1 179 1 11 1 318 1 88 1 89 1 294 1 296 1 
356 1 38 1 221 1 331 2 2 1 54 1 201 3 127 2 359 1 360 2 364 6 56 1 131 2 43 11 175 1 205 4 83 5 84 1 133 2 179 2 11 1 318 1 88 1 89 2 294 1 260 1 296 1 245 1 
356 1 38 1 221 1 199 1 331 3 2 1 54 2 201 4 127 3 359 2 360 3 277 1 364 9 56 1 309 1 42 2 131 3 43 19 175 1 205 6 83 10 84 1 133 3 179 1 11 1 318 3 88 1 89 3 294 1 260 1 373 1 296 1 216 1 
356 2 38 1 221 1 199 1 331 3 2 1 54 2 201 5 127 3 359 2 360 3 364 10 277 1 56 1 309 1 42 1 131 3 43 17 175 1 205 6 83 7 84 1 133 3 179 1 11 1 318 2 88 1 89 3 294 1 260 1 373 1 296 1 216 1 
38 1 221 1 331 1 2 1 201 2 127 1 360 1 364 4 56 1 131 2 43 8 175 1 205 2 83 4 84 1 133 1 179 1 11 1 318 1 88 1 89 1 294 1 296 1 
356 1 38 1 199 1 331 1 2 1 54 2 201 2 127 2 359 2 360 1 364 6 277 1 309 1 42 2 131 1 43 12 175 1 205 2 83 6 133 1 179 1 11 1 318 2 89 1 216 1 
356 2 38 1 221 1 199 1 331 4 2 1 54 2 201 5 127 3 359 2 360 4 277 1 364 10 56 1 309 1 42 1 131 3 43 18 175 1 205 8 83 8 84 1 133 4 179 1 11 1 318 2 88 1 89 4 294 1 260 1 373 2 296 1 216 1 
356 3 38 1 199 1 331 4 2 1 54 3 201 6 127 3 359 3 360 4 277 1 364 9 309 1 42 2 131 3 43 16 175 1 205 8 83 7 133 4 179 1 11 1 318 2 89 4 373 2 216 1 268 1 
356 3 318 1 221 1 88 3 201 6 127 1 294 1 364 3 56 3 131 3 43 7 83 4 84 2 
356 1 38 1 221 1 199 1 331 4 2 1 54 2 201 4 127 3 359 2 360 4 277 1 364 10 56 1 309 1 42 1 131 3 43 18 175 1 205 8 83 8 84 1 133 4 179 1 11 1 318 2 88 1 89 4 294 1 373 2 296 1 216 1 268 1 
308 1 52 1 340 1 123 1 189 1 382 1 236 1 
231 1 169 1 52 1 123 1 189 1 236 1 308 1 34 1 340 1 282 1 382 1 99 1 
209 1 41 1 286 1 10 1 188 1 210 1 105 1 273 1 230 1 208 1 276 1 
209 1 287 1 123 1 185 1 273 1 236 2 276 1 336 1 41 1 10 1 340 2 117 1 105 1 107 1 369 1 382 1 230 1 208 1 
271 1 123 2 124 1 273 3 41 1 336 2 340 2 10 1 105 1 107 1 369 1 230 1 45 1 208 1 209 2 287 2 185 1 14 1 236 2 375 1 117 1 118 1 382 1 
271 1 123 2 124 1 273 3 41 2 336 2 340 2 10 1 105 2 107 1 369 1 230 1 45 1 208 2 209 2 287 2 14 1 136 1 236 2 375 1 117 1 118 1 382 1 146 1 
209 1 37 1 196 1 1 1 14 1 90 2 101 1 136 1 273 4 31 1 276 1 336 1 41 3 130 1 239 2 10 1 118 1 192 1 105 3 45 1 230 1 62 1 208 3 
209 1 37 1 196 1 346 1 1 1 14 1 90 2 101 1 136 1 273 4 31 1 276 1 336 1 41 3 239 2 10 1 118 1 192 1 105 3 45 1 230 1 208 3 
41 1 10 1 240 1 105 1 230 1 208 1 
209 2 328 1 47 1 20 1 39 1 273 3 23 1 276 2 41 6 336 1 153 1 215 1 79 1 240 1 311 1 10 3 132 1 105 7 121 1 230 2 208 7 
221 1 123 1 331 2 127 1 273 1 41 1 336 1 79 1 131 2 340 2 10 1 43 6 83 3 84 1 133 2 230 1 287 1 185 1 88 1 89 2 236 2 294 1 296 1 95 1 50 1 195 2 250 1 251 1 201 2 253 1 360 2 364 3 56 1 205 4 105 1 107 1 369 1 208 1 209 1 371 1 318 1 262 1 217 1 117 1 266 2 382 2 218 1 
37 1 17 1 196 1 1 1 4 2 101 1 273 2 77 1 276 1 172 1 41 1 363 1 280 1 313 2 105 1 61 2 158 1 229 2 208 1 346 1 90 3 31 2 139 1 239 3 70 1 192 1 194 1 246 1 
37 1 209 1 273 2 41 2 336 1 295 1 79 1 240 1 10 2 105 2 121 1 230 1 208 2 
209 1 188 1 210 1 361 1 136 1 273 1 276 1 41 4 79 1 10 1 105 4 230 1 208 4 
209 1 328 1 333 1 171 1 22 1 273 1 23 1 41 2 336 1 10 2 105 2 45 1 230 1 208 2 
248 1 41 1 10 1 342 1 105 1 381 1 137 1 230 1 208 1 276 1 
209 1 111 1 20 1 273 1 41 2 79 1 10 1 132 1 105 2 230 1 208 2 
209 2 188 1 210 1 39 1 361 1 273 3 276 1 41 4 79 1 215 1 10 2 132 1 105 5 45 1 230 2 208 5 
209 2 188 1 210 1 361 1 273 3 276 1 41 4 322 1 79 1 215 1 10 2 132 1 105 5 45 1 230 2 208 5 
209 1 287 1 123 1 273 1 236 2 276 1 336 1 41 1 10 1 340 2 117 1 105 1 107 1 369 1 382 1 230 1 146 1 208 1 
209 1 328 1 273 1 23 1 41 1 336 1 153 1 10 2 105 1 121 1 45 1 230 1 208 1 
123 1 3 1 48 1 150 1 236 1 365 1 340 1 353 1 25 1 
365 1 330 1 193 1 
365 1 64 1 353 1 150 1 382 1 
196 1 357 1 271 1 1 1 330 1 64 2 305 1 124 1 90 2 150 2 375 1 239 2 365 1 69 1 192 1 193 1 353 2 246 1 382 1 
286 1 329 1 126 1 91 1 
174 1 329 1 126 1 66 1 202 1 91 1 301 1 
174 1 149 1 122 1 
329 1 100 2 126 1 202 1 66 3 91 1 213 1 92 1 174 3 341 1 301 1 355 1 
204 1 174 2 329 1 312 1 126 1 66 2 202 1 91 1 301 1 
329 1 290 1 202 1 66 1 213 1 137 1 174 1 81 1 342 1 316 1 301 1 
174 1 329 1 66 1 202 1 91 1 301 1 213 1 
174 1 126 1 66 1 202 1 91 2 301 1 213 1 
329 1 202 2 66 2 91 1 213 1 174 2 156 1 379 1 85 1 301 2 
219 1 329 2 126 1 202 1 66 3 91 1 254 1 213 1 174 3 312 2 267 1 316 1 301 1 
329 1 290 1 147 1 126 1 202 1 66 2 91 1 163 1 213 1 137 1 174 2 342 2 312 1 381 1 301 1 
219 1 329 2 126 1 202 2 66 4 67 1 91 1 213 1 174 4 204 1 312 2 316 1 301 2 
174 1 329 1 126 1 66 1 202 1 91 1 301 1 213 1 
219 1 329 3 100 1 126 2 66 4 202 1 91 2 92 1 174 4 341 1 241 1 312 2 316 1 301 1 
317 1 329 1 87 1 126 1 202 1 66 2 91 1 213 1 174 2 116 1 312 1 301 1 
329 1 100 2 126 1 202 1 66 3 91 1 213 1 92 2 174 3 341 1 35 1 301 1 
348 1 329 2 319 1 142 2 
303 1 174 1 66 1 202 1 301 1 213 1 
174 2 329 1 312 1 126 1 66 2 202 1 91 1 254 1 301 1 213 1 
170 1 
174 1 329 1 126 1 66 1 202 1 91 1 301 1 213 1 
174 3 329 1 100 1 312 1 126 1 66 3 202 1 254 1 91 1 301 1 213 1 
219 1 329 1 241 1 316 1 
329 1 91 1 

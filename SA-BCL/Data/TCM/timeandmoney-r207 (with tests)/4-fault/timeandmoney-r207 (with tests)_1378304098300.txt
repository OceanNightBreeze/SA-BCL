#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V ERROR java.lang.NullPointerException (76,354) 67 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (76,354) 67 171 348 (76,354) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 38 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (76,354) 67 350 208 207 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (76,354) 67 1 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException (76,354) 67 171 358 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException (76,354) 67 269 274 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException (76,354) 67 171 348 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException (76,354) 67 269 358 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException (76,354) 67 269 274 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException (76,354) 67 171 348 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException (76,354) 67 269 358 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException (76,354) 67 269 358 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException (76,354) 67 269 358 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (76,354) 67 269 358 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException (76,354) 67 269 358 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (76,354) 67 89 (77,342) (77,342) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | ASSIGN | 4718 | = null
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 5921 | stmt -> ;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4918 | > -> <
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
223 1 0 2 104 9 199 2 312 1 360 5 362 1 107 9 18 1 46 2 258 2 75 1 210 1 345 1 368 2 369 3 261 1 9 1 330 1 241 1 118 1 268 4 332 6 12 2 161 1 221 1 378 1 34 2 
223 1 0 2 104 9 199 2 312 1 360 5 362 1 107 9 18 1 46 2 258 2 75 1 210 1 345 1 368 2 369 3 261 1 9 1 330 1 241 1 118 1 268 4 332 6 12 2 161 1 221 1 378 1 34 2 
223 1 0 2 104 10 199 2 312 1 360 6 362 1 107 10 18 1 46 2 258 2 75 1 210 1 345 1 368 2 369 4 261 1 9 1 330 1 241 1 118 1 268 5 332 7 12 2 161 1 221 1 378 1 34 2 
223 1 0 2 104 7 199 2 312 1 360 4 362 1 107 7 18 1 46 1 258 2 75 1 210 1 345 1 368 2 369 2 261 1 9 1 330 1 241 1 268 3 332 4 12 2 161 1 221 1 378 1 34 2 
18 1 46 2 258 1 0 1 75 1 199 1 104 4 369 1 368 1 241 1 9 1 360 3 118 1 332 3 268 2 107 4 378 1 34 1 
18 1 258 1 0 1 75 1 199 1 104 2 312 1 360 1 2 1 30 1 41 1 107 2 12 1 378 1 221 1 34 1 
18 1 75 1 199 2 104 3 369 1 360 2 268 1 332 1 107 3 161 1 12 1 378 1 34 2 
0 1 104 9 199 2 360 5 63 1 107 9 18 1 322 1 46 2 258 1 75 1 210 1 369 3 368 1 261 1 241 1 9 1 118 1 268 4 332 7 12 1 161 1 378 1 34 2 
0 1 104 9 199 2 360 5 63 1 107 9 18 1 322 1 46 2 258 1 75 1 210 1 369 3 368 1 261 1 241 1 9 1 118 1 268 4 332 7 12 1 161 1 378 1 34 2 
83 1 38 1 201 1 
185 1 81 2 201 1 
187 1 71 2 47 2 149 2 169 1 4 2 363 2 297 2 
165 1 143 1 146 1 169 1 313 2 88 1 279 1 204 1 149 2 285 1 361 1 4 3 363 2 254 1 5 1 367 1 323 1 71 2 47 3 158 2 324 1 6 1 48 1 181 1 297 2 240 1 186 2 79 1 187 1 266 1 28 2 371 1 299 1 349 1 139 2 188 1 243 1 
338 1 71 1 47 1 149 1 295 1 169 1 4 1 363 1 297 1 365 1 
83 1 156 1 71 1 47 1 344 1 201 1 27 1 184 1 119 1 4 1 68 1 353 1 355 1 365 1 
83 1 156 1 71 1 47 1 344 2 201 1 297 1 184 2 27 1 119 1 149 1 363 1 4 1 68 1 365 1 
184 1 222 1 344 1 253 1 70 1 
184 2 83 1 222 1 45 1 344 2 253 1 87 1 201 1 
184 1 222 1 344 1 
71 1 47 1 295 1 344 1 94 1 169 1 297 1 184 1 338 1 149 1 253 1 363 1 4 1 365 1 
201 1 
184 2 83 1 222 1 344 2 52 1 253 1 87 1 201 1 
83 1 92 1 273 2 222 2 57 1 196 1 344 5 177 2 328 1 87 1 201 1 14 2 115 1 314 1 184 5 250 1 152 1 253 2 43 1 
367 1 165 1 71 1 47 2 158 1 48 1 181 1 228 1 313 1 279 1 186 1 149 1 266 1 188 1 190 1 363 1 4 2 254 1 243 1 354 1 
187 1 38 1 
71 2 47 2 297 1 231 1 187 2 149 1 4 2 363 1 340 1 
67 1 354 1 
367 1 165 1 47 1 158 1 48 1 313 1 181 1 279 1 186 1 187 1 266 1 188 1 4 1 154 1 254 1 243 1 
231 1 187 1 71 5 47 5 149 4 50 1 22 1 190 1 4 5 363 4 270 1 228 2 297 1 355 1 
71 2 47 2 149 2 295 1 4 2 363 2 182 1 365 1 
187 1 71 3 47 3 149 3 4 3 363 3 228 1 297 1 
71 1 47 1 149 1 295 1 4 1 363 1 365 1 
231 1 71 1 47 1 149 1 4 1 363 1 340 1 297 1 365 1 
165 1 143 1 146 1 169 1 88 1 246 1 228 1 313 1 279 1 231 1 149 3 285 1 68 1 4 4 363 3 254 1 5 1 365 1 367 1 156 1 71 3 47 4 158 1 344 1 324 1 6 1 48 1 96 1 181 1 297 2 240 1 27 1 184 1 186 1 187 1 119 1 266 1 28 2 371 1 349 1 139 1 188 1 190 1 243 1 
187 1 71 2 47 2 149 1 22 1 4 2 363 1 228 1 355 1 
156 1 71 3 47 3 344 1 60 1 96 1 201 1 228 2 297 1 231 1 184 1 27 1 119 1 149 3 190 1 363 3 4 3 68 1 365 1 
231 1 71 2 47 2 149 2 114 1 4 2 363 2 228 1 297 1 354 1 
367 1 165 1 47 1 158 1 48 1 313 1 181 1 279 1 186 1 187 1 266 1 188 1 4 1 254 1 243 1 
165 1 47 1 158 1 48 1 313 1 181 1 186 1 187 1 266 1 188 1 206 1 4 1 375 1 254 1 243 1 
58 1 324 1 6 1 143 1 146 1 76 1 371 1 28 2 348 1 349 1 171 1 139 2 67 1 354 1 5 2 256 1 
156 1 71 1 47 1 149 1 4 1 363 1 182 1 365 1 
366 1 212 1 
366 1 212 1 
364 1 26 1 
364 1 26 1 
364 1 26 1 
366 1 153 1 212 1 
366 1 153 1 212 1 
366 1 212 1 296 1 
366 2 316 1 16 1 212 2 364 1 26 1 
366 1 153 1 212 1 
366 1 189 1 212 1 
366 1 189 1 212 1 
366 1 189 1 212 1 
359 1 335 1 230 1 281 1 149 2 339 1 286 1 363 2 4 2 366 1 71 2 47 2 344 1 73 1 159 1 212 1 327 1 296 1 184 1 187 1 267 1 217 1 54 1 303 1 
366 2 123 1 344 2 73 3 227 1 159 1 359 2 95 1 212 2 201 1 247 1 184 2 232 1 339 2 252 1 42 2 16 1 54 2 303 2 
368 1 258 1 0 1 
2 1 258 1 0 1 
91 1 368 2 242 1 2 1 84 1 0 3 
91 1 368 1 292 1 2 1 84 1 0 2 
368 1 91 2 2 1 84 1 0 2 
83 1 273 1 222 1 58 1 358 1 87 1 201 2 202 1 14 1 280 2 314 3 230 1 250 2 171 1 286 1 320 1 253 4 234 1 43 1 341 1 293 1 177 1 344 5 237 1 327 1 184 5 78 1 185 1 81 3 269 1 162 2 356 2 
83 1 222 6 273 2 224 1 37 1 58 3 358 3 59 1 87 1 201 5 202 2 14 2 280 6 230 4 314 8 152 1 250 6 171 3 253 7 43 1 70 5 129 1 293 3 344 9 177 2 237 2 184 9 78 1 185 3 117 5 81 9 121 1 269 3 162 6 101 1 
83 1 273 1 58 1 358 1 201 3 202 1 14 1 314 3 230 1 280 2 152 1 250 2 171 1 253 2 234 1 341 1 293 1 177 1 344 3 237 1 184 3 185 2 81 4 269 1 162 2 356 1 
83 1 273 1 37 1 58 2 358 2 59 1 201 4 202 1 14 1 280 4 314 5 230 2 152 1 250 4 171 2 234 1 253 3 341 1 293 2 177 1 344 4 237 1 184 4 185 3 81 7 121 1 269 2 162 4 356 2 
8 1 48 1 38 1 
48 1 213 1 
226 1 
165 1 48 1 181 1 
191 1 48 1 
165 1 48 1 
8 2 194 1 165 1 48 3 181 1 219 1 
343 1 342 1 307 1 323 2 293 1 333 1 58 1 147 1 77 1 89 2 135 3 139 5 65 1 106 1 271 1 255 4 5 3 
342 1 343 1 307 1 323 2 293 1 333 1 58 1 77 1 147 1 89 2 135 3 65 1 139 6 106 1 271 1 255 4 5 4 
343 1 342 1 307 1 323 2 293 1 333 1 58 1 77 1 147 1 89 2 135 3 139 5 65 1 106 1 271 1 13 1 255 4 5 3 
307 2 195 1 333 2 358 2 58 5 143 1 146 1 147 1 278 1 89 3 171 2 65 3 172 3 106 5 255 13 5 19 155 1 342 1 343 2 323 16 293 5 77 1 132 1 99 1 135 8 28 2 29 1 371 1 349 1 350 3 139 35 269 2 82 1 271 3 
307 1 333 1 58 1 143 2 146 2 89 2 65 1 106 1 255 5 5 5 343 1 342 1 323 3 293 1 97 1 132 1 77 1 183 1 135 4 28 4 371 2 349 2 139 8 271 1 
0 2 104 2 199 1 334 1 125 1 313 1 360 1 2 1 251 1 107 2 18 1 128 1 20 1 258 1 158 1 72 1 75 1 180 1 24 1 368 1 186 1 242 1 300 1 332 1 374 1 188 1 12 1 378 1 243 1 34 1 
0 2 104 3 199 1 125 1 313 1 360 1 283 1 2 1 251 1 107 3 18 1 128 1 20 1 258 1 158 1 72 1 75 1 23 1 180 1 368 1 242 1 186 1 134 1 300 1 332 2 374 1 188 1 12 1 243 1 34 1 
0 2 104 2 125 1 313 1 360 1 2 1 251 1 107 2 18 1 128 1 158 1 72 1 258 1 75 1 23 1 180 1 368 1 186 1 242 1 134 1 300 1 332 2 188 1 12 1 243 1 
165 1 166 1 124 1 104 1 199 1 313 1 125 2 283 1 107 1 289 1 321 1 174 1 157 1 158 1 180 2 48 1 186 1 266 1 300 2 188 1 12 2 243 1 34 1 
0 2 104 1 199 1 334 1 125 1 313 1 2 1 251 1 107 1 128 1 20 1 258 1 158 1 72 1 23 1 180 1 368 1 186 1 242 1 300 1 374 1 188 1 12 1 378 1 243 1 34 1 
304 1 
83 1 164 2 222 6 273 1 165 1 166 1 85 1 87 3 4 1 288 2 289 1 43 1 236 4 47 1 178 2 344 5 177 1 179 2 48 1 131 1 98 2 184 5 185 2 186 2 188 1 353 1 243 1 355 1 141 1 55 1 245 1 145 1 144 1 201 2 202 1 313 2 14 1 314 2 250 2 68 1 365 1 156 1 71 1 158 2 113 1 27 1 215 2 264 2 119 1 266 2 120 1 373 1 81 2 32 1 377 1 
55 1 222 2 156 1 71 1 47 1 344 3 85 1 245 1 145 1 87 1 131 1 27 1 184 3 119 1 52 1 4 1 68 1 288 1 353 1 236 2 365 1 355 1 
55 1 83 1 222 1 164 1 85 1 245 1 145 1 87 1 201 1 68 1 4 1 365 1 236 3 156 1 71 1 47 1 344 3 131 1 184 3 27 1 119 1 52 1 353 1 355 1 
55 1 83 1 222 2 164 1 85 1 245 1 145 1 87 1 201 1 68 1 4 1 288 1 365 1 236 3 156 1 71 1 47 1 344 3 131 1 184 3 27 1 215 1 119 1 52 1 353 1 355 1 
55 1 83 5 273 1 164 4 222 7 85 1 245 1 198 1 145 1 87 3 275 1 201 5 14 1 314 1 250 1 319 1 4 1 68 1 43 1 288 4 365 1 236 6 19 1 156 1 71 1 47 1 178 2 177 1 344 5 179 2 131 1 98 2 184 5 27 1 185 2 262 1 215 4 264 2 119 1 120 1 52 1 353 1 141 1 355 1 
83 1 273 1 222 4 164 2 85 1 87 2 4 1 43 1 288 2 236 4 47 1 344 4 177 1 178 2 179 2 131 1 98 2 184 4 185 2 353 1 141 1 355 1 55 1 245 1 145 1 201 2 14 1 314 1 250 1 68 1 365 1 156 1 71 1 113 1 27 1 215 2 119 1 264 2 120 1 81 2 
55 1 83 1 164 2 222 4 273 1 85 1 245 1 145 1 198 1 87 2 201 1 14 1 314 1 250 1 319 1 68 1 4 1 288 2 43 1 365 1 236 4 19 1 156 1 71 1 47 1 178 2 344 4 177 1 179 2 131 1 98 2 184 4 27 1 215 2 185 2 264 2 119 1 120 1 353 1 141 1 355 1 
55 1 83 1 164 2 222 4 273 1 85 1 245 1 145 1 198 1 87 2 201 1 14 1 314 1 250 1 319 1 68 1 4 1 288 2 43 1 365 1 236 4 19 1 156 1 71 1 47 1 178 2 344 4 177 1 179 2 131 1 98 2 184 4 27 1 215 2 185 2 264 2 119 1 120 1 353 1 141 1 355 1 
55 1 83 1 272 1 164 2 222 4 273 1 310 1 85 1 245 1 145 1 87 2 201 1 14 1 337 2 314 1 250 1 68 1 4 1 288 2 43 1 365 1 236 4 19 1 156 1 71 1 47 1 344 4 177 1 179 2 131 1 184 4 27 1 215 2 264 2 119 1 120 1 81 2 137 1 53 2 353 1 355 1 
55 1 83 1 273 1 222 5 164 3 85 1 245 1 198 1 145 1 87 2 201 1 275 1 14 1 314 1 250 1 319 1 68 1 4 1 43 1 288 3 365 1 236 5 19 1 156 1 71 1 47 1 178 2 177 1 344 4 179 2 131 1 98 2 184 4 27 1 185 2 215 3 264 2 119 1 120 1 353 1 141 1 355 1 
55 1 83 1 273 1 222 5 164 3 85 1 245 1 198 1 145 1 87 2 201 1 275 1 14 1 314 1 250 1 319 1 68 1 4 1 43 1 288 3 365 1 236 5 19 1 156 1 71 1 47 1 178 2 177 1 344 4 179 2 131 1 98 2 184 4 27 1 185 2 215 3 264 2 119 1 120 1 353 1 141 1 355 1 
272 1 83 1 273 1 222 4 164 2 85 1 87 2 337 2 4 1 43 1 288 2 236 4 47 1 344 4 177 1 179 2 131 1 184 4 53 2 353 1 355 1 55 1 245 1 145 1 201 1 14 1 314 1 250 1 68 1 365 1 156 1 71 1 113 1 27 1 215 2 119 1 264 2 120 1 81 2 
307 1 58 1 143 1 146 1 38 1 89 1 65 1 67 1 255 2 256 1 5 3 342 1 323 2 293 1 324 1 6 1 77 1 135 2 187 1 28 2 371 1 349 1 139 5 271 1 354 1 
197 1 324 1 6 1 143 1 146 1 371 1 28 2 349 1 350 1 139 1 67 1 207 1 208 1 354 1 5 1 
165 1 197 1 143 1 146 1 313 1 228 1 279 1 149 1 4 2 363 1 254 1 154 1 5 1 367 1 71 1 323 1 158 1 47 2 324 1 6 1 114 1 48 1 181 1 329 1 240 1 186 1 187 1 79 1 266 1 136 1 371 1 28 2 349 1 188 1 139 2 190 1 376 1 243 1 
35 1 165 1 122 1 197 1 143 2 146 2 1 1 88 1 228 1 313 1 279 1 149 1 67 1 4 2 363 1 254 1 5 2 367 1 71 1 47 2 158 1 324 2 6 2 48 1 181 1 240 1 186 1 266 1 371 2 28 4 349 2 188 1 139 2 190 1 243 1 33 1 193 1 354 1 
165 2 166 1 143 2 146 2 200 1 228 1 313 8 248 1 204 2 149 1 4 1 363 1 290 1 289 1 175 1 256 1 5 1 71 1 323 1 47 1 158 8 294 1 324 2 23 1 6 2 24 1 48 3 240 1 186 7 79 1 266 2 28 4 371 2 349 2 138 1 188 2 139 2 218 1 243 2 
197 1 358 1 58 1 143 1 146 1 231 1 149 1 171 1 67 1 363 1 4 1 5 2 71 1 323 1 130 1 47 1 293 1 324 1 6 1 297 1 28 2 371 1 349 1 269 1 139 3 354 1 
323 2 293 1 324 1 6 1 143 1 146 1 274 1 371 1 28 2 349 1 139 2 269 1 67 1 354 1 256 1 
58 1 324 1 6 1 143 1 146 1 371 1 28 2 348 1 349 1 171 1 139 2 67 1 354 1 256 1 5 2 
323 2 293 1 358 1 324 1 6 1 143 1 146 1 371 1 28 2 349 1 139 2 269 1 67 1 354 1 256 1 
323 2 294 1 293 1 324 1 6 1 143 1 146 1 274 1 371 1 28 2 349 1 139 2 269 1 67 1 354 1 
294 1 58 1 324 1 6 1 143 1 146 1 371 1 28 2 348 1 349 1 171 1 139 2 67 1 354 1 5 2 
323 2 294 1 293 1 358 1 324 1 6 1 143 1 146 1 371 1 28 2 349 1 139 2 269 1 67 1 354 1 
323 2 293 1 28 2 371 1 358 1 324 1 143 1 349 1 6 1 139 2 269 1 146 1 67 1 354 1 
165 1 143 1 146 1 88 1 313 1 279 1 4 1 254 1 5 1 367 1 323 1 158 1 47 1 324 1 6 1 48 1 181 1 240 1 186 1 79 1 187 1 266 1 371 1 28 2 349 1 139 2 188 1 243 1 
165 1 143 1 146 1 313 1 206 1 4 1 254 1 5 1 323 1 158 1 47 1 324 1 6 1 48 1 181 1 240 1 186 1 79 1 187 1 266 1 371 1 28 2 349 1 139 2 188 1 375 1 140 1 243 1 
323 2 197 1 293 1 358 1 324 1 6 1 143 1 146 1 371 1 28 2 349 1 139 2 269 1 67 1 354 1 
165 1 358 1 143 1 146 1 88 1 313 1 279 1 67 1 4 1 254 1 367 1 323 2 293 1 158 1 47 1 324 1 6 1 24 1 48 1 181 1 186 1 371 1 28 2 349 1 139 2 269 1 188 1 243 1 33 1 354 1 
323 2 71 1 293 1 47 1 197 1 358 1 324 1 6 1 143 1 146 1 297 1 260 1 231 1 149 1 371 1 28 2 349 1 139 2 269 1 67 1 4 1 363 1 354 1 
307 1 36 1 195 3 358 4 58 5 103 1 143 3 146 3 336 1 90 1 89 1 249 4 126 1 171 4 65 1 172 3 106 4 108 1 255 9 5 21 257 1 342 1 209 1 323 19 293 5 97 1 77 1 132 1 265 1 135 5 370 1 372 1 331 2 28 6 371 3 350 4 11 1 349 3 351 1 139 40 269 4 352 1 271 1 
307 1 36 1 195 3 358 4 58 4 103 1 143 4 146 4 336 1 90 1 89 1 249 4 126 1 171 3 65 1 172 3 106 3 108 1 255 8 5 19 257 1 342 1 209 1 323 19 293 5 97 1 77 1 132 2 265 1 135 5 370 1 372 1 331 2 28 8 371 4 350 4 11 1 349 4 351 1 139 38 269 4 352 1 271 1 
307 1 36 1 195 2 358 7 58 8 103 1 143 2 146 2 336 1 89 1 249 4 64 2 126 1 171 7 65 1 172 4 106 7 108 2 255 15 5 26 257 1 342 1 209 1 323 26 293 8 97 1 77 1 132 1 265 1 135 8 372 1 331 1 28 4 371 2 350 4 11 1 349 2 351 1 139 52 269 7 352 1 271 1 
102 1 195 1 358 3 58 3 143 2 146 2 90 1 249 2 126 1 171 3 172 1 106 3 108 1 255 6 5 10 209 1 323 9 293 3 97 1 135 3 372 1 331 1 28 4 371 2 350 2 11 1 349 2 351 2 139 19 269 3 
36 1 195 2 58 2 358 3 103 1 143 3 146 3 336 1 249 4 126 1 171 2 172 2 106 2 255 4 5 12 257 1 209 2 323 14 293 3 97 1 132 2 265 1 135 2 372 1 331 2 28 6 371 3 11 1 349 3 350 2 351 1 139 26 269 3 352 1 
366 1 123 1 339 1 211 1 252 1 359 1 16 1 212 1 54 1 303 1 
281 1 296 1 
56 1 366 1 284 1 339 1 359 1 212 1 54 1 303 1 62 1 
153 1 220 1 
316 1 189 1 235 1 
366 1 123 1 344 1 73 2 227 1 159 1 359 1 95 1 212 1 201 1 247 1 184 1 339 1 252 1 42 1 16 1 54 1 303 1 
366 1 123 1 344 1 73 2 227 1 159 1 359 1 95 1 212 1 201 1 247 1 184 1 339 1 252 1 42 1 16 1 54 1 303 1 
366 1 123 1 344 1 73 2 227 1 159 1 359 1 95 1 212 1 201 1 247 1 184 1 339 1 252 1 42 1 16 1 54 1 303 1 
316 1 153 1 220 1 
316 1 153 1 220 1 
189 1 235 1 
316 1 189 1 235 1 
217 1 335 1 
359 1 335 1 247 1 230 1 281 1 149 2 339 1 286 1 42 1 287 1 4 2 253 1 363 2 366 1 71 2 47 2 344 1 73 1 212 1 327 1 296 1 184 1 187 1 267 1 217 1 54 1 303 1 
165 1 308 1 197 1 143 1 146 1 313 2 248 1 204 2 150 1 151 1 233 1 4 2 175 1 5 1 71 2 323 1 158 2 47 2 324 1 6 1 48 1 238 1 240 1 186 2 79 1 371 1 28 2 349 1 188 1 139 2 243 1 
128 1 20 1 258 1 158 2 110 1 0 2 23 1 311 1 24 1 313 2 125 1 368 1 282 1 242 1 186 2 2 1 251 1 188 1 243 1 
128 1 20 1 258 1 158 1 0 2 23 1 313 1 125 1 203 1 368 1 282 1 242 1 186 1 2 1 251 1 188 1 243 1 
165 1 158 1 166 1 311 1 48 1 313 1 125 1 25 1 186 1 266 1 188 1 289 1 243 1 174 1 
128 1 20 1 258 1 158 1 110 1 0 2 23 1 311 1 313 1 125 1 368 1 282 1 242 1 186 1 2 1 251 1 188 1 243 1 
214 1 
314 1 83 1 196 1 250 1 38 1 201 1 115 1 
83 1 273 1 222 1 87 1 201 2 14 1 314 1 250 1 43 1 177 1 178 1 344 1 98 1 184 1 185 1 81 1 141 1 
83 2 273 4 222 5 165 3 225 2 87 3 1 2 280 6 39 2 40 1 170 2 171 2 173 1 43 4 291 2 293 2 177 4 344 5 93 1 48 10 239 3 181 3 133 2 298 1 8 2 184 5 186 3 185 6 51 1 188 3 191 2 243 4 194 1 196 1 358 2 58 2 202 2 313 3 201 8 14 4 314 9 250 8 158 3 74 2 24 1 213 3 259 2 115 1 119 2 266 1 81 12 269 2 32 1 162 6 
83 2 36 1 222 1 273 2 195 1 225 2 358 2 58 2 103 1 87 1 202 1 201 5 336 1 277 1 14 2 280 5 314 8 250 5 171 2 172 1 43 2 293 2 344 1 177 2 239 1 184 1 185 3 265 1 80 1 81 6 350 1 269 2 352 1 32 1 162 5 
273 1 307 1 225 2 58 1 198 1 169 1 14 1 314 2 338 1 149 1 250 2 65 1 4 1 363 1 43 1 365 1 71 1 47 1 293 2 295 1 177 1 344 1 94 1 239 1 297 1 184 1 82 1 271 1 
83 1 273 1 196 1 177 1 201 1 14 1 115 1 314 1 250 1 43 1 
225 2 293 2 358 2 58 2 239 1 1 1 201 5 280 5 314 5 185 5 250 5 81 10 171 2 269 2 162 5 
184 1 83 1 222 1 344 1 87 1 201 1 
273 2 222 4 165 1 166 1 87 2 313 4 202 2 14 2 314 2 315 1 152 1 250 2 43 1 289 1 44 1 158 4 177 2 344 3 48 1 298 2 184 3 186 4 266 2 373 1 51 1 188 1 32 2 243 1 377 1 
165 1 143 1 169 1 146 1 313 1 88 1 279 1 149 2 285 1 4 3 363 2 254 1 5 1 367 1 71 2 158 1 47 3 324 1 6 1 48 1 181 1 297 2 240 1 186 1 187 1 266 1 28 2 371 1 349 1 139 1 188 1 243 1 
83 1 273 1 225 1 177 1 202 1 201 3 14 1 89 1 280 2 314 2 185 2 81 4 250 1 43 1 162 2 32 1 
21 1 359 1 54 1 
21 1 359 1 54 1 
148 1 217 1 252 1 359 1 54 1 
21 1 359 1 54 1 
31 1 359 1 54 1 
31 1 359 1 54 1 
31 1 359 1 54 1 
359 1 54 1 
366 1 212 1 
307 1 195 1 58 1 103 1 143 1 146 1 89 1 172 1 65 1 255 2 5 4 342 1 323 3 293 1 97 1 77 1 135 2 28 2 371 1 350 1 349 1 139 7 271 1 
307 1 195 1 58 1 358 1 103 1 143 2 146 2 89 1 65 1 172 1 106 1 66 1 108 1 255 3 5 5 342 1 323 5 293 2 97 1 77 1 135 2 28 4 371 2 350 2 349 2 139 10 269 1 271 1 
307 1 36 1 195 1 358 2 58 3 103 1 143 3 146 3 336 1 89 1 171 2 65 1 172 1 106 1 66 1 255 4 5 10 342 1 323 8 293 3 97 1 77 1 132 1 135 3 265 1 28 6 371 3 350 1 349 3 139 18 269 2 352 1 271 1 
307 1 36 1 195 1 358 2 58 2 103 1 143 3 146 3 336 1 89 1 171 1 65 1 172 1 106 2 66 1 255 5 5 7 342 1 323 9 293 3 97 1 77 1 132 1 135 3 265 1 28 6 371 3 350 1 349 3 139 16 269 2 352 1 271 1 
307 1 195 1 58 1 103 1 143 1 146 1 89 1 172 1 65 1 255 2 5 4 342 1 323 3 293 1 97 1 77 1 135 2 28 2 371 1 350 1 349 1 139 7 271 1 
36 1 195 1 358 2 58 2 103 1 143 1 146 1 336 1 171 2 172 1 106 1 255 2 5 6 323 6 293 2 97 1 135 1 265 1 28 2 371 1 350 1 349 1 139 12 269 2 352 1 
307 1 36 1 195 1 358 2 58 2 103 1 143 4 146 4 336 1 89 1 171 1 65 1 172 1 106 2 66 1 255 5 5 8 342 1 323 9 293 3 97 1 77 1 132 2 265 1 135 3 28 8 371 4 350 1 349 4 139 17 269 2 352 1 271 1 
36 1 195 1 358 3 58 2 103 1 143 4 146 4 336 1 90 1 171 2 172 1 106 3 255 6 5 7 323 9 293 3 97 1 132 2 265 1 135 3 28 8 371 4 350 1 349 4 139 16 269 3 352 1 
342 1 307 1 323 3 293 1 58 1 77 2 135 3 139 7 65 3 106 3 271 3 255 6 5 4 
307 1 36 1 195 1 358 2 58 2 103 1 143 4 146 4 336 1 89 1 90 1 171 1 65 1 172 1 106 1 255 4 5 8 342 1 323 9 293 3 97 1 77 1 132 2 265 1 135 3 28 8 371 4 350 1 349 4 139 17 269 2 352 1 271 1 
342 1 307 1 323 3 293 1 58 1 143 2 146 2 132 1 77 1 89 1 135 2 371 2 28 4 349 2 139 7 65 1 106 1 271 1 255 3 5 4 
342 1 307 1 323 2 293 1 58 1 38 1 77 1 89 1 135 2 65 1 139 5 271 1 255 2 5 3 
323 2 293 1 58 1 358 1 143 1 146 1 135 1 371 1 28 2 171 1 349 1 269 1 139 4 106 1 66 1 255 2 5 2 
195 1 323 3 293 1 58 1 358 1 135 1 171 1 350 2 139 7 172 1 269 1 106 1 108 1 255 2 5 4 
307 1 358 2 58 3 143 2 146 2 89 1 171 2 64 1 65 2 172 2 106 4 108 1 255 9 208 1 5 12 17 1 342 1 323 10 293 3 77 1 132 2 135 5 371 2 28 4 350 2 349 2 269 2 139 22 271 2 
350 1 139 1 5 1 
323 1 139 1 172 1 
323 3 293 1 358 1 58 1 143 1 146 1 1 1 135 2 28 2 371 1 349 1 171 1 139 6 269 1 106 2 66 1 255 4 5 3 
36 1 195 1 358 2 58 2 103 1 143 1 146 1 336 1 171 2 172 1 106 1 255 2 5 6 323 6 293 2 97 1 135 1 265 1 28 2 371 1 350 1 349 1 139 12 269 2 352 1 
307 1 323 3 293 1 58 1 135 1 139 6 65 1 106 1 271 1 255 2 5 3 
342 1 323 1 143 1 146 1 77 1 132 1 135 1 371 1 28 2 349 1 65 1 139 3 106 1 271 1 255 2 17 1 5 2 
307 1 323 5 293 2 58 2 143 1 146 1 97 1 135 3 28 2 371 1 349 1 65 2 139 10 82 1 106 2 271 2 255 5 5 5 
323 2 293 1 143 1 146 1 97 1 371 1 28 2 349 1 269 1 139 2 106 1 255 1 
323 2 293 1 58 1 358 1 143 1 146 1 97 1 135 1 371 1 28 2 171 1 349 1 269 1 139 4 106 1 255 2 5 2 
323 1 143 3 146 3 97 1 132 1 90 1 135 1 371 3 28 6 349 3 139 3 65 1 106 1 271 1 255 2 17 1 5 2 
307 2 195 1 358 3 58 5 143 5 146 5 89 1 90 1 171 3 65 3 172 3 106 5 66 1 108 1 255 12 17 1 155 1 5 18 342 1 323 15 293 5 97 1 77 1 132 2 99 1 135 7 29 1 28 10 371 5 350 4 349 5 139 33 269 3 271 3 
187 1 71 1 47 1 22 1 4 1 7 1 355 1 
306 1 71 1 47 1 167 1 22 1 7 1 263 1 187 1 105 1 49 1 4 1 355 1 
186 1 165 1 158 1 266 1 166 1 188 1 48 1 289 1 38 1 313 1 243 1 
367 1 165 1 71 1 47 2 158 1 48 1 181 1 228 1 313 1 186 1 187 1 149 1 266 1 188 1 363 1 4 2 254 1 243 1 
156 1 367 1 165 2 71 2 47 2 158 1 48 3 259 1 181 2 228 1 313 1 27 1 298 1 186 1 187 1 149 2 188 1 191 1 363 1 4 2 254 1 243 1 365 1 
156 1 165 2 71 2 47 2 158 2 48 3 259 1 181 2 228 1 313 2 27 1 298 1 186 2 187 1 149 2 188 1 206 1 191 1 363 1 4 2 254 1 69 1 243 1 365 1 
83 1 222 1 165 1 168 1 313 3 201 1 69 1 158 3 344 2 48 4 213 1 259 1 181 1 8 1 298 1 184 2 186 3 119 1 266 1 188 1 191 1 192 1 243 1 
83 1 222 1 165 1 158 3 344 2 48 4 201 1 181 1 259 1 313 3 213 1 133 1 184 2 298 1 8 1 186 3 119 1 266 1 188 1 191 1 69 1 243 1 
186 1 158 1 188 1 290 1 313 1 243 1 
244 1 194 1 165 2 158 7 23 1 200 1 326 1 24 1 48 3 276 1 313 7 181 1 204 1 186 6 266 2 138 1 188 2 290 1 218 1 243 3 175 1 
307 1 165 1 197 1 58 1 143 2 146 2 228 1 313 1 88 1 89 1 279 1 149 1 65 1 67 1 233 1 4 2 363 1 254 1 255 2 5 3 342 1 367 1 323 2 71 1 293 1 47 2 158 1 324 2 6 2 48 1 24 1 181 1 77 1 186 1 187 1 135 2 371 2 28 4 349 2 139 5 188 1 271 1 243 1 193 1 33 1 354 1 
83 1 273 2 222 2 196 1 87 1 201 1 313 1 14 2 314 1 39 1 250 1 170 1 253 1 43 2 158 1 177 2 344 3 74 1 48 2 213 1 115 1 133 1 184 3 8 1 186 1 119 1 266 1 51 1 
194 1 165 1 158 2 24 1 48 2 313 2 181 1 8 1 186 2 40 1 188 1 290 1 243 2 
305 1 165 1 158 4 166 1 24 1 48 1 313 4 186 4 266 1 188 1 289 1 69 1 243 1 
165 1 158 2 112 1 326 1 48 1 276 1 313 2 181 1 116 1 298 1 186 2 188 1 243 2 127 1 
186 1 2 1 258 1 158 1 266 1 0 1 251 1 188 1 313 1 243 1 
308 1 165 1 158 2 23 1 24 1 48 1 313 2 186 2 188 1 243 1 175 1 
305 1 165 2 158 5 166 1 24 1 48 3 313 5 298 1 186 4 266 1 188 2 138 1 289 1 218 1 243 2 175 1 
305 1 165 2 158 5 166 1 24 1 48 3 313 5 298 1 186 4 15 1 266 1 188 2 138 1 289 1 243 2 175 1 
165 1 71 1 47 2 158 1 48 1 181 1 228 1 313 1 186 1 187 1 149 1 266 1 188 1 206 1 363 1 4 2 254 1 243 1 
244 1 194 1 165 1 158 1 326 1 48 1 276 1 313 1 181 1 298 1 186 1 188 1 243 2 
187 1 309 1 10 1 317 1 86 1 
83 1 156 1 309 2 344 2 86 2 96 1 201 1 27 1 184 2 347 1 187 1 119 1 10 2 317 1 3 1 253 1 68 1 365 1 109 1 
71 1 309 1 47 1 86 1 238 1 150 1 317 1 151 1 4 1 
317 1 3 1 109 1 
18 1 360 1 75 1 38 1 
18 1 360 1 75 1 107 1 104 1 199 1 34 1 
107 1 180 1 12 1 
357 1 18 1 75 1 199 1 104 3 312 2 160 1 346 1 360 1 107 3 378 1 34 1 
18 1 360 1 46 1 75 1 332 1 107 2 104 2 199 1 34 1 
258 1 0 1 199 1 104 1 368 1 9 1 360 1 268 1 107 1 378 1 34 1 
360 1 75 1 107 1 104 1 199 1 378 1 34 1 
18 1 75 2 107 1 104 1 199 1 378 1 34 1 
176 1 360 1 111 1 302 1 75 1 107 2 104 2 199 2 378 1 34 2 
18 1 75 1 210 1 199 1 104 3 369 1 261 1 360 2 332 2 268 1 107 3 378 1 34 1 
18 1 258 1 0 2 75 1 199 1 104 2 368 1 360 1 242 1 2 1 301 1 332 1 107 2 378 1 34 1 
18 1 46 1 75 1 199 2 104 4 369 1 360 2 118 1 332 2 268 1 107 4 378 1 34 2 
18 1 360 1 75 1 107 1 104 1 199 1 378 1 34 1 
357 1 18 2 75 2 104 4 199 1 312 1 160 1 369 1 360 3 318 1 332 2 268 1 107 4 34 1 
18 1 75 1 142 1 199 1 104 2 360 1 216 1 63 1 332 1 107 2 378 1 34 1 
357 2 18 1 360 1 75 1 107 3 61 1 104 3 199 1 312 2 160 1 378 1 34 1 
360 2 100 1 325 1 163 2 
205 1 107 1 104 1 199 1 378 1 34 1 
18 1 360 1 75 1 332 1 210 1 107 2 104 2 199 1 378 1 34 1 
229 1 
18 1 360 1 75 1 107 1 104 1 199 1 378 1 34 1 
18 1 75 1 210 1 199 1 104 3 312 1 360 1 332 1 107 3 378 1 34 1 
369 1 360 1 318 1 268 1 
360 1 75 1 

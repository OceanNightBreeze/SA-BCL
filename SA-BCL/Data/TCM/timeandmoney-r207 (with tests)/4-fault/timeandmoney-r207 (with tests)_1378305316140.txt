#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) 126 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) 126 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) 126 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) 126 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) 126 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) 126 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) 126 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) 126 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) 126 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) (95,293) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) 126 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) 126 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) (95,293) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 200 159 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 78 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 78 218 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 313 99 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 238 313 99 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 238 313 76 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 313 99 81 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 313 99 81 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 200 159 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) 126 
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) 
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) 126 
com.domainlanguage.money.MoneyTest:testMultiply()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) 126 
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) 126 
com.domainlanguage.money.MoneyTest:testNegation()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) 126 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) 126 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) 126 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) 126 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) 126 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) 126 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) 126 
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) 126 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) 126 
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) 126 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException (157,195,270,311) (157,195,270,311) (157,195,270,311) 126 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> ==
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 11529 | = null
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 4578 | return null
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 2496 | = null
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
195 1 311 1 270 1 126 1 
195 1 311 1 270 1 126 1 
195 1 311 1 270 1 126 1 
195 1 311 1 270 1 126 1 
195 1 311 1 270 1 126 1 
195 1 311 1 270 1 126 1 
195 1 311 1 270 1 126 1 
195 1 311 1 270 1 126 1 
195 1 311 1 270 1 126 1 
37 1 1 1 255 1 216 1 63 1 46 1 199 1 26 1 275 1 309 1 85 1 113 1 11 1 12 1 
140 1 
37 1 1 1 187 1 255 1 125 1 61 1 216 1 63 1 46 1 199 1 275 1 26 1 309 1 85 1 141 1 140 1 11 1 113 1 12 1 
36 2 37 1 115 1 235 1 1 1 187 1 116 1 302 5 193 1 273 1 79 1 46 4 199 1 275 1 309 1 47 2 280 1 135 1 85 4 139 1 141 2 140 2 11 1 12 1 318 2 255 1 19 2 61 2 162 1 216 1 63 1 26 1 291 1 175 2 179 2 67 1 113 2 296 4 
56 1 140 1 141 1 
213 1 140 1 127 2 
63 2 37 2 199 2 276 1 275 2 1 2 255 1 11 2 
184 1 37 2 1 3 117 1 191 1 7 1 45 1 199 2 276 1 275 2 279 1 310 2 247 1 52 1 11 2 150 1 252 2 15 1 320 1 18 1 93 1 92 1 255 1 160 1 94 2 21 1 22 2 63 3 102 1 258 1 328 1 25 2 174 1 223 1 176 1 232 1 34 1 
63 1 37 1 199 1 275 1 26 1 309 1 1 1 255 1 11 1 216 1 
1 1 71 1 121 1 123 1 59 1 63 1 306 1 46 1 199 1 168 1 309 1 85 1 140 1 141 1 
37 1 1 1 121 1 59 1 63 1 306 1 46 2 199 1 168 1 275 1 309 1 85 2 140 1 141 1 11 1 
46 1 246 1 85 1 61 1 113 1 
37 1 1 1 187 1 255 1 61 1 216 1 63 1 46 1 199 1 275 1 26 1 309 1 224 1 85 1 141 1 140 1 11 1 113 1 12 1 
46 1 85 1 61 1 
37 1 1 2 128 1 63 2 199 2 275 1 276 2 204 1 11 1 
274 1 154 1 31 1 
184 1 234 1 1 1 117 1 93 1 92 1 22 1 191 1 63 1 45 1 276 1 25 1 310 1 176 1 52 1 34 1 
276 1 56 1 
184 1 1 2 154 1 117 1 92 1 93 1 77 1 191 1 22 1 63 2 45 1 199 1 275 1 25 1 65 1 310 1 176 1 52 1 11 1 34 1 
63 3 37 1 199 3 276 1 275 3 1 3 77 1 11 3 
63 1 199 1 275 1 309 1 1 1 11 1 216 1 
63 1 37 1 199 1 275 1 309 1 1 1 204 1 11 1 128 1 
184 1 37 2 1 4 117 1 121 1 77 1 191 1 306 1 7 1 45 1 46 1 199 3 276 1 275 3 309 1 310 1 85 1 204 1 52 1 11 3 150 1 252 1 15 1 18 1 92 1 93 1 286 1 255 1 160 1 94 2 59 1 21 1 22 1 98 1 63 4 328 1 168 1 25 1 174 1 65 1 223 1 176 1 232 1 34 1 
63 2 199 2 276 1 275 1 1 2 123 1 227 1 77 1 11 1 
37 1 1 3 121 1 59 1 77 2 98 1 63 3 306 1 46 1 199 3 168 1 275 3 309 1 65 1 85 1 204 1 112 1 140 1 11 3 
37 1 1 2 154 1 77 1 63 2 199 2 275 2 204 1 31 1 11 2 
184 1 1 1 117 1 93 1 92 1 22 1 191 1 63 1 45 1 276 1 25 1 310 1 176 1 52 1 34 1 
184 1 1 1 117 1 92 1 3 1 22 1 191 1 63 1 131 1 276 1 25 1 310 1 176 1 52 1 34 1 
36 1 188 1 189 1 301 1 271 1 304 1 274 2 150 1 318 1 15 1 252 4 320 2 154 2 18 1 156 1 94 2 21 1 62 1 106 1 174 2 223 1 261 1 31 2 232 1 
63 1 199 1 275 1 309 1 1 1 121 1 11 1 341 1 
37 1 1 5 123 1 323 1 77 2 272 1 63 5 199 5 275 4 276 1 65 1 227 1 204 1 11 4 
63 2 199 2 275 2 309 1 1 2 11 2 341 1 216 1 
239 1 324 1 192 1 
8 1 16 1 225 1 248 1 239 2 192 2 
239 1 192 1 
239 1 192 1 
16 1 248 1 
16 1 248 1 
16 1 248 1 
20 1 239 1 192 1 
20 1 239 1 192 1 
20 1 239 1 192 1 
190 1 239 1 192 1 
190 1 239 1 192 1 
190 1 239 1 192 1 
183 2 185 2 152 1 41 1 158 1 239 2 192 2 241 2 165 3 64 1 46 2 8 1 172 1 108 1 28 2 85 2 138 2 140 1 207 1 
183 1 1 2 41 1 239 1 192 1 241 1 46 1 199 2 276 1 275 2 85 1 138 1 86 1 11 2 206 1 324 1 165 1 63 2 173 1 107 1 27 1 28 1 177 1 231 1 
42 2 236 2 29 1 287 1 137 1 
257 1 42 1 29 1 
257 1 42 1 137 1 
42 3 236 1 287 1 29 2 137 1 282 1 
170 1 42 2 236 1 287 1 29 1 137 1 
36 1 115 1 187 1 188 1 73 1 302 1 4 1 267 1 127 1 271 1 46 4 47 1 201 1 85 4 281 2 86 1 205 1 141 1 140 1 210 1 318 1 61 1 289 1 103 1 107 1 175 1 338 1 179 1 113 4 296 3 231 1 
36 3 115 1 69 5 187 1 188 3 73 6 120 1 302 6 268 1 127 9 271 3 273 1 46 8 196 1 246 5 47 2 201 2 85 8 141 1 140 5 210 3 318 3 213 3 97 1 61 6 289 6 103 2 221 1 175 2 109 1 338 1 179 2 113 7 231 4 296 8 
36 1 188 1 73 2 302 2 267 1 127 4 271 1 273 1 46 3 47 1 201 1 85 3 281 1 205 1 141 1 140 3 210 1 318 1 213 2 103 1 289 2 175 1 179 1 113 2 296 3 231 1 
36 2 188 2 73 4 302 4 268 1 267 1 127 7 271 2 273 1 46 4 47 1 201 1 85 4 281 2 205 1 141 1 140 4 210 2 318 2 213 3 97 1 289 4 103 1 221 1 175 1 179 1 113 3 296 5 231 2 
163 1 
117 1 56 1 322 1 
219 1 117 1 
117 1 176 1 
117 3 84 1 176 1 322 2 52 1 68 1 
117 1 176 1 52 1 
117 1 13 1 
36 1 35 1 318 1 252 7 320 4 116 1 301 3 156 2 266 1 130 1 5 1 80 1 198 1 291 1 332 1 174 3 135 1 142 2 
35 1 36 4 39 4 116 1 188 3 301 10 266 2 271 3 130 2 44 3 5 1 80 5 135 2 249 1 142 3 148 1 14 1 150 1 210 3 54 1 318 4 151 1 252 31 15 1 320 16 156 5 94 2 21 1 164 1 332 1 291 2 174 15 223 1 340 1 
36 1 299 1 116 1 301 4 266 1 130 1 5 1 80 1 135 1 142 2 150 2 54 1 318 1 15 2 252 9 320 5 156 3 94 4 21 2 169 1 332 1 291 1 174 4 223 2 
36 1 35 1 318 1 252 7 320 4 116 1 301 3 156 2 266 1 130 1 5 1 80 1 291 1 332 1 174 3 135 1 142 2 
36 1 35 1 318 1 252 7 320 4 116 1 301 3 156 2 266 1 130 1 5 1 80 1 291 1 332 1 174 3 135 1 142 2 
195 1 311 1 95 1 270 1 
195 1 311 1 270 1 126 1 
195 1 311 1 270 1 126 1 
195 1 311 1 95 1 270 1 
233 1 42 2 191 1 129 1 195 2 307 1 310 1 137 1 10 1 282 1 89 1 316 1 92 1 254 1 157 2 96 1 22 1 257 1 25 1 335 1 336 2 178 1 29 1 293 1 295 1 
214 1 
184 1 115 1 187 1 302 1 159 1 61 2 22 1 103 1 46 1 200 1 25 1 47 1 83 1 175 1 310 1 85 1 179 1 296 1 
262 1 297 1 298 1 186 1 187 1 1 1 71 1 118 2 121 1 123 1 125 1 78 1 306 1 46 2 199 1 309 1 85 2 90 1 59 1 61 2 63 1 168 1 
262 1 297 1 298 1 186 1 1 1 187 1 71 1 118 3 121 1 123 1 125 1 306 1 46 2 199 1 309 1 85 2 141 1 140 1 90 1 59 1 61 1 63 1 168 1 339 1 
262 1 297 1 298 1 186 1 187 1 1 1 71 1 118 3 121 1 123 1 125 1 78 1 306 1 46 2 199 1 309 1 85 2 90 1 59 1 61 2 218 1 63 1 168 1 339 1 
46 1 187 1 85 1 125 1 61 1 
262 1 297 1 298 1 186 1 115 1 187 1 1 1 71 1 118 3 74 1 121 1 302 1 123 1 238 1 127 1 78 1 306 1 46 2 199 1 47 1 309 1 48 1 85 2 90 1 213 1 155 2 59 1 61 2 218 1 256 2 63 1 168 1 175 1 339 1 30 2 179 1 296 1 182 1 
262 1 297 1 298 1 186 1 115 1 187 1 1 1 71 1 118 3 74 1 121 1 302 1 123 1 238 1 78 1 306 1 46 2 199 1 309 1 47 1 85 2 313 1 90 1 213 1 155 2 59 1 61 2 218 1 256 2 99 1 63 1 168 1 175 1 339 1 110 1 30 2 179 1 296 1 182 1 
262 1 297 1 298 1 186 1 115 1 187 1 1 1 71 1 118 2 74 1 121 1 302 1 123 1 238 1 78 1 306 1 46 2 199 1 309 1 47 1 85 2 313 1 90 1 213 1 155 1 59 1 61 2 218 1 256 1 99 1 63 1 168 1 175 1 110 1 30 1 179 1 296 1 182 1 
262 1 297 1 298 1 263 1 186 1 115 1 187 1 1 1 71 1 118 2 121 1 302 1 123 1 76 1 238 1 127 1 78 1 306 1 46 2 199 1 309 1 47 1 85 2 88 1 313 1 90 1 153 1 155 1 59 1 61 2 218 1 256 1 63 1 168 1 175 1 179 1 294 1 296 1 
262 1 297 1 298 1 115 1 186 1 187 1 1 1 71 1 118 4 74 1 121 1 302 1 123 1 238 1 78 2 306 1 46 2 199 1 81 1 47 1 309 1 85 2 313 1 90 1 213 1 155 2 59 1 61 3 256 2 218 2 99 1 63 1 168 1 175 1 110 1 339 2 30 2 179 1 296 1 182 1 
262 1 297 1 298 1 115 1 186 1 187 1 1 1 71 1 118 4 74 1 121 1 302 1 123 1 238 1 78 2 306 1 46 2 199 1 81 1 47 1 309 1 85 2 313 1 90 1 213 1 155 2 59 1 61 3 256 2 218 2 99 1 63 1 168 1 175 1 110 1 339 2 30 2 179 1 296 1 182 1 
262 1 297 1 298 1 263 1 186 1 115 1 187 1 1 1 71 1 118 3 121 1 302 1 123 1 238 1 127 1 78 1 306 1 46 2 199 1 47 1 309 1 48 1 85 2 88 1 90 1 155 2 59 1 61 2 218 1 256 2 63 1 168 1 175 1 339 1 179 1 294 2 296 1 
184 2 1 1 117 3 72 1 43 1 77 1 191 2 199 1 275 1 82 1 310 7 279 1 247 2 283 1 11 1 251 1 314 1 150 2 15 2 252 2 320 1 92 2 18 2 94 4 96 1 22 8 21 2 63 1 328 1 166 1 25 8 104 1 106 1 174 1 223 2 66 1 176 2 33 1 232 2 
36 1 37 1 1 1 188 1 301 1 271 1 274 1 132 1 199 1 275 1 204 1 11 1 144 1 150 1 210 1 318 1 15 1 252 3 320 1 154 1 156 1 18 1 94 2 21 1 63 1 174 2 223 1 31 1 232 1 
36 1 116 1 301 2 5 1 274 1 276 2 135 1 142 1 150 1 318 1 15 1 252 6 320 3 154 1 56 1 18 1 156 2 94 2 21 1 332 1 291 1 106 1 174 3 223 1 31 1 232 1 
36 1 39 3 188 1 301 2 271 2 44 3 80 1 274 11 132 1 276 1 278 1 279 1 249 1 150 2 210 2 318 2 15 2 252 14 91 1 320 8 154 11 156 1 18 1 94 4 60 1 21 2 328 1 174 6 223 2 337 1 31 4 232 2 340 1 
184 1 234 1 1 2 117 1 77 1 191 1 45 1 132 1 199 1 276 1 275 1 310 1 279 1 52 1 11 1 150 1 15 1 252 2 320 1 92 1 93 1 18 1 94 2 22 1 21 1 63 2 101 1 328 1 23 1 25 1 65 1 174 1 222 1 223 1 176 1 31 1 34 1 232 1 
184 1 1 3 188 2 77 1 191 2 271 2 5 1 274 7 80 4 199 1 276 2 277 1 275 1 9 1 279 1 11 1 284 2 210 2 15 3 18 3 93 2 92 2 94 6 96 1 22 3 21 3 291 1 25 3 223 3 31 7 232 3 34 2 36 3 38 2 116 1 117 2 301 8 244 1 45 2 132 1 310 3 49 2 135 1 142 1 52 2 150 3 318 3 252 20 320 10 154 7 156 4 160 2 63 3 326 2 328 1 332 1 174 10 65 1 176 2 
150 1 318 1 252 2 15 1 320 2 154 1 301 1 18 1 94 2 21 1 271 1 80 1 274 1 106 1 223 1 261 1 31 1 232 1 
36 1 150 1 252 2 15 1 154 1 188 1 301 1 156 1 18 1 94 2 21 1 62 1 274 1 106 1 174 2 223 1 31 1 232 1 
36 1 150 1 210 1 318 1 252 4 15 1 320 2 188 1 154 2 156 1 301 2 18 1 94 2 21 1 271 1 80 1 274 2 106 1 174 2 223 1 31 2 232 1 
150 1 318 1 252 2 15 1 320 2 154 1 301 1 18 1 94 2 21 1 271 1 80 1 274 1 66 1 223 1 261 1 31 1 232 1 
36 1 150 1 252 2 15 1 154 1 188 1 301 1 156 1 18 1 94 2 21 1 62 1 274 1 174 2 66 1 223 1 31 1 232 1 
36 1 150 1 210 1 318 1 252 4 15 1 320 2 188 1 154 2 156 1 301 2 18 1 94 2 21 1 271 1 80 1 274 2 174 2 66 1 223 1 31 2 232 1 
36 1 150 1 210 1 318 1 15 1 252 4 320 2 188 1 154 2 156 1 301 2 18 1 94 2 21 1 271 1 80 1 274 2 174 2 223 1 31 2 232 1 
184 1 1 1 117 1 191 1 45 1 276 1 279 1 310 1 52 1 150 1 252 2 15 1 320 1 92 1 93 1 18 1 160 1 94 2 22 1 21 1 63 1 328 1 25 1 174 1 223 1 176 1 34 1 232 1 
184 1 1 1 117 1 3 1 191 1 131 1 276 1 279 1 310 1 52 1 150 1 252 2 15 1 320 1 92 1 18 1 94 2 22 1 21 1 63 1 328 1 329 1 25 1 174 1 223 1 176 1 34 1 232 1 
36 1 150 1 210 1 318 1 252 4 15 1 320 2 188 1 154 2 156 1 301 2 18 1 94 2 21 1 271 1 80 1 274 2 132 1 174 2 223 1 31 2 232 1 
36 1 38 1 1 1 188 1 117 1 301 2 191 1 271 1 80 1 274 2 45 1 310 1 52 1 150 1 210 1 318 1 252 4 15 1 320 2 154 2 156 1 92 1 93 1 18 1 160 1 94 2 22 1 21 1 63 1 166 1 25 1 174 2 223 1 176 1 31 2 34 1 232 1 
36 1 37 1 1 1 188 1 301 1 271 1 80 1 274 1 132 1 199 1 275 1 204 1 11 1 145 1 150 1 210 1 318 1 15 1 252 3 320 2 154 1 18 1 94 2 21 1 63 1 174 1 223 1 31 1 232 1 
36 3 39 2 188 3 301 6 75 1 271 3 44 1 308 1 80 3 136 1 50 1 312 1 249 1 150 2 210 3 318 3 15 2 252 19 55 2 320 9 156 3 94 4 21 2 167 1 169 1 105 2 174 10 223 2 32 1 340 1 
36 2 39 2 188 2 301 2 75 2 303 1 271 2 44 2 305 1 80 1 308 1 50 2 249 2 147 1 54 1 150 2 210 2 318 2 15 2 252 22 55 1 320 10 156 1 94 4 21 2 167 1 169 1 105 4 334 1 174 12 223 2 32 1 
36 4 39 4 40 1 116 1 188 3 301 7 75 2 303 1 271 3 44 3 5 1 305 1 308 1 80 3 136 1 135 1 50 1 249 3 142 1 147 1 54 1 150 3 210 3 318 4 15 3 252 36 55 1 320 17 156 4 94 6 21 3 167 1 169 1 291 1 332 1 105 4 334 1 174 19 223 3 32 1 340 1 
36 4 39 4 40 1 116 1 188 3 301 6 75 2 303 1 271 3 44 3 5 1 305 1 308 1 80 2 136 1 135 1 50 1 249 3 142 1 147 1 54 1 150 3 210 3 318 4 15 3 252 34 55 1 320 16 156 4 94 6 21 3 167 1 169 1 291 1 332 1 105 4 334 1 174 18 223 3 32 1 340 1 
36 7 39 4 116 1 188 6 301 12 75 1 303 1 271 6 44 4 5 1 305 1 308 1 80 5 135 1 50 1 249 2 142 1 147 1 150 1 210 6 318 7 15 1 252 44 55 1 91 2 320 22 156 7 94 2 21 1 167 1 169 1 291 1 332 1 105 3 334 1 174 22 223 1 32 1 340 2 
183 1 8 1 70 1 108 1 158 1 28 1 138 1 239 1 192 1 241 1 
173 1 324 1 
300 1 24 1 183 1 330 1 28 1 138 1 239 1 192 1 241 1 
183 1 185 1 152 1 41 1 158 1 239 1 192 1 241 1 165 2 46 1 8 1 172 1 108 1 85 1 28 1 138 1 140 1 207 1 
183 1 185 1 152 1 41 1 158 1 239 1 192 1 241 1 165 2 46 1 8 1 172 1 108 1 85 1 28 1 138 1 140 1 207 1 
183 1 185 1 152 1 41 1 158 1 239 1 192 1 241 1 165 2 46 1 8 1 172 1 108 1 85 1 28 1 138 1 140 1 207 1 
225 1 292 1 20 1 
225 1 292 1 20 1 
190 1 242 1 
225 1 190 1 242 1 
27 1 177 1 
183 1 185 1 1 2 239 1 192 1 241 1 46 1 199 2 276 1 275 2 85 1 138 1 86 1 206 1 11 2 324 1 217 1 63 2 165 1 172 1 173 1 107 1 27 1 28 1 177 1 113 1 231 1 
292 1 20 1 
225 1 190 1 242 1 
1 2 117 1 191 1 240 1 132 1 245 1 199 2 279 1 310 2 247 2 150 1 15 1 252 2 320 1 92 1 18 1 94 2 22 2 21 1 63 2 328 1 25 2 331 1 104 1 220 1 174 1 223 1 176 1 33 1 232 1 181 1 
184 1 117 1 92 1 58 1 72 1 191 1 22 1 25 1 335 1 310 1 176 1 203 1 208 1 251 1 
42 2 253 1 92 1 96 1 191 1 22 1 129 1 325 1 257 1 290 1 25 1 335 1 310 1 29 1 137 1 203 1 282 1 10 1 
42 2 253 1 92 1 96 1 191 1 22 2 129 1 325 1 257 1 166 1 290 1 25 2 335 1 310 2 29 1 137 1 203 1 282 1 10 1 
42 2 92 1 96 1 22 1 191 1 129 1 194 1 325 1 257 1 290 1 25 1 335 1 310 1 29 1 137 1 282 1 10 1 
228 1 
115 1 302 1 193 1 47 1 175 1 67 1 179 1 141 1 140 1 296 1 
36 2 210 2 318 2 213 5 188 2 73 5 19 2 302 5 127 10 271 2 326 1 289 5 280 1 140 5 296 5 
37 1 1 1 187 1 255 1 61 1 216 1 63 1 199 1 275 1 26 1 309 1 141 1 140 1 11 1 12 1 
184 1 115 1 187 1 17 1 302 1 159 1 61 2 22 1 103 1 25 1 200 1 47 1 83 1 310 1 175 1 179 1 296 1 
56 1 302 1 67 1 140 1 141 1 296 1 193 1 
115 1 187 1 213 1 74 1 302 1 61 1 127 1 47 1 175 1 179 1 30 1 140 1 141 1 296 1 182 1 
184 1 187 1 188 1 73 3 191 2 271 1 85 1 210 1 213 3 92 1 19 1 22 1 103 1 219 2 289 3 25 1 229 1 296 4 230 1 36 1 115 2 117 4 302 3 127 6 243 1 46 1 47 2 310 1 52 1 140 3 318 1 319 1 57 1 322 1 59 1 61 2 326 1 259 1 260 1 175 2 176 1 179 2 68 1 
187 1 1 1 188 1 73 4 271 1 199 1 275 1 83 1 280 1 11 1 12 1 210 1 213 3 19 2 216 1 289 4 103 1 26 1 296 6 36 1 37 1 115 2 39 1 302 3 122 1 303 1 127 6 44 1 309 1 47 2 249 1 141 2 140 5 147 1 318 1 255 1 61 1 63 1 171 1 334 1 175 2 179 2 
36 1 37 1 115 1 235 1 1 1 116 1 302 2 46 1 199 1 275 1 309 1 47 1 280 1 135 1 85 1 11 1 12 1 318 2 255 1 19 2 216 1 63 1 291 1 26 1 175 1 110 1 179 1 296 2 
184 1 37 2 1 3 117 1 191 1 7 1 45 1 199 2 276 1 275 2 310 1 52 1 11 2 150 1 252 1 15 1 93 1 92 1 18 1 255 1 160 1 94 2 21 1 22 1 63 3 328 1 25 1 174 1 223 1 176 1 34 1 232 1 
115 1 213 2 73 2 302 2 127 4 289 2 103 1 47 1 175 1 83 1 179 1 142 1 141 2 140 4 296 1 
183 1 315 1 108 1 177 1 28 1 
183 1 264 1 28 1 
183 1 264 1 28 1 
183 1 264 1 28 1 
183 1 28 1 51 1 
183 1 28 1 51 1 
183 1 28 1 51 1 
183 1 28 1 
239 1 192 1 
36 2 150 1 318 2 15 1 252 10 235 1 320 5 116 1 156 3 301 5 94 2 21 1 80 2 169 1 291 2 174 5 223 1 135 2 
150 1 318 1 15 1 252 2 320 2 301 1 94 2 21 1 271 1 80 1 169 1 223 1 
36 1 150 1 210 1 318 1 15 1 252 4 320 2 188 1 156 1 301 2 94 2 21 1 271 1 80 1 169 1 174 2 223 1 
54 1 150 3 252 3 15 3 0 1 320 1 156 1 301 2 94 6 21 3 80 1 169 1 291 1 174 2 223 3 136 1 135 1 
36 5 39 4 0 1 116 2 188 3 301 12 271 3 44 3 5 1 80 5 135 3 136 1 249 1 142 1 148 1 149 1 14 1 54 2 150 5 210 3 318 5 15 5 252 34 320 16 156 7 94 10 21 5 164 1 169 1 291 3 332 1 174 18 223 5 340 1 
36 1 150 2 54 1 318 1 252 8 15 2 320 4 116 1 301 3 156 2 94 4 21 2 5 1 80 1 332 1 291 1 174 4 223 2 135 1 142 1 
36 1 318 1 252 6 320 3 56 1 116 1 156 2 301 2 5 1 332 1 291 1 174 3 135 1 142 1 
36 1 150 1 210 1 318 1 15 1 252 4 320 2 188 1 156 1 301 2 94 2 21 1 271 1 80 1 174 2 223 1 149 1 
36 1 210 1 318 1 39 2 252 7 320 3 188 1 156 1 301 2 271 1 44 1 80 1 174 4 249 1 340 1 
36 3 39 2 0 1 116 1 188 2 301 9 271 2 44 2 5 1 80 4 135 2 142 1 210 2 54 2 150 2 318 3 252 23 15 2 320 11 91 1 156 5 94 4 21 2 291 2 332 1 174 12 223 2 337 1 340 1 
252 1 39 1 174 1 
44 1 252 1 320 1 
36 1 150 1 210 1 318 1 15 1 252 6 320 3 188 1 301 3 156 2 94 2 21 1 271 1 326 1 80 1 174 3 223 1 149 1 
36 1 39 1 188 1 301 1 303 1 271 1 44 1 249 1 147 1 150 1 210 1 318 1 252 7 15 1 320 3 156 1 94 2 21 1 169 1 334 1 174 4 223 1 
36 1 318 1 252 6 320 3 116 1 156 1 301 2 80 1 291 1 174 3 135 1 
54 1 150 1 252 3 15 1 320 1 0 1 301 2 156 1 94 2 21 1 5 1 80 1 291 1 332 1 174 2 223 1 135 1 
36 1 39 1 116 1 301 2 44 1 5 1 135 1 249 1 142 1 147 1 150 1 318 1 252 8 15 1 320 4 156 2 94 2 21 1 169 1 332 1 291 1 174 4 223 1 
36 1 39 2 116 1 301 3 271 1 44 1 5 1 80 1 135 1 249 1 142 1 147 1 149 1 150 2 210 1 318 2 252 11 15 2 320 6 156 2 94 4 21 2 169 1 291 1 332 1 174 5 223 2 340 1 
36 2 39 1 116 1 188 1 301 3 303 1 271 1 44 1 5 1 135 1 249 1 142 1 147 1 149 1 150 3 210 1 54 1 318 2 252 14 15 3 320 6 156 3 94 6 21 3 169 1 291 1 332 1 334 1 174 8 223 3 
36 1 39 1 188 1 301 1 303 1 271 1 44 1 249 1 147 1 149 1 150 2 210 1 318 1 252 7 15 2 320 3 156 1 94 4 21 2 169 1 334 1 174 4 223 2 
36 1 39 1 116 1 301 2 44 1 5 1 135 1 249 1 142 1 147 1 150 1 318 1 252 8 15 1 320 4 156 2 94 2 21 1 169 1 332 1 291 1 174 4 223 1 
36 1 39 1 188 1 301 1 303 1 271 1 44 1 249 1 147 1 150 1 210 1 318 1 252 7 15 1 320 3 156 1 94 2 21 1 169 1 334 1 174 4 223 1 
36 1 39 1 188 1 301 1 303 1 271 1 44 1 249 1 147 1 149 1 150 3 210 1 54 1 318 1 252 8 15 3 320 3 156 1 94 6 21 3 169 1 334 1 174 5 223 3 
36 1 39 1 188 1 301 2 303 1 271 1 44 1 136 1 249 1 147 1 150 3 210 1 54 1 318 1 252 8 15 3 320 3 156 2 94 6 21 3 169 1 334 1 174 5 223 3 
36 1 318 1 252 7 320 3 116 1 156 3 301 6 5 1 80 3 332 2 291 3 174 4 135 3 
36 1 39 1 188 1 301 1 303 1 271 1 44 1 136 1 249 1 147 1 150 3 210 1 54 1 318 1 252 8 15 3 320 3 156 1 94 6 21 3 169 1 334 1 174 5 223 3 
63 1 199 1 276 1 1 1 123 1 227 1 114 1 
209 1 1 1 119 1 237 1 123 1 63 1 199 1 276 1 111 1 227 1 143 1 114 1 
184 1 117 1 72 1 92 1 191 1 22 4 197 1 166 1 25 4 310 4 176 1 180 1 251 1 
317 1 117 1 92 1 22 2 191 2 215 1 244 1 25 2 333 1 310 2 176 1 250 1 52 1 146 1 
257 1 184 1 25 1 42 1 310 1 92 1 137 1 191 1 22 1 129 1 
117 1 92 1 96 1 22 2 240 1 191 1 166 1 25 2 310 2 176 1 33 1 
184 1 314 1 117 3 72 1 92 2 22 5 191 2 166 1 25 5 310 4 176 2 250 1 33 1 283 1 180 1 251 1 
184 1 285 1 117 3 72 1 92 2 22 5 191 2 166 1 25 5 310 4 176 2 250 1 33 1 283 1 180 1 251 1 
184 1 25 1 117 1 56 1 310 1 92 1 72 1 176 1 191 1 22 1 251 1 
184 1 1 2 117 1 93 1 92 1 77 1 191 1 22 1 63 2 199 1 276 1 275 1 25 1 310 1 176 1 52 1 11 1 34 1 
1 2 265 1 117 3 121 1 77 1 191 1 306 1 199 2 276 1 275 2 309 1 310 1 250 1 52 2 11 1 13 1 92 1 93 1 22 1 63 2 25 1 176 2 34 1 
1 2 265 1 117 3 121 1 77 1 191 1 131 1 306 1 197 1 199 2 276 1 275 2 309 1 310 2 250 1 52 2 11 1 13 1 92 1 22 2 63 2 25 2 176 2 34 1 
184 1 265 1 117 4 191 1 197 1 46 2 310 3 85 2 87 1 250 1 52 1 141 1 140 1 13 1 92 1 322 1 59 1 61 1 22 3 219 1 327 1 25 3 176 1 
184 1 265 1 117 4 92 1 322 1 59 1 191 1 22 3 61 1 219 1 197 1 46 2 25 3 310 3 176 1 85 2 250 1 140 1 141 1 52 1 229 1 13 1 
25 1 82 1 310 1 92 1 191 1 22 1 
314 1 184 2 321 1 117 3 92 2 96 1 43 1 22 7 191 3 166 1 25 7 82 1 333 1 310 6 247 1 176 2 33 1 52 1 283 1 68 1 146 1 
36 1 38 1 1 2 116 1 117 1 301 2 77 1 191 1 5 1 274 1 45 1 132 1 199 1 276 2 275 1 310 1 49 1 135 1 142 1 52 1 11 1 150 2 318 1 252 6 15 2 320 3 154 1 156 2 92 1 18 2 93 1 160 1 94 4 21 2 22 1 63 2 166 1 291 1 332 1 25 1 174 3 223 2 176 1 31 1 34 1 232 2 181 1 
184 1 1 1 187 1 193 1 199 1 275 1 280 1 85 2 11 1 12 1 17 1 19 2 22 1 216 1 219 1 25 1 291 1 26 1 229 1 113 1 296 4 36 2 37 1 115 2 235 1 117 2 116 1 302 5 243 1 46 2 309 1 47 2 310 1 135 1 141 2 140 2 318 2 57 1 255 1 322 1 59 1 61 2 63 1 259 1 175 2 179 2 67 1 
166 1 25 2 260 1 82 1 117 2 310 2 92 1 176 1 322 1 52 1 191 2 68 1 22 2 
184 1 1 2 117 1 92 1 77 1 191 1 22 1 63 2 131 1 199 1 276 1 275 1 25 1 310 1 176 1 52 1 11 1 34 1 
321 1 117 1 92 1 22 1 191 2 25 1 333 1 310 1 176 1 250 1 52 1 68 1 146 1 
276 1 212 1 202 1 134 1 2 1 
212 2 121 1 2 2 59 1 288 1 98 1 306 1 46 2 168 1 276 1 133 1 309 1 202 1 226 1 85 2 134 2 140 1 141 1 113 1 
63 1 199 1 245 1 331 1 212 1 1 1 220 1 202 1 2 1 
133 1 202 1 288 1 
195 1 311 1 270 1 126 1 
195 2 100 1 311 1 336 1 157 1 270 1 
195 1 311 1 270 1 126 1 
195 1 311 1 270 1 126 1 
53 1 307 1 211 1 
195 1 311 1 270 1 126 1 
195 1 311 1 270 1 126 1 
124 1 
195 1 311 1 270 1 126 1 
307 1 56 1 254 1 89 1 
195 1 311 1 270 1 
233 1 336 1 295 1 
195 1 311 1 270 1 126 1 
195 1 311 1 270 1 
195 1 311 1 270 1 126 1 
195 1 311 1 270 1 126 1 
195 1 311 1 270 1 126 1 
195 1 311 1 270 1 126 1 269 1 
195 1 311 1 270 1 126 1 
195 1 42 1 311 1 137 1 270 1 126 1 
195 1 311 1 270 1 126 1 
195 1 311 1 270 1 126 1 
100 1 6 1 307 1 161 1 
307 1 254 1 

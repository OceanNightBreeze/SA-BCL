#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 306 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 0
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4786 | = null
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z | CONDITION | 731 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7182 | if (x) -> if (!x)

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
269 1 32 2 315 1 100 2 34 3 101 1 135 1 60 1 168 2 169 1 42 1 217 2 16 2 176 9 93 4 246 1 111 9 143 1 283 1 70 2 250 1 352 1 330 1 72 5 290 6 123 1 356 1 314 2 
269 1 32 2 315 1 100 2 34 3 101 1 135 1 60 1 168 2 169 1 42 1 217 2 16 2 176 9 93 4 246 1 111 9 143 1 283 1 70 2 250 1 352 1 330 1 72 5 290 6 123 1 356 1 314 2 
269 1 32 2 315 1 100 2 34 4 101 1 135 1 60 1 168 2 169 1 42 1 217 2 16 2 176 10 93 5 246 1 111 10 143 1 283 1 70 2 250 1 352 1 330 1 72 6 290 7 123 1 356 1 314 2 
269 1 32 2 100 2 34 2 101 1 135 1 60 1 168 2 169 1 42 1 217 2 16 2 176 7 93 3 246 1 111 7 143 1 283 1 70 2 250 1 352 1 330 1 72 4 290 4 123 1 356 1 314 1 
42 1 217 1 32 1 315 1 100 1 16 1 34 1 176 4 93 2 246 1 111 4 70 1 135 1 250 1 72 3 290 3 169 1 314 2 
42 1 217 1 370 1 32 1 100 1 16 1 280 1 176 2 246 1 111 2 60 1 321 1 72 1 330 1 168 1 169 1 
42 1 100 2 16 2 34 1 176 3 93 1 246 1 111 3 143 1 168 1 72 2 290 1 169 1 
155 1 32 1 100 2 315 1 34 3 101 1 135 1 168 1 11 1 169 1 42 1 217 1 16 2 176 9 93 4 246 1 143 1 111 9 70 1 250 1 72 5 290 7 356 1 314 2 
155 1 32 1 100 2 315 1 34 3 101 1 135 1 168 1 11 1 169 1 42 1 217 1 16 2 176 9 93 4 246 1 143 1 111 9 70 1 250 1 72 5 290 7 356 1 314 2 
272 1 288 1 312 1 
160 2 342 1 312 1 
206 1 336 2 103 2 311 2 199 2 45 2 3 1 252 2 
29 2 361 1 206 1 336 2 53 1 78 1 129 1 295 2 3 1 5 1 163 2 103 3 276 2 189 1 39 1 12 1 343 1 62 1 344 1 66 1 199 2 45 2 109 1 91 1 326 1 177 1 113 2 115 1 69 1 375 1 350 1 264 1 351 1 266 1 311 2 24 1 252 3 
206 1 336 1 240 1 103 1 311 1 107 1 199 1 45 1 252 1 268 1 
272 1 240 1 199 1 82 1 83 1 249 1 146 1 95 1 103 1 275 1 26 1 99 1 252 1 312 1 
272 1 336 1 240 1 45 1 199 1 82 1 83 1 249 1 95 2 146 1 311 1 103 1 275 2 252 1 312 1 
157 1 95 1 275 1 81 1 20 1 
222 1 272 1 157 1 95 2 275 2 81 1 312 1 74 1 
157 1 95 1 275 1 
206 1 336 1 240 1 107 1 45 1 199 1 81 1 95 1 311 1 103 1 275 1 97 1 252 1 268 1 
312 1 
272 1 157 1 117 1 95 2 275 2 81 1 312 1 74 1 
272 1 157 2 345 1 296 1 198 1 244 1 188 2 174 1 81 2 179 1 116 1 95 5 50 2 275 5 151 1 289 2 235 1 312 1 74 1 
288 1 3 1 
336 1 199 2 45 1 3 2 376 1 103 2 311 1 354 1 252 2 
262 1 44 1 159 1 
29 1 344 1 53 1 129 1 3 1 91 1 177 1 5 1 113 1 69 1 103 1 121 1 276 1 252 1 12 1 343 1 
344 1 29 1 336 1 53 1 129 1 139 1 210 1 45 1 199 1 91 1 177 1 5 1 113 1 262 1 69 1 103 2 276 1 12 1 343 1 252 2 
336 4 139 1 210 2 45 4 199 5 3 1 376 1 48 1 8 1 167 1 103 5 311 1 26 1 252 5 
134 1 336 2 240 1 103 2 199 2 45 2 252 2 268 1 
336 3 311 1 103 3 210 1 199 3 45 3 3 1 252 3 
336 1 240 1 103 1 199 1 45 1 252 1 268 1 
376 1 336 1 240 1 103 1 311 1 199 1 45 1 354 1 252 1 
29 1 361 1 206 1 53 1 336 3 78 1 129 1 295 1 210 1 3 1 340 1 82 1 5 1 83 1 163 2 103 4 275 1 276 1 39 1 12 1 343 1 62 1 344 1 66 1 139 1 240 1 199 3 45 3 221 1 91 1 326 1 177 1 249 1 113 1 69 1 350 1 376 1 264 1 146 1 95 1 351 1 311 2 24 1 252 4 
48 1 336 1 103 2 199 2 45 1 210 1 3 1 26 1 252 2 
336 3 240 1 139 1 210 2 45 3 199 3 340 1 82 1 83 1 248 1 249 1 376 1 95 1 146 1 311 1 103 3 275 1 252 3 312 1 
336 2 159 1 210 1 45 2 199 2 262 1 376 1 311 1 103 2 252 2 
29 1 344 1 53 1 129 1 3 1 91 1 177 1 5 1 113 1 69 1 103 1 276 1 252 1 343 1 12 1 
29 1 344 1 129 1 3 1 91 1 5 1 113 1 161 1 69 1 103 1 276 1 104 1 252 1 343 1 12 1 
361 2 156 1 295 4 159 2 163 2 166 1 277 1 39 1 62 1 44 2 346 1 195 1 200 1 326 1 145 1 262 2 375 2 350 1 351 1 24 1 149 1 182 1 98 1 152 1 
134 1 146 1 336 1 240 1 103 1 199 1 45 1 252 1 
171 1 173 1 
171 1 173 1 
212 1 2 1 
212 1 2 1 
212 1 2 1 
239 1 171 1 173 1 
258 1 171 1 173 1 
310 1 212 1 184 1 171 2 2 1 173 2 
239 1 171 1 173 1 
239 1 171 1 173 1 
171 1 120 1 173 1 
171 1 120 1 173 1 
171 1 120 1 173 1 
333 1 270 1 334 1 30 1 336 2 3 1 273 1 341 1 274 1 103 2 275 1 38 1 367 1 13 1 278 1 258 1 171 1 45 2 173 1 199 2 327 1 22 1 95 1 252 2 
333 2 154 1 30 2 334 3 279 2 184 1 171 2 197 1 173 2 90 1 4 1 348 1 341 2 365 1 95 2 274 2 275 2 367 1 312 1 
70 1 217 1 32 1 
217 1 32 1 321 1 
70 2 328 1 32 3 320 1 321 1 253 1 
70 1 32 2 320 1 321 1 73 1 253 1 
70 1 32 2 320 1 321 1 253 2 
360 1 272 1 157 1 130 1 131 1 188 1 54 1 273 1 81 4 160 3 342 1 275 5 13 1 345 2 346 1 88 1 200 1 198 3 245 1 174 1 373 2 327 1 95 5 49 2 50 1 182 1 289 1 122 1 98 1 229 2 74 1 312 2 
272 1 157 6 130 3 131 1 188 2 54 2 81 7 160 9 342 3 366 1 275 9 194 1 137 1 43 1 345 6 346 3 88 2 243 1 200 3 198 8 174 1 20 5 327 4 95 9 49 6 50 2 251 1 151 1 182 3 289 2 98 3 229 6 52 5 312 5 74 1 
272 1 360 1 130 1 188 1 54 1 81 2 160 4 342 2 275 3 346 1 345 2 88 1 200 1 198 3 245 1 327 1 373 1 95 3 50 1 49 2 289 1 151 1 182 1 98 1 229 2 312 3 
272 1 360 1 130 2 188 1 54 1 81 3 160 7 342 3 275 4 194 1 346 2 345 4 88 1 243 1 200 2 198 5 245 1 327 2 373 2 95 4 49 4 50 1 251 1 289 1 151 1 182 2 98 2 229 4 312 4 
15 1 288 1 12 1 
126 1 12 1 
234 1 
12 1 343 1 5 1 
136 1 12 1 
12 1 343 1 
15 2 304 1 92 1 12 3 343 1 5 1 
76 1 87 1 236 1 77 1 361 3 346 1 347 1 295 7 200 1 110 1 223 1 36 1 375 4 51 1 277 2 292 2 152 3 
76 1 87 1 236 1 77 1 361 3 346 1 347 1 295 7 200 1 110 1 223 1 36 1 375 4 51 1 277 2 292 2 152 3 
41 1 76 1 87 1 236 1 77 1 361 3 346 1 347 1 295 7 200 1 110 1 223 1 36 1 375 4 51 1 277 2 292 2 152 3 
76 1 77 1 361 15 205 1 295 31 130 3 186 1 36 1 163 2 164 1 165 4 277 5 39 1 236 2 87 2 64 3 371 1 346 4 347 5 200 4 110 2 326 1 201 1 223 1 375 16 350 1 71 1 51 2 24 1 182 3 98 3 27 1 292 3 152 10 
76 1 87 1 236 1 361 4 346 1 347 1 241 1 295 9 200 1 110 1 326 2 223 1 36 1 163 4 375 5 350 2 51 1 24 2 227 1 277 3 27 1 39 2 292 2 152 4 
29 1 230 1 32 2 100 1 207 1 129 1 211 1 321 1 276 1 168 1 257 1 169 1 344 1 305 1 42 1 217 1 16 1 172 1 176 2 19 1 142 1 246 1 111 2 113 1 70 1 180 1 328 1 377 1 72 1 290 1 
29 1 153 1 230 1 32 2 100 1 129 1 211 1 59 1 256 1 321 1 276 1 168 1 257 1 169 1 344 1 217 1 16 1 172 1 176 3 19 1 142 1 246 1 111 3 113 1 70 1 328 1 180 1 377 1 72 1 290 2 
29 1 230 1 32 2 129 1 59 1 256 1 321 1 168 1 276 1 257 1 169 1 344 1 217 1 176 2 19 1 142 1 246 1 111 2 113 1 70 1 180 1 328 1 377 1 72 1 290 2 
29 1 153 1 230 2 128 1 338 1 100 1 129 1 276 1 168 2 257 2 343 1 12 1 193 1 344 1 259 1 16 1 307 1 91 1 176 1 142 2 111 1 372 1 113 1 
344 1 29 1 42 1 217 1 230 1 32 2 207 1 100 1 129 1 16 1 172 1 176 1 19 1 142 1 111 1 211 1 113 1 70 1 328 1 180 1 377 1 256 1 321 1 168 1 276 1 257 1 
158 1 
338 1 157 6 160 2 342 2 103 1 343 1 12 1 14 2 344 1 216 1 170 2 345 2 17 1 260 4 174 1 113 2 114 1 349 1 26 1 312 2 74 3 29 2 272 1 128 1 316 2 129 1 185 1 188 1 232 2 82 1 83 1 233 1 319 1 275 5 276 2 240 1 88 1 242 2 196 1 198 2 199 1 140 1 91 2 249 1 95 5 202 1 146 1 50 1 329 1 378 2 289 1 332 2 99 1 252 1 204 1 
157 2 185 1 82 1 83 1 319 1 103 1 275 3 240 1 242 1 199 1 140 1 260 2 249 1 114 1 95 3 146 1 117 1 329 1 26 1 252 1 99 1 74 1 
272 1 157 1 185 1 82 1 232 1 83 1 319 1 103 1 275 3 240 1 199 1 140 1 260 3 249 1 114 1 95 3 146 1 117 1 329 1 26 1 252 1 99 1 312 1 74 1 
272 1 157 2 185 1 82 1 232 1 83 1 319 1 103 1 275 3 240 1 242 1 199 1 140 1 260 3 249 1 114 1 117 1 95 3 146 1 329 1 26 1 252 1 99 1 332 1 74 1 312 1 
272 5 157 7 316 2 185 1 1 1 188 1 232 4 82 1 83 1 319 1 342 2 213 1 103 1 275 5 14 2 170 2 345 1 240 1 196 1 242 4 198 1 199 1 220 1 140 1 260 6 174 1 46 1 249 1 114 1 117 1 95 5 146 1 50 1 119 1 329 1 378 2 289 1 26 1 99 1 252 1 332 4 204 1 312 5 74 3 
157 4 160 2 342 2 103 1 14 2 170 2 345 1 260 4 174 1 114 1 349 1 26 1 74 2 312 2 272 1 185 1 316 2 188 1 82 1 232 2 83 1 319 1 275 4 240 1 196 1 242 2 199 1 198 1 140 1 249 1 146 1 95 4 50 1 329 1 378 2 289 1 252 1 99 1 332 2 204 1 
272 1 157 4 316 2 185 1 1 1 188 1 232 2 82 1 83 1 319 1 342 2 103 1 275 4 14 2 170 2 345 1 240 1 242 2 196 1 198 1 199 1 140 1 260 4 174 1 46 1 249 1 114 1 95 4 146 1 50 1 329 1 119 1 378 2 26 1 289 1 332 2 252 1 99 1 204 1 312 1 74 2 
272 1 157 4 316 2 185 1 1 1 188 1 232 2 82 1 83 1 319 1 342 2 103 1 275 4 14 2 170 2 345 1 240 1 242 2 196 1 198 1 199 1 140 1 260 4 174 1 46 1 249 1 114 1 95 4 146 1 50 1 329 1 119 1 378 2 26 1 289 1 332 2 252 1 99 1 204 1 312 1 74 2 
272 1 157 4 185 1 1 1 188 1 232 2 82 1 83 1 160 2 363 1 319 1 103 1 275 4 368 2 14 2 170 2 345 1 238 1 240 1 242 2 196 1 219 1 198 1 199 1 140 1 260 4 174 1 247 2 249 1 114 1 95 4 146 1 50 1 329 1 26 1 289 1 332 2 252 1 99 1 312 1 74 2 
272 1 157 5 316 2 185 1 1 1 188 1 82 1 232 3 83 1 319 1 342 2 103 1 275 4 14 2 170 2 345 1 240 1 196 1 242 3 198 1 199 1 140 1 260 5 220 1 174 1 46 1 249 1 114 1 95 4 146 1 50 1 329 1 119 1 378 2 289 1 26 1 252 1 99 1 332 3 204 1 312 1 74 2 
272 1 157 5 316 2 185 1 1 1 188 1 82 1 232 3 83 1 319 1 342 2 103 1 275 4 14 2 170 2 345 1 240 1 196 1 242 3 198 1 199 1 140 1 260 5 220 1 174 1 46 1 249 1 114 1 95 4 146 1 50 1 329 1 119 1 378 2 289 1 26 1 252 1 99 1 332 3 204 1 312 1 74 2 
272 1 157 4 185 1 188 1 232 2 82 1 83 1 160 2 319 1 103 1 275 4 368 2 14 2 170 2 345 1 238 1 240 1 242 2 196 1 198 1 199 1 140 1 260 4 174 1 247 2 249 1 114 1 349 1 95 4 146 1 329 1 50 1 289 1 26 1 332 2 99 1 252 1 312 1 74 2 
76 1 361 3 295 6 159 1 3 2 163 2 36 1 277 2 39 1 62 1 44 1 346 1 200 1 326 1 110 1 223 1 262 1 350 1 375 3 351 1 51 1 24 1 149 1 288 1 292 1 152 2 
361 6 78 1 295 14 159 4 130 2 3 1 102 1 163 4 165 3 85 1 189 1 277 1 39 2 62 2 105 1 44 11 64 3 371 1 346 2 347 1 200 1 326 2 141 1 262 11 350 2 375 8 71 1 351 1 353 1 24 2 182 2 98 1 152 2 
29 1 31 1 361 1 53 1 336 1 78 1 129 1 209 1 295 2 159 1 210 1 3 1 5 1 163 2 85 1 103 2 276 1 189 1 12 1 343 1 39 1 62 1 344 1 215 1 139 1 199 1 45 1 91 1 177 1 326 1 113 1 69 1 350 1 375 1 351 1 24 1 121 1 252 2 
293 1 336 1 335 2 53 2 339 1 295 20 159 7 210 1 3 2 5 2 163 6 256 1 103 3 343 2 12 2 62 3 344 2 306 2 66 2 346 3 347 4 110 1 177 2 178 1 223 1 113 3 69 2 262 7 350 3 351 3 24 3 182 2 29 3 76 1 361 10 78 1 129 2 130 2 36 1 85 1 276 3 189 1 277 4 39 3 44 7 139 1 200 3 45 1 199 1 91 1 326 3 375 10 285 2 147 2 51 1 98 2 252 3 292 1 152 8 
29 7 361 1 128 1 336 1 338 1 78 1 129 2 295 2 210 1 132 1 300 1 163 4 7 1 256 1 103 1 276 8 189 1 12 3 39 2 343 2 62 2 344 2 305 1 65 1 199 1 45 1 91 2 326 2 113 8 47 1 115 2 350 2 375 1 287 1 351 2 149 1 24 2 252 1 380 1 
361 2 336 1 295 3 159 1 130 1 163 2 85 1 103 1 277 1 39 1 62 1 44 1 346 1 45 1 199 1 200 1 326 1 262 1 376 1 350 1 375 1 351 1 311 1 24 1 25 1 182 1 98 1 252 1 152 1 
44 1 195 1 346 1 347 1 295 2 159 1 326 1 262 1 163 2 350 1 375 2 351 1 149 1 24 1 182 1 39 1 62 1 152 1 
44 1 361 2 295 2 159 1 200 1 326 1 262 1 163 2 145 1 350 1 351 1 149 1 24 1 277 1 98 1 39 1 62 1 152 1 
361 2 295 4 159 2 130 1 163 2 277 1 39 1 62 1 44 2 346 1 347 1 200 1 326 1 262 2 375 2 350 1 351 1 24 1 149 1 182 1 98 1 152 2 
44 1 195 1 346 1 347 1 295 2 159 1 326 1 262 1 47 1 163 2 350 1 375 2 351 1 24 1 182 1 39 1 62 1 152 1 
44 1 361 2 295 2 159 1 200 1 326 1 262 1 47 1 163 2 145 1 350 1 351 1 24 1 277 1 98 1 39 1 62 1 152 1 
361 2 295 4 159 2 130 1 163 2 277 1 39 1 62 1 44 2 346 1 347 1 200 1 326 1 47 1 262 2 375 2 350 1 351 1 24 1 182 1 98 1 152 2 
44 2 361 2 346 1 347 1 295 4 159 2 200 1 130 1 326 1 262 2 163 2 350 1 375 2 351 1 24 1 277 1 182 1 98 1 39 1 62 1 152 2 
29 1 361 1 53 1 78 1 129 1 295 2 3 1 5 1 163 2 103 1 276 1 189 1 343 1 12 1 39 1 62 1 344 1 66 1 91 1 177 1 326 1 113 1 69 1 375 1 350 1 351 1 24 1 252 1 
29 1 361 1 78 1 129 1 295 2 3 1 5 1 6 1 161 1 163 2 103 1 276 1 189 1 104 1 343 1 12 1 39 1 62 1 344 1 91 1 326 1 113 1 69 1 375 1 350 1 351 1 24 1 252 1 
361 2 295 4 159 2 130 1 163 2 85 1 277 1 39 1 62 1 44 2 346 1 347 1 200 1 326 1 262 2 375 2 350 1 351 1 24 1 182 1 98 1 152 2 
29 1 361 2 53 1 335 1 129 1 295 4 159 2 130 1 5 1 163 2 103 1 276 1 277 1 343 1 12 1 39 1 62 1 344 1 305 1 44 2 346 1 66 1 347 1 200 1 177 1 326 1 113 1 262 2 69 1 375 2 350 1 351 1 24 1 182 1 98 1 252 1 152 2 
361 1 336 1 295 3 362 1 159 1 130 1 163 2 85 1 103 1 39 1 62 1 44 1 346 1 347 1 200 1 45 1 199 1 326 1 262 1 376 1 350 1 375 2 351 1 311 1 24 1 182 1 98 1 252 1 152 1 
0 1 359 2 361 10 295 19 130 3 318 2 133 1 163 4 165 2 86 1 277 3 39 2 64 1 371 1 346 3 241 1 347 3 200 3 281 1 326 2 21 1 350 2 375 9 71 1 96 1 24 2 182 3 291 1 98 3 152 6 
0 1 359 4 361 12 295 26 130 3 318 1 163 6 165 2 86 2 277 2 214 1 39 3 322 1 64 2 371 2 346 3 347 2 241 1 200 2 281 1 308 1 326 3 21 2 350 3 375 14 265 1 181 1 96 1 225 1 24 3 182 3 98 2 27 2 152 4 
0 1 76 1 359 4 361 21 295 41 130 4 318 1 133 1 36 1 163 6 165 4 86 1 277 4 214 1 322 1 39 3 323 1 64 3 371 3 346 5 241 1 347 4 200 5 281 1 110 1 308 1 326 3 223 1 21 2 350 3 375 20 181 1 265 1 71 1 96 1 51 1 225 1 24 3 182 4 98 4 27 1 292 1 152 8 
0 1 76 1 359 4 361 18 295 38 130 4 318 1 133 1 36 1 163 8 165 4 86 1 277 4 214 1 322 1 39 4 323 1 64 3 371 3 346 5 241 1 347 3 200 4 281 1 110 1 308 1 326 4 223 1 21 2 350 4 375 20 181 1 265 1 71 1 96 1 51 1 225 1 24 4 182 4 98 3 27 2 292 1 152 7 
0 1 76 1 359 4 361 25 295 52 130 7 318 1 36 1 163 4 165 4 86 1 277 7 214 1 322 1 39 2 64 4 371 2 346 8 241 1 347 7 200 8 281 1 110 1 308 1 326 2 223 1 21 1 350 2 375 27 181 1 265 1 71 2 353 2 96 1 51 1 225 1 24 2 182 7 98 7 27 1 292 1 152 14 
333 1 154 1 30 1 341 1 365 1 184 1 218 1 171 1 274 1 173 1 
258 1 38 1 
333 1 30 1 341 1 58 1 171 1 274 1 173 1 297 1 55 1 
261 1 239 1 
310 1 120 1 298 1 
333 1 154 1 30 1 334 2 279 1 184 1 171 1 173 1 90 1 4 1 348 1 341 1 365 1 95 1 274 1 275 1 367 1 312 1 
333 1 154 1 30 1 334 2 279 1 184 1 171 1 173 1 90 1 4 1 348 1 341 1 365 1 95 1 274 1 275 1 367 1 312 1 
333 1 154 1 30 1 334 2 279 1 184 1 171 1 173 1 90 1 4 1 348 1 341 1 365 1 95 1 274 1 275 1 367 1 312 1 
261 1 310 1 239 1 
261 1 310 1 239 1 
120 1 298 1 
310 1 120 1 298 1 
22 1 278 1 
333 1 270 1 30 1 334 1 336 2 3 1 81 1 273 1 341 1 274 1 103 2 275 1 38 1 13 1 278 1 303 1 258 1 279 1 171 1 173 1 45 2 199 2 90 1 327 1 22 1 95 1 252 2 
29 2 361 1 294 1 78 1 129 1 295 2 187 1 300 1 163 2 85 1 103 2 276 2 189 1 12 1 343 1 39 1 62 1 344 1 108 1 199 2 326 1 113 2 115 2 350 1 375 1 351 1 23 1 267 1 24 1 252 2 380 1 
344 1 29 2 305 1 63 1 217 1 230 1 32 2 129 1 172 1 94 1 113 2 70 1 328 1 180 1 256 1 377 1 148 1 321 1 276 2 
29 1 344 1 63 1 217 1 230 1 32 2 129 1 172 1 113 1 70 1 328 1 180 1 256 1 377 1 321 1 276 1 150 1 
344 1 29 1 230 1 138 1 128 1 338 1 129 1 91 1 113 1 148 1 276 1 12 1 343 1 193 1 
344 1 29 1 63 1 217 1 230 1 32 2 129 1 172 1 94 1 113 1 70 1 328 1 180 1 256 1 377 1 148 1 321 1 276 1 
75 1 
272 1 116 1 345 1 296 1 198 1 288 1 312 1 
272 1 157 1 316 1 188 1 160 1 342 1 275 1 345 1 198 1 174 1 95 1 50 1 378 1 289 1 204 1 312 2 74 1 
344 2 29 1 304 1 306 1 126 1 129 1 198 1 188 1 91 1 174 1 5 1 144 1 254 1 113 1 282 1 50 1 276 1 289 1 12 2 343 1 
272 2 157 1 183 1 130 2 188 2 160 6 165 1 37 1 342 3 275 1 322 1 40 2 64 1 371 1 345 5 346 2 88 1 17 1 198 8 200 2 174 2 67 1 308 1 265 1 181 1 95 1 49 5 50 2 225 1 289 2 182 2 229 5 98 2 74 1 312 5 
127 1 206 1 336 1 188 1 36 1 103 1 275 1 40 2 346 2 345 2 240 1 107 1 200 1 198 2 45 1 199 1 174 1 67 1 110 1 46 1 95 1 50 1 51 1 311 1 289 1 97 1 252 1 268 1 
272 1 345 1 296 1 198 1 188 1 174 1 116 1 50 1 289 1 312 1 
306 1 346 2 345 5 130 2 200 2 198 5 67 1 160 10 342 5 49 5 182 2 229 5 98 2 40 2 312 5 
272 1 95 1 157 1 275 1 312 1 74 1 
29 4 128 1 157 4 338 1 129 1 188 2 79 1 35 2 56 1 299 1 275 3 276 4 12 1 343 1 344 1 216 1 345 2 88 2 198 2 17 2 91 2 174 1 113 4 202 1 95 3 50 2 151 1 289 2 74 2 
29 1 361 1 206 1 336 2 53 1 78 1 129 1 295 1 3 1 5 1 163 2 103 3 276 1 39 1 343 1 12 1 62 1 344 1 66 1 199 2 45 2 91 1 326 1 177 1 113 1 69 1 264 1 350 1 351 1 311 2 24 1 252 3 
272 2 345 2 88 1 198 1 17 1 188 1 174 1 160 4 342 2 49 2 50 1 289 1 229 2 292 1 312 4 
84 1 333 1 274 1 
333 1 22 1 61 1 274 1 331 1 
84 1 333 1 274 1 
84 1 333 1 274 1 
333 1 255 1 274 1 
333 1 255 1 274 1 
333 1 255 1 274 1 
333 1 274 1 
171 1 173 1 
76 1 361 4 346 1 347 1 295 8 200 1 326 2 110 1 223 1 36 1 163 4 375 4 350 2 51 1 24 2 277 2 39 2 27 1 292 1 152 3 
76 1 361 3 346 1 295 6 200 1 110 1 223 1 36 1 375 3 51 1 288 1 277 2 292 1 152 2 
361 2 346 1 347 1 295 4 200 1 130 1 326 1 162 1 163 2 350 1 375 2 24 1 277 1 182 1 98 1 39 1 152 2 
64 1 361 4 371 1 346 1 347 1 295 7 200 1 130 1 375 3 165 2 71 1 277 1 182 1 98 1 152 2 
76 1 361 12 295 23 130 2 36 1 163 4 165 2 277 5 39 2 64 2 346 3 347 4 200 3 110 2 326 2 141 1 309 1 223 1 375 11 350 2 71 1 353 1 51 2 24 2 182 2 98 2 27 2 292 1 152 9 
361 1 165 1 295 1 
375 1 64 1 295 1 
306 1 361 3 346 1 347 1 295 6 130 1 200 1 326 1 163 2 162 1 350 1 375 3 24 1 182 1 277 2 98 1 39 1 152 3 
361 6 295 12 130 2 163 2 165 1 277 1 322 1 39 1 64 1 371 1 346 2 347 1 241 1 200 2 326 1 308 1 350 1 375 6 265 1 181 1 24 1 225 1 182 2 98 2 152 2 
361 3 346 1 347 1 295 6 200 1 110 1 36 1 375 3 51 1 277 1 152 2 
76 1 361 2 347 1 295 3 110 1 326 1 309 1 223 1 163 2 375 1 350 1 51 1 24 1 277 1 27 1 39 1 152 2 
127 1 361 5 346 2 241 1 347 2 295 10 200 2 326 1 110 2 163 2 36 1 350 1 375 5 51 2 24 1 277 3 39 1 152 5 
346 1 241 1 347 1 295 2 326 1 163 2 350 1 375 2 24 1 182 1 39 1 152 1 
361 2 346 1 241 1 347 1 295 4 200 1 130 1 326 1 163 2 350 1 375 2 24 1 277 1 182 1 98 1 39 1 152 2 
361 2 241 1 347 1 295 3 133 1 326 3 110 1 309 1 163 6 350 3 375 1 51 1 24 3 277 1 27 1 39 3 152 2 
76 1 205 1 361 18 295 34 130 3 186 1 133 1 36 2 162 1 163 10 164 1 165 4 277 7 39 5 64 3 371 1 346 5 241 1 347 5 200 5 110 3 326 5 309 1 223 1 350 5 375 16 71 1 51 3 24 5 182 3 98 3 27 2 292 1 152 12 
76 1 361 4 295 8 163 2 36 1 165 1 277 2 322 1 39 1 64 1 346 1 371 1 241 1 200 1 326 1 110 1 223 1 350 1 375 4 51 1 24 1 292 1 152 2 
76 1 361 5 295 11 130 1 36 1 163 4 162 1 165 2 277 2 322 1 39 2 64 1 371 1 346 2 241 1 347 1 200 1 110 1 326 2 223 1 350 2 375 6 71 1 51 1 24 2 182 1 292 1 152 3 
76 1 361 10 295 19 130 2 36 1 162 1 163 6 165 1 277 3 322 1 39 3 64 1 371 1 346 3 347 1 241 1 200 3 110 1 326 3 308 1 223 1 350 3 375 9 265 1 181 1 51 1 225 1 24 3 182 2 98 2 27 1 292 1 152 4 
76 1 361 7 295 17 130 2 36 1 162 1 163 6 165 1 277 3 322 1 39 3 64 1 371 1 346 3 347 2 241 1 200 2 110 1 326 3 308 1 223 1 350 3 375 10 265 1 181 1 51 1 24 3 225 1 182 2 98 1 27 1 292 1 152 5 
76 1 361 4 295 8 163 2 36 1 165 1 277 2 322 1 39 1 64 1 346 1 371 1 241 1 200 1 326 1 110 1 223 1 350 1 375 4 51 1 24 1 292 1 152 2 
361 6 295 12 130 2 163 2 165 1 277 1 322 1 39 1 64 1 371 1 346 2 347 1 241 1 200 2 326 1 308 1 350 1 375 6 265 1 181 1 24 1 225 1 182 2 98 2 152 2 
76 1 361 8 295 18 130 2 36 1 162 1 163 8 165 1 277 3 322 1 39 4 64 1 371 1 346 3 347 2 241 1 200 2 110 1 308 1 326 4 223 1 350 4 375 10 265 1 181 1 51 1 225 1 24 4 182 2 98 1 27 2 292 1 152 5 
361 7 295 16 130 3 133 1 163 8 165 1 277 3 322 1 39 4 64 1 371 1 346 3 347 3 241 1 200 2 308 1 326 4 350 4 375 9 265 1 181 1 225 1 24 4 182 3 98 2 27 2 152 6 
76 1 361 4 346 1 347 3 295 7 200 1 110 3 223 2 36 1 375 3 51 3 277 3 152 6 
76 1 361 8 295 18 130 2 133 1 36 1 163 8 165 1 277 3 322 1 39 4 64 1 371 1 346 3 347 1 241 1 200 2 110 1 308 1 326 4 223 1 350 4 375 10 265 1 181 1 51 1 225 1 24 4 182 2 98 1 27 2 292 1 152 4 
48 1 271 1 103 1 199 1 3 1 26 1 252 1 
106 1 271 1 199 1 3 1 284 1 48 1 118 1 103 1 26 1 190 1 191 1 252 1 
344 1 29 1 113 1 128 1 338 1 129 1 288 1 276 1 91 1 12 1 343 1 
344 1 29 1 336 1 129 1 210 1 45 1 199 1 3 1 91 1 177 1 5 1 113 1 69 1 103 2 276 1 12 1 343 1 252 2 
344 1 29 1 136 1 336 2 240 1 129 1 210 1 45 1 199 2 3 1 35 1 177 1 5 2 249 1 113 1 69 1 286 1 146 1 103 2 276 1 12 3 343 2 252 2 
29 2 336 2 129 1 210 1 3 1 35 1 5 2 103 2 276 2 104 1 343 2 12 3 344 1 136 1 240 1 199 2 45 1 175 1 113 2 249 1 69 1 286 1 146 1 252 2 
29 3 126 1 272 1 157 1 129 1 35 1 5 1 83 1 364 1 275 2 276 3 12 4 343 1 344 1 15 1 136 1 324 1 91 1 175 1 113 3 286 1 95 2 312 1 
344 1 29 3 136 1 15 1 126 1 272 1 157 1 129 1 91 1 175 1 35 1 83 1 5 1 113 3 286 1 95 2 275 2 379 1 276 3 343 1 12 4 312 1 
344 1 29 1 113 1 129 1 276 1 132 1 
29 1 344 2 304 1 129 1 91 1 5 1 113 1 276 1 124 1 343 1 12 1 381 1 192 1 
29 1 76 1 361 3 336 1 335 1 53 1 129 1 295 6 159 1 210 1 3 2 5 1 36 1 163 4 85 1 103 2 276 1 277 2 12 1 343 1 39 2 62 2 344 1 305 1 44 1 346 1 66 1 200 1 108 1 199 1 45 1 110 1 326 2 177 1 223 1 113 1 262 1 69 1 375 3 350 2 351 2 147 1 51 1 24 2 252 2 292 1 152 2 
29 1 126 1 272 1 157 2 296 1 188 2 79 1 81 1 83 1 275 3 276 1 12 2 15 1 325 1 345 1 198 1 91 1 174 2 113 1 112 1 116 1 95 3 50 2 226 1 379 1 289 2 312 1 74 1 
29 2 344 2 305 1 15 1 304 1 129 1 132 1 5 1 254 1 113 2 276 2 343 1 12 2 
344 1 29 4 305 1 128 1 338 1 129 1 91 1 175 1 113 4 276 4 343 1 12 1 302 1 
29 1 344 2 293 1 237 1 129 1 5 1 113 1 276 1 203 1 343 1 12 1 381 1 192 1 
344 1 29 1 113 1 217 1 180 1 32 1 129 1 321 1 276 1 91 1 
29 2 344 1 305 1 129 1 187 1 300 1 113 2 256 1 276 2 343 1 12 1 
29 4 344 2 305 1 128 1 338 1 65 1 129 2 91 1 35 1 300 1 113 5 287 1 276 5 343 2 12 3 302 1 
29 4 344 2 305 1 128 1 338 1 65 1 129 2 91 1 35 1 300 1 113 5 224 1 276 5 343 2 12 3 302 1 
344 1 29 1 336 1 129 1 210 1 45 1 199 1 3 1 91 1 5 1 113 1 69 1 103 2 276 1 104 1 12 1 343 1 252 2 
29 1 344 2 304 1 129 1 35 1 5 1 113 1 276 1 124 1 343 1 12 1 381 1 192 1 
263 1 301 1 208 1 3 1 28 1 
357 1 272 1 240 1 208 2 3 1 340 1 81 1 80 1 82 1 83 1 68 1 249 1 263 1 301 2 146 1 95 2 275 2 28 2 312 1 
263 1 301 1 294 1 23 1 103 1 267 1 199 1 252 1 28 1 
357 1 263 1 80 1 
246 1 72 1 288 1 169 1 
246 1 111 1 100 1 16 1 72 1 176 1 169 1 
111 1 168 1 257 1 
42 1 231 1 100 1 16 1 176 3 111 3 246 1 9 1 60 2 72 1 313 1 169 1 
246 1 111 2 100 1 16 1 72 1 290 1 176 2 169 1 314 1 
42 1 217 1 32 1 100 1 16 1 176 1 93 1 111 1 70 1 250 1 72 1 
111 1 42 1 100 1 16 1 72 1 176 1 169 1 
246 1 111 1 42 1 100 1 16 1 176 1 169 2 
111 2 42 1 125 1 374 1 100 2 16 2 72 1 18 1 176 2 169 1 
42 1 100 1 16 1 34 1 176 3 93 1 101 1 246 1 111 3 72 2 290 2 356 1 169 1 
42 1 217 1 32 2 100 1 16 1 33 1 176 2 246 1 111 2 70 1 328 1 321 1 72 1 290 1 169 1 
42 1 100 2 315 1 16 2 34 1 176 4 93 1 246 1 111 4 72 2 290 2 169 1 314 1 
246 1 111 1 42 1 100 1 16 1 72 1 176 1 169 1 
358 1 231 1 100 1 16 1 34 1 176 4 93 1 246 2 111 4 60 1 72 3 290 2 313 1 169 2 
42 1 155 1 100 1 16 1 176 2 111 2 246 1 72 1 228 1 290 1 169 1 369 1 
42 1 231 2 100 1 16 1 176 3 111 3 246 1 60 2 10 1 72 1 313 1 169 1 
57 2 72 2 89 1 355 1 
111 1 42 1 337 1 100 1 16 1 176 1 
246 1 111 2 42 1 100 1 16 1 72 1 290 1 176 2 169 1 101 1 
317 1 
246 1 111 1 42 1 100 1 16 1 72 1 176 1 169 1 
246 1 111 3 42 1 60 1 100 1 16 1 72 1 290 1 176 3 101 1 169 1 
358 1 34 1 72 1 93 1 
72 1 169 1 

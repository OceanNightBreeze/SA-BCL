#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 5921 | if (x) -> if (!x)
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> %
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3738 | == -> >
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> -1
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
88 5 328 1 40 1 143 1 145 1 116 1 21 1 357 1 118 2 44 1 189 1 149 9 301 9 166 2 302 1 305 6 254 2 173 1 339 2 340 1 155 2 32 1 133 1 285 3 322 2 289 2 110 4 348 1 
88 5 328 1 40 1 143 1 145 1 116 1 21 1 357 1 118 2 44 1 189 1 149 9 301 9 166 2 302 1 305 6 254 2 173 1 339 2 340 1 155 2 32 1 133 1 285 3 322 2 289 2 110 4 348 1 
88 6 328 1 40 1 143 1 145 1 116 1 21 1 357 1 118 2 44 1 189 1 149 10 301 10 166 2 302 1 305 7 254 2 173 1 339 2 340 1 155 2 32 1 133 1 285 4 322 2 289 2 110 5 348 1 
88 4 328 1 40 1 143 1 145 1 116 1 21 1 357 1 118 1 189 1 149 7 301 7 166 2 302 1 305 4 254 2 173 1 339 2 340 1 155 2 32 1 133 1 285 2 322 2 289 2 110 3 348 1 
88 3 328 1 339 1 155 1 143 1 145 1 21 1 118 2 44 1 285 1 166 1 301 4 149 4 302 1 322 1 289 1 110 2 305 3 
254 1 88 1 328 1 339 1 340 1 155 1 217 1 145 1 20 1 77 1 32 1 301 2 149 2 166 1 302 1 289 1 
254 1 173 1 88 2 328 1 339 2 155 2 145 1 301 3 149 3 285 1 302 1 110 1 305 1 
254 1 173 1 88 5 328 1 339 2 40 1 143 1 155 2 145 1 21 1 118 2 44 1 189 1 283 1 166 1 301 9 149 9 377 1 285 3 302 1 322 1 289 1 110 4 305 7 
254 1 173 1 88 5 328 1 339 2 40 1 143 1 155 2 145 1 21 1 118 2 44 1 189 1 283 1 166 1 301 9 149 9 377 1 285 3 302 1 322 1 289 1 110 4 305 7 
195 1 334 1 92 1 
195 1 3 2 267 1 
74 2 139 1 109 2 297 2 182 2 231 1 187 2 79 2 
85 1 139 1 142 1 297 3 187 2 43 2 358 1 246 1 190 1 333 1 167 1 168 1 93 1 213 2 95 2 251 1 231 1 71 1 98 1 253 2 363 1 307 1 74 3 49 1 367 1 128 1 369 1 53 1 79 2 284 2 104 1 344 1 109 2 14 1 182 2 347 1 136 1 
74 1 81 1 109 1 297 1 182 1 231 1 187 1 304 1 119 1 79 1 
74 1 195 1 297 1 119 1 178 1 373 1 162 1 332 1 278 1 334 1 109 1 380 1 308 1 350 1 
74 1 195 1 297 1 187 1 79 1 119 1 178 2 373 1 162 1 332 1 334 1 109 1 182 1 308 1 350 2 
178 1 152 1 164 1 126 1 350 1 
372 1 178 2 152 1 195 1 334 1 126 1 70 1 350 2 
178 1 126 1 350 1 
74 1 152 1 297 1 54 1 187 1 119 1 79 1 178 1 81 1 109 1 231 1 182 1 304 1 350 1 
195 1 
178 2 152 1 195 1 334 1 126 1 70 1 160 1 350 2 
152 2 29 1 195 1 126 2 153 1 200 2 244 1 63 1 161 1 178 5 179 1 130 1 334 1 335 2 212 2 70 1 48 1 361 1 350 5 
74 2 49 1 367 1 142 1 369 1 52 1 297 2 53 1 156 1 79 1 284 1 104 1 93 1 344 1 109 1 95 1 204 1 182 1 253 1 307 1 
139 1 92 1 
74 2 364 1 139 2 144 1 297 2 187 1 79 1 109 2 182 1 
125 1 19 1 52 1 
74 1 49 1 139 1 367 1 142 1 369 1 297 1 117 1 53 1 284 1 104 1 344 1 93 1 95 1 253 1 307 1 
74 3 139 1 109 3 297 3 182 3 187 1 156 1 79 3 
74 1 81 1 109 1 297 1 182 1 119 1 79 1 
74 1 364 1 144 1 109 1 297 1 182 1 187 1 119 1 79 1 
139 1 142 1 242 1 297 4 187 2 119 1 43 1 358 1 246 1 162 1 332 1 333 1 167 1 168 1 93 1 169 1 213 2 95 1 251 1 231 1 253 1 363 1 307 1 308 1 74 4 364 1 49 1 367 1 369 1 53 1 156 1 79 3 178 1 284 1 373 1 104 1 344 1 109 3 14 1 204 1 182 3 347 1 350 1 136 1 
74 2 139 1 352 1 109 2 297 2 380 1 182 1 156 1 79 1 
74 3 364 1 195 1 341 1 297 3 187 1 156 2 119 1 79 3 178 1 373 1 162 1 332 1 169 1 109 3 204 1 182 3 350 1 308 1 
74 2 364 1 19 1 297 2 52 1 156 1 187 1 79 2 109 2 182 2 
74 1 49 1 139 1 367 1 142 1 369 1 297 1 53 1 284 1 104 1 344 1 93 1 95 1 253 1 307 1 
74 1 49 1 139 1 259 1 367 1 142 1 369 1 297 1 53 1 284 1 104 1 95 1 303 1 253 1 307 1 
19 2 353 1 39 1 208 1 243 1 42 1 43 4 65 1 333 2 167 1 168 1 213 2 215 1 251 1 98 2 124 1 363 1 101 1 125 2 313 1 52 2 14 1 268 1 347 1 
74 1 162 1 109 1 297 1 182 1 119 1 79 1 172 1 
74 5 364 1 352 1 139 1 297 5 156 2 187 1 79 4 22 1 109 5 204 1 380 1 182 4 99 1 
74 2 81 1 109 2 297 2 182 2 119 1 79 2 172 1 
205 1 4 1 
205 1 4 1 
192 1 220 1 
192 1 220 1 
192 1 220 1 
241 1 205 1 4 1 
36 1 205 1 4 1 
205 2 4 2 192 1 220 1 151 1 135 1 
241 1 205 1 4 1 
241 1 205 1 4 1 
205 1 4 1 202 1 
205 1 4 1 202 1 
205 1 4 1 202 1 
111 2 205 2 224 1 309 1 195 1 2 2 154 2 299 1 245 3 178 2 247 1 4 2 321 2 266 2 151 1 222 1 349 1 350 2 336 1 
36 1 74 2 111 1 205 1 139 1 2 1 297 2 79 2 245 1 178 1 9 1 105 1 4 1 320 1 345 1 321 1 250 1 109 2 266 1 56 1 214 1 182 2 349 1 350 1 
166 1 322 1 289 1 
166 1 77 1 289 1 
323 1 103 1 216 1 322 2 77 1 289 3 
323 1 103 1 174 1 322 1 77 1 289 2 
323 2 103 1 322 1 77 1 289 2 
87 1 206 1 58 2 89 1 3 3 209 1 42 1 277 2 360 1 334 1 335 1 94 1 212 1 70 1 47 1 215 1 48 1 124 1 152 4 29 3 195 2 126 1 313 1 200 1 178 5 179 2 105 1 203 2 345 1 267 1 56 1 350 5 
225 1 297 1 187 1 119 1 164 1 334 1 232 1 5 1 231 1 304 1 74 1 152 2 195 1 126 1 54 1 79 1 178 2 81 1 109 1 182 1 350 2 
87 1 89 1 58 1 3 4 209 1 42 1 63 1 277 2 334 1 335 1 212 1 94 1 47 1 215 1 124 1 152 2 29 3 195 3 313 1 200 1 178 3 179 2 203 2 345 1 267 2 350 3 
87 1 89 1 58 2 3 7 294 1 209 1 42 2 63 1 277 4 334 1 335 1 212 1 94 2 47 1 215 2 124 2 152 3 29 5 195 4 313 2 200 1 370 1 178 4 179 4 203 4 134 1 345 2 267 3 350 4 
369 1 15 1 92 1 
31 1 369 1 
293 1 
104 1 369 1 
104 1 369 3 15 2 123 1 53 1 239 1 
104 1 369 1 53 1 
369 1 51 1 
157 1 100 1 365 1 353 3 185 1 313 1 42 1 210 1 43 6 211 1 10 1 191 1 333 2 120 1 268 2 193 2 98 4 
157 1 100 1 365 1 353 3 185 1 313 1 42 1 210 1 43 7 211 1 10 1 191 1 333 3 120 1 268 2 193 2 98 4 
157 1 100 1 365 1 353 3 185 1 313 1 42 1 210 1 43 6 211 1 10 1 191 1 333 2 378 1 120 1 268 2 193 2 98 4 
157 1 59 1 353 13 185 2 41 1 62 3 210 3 42 5 43 38 211 1 191 2 333 19 150 1 168 1 120 2 94 2 213 2 96 1 251 1 215 2 193 3 98 19 124 2 363 1 100 3 258 1 365 5 313 5 316 3 10 1 376 1 35 1 268 8 347 1 
353 5 185 1 159 1 42 1 210 1 43 10 211 1 191 1 333 5 168 2 120 1 213 4 251 2 193 2 98 5 363 2 258 1 100 1 365 1 313 1 10 1 268 4 347 2 240 1 
292 1 88 1 158 1 328 1 1 1 114 1 145 1 163 1 24 1 227 1 166 1 165 1 149 2 301 2 302 1 95 1 170 1 305 1 253 1 6 1 307 1 254 1 216 1 339 1 367 1 155 1 77 1 284 1 322 1 289 2 
37 1 292 1 88 1 328 1 1 1 114 1 145 1 163 1 24 1 227 1 166 1 165 1 149 3 301 3 95 1 170 1 253 1 305 2 362 1 307 1 254 1 216 1 339 1 367 1 155 1 77 1 284 1 322 1 289 2 351 1 
37 1 88 1 328 1 1 1 114 1 145 1 24 1 227 1 165 1 149 2 301 2 166 1 95 1 170 1 253 1 305 2 307 1 254 1 216 1 367 1 77 1 284 1 322 1 289 2 351 1 
38 1 114 2 142 1 115 1 274 1 24 2 45 1 165 2 149 1 301 1 228 1 95 1 253 1 362 1 307 1 254 2 234 1 367 1 339 1 155 1 369 1 284 1 104 1 
292 1 1 1 114 1 163 1 24 1 227 1 166 1 165 1 149 1 301 1 302 1 95 1 170 1 253 1 6 1 307 1 254 1 216 1 339 1 367 1 155 1 77 1 284 1 322 1 289 2 351 1 
175 1 
86 1 87 1 184 2 3 2 142 2 274 1 332 1 278 1 334 1 228 1 335 1 95 2 97 1 48 1 281 1 338 2 195 2 198 2 200 1 201 1 342 1 284 2 104 1 108 4 238 1 109 1 13 1 350 5 355 2 295 1 297 1 119 1 359 1 162 1 66 2 212 1 70 3 27 1 253 2 72 2 307 1 308 1 74 1 29 2 312 2 126 6 367 1 369 1 178 5 179 2 373 1 82 1 267 2 380 1 84 1 
281 1 74 1 338 1 126 2 295 1 297 1 201 1 160 1 119 1 178 3 162 1 359 1 373 1 332 1 278 1 108 2 70 1 109 1 13 1 380 1 308 1 350 3 
295 1 297 1 119 1 160 1 359 1 162 1 332 1 278 1 334 1 70 1 308 1 74 1 281 1 195 1 126 1 198 1 201 1 178 3 373 1 108 3 109 1 13 1 380 1 350 3 
295 1 297 1 160 1 119 1 359 1 162 1 332 1 278 1 334 1 70 1 308 1 74 1 281 1 338 1 195 1 312 1 126 2 198 1 201 1 178 3 373 1 108 3 109 1 13 1 380 1 350 3 
271 1 184 2 332 1 278 1 334 5 335 1 48 1 281 1 338 4 195 5 198 4 200 1 201 1 11 1 108 6 109 1 13 1 350 5 112 1 295 1 355 2 297 1 119 1 160 1 162 1 359 1 66 2 212 1 70 3 27 1 308 1 72 2 74 1 29 1 312 4 126 7 78 1 178 5 373 1 179 1 317 1 267 2 380 1 84 1 
184 2 3 2 332 1 278 1 334 1 335 1 48 1 281 1 338 2 195 2 198 2 200 1 201 1 108 4 109 1 13 1 350 4 295 1 355 2 297 1 119 1 162 1 359 1 66 2 212 1 70 2 27 1 308 1 72 2 74 1 29 1 126 4 312 2 178 4 373 1 179 1 82 1 267 2 380 1 84 1 
184 2 271 1 355 2 295 1 297 1 119 1 359 1 162 1 332 1 66 2 278 1 334 1 335 1 212 1 70 2 48 1 27 1 72 2 308 1 74 1 281 1 338 2 29 1 195 1 312 2 126 4 198 2 200 1 201 1 78 1 178 4 179 1 373 1 11 1 108 4 109 1 267 2 13 1 380 1 84 1 350 4 
184 2 271 1 355 2 295 1 297 1 119 1 359 1 162 1 332 1 66 2 278 1 334 1 335 1 212 1 70 2 48 1 27 1 72 2 308 1 74 1 281 1 338 2 29 1 195 1 312 2 126 4 198 2 200 1 201 1 78 1 178 4 179 1 373 1 11 1 108 4 109 1 267 2 13 1 380 1 84 1 350 4 
184 2 113 1 3 2 295 1 297 1 119 1 359 1 162 1 332 1 66 2 278 1 334 1 25 1 335 1 212 1 70 2 229 2 171 1 48 1 308 1 74 1 281 1 338 2 29 1 195 1 312 2 126 4 198 2 197 2 200 1 201 1 178 4 179 1 373 1 11 1 108 4 109 1 13 1 380 1 84 1 350 4 
184 2 112 1 271 1 355 2 295 1 297 1 119 1 359 1 162 1 332 1 66 2 278 1 334 1 335 1 212 1 70 2 48 1 27 1 72 2 308 1 74 1 281 1 338 3 29 1 195 1 312 3 126 5 198 3 200 1 201 1 78 1 178 4 179 1 373 1 11 1 108 5 109 1 267 2 13 1 380 1 84 1 350 4 
184 2 112 1 271 1 355 2 295 1 297 1 119 1 359 1 162 1 332 1 66 2 278 1 334 1 335 1 212 1 70 2 48 1 27 1 72 2 308 1 74 1 281 1 338 3 29 1 195 1 312 3 126 5 198 3 200 1 201 1 78 1 178 4 179 1 373 1 11 1 108 5 109 1 267 2 13 1 380 1 84 1 350 4 
184 2 3 2 295 1 297 1 119 1 359 1 162 1 332 1 66 2 278 1 334 1 335 1 212 1 70 2 229 2 171 1 48 1 308 1 281 1 74 1 338 2 29 1 195 1 312 2 126 4 198 2 197 2 200 1 201 1 178 4 179 1 373 1 108 4 82 1 109 1 13 1 380 1 84 1 350 4 
139 2 19 1 353 1 185 1 210 1 42 1 92 1 43 5 211 1 65 1 333 2 167 1 168 1 213 2 251 1 193 1 98 3 363 1 100 1 125 1 313 1 52 1 10 1 14 1 268 1 347 1 
139 1 353 2 19 4 60 1 62 3 42 1 43 14 246 1 333 6 167 2 168 2 94 2 121 1 69 1 213 4 251 2 215 1 98 8 124 2 363 2 365 1 310 1 125 11 128 1 313 2 52 11 316 3 376 1 237 1 287 1 14 1 268 1 347 2 
0 1 139 1 19 1 142 1 297 2 117 1 43 2 246 1 333 1 167 1 93 1 168 1 213 2 95 1 251 1 253 1 98 1 307 1 363 1 74 2 49 1 367 1 128 1 369 1 53 1 156 1 79 1 284 1 104 1 264 1 344 1 237 1 109 1 14 1 204 1 182 1 347 1 16 1 
139 2 185 1 142 1 42 3 43 19 333 9 93 2 94 2 230 1 95 3 193 1 98 10 233 2 100 1 49 2 52 7 53 2 156 1 284 3 10 1 104 2 344 2 237 1 109 1 204 1 14 3 347 3 351 1 19 7 353 7 297 3 61 2 210 1 358 2 211 1 246 1 300 1 167 3 168 3 213 6 251 3 215 2 253 3 124 2 363 3 307 2 74 3 28 2 365 4 125 7 367 2 128 1 313 3 369 2 263 1 79 1 375 2 268 3 182 1 
85 2 158 1 207 1 142 2 296 1 356 1 297 1 274 1 188 1 43 2 246 1 65 1 333 1 167 2 168 2 228 1 213 4 95 8 251 2 253 8 98 1 307 2 363 2 74 1 367 2 128 1 369 3 156 1 79 1 8 1 284 7 104 2 109 1 14 2 182 1 347 2 221 1 17 1 351 1 
353 1 19 1 297 1 187 1 42 1 43 3 333 2 167 1 168 1 94 1 213 2 251 1 215 1 124 1 98 1 363 1 74 1 364 1 125 1 313 1 52 1 79 1 107 1 237 1 109 1 14 1 268 1 182 1 347 1 
365 1 125 1 353 1 19 1 39 1 313 1 52 1 43 2 65 1 167 1 168 1 213 2 14 1 251 1 347 1 124 1 98 2 363 1 
125 1 353 1 19 1 208 1 52 1 42 1 43 2 65 1 333 2 167 1 168 1 213 2 14 1 268 1 251 1 215 1 347 1 363 1 
19 2 353 2 42 1 43 4 65 1 333 2 167 1 168 1 94 1 213 2 251 1 215 1 98 2 124 1 363 1 365 1 125 2 313 1 52 2 14 1 268 1 347 1 
365 1 125 1 353 1 19 1 39 1 313 1 52 1 43 2 188 1 167 1 168 1 213 2 14 1 251 1 347 1 124 1 98 2 363 1 
125 1 353 1 19 1 208 1 52 1 42 1 43 2 188 1 333 2 167 1 168 1 213 2 14 1 268 1 251 1 215 1 347 1 363 1 
19 2 353 2 42 1 188 1 43 4 333 2 167 1 168 1 94 1 213 2 251 1 215 1 98 2 124 1 363 1 365 1 125 2 313 1 52 2 14 1 268 1 347 1 
19 2 353 2 42 1 43 4 333 2 167 1 168 1 94 1 213 2 251 1 215 1 98 2 124 1 363 1 365 1 125 2 313 1 52 2 14 1 268 1 347 1 
139 1 142 1 297 1 43 2 358 1 246 1 333 1 167 1 93 1 168 1 213 2 95 1 251 1 98 1 253 1 307 1 363 1 74 1 49 1 367 1 128 1 369 1 53 1 284 1 104 1 344 1 14 1 347 1 
139 1 142 1 297 1 43 2 246 1 333 1 167 1 168 1 213 2 95 1 303 1 251 1 98 1 253 1 307 1 73 1 363 1 74 1 49 1 259 1 367 1 128 1 369 1 53 1 284 1 104 1 14 1 347 1 
19 2 353 2 42 1 43 4 333 2 167 1 168 1 94 1 213 2 251 1 215 1 98 2 124 1 363 1 365 1 125 2 313 1 52 2 237 1 14 1 268 1 347 1 
158 1 353 2 19 2 297 1 61 1 42 1 43 4 358 1 333 2 167 1 93 1 168 1 94 1 213 2 95 1 215 1 251 1 98 2 124 1 253 1 307 1 363 1 74 1 365 1 49 1 125 2 367 1 313 1 369 1 52 2 53 1 284 1 104 1 344 1 14 1 268 1 347 1 
353 1 19 1 141 1 297 1 42 1 187 1 43 3 333 1 167 1 168 1 94 1 213 2 215 1 251 1 124 1 98 2 363 1 74 1 364 1 365 1 125 1 313 1 52 1 79 1 237 1 109 1 14 1 182 1 347 1 
325 1 327 2 353 6 298 1 62 1 42 3 43 19 333 10 168 2 94 3 121 1 213 4 251 2 215 3 98 9 124 3 363 2 365 3 199 1 262 2 313 3 316 2 218 1 219 1 376 1 132 1 265 1 268 3 347 2 240 1 
137 1 325 2 57 1 327 4 353 4 186 1 298 2 62 2 42 2 146 1 43 26 333 12 168 3 94 3 213 6 251 3 215 2 98 14 124 3 363 3 258 2 365 2 311 1 262 1 199 1 313 3 177 1 218 1 316 2 376 2 265 1 268 2 347 3 240 1 
137 1 325 2 57 1 327 4 353 9 185 1 186 1 298 1 62 3 210 1 146 1 42 5 43 41 211 1 333 21 26 1 168 3 94 4 121 1 213 6 251 3 215 4 193 1 98 20 124 4 363 3 100 1 258 1 365 4 311 1 262 1 199 1 313 5 177 1 316 4 218 1 219 1 10 1 376 3 265 1 268 5 347 3 240 1 
137 1 325 2 57 1 327 4 353 8 185 1 186 1 298 1 62 3 210 1 146 1 42 4 43 39 211 1 333 19 26 1 168 4 94 4 121 1 213 8 251 4 215 3 193 1 98 20 124 4 363 4 100 1 258 2 365 3 311 1 262 1 199 1 313 5 177 1 316 4 218 1 219 1 10 1 376 3 265 1 268 5 347 4 240 1 
137 1 325 1 57 1 327 4 353 15 185 1 186 1 298 1 62 4 210 1 146 1 42 8 43 53 211 1 333 26 168 2 94 7 121 2 213 4 251 2 215 7 193 1 98 27 124 7 363 2 100 1 258 1 365 7 311 1 310 2 262 1 199 1 313 8 177 1 316 4 218 1 10 1 376 2 265 1 268 8 347 2 240 1 
205 1 111 1 224 1 309 1 4 1 67 1 2 1 321 1 266 1 151 1 
36 1 320 1 
205 1 111 1 275 1 4 1 2 1 321 1 368 1 266 1 64 1 
111 1 205 1 224 1 309 1 195 1 2 1 154 1 299 1 245 2 178 1 247 1 4 1 321 1 266 1 151 1 349 1 350 1 336 1 
111 1 205 1 224 1 309 1 195 1 2 1 154 1 299 1 245 2 178 1 247 1 4 1 321 1 266 1 151 1 349 1 350 1 336 1 
111 1 205 1 224 1 309 1 195 1 2 1 154 1 299 1 245 2 178 1 247 1 4 1 321 1 266 1 151 1 349 1 350 1 336 1 
241 1 286 1 135 1 
241 1 286 1 135 1 
202 1 147 1 
202 1 135 1 147 1 
9 1 250 1 
205 1 111 1 36 1 139 1 2 1 297 2 245 1 4 1 250 1 214 1 336 1 74 2 152 1 154 1 79 2 178 1 9 1 105 1 320 1 321 1 345 1 346 1 109 2 266 1 56 1 182 2 350 1 
241 1 286 1 
202 1 135 1 147 1 
85 2 297 2 43 2 246 1 333 1 167 1 168 1 213 2 95 2 280 1 251 1 253 2 98 1 307 1 363 1 74 2 256 1 367 1 128 1 369 1 129 1 8 1 284 2 374 1 104 1 237 1 109 2 12 1 14 1 347 1 221 1 
257 1 158 1 216 1 367 1 314 1 77 1 235 1 284 2 163 1 24 1 227 1 166 1 322 1 95 2 170 1 289 2 253 2 307 1 351 1 
257 1 216 1 367 1 77 1 284 1 163 1 24 1 227 1 166 1 379 1 322 1 95 1 170 1 289 2 253 1 351 1 307 1 
261 1 367 1 142 1 314 1 369 1 274 1 284 1 104 1 24 1 45 1 228 1 95 1 253 1 307 1 
257 1 216 1 367 1 314 1 77 1 235 1 284 1 163 1 24 1 227 1 166 1 322 1 95 1 170 1 289 2 253 1 351 1 307 1 
140 1 
161 1 179 1 29 1 130 1 195 1 334 1 92 1 
3 1 355 1 334 1 335 1 212 1 70 1 48 1 27 1 72 1 29 1 195 2 126 1 200 1 178 1 179 1 267 1 350 1 
138 1 87 2 142 1 3 12 42 2 332 2 277 6 334 2 335 4 94 2 95 3 97 1 48 4 195 8 7 1 51 2 200 4 53 3 284 3 102 2 104 3 203 6 15 2 291 2 350 5 158 1 161 1 212 4 70 3 123 1 215 2 252 2 253 3 306 2 124 2 307 3 29 9 260 1 126 5 76 1 367 4 31 3 313 2 369 10 178 5 179 8 130 1 180 1 375 2 33 2 181 2 131 2 267 6 269 2 
137 1 87 1 57 1 3 6 62 1 146 1 42 2 277 5 148 1 334 2 335 2 212 2 94 2 70 1 97 1 48 2 215 2 252 2 124 2 29 8 311 1 195 5 126 1 313 2 200 2 177 1 316 1 102 1 178 1 179 5 376 1 55 1 203 5 267 3 350 1 
185 1 297 1 210 1 42 1 187 1 119 1 335 1 212 1 48 1 231 1 304 1 252 2 74 1 100 1 29 2 313 2 200 1 78 1 54 1 79 1 102 1 178 1 179 2 81 1 35 1 109 1 182 1 350 1 
29 1 195 1 200 1 161 1 179 1 130 1 334 1 335 1 212 1 48 1 
29 5 195 5 313 2 3 10 42 2 102 1 179 5 375 1 277 5 203 5 94 2 267 5 215 2 252 2 124 2 
178 1 195 1 334 1 126 1 70 1 350 1 
270 1 87 2 142 2 274 1 63 1 335 2 228 1 212 2 70 2 95 4 48 1 97 2 253 4 307 1 29 2 196 1 126 4 367 1 76 1 7 2 369 1 200 2 342 1 284 4 178 3 179 2 104 1 238 1 350 3 
139 1 142 1 297 3 187 2 43 1 358 1 246 1 333 1 167 1 168 1 93 1 213 2 95 1 251 1 231 1 253 1 307 1 363 1 74 3 49 1 367 1 369 1 53 1 79 2 284 1 104 1 344 1 109 2 14 1 182 2 347 1 136 1 
29 2 87 1 195 4 3 4 200 1 179 2 277 2 203 2 334 2 335 1 212 1 267 2 48 1 97 1 193 1 252 1 
2 1 83 1 266 1 
9 1 309 1 318 1 2 1 266 1 
2 1 83 1 266 1 
2 1 83 1 266 1 
2 1 266 1 273 1 
2 1 266 1 273 1 
2 1 266 1 273 1 
2 1 266 1 
205 1 4 1 
258 1 100 1 365 1 353 2 185 1 313 1 42 1 210 1 43 7 211 1 10 1 333 3 168 2 213 4 268 1 251 2 193 1 347 2 98 4 363 2 
100 1 353 1 185 1 313 1 210 1 42 1 92 1 43 5 211 1 10 1 333 2 268 1 193 1 98 3 
365 1 353 2 127 1 313 1 42 1 43 4 333 2 168 1 94 1 213 2 268 1 215 1 251 1 347 1 124 1 98 2 363 1 
365 1 353 2 313 1 62 1 42 1 316 2 43 7 376 1 333 4 94 1 121 1 268 1 215 1 98 3 124 1 
353 8 185 1 60 1 62 2 210 2 42 3 43 22 211 1 333 11 168 2 94 2 121 1 213 4 215 2 251 2 193 1 124 2 98 11 363 2 100 2 258 2 365 4 310 1 313 3 316 2 10 1 268 4 347 2 290 1 
333 1 43 1 316 1 
62 1 98 1 43 1 
365 1 353 3 127 1 313 1 42 1 43 6 375 1 333 3 168 1 94 1 213 2 251 1 215 1 268 2 347 1 124 1 98 3 363 1 
137 1 57 1 353 2 62 1 146 1 42 2 43 12 333 6 168 1 94 2 213 2 251 1 215 2 98 6 124 2 363 1 365 1 311 1 313 2 177 1 316 1 376 1 268 1 347 1 240 1 
100 1 365 1 353 2 185 1 313 1 42 1 210 1 43 6 333 3 268 1 98 3 
100 1 258 1 365 1 353 2 210 1 43 3 211 1 10 1 333 2 168 1 213 2 268 1 251 1 290 1 347 1 98 1 363 1 
100 2 365 2 353 5 185 1 313 2 210 2 42 2 43 10 333 5 168 1 35 1 213 2 251 1 268 3 347 1 240 1 98 5 363 1 
365 1 353 1 313 1 43 2 168 1 213 2 251 1 347 1 240 1 124 1 98 2 363 1 
365 1 353 2 313 1 42 1 43 4 333 2 168 1 94 1 213 2 268 1 215 1 251 1 347 1 240 1 124 1 98 2 363 1 
258 1 100 1 365 1 353 2 210 1 43 3 219 1 333 2 168 3 213 6 251 3 268 1 290 1 347 3 240 1 98 1 363 3 
353 11 185 2 41 1 62 3 210 3 42 5 43 33 211 1 333 17 150 1 168 5 94 3 121 1 213 10 96 1 251 5 215 3 193 1 98 16 124 3 363 5 100 3 258 2 365 5 127 1 313 5 316 4 10 1 219 1 376 1 268 6 290 1 347 5 240 1 
353 1 185 1 62 1 42 1 210 1 43 7 211 1 333 3 168 1 213 2 251 1 193 1 98 4 363 1 100 1 311 1 313 1 316 1 10 1 376 1 268 1 347 1 240 1 
353 2 185 1 62 1 42 1 210 1 43 10 211 1 333 4 168 2 94 1 121 1 213 4 251 2 193 1 98 6 124 1 363 2 100 1 365 1 311 1 127 1 313 2 316 2 10 1 376 1 268 1 347 2 240 1 
137 1 57 1 353 3 185 1 62 1 210 1 146 1 42 3 43 18 211 1 333 9 168 3 94 2 213 6 251 3 215 2 193 1 98 9 124 2 363 3 100 1 258 1 365 1 311 1 127 1 313 3 177 1 316 1 10 1 376 1 268 2 347 3 240 1 
137 1 57 1 353 4 185 1 62 1 210 1 146 1 42 2 43 16 211 1 333 6 168 3 94 2 213 6 251 3 215 1 193 1 98 10 124 2 363 3 100 1 258 1 365 2 311 1 127 1 313 3 177 1 316 1 10 1 376 1 268 2 347 3 240 1 
353 1 185 1 62 1 42 1 210 1 43 7 211 1 333 3 168 1 213 2 251 1 193 1 98 4 363 1 100 1 311 1 313 1 316 1 10 1 376 1 268 1 347 1 240 1 
137 1 57 1 353 2 62 1 146 1 42 2 43 12 333 6 168 1 94 2 213 2 251 1 215 2 98 6 124 2 363 1 365 1 311 1 313 2 177 1 316 1 376 1 268 1 347 1 240 1 
137 1 57 1 353 4 185 1 62 1 210 1 146 1 42 2 43 17 211 1 333 7 168 4 94 2 213 8 251 4 215 1 193 1 98 10 124 2 363 4 100 1 258 2 365 2 311 1 127 1 313 3 177 1 316 1 10 1 376 1 268 2 347 4 240 1 
137 1 57 1 353 6 62 1 146 1 42 2 43 16 333 7 168 4 94 3 213 8 251 4 215 2 98 9 124 3 363 4 258 2 365 3 311 1 313 3 177 1 316 1 219 1 376 1 268 3 347 4 240 1 
100 3 365 3 353 6 185 1 313 1 42 1 210 3 43 7 211 1 10 2 333 4 268 3 98 3 
137 1 57 1 353 3 185 1 62 1 210 1 146 1 42 2 43 17 211 1 333 7 168 4 94 2 213 8 251 4 215 1 193 1 98 10 124 2 363 4 100 1 258 2 365 1 311 1 313 3 177 1 316 1 10 1 219 1 376 1 268 2 347 4 240 1 
74 1 139 1 352 1 109 1 297 1 380 1 236 1 
324 1 74 1 139 1 352 1 30 1 297 1 331 1 236 1 106 1 249 1 109 1 380 1 
284 1 104 1 367 1 228 1 142 1 369 1 95 1 274 1 92 1 253 1 307 1 
74 2 49 1 139 1 367 1 142 1 369 1 297 2 53 1 156 1 79 1 284 1 104 1 93 1 109 1 95 1 182 1 253 1 307 1 
74 2 49 1 139 1 367 1 369 3 7 1 51 1 297 2 53 2 156 1 119 1 79 2 284 1 162 1 104 2 181 1 93 1 109 2 95 1 182 1 253 1 308 1 307 1 
74 2 75 1 49 1 139 1 259 1 367 1 369 3 7 1 51 1 297 2 53 2 156 1 119 1 79 2 284 2 162 1 104 2 181 1 109 2 95 2 182 1 253 2 308 1 307 1 
75 1 183 1 195 1 326 1 126 1 367 1 142 1 31 1 7 1 369 4 51 1 53 1 178 2 284 3 332 1 104 1 181 1 334 1 95 3 15 1 253 3 350 2 307 1 
75 1 195 1 126 1 367 1 142 1 31 1 7 1 369 4 51 1 53 1 178 2 284 3 332 1 104 1 181 1 334 1 95 3 15 1 253 3 291 1 350 2 307 1 
284 1 367 1 296 1 95 1 253 1 307 1 
85 1 366 1 158 1 367 3 207 1 142 2 296 1 356 1 369 3 53 1 371 1 8 1 284 6 104 2 343 1 95 7 123 1 17 1 253 7 351 1 307 2 
139 2 185 1 42 1 43 5 333 2 93 1 95 1 193 1 98 3 233 1 100 1 49 1 52 1 53 1 156 1 284 1 104 1 10 1 344 1 237 1 109 1 14 2 347 2 158 1 19 1 353 1 297 2 61 1 210 1 358 1 211 1 167 2 168 2 213 4 251 2 253 1 363 2 307 1 74 2 125 1 367 1 313 1 369 1 129 1 79 1 182 1 268 1 
142 1 161 1 332 1 334 1 335 2 212 2 70 1 95 1 48 2 253 1 306 1 152 1 29 1 195 1 126 2 76 1 31 1 369 2 200 2 284 1 178 3 179 1 130 1 33 1 131 1 15 1 291 1 350 3 
158 1 367 2 296 1 369 2 53 1 284 2 180 1 104 1 95 2 15 1 123 1 253 2 307 1 
75 1 158 1 90 1 367 1 142 1 369 1 274 1 284 4 104 1 228 1 95 4 253 4 307 1 
366 1 367 2 7 1 369 1 53 1 226 1 284 2 104 1 343 1 279 1 230 1 95 2 253 2 307 1 
284 1 227 1 166 1 367 1 142 1 77 1 95 1 289 1 253 1 307 1 
158 1 367 1 369 1 284 2 8 1 104 1 95 2 280 1 253 2 351 1 307 1 
158 1 90 1 367 2 207 1 142 1 7 1 369 3 356 1 274 1 284 4 8 1 104 2 228 1 95 5 253 5 307 2 
18 1 158 1 90 1 367 2 142 1 7 1 369 3 356 1 274 1 284 4 8 1 104 2 228 1 95 5 253 5 307 2 
74 2 49 1 139 1 259 1 367 1 142 1 369 1 297 2 53 1 156 1 79 1 284 1 104 1 109 1 95 1 182 1 253 1 307 1 
366 1 367 2 7 1 369 1 53 1 371 1 284 1 104 1 343 1 95 1 123 1 253 1 307 1 
248 1 139 1 80 1 315 1 176 1 
152 1 139 1 195 1 272 1 315 1 176 2 119 1 178 2 162 1 373 1 332 1 248 2 80 2 276 1 334 1 169 1 288 1 308 1 350 2 
74 1 256 1 374 1 80 1 109 1 315 1 297 1 12 1 176 1 
276 1 288 1 315 1 
88 1 328 1 145 1 92 1 
88 1 328 1 149 1 301 1 339 1 155 1 145 1 
254 1 165 1 149 1 
194 1 88 1 328 1 339 1 354 1 340 2 155 1 145 1 301 3 149 3 302 1 122 1 
88 1 328 1 149 2 301 2 339 1 155 1 145 1 118 1 305 1 
88 1 339 1 155 1 21 1 301 1 149 1 166 1 302 1 322 1 110 1 289 1 
88 1 149 1 301 1 339 1 302 1 155 1 145 1 
328 1 149 1 301 1 339 1 302 1 155 1 145 2 
88 1 149 2 301 2 339 2 302 1 50 1 155 2 145 1 330 1 223 1 
88 2 328 1 339 1 40 1 155 1 145 1 189 1 301 3 149 3 285 1 302 1 110 1 305 2 
88 1 328 1 216 1 339 1 155 1 145 1 77 1 23 1 301 2 149 2 166 1 302 1 322 1 289 2 305 1 
88 2 328 1 339 2 155 2 145 1 118 1 44 1 301 4 149 4 285 1 302 1 110 1 305 2 
88 1 328 1 149 1 301 1 339 1 302 1 155 1 145 1 
194 1 88 3 328 2 339 1 354 1 340 1 155 1 145 2 301 4 149 4 285 1 68 1 110 1 305 2 
88 1 328 1 377 1 149 2 301 2 339 1 302 1 329 1 46 1 155 1 145 1 305 1 
194 2 282 1 88 1 328 1 339 1 354 1 340 2 155 1 145 1 301 3 149 3 302 1 
337 2 255 1 319 1 88 2 
34 1 149 1 301 1 339 1 302 1 155 1 
88 1 328 1 149 2 301 2 339 1 40 1 302 1 155 1 145 1 305 1 
91 1 
88 1 328 1 149 1 301 1 339 1 302 1 155 1 145 1 
88 1 328 1 149 3 301 3 339 1 40 1 302 1 340 1 155 1 145 1 305 1 
88 1 285 1 68 1 110 1 
88 1 145 1 

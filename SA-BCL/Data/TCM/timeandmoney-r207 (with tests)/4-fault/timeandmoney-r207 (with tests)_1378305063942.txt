#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.ArrayIndexOutOfBoundsException 281 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 142 146 349 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 142 146 349 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 368 68 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 214 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 214 80 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 142 146 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 156 142 146 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 156 142 150 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 368 68 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2385 | return null
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> -1
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 4578 | return null
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | CONSTANT | 5361 | 0 -> 1
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
300 1 93 1 326 1 211 2 354 3 304 7 98 1 125 1 58 1 133 9 106 1 264 4 10 1 266 5 67 1 178 2 269 1 46 9 88 1 346 1 249 2 251 1 375 1 123 1 
300 1 93 1 326 1 211 2 354 3 304 7 98 1 125 1 58 1 133 9 106 1 264 4 10 1 266 5 67 1 178 2 269 1 46 9 88 1 346 1 249 2 251 1 375 1 123 1 
93 1 326 2 211 2 354 3 98 1 304 6 125 2 133 9 106 1 264 4 10 2 266 5 108 1 67 1 86 1 344 1 178 2 269 1 88 2 71 1 46 9 346 1 249 2 205 1 181 1 123 1 251 1 375 1 
93 1 326 2 211 2 354 3 98 1 304 6 125 2 133 9 106 1 264 4 10 2 266 5 108 1 67 1 86 1 344 1 178 2 269 1 88 2 71 1 46 9 346 1 249 2 205 1 181 1 123 1 251 1 375 1 
93 1 326 2 211 2 354 4 98 1 304 7 125 2 133 10 106 1 264 5 10 2 266 6 108 1 67 1 86 1 344 1 178 2 269 1 88 2 71 1 46 10 346 1 249 2 205 1 181 1 123 1 251 1 375 1 
93 1 326 2 211 1 354 2 98 1 304 4 125 2 133 7 106 1 264 3 10 2 266 4 108 1 67 1 86 1 344 1 178 2 269 1 88 2 71 1 46 7 346 1 249 2 205 1 181 1 251 1 375 1 
10 1 93 1 266 3 326 1 211 2 354 1 178 1 304 3 98 1 269 1 46 4 88 1 346 1 249 1 133 4 123 1 106 1 264 2 
10 1 210 1 266 1 93 1 341 1 326 1 108 1 199 1 344 1 178 1 269 1 125 1 46 2 249 1 133 2 106 1 
93 1 266 2 354 1 178 2 304 1 269 1 125 1 46 3 249 2 133 3 251 1 106 1 264 1 
358 1 26 1 273 1 
265 2 85 1 273 1 
216 2 107 2 317 1 236 1 280 2 322 2 208 2 30 2 
325 1 76 2 23 1 162 1 277 1 1 1 330 2 280 2 54 1 186 1 126 1 189 1 28 1 30 2 216 3 81 1 283 2 8 1 236 1 311 1 198 1 107 2 64 1 13 1 287 1 363 1 14 1 268 1 225 2 116 1 139 1 370 2 91 1 317 1 322 2 183 1 208 3 
216 1 107 1 236 1 280 1 187 1 322 1 224 1 208 1 170 1 30 1 
159 1 351 1 147 1 66 1 124 1 164 1 30 1 216 1 358 1 168 1 122 1 273 1 208 1 170 1 
107 1 159 1 351 1 66 2 124 1 280 1 30 1 216 1 358 1 168 1 322 1 122 2 273 1 208 1 170 1 
12 1 66 1 92 1 345 1 122 1 
107 1 12 1 66 1 367 1 280 1 345 1 187 1 224 1 30 1 216 1 295 1 358 1 236 1 319 1 322 1 122 1 208 1 273 1 170 1 
66 1 345 1 122 1 
107 1 12 1 66 1 280 1 187 1 224 1 30 1 216 1 319 1 236 1 122 1 322 1 208 1 170 1 
273 1 
107 1 12 1 66 1 280 1 345 1 187 1 245 1 224 1 30 1 216 1 295 1 358 1 236 1 319 1 322 1 122 1 208 1 273 1 170 1 
299 2 148 1 280 1 27 1 187 1 215 1 30 1 216 1 234 2 7 1 358 2 35 1 196 2 82 5 236 1 170 1 107 1 171 2 12 2 66 4 109 1 365 2 345 2 155 1 45 1 224 1 16 1 295 1 140 1 319 1 206 1 19 1 121 4 48 2 322 1 122 4 208 1 273 2 
107 1 76 1 162 1 363 1 277 1 330 1 268 1 126 1 15 1 30 1 216 2 283 1 333 1 8 1 90 1 91 1 311 1 198 1 322 1 208 2 
317 1 26 1 
107 1 280 1 30 2 216 2 247 1 17 1 317 2 322 1 208 2 
362 1 333 1 284 1 
76 1 162 1 277 1 363 1 330 1 268 1 44 1 126 1 216 1 283 1 8 1 91 1 317 1 311 1 198 1 208 1 
107 4 63 1 65 1 280 1 164 1 149 1 15 2 30 5 216 5 247 1 90 1 317 1 322 4 208 5 
216 2 107 2 322 2 224 1 208 2 282 1 170 1 30 2 
216 3 107 3 317 1 280 1 15 1 322 3 208 3 30 3 
216 1 107 1 322 1 224 1 208 1 170 1 30 1 
216 1 107 1 247 1 17 1 280 1 322 1 208 1 170 1 30 1 
159 1 76 1 23 1 351 1 162 1 277 1 1 1 124 1 330 1 54 1 280 2 186 1 126 1 28 1 30 3 216 4 81 1 283 1 8 1 236 1 311 1 168 1 198 1 240 1 170 1 107 3 64 1 287 1 363 1 66 1 14 1 268 1 292 1 15 1 225 1 116 1 247 1 370 2 90 1 91 1 317 1 322 3 122 1 208 4 
216 2 107 1 65 1 317 1 164 1 322 1 15 1 208 2 30 2 
107 3 159 1 351 1 66 1 110 1 124 1 280 1 292 1 15 2 30 3 247 1 216 3 90 1 168 1 122 1 322 3 273 1 208 3 170 1 
107 2 280 1 15 1 30 2 247 1 216 2 333 1 284 1 322 2 208 2 
76 1 162 1 277 1 363 1 330 1 268 1 126 1 216 1 283 1 8 1 91 1 317 1 311 1 198 1 208 1 
76 1 162 1 277 1 363 1 330 1 243 1 268 1 126 1 216 1 283 1 74 1 91 1 317 1 198 1 208 1 
275 1 23 1 1 1 2 1 186 1 259 1 129 1 81 1 333 2 284 2 196 1 219 1 64 1 287 1 362 2 314 1 14 2 87 1 225 4 139 2 271 1 370 2 374 1 48 1 
216 1 107 1 168 1 322 1 208 1 170 1 30 1 282 1 
25 1 373 1 
25 1 373 1 
261 1 371 1 
261 1 371 1 
261 1 371 1 
25 1 373 1 350 1 
25 1 373 1 350 1 
369 1 25 1 373 1 
261 1 25 2 371 1 315 1 373 2 132 1 
25 1 373 1 350 1 
25 1 373 1 61 1 
25 1 373 1 61 1 
25 1 373 1 61 1 
51 1 278 1 25 1 97 1 165 1 30 2 216 2 194 1 131 1 59 1 107 2 313 1 66 1 70 1 316 1 369 1 317 1 157 1 373 1 321 1 322 2 122 1 208 2 323 1 
0 1 66 2 25 2 97 2 315 1 70 1 356 2 294 1 152 1 194 2 318 1 157 3 373 2 131 2 154 1 239 1 321 2 122 2 273 1 
10 1 88 1 326 1 
10 1 341 1 326 1 
88 2 341 1 326 3 202 1 312 1 114 1 
88 1 341 1 326 2 95 1 202 1 312 1 
88 1 341 1 326 2 202 1 312 2 
299 1 145 1 51 1 353 1 303 1 27 1 259 1 358 1 196 1 82 1 195 2 310 1 84 1 265 1 171 1 12 4 313 1 173 1 66 4 365 1 69 1 137 1 345 1 316 1 271 1 295 1 320 1 48 1 121 3 122 4 273 1 
230 5 299 2 94 1 303 2 148 1 27 1 259 3 192 1 57 1 358 1 196 3 82 6 310 6 197 1 84 1 265 9 134 1 171 2 12 7 313 4 173 2 85 3 66 8 365 2 69 3 137 6 345 6 271 3 295 1 92 5 272 1 48 3 121 8 122 8 273 5 
299 1 145 1 303 1 148 1 259 1 358 1 196 1 195 1 82 2 310 2 171 1 265 4 12 2 313 1 173 1 85 2 66 3 365 1 69 1 137 2 271 1 320 1 121 3 48 1 122 3 273 3 
299 1 145 1 303 1 148 1 259 2 192 1 358 1 196 2 195 2 82 4 310 4 197 1 265 7 171 1 12 3 313 2 173 1 85 3 66 4 365 1 69 2 137 4 271 2 272 1 320 1 121 5 48 2 122 4 273 4 
11 1 26 1 126 1 
334 1 126 1 
21 1 
363 1 126 1 198 1 
126 1 40 1 
126 1 198 1 
117 1 11 2 363 1 130 1 126 3 198 1 
2 2 314 3 14 3 100 1 244 2 155 1 102 1 215 1 225 7 139 4 196 1 119 1 37 1 206 1 48 1 218 1 252 1 
2 2 314 3 14 3 100 1 244 2 155 1 102 1 215 1 225 7 139 4 196 1 119 1 37 1 206 1 48 1 218 1 252 1 
2 2 314 3 14 3 100 1 244 2 155 1 102 1 215 1 225 7 139 4 204 1 196 1 119 1 37 1 206 1 48 1 218 1 252 1 
298 3 1 1 2 5 213 1 99 4 258 1 307 1 100 5 102 1 215 2 259 3 56 1 81 1 34 1 196 4 37 1 218 2 64 1 287 1 69 3 314 10 14 15 288 1 244 3 155 2 246 1 225 31 139 16 271 3 370 2 119 1 206 1 48 4 252 2 
217 1 225 1 64 1 81 1 139 1 287 1 1 1 370 2 244 1 218 1 281 1 252 1 
22 1 76 1 93 1 326 2 163 1 304 1 330 1 101 1 125 1 283 1 237 1 133 2 106 1 10 1 266 1 341 1 43 1 175 1 176 1 178 1 268 1 269 1 114 1 88 1 46 2 249 1 347 1 73 1 91 1 297 1 
76 1 326 2 163 1 330 1 304 2 101 1 125 1 283 1 237 1 133 3 106 1 359 1 10 1 41 1 266 1 341 1 43 1 175 1 176 1 242 1 178 1 268 1 269 1 114 1 88 1 46 3 249 1 347 1 73 1 91 1 
76 1 326 2 163 1 330 1 304 2 125 1 101 1 283 1 237 1 133 2 106 1 359 1 10 1 266 1 341 1 176 1 242 1 268 1 269 1 114 1 46 2 88 1 347 1 73 1 91 1 
253 1 41 1 338 1 76 1 209 1 163 2 277 1 176 2 343 1 178 1 330 1 268 1 125 2 101 2 126 1 46 1 79 1 249 1 283 1 91 1 133 1 198 1 169 1 
76 1 93 1 326 2 163 1 330 1 101 1 125 1 283 1 237 1 133 1 10 1 341 1 43 1 175 1 176 1 242 1 178 1 268 1 114 1 88 1 46 1 249 1 347 1 73 1 91 1 297 1 
75 1 
159 1 299 1 351 1 146 1 147 1 214 2 124 1 27 1 164 1 127 1 30 1 216 1 357 1 80 2 6 1 103 1 82 1 83 1 167 1 168 1 39 2 170 1 286 2 360 2 171 1 241 1 85 1 66 2 365 1 111 4 222 2 345 3 295 1 156 1 349 1 142 1 121 1 144 1 122 2 208 1 
159 1 299 1 351 1 146 1 147 1 214 2 124 1 27 1 164 1 127 1 30 1 216 1 357 1 80 2 6 1 103 1 82 1 83 1 167 1 168 1 39 2 170 1 286 2 360 2 171 1 241 1 85 1 66 2 365 1 111 4 222 2 345 3 295 1 156 1 349 1 142 1 121 1 144 1 122 2 208 1 
159 1 299 1 351 1 24 2 147 1 214 1 124 1 306 1 27 1 164 1 30 1 31 1 216 1 357 1 80 1 6 1 82 1 83 1 168 1 39 2 170 1 265 1 360 2 241 1 171 1 66 2 365 1 111 3 222 1 345 2 295 1 156 1 121 1 20 1 144 1 122 2 208 1 
171 1 299 1 76 1 277 1 66 1 221 1 365 1 303 1 68 1 330 1 345 2 368 1 27 1 295 1 283 1 82 1 121 1 122 1 
241 1 159 1 351 1 66 2 147 1 111 2 214 1 124 1 345 2 164 1 245 1 30 1 216 1 357 1 295 1 6 1 83 1 168 1 122 2 144 1 208 1 170 1 
241 1 159 1 351 1 66 2 147 1 111 3 222 1 124 1 345 1 164 1 245 1 30 1 216 1 357 1 295 1 6 1 358 1 83 1 168 1 122 2 144 1 273 1 208 1 170 1 
159 1 351 1 147 1 214 1 124 1 164 1 30 1 216 1 357 1 80 1 6 1 83 1 168 1 170 1 241 1 66 2 111 3 222 1 345 2 245 1 295 1 144 1 122 2 208 1 
295 1 66 1 345 1 245 1 122 1 
159 1 299 1 351 1 147 1 214 1 124 1 27 1 164 1 127 1 30 1 216 1 357 1 80 1 6 1 82 1 83 1 167 1 168 1 39 2 170 1 265 1 286 2 360 2 241 1 171 1 85 1 66 2 365 1 111 3 222 1 345 2 295 1 156 1 121 1 20 1 144 1 122 2 208 1 
159 1 299 1 351 1 146 1 147 1 214 1 124 1 164 1 27 1 127 1 30 1 216 1 357 1 80 1 6 1 103 1 82 1 83 1 167 1 168 1 39 2 170 1 286 2 360 2 241 1 171 1 85 1 66 2 365 1 111 3 222 1 345 2 295 1 156 1 142 1 121 1 144 1 122 2 208 1 
159 1 299 1 351 1 146 1 147 1 214 1 124 1 164 1 27 1 127 1 30 1 216 1 357 1 80 1 6 1 103 1 82 1 83 1 167 1 168 1 39 1 170 1 286 1 360 1 241 1 171 1 85 1 66 2 365 1 111 2 345 2 295 1 156 1 142 1 121 1 144 1 122 2 208 1 
159 1 299 1 351 1 24 1 147 1 214 1 124 1 306 1 164 1 27 1 30 1 31 1 216 1 357 1 80 1 6 1 150 1 82 1 83 1 168 1 39 1 170 1 265 1 360 1 241 1 171 1 66 2 365 1 111 2 345 2 113 1 295 1 156 1 142 1 121 1 144 1 122 2 208 1 
23 1 1 1 2 2 26 1 186 1 215 1 81 1 333 1 284 1 196 1 37 1 64 1 287 1 362 1 314 2 14 3 244 1 155 1 225 6 139 3 370 2 119 1 317 2 374 1 206 1 48 1 
254 1 298 3 325 1 23 1 352 1 2 1 1 2 213 1 99 3 100 1 186 2 259 2 81 2 333 11 284 4 196 1 38 1 64 2 287 2 362 11 69 2 314 2 14 6 246 1 116 1 225 14 139 8 271 1 89 1 370 4 317 1 48 2 324 1 
254 1 76 1 325 1 23 1 162 1 277 1 1 1 330 1 186 1 126 1 260 1 30 1 216 2 81 1 283 1 8 1 284 1 311 1 198 1 107 1 64 1 363 1 287 1 135 1 14 1 268 1 44 1 15 1 293 1 116 1 225 2 139 1 90 1 370 2 91 1 317 1 322 1 208 2 
325 1 50 1 277 1 2 4 1 3 330 3 54 2 186 3 100 4 283 3 8 2 333 7 284 7 196 3 198 2 107 1 64 3 287 3 112 2 69 2 242 1 14 10 244 1 155 1 15 1 116 1 119 1 206 1 208 3 254 1 76 3 23 3 162 2 126 2 215 1 308 2 259 2 30 1 216 3 81 3 37 1 311 2 363 2 362 7 366 2 314 8 268 2 225 20 139 10 271 2 227 1 370 6 90 1 91 2 317 2 228 2 143 1 48 3 322 1 
22 1 253 1 76 7 325 1 77 1 23 2 276 1 277 2 1 2 53 1 330 8 186 2 126 3 233 1 30 1 216 1 309 1 81 2 283 8 169 1 198 2 107 1 64 2 287 2 364 1 242 1 14 1 268 2 15 1 225 2 116 1 139 1 370 4 91 2 47 1 374 1 322 1 208 1 183 2 
254 1 23 1 2 1 1 1 232 1 280 1 186 1 259 1 30 1 216 1 81 1 333 1 284 1 196 1 107 1 64 1 362 1 287 1 69 1 314 1 14 2 247 1 225 3 139 1 271 1 370 2 48 1 322 1 208 1 
64 1 275 1 23 1 362 1 287 1 1 1 314 1 100 1 186 1 259 1 225 2 81 1 139 2 333 1 370 2 284 1 374 1 48 1 
64 1 23 1 362 1 287 1 2 1 1 1 314 1 14 2 186 1 225 2 129 1 81 1 271 1 333 1 370 2 284 1 196 1 374 1 
23 1 1 1 2 1 186 1 100 1 259 1 81 1 333 2 284 2 196 1 64 1 287 1 362 2 69 1 314 2 14 2 225 4 139 2 271 1 370 2 374 1 48 1 
64 1 275 1 23 1 362 1 287 1 1 1 314 1 100 1 186 1 233 1 259 1 225 2 81 1 139 2 333 1 370 2 284 1 48 1 
64 1 23 1 362 1 287 1 2 1 1 1 314 1 14 2 186 1 233 1 225 2 129 1 81 1 271 1 333 1 370 2 284 1 196 1 
23 1 1 1 2 1 186 1 100 1 233 1 259 1 81 1 333 2 284 2 196 1 64 1 287 1 362 2 69 1 314 2 14 2 225 4 139 2 271 1 370 2 48 1 
23 1 1 1 2 1 186 1 100 1 259 1 81 1 333 2 284 2 196 1 64 1 287 1 362 2 69 1 314 2 14 2 225 4 139 2 271 1 370 2 48 1 
325 1 76 1 23 1 162 1 277 1 1 1 330 1 54 1 186 1 126 1 216 1 81 1 283 1 8 1 311 1 198 1 64 1 363 1 287 1 14 1 268 1 225 2 116 1 139 1 370 2 91 1 317 1 208 1 
325 1 76 1 23 1 162 1 277 1 1 1 330 1 186 1 126 1 216 1 81 1 283 1 198 1 64 1 363 1 287 1 243 1 14 1 268 1 138 1 225 2 116 1 139 1 74 1 370 2 91 1 317 1 208 1 
254 1 23 1 1 1 2 1 186 1 100 1 259 1 81 1 333 2 284 2 196 1 64 1 287 1 362 2 69 1 314 2 14 2 225 4 139 2 271 1 370 2 48 1 
22 1 76 1 23 1 162 1 2 1 1 1 330 1 54 1 100 1 186 1 126 1 259 1 216 1 81 1 283 1 333 2 8 1 284 2 196 1 311 1 198 1 64 1 362 2 363 1 287 1 69 1 314 2 366 1 14 2 268 1 225 4 139 2 271 1 370 2 91 1 48 1 208 1 
254 1 23 1 1 1 280 1 100 1 186 1 78 1 259 1 30 1 216 1 81 1 333 1 284 1 196 1 107 1 64 1 287 1 362 1 69 1 314 1 14 1 247 1 225 3 139 2 271 1 370 2 48 1 322 1 208 1 
274 1 327 1 1 3 2 4 99 4 279 1 100 4 3 1 190 1 191 1 196 5 153 1 336 1 64 3 287 3 69 4 14 21 244 1 246 1 155 1 250 1 119 1 348 1 206 1 298 3 213 3 307 1 259 4 215 1 217 1 81 3 37 1 267 2 314 8 177 4 225 41 139 20 271 4 370 6 141 1 48 5 182 1 229 1 
274 1 298 3 327 1 2 4 1 4 213 3 279 1 99 4 307 2 100 3 3 1 190 1 215 1 259 4 191 1 217 1 81 4 153 1 196 4 37 1 336 1 64 4 287 4 267 2 69 4 314 7 177 4 14 18 244 1 155 1 246 1 225 38 139 20 271 3 250 1 370 8 348 1 119 1 141 1 206 1 48 5 229 1 182 1 
274 1 298 4 327 1 2 7 1 2 213 2 279 1 99 4 307 1 100 7 3 1 190 1 215 1 259 7 191 1 217 1 81 2 153 1 196 8 37 1 336 1 64 2 287 2 267 1 69 7 314 14 177 4 14 25 244 1 155 1 246 2 225 52 139 27 271 7 250 1 89 2 370 4 119 1 206 1 48 8 229 1 182 1 
274 1 298 1 2 3 1 2 213 1 99 2 100 3 3 1 190 1 259 3 191 1 217 1 81 2 153 2 196 3 64 2 287 2 267 1 69 3 314 6 177 2 14 10 246 1 225 19 139 9 271 3 370 4 348 1 180 1 48 3 
274 2 298 2 327 1 2 2 1 3 213 2 99 2 279 1 307 2 100 2 3 1 190 1 259 3 191 1 217 1 81 3 153 1 196 2 336 1 64 3 287 3 267 2 69 3 314 4 177 4 14 12 225 26 139 14 271 2 370 6 250 1 48 3 229 1 182 1 
212 1 152 1 25 1 194 1 318 1 97 1 315 1 373 1 131 1 321 1 
369 1 165 1 
203 1 42 1 235 1 25 1 194 1 97 1 373 1 131 1 321 1 
350 1 128 1 
132 1 61 1 263 1 
0 1 66 1 25 1 97 1 315 1 70 1 356 1 152 1 194 1 318 1 157 2 373 1 131 1 154 1 239 1 321 1 122 1 273 1 
0 1 66 1 25 1 97 1 315 1 70 1 356 1 152 1 194 1 318 1 157 2 373 1 131 1 154 1 239 1 321 1 122 1 273 1 
0 1 66 1 25 1 97 1 315 1 70 1 356 1 152 1 194 1 318 1 157 2 373 1 131 1 154 1 239 1 321 1 122 1 273 1 
350 1 132 1 128 1 
350 1 132 1 128 1 
61 1 263 1 
132 1 61 1 263 1 
278 1 59 1 
51 1 278 1 25 1 97 1 165 1 356 1 30 2 216 2 194 1 154 1 131 1 59 1 107 2 12 1 313 1 66 1 291 1 316 1 369 1 317 1 157 1 373 1 321 1 122 1 322 2 208 2 323 1 
254 1 325 1 76 2 23 1 161 1 256 1 1 1 53 1 330 2 186 1 126 1 30 2 216 2 81 1 283 2 36 1 104 1 198 1 64 1 287 1 290 1 14 1 268 1 225 2 116 1 139 1 370 2 91 1 47 1 208 2 183 2 
10 1 22 1 76 2 341 1 326 2 163 1 302 1 175 1 242 1 330 2 268 1 4 1 114 1 88 1 248 1 283 2 73 1 91 1 237 1 
10 1 76 1 341 1 326 2 163 1 175 1 242 1 330 1 268 1 4 1 114 1 88 1 283 1 73 1 91 1 285 1 237 1 
253 1 76 1 338 1 277 1 163 1 330 1 268 1 355 1 126 1 248 1 283 1 91 1 198 1 169 1 
10 1 76 1 341 1 326 2 163 1 302 1 175 1 242 1 330 1 268 1 4 1 114 1 88 1 248 1 283 1 73 1 91 1 237 1 
305 1 
76 1 23 1 162 1 277 1 1 1 330 1 280 2 54 1 186 1 126 1 28 1 30 2 216 3 81 1 283 1 8 1 236 1 311 1 198 1 107 2 64 1 363 1 287 1 14 1 268 1 225 1 116 1 370 2 91 1 317 1 322 2 208 3 
265 4 171 1 299 1 85 2 365 1 221 1 303 1 137 2 244 1 27 1 358 2 82 2 310 2 121 1 273 4 
358 1 109 1 140 1 82 1 26 1 121 1 273 1 
265 1 171 1 286 1 299 1 85 1 365 1 345 1 27 1 127 1 295 1 358 1 82 1 167 1 121 1 273 1 
277 1 330 1 283 1 234 1 151 1 196 1 334 2 198 1 11 1 340 1 66 1 69 1 345 2 295 1 18 1 121 4 122 1 160 1 299 2 76 1 351 1 303 1 27 2 126 4 259 1 29 1 130 1 82 3 166 1 310 3 171 2 265 6 363 1 85 3 365 2 137 3 268 1 270 1 271 1 91 2 228 1 48 1 273 3 
298 1 299 1 327 1 213 1 99 1 279 1 27 1 259 2 5 1 234 1 358 1 82 4 196 2 310 5 265 6 171 1 85 3 365 1 69 2 345 1 137 5 295 1 271 2 250 1 121 7 48 2 229 1 273 4 182 1 
299 1 280 1 27 1 187 1 215 1 30 1 216 1 234 2 103 1 35 1 82 2 196 1 236 1 170 1 171 1 107 1 66 1 365 1 155 1 45 1 224 1 319 1 206 1 48 2 121 2 122 1 322 1 208 1 
171 1 299 1 109 1 365 1 27 1 358 1 140 1 82 1 121 1 273 1 
265 10 85 5 69 2 137 5 259 2 271 2 234 2 35 1 82 5 196 2 228 1 310 5 48 2 121 5 273 5 
107 1 345 1 280 1 187 1 224 1 30 1 216 1 295 1 358 1 319 1 236 1 322 1 208 1 273 1 170 1 
171 1 76 1 299 1 277 1 221 1 365 1 303 1 68 1 330 1 345 2 368 1 27 1 295 1 283 1 82 1 121 1 60 1 
200 1 97 1 131 1 
200 1 97 1 131 1 
255 1 278 1 318 1 97 1 131 1 
200 1 97 1 131 1 
136 1 97 1 131 1 
136 1 97 1 131 1 
136 1 97 1 131 1 
97 1 131 1 
25 1 373 1 
298 1 1 1 2 2 213 1 99 1 215 1 217 1 81 1 196 1 37 1 64 1 287 1 314 2 14 4 244 1 155 1 225 8 139 4 250 1 370 2 119 1 206 1 48 1 
298 1 2 2 1 2 231 1 213 1 99 2 100 1 215 1 259 1 217 1 81 2 196 1 37 1 64 2 287 2 69 1 314 3 14 5 244 1 155 1 246 1 225 11 139 6 250 1 370 4 119 1 206 1 48 2 
298 1 327 1 231 1 1 3 2 3 213 1 99 1 279 1 307 1 100 1 215 1 259 2 217 1 81 3 196 3 37 1 64 3 287 3 69 2 314 4 14 10 244 1 155 1 225 19 139 9 271 2 250 1 370 6 119 1 206 1 48 3 182 1 229 1 
298 1 327 1 231 1 1 3 2 3 213 1 99 1 279 1 307 1 100 2 215 1 259 2 217 1 81 3 196 2 37 1 64 3 287 3 69 2 314 5 14 7 244 1 155 1 225 17 139 10 271 1 250 1 370 6 119 1 206 1 48 3 182 1 229 1 
298 1 1 1 2 2 213 1 99 1 215 1 217 1 81 1 196 1 37 1 64 1 287 1 314 2 14 4 244 1 155 1 225 8 139 4 250 1 370 2 119 1 206 1 48 1 
298 1 327 1 1 1 2 1 213 1 99 1 279 1 100 1 259 2 217 1 81 1 196 2 64 1 287 1 69 2 314 2 14 6 225 12 139 6 271 2 250 1 370 2 48 2 182 1 229 1 
298 1 327 1 231 1 1 4 2 3 213 1 99 1 279 1 307 2 100 2 215 1 259 2 217 1 81 4 196 2 37 1 64 4 287 4 69 2 314 5 14 8 244 1 155 1 225 18 139 10 271 1 250 1 370 8 119 1 206 1 48 3 229 1 182 1 
298 1 327 1 1 4 2 3 213 1 99 1 279 1 307 2 100 3 259 3 217 1 81 4 196 2 64 4 287 4 69 3 314 6 14 7 225 16 139 9 271 2 250 1 370 8 348 1 48 3 229 1 182 1 
2 3 314 6 14 4 100 3 155 3 215 3 225 7 139 3 196 1 119 1 37 2 206 1 48 1 
298 1 327 1 1 4 2 3 213 1 99 1 279 1 307 2 100 1 215 1 259 2 217 1 81 4 196 2 37 1 64 4 287 4 69 2 314 4 14 8 244 1 155 1 225 18 139 10 271 1 250 1 370 8 119 1 348 1 206 1 48 3 229 1 182 1 
64 2 287 2 2 2 1 2 314 3 14 4 307 1 244 1 100 1 155 1 215 1 225 8 139 4 81 2 370 4 196 1 119 1 37 1 206 1 48 1 
2 2 314 2 26 1 14 3 244 1 155 1 215 1 225 6 139 3 119 1 196 1 37 1 206 1 48 1 
64 1 287 1 2 1 231 1 1 1 69 1 314 2 14 2 100 1 259 1 225 4 81 1 139 2 271 1 370 2 196 1 48 1 
298 1 2 1 69 1 213 1 314 2 99 2 14 4 100 1 246 1 259 1 225 7 139 3 271 1 196 1 48 1 
298 2 2 5 1 2 99 2 307 2 100 4 215 2 259 2 81 2 196 3 37 1 38 1 64 2 287 2 174 1 69 2 314 9 14 12 244 1 155 2 246 1 225 23 139 11 271 2 89 1 370 4 119 1 206 1 48 3 
225 1 99 1 14 1 
225 1 298 1 139 1 
64 1 287 1 1 1 231 1 2 2 69 1 314 3 14 3 100 1 259 1 225 6 81 1 139 3 271 1 370 2 196 1 228 1 48 1 
298 1 327 1 1 1 2 1 213 1 99 1 279 1 100 1 259 2 217 1 81 1 196 2 64 1 287 1 69 2 314 2 14 6 225 12 139 6 271 2 250 1 370 2 48 2 182 1 229 1 
2 1 314 2 14 3 100 1 155 1 215 1 225 6 139 3 196 1 206 1 48 1 
64 1 287 1 2 1 174 1 1 1 314 2 14 2 307 1 100 1 155 1 215 1 225 3 139 1 81 1 370 2 119 1 37 1 
64 1 287 1 1 1 2 3 314 5 14 5 100 2 155 2 45 1 215 2 217 1 225 10 81 1 139 5 370 2 196 2 206 1 48 2 
64 1 287 1 1 1 314 1 100 1 259 1 217 1 225 2 81 1 139 2 370 2 48 1 
64 1 287 1 2 1 1 1 69 1 314 2 14 2 100 1 259 1 217 1 225 4 81 1 139 2 271 1 370 2 196 1 48 1 
64 3 287 3 174 1 1 3 2 1 314 2 307 1 14 2 100 1 155 1 215 1 225 3 217 1 81 3 139 1 370 6 348 1 
298 3 231 1 1 5 2 7 213 1 99 4 258 1 307 2 100 5 215 3 56 1 259 3 217 1 81 5 34 1 196 5 37 1 64 5 287 5 174 1 69 3 314 12 14 18 244 1 155 3 246 1 225 34 139 16 271 3 370 10 119 1 348 1 206 2 48 5 
216 1 65 1 296 1 317 1 164 1 208 1 30 1 
65 1 331 1 164 1 332 1 30 1 216 1 32 1 296 1 317 1 118 1 105 1 208 1 
253 1 76 1 283 1 277 1 91 1 26 1 330 1 268 1 126 1 198 1 169 1 
107 1 76 1 162 1 363 1 277 1 330 1 268 1 126 1 15 1 30 1 216 2 283 1 8 1 91 1 317 1 198 1 322 1 208 2 
107 1 76 1 162 1 363 2 201 1 124 1 330 1 268 1 126 3 15 1 30 2 216 2 179 1 283 1 8 1 91 1 317 1 168 1 198 2 322 2 40 1 208 2 170 1 
76 2 162 1 330 2 124 1 126 3 30 2 216 2 283 2 168 1 198 2 40 1 170 1 107 1 337 1 363 2 201 1 243 1 268 1 15 1 179 1 91 1 317 1 322 2 208 2 
76 3 351 1 277 1 257 1 330 3 126 4 283 3 358 1 334 1 198 1 40 1 220 1 337 1 11 1 363 1 66 2 201 1 345 1 268 1 179 1 91 1 122 2 273 1 
337 1 76 3 351 1 11 1 277 1 363 1 66 2 201 1 330 3 345 1 268 1 126 4 179 1 283 3 358 1 151 1 91 1 334 1 198 1 122 2 273 1 40 1 
76 1 309 1 283 1 91 1 330 1 268 1 
22 1 172 1 76 6 77 1 276 1 277 2 361 1 363 1 364 1 242 1 330 7 268 2 126 3 309 1 193 1 283 7 91 3 130 1 47 1 198 2 183 1 
254 1 22 1 76 1 23 2 162 1 2 2 1 2 330 1 54 1 186 2 126 1 215 1 30 1 216 2 81 2 283 1 333 1 8 1 284 1 196 1 37 1 104 1 311 1 198 1 107 1 64 2 362 1 363 1 287 2 112 1 314 2 366 1 14 3 244 1 268 1 155 1 15 1 225 6 139 3 370 4 91 1 317 2 119 1 206 1 48 1 322 1 208 2 
277 1 330 1 280 1 187 1 283 1 234 2 151 1 196 2 236 1 334 1 60 1 107 1 11 1 12 1 66 2 109 1 345 2 155 1 295 1 206 1 121 4 122 2 208 1 160 1 299 2 76 1 351 1 27 2 126 2 215 1 29 1 30 1 216 1 358 2 35 1 82 5 166 1 170 1 171 2 365 2 45 1 224 1 140 1 319 1 48 2 322 1 273 2 
22 1 76 2 11 1 363 1 330 2 268 1 126 2 270 1 309 1 283 2 91 2 130 1 198 1 
22 1 253 1 337 1 76 4 277 1 328 1 330 4 268 1 126 1 283 4 91 1 169 1 198 1 
172 1 76 2 50 1 363 1 201 1 330 2 289 1 268 1 126 1 193 1 283 2 91 2 9 1 198 1 
10 1 76 1 341 1 326 1 283 1 277 1 91 1 237 1 330 1 268 1 
22 1 76 2 330 2 242 1 268 1 126 1 283 2 91 1 36 1 47 1 198 1 
253 1 22 1 76 4 77 1 276 1 277 1 328 1 201 1 330 5 268 2 126 3 283 5 91 2 47 1 169 1 198 2 
253 1 22 1 76 4 77 1 277 1 328 1 201 1 330 5 268 2 55 1 126 3 283 5 91 2 47 1 169 1 198 2 
107 1 76 1 162 1 363 1 277 1 330 1 243 1 268 1 126 1 15 1 30 1 216 2 283 1 91 1 317 1 198 1 322 1 208 2 
172 1 76 1 361 1 363 1 201 1 330 1 268 1 126 1 193 1 283 1 91 2 130 1 198 1 
301 1 33 1 52 1 317 1 238 1 
159 1 301 2 351 1 12 1 184 1 52 2 66 2 185 1 124 1 292 1 33 2 358 1 72 1 317 1 238 1 168 1 122 2 273 1 170 1 
161 1 52 1 256 1 290 1 30 1 216 1 33 1 238 1 208 1 
184 1 72 1 238 1 
93 1 266 1 108 1 67 1 304 1 178 1 269 1 46 3 249 1 133 3 106 1 
339 1 266 1 354 1 264 1 
266 1 106 1 
266 1 26 1 269 1 106 1 
46 1 266 1 249 1 178 1 133 1 269 1 106 1 
46 1 125 1 101 1 
266 1 93 1 108 2 96 1 178 1 269 1 46 3 249 1 133 3 49 1 262 1 106 1 
46 2 266 1 211 1 249 1 304 1 178 1 133 2 269 1 106 1 
10 1 88 1 46 1 266 1 93 1 326 1 249 1 98 1 178 1 133 1 264 1 
46 1 266 1 93 1 249 1 178 1 133 1 106 1 
46 1 93 1 249 1 178 1 133 1 269 1 106 2 
266 1 93 1 178 2 223 1 46 2 249 2 158 1 133 2 335 1 106 1 
46 3 266 2 93 1 249 1 354 1 67 1 304 2 178 1 133 3 269 1 375 1 106 1 264 1 
10 1 266 1 341 1 93 1 326 2 178 1 304 1 269 1 114 1 46 2 88 1 249 1 133 2 207 1 106 1 
46 4 266 2 93 1 211 1 249 2 354 1 304 2 178 2 133 4 269 1 123 1 106 1 264 1 
46 1 266 1 93 1 249 1 178 1 133 1 269 1 106 1 
339 1 266 3 108 1 354 1 304 2 178 1 269 2 46 4 249 1 133 4 262 1 49 1 106 2 264 1 
266 1 93 1 329 1 178 1 304 1 269 1 46 2 226 1 249 1 133 2 58 1 106 1 
266 1 93 1 108 2 178 1 269 1 46 3 249 1 120 1 133 3 49 1 262 2 106 1 
266 2 372 1 62 2 115 1 
46 1 93 1 249 1 342 1 178 1 133 1 
46 2 266 1 93 1 249 1 67 1 304 1 178 1 133 2 269 1 106 1 
188 1 
46 1 266 1 93 1 249 1 178 1 133 1 269 1 106 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (15,285) (15,285) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (15,285) (15,285) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (15,285) (15,285) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (15,285) (15,285) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (52,135) 174 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (64,67) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (64,67) (64,67) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (52,135) 174 121 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (64,67) (64,67) 347 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (52,135) 174 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONDITION | 867 | while (x) -> while (!x)
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | RETURN | 994 | return null
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z | OPERATOR | 5298 | && -> ||
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5730 | return null
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
132 1 248 1 233 1 37 1 349 1 274 1 285 1 15 1 168 1 377 1 74 1 129 1 220 1 
132 1 248 1 233 1 37 1 349 1 274 1 285 1 15 1 168 1 377 1 74 1 129 1 220 1 
132 1 248 1 233 1 37 1 349 1 274 1 285 1 15 1 168 1 377 1 74 1 129 1 220 1 
132 1 248 1 233 1 37 1 349 1 274 1 285 1 15 1 168 1 377 1 74 1 129 1 220 1 
368 1 323 1 248 1 35 1 233 4 37 1 315 2 211 2 349 1 168 1 377 1 178 3 206 1 216 1 170 1 59 3 129 4 46 1 
368 1 248 1 233 2 349 1 374 1 168 1 178 1 377 1 74 1 170 1 185 1 129 2 320 1 220 1 352 1 46 1 
368 1 248 1 233 3 35 1 315 1 168 2 377 2 178 2 74 1 59 1 129 3 258 1 46 1 
368 1 323 1 221 1 248 1 1 1 233 9 35 3 37 1 315 4 211 2 349 1 114 1 168 2 178 5 377 2 216 1 206 1 74 1 170 1 59 7 366 1 129 9 258 1 46 1 
368 1 323 1 221 1 248 1 1 1 233 9 35 3 37 1 315 4 211 2 349 1 114 1 168 2 178 5 377 2 216 1 206 1 74 1 170 1 59 7 366 1 129 9 258 1 46 1 
231 1 77 1 272 1 
7 1 77 1 123 2 
48 1 263 1 226 1 305 1 176 1 82 1 251 1 255 1 94 1 367 1 
246 2 263 1 135 1 174 1 275 1 334 2 335 2 280 1 19 1 20 1 
263 1 64 1 
48 1 65 1 231 1 77 1 189 1 303 1 332 1 305 1 125 1 207 1 252 1 255 1 94 1 338 1 
48 1 65 1 231 1 77 1 332 2 226 1 305 1 251 1 125 1 207 1 252 1 255 1 338 2 367 1 94 1 
156 1 338 1 332 1 122 1 230 1 
231 1 77 1 232 1 36 1 156 1 338 2 332 2 122 1 
156 1 338 1 332 1 
67 1 263 1 338 1 64 1 332 1 122 1 
77 1 
231 1 77 1 36 1 156 1 237 1 338 2 332 2 122 1 
231 1 342 2 77 1 32 1 108 1 110 1 134 1 36 1 39 2 348 2 122 2 332 5 333 1 72 1 253 1 5 1 156 2 338 5 106 1 
176 1 272 1 
48 2 188 1 226 1 305 2 177 1 176 2 251 1 255 2 367 1 
88 1 104 1 359 1 
246 1 302 1 66 1 261 1 85 1 69 1 238 1 331 1 275 1 176 1 305 1 334 1 227 1 335 1 277 1 255 1 
302 1 48 1 246 1 159 1 66 1 261 1 85 1 345 1 238 1 331 1 275 1 226 1 305 2 334 1 227 1 335 1 277 1 255 2 367 1 359 1 
48 5 226 4 176 1 177 1 305 5 159 2 251 1 102 1 345 1 143 1 255 5 303 1 367 4 312 1 
48 2 226 2 305 2 217 1 142 1 255 2 94 1 367 2 
48 3 226 3 176 1 159 1 305 3 251 1 255 3 367 3 
48 1 226 1 305 1 142 1 255 1 94 1 367 1 
48 1 226 1 188 1 305 1 177 1 251 1 255 1 94 1 367 1 
48 2 246 1 345 1 174 1 121 1 275 1 226 2 177 1 251 1 125 1 207 1 252 1 255 2 367 2 65 1 159 1 262 1 263 1 135 1 332 1 305 2 334 1 335 1 94 1 338 1 
48 2 226 1 176 1 305 2 159 1 255 2 303 1 367 1 312 1 
48 3 65 1 77 1 159 2 262 1 345 1 332 1 226 3 177 1 305 3 251 1 252 1 125 1 207 1 279 1 255 3 338 1 94 1 367 3 
48 2 159 1 88 1 226 2 177 1 305 2 251 1 255 2 367 2 359 1 
246 1 302 1 66 1 261 1 85 1 238 1 331 1 275 1 176 1 305 1 334 1 227 1 335 1 277 1 255 1 
246 1 270 1 261 1 85 1 238 1 331 1 275 1 176 1 305 1 334 1 227 1 335 1 277 1 255 1 351 1 
95 4 147 1 293 1 50 1 56 1 26 2 104 2 281 1 283 1 31 1 353 2 235 1 70 2 356 1 88 2 16 1 219 1 17 1 289 1 92 1 358 1 268 1 359 2 21 1 
48 1 226 1 305 1 207 1 217 1 255 1 94 1 367 1 
163 1 223 1 
163 1 223 1 
158 1 215 1 
158 1 215 1 
158 1 215 1 
73 1 163 1 223 1 
163 1 223 1 80 1 
158 1 133 1 215 1 183 1 163 2 223 2 
73 1 163 1 223 1 
73 1 163 1 223 1 
346 1 163 1 223 1 
346 1 163 1 223 1 
346 1 163 1 223 1 
48 2 222 1 223 1 250 1 80 1 226 2 225 1 198 1 176 1 365 1 209 1 27 1 255 2 298 1 367 2 29 1 112 1 163 1 332 1 305 2 140 1 44 1 244 1 338 1 
77 1 344 1 133 1 96 1 223 2 163 2 250 2 332 2 225 2 4 2 242 1 243 1 58 1 209 2 244 1 27 2 338 2 28 1 29 3 
37 1 170 1 349 1 
374 1 170 1 349 1 
30 1 374 1 37 2 113 1 290 1 349 3 
30 1 374 1 37 1 113 1 127 1 349 2 
30 1 374 1 37 1 113 2 349 2 
361 1 342 1 77 2 147 1 314 1 363 2 97 1 222 1 348 1 122 4 123 3 25 2 198 1 156 1 298 1 229 1 7 1 231 1 32 1 324 1 108 3 84 2 110 2 36 1 326 1 39 1 356 1 332 5 92 1 289 1 338 5 118 1 
361 3 342 2 77 5 292 1 147 3 97 2 348 2 122 7 123 9 25 6 198 4 317 1 156 6 182 1 230 5 7 3 8 1 231 1 32 1 108 8 84 6 110 6 36 1 326 1 39 2 356 3 332 9 72 1 194 1 218 1 92 3 289 3 338 9 118 2 172 5 
342 1 361 1 77 3 147 1 314 1 363 1 97 1 348 1 122 2 123 4 198 1 25 2 229 1 7 2 231 1 108 3 110 2 84 2 39 1 356 1 332 3 72 1 92 1 289 1 338 3 118 1 
342 1 361 2 77 4 292 1 147 2 314 1 363 2 97 1 348 1 122 3 123 7 25 4 198 2 182 1 229 1 7 3 231 1 108 5 84 4 110 4 39 1 356 2 332 4 72 1 218 1 92 2 289 2 338 4 118 1 
360 1 277 1 272 1 
378 1 277 1 
181 1 
277 1 238 1 331 1 
169 1 277 1 
277 1 331 1 
360 2 369 1 277 3 208 1 238 1 331 1 
31 2 95 6 160 1 68 1 120 2 264 1 70 3 165 1 14 2 115 1 202 1 26 3 16 4 278 1 92 1 289 1 186 2 
31 2 95 6 160 1 68 1 120 2 264 1 70 3 165 1 14 2 115 1 202 1 26 3 16 4 278 1 92 1 289 1 186 2 
31 2 95 6 160 1 68 1 120 2 264 1 70 3 165 1 175 1 14 2 115 1 202 1 26 3 16 4 278 1 92 1 289 1 186 2 
361 3 95 32 145 1 147 3 120 6 293 1 202 1 204 1 26 16 278 1 186 3 130 1 281 1 31 5 353 2 260 1 160 1 325 4 68 2 264 2 70 16 165 2 356 3 115 1 14 3 75 3 16 11 380 1 76 1 17 1 337 1 289 4 92 4 268 1 
95 8 120 1 293 2 26 4 278 1 186 2 281 2 31 3 353 4 160 1 68 1 264 1 70 4 165 1 137 1 115 1 14 2 16 4 76 1 17 2 266 1 92 1 289 1 268 2 
246 1 0 1 248 1 149 1 349 2 201 1 200 1 178 1 203 1 227 1 59 1 129 2 368 1 261 1 233 2 37 1 40 1 41 1 372 1 374 1 168 1 334 1 377 1 139 1 335 1 74 1 170 1 45 1 290 1 46 1 
246 1 349 2 201 1 200 1 178 1 203 1 227 1 59 2 129 3 63 1 368 1 261 1 354 1 233 3 37 1 327 1 40 1 41 1 372 1 374 1 168 1 334 1 377 1 139 1 335 1 74 1 170 1 45 1 290 1 46 1 
246 1 349 2 201 1 200 1 178 1 203 1 227 1 59 2 129 2 63 1 368 1 261 1 233 2 327 1 37 1 40 1 372 1 374 1 334 1 335 1 74 1 170 1 45 1 290 1 46 1 
246 1 261 1 354 1 370 1 173 1 233 1 38 1 331 1 275 1 81 1 168 1 334 1 200 2 201 2 227 1 203 2 377 1 276 1 335 1 74 2 350 1 277 1 129 1 
246 1 261 1 248 1 233 1 37 1 40 1 41 1 149 1 372 1 349 2 374 1 168 1 334 1 200 1 201 1 227 1 139 1 377 1 203 1 335 1 74 1 170 1 45 1 290 1 129 1 63 1 
286 1 
246 2 48 1 340 3 342 1 196 1 49 1 3 1 150 1 348 1 205 1 207 1 252 1 350 1 156 4 255 1 7 1 65 1 108 2 261 1 110 2 161 1 355 1 303 1 304 1 71 1 306 1 305 1 357 1 310 1 118 1 269 1 123 1 275 2 316 1 227 1 125 1 277 1 128 1 32 1 189 1 370 1 36 2 39 1 239 1 331 1 332 4 191 1 334 2 192 1 335 2 90 1 338 4 94 1 
340 2 48 1 65 1 189 1 36 1 237 1 3 1 150 1 303 1 332 3 191 1 306 1 305 1 192 1 252 1 207 1 125 1 156 2 310 1 255 1 94 1 338 3 
340 3 48 1 65 1 231 1 77 1 189 1 36 1 237 1 3 1 303 1 332 3 191 1 71 1 306 1 305 1 192 1 252 1 207 1 125 1 156 1 310 1 255 1 94 1 338 3 
48 1 340 3 77 1 3 1 150 1 316 1 125 1 207 1 252 1 156 2 255 1 65 1 231 1 189 1 36 1 237 1 303 1 332 3 191 1 305 1 306 1 71 1 192 1 310 1 338 3 94 1 
340 6 48 1 342 1 3 1 49 1 196 2 150 4 348 1 54 1 252 1 207 1 156 7 255 1 65 1 7 2 108 1 110 1 161 2 303 1 305 1 306 1 71 4 357 1 310 1 269 2 77 5 78 1 316 4 125 1 231 5 32 1 189 1 36 3 237 1 39 1 239 2 240 1 332 5 138 1 191 1 192 1 91 1 94 1 338 5 
269 2 48 1 340 4 342 1 77 2 196 2 49 1 3 1 150 2 348 1 123 2 316 2 125 1 207 1 252 1 156 4 255 1 128 1 7 2 65 1 231 1 32 1 108 1 110 1 189 1 36 2 161 2 39 1 303 1 239 2 332 4 191 1 71 2 306 1 305 1 192 1 357 1 310 1 338 4 94 1 
269 2 48 1 340 4 342 1 77 1 196 2 49 1 3 1 150 2 348 1 54 1 316 2 125 1 207 1 252 1 156 4 255 1 7 2 65 1 231 1 32 1 108 1 110 1 189 1 36 2 161 2 39 1 303 1 239 2 332 4 138 1 191 1 71 2 305 1 306 1 192 1 357 1 91 1 310 1 338 4 94 1 
269 2 48 1 340 4 342 1 77 1 196 2 49 1 3 1 150 2 348 1 54 1 316 2 125 1 207 1 252 1 156 4 255 1 7 2 65 1 231 1 32 1 108 1 110 1 189 1 36 2 161 2 39 1 303 1 239 2 332 4 138 1 191 1 71 2 305 1 306 1 192 1 357 1 91 1 310 1 338 4 94 1 
48 1 340 4 342 1 77 1 196 2 49 1 3 1 150 2 348 1 123 2 54 1 316 2 125 1 207 1 252 1 156 4 60 2 255 1 62 1 65 1 231 1 32 1 108 1 110 1 189 1 36 2 161 2 39 1 303 1 42 1 332 4 191 1 71 2 305 1 306 1 192 1 310 1 288 1 338 4 94 1 245 2 
269 2 48 1 340 5 342 1 77 1 78 1 196 2 49 1 3 1 150 3 348 1 54 1 316 3 125 1 207 1 252 1 156 5 255 1 7 2 65 1 231 1 32 1 108 1 110 1 189 1 36 2 161 2 39 1 303 1 239 2 332 4 138 1 191 1 305 1 306 1 71 3 192 1 357 1 91 1 310 1 338 4 94 1 
269 2 48 1 340 5 342 1 77 1 78 1 196 2 49 1 3 1 150 3 348 1 54 1 316 3 125 1 207 1 252 1 156 5 255 1 7 2 65 1 231 1 32 1 108 1 110 1 189 1 36 2 161 2 39 1 303 1 239 2 332 4 138 1 191 1 305 1 306 1 71 3 192 1 357 1 91 1 310 1 338 4 94 1 
48 1 340 4 342 1 77 1 196 2 49 1 3 1 150 2 348 1 123 2 316 2 125 1 207 1 252 1 156 4 60 2 255 1 128 1 62 1 65 1 231 1 32 1 108 1 110 1 189 1 36 2 161 2 39 1 303 1 332 4 191 1 71 2 306 1 305 1 192 1 310 1 338 4 94 1 245 2 
31 2 353 2 95 5 160 1 272 1 293 1 70 3 50 1 14 2 115 1 176 2 26 2 16 2 17 1 278 1 92 1 289 1 358 1 268 1 186 2 21 1 281 1 
361 2 95 14 145 1 147 1 271 1 120 1 293 2 50 2 176 1 179 1 26 8 104 11 281 2 31 1 353 4 325 3 86 1 164 1 70 6 166 1 356 2 88 4 16 2 75 3 117 1 17 2 381 1 337 1 358 1 289 2 92 1 268 2 359 11 
246 1 48 1 95 2 345 1 271 1 293 1 50 1 275 1 226 1 295 1 176 1 227 1 26 1 277 1 255 2 301 1 367 1 281 1 302 1 66 1 159 1 353 2 261 1 85 1 69 1 70 1 238 1 331 1 373 1 88 1 334 1 305 2 335 1 117 1 17 1 381 1 358 1 268 1 
246 3 48 1 247 1 95 19 345 1 147 2 293 3 50 3 197 2 52 2 255 3 104 6 300 1 63 1 302 2 353 6 159 1 66 2 261 2 160 1 162 2 70 10 356 2 14 2 115 1 305 3 16 8 117 1 17 3 265 2 358 3 268 3 359 6 361 2 271 1 120 4 275 1 226 1 176 2 227 2 26 9 277 2 278 1 318 1 186 2 367 1 281 3 31 4 85 2 135 2 238 2 331 2 88 6 334 3 335 3 381 1 92 3 289 3 
0 1 48 1 246 8 95 2 146 1 271 1 293 2 50 2 275 2 199 1 226 1 227 2 26 1 350 1 254 1 277 3 255 1 367 1 63 1 281 2 159 1 353 4 83 1 261 2 370 1 236 1 371 1 70 1 331 2 305 1 334 8 335 7 241 1 117 1 17 2 358 2 20 2 268 2 21 1 
48 1 361 1 95 3 147 1 249 1 293 1 50 1 226 1 177 1 251 1 26 1 104 1 255 1 367 1 281 1 31 1 353 2 70 2 356 1 88 1 305 1 16 1 17 1 381 1 358 1 289 1 92 1 268 1 359 1 
353 2 95 2 120 1 293 1 50 1 356 1 88 1 26 2 16 1 219 1 17 1 104 1 358 1 289 1 268 1 359 1 21 1 281 1 
31 1 353 2 95 2 235 1 147 1 293 1 50 1 70 2 88 1 16 1 17 1 104 1 358 1 92 1 268 1 359 1 21 1 281 1 
361 1 95 4 147 1 120 1 293 1 50 1 26 2 104 2 281 1 31 1 353 2 70 2 356 1 88 2 16 2 17 1 289 1 358 1 92 1 268 1 359 2 21 1 
353 2 95 2 236 1 120 1 293 1 50 1 356 1 88 1 26 2 16 1 219 1 17 1 104 1 358 1 289 1 268 1 359 1 281 1 
31 1 353 2 95 2 235 1 147 1 236 1 293 1 50 1 70 2 88 1 16 1 17 1 104 1 358 1 92 1 268 1 359 1 281 1 
361 1 95 4 147 1 120 1 293 1 50 1 26 2 104 2 281 1 31 1 353 2 236 1 70 2 356 1 88 2 16 2 17 1 289 1 358 1 92 1 268 1 359 2 
361 1 95 4 147 1 120 1 293 1 50 1 26 2 104 2 281 1 31 1 353 2 70 2 356 1 88 2 16 2 17 1 289 1 358 1 92 1 268 1 359 2 
246 1 95 2 271 1 293 1 50 1 275 1 176 1 227 1 26 1 277 1 255 1 281 1 302 1 66 1 353 2 261 1 85 1 135 1 70 1 238 1 331 1 334 1 305 1 335 1 117 1 17 1 358 1 268 1 
270 1 246 1 362 1 95 2 271 1 293 1 50 1 275 1 176 1 227 1 26 1 277 1 351 1 255 1 281 1 353 2 261 1 85 1 70 1 238 1 331 1 334 1 305 1 335 1 117 1 17 1 358 1 268 1 
361 1 95 4 147 1 120 1 293 1 50 1 26 2 104 2 281 1 31 1 353 2 70 2 356 1 88 2 16 2 17 1 381 1 289 1 358 1 92 1 268 1 359 2 
246 1 0 1 361 1 95 4 147 1 120 1 293 1 50 1 52 1 227 1 26 2 277 1 104 2 255 1 281 1 302 1 31 1 66 1 353 2 261 1 85 1 135 1 70 2 356 1 238 1 331 1 88 2 334 1 305 1 335 1 16 2 17 1 92 1 289 1 358 1 268 1 359 2 
48 1 361 1 95 3 147 1 120 1 293 1 50 1 226 1 177 1 251 1 26 2 255 1 104 1 367 1 281 1 353 2 70 1 356 1 88 1 305 1 16 1 89 1 17 1 381 1 92 1 358 1 289 1 268 1 359 1 
361 3 343 2 95 19 119 1 145 1 147 3 120 3 293 2 26 9 180 2 184 1 105 1 281 2 282 1 31 3 259 1 353 4 325 2 70 10 13 1 356 3 167 1 137 1 75 1 16 6 17 2 337 1 289 3 92 3 268 2 
341 1 361 3 343 1 95 26 147 2 120 2 293 3 26 14 154 1 155 1 180 4 184 2 105 2 281 3 282 1 31 2 259 1 353 6 10 1 325 2 70 12 356 3 167 1 137 1 16 4 75 2 76 2 287 1 17 3 92 2 337 2 289 3 268 3 171 1 
341 1 361 4 343 1 95 43 119 1 145 1 147 4 120 5 293 3 26 20 154 1 155 1 180 4 278 1 103 1 184 2 186 2 105 1 281 3 282 1 31 5 259 1 353 6 160 1 10 1 325 4 70 23 356 4 167 1 137 1 14 2 115 1 75 3 16 10 76 1 287 1 17 3 337 3 289 5 92 5 171 1 268 3 
341 1 361 4 343 1 95 38 119 1 145 1 147 3 120 3 293 4 26 19 154 1 155 1 180 4 278 1 103 1 184 2 186 2 105 1 281 4 282 1 31 5 259 1 353 8 160 1 10 1 325 4 70 19 356 4 167 1 137 1 14 2 115 1 75 3 16 8 76 2 287 1 17 4 337 3 289 5 92 4 171 1 268 4 
341 1 361 7 343 1 95 52 145 2 147 7 120 7 293 2 26 26 154 1 155 1 180 4 278 1 184 1 186 2 105 1 281 2 282 1 31 8 259 1 353 4 160 1 10 1 325 4 164 2 70 26 356 7 167 1 137 1 14 2 115 1 75 4 16 15 76 1 287 1 17 2 337 2 289 8 92 8 171 1 268 2 
225 1 133 1 242 1 96 1 209 1 163 1 223 1 27 1 250 1 212 1 
44 1 80 1 
152 1 225 1 209 1 163 1 223 1 27 1 250 1 93 1 187 1 
100 1 73 1 
307 1 346 1 183 1 
77 1 133 1 96 1 223 1 163 1 250 1 332 1 225 1 4 1 242 1 243 1 58 1 209 1 244 1 27 1 338 1 28 1 29 2 
77 1 133 1 96 1 223 1 163 1 250 1 332 1 225 1 4 1 242 1 243 1 58 1 209 1 244 1 27 1 338 1 28 1 29 2 
77 1 133 1 96 1 223 1 163 1 250 1 332 1 225 1 4 1 242 1 243 1 58 1 209 1 244 1 27 1 338 1 28 1 29 2 
100 1 73 1 183 1 
100 1 73 1 183 1 
307 1 346 1 
307 1 346 1 183 1 
140 1 365 1 
48 2 222 1 223 1 273 1 250 1 80 1 122 1 225 1 198 1 226 2 176 1 4 1 365 1 209 1 255 2 27 1 298 1 367 2 28 1 29 1 112 1 163 1 332 1 305 2 140 1 44 1 338 1 
246 2 48 2 95 2 271 1 293 1 50 1 364 1 227 1 26 1 277 1 254 1 255 2 281 1 353 2 261 1 111 1 70 1 331 1 334 2 305 2 335 2 241 1 117 1 17 1 336 1 381 1 267 1 358 1 20 2 268 1 339 1 
246 2 0 1 261 1 37 1 41 1 372 1 349 2 136 1 374 1 334 2 227 1 203 1 335 2 101 1 170 1 45 1 290 1 63 1 6 1 
246 1 261 1 37 1 224 1 41 1 372 1 349 2 136 1 374 1 334 1 203 1 227 1 335 1 170 1 45 1 290 1 63 1 
246 1 261 1 370 1 234 1 38 1 331 1 275 1 334 1 227 1 203 1 335 1 101 1 350 1 277 1 
246 1 261 1 37 1 41 1 372 1 349 2 136 1 374 1 334 1 203 1 227 1 335 1 101 1 170 1 45 1 290 1 63 1 6 1 
328 1 
231 1 77 1 108 1 110 1 134 1 5 1 272 1 
269 1 342 1 77 2 348 1 123 1 156 1 7 1 231 1 32 1 108 1 110 1 36 1 39 1 239 1 332 1 357 1 338 1 
0 1 246 3 342 4 144 2 147 2 148 2 348 4 53 2 205 1 252 2 5 1 156 5 256 2 157 1 257 2 7 6 108 9 261 4 110 8 11 2 356 2 308 2 169 2 265 2 18 1 118 2 360 2 361 2 77 8 23 1 275 1 123 12 24 1 25 6 227 3 277 10 319 2 321 1 231 2 32 4 369 1 84 6 134 1 36 3 39 4 238 3 331 3 332 5 334 3 378 3 335 3 289 2 92 2 338 5 
341 1 342 2 361 2 77 5 147 2 348 2 123 6 53 1 25 5 205 1 154 1 57 1 155 1 156 1 256 2 7 3 231 2 32 2 108 8 33 1 84 5 110 5 36 1 325 1 39 2 356 2 332 1 75 1 287 1 337 1 289 2 92 2 338 1 171 1 118 1 
342 1 32 1 108 2 67 1 110 1 160 1 263 1 347 1 39 1 348 1 332 1 138 1 14 1 92 1 289 1 256 2 338 1 186 1 64 1 
342 1 231 1 32 1 77 1 108 1 110 1 134 1 39 1 348 1 5 1 
7 5 361 2 77 5 108 5 110 5 84 5 147 2 356 2 123 10 53 1 25 5 265 1 256 2 289 2 92 2 
231 1 77 1 36 1 156 1 338 1 332 1 
246 4 342 2 98 1 348 2 275 2 24 2 227 1 205 2 350 1 277 1 156 4 107 1 32 1 261 1 108 2 110 2 370 1 36 2 355 1 39 2 331 1 304 1 332 3 334 4 72 1 335 4 18 1 338 3 118 2 
246 1 334 1 335 1 263 1 135 1 174 1 275 1 
7 2 342 1 231 2 32 1 77 4 108 1 84 2 110 2 264 1 39 1 348 1 123 4 25 2 205 1 118 1 
209 1 27 1 61 1 
242 1 365 1 209 1 141 1 27 1 
209 1 27 1 61 1 
209 1 27 1 61 1 
79 1 209 1 27 1 
79 1 209 1 27 1 
79 1 209 1 27 1 
209 1 27 1 
163 1 223 1 
31 2 353 4 95 9 160 1 120 2 293 2 70 5 115 1 14 2 26 4 16 4 76 1 17 2 278 1 92 1 289 1 268 2 186 2 281 2 
31 2 95 5 160 1 272 1 70 3 115 1 14 2 26 2 16 2 278 1 289 1 92 1 186 2 
31 1 361 1 353 2 95 4 147 1 120 1 329 1 293 1 70 2 356 1 26 2 16 2 17 1 92 1 289 1 268 1 281 1 
31 1 361 1 95 7 325 2 145 1 147 1 120 1 70 4 356 1 26 3 75 1 16 2 92 1 337 1 289 1 
361 2 95 22 145 1 147 2 120 4 293 2 26 10 179 1 278 1 299 1 186 3 281 2 31 5 353 4 160 1 325 2 164 1 70 12 356 2 14 3 115 1 16 9 75 2 76 2 17 2 289 3 92 3 268 2 
95 1 325 1 70 1 
95 1 26 1 75 1 
361 1 31 2 353 2 95 6 147 1 120 1 293 1 329 1 70 3 356 1 26 3 16 3 17 1 265 1 289 1 92 1 268 1 281 1 
361 2 341 1 95 12 147 2 120 1 293 1 26 6 154 1 155 1 281 1 31 1 353 2 325 1 70 6 356 2 137 1 75 1 16 2 287 1 17 1 337 1 289 2 92 2 268 1 171 1 
31 1 95 4 160 1 70 2 14 1 26 2 16 1 289 1 92 1 186 1 
31 1 353 2 95 3 120 1 293 1 70 2 14 1 115 1 26 1 16 2 76 1 278 1 17 1 299 1 186 1 268 1 281 1 
14 2 31 2 95 5 160 1 26 2 16 2 347 1 70 3 92 1 289 1 186 2 
353 2 95 2 120 1 293 1 356 1 137 1 26 2 16 1 17 1 289 1 268 1 281 1 
31 1 361 1 353 2 95 4 147 1 120 1 293 1 70 2 356 1 137 1 26 2 16 2 17 1 92 1 289 1 268 1 281 1 
31 1 353 6 95 3 119 1 120 1 293 3 70 2 137 1 14 1 26 1 16 2 76 1 17 3 299 1 268 3 186 1 281 3 
361 3 95 35 119 1 145 1 147 3 120 6 293 5 204 1 26 16 278 1 299 1 186 3 130 1 281 5 31 6 353 10 160 2 325 4 329 1 70 19 356 3 137 1 14 3 115 1 75 3 16 12 380 1 76 2 17 5 337 1 289 5 92 5 268 5 
95 7 293 1 26 3 154 1 278 1 186 2 281 1 31 2 353 2 160 1 325 1 70 4 137 1 115 1 14 2 75 1 16 2 17 1 92 1 289 1 337 1 268 1 
361 1 95 10 145 1 120 1 293 2 26 5 154 1 278 1 186 2 281 2 31 2 353 4 160 1 325 2 329 1 70 5 356 1 137 1 14 2 115 1 75 1 16 3 17 2 92 1 337 1 289 2 268 2 
341 1 361 2 95 18 147 2 120 1 293 3 26 8 154 1 155 1 278 1 186 2 281 3 31 3 353 6 160 1 325 1 329 1 70 10 356 2 137 1 14 2 115 1 75 1 16 4 287 1 76 1 17 3 337 1 289 3 92 3 268 3 171 1 
361 2 341 1 95 16 147 1 120 3 293 3 26 9 154 1 155 1 278 1 186 2 281 3 31 3 353 6 160 1 325 1 329 1 70 7 356 2 137 1 14 2 115 1 75 1 16 6 76 1 287 1 17 3 337 1 289 3 92 2 268 3 171 1 
95 7 293 1 26 3 154 1 278 1 186 2 281 1 31 2 353 2 160 1 325 1 70 4 137 1 115 1 14 2 75 1 16 2 17 1 92 1 289 1 337 1 268 1 
361 2 341 1 95 12 147 2 120 1 293 1 26 6 154 1 155 1 281 1 31 1 353 2 325 1 70 6 356 2 137 1 75 1 16 2 287 1 17 1 337 1 289 2 92 2 268 1 171 1 
341 1 361 2 95 17 147 1 120 3 293 4 26 9 154 1 155 1 278 1 186 2 281 4 31 3 353 8 160 1 325 1 329 1 70 8 356 2 137 1 14 2 115 1 75 1 16 6 287 1 76 2 17 4 337 1 289 3 92 2 268 4 171 1 
341 1 361 3 95 16 119 1 147 2 120 3 293 4 26 9 154 1 155 1 281 4 31 3 353 8 325 1 70 7 356 3 137 1 75 1 16 6 287 1 76 2 17 4 337 1 289 3 92 2 268 4 171 1 
31 2 95 7 160 1 120 2 70 4 115 1 14 2 26 3 16 4 278 2 92 1 289 1 186 2 
341 1 361 2 95 17 119 1 147 1 120 1 293 4 26 9 154 1 155 1 278 1 186 2 281 4 31 3 353 8 160 1 325 1 70 8 356 2 137 1 14 2 115 1 75 1 16 4 287 1 76 2 17 4 337 1 289 3 92 2 268 4 171 1 
48 1 176 1 305 1 2 1 255 1 303 1 312 1 
48 1 22 1 2 1 284 1 12 1 303 1 176 1 305 1 255 1 291 1 311 1 312 1 
246 1 334 1 261 1 227 1 335 1 370 1 350 1 277 1 272 1 331 1 275 1 
48 1 246 1 302 1 159 1 261 1 85 1 238 1 331 1 275 1 226 1 176 1 305 2 334 1 227 1 335 1 277 1 255 2 367 1 
246 1 48 2 24 1 226 1 176 1 227 1 125 1 207 1 277 3 255 2 367 2 257 1 302 1 159 1 261 1 85 1 238 2 331 2 334 1 305 2 335 1 169 1 94 1 
246 2 48 2 24 1 226 1 176 1 227 1 125 1 207 1 277 3 351 1 255 2 367 2 257 1 159 1 261 1 85 1 238 2 331 2 375 1 334 2 305 2 335 2 169 1 94 1 
360 1 246 3 77 1 275 1 24 1 227 1 55 1 252 1 277 4 297 1 156 1 257 1 231 1 261 1 238 1 332 2 331 1 375 1 334 3 378 1 335 3 169 1 338 2 
246 3 360 1 231 1 77 1 261 1 148 1 238 1 331 1 332 2 275 1 375 1 24 1 334 3 227 1 335 3 378 1 252 1 169 1 277 4 156 1 338 2 257 1 
246 1 334 1 261 1 227 1 335 1 146 1 
0 1 246 7 83 1 109 1 261 3 369 1 146 1 371 1 238 1 294 1 331 2 275 2 199 1 334 7 193 1 227 2 335 6 254 1 277 3 20 1 63 1 
48 1 0 1 246 1 95 5 293 2 50 2 364 1 226 1 52 1 176 2 227 1 26 2 277 1 278 1 255 2 186 2 367 1 281 2 302 1 31 2 159 1 353 4 66 1 261 1 160 1 85 1 162 1 135 1 70 3 238 1 331 1 14 2 115 1 305 2 334 1 335 1 16 2 17 2 381 1 92 1 289 1 358 2 268 2 
246 1 360 1 342 2 77 1 144 1 148 1 348 2 122 1 275 1 252 1 5 1 277 2 156 2 319 1 231 1 32 2 108 1 110 1 134 1 36 1 11 1 39 2 332 3 334 1 335 1 378 1 18 1 338 3 
0 1 360 1 246 2 261 2 369 1 146 1 23 1 238 1 331 1 334 2 227 1 335 2 277 2 
246 4 0 1 261 1 370 1 331 1 275 1 375 1 213 1 334 4 227 1 335 4 350 1 277 1 
246 2 47 1 109 1 261 2 238 1 331 1 24 1 334 2 43 1 193 1 227 1 335 2 277 1 300 1 
374 1 246 1 334 1 261 1 227 1 335 1 170 1 45 1 349 1 275 1 
246 2 0 1 334 2 261 1 227 1 335 2 277 1 254 1 331 1 339 1 63 1 
246 5 0 1 261 2 83 1 370 1 371 1 331 2 275 1 24 1 213 1 334 5 227 2 335 4 350 1 254 1 277 3 
246 5 0 1 261 2 83 1 370 1 331 2 275 1 24 1 213 1 334 5 227 2 335 4 195 1 350 1 254 1 277 3 
48 1 246 1 159 1 261 1 85 1 238 1 331 1 275 1 226 1 176 1 305 2 334 1 227 1 335 1 277 1 255 2 351 1 367 1 
246 1 109 1 261 2 369 1 238 1 294 1 331 1 24 1 334 1 193 1 227 1 335 1 277 1 
176 1 210 1 330 1 87 1 51 1 
131 1 65 1 231 1 77 1 9 1 262 1 210 2 330 2 87 1 122 1 332 2 51 2 176 1 252 1 207 1 125 1 309 1 94 1 338 2 
48 1 111 1 330 1 87 1 51 1 305 1 336 1 267 1 255 1 
131 1 9 1 87 1 
368 1 178 1 272 1 46 1 
168 1 368 1 178 1 377 1 233 1 129 1 46 1 
201 1 74 1 233 1 
368 1 248 1 233 3 168 1 376 1 296 1 178 1 377 1 124 1 129 3 185 2 46 1 
168 1 368 1 178 1 377 1 233 2 59 1 211 1 129 2 46 1 
168 1 178 1 377 1 248 1 216 1 233 1 37 1 170 1 315 1 129 1 349 1 
168 1 178 1 377 1 248 1 233 1 129 1 46 1 
168 1 368 1 377 1 248 1 233 1 129 1 46 2 
248 1 313 1 233 2 99 1 168 2 178 1 377 2 116 1 129 2 46 1 
368 1 248 1 221 1 233 3 35 1 315 1 114 1 168 1 377 1 178 2 59 2 129 3 46 1 
368 1 248 1 233 2 34 1 37 1 349 2 374 1 168 1 178 1 377 1 170 1 59 1 129 2 290 1 46 1 
368 1 323 1 248 1 233 4 35 1 315 1 211 1 168 2 377 2 178 2 59 2 129 4 46 1 
168 1 368 1 178 1 377 1 248 1 233 1 129 1 46 1 
368 2 233 4 35 1 315 1 296 1 376 1 168 1 377 1 178 3 153 1 59 2 185 1 129 4 46 2 
368 1 248 1 1 1 233 2 151 1 168 1 214 1 178 1 377 1 59 1 129 2 46 1 
368 1 248 1 233 3 376 1 168 1 296 2 178 1 377 1 126 1 129 3 185 2 46 1 
178 2 190 2 379 1 382 1 
168 1 322 1 377 1 248 1 233 1 129 1 
168 1 368 1 178 1 377 1 221 1 248 1 233 2 59 1 129 2 46 1 
228 1 
168 1 368 1 178 1 377 1 248 1 233 1 129 1 46 1 
168 1 368 1 178 1 377 1 221 1 248 1 233 3 59 1 185 1 129 3 46 1 
178 1 153 1 35 1 315 1 
178 1 46 1 

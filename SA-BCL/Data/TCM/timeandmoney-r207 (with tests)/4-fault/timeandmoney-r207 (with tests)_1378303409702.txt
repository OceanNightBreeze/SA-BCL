#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.ArrayIndexOutOfBoundsException 365 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2932 | 1 -> 0
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 941 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay; | RETURN | 495 | return null
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> -1
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
134 5 137 2 0 2 139 1 207 6 162 1 184 2 35 4 64 1 37 1 165 2 189 1 11 1 120 1 198 9 217 2 14 2 172 1 100 1 245 9 268 1 126 1 381 1 294 1 202 2 102 1 52 1 383 3 
134 5 137 2 0 2 139 1 207 6 162 1 184 2 35 4 64 1 37 1 165 2 189 1 11 1 120 1 198 9 217 2 14 2 172 1 100 1 245 9 268 1 126 1 381 1 294 1 102 1 202 2 52 1 383 3 
134 6 137 2 0 2 139 1 207 7 162 1 184 2 35 5 64 1 37 1 165 2 189 1 11 1 120 1 198 10 217 2 14 2 172 1 100 1 245 10 268 1 126 1 381 1 294 1 102 1 202 2 52 1 383 4 
134 4 137 2 0 2 139 1 207 4 162 1 184 2 35 3 64 1 37 1 165 2 189 1 11 1 120 1 198 7 217 2 14 2 172 1 245 7 268 1 126 1 381 1 294 1 102 1 202 1 52 1 383 2 
134 3 11 1 137 1 0 1 139 1 217 1 198 4 172 1 207 3 100 1 245 4 184 1 162 1 294 1 35 2 202 2 383 1 165 1 
134 1 11 1 261 1 137 1 120 1 139 1 217 1 198 2 14 1 245 2 184 1 294 1 382 1 165 1 189 1 275 1 
134 2 11 1 137 2 139 1 217 2 198 3 14 1 207 1 245 3 294 1 35 1 52 1 383 1 
134 5 137 2 0 1 139 1 207 7 162 1 184 1 35 4 64 1 165 1 281 1 11 1 198 9 217 2 14 1 172 1 100 1 245 9 381 1 294 1 202 2 383 3 52 1 296 1 
134 5 137 2 0 1 139 1 207 7 162 1 184 1 35 4 64 1 165 1 281 1 11 1 198 9 217 2 14 1 172 1 100 1 245 9 381 1 294 1 202 2 383 3 52 1 296 1 
358 1 364 1 190 1 
200 1 236 2 190 1 
133 1 237 2 12 2 269 2 67 2 87 2 323 2 99 1 
133 1 24 1 277 1 26 1 27 1 87 2 109 1 209 2 278 2 237 2 89 1 186 1 166 1 353 1 312 1 242 1 283 1 38 1 12 3 67 3 341 1 121 1 357 1 98 2 97 1 122 2 263 1 99 1 17 2 73 1 269 2 175 1 204 1 323 2 154 1 226 1 247 1 
302 1 237 1 12 1 269 1 67 1 348 1 176 1 87 1 323 1 99 1 
302 1 12 1 67 1 68 1 69 1 156 1 171 1 71 1 269 1 113 1 364 1 280 1 129 1 190 1 
302 1 12 1 67 1 68 2 69 1 87 1 156 1 237 1 269 1 113 1 364 1 323 1 280 1 129 2 190 1 
19 1 68 1 170 1 138 1 129 1 
253 1 19 1 68 2 170 1 329 1 364 1 129 2 190 1 
68 1 170 1 129 1 
302 1 12 1 67 1 214 1 348 1 68 1 87 1 99 1 237 1 269 1 19 1 176 1 323 1 129 1 
190 1 
19 1 68 2 170 1 310 1 329 1 364 1 129 2 190 1 
326 2 213 1 195 1 349 1 68 5 250 2 170 2 329 1 157 1 110 1 378 2 19 2 238 1 319 1 223 1 257 1 364 1 129 5 190 1 
133 1 358 1 
133 2 12 2 67 2 107 1 87 1 237 1 269 2 334 1 323 1 
86 1 359 1 379 1 
133 1 283 1 12 1 38 1 67 1 341 1 357 1 263 1 122 1 209 1 17 1 73 1 175 1 166 1 242 1 260 1 
104 1 283 1 38 1 12 2 341 1 67 2 86 1 357 1 263 1 122 1 209 1 73 1 17 1 101 1 237 1 269 1 175 1 323 1 166 1 242 1 
133 1 101 1 237 3 12 3 269 3 67 3 87 1 323 3 
302 1 237 1 12 1 269 1 67 1 176 1 323 1 
302 1 237 1 12 1 269 1 67 1 334 1 107 1 87 1 323 1 
104 1 133 1 24 1 302 1 205 1 26 1 27 1 87 2 156 1 209 1 278 2 237 3 113 1 89 1 334 1 186 1 166 1 280 1 312 1 242 1 283 1 38 1 12 4 341 1 67 4 94 1 68 1 69 1 121 1 357 1 98 1 263 1 122 1 99 1 73 1 17 1 101 1 269 3 175 1 204 1 154 1 323 3 129 1 247 1 
133 1 237 1 101 1 12 2 269 2 285 1 67 2 171 1 323 1 
104 1 302 1 12 3 67 3 68 1 205 1 69 1 87 1 156 1 101 2 237 3 269 3 113 1 334 1 352 1 323 3 129 1 280 1 190 1 
12 2 67 2 86 1 87 1 359 1 101 1 237 2 269 2 334 1 323 2 
133 1 283 1 12 1 38 1 67 1 341 1 357 1 263 1 122 1 209 1 17 1 73 1 175 1 166 1 242 1 
133 1 283 1 12 1 38 1 67 1 106 1 357 1 263 1 122 1 209 1 17 1 73 1 175 1 114 1 242 1 
24 1 105 1 86 2 26 1 27 2 330 1 159 1 235 1 278 2 186 1 353 2 118 1 286 1 121 1 262 1 98 4 359 2 379 2 72 1 343 1 362 1 298 1 204 1 247 1 
302 1 237 1 66 1 12 1 269 1 67 1 323 1 280 1 
104 1 133 1 12 5 178 1 285 1 67 5 87 1 171 1 101 2 237 4 269 5 49 1 334 1 323 4 
302 1 66 1 237 2 12 2 269 2 67 2 176 1 323 2 
167 1 59 1 
167 1 59 1 
309 1 
309 1 
309 1 
18 1 167 1 59 1 
18 1 167 1 59 1 
318 1 309 1 325 1 167 1 59 1 
168 1 167 1 59 1 
18 1 167 1 59 1 
10 1 167 1 59 1 
10 1 167 1 59 1 
10 1 167 1 59 1 
131 3 227 2 135 1 68 2 328 1 141 2 59 2 292 2 307 1 145 2 128 1 164 1 155 1 103 2 129 2 81 1 191 1 190 1 167 2 
131 1 133 1 227 1 141 1 59 1 237 2 145 1 239 1 90 1 211 1 164 1 167 1 192 1 168 1 12 2 67 2 68 1 218 1 173 1 269 2 323 2 103 1 129 1 299 1 
184 1 0 1 165 1 
184 1 382 1 165 1 
305 1 184 3 0 2 382 1 92 1 252 1 
305 1 184 2 0 1 382 1 92 1 123 1 
305 2 184 2 0 1 382 1 92 1 
326 1 250 1 329 1 330 1 110 2 236 3 88 2 60 1 211 1 190 2 192 1 9 2 355 1 118 1 284 1 286 1 213 1 287 1 68 5 170 1 262 1 378 1 290 1 200 1 345 1 19 4 295 1 319 3 201 2 364 1 129 5 299 1 
326 2 250 2 138 5 108 5 329 1 330 3 58 1 110 6 236 9 60 3 256 1 240 1 65 1 190 5 9 6 355 2 118 3 286 3 213 1 287 2 195 1 377 1 68 9 170 6 262 3 124 1 290 1 378 2 200 3 19 7 319 8 201 6 364 1 129 9 299 4 
326 1 250 1 330 1 110 2 236 4 88 1 60 1 190 3 355 1 9 2 118 1 284 1 287 1 286 1 195 1 68 3 262 1 378 1 200 2 19 2 295 1 319 3 201 2 364 1 129 3 299 1 
326 1 250 1 330 2 110 4 236 7 88 2 60 2 256 1 240 1 65 1 190 4 9 4 355 1 118 2 284 1 287 1 286 2 195 1 68 4 262 2 378 1 200 3 19 3 295 1 319 5 201 4 364 1 129 4 299 2 
38 1 358 1 22 1 
38 1 79 1 
308 1 
283 1 38 1 
283 1 38 3 175 1 279 1 161 1 22 2 
283 1 38 1 175 1 
38 1 84 1 
118 1 249 1 315 1 27 3 262 1 159 2 251 1 98 7 380 1 362 3 185 1 272 1 373 1 51 1 353 4 146 1 313 2 
118 1 249 1 315 1 27 3 262 1 159 2 251 1 98 7 380 1 362 3 185 1 272 1 373 1 51 1 353 4 146 1 313 2 
118 1 249 1 315 1 27 3 262 1 159 2 251 1 98 7 380 1 362 3 185 1 272 1 373 1 51 1 353 4 146 1 313 2 248 1 
249 2 85 1 368 1 26 1 27 15 251 1 330 3 159 5 278 2 60 3 185 2 373 1 186 1 115 1 187 1 146 1 353 16 313 3 339 4 118 4 286 3 315 2 262 4 98 31 264 1 291 3 152 1 380 5 362 10 272 1 51 2 297 1 204 1 247 1 
278 2 365 1 26 1 315 1 186 1 51 1 204 1 98 1 338 1 353 1 313 1 247 1 
134 1 137 1 0 1 2 1 139 1 207 1 252 1 209 1 184 2 112 1 143 1 165 1 336 1 242 1 376 1 11 1 40 1 198 2 217 1 122 1 14 1 17 1 245 2 293 1 73 1 174 1 47 1 294 1 382 1 300 1 
301 1 134 1 137 1 0 1 2 1 139 1 252 1 207 2 209 1 184 2 112 1 165 1 336 1 242 1 376 1 11 1 40 1 42 1 198 3 217 1 199 1 122 1 14 1 17 1 245 3 293 1 73 1 174 1 382 1 300 1 
301 1 134 1 0 1 2 1 139 1 207 2 252 1 209 1 184 2 112 1 336 1 165 1 242 1 11 1 40 1 42 1 198 2 122 1 14 1 17 1 245 2 73 1 174 1 382 1 300 1 
82 1 137 1 2 2 181 1 209 1 62 1 112 2 336 2 242 1 340 1 283 1 38 1 198 1 217 1 199 1 45 1 122 1 263 1 14 2 73 1 17 1 245 1 203 1 
137 1 0 1 2 1 252 1 209 1 184 2 112 1 143 1 165 1 336 1 242 1 376 1 40 1 42 1 198 1 217 1 122 1 14 1 17 1 245 1 293 1 73 1 174 1 294 1 382 1 300 1 
183 1 
302 1 250 1 156 1 110 2 209 2 254 2 113 1 355 1 12 1 213 1 67 1 68 5 170 6 69 1 316 1 171 1 263 2 122 2 71 1 266 1 17 2 73 1 269 1 319 2 364 1 225 1 20 1 129 5 130 2 132 1 326 1 25 4 28 2 329 3 181 1 182 1 370 2 236 2 332 1 31 1 144 2 241 1 280 1 242 1 190 2 340 1 375 2 283 1 38 1 193 1 41 1 289 2 378 1 200 2 344 1 
302 1 12 1 67 1 25 2 68 3 41 1 170 2 69 1 329 1 316 1 156 1 171 1 370 1 71 1 332 1 31 1 269 1 113 1 310 1 241 1 280 1 129 3 
302 1 25 3 156 1 329 1 332 1 31 1 113 1 310 1 241 1 280 1 190 1 12 1 67 1 41 1 68 3 170 1 69 1 316 1 171 1 71 1 269 1 364 1 129 3 130 1 
302 1 25 3 329 1 156 1 370 1 332 1 31 1 113 1 310 1 241 1 280 1 190 1 375 1 12 1 67 1 41 1 68 3 69 1 170 2 316 1 171 1 71 1 269 1 364 1 129 3 130 1 
302 1 250 1 156 1 110 1 254 2 113 1 310 1 12 1 67 1 213 1 356 1 68 5 216 1 69 1 170 7 316 1 171 1 71 1 74 1 269 1 319 1 321 1 322 1 364 5 20 1 129 5 130 4 132 1 326 1 25 6 329 3 28 2 370 4 332 1 31 1 144 2 241 1 280 1 190 5 375 4 41 1 289 2 378 1 200 2 
302 1 250 1 156 1 110 1 254 2 113 1 12 1 67 1 213 1 68 4 69 1 170 4 316 1 171 1 71 1 269 1 319 1 20 1 364 1 129 4 130 2 132 1 326 1 25 4 28 2 329 2 182 1 370 2 236 2 332 1 31 1 144 2 241 1 280 1 190 2 375 2 41 1 289 2 378 1 200 2 
132 1 302 1 326 1 25 4 250 1 329 2 28 2 156 1 370 2 110 1 332 1 31 1 254 2 144 2 113 1 241 1 280 1 190 1 375 2 12 1 67 1 213 1 356 1 216 1 41 1 68 4 170 4 69 1 316 1 171 1 289 2 378 1 71 1 200 2 74 1 269 1 319 1 364 1 20 1 129 4 130 2 
132 1 302 1 326 1 25 4 250 1 329 2 28 2 156 1 370 2 110 1 332 1 31 1 254 2 144 2 113 1 241 1 280 1 190 1 375 2 12 1 67 1 213 1 356 1 216 1 41 1 68 4 170 4 69 1 316 1 171 1 289 2 378 1 71 1 200 2 74 1 269 1 319 1 364 1 20 1 129 4 130 2 
132 1 302 1 326 1 25 4 366 1 250 1 329 2 369 1 156 1 370 2 110 1 236 2 332 1 31 1 254 2 144 2 113 1 241 1 280 1 190 1 375 2 243 2 12 1 67 1 213 1 216 1 41 1 68 4 170 4 69 1 316 1 171 1 378 1 71 1 269 1 361 1 319 1 50 2 364 1 129 4 130 2 
132 1 302 1 326 1 25 5 250 1 329 2 28 2 156 1 110 1 370 3 332 1 31 1 254 2 144 2 113 1 241 1 280 1 190 1 375 3 12 1 213 1 67 1 356 1 216 1 41 1 68 4 69 1 170 5 316 1 171 1 289 2 378 1 71 1 200 2 74 1 269 1 319 1 322 1 364 1 20 1 129 4 130 3 
132 1 302 1 326 1 25 5 250 1 329 2 28 2 156 1 110 1 370 3 332 1 31 1 254 2 144 2 113 1 241 1 280 1 190 1 375 3 12 1 213 1 67 1 356 1 216 1 41 1 68 4 69 1 170 5 316 1 171 1 289 2 378 1 71 1 200 2 74 1 269 1 319 1 322 1 364 1 20 1 129 4 130 3 
302 1 250 1 156 1 110 1 254 2 113 1 12 1 67 1 213 1 68 4 69 1 170 4 316 1 171 1 71 1 269 1 319 1 364 1 129 4 130 2 132 1 326 1 25 4 369 1 329 2 182 1 370 2 236 2 332 1 31 1 144 2 241 1 280 1 190 1 375 2 243 2 41 1 378 1 50 2 
133 2 24 1 118 1 105 1 249 1 86 1 26 1 27 3 121 1 262 1 159 2 251 1 358 1 98 6 359 1 379 1 278 2 362 2 185 1 272 1 373 1 186 1 204 1 353 3 313 1 247 1 
133 1 24 2 136 1 85 1 86 11 26 2 27 6 159 1 330 1 278 4 60 2 186 2 116 1 353 8 312 1 339 3 118 2 286 2 44 1 121 1 262 1 98 14 264 1 317 1 359 4 379 11 291 3 363 1 380 1 362 2 204 2 226 1 247 2 
104 1 133 1 24 1 26 1 3 1 27 1 209 1 278 2 237 1 186 1 166 1 353 1 242 1 312 1 260 1 283 1 38 1 12 2 341 1 67 2 121 1 357 1 122 1 263 1 98 2 317 1 265 1 359 1 73 1 17 1 101 1 269 1 175 1 271 1 204 1 323 1 226 1 247 1 
104 1 56 2 249 1 251 1 159 4 350 1 209 3 60 2 166 2 353 10 313 1 312 1 118 3 12 3 67 3 121 3 262 3 357 2 122 3 263 1 317 1 359 7 17 3 73 2 269 1 77 2 175 2 362 8 272 1 323 1 226 1 133 2 24 3 230 1 86 7 26 3 27 10 330 2 371 1 278 6 237 1 32 2 185 1 373 1 186 3 242 2 283 2 38 2 341 2 286 2 42 1 98 20 379 7 101 1 153 2 380 4 204 3 154 2 247 3 
24 2 55 1 177 1 277 2 105 1 26 2 27 1 181 1 140 1 209 8 278 4 237 1 34 1 186 2 353 1 242 2 117 1 312 1 340 1 283 2 12 1 38 3 67 1 42 1 121 2 122 8 263 2 98 2 220 1 221 1 73 2 17 7 101 1 47 1 269 1 323 1 204 2 226 1 247 2 
24 1 86 1 26 1 87 1 27 2 159 1 330 1 278 2 60 1 237 1 334 1 186 1 353 1 118 1 12 1 67 1 286 1 121 1 262 1 98 3 317 1 359 1 379 1 342 1 269 1 362 1 323 1 204 1 247 1 
24 1 118 1 105 1 286 1 86 1 26 1 121 1 98 2 359 1 379 1 72 1 278 2 362 1 380 1 186 1 204 1 353 2 247 1 
24 1 105 1 86 1 26 1 121 1 27 2 159 1 330 1 262 1 98 2 359 1 379 1 278 2 343 1 362 1 186 1 204 1 247 1 
24 1 105 1 86 2 26 1 27 2 330 1 159 1 60 1 278 2 186 1 353 2 118 1 286 1 121 1 262 1 98 4 359 2 379 2 380 1 362 2 204 1 247 1 
24 1 118 1 286 1 86 1 26 1 121 1 98 2 359 1 379 1 72 1 278 2 362 1 380 1 186 1 204 1 353 2 117 1 247 1 
24 1 86 1 26 1 121 1 27 2 159 1 330 1 262 1 98 2 359 1 379 1 278 2 343 1 362 1 186 1 204 1 117 1 247 1 
24 1 86 2 26 1 27 2 330 1 159 1 60 1 278 2 186 1 353 2 117 1 118 1 286 1 121 1 262 1 98 4 359 2 379 2 380 1 362 2 204 1 247 1 
24 1 86 2 26 1 27 2 330 1 159 1 60 1 278 2 186 1 353 2 118 1 286 1 121 1 262 1 98 4 359 2 379 2 380 1 362 2 204 1 247 1 
133 1 24 1 26 1 27 1 209 1 278 2 186 1 166 1 353 1 242 1 312 1 283 1 38 1 12 1 341 1 67 1 121 1 357 1 98 2 122 1 263 1 73 1 17 1 175 1 154 1 204 1 226 1 247 1 
133 1 24 1 106 1 26 1 27 1 209 1 278 2 114 1 186 1 188 1 353 1 242 1 312 1 283 1 38 1 12 1 67 1 121 1 357 1 98 2 122 1 263 1 73 1 17 1 175 1 204 1 226 1 247 1 
24 1 86 2 26 1 27 2 330 1 159 1 60 1 278 2 186 1 353 2 118 1 286 1 121 1 262 1 98 4 317 1 359 2 379 2 380 1 362 2 204 1 247 1 
24 1 86 2 26 1 27 2 159 1 330 1 209 1 278 2 60 1 186 1 166 1 353 2 242 1 118 1 283 1 38 1 12 1 286 1 341 1 67 1 121 1 262 1 357 1 98 4 122 1 359 2 379 2 73 1 17 1 47 1 362 2 380 1 175 1 153 1 154 1 204 1 247 1 
24 1 86 1 26 1 27 1 87 1 57 1 330 1 278 2 60 1 237 1 334 1 186 1 353 2 118 1 12 1 67 1 286 1 121 1 262 1 98 3 317 1 359 1 379 1 269 1 362 1 380 1 323 1 204 1 247 1 
276 1 23 2 85 1 26 2 27 10 159 3 330 3 278 4 60 3 333 1 6 1 186 2 338 1 353 9 339 2 212 2 118 3 148 1 286 3 151 1 262 3 98 19 264 1 291 1 270 1 380 3 362 6 21 1 204 2 247 2 
23 1 276 1 367 1 26 3 27 12 159 2 330 2 278 6 60 3 5 1 333 1 255 1 6 1 186 3 338 1 353 14 339 2 212 4 118 3 286 3 151 2 262 2 98 26 264 2 291 2 152 2 76 1 270 2 380 2 362 4 273 1 224 1 204 3 247 3 
249 1 159 4 251 1 60 4 5 1 255 1 6 1 353 20 313 1 212 4 118 5 262 5 264 3 75 1 270 2 76 1 362 8 272 1 273 1 224 1 21 1 276 1 23 1 85 1 367 1 26 3 27 21 330 4 278 6 333 1 185 1 186 3 373 1 338 1 339 4 286 4 151 1 98 41 291 3 152 1 380 4 204 3 247 3 
23 1 276 1 249 1 367 1 85 1 26 4 27 18 251 1 159 4 330 3 278 8 60 4 5 1 333 1 255 1 185 1 6 1 373 1 186 4 338 1 353 20 313 1 339 4 212 4 118 5 286 4 151 1 262 4 98 38 264 3 291 3 152 2 75 1 76 1 270 2 380 3 362 7 272 1 273 1 224 1 21 1 204 4 247 4 
23 1 276 1 249 1 367 1 85 2 26 2 27 25 251 1 159 7 330 7 278 4 60 7 5 1 333 1 255 1 185 1 6 1 373 1 186 2 338 1 353 27 313 1 339 4 212 4 118 8 286 7 151 1 44 2 262 8 98 52 264 2 291 4 152 1 76 1 270 1 380 7 362 14 272 1 273 1 224 1 204 2 247 2 
227 1 141 1 96 1 59 1 30 1 222 1 318 1 145 1 103 1 167 1 
168 1 90 1 
227 1 347 1 39 1 145 1 169 1 141 1 103 1 167 1 59 1 
131 2 227 1 135 1 68 1 328 1 141 1 59 1 292 1 307 1 145 1 164 1 155 1 129 1 103 1 81 1 191 1 190 1 167 1 
131 2 227 1 135 1 68 1 328 1 141 1 59 1 292 1 307 1 145 1 164 1 155 1 129 1 103 1 81 1 191 1 190 1 167 1 
131 2 227 1 135 1 68 1 328 1 141 1 59 1 292 1 307 1 145 1 164 1 155 1 129 1 103 1 81 1 191 1 190 1 167 1 
18 1 83 1 325 1 
18 1 83 1 325 1 
10 1 372 1 
10 1 372 1 325 1 
173 1 218 1 
131 1 133 1 227 1 141 1 59 1 237 2 307 1 145 1 239 1 90 1 211 1 8 1 167 1 192 1 168 1 12 2 67 2 68 1 218 1 292 1 173 1 269 2 19 1 323 2 129 1 103 1 299 1 
18 1 83 1 
10 1 372 1 325 1 
24 1 229 1 277 2 26 1 27 1 304 1 140 1 209 2 278 2 34 1 186 1 353 1 242 1 312 1 283 1 38 1 12 2 67 2 288 1 43 1 121 1 122 2 98 2 317 1 73 1 17 2 269 2 48 1 204 1 226 1 247 1 
40 1 0 1 2 1 197 1 42 1 122 2 252 1 209 2 73 1 17 2 293 1 184 2 47 1 382 1 258 1 311 1 165 1 242 1 300 1 
40 1 0 1 2 1 42 1 206 1 122 1 252 1 209 1 17 1 293 1 73 1 184 2 382 1 258 1 165 1 242 1 300 1 
283 1 38 1 150 1 2 1 181 1 263 1 122 1 209 1 73 1 17 1 203 1 311 1 242 1 340 1 
40 1 0 1 2 1 197 1 42 1 122 1 252 1 209 1 73 1 17 1 293 1 184 2 382 1 258 1 311 1 165 1 242 1 300 1 
337 1 
319 1 223 1 157 1 358 1 364 1 110 1 190 1 
326 1 250 1 28 1 329 1 110 1 236 1 190 2 213 1 68 1 170 1 289 1 378 1 200 1 319 1 20 1 364 1 129 1 
1 2 250 4 156 2 157 1 4 1 160 2 110 8 209 3 60 2 355 2 9 6 118 2 213 4 119 2 68 5 170 5 70 2 262 2 263 1 122 3 219 2 73 4 17 3 77 2 175 3 319 9 223 1 364 2 79 3 129 5 22 2 326 4 84 2 329 3 234 2 330 2 236 12 33 2 279 1 91 1 374 2 242 3 190 8 93 1 283 3 38 10 193 1 149 1 286 2 244 1 378 4 200 6 47 1 201 6 
326 2 1 1 233 1 367 1 85 1 250 2 329 1 330 4 110 8 236 10 60 4 306 1 5 1 255 1 33 5 339 2 190 7 355 1 9 8 118 4 193 1 213 2 286 4 68 1 170 1 44 1 262 4 264 1 378 2 291 2 200 5 319 13 273 1 201 8 224 1 364 2 129 1 
302 1 326 1 249 1 1 1 348 1 250 1 87 1 110 2 61 1 237 1 33 2 185 1 373 1 118 2 12 1 67 1 213 1 214 1 356 1 68 1 262 1 378 1 99 1 269 1 319 2 176 1 323 1 129 1 
326 1 213 1 250 1 157 1 378 1 110 1 319 1 223 1 364 1 190 1 
9 5 118 2 286 2 1 1 330 2 262 2 110 5 236 10 60 2 200 5 33 2 77 1 319 5 201 5 190 5 
68 1 170 1 329 1 364 1 129 1 190 1 
326 2 327 1 250 2 329 2 181 1 110 2 209 4 91 1 242 1 340 1 355 2 283 1 38 1 213 1 193 2 195 1 68 3 170 4 244 2 122 4 263 2 378 2 73 1 17 4 344 1 319 2 80 1 225 1 129 3 
133 1 24 1 26 1 27 1 87 2 209 1 278 2 237 2 89 1 186 1 166 1 312 1 242 1 283 1 12 3 38 1 67 3 341 1 121 1 357 1 98 1 122 1 263 1 99 1 17 1 73 1 269 2 175 1 204 1 323 2 154 1 247 1 
9 2 355 1 326 1 213 1 193 1 250 1 110 2 378 1 236 4 200 2 319 1 201 2 364 2 313 1 190 4 
53 1 145 1 141 1 
53 1 145 1 141 1 
173 1 145 1 303 1 141 1 191 1 
53 1 145 1 141 1 
145 1 259 1 141 1 
145 1 259 1 141 1 
145 1 259 1 141 1 
145 1 141 1 
167 1 59 1 
118 1 249 1 26 2 27 4 262 1 159 2 251 1 98 8 278 4 152 1 380 1 362 3 185 1 272 1 373 1 186 2 204 2 353 4 313 1 247 2 
118 1 249 1 27 3 251 1 159 2 262 1 358 1 98 6 185 1 362 2 272 1 373 1 353 3 313 1 
118 1 286 1 26 1 27 2 159 1 262 1 330 1 98 4 278 2 60 1 362 2 380 1 186 1 7 1 204 1 353 2 247 1 
118 1 286 1 85 1 27 4 159 1 262 1 330 1 98 7 264 1 291 1 60 1 380 1 362 2 353 3 339 2 
136 1 249 2 85 1 26 2 27 12 251 1 330 2 159 5 180 1 60 2 278 4 185 2 373 1 186 2 353 11 313 1 339 2 118 3 286 2 44 1 262 3 98 23 291 2 152 2 362 9 380 4 272 1 204 2 247 2 
27 1 98 1 339 1 
98 1 353 1 291 1 
118 1 286 1 26 1 27 3 330 1 262 1 159 2 98 6 278 2 60 1 77 1 380 1 362 3 186 1 204 1 7 1 353 3 247 1 
367 1 26 1 27 6 330 2 159 1 278 2 60 2 5 1 255 1 186 1 338 1 353 6 339 1 118 2 286 2 262 2 98 12 264 1 291 1 380 1 362 2 273 1 224 1 204 1 247 1 
118 1 249 1 27 3 262 1 159 1 98 6 185 1 362 2 380 1 373 1 353 3 
249 1 26 1 27 2 159 1 251 1 180 1 98 3 278 2 152 1 380 1 362 2 185 1 272 1 186 1 204 1 353 1 247 1 
118 2 249 2 26 1 27 5 159 3 262 2 98 10 278 2 61 1 185 2 362 5 380 2 186 1 373 1 204 1 338 1 353 5 247 1 
118 1 286 1 26 1 98 2 278 2 380 1 362 1 186 1 204 1 338 1 353 2 247 1 
118 1 286 1 26 1 27 2 159 1 262 1 330 1 98 4 278 2 60 1 362 2 380 1 186 1 204 1 338 1 353 2 247 1 
249 1 26 3 27 2 180 1 159 1 98 3 278 6 152 1 185 1 362 2 380 1 186 3 21 1 204 3 338 1 353 1 247 3 
249 3 368 1 85 1 26 5 27 18 251 1 180 1 330 3 159 7 278 10 60 3 185 3 373 2 186 5 115 1 7 1 338 1 353 16 313 1 339 4 118 5 286 3 262 5 98 34 264 1 291 3 152 2 380 5 362 12 272 1 297 1 21 1 204 5 247 5 
249 1 26 1 27 4 251 1 159 2 278 2 5 1 185 1 186 1 373 1 338 1 353 4 313 1 339 1 118 1 262 1 98 8 264 1 291 1 362 2 272 1 204 1 247 1 
249 1 85 1 26 2 27 5 159 2 251 1 278 4 60 1 5 1 185 1 373 1 186 2 7 1 338 1 353 6 313 1 339 2 118 2 286 1 262 1 98 11 264 1 291 1 380 1 362 3 272 1 204 2 247 2 
249 1 367 1 26 3 27 10 251 1 330 2 159 3 278 6 60 2 5 1 255 1 185 1 373 1 186 3 7 1 338 1 353 9 313 1 339 1 118 3 286 2 262 3 98 19 264 1 291 1 152 1 380 1 362 4 272 1 273 1 224 1 204 3 247 3 
249 1 367 1 26 3 27 7 251 1 330 1 159 3 278 6 60 2 5 1 255 1 185 1 373 1 186 3 7 1 338 1 353 10 313 1 339 1 118 3 286 2 262 2 98 17 264 1 291 1 152 1 380 2 362 5 272 1 273 1 224 1 204 3 247 3 
249 1 26 1 27 4 251 1 159 2 278 2 5 1 185 1 186 1 373 1 338 1 353 4 313 1 339 1 118 1 262 1 98 8 264 1 291 1 362 2 272 1 204 1 247 1 
367 1 26 1 27 6 330 2 159 1 278 2 60 2 5 1 255 1 186 1 338 1 353 6 339 1 118 2 286 2 262 2 98 12 264 1 291 1 380 1 362 2 273 1 224 1 204 1 247 1 
249 1 367 1 26 4 27 8 251 1 330 1 159 3 278 8 60 2 5 1 255 1 185 1 373 1 186 4 7 1 338 1 353 10 313 1 339 1 118 3 286 2 262 2 98 18 264 1 291 1 152 2 380 2 362 5 272 1 273 1 224 1 204 4 247 4 
367 1 26 4 27 7 330 2 159 3 278 8 60 3 5 1 255 1 186 4 338 1 353 9 339 1 118 3 286 3 262 2 98 16 264 1 291 1 152 2 380 3 362 6 273 1 224 1 204 4 21 1 247 4 
118 1 249 3 27 4 262 1 251 2 159 3 98 7 185 3 362 6 380 3 272 1 373 1 353 3 
249 1 367 1 26 4 27 8 251 1 330 1 159 3 278 8 60 2 5 1 255 1 185 1 373 1 186 4 338 1 353 10 313 1 339 1 118 3 286 2 262 2 98 18 264 1 291 1 152 2 380 1 362 4 272 1 273 1 224 1 204 4 21 1 247 4 
133 1 228 1 12 1 269 1 67 1 285 1 171 1 
133 1 228 1 12 1 194 1 285 1 67 1 158 1 171 1 208 1 267 1 269 1 127 1 
73 1 17 1 283 1 38 1 181 1 358 1 122 1 263 1 242 1 340 1 209 1 
133 1 283 1 38 1 12 2 67 2 341 1 357 1 263 1 122 1 209 1 73 1 17 1 101 1 237 1 269 1 175 1 323 1 242 1 
133 1 302 1 84 1 209 1 237 2 280 1 242 1 283 2 12 2 38 3 341 1 67 2 69 1 357 1 122 1 244 1 219 1 17 1 73 1 101 1 269 2 175 2 323 1 
133 1 302 1 84 1 106 1 209 2 237 2 280 1 242 1 283 2 12 2 38 3 67 2 69 1 357 1 122 2 244 1 219 1 246 1 17 2 73 1 101 1 269 2 175 2 323 1 
54 1 84 1 156 1 209 3 242 1 190 1 283 1 38 4 314 1 68 2 170 1 122 3 244 1 219 1 263 1 246 1 17 3 73 1 175 1 79 1 364 1 129 2 22 1 
283 1 38 4 84 1 68 2 170 1 156 1 70 1 263 1 219 1 244 1 122 3 209 3 246 1 73 1 17 3 175 1 364 1 79 1 129 2 242 1 190 1 22 1 
73 1 17 1 55 1 122 1 242 1 209 1 
282 1 55 1 177 1 283 2 277 1 38 3 42 1 140 1 263 2 122 7 29 1 220 1 209 7 221 1 17 6 73 3 47 1 351 1 175 1 279 1 242 2 
133 2 24 2 229 1 56 1 249 1 86 1 26 2 27 3 159 2 251 1 209 1 278 4 237 1 185 1 373 1 186 2 166 1 353 3 313 1 242 1 118 1 283 1 38 1 12 2 67 2 341 1 121 2 262 1 357 1 98 6 122 1 317 1 359 1 379 1 73 1 17 1 101 1 269 1 47 1 362 2 175 1 153 1 272 1 204 2 323 1 154 1 247 2 
326 2 250 2 156 1 329 1 157 1 234 1 110 1 160 1 209 1 91 1 190 1 38 2 213 2 119 1 68 3 170 2 70 1 263 1 122 1 378 2 17 1 19 1 319 1 223 1 364 1 79 1 129 3 22 1 
55 1 283 1 38 2 4 1 122 2 209 2 17 2 73 2 47 1 175 1 279 1 242 1 22 1 
283 1 38 1 231 1 181 1 263 1 122 4 209 4 246 1 73 1 17 4 47 1 242 1 340 1 
283 1 38 1 244 1 122 2 29 1 15 1 371 1 209 2 17 2 142 1 73 2 351 1 175 1 242 1 
73 1 17 1 184 1 382 1 165 1 122 1 263 1 242 1 300 1 209 1 
283 1 38 1 42 1 43 1 122 2 140 1 209 2 17 2 73 1 47 1 242 1 
283 2 38 3 231 1 181 1 244 1 263 1 122 5 140 1 220 1 209 5 17 4 221 1 73 2 47 1 242 2 340 1 
283 2 38 3 231 1 181 1 244 1 263 1 122 5 140 1 220 1 209 5 17 4 73 2 210 1 47 1 242 2 340 1 
133 1 283 1 38 1 12 2 67 2 106 1 357 1 263 1 122 1 209 1 73 1 17 1 101 1 237 1 269 1 175 1 323 1 242 1 
282 1 283 1 38 1 244 1 122 1 29 1 209 1 17 1 73 2 351 1 175 1 279 1 242 1 
331 1 133 1 111 1 360 1 274 1 
133 1 302 1 215 1 68 2 196 1 205 1 69 1 156 1 125 1 331 2 360 1 111 2 113 1 19 1 364 1 274 2 280 1 129 2 190 1 
331 1 360 1 12 1 269 1 67 1 48 1 288 1 304 1 274 1 
360 1 196 1 125 1 
134 1 11 1 139 1 358 1 
245 1 134 1 11 1 137 1 139 1 198 1 217 1 
245 1 336 1 14 1 
134 1 11 1 137 1 179 1 120 2 217 1 198 3 139 1 46 1 245 3 63 1 294 1 
245 2 134 1 11 1 137 1 202 1 139 1 198 2 217 1 207 1 
134 1 137 1 0 1 217 1 198 1 245 1 162 1 184 1 294 1 35 1 165 1 
245 1 134 1 137 1 294 1 139 1 198 1 217 1 
245 1 11 1 137 1 294 1 139 2 198 1 217 1 
134 1 137 2 95 1 139 1 217 2 198 2 245 2 36 1 294 1 147 1 
134 2 11 1 137 1 139 1 217 1 198 3 207 2 245 3 381 1 294 1 35 1 64 1 383 1 
134 1 11 1 137 1 0 1 13 1 139 1 217 1 198 2 252 1 207 1 245 2 184 2 382 1 294 1 165 1 
134 2 11 1 137 2 139 1 217 2 198 4 207 2 100 1 245 4 294 1 35 1 202 1 383 1 
245 1 134 1 11 1 137 1 294 1 139 1 198 1 217 1 
134 3 11 2 137 1 120 1 139 2 198 4 217 1 46 1 207 2 245 4 63 1 35 1 335 1 383 1 
134 1 11 1 137 1 232 1 139 1 217 1 198 2 207 1 245 2 294 1 320 1 296 1 
134 1 11 1 137 1 120 2 217 1 198 3 139 1 46 1 245 3 63 2 294 1 78 1 
134 2 16 2 354 1 324 1 
245 1 137 1 294 1 198 1 217 1 163 1 
245 2 134 1 11 1 137 1 294 1 64 1 139 1 198 2 217 1 207 1 
346 1 
245 1 134 1 11 1 137 1 294 1 139 1 198 1 217 1 
245 3 134 1 11 1 137 1 120 1 294 1 64 1 139 1 198 3 217 1 207 1 
134 1 35 1 335 1 383 1 
134 1 139 1 

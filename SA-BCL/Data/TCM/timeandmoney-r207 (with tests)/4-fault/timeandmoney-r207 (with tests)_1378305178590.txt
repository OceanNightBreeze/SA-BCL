#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 106 (12,126,221) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 108 255 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 108 255 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 108 255 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 108 255 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 108 255 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 108 255 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 108 255 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 108 255 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 108 255 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 108 255 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 108 255 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 108 255 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 627 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | ASSIGN | 2396 | = null
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11750 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2932 | 1 -> 0
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
21 1 71 1 228 1 210 1 155 4 156 3 97 1 184 9 5 2 218 1 189 2 348 6 190 1 235 1 79 2 324 1 80 1 83 5 61 1 195 9 84 1 145 2 353 1 90 1 68 2 274 1 19 2 335 2 
21 1 71 1 228 1 210 1 155 4 156 3 97 1 184 9 5 2 218 1 189 2 348 6 190 1 235 1 324 1 79 2 80 1 83 5 61 1 195 9 84 1 145 2 353 1 90 1 68 2 274 1 19 2 335 2 
21 1 71 1 228 1 210 1 155 5 156 4 97 1 184 10 5 2 218 1 189 2 348 7 190 1 235 1 324 1 79 2 80 1 83 6 61 1 195 10 84 1 145 2 353 1 90 1 68 2 274 1 19 2 335 2 
21 1 71 1 228 1 210 1 155 3 156 2 97 1 184 7 5 2 218 1 189 2 348 4 190 1 235 1 324 1 79 1 83 4 61 1 195 7 84 1 145 2 353 1 90 1 68 2 274 1 19 2 335 2 
61 1 83 3 71 1 195 4 145 1 155 2 156 1 184 4 5 1 90 1 189 1 68 1 348 3 190 1 19 1 324 1 79 2 80 1 
143 1 83 1 21 1 226 1 71 1 195 2 145 1 184 2 5 1 218 1 189 1 68 1 190 1 324 1 77 1 335 1 
83 2 71 1 195 3 228 1 155 1 156 1 184 3 5 2 68 2 348 1 190 1 324 1 335 1 
71 1 228 1 210 1 155 4 156 3 184 9 5 2 7 1 189 1 348 7 190 1 162 1 324 1 79 2 80 1 83 5 61 1 195 9 84 1 145 1 90 1 68 2 19 1 335 1 
71 1 228 1 210 1 155 4 156 3 184 9 5 2 7 1 189 1 348 7 190 1 162 1 324 1 79 2 80 1 83 5 61 1 195 9 84 1 145 1 90 1 68 2 19 1 335 1 
1 1 127 1 116 1 
89 2 127 1 359 1 
16 2 301 2 167 1 129 1 29 2 64 2 314 2 282 2 
207 1 297 1 136 1 298 1 282 2 301 3 322 1 323 1 350 2 59 1 29 2 165 1 351 1 325 1 236 1 167 1 287 2 34 1 129 1 290 1 64 2 170 1 291 1 330 2 14 1 199 1 16 3 310 1 134 1 357 2 332 1 312 1 273 1 224 1 314 2 112 2 360 1 
16 1 301 1 167 1 139 1 264 1 29 1 64 1 286 1 314 1 282 1 
48 1 240 1 127 1 146 1 4 1 252 1 116 1 88 1 282 1 16 1 301 1 271 1 139 1 245 1 
48 1 240 2 127 1 146 1 64 1 252 2 116 1 282 1 16 1 301 1 271 1 139 1 29 1 245 1 314 1 
240 1 285 1 44 1 250 1 252 1 
39 1 257 1 240 2 127 1 44 1 250 1 252 2 116 1 
240 1 250 1 252 1 
167 1 240 1 264 1 64 1 252 1 282 1 200 1 16 1 301 1 139 1 44 1 29 1 286 1 314 1 
127 1 
39 1 240 2 127 1 44 1 250 1 252 2 116 1 214 1 
238 2 240 5 127 1 328 1 179 2 63 1 250 2 300 1 252 5 181 1 116 1 331 2 39 1 302 1 321 1 219 1 44 2 99 1 191 1 
1 1 129 1 
137 1 64 1 129 2 282 2 16 2 56 1 301 2 29 1 314 1 
217 1 41 1 277 1 
325 1 297 1 287 1 129 1 330 1 117 1 14 1 16 1 310 1 301 1 134 1 332 1 322 1 323 1 273 1 112 1 
325 1 337 1 297 1 177 1 287 1 330 1 14 1 282 1 16 2 310 1 301 2 134 1 332 1 322 1 273 1 323 1 29 1 314 1 112 1 277 1 
337 1 177 2 4 1 64 1 129 1 318 1 282 5 98 1 16 5 56 1 301 5 284 1 29 4 314 4 
16 2 301 2 75 1 139 1 29 2 286 1 314 2 282 2 
16 3 301 3 177 1 64 1 129 1 29 3 314 3 282 3 
16 1 301 1 139 1 29 1 286 1 314 1 282 1 
16 1 56 1 301 1 139 1 137 1 29 1 64 1 314 1 282 1 
48 1 207 1 337 1 297 1 177 1 136 1 252 1 282 3 56 1 301 4 139 1 322 1 323 1 350 2 59 1 29 3 351 1 325 1 167 1 240 1 287 1 102 1 34 1 146 1 129 1 290 1 64 2 170 1 291 1 330 1 14 1 16 4 310 1 134 1 271 1 357 1 332 1 273 1 224 1 245 1 173 1 314 3 112 1 360 1 
16 2 301 2 284 1 177 1 129 1 4 1 29 1 314 1 282 2 
48 1 337 1 240 1 177 2 102 1 127 1 146 1 64 1 252 1 282 3 56 1 16 3 301 3 139 1 271 1 245 1 29 3 294 1 314 3 
16 2 56 1 301 2 177 1 41 1 29 2 64 1 314 2 277 1 282 2 
325 1 297 1 287 1 129 1 330 1 14 1 16 1 310 1 301 1 134 1 332 1 322 1 323 1 273 1 112 1 
325 1 94 1 297 1 287 1 129 1 330 1 14 1 151 1 16 1 310 1 301 1 134 1 332 1 273 1 112 1 
207 1 0 1 217 2 350 2 59 1 261 1 10 1 165 2 351 1 34 2 290 1 130 1 36 1 197 1 242 1 356 1 357 4 41 2 18 1 224 1 206 1 246 1 360 1 277 2 
48 1 16 1 301 1 139 1 75 1 29 1 314 1 282 1 
319 1 12 1 
319 1 12 1 
106 1 126 1 
106 1 126 1 
319 1 106 1 126 1 12 1 
319 1 12 1 193 1 
106 1 319 1 126 1 12 1 
221 1 319 1 12 1 
319 1 12 1 193 1 
319 1 12 1 193 1 
319 1 69 1 12 1 
319 1 69 1 12 1 
319 1 69 1 12 1 
51 1 279 1 341 1 252 1 282 2 319 1 301 2 345 1 29 2 221 1 240 1 129 1 85 1 131 1 12 1 308 1 13 1 171 1 37 1 152 1 269 1 16 2 67 1 314 2 
263 2 144 1 101 1 51 2 240 2 127 1 299 1 85 2 341 1 12 2 252 2 182 1 13 3 37 2 6 1 319 2 67 2 107 1 220 1 
189 1 145 1 19 1 
189 1 145 1 77 1 
189 3 11 1 19 2 329 1 251 1 77 1 
338 1 189 2 11 1 19 1 329 1 77 1 
189 2 19 1 11 1 329 2 77 1 
229 1 52 2 179 1 279 1 250 1 115 1 252 5 300 3 116 1 254 2 216 1 303 1 191 1 261 1 10 1 306 1 238 1 240 5 127 2 328 2 354 2 267 1 331 1 152 1 269 1 39 1 89 3 356 1 44 4 359 1 206 1 276 1 
49 5 247 1 229 2 279 4 179 2 250 6 180 1 252 9 300 8 116 1 254 6 216 1 188 1 321 1 285 5 191 1 261 3 10 3 306 3 238 2 240 9 223 1 127 5 328 6 354 6 150 1 331 2 39 1 89 9 356 3 44 7 154 1 359 3 206 3 276 2 
229 1 52 1 179 1 279 1 115 1 252 3 300 3 116 1 254 2 321 1 303 1 10 1 261 1 306 1 238 1 240 3 127 3 328 2 354 2 331 1 89 4 356 1 44 2 359 2 206 1 276 1 
229 1 52 2 179 1 279 2 115 1 180 1 252 4 300 5 116 1 254 4 321 1 303 1 10 2 261 2 306 2 238 1 240 4 127 4 328 4 354 4 150 1 331 1 89 7 356 2 44 3 154 1 359 3 206 2 276 1 
1 1 332 1 92 1 
332 1 174 1 
78 1 
325 1 297 1 332 1 
332 1 157 1 
325 1 332 1 
325 1 32 1 297 1 332 3 147 1 92 2 
165 4 135 1 34 3 3 1 130 2 35 1 266 1 197 3 104 1 119 2 201 1 356 1 320 1 357 7 315 1 261 1 81 1 
165 4 135 1 34 3 3 1 130 2 35 1 266 1 197 3 104 1 119 2 201 1 356 1 320 1 357 7 315 1 261 1 81 1 
165 4 135 1 34 3 3 1 130 2 35 1 266 1 197 3 104 1 119 2 201 1 356 1 320 1 357 7 203 1 315 1 261 1 81 1 
207 1 249 1 135 2 3 2 119 3 320 2 28 1 350 2 164 1 10 3 261 4 81 5 124 3 165 16 306 3 326 4 34 15 35 1 290 1 130 5 266 1 104 1 149 1 197 10 268 1 355 1 201 1 105 1 356 4 357 31 224 1 206 3 315 2 360 1 
207 2 249 1 135 1 3 1 119 2 320 1 350 4 260 1 261 1 81 1 165 5 103 1 34 4 290 2 130 3 35 1 266 1 197 4 201 1 356 1 357 9 224 2 315 1 360 2 
70 1 71 1 95 1 72 1 74 1 251 1 55 1 184 2 5 1 283 1 189 2 348 1 190 1 324 1 77 1 83 1 82 1 194 1 195 2 287 1 145 1 352 1 330 1 14 1 15 1 134 1 68 1 19 1 335 1 112 1 
70 1 71 1 95 1 72 1 74 1 251 1 184 3 5 1 189 2 160 1 348 2 190 1 77 1 83 1 82 1 194 1 195 3 287 1 145 1 352 1 330 1 309 1 14 1 15 1 172 1 134 1 68 1 19 1 335 1 112 1 
71 1 95 1 72 1 251 1 184 2 189 2 160 1 348 2 190 1 77 1 83 1 82 1 194 1 195 2 287 1 145 1 352 1 330 1 309 1 14 1 15 1 134 1 19 1 335 1 112 1 
95 2 72 2 184 1 213 1 186 1 5 1 140 1 325 1 82 2 195 1 241 1 287 1 330 1 14 1 172 1 310 1 134 1 332 1 68 1 109 1 335 2 112 1 114 1 
70 1 95 1 72 1 74 1 251 1 184 1 5 1 283 1 189 2 324 1 77 1 82 1 194 1 195 1 287 1 145 1 352 1 330 1 309 1 14 1 15 1 134 1 68 1 19 1 335 1 112 1 
86 1 
48 1 229 1 179 1 4 1 250 2 252 3 300 1 282 1 213 1 255 1 301 1 139 1 27 1 191 1 325 1 238 1 240 3 287 2 168 1 146 1 328 1 87 1 330 2 88 1 198 1 14 1 331 1 39 1 16 1 310 2 271 1 134 1 133 1 332 1 108 1 109 1 245 1 112 2 
48 1 240 2 146 1 4 1 252 2 198 1 88 1 282 1 255 1 16 1 301 1 139 1 271 1 27 1 108 1 245 1 
48 1 240 2 146 1 4 1 252 2 198 1 88 1 282 1 255 1 16 1 301 1 139 1 271 1 27 1 108 1 245 1 
48 1 240 2 146 1 4 1 252 2 198 1 88 1 282 1 255 1 16 1 301 1 139 1 271 1 27 1 108 1 245 1 
48 1 240 3 146 1 250 1 4 1 252 3 198 1 88 1 282 1 214 1 255 1 39 1 16 1 301 1 139 1 271 1 27 1 108 1 245 1 
48 1 238 1 240 2 146 1 179 1 4 1 252 2 282 1 331 1 198 1 88 1 255 1 16 1 301 1 139 1 271 1 27 1 108 1 245 1 191 1 
48 1 240 2 146 1 4 1 252 2 198 1 88 1 282 1 255 1 16 1 301 1 139 1 271 1 27 1 108 1 245 1 
48 1 240 2 146 1 4 1 252 2 198 1 88 1 282 1 255 1 16 1 301 1 139 1 271 1 27 1 108 1 245 1 
48 1 240 2 146 1 4 1 252 2 198 1 88 1 282 1 255 1 16 1 301 1 139 1 271 1 27 1 108 1 245 1 
48 1 240 2 146 1 4 1 252 2 198 1 88 1 282 1 255 1 16 1 301 1 139 1 271 1 27 1 108 1 245 1 
48 1 240 2 146 1 4 1 252 2 198 1 88 1 282 1 255 1 16 1 301 1 139 1 271 1 27 1 108 1 245 1 
48 1 238 1 240 2 146 1 179 1 4 1 252 2 282 1 331 1 198 1 88 1 255 1 16 1 301 1 139 1 271 1 27 1 108 1 245 1 191 1 
207 1 1 1 0 1 135 1 119 1 217 1 350 2 59 1 261 1 351 1 165 3 34 3 35 1 290 1 130 2 129 2 266 1 197 2 201 1 356 1 357 6 41 1 224 1 315 1 277 1 360 1 
207 2 227 1 217 11 233 1 350 4 59 2 81 1 10 2 261 2 124 3 351 1 165 8 306 2 236 1 326 3 239 1 34 6 129 1 130 1 290 2 170 1 197 2 149 1 268 1 356 1 292 1 17 1 357 14 41 4 224 2 206 1 360 2 277 11 
207 1 337 1 50 1 297 1 177 1 117 1 282 1 120 1 301 2 233 1 322 1 323 1 59 1 29 1 350 2 325 1 351 1 165 1 236 1 287 1 34 1 129 1 290 1 170 1 330 1 14 1 16 2 310 1 134 1 332 1 357 2 41 1 273 1 45 1 224 1 112 1 314 1 360 1 
177 1 135 1 136 2 282 1 187 1 233 1 322 2 323 2 59 3 10 2 325 2 236 1 287 3 290 3 330 3 197 8 14 2 153 2 16 3 201 1 332 2 206 2 112 3 336 2 207 3 337 1 297 2 340 2 119 1 301 3 217 7 161 1 350 6 29 1 261 3 81 4 351 3 306 2 165 10 34 10 129 2 35 1 130 4 266 1 170 1 309 1 270 1 310 1 356 3 134 2 357 20 272 2 41 7 273 2 224 3 315 1 314 1 360 3 277 7 
175 1 207 2 0 1 177 1 317 1 55 1 253 1 282 1 213 1 344 1 301 1 26 1 29 1 350 4 59 2 351 2 165 1 325 2 236 1 287 8 34 1 290 2 265 1 170 1 330 8 309 1 14 2 199 2 65 1 16 1 310 2 134 2 332 3 357 2 224 2 109 1 314 1 112 7 360 2 
207 1 282 1 56 1 301 1 217 1 233 1 29 1 350 2 59 1 10 1 261 1 351 1 306 1 165 1 34 2 130 1 64 1 290 1 197 1 16 1 356 1 357 3 41 1 202 1 224 1 206 1 314 1 277 1 360 1 
351 1 165 2 207 1 0 1 290 1 36 1 197 1 217 1 357 2 41 1 224 1 59 1 350 2 81 1 10 1 261 1 277 1 360 1 
351 1 207 1 0 1 34 2 130 1 290 1 197 1 217 1 356 1 357 2 41 1 224 1 18 1 59 1 350 2 206 1 277 1 360 1 
207 1 0 1 217 2 350 2 59 1 261 1 10 1 81 1 165 2 306 1 351 1 34 2 290 1 130 1 197 2 356 1 357 4 41 2 224 1 206 1 360 1 277 2 
351 1 165 2 207 1 265 1 290 1 36 1 197 1 217 1 357 2 41 1 224 1 59 1 350 2 81 1 10 1 261 1 277 1 360 1 
351 1 207 1 34 2 130 1 265 1 290 1 197 1 217 1 356 1 357 2 41 1 224 1 18 1 59 1 350 2 206 1 277 1 360 1 
207 1 217 2 350 2 59 1 261 1 10 1 81 1 165 2 306 1 351 1 34 2 290 1 265 1 130 1 197 2 356 1 357 4 41 2 224 1 206 1 360 1 277 2 
351 1 306 1 165 2 207 1 34 2 130 1 290 1 197 2 356 1 217 2 357 4 41 2 224 1 59 1 350 2 206 1 81 1 10 1 261 1 277 2 360 1 
207 1 297 1 136 1 301 1 322 1 323 1 59 1 350 2 165 1 325 1 351 1 236 1 287 1 34 1 129 1 290 1 170 1 330 1 14 1 16 1 310 1 134 1 357 2 332 1 273 1 224 1 112 1 360 1 
207 1 297 1 94 1 301 1 59 1 350 2 165 1 325 1 351 1 236 1 287 1 34 1 129 1 290 1 170 1 330 1 14 1 151 1 38 1 16 1 310 1 134 1 357 2 332 1 273 1 224 1 112 1 360 1 
207 1 217 2 233 1 350 2 59 1 261 1 10 1 81 1 165 2 306 1 351 1 34 2 290 1 130 1 197 2 356 1 357 4 41 2 224 1 206 1 360 1 277 2 
207 1 297 1 136 1 55 1 301 1 217 2 322 1 323 1 59 1 350 2 81 1 261 1 10 1 165 2 325 1 351 1 306 1 287 1 34 2 130 1 290 1 197 2 330 1 14 1 153 1 16 1 356 1 134 1 357 4 332 1 41 2 273 1 224 1 206 1 112 1 277 2 360 1 
207 1 282 1 56 1 159 1 301 1 217 1 233 1 29 1 350 2 59 1 81 1 10 1 261 1 351 1 306 1 165 2 34 1 64 1 290 1 197 1 16 1 356 1 357 3 41 1 224 1 206 1 314 1 360 1 277 1 
207 2 231 1 183 1 57 2 234 2 350 4 142 1 10 3 261 3 81 3 124 1 262 1 165 9 306 3 326 2 327 1 222 1 33 1 103 1 34 10 130 3 290 2 149 1 197 6 268 1 356 3 357 19 224 2 206 3 360 2 
207 2 296 1 249 1 96 1 183 2 24 1 57 3 234 1 350 4 142 1 81 1 10 3 261 3 192 1 124 2 262 2 165 13 306 3 326 2 222 1 307 1 33 1 196 1 103 1 34 10 290 2 197 1 268 2 356 2 357 23 224 2 206 2 360 2 
207 2 296 1 96 1 231 1 183 2 24 1 57 3 234 1 350 4 142 1 10 4 261 4 81 3 192 1 124 3 262 1 165 15 306 4 326 4 307 1 222 1 33 1 196 1 103 1 34 16 130 1 290 2 149 1 197 4 268 3 356 4 357 31 334 1 224 2 206 4 360 2 
207 3 296 1 249 1 96 1 231 1 183 2 24 1 57 4 234 1 350 6 142 1 10 4 261 4 81 3 192 1 124 3 262 1 165 17 306 4 326 4 307 1 222 1 33 1 196 1 103 1 34 15 130 2 290 3 149 1 197 5 268 3 356 3 357 32 334 1 224 3 206 3 360 3 
207 3 296 1 249 2 96 1 135 1 183 1 119 1 24 1 57 4 234 1 350 6 142 1 10 7 261 8 81 7 192 1 124 4 262 1 165 27 306 7 326 4 307 1 222 1 33 1 196 1 103 1 34 26 35 1 130 8 290 3 266 1 149 2 197 15 268 2 201 1 356 8 292 2 357 53 224 3 206 7 315 1 360 3 
319 1 101 1 51 1 67 1 85 1 342 1 12 1 182 1 220 1 37 1 
221 1 345 1 
319 1 51 1 67 1 91 1 85 1 12 1 100 1 232 1 37 1 
293 1 193 1 
69 1 53 1 118 1 
263 1 144 1 101 1 240 1 51 1 127 1 341 1 85 1 252 1 12 1 182 1 13 2 37 1 6 1 319 1 67 1 107 1 220 1 
263 1 144 1 101 1 240 1 51 1 127 1 341 1 85 1 252 1 12 1 182 1 13 2 37 1 6 1 319 1 67 1 107 1 220 1 
263 1 144 1 101 1 240 1 51 1 127 1 341 1 85 1 252 1 12 1 182 1 13 2 37 1 6 1 319 1 67 1 107 1 220 1 
293 1 53 1 193 1 
293 1 53 1 193 1 
69 1 118 1 
69 1 53 1 118 1 
131 1 308 1 
51 1 2 1 279 1 252 1 282 2 301 2 319 1 345 1 29 2 263 1 221 1 240 1 129 1 85 1 131 1 12 1 308 1 13 1 171 1 37 1 152 1 269 1 16 2 67 1 107 1 44 1 314 2 
207 1 253 1 282 2 25 1 301 2 233 1 26 1 59 1 350 2 163 1 325 1 351 1 165 1 236 1 287 2 34 1 290 1 170 1 330 2 14 1 199 2 16 2 134 1 332 1 357 2 333 1 224 1 110 1 112 2 46 1 360 1 
70 1 194 1 95 1 287 2 178 1 145 1 230 1 251 1 330 2 55 1 14 1 309 1 15 1 121 1 134 1 189 2 19 1 77 1 112 2 
70 1 194 1 95 1 287 1 178 1 145 1 211 1 251 1 330 1 309 1 14 1 15 1 134 1 189 2 19 1 77 1 112 1 
325 1 248 1 95 1 287 1 330 1 14 1 213 1 310 1 121 1 134 1 332 1 109 1 112 1 114 1 
70 1 194 1 95 1 287 1 178 1 145 1 230 1 251 1 330 1 14 1 309 1 15 1 121 1 134 1 189 2 19 1 77 1 112 1 
288 1 
302 1 1 1 127 1 328 1 300 1 99 1 116 1 
238 1 240 1 127 2 316 1 179 1 328 1 250 1 252 1 300 1 116 1 331 1 39 1 23 1 89 1 359 1 191 1 30 1 
229 2 179 4 281 1 55 1 185 2 58 2 8 1 99 1 191 4 10 2 325 3 238 4 237 2 240 5 287 3 62 2 328 8 147 1 330 3 14 4 331 4 332 10 204 1 245 2 206 2 112 3 336 2 297 3 250 5 300 9 252 5 116 2 157 2 343 1 254 6 256 1 302 1 347 2 349 2 261 2 306 2 168 1 127 8 354 6 39 3 310 1 89 12 134 3 356 2 358 2 359 6 174 3 92 2 93 2 
296 1 179 1 300 11 254 8 24 1 347 3 191 1 10 4 261 4 192 1 124 2 306 4 326 2 238 1 307 1 196 1 127 5 328 7 354 8 149 1 331 1 268 1 89 10 356 4 292 1 359 5 206 4 
208 1 135 1 179 1 252 1 300 2 282 1 301 1 139 1 347 2 29 1 286 1 191 1 261 2 237 1 238 1 167 1 240 1 264 1 289 1 328 2 64 1 266 1 331 1 200 1 16 1 356 1 315 1 314 1 
238 1 127 1 179 1 328 1 300 1 116 1 331 1 302 1 99 1 191 1 
306 2 237 1 127 5 328 5 354 5 300 5 254 5 89 10 356 2 347 2 359 5 206 2 10 2 261 2 336 1 
39 1 240 1 127 1 250 1 252 1 116 1 
229 2 179 2 250 4 281 1 300 2 252 3 213 1 215 1 256 2 321 1 191 1 325 1 238 2 240 3 287 4 168 2 169 1 328 2 87 1 330 4 14 1 331 2 39 2 310 2 134 1 133 1 332 1 109 1 112 4 
207 1 297 1 136 1 282 2 301 3 322 1 323 1 350 2 29 2 59 1 325 1 351 1 167 1 287 1 34 1 129 1 290 1 64 2 170 1 291 1 330 1 14 1 16 3 310 1 134 1 357 1 332 1 273 1 224 1 112 1 314 2 360 1 
238 1 229 1 168 1 127 4 328 2 179 1 354 2 300 1 116 2 254 2 331 1 119 1 89 4 359 2 191 1 
51 1 346 1 37 1 
101 1 51 1 278 1 131 1 37 1 
51 1 346 1 37 1 
51 1 346 1 37 1 
51 1 20 1 37 1 
51 1 20 1 37 1 
51 1 20 1 37 1 
51 1 37 1 
319 1 12 1 
165 4 207 2 249 1 135 1 34 4 130 2 290 2 35 1 266 1 197 3 119 1 201 1 356 1 357 8 224 2 350 4 315 1 261 1 81 1 360 2 
165 3 201 1 356 1 1 1 357 6 135 1 34 3 130 2 35 1 266 1 315 1 261 1 197 2 119 1 
306 1 165 2 207 1 34 2 130 1 290 1 197 2 132 1 356 1 357 4 224 1 350 2 206 1 10 1 261 1 81 1 360 1 
165 3 306 1 326 2 34 4 130 1 149 1 197 2 268 1 356 1 357 7 206 1 10 1 261 1 81 1 124 1 
207 2 249 2 135 2 119 1 350 4 81 4 261 3 10 2 124 2 306 2 165 11 326 2 239 1 34 12 35 1 130 5 290 2 266 1 197 9 149 1 201 1 356 3 357 23 292 1 224 2 313 1 206 2 315 2 360 2 
326 1 357 1 34 1 
165 1 357 1 124 1 
306 1 165 3 207 1 34 3 290 1 130 2 197 3 132 1 356 1 357 6 224 1 350 2 206 1 10 1 261 1 81 1 360 1 336 1 
207 2 296 1 249 1 24 1 350 4 81 1 10 2 261 2 124 1 192 1 165 6 306 2 326 1 307 1 196 1 103 1 34 7 290 2 130 2 197 3 268 1 356 2 357 13 224 2 206 2 360 2 
165 3 135 1 34 3 130 1 266 1 197 2 356 1 357 6 315 1 261 1 81 1 
165 1 207 1 249 1 135 1 34 2 130 1 35 1 290 1 197 2 201 1 357 3 224 1 350 2 313 1 315 1 81 1 360 1 
165 5 207 1 135 2 103 1 289 1 34 5 290 1 130 3 266 1 197 5 356 2 357 10 224 1 350 2 315 2 81 2 261 2 360 1 
165 2 207 1 103 1 290 1 197 1 357 2 224 1 350 2 10 1 261 1 81 1 360 1 
306 1 165 2 207 1 103 1 34 2 130 1 290 1 197 2 356 1 357 4 224 1 350 2 206 1 10 1 261 1 81 1 360 1 
165 1 207 3 249 1 135 1 103 1 34 2 290 3 130 1 231 1 197 2 357 3 224 3 350 6 313 1 315 1 81 1 360 3 
207 5 249 2 135 3 231 1 119 1 28 1 350 10 164 1 10 3 261 5 81 5 124 3 165 16 306 3 326 4 103 1 34 18 35 1 290 5 130 7 266 2 149 1 197 12 132 1 268 1 201 1 105 1 356 5 357 34 224 5 313 1 206 3 315 3 360 5 
207 1 135 1 119 1 350 2 261 1 124 1 165 4 326 1 196 1 103 1 34 4 290 1 35 1 130 2 266 1 197 2 268 1 201 1 356 1 357 8 224 1 315 1 360 1 
207 2 135 1 119 1 350 4 10 1 261 2 81 1 124 1 165 6 306 1 326 2 196 1 103 1 34 5 130 2 35 1 290 2 266 1 149 1 197 3 132 1 268 1 201 1 356 1 357 11 224 2 315 1 360 2 
207 2 296 1 24 1 350 4 10 2 261 2 81 1 124 1 192 1 165 6 306 2 326 1 307 1 196 1 103 1 34 6 290 2 197 1 132 1 268 1 356 2 357 12 224 2 206 2 360 2 
207 4 296 1 249 2 24 1 350 8 81 1 10 2 261 2 124 1 192 1 165 7 306 2 326 1 307 1 196 1 103 1 34 5 290 4 130 2 197 3 132 1 268 1 356 1 357 12 224 4 206 1 360 4 
207 1 135 1 119 1 350 2 261 1 124 1 165 4 326 1 196 1 103 1 34 4 290 1 35 1 130 2 266 1 197 2 268 1 201 1 356 1 357 8 224 1 315 1 360 1 
207 2 296 1 249 1 24 1 350 4 81 1 10 2 261 2 124 1 192 1 165 6 306 2 326 1 307 1 196 1 103 1 34 7 290 2 130 2 197 3 268 1 356 2 357 13 224 2 206 2 360 2 
207 3 296 1 249 1 24 1 350 6 10 2 261 2 81 1 124 1 192 1 165 7 306 2 326 1 307 1 196 1 103 1 34 4 290 3 197 1 132 1 268 1 356 1 357 11 224 3 206 1 360 3 
207 3 296 1 249 1 231 1 24 1 350 6 81 2 10 2 261 2 124 1 192 1 165 7 306 2 326 1 307 1 196 1 103 1 34 4 290 3 130 1 197 3 268 1 356 1 357 11 224 3 206 1 360 3 
165 3 135 3 34 4 35 2 130 3 266 1 197 6 201 1 356 1 357 7 315 3 81 3 261 1 
207 3 296 1 249 1 231 1 24 1 350 6 10 2 261 2 81 1 124 1 192 1 165 7 306 2 326 1 307 1 196 1 103 1 34 4 290 3 197 1 268 1 356 1 357 11 224 3 206 1 360 3 
16 1 295 1 301 1 284 1 129 1 4 1 282 1 
295 1 125 1 129 1 4 1 282 1 138 1 16 1 301 1 284 1 258 1 42 1 9 1 
325 1 310 1 134 1 1 1 332 1 287 1 109 1 112 1 330 1 14 1 213 1 
325 1 297 1 177 1 287 1 129 1 330 1 14 1 282 1 16 2 310 1 301 2 134 1 332 1 273 1 323 1 29 1 314 1 112 1 
48 1 325 2 297 2 177 1 287 1 129 1 157 1 330 1 14 1 282 2 16 2 256 1 301 2 139 1 271 1 134 1 332 3 273 1 323 1 29 1 314 2 112 1 93 1 
48 1 94 1 297 2 177 1 157 1 282 2 256 1 301 2 139 1 304 1 29 1 325 2 287 2 129 1 330 2 14 1 16 2 134 1 271 1 332 3 273 1 112 2 314 2 93 1 
297 1 250 1 252 2 157 1 116 1 256 1 304 1 325 1 166 1 240 2 287 3 127 1 128 1 330 3 14 1 310 1 134 1 332 4 245 1 112 3 92 1 174 1 93 1 
325 1 297 1 240 2 287 3 127 1 250 1 252 2 116 1 157 1 330 3 14 1 185 1 310 1 256 1 134 1 332 4 304 1 245 1 112 3 174 1 92 1 93 1 
344 1 134 1 287 1 112 1 330 1 14 1 
175 1 325 2 297 1 287 7 317 1 147 1 55 1 330 7 212 1 309 1 14 3 199 1 344 1 65 1 310 2 134 2 332 3 26 1 112 6 113 1 225 1 
207 2 297 1 177 1 135 1 340 1 136 1 55 1 282 1 119 1 25 1 301 2 217 1 233 1 322 1 323 1 59 2 29 1 350 4 261 1 165 3 325 1 351 2 287 1 34 3 129 2 130 2 35 1 290 2 266 1 197 2 330 1 14 1 153 1 16 2 201 1 356 1 134 1 357 6 332 1 41 1 273 1 224 2 315 1 314 1 112 1 277 1 360 2 
179 2 250 2 300 1 281 1 252 3 116 1 185 1 302 1 58 1 349 1 99 1 191 2 238 2 240 3 287 1 127 1 328 1 330 1 331 2 39 1 310 1 358 1 332 2 44 1 245 1 112 1 174 1 92 1 
325 1 297 1 287 2 147 1 55 1 330 2 14 2 344 1 134 1 332 2 8 1 112 2 92 1 
325 1 287 4 330 4 55 1 14 1 213 1 310 1 134 1 332 1 109 1 304 1 112 4 31 1 
325 1 209 1 297 1 287 2 280 1 330 2 14 2 256 1 187 1 134 1 332 1 112 2 113 1 225 1 
310 1 134 1 189 1 287 1 145 1 77 1 112 1 330 1 14 1 15 1 
325 1 287 2 55 1 330 2 309 1 14 1 134 1 332 1 26 1 163 1 112 2 
325 2 175 1 287 5 330 5 55 1 213 1 14 2 65 1 256 1 310 1 134 2 332 3 26 1 109 1 112 4 31 1 
325 2 175 1 287 5 330 5 55 1 213 1 14 2 256 1 310 1 134 2 332 3 26 1 109 1 205 1 112 4 31 1 
325 1 297 1 94 1 177 1 287 1 129 1 330 1 14 1 282 1 16 2 310 1 301 2 134 1 332 1 273 1 29 1 314 1 112 1 
325 1 297 1 287 1 147 1 330 1 212 1 14 2 256 1 134 1 332 1 112 1 113 1 225 1 
47 1 148 1 282 1 16 1 301 1 333 1 110 1 111 1 46 1 
311 1 76 1 148 1 
47 1 158 1 129 1 111 1 148 1 
48 1 47 2 240 2 102 1 127 1 146 1 129 1 22 1 252 2 148 1 116 1 158 2 139 1 271 1 311 1 76 1 44 1 245 1 111 2 
83 1 71 1 1 1 190 1 
83 1 5 1 71 1 195 1 68 1 190 1 184 1 
72 1 335 1 184 1 
83 1 21 2 195 3 71 1 73 1 184 3 5 1 68 1 43 1 190 1 324 1 141 1 
83 1 5 1 71 1 195 2 68 1 348 1 190 1 79 1 184 2 
83 1 195 1 145 1 155 1 184 1 5 1 90 1 189 1 68 1 19 1 324 1 
83 1 5 1 195 1 68 1 190 1 324 1 184 1 
5 1 71 1 195 1 68 1 190 2 324 1 184 1 
83 1 195 2 184 2 243 1 5 2 66 1 40 1 68 2 190 1 324 1 
83 2 71 1 195 3 84 1 210 1 155 1 156 1 184 3 5 1 68 1 348 2 190 1 324 1 
83 1 71 1 195 2 145 1 251 1 184 2 5 1 189 2 68 1 348 1 190 1 19 1 77 1 324 1 305 1 
83 2 71 1 195 4 155 1 156 1 184 4 5 2 68 2 348 2 190 1 324 1 79 1 80 1 
83 1 5 1 71 1 195 1 68 1 190 1 324 1 184 1 
21 1 83 3 71 2 195 4 73 1 155 1 156 1 184 4 244 1 5 1 68 1 348 2 190 2 141 1 
83 1 195 2 71 1 176 1 184 2 5 1 7 1 68 1 348 1 190 1 324 1 123 1 
83 1 21 2 195 3 71 1 73 2 184 3 5 1 68 1 190 1 324 1 259 1 141 1 
83 2 275 2 54 1 60 1 
5 1 339 1 195 1 68 1 324 1 184 1 
83 1 5 1 71 1 195 2 210 1 68 1 348 1 190 1 324 1 184 2 
122 1 
83 1 5 1 71 1 195 1 68 1 190 1 324 1 184 1 
83 1 21 1 5 1 71 1 195 3 210 1 68 1 348 1 190 1 324 1 184 3 
244 1 83 1 155 1 156 1 
83 1 190 1 

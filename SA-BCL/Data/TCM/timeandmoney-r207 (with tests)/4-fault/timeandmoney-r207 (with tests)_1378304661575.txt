#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 243 329 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 243 329 10 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 243 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 243 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 243 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 243 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 243 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 243 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 243 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 772 | 0 -> -1
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | RETURN | 1770 | return null
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> <
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
155 1 186 1 77 1 252 1 354 1 255 1 
155 1 186 1 77 1 252 1 354 1 255 1 
155 1 186 1 77 1 252 1 354 1 255 1 
155 1 186 1 77 1 252 1 354 1 255 1 
156 1 155 4 77 1 186 4 105 1 144 2 266 1 274 1 163 1 87 1 69 1 37 1 252 1 354 1 22 1 28 3 165 2 38 3 
156 1 155 2 203 1 77 1 186 2 105 1 263 1 304 1 163 1 199 1 92 1 252 1 37 1 354 1 38 1 256 1 
156 1 155 3 77 2 186 3 328 1 274 1 163 1 252 1 354 2 165 1 38 2 28 1 256 1 
258 1 186 9 144 2 48 1 266 1 5 1 69 1 28 7 156 1 155 9 77 2 105 1 328 1 274 3 163 1 87 1 252 1 37 1 354 2 22 1 165 4 38 5 39 1 256 1 
258 1 186 9 144 2 48 1 266 1 5 1 69 1 28 7 156 1 155 9 77 2 105 1 328 1 274 3 163 1 87 1 252 1 37 1 354 2 22 1 165 4 38 5 39 1 256 1 
18 1 78 1 347 1 
306 1 347 1 131 2 
76 1 245 2 89 2 9 2 301 2 129 1 224 2 211 2 
63 1 257 1 298 2 115 1 143 2 261 1 219 2 167 1 301 2 322 1 118 1 287 1 289 1 71 1 54 1 123 1 76 1 204 1 124 1 245 3 101 1 125 1 9 2 103 1 246 2 12 1 158 2 129 1 224 2 312 1 272 1 211 2 60 1 89 3 314 1 114 1 215 1 
245 1 9 1 106 1 301 1 129 1 224 1 211 1 273 1 89 1 93 1 
245 1 78 1 346 1 264 1 347 1 211 1 273 1 313 1 212 1 180 1 89 1 214 1 172 1 222 1 
245 1 78 1 9 1 346 1 264 1 301 1 347 1 224 1 211 1 273 1 313 2 212 1 89 1 172 2 222 1 
313 1 98 1 172 1 153 1 169 1 
313 2 232 1 78 1 102 1 98 1 172 2 347 1 153 1 
313 1 172 1 153 1 
245 1 9 1 106 1 98 1 301 1 129 1 224 1 211 1 273 1 313 1 89 1 110 1 172 1 93 1 
347 1 
313 2 232 1 78 1 195 1 98 1 172 2 347 1 153 1 
269 1 57 1 232 1 78 1 283 1 79 1 98 2 294 2 11 2 347 1 43 1 47 1 17 1 49 2 313 5 236 1 172 5 153 2 94 1 
76 1 18 1 
259 1 76 1 8 1 245 2 9 1 301 1 224 1 211 2 273 1 238 1 89 2 
282 1 150 1 181 1 
298 1 76 1 124 1 245 1 101 1 261 1 143 1 219 1 12 1 167 1 83 1 89 1 314 1 54 1 123 1 215 1 
76 1 245 3 9 1 301 3 224 3 211 3 273 1 238 1 89 3 173 1 
273 1 245 1 89 1 106 1 301 1 224 1 211 1 
259 1 8 1 245 1 9 1 301 1 224 1 211 1 273 1 89 1 
257 1 298 1 115 1 261 1 143 1 264 1 219 1 167 1 301 3 322 1 118 1 287 1 289 1 54 1 122 1 123 1 173 1 172 1 222 1 76 1 154 1 8 1 204 1 124 1 101 1 245 4 9 2 346 1 246 2 12 1 158 1 129 1 224 3 312 1 272 1 211 3 273 1 313 1 60 1 212 1 89 4 314 1 227 1 215 1 
76 1 299 1 245 2 89 2 301 1 214 1 173 1 224 1 211 2 
8 1 245 3 9 1 346 1 264 1 301 3 347 1 224 3 211 3 273 1 313 1 212 1 89 3 227 1 122 1 172 1 173 2 222 1 100 1 
8 1 245 2 9 1 301 2 224 2 211 2 89 2 150 1 181 1 173 1 
298 1 76 1 124 1 245 1 101 1 261 1 143 1 219 1 12 1 167 1 89 1 314 1 54 1 123 1 215 1 
298 1 76 1 124 1 245 1 101 1 292 1 261 1 143 1 219 1 167 1 89 1 314 1 123 1 55 1 215 1 
0 1 280 1 257 1 282 2 322 1 99 1 118 1 287 1 289 1 150 2 325 1 71 2 73 1 202 1 204 2 246 2 158 4 161 1 60 1 250 1 181 2 316 1 352 1 253 1 
273 1 212 1 245 1 89 1 226 1 301 1 224 1 211 1 
298 1 124 1 101 1 245 2 261 1 143 1 219 1 167 1 12 1 301 1 224 1 211 1 89 2 314 1 181 1 227 1 54 1 123 1 173 1 215 1 
76 1 8 1 245 2 9 1 301 2 224 2 211 2 273 1 238 1 89 2 173 1 
273 1 245 2 89 2 226 1 106 1 301 2 224 2 211 2 
171 1 34 1 
171 1 34 1 
107 1 210 1 
107 1 210 1 
107 1 210 1 
285 1 171 1 34 1 
285 1 171 1 34 1 
171 1 34 1 213 1 
107 1 300 1 171 2 34 2 210 1 223 1 
285 1 171 1 34 1 
21 1 171 1 34 1 
21 1 171 1 34 1 
21 1 171 1 34 1 
171 1 34 1 350 1 329 1 302 1 243 1 
313 1 171 1 34 1 350 1 329 1 10 1 302 1 172 1 243 1 
87 1 105 1 37 1 
105 1 263 1 37 1 
87 2 29 1 198 1 263 1 37 3 303 1 
87 1 29 1 198 1 263 1 65 1 37 2 
87 1 198 1 29 2 263 1 37 2 
280 1 0 1 232 1 284 1 188 2 98 4 44 1 45 1 47 3 49 1 325 1 306 1 172 5 153 1 6 1 269 2 78 1 79 1 11 1 294 1 347 2 84 1 209 1 131 3 85 1 313 5 348 2 349 1 250 1 331 1 91 2 36 1 
280 3 0 3 23 1 232 1 321 1 188 6 98 7 234 1 169 5 45 2 47 8 49 2 147 5 290 1 325 3 306 3 172 9 153 6 269 6 78 1 79 1 294 2 11 2 347 5 84 3 209 4 131 9 85 2 313 9 108 1 349 1 19 1 250 3 91 6 94 1 
280 1 0 1 284 1 188 2 98 2 45 1 47 3 49 1 325 1 306 2 172 3 6 1 269 2 78 1 11 1 294 1 347 3 209 1 84 1 85 1 131 4 313 3 348 1 250 1 91 2 94 1 
280 2 0 2 23 1 284 1 321 1 188 4 98 3 234 1 45 1 47 5 49 1 325 2 306 3 172 4 6 1 269 4 78 1 11 1 294 1 347 4 209 2 84 2 131 7 85 1 313 4 348 2 250 2 91 4 94 1 
18 1 314 1 40 1 
314 1 196 1 
56 1 
314 1 167 1 
124 1 314 3 42 1 167 1 66 1 40 2 
124 1 314 1 167 1 
314 1 166 1 
280 1 0 1 140 1 116 1 204 3 58 1 158 7 237 1 324 1 71 4 73 2 35 1 253 3 182 1 152 1 277 2 307 1 
280 1 0 1 140 1 116 1 204 3 58 1 158 7 237 1 324 1 71 4 73 2 35 1 253 3 182 1 152 1 277 2 307 1 
280 1 0 1 140 1 116 1 204 3 58 1 158 7 237 1 324 1 109 1 71 4 73 2 35 1 253 3 182 1 152 1 277 2 307 1 
140 1 0 4 280 4 41 1 116 1 46 1 118 1 287 1 237 2 324 2 289 1 50 4 325 3 71 16 73 5 152 1 307 5 201 1 174 1 204 15 58 2 206 3 246 2 271 1 158 31 84 3 32 1 60 1 250 3 35 2 182 1 253 10 277 3 317 1 
280 1 0 1 140 1 116 1 339 1 340 1 118 2 287 2 237 1 324 1 289 2 71 5 73 3 152 1 307 1 204 4 58 1 246 4 158 9 60 2 35 1 253 4 277 2 317 1 
298 1 186 2 143 1 219 1 263 1 303 1 68 1 193 1 291 1 74 1 28 1 156 1 155 2 344 1 77 1 101 1 105 1 270 1 293 1 157 1 16 1 163 1 87 1 88 1 252 1 37 2 354 1 38 1 256 1 215 1 
298 1 186 3 260 1 143 1 219 1 263 1 303 1 68 1 193 1 291 1 74 1 28 2 156 1 155 3 344 1 77 1 101 1 105 1 270 1 157 1 31 1 132 1 163 1 87 1 88 1 37 2 354 1 38 1 256 1 215 1 
298 1 186 2 260 1 143 1 219 1 263 1 303 1 68 1 193 1 74 1 28 2 156 1 155 2 344 1 101 1 105 1 270 1 31 1 163 1 87 1 88 1 37 2 38 1 256 1 215 1 
298 1 279 1 186 1 143 1 261 1 219 1 167 1 68 2 193 2 305 1 155 1 101 1 77 1 270 2 205 1 208 1 225 1 132 1 314 1 164 1 354 1 256 2 215 1 
298 1 186 1 260 1 143 1 219 1 263 1 303 1 68 1 193 1 291 1 74 1 155 1 344 1 77 1 101 1 105 1 270 1 293 1 157 1 87 1 88 1 252 1 37 2 354 1 256 1 215 1 
319 1 
141 2 232 3 233 2 143 2 45 1 47 2 49 1 286 4 52 1 153 6 7 1 101 1 245 1 205 1 294 1 11 1 159 1 211 1 295 2 212 1 164 1 214 1 113 1 215 1 216 1 298 2 117 1 337 1 261 2 338 2 219 2 264 1 167 1 170 1 306 2 172 5 222 1 268 1 269 2 78 1 79 1 346 1 127 2 347 2 177 2 131 2 273 1 313 5 180 1 89 1 314 1 275 1 315 1 137 1 95 2 
7 1 232 1 117 1 245 1 346 1 264 1 211 1 286 2 273 1 313 3 295 1 212 1 180 1 195 1 89 1 275 1 137 1 172 3 214 1 153 2 222 1 216 1 
117 1 232 1 233 1 264 1 286 3 195 1 172 3 153 1 222 1 7 1 245 1 78 1 346 1 347 1 211 1 273 1 313 3 212 1 180 1 89 1 275 1 137 1 214 1 216 1 
232 1 117 1 233 1 264 1 286 3 195 1 172 3 153 2 222 1 7 1 245 1 78 1 346 1 177 1 347 1 211 1 273 1 313 3 212 1 295 1 180 1 89 1 275 1 137 1 214 1 216 1 
141 2 232 3 233 4 189 1 47 1 286 6 49 1 195 1 153 7 7 1 245 1 327 1 294 1 11 1 159 1 211 1 295 4 212 1 214 1 216 1 334 1 117 1 337 1 338 2 264 1 26 1 306 2 172 5 222 1 269 1 78 5 346 1 79 1 127 2 177 4 347 5 273 1 313 5 180 1 89 1 275 1 137 1 138 1 95 2 
141 2 232 2 117 1 233 2 337 1 338 2 264 1 47 1 49 1 286 4 170 1 306 2 172 4 153 4 222 1 7 1 269 1 245 1 78 1 79 1 346 1 127 2 11 1 294 1 347 2 177 2 131 2 159 1 211 1 273 1 313 4 295 2 212 1 180 1 89 1 275 1 137 1 214 1 95 2 216 1 
141 2 334 1 232 2 117 1 233 2 337 1 338 2 264 1 47 1 286 4 49 1 306 2 172 4 153 4 222 1 7 1 269 1 245 1 78 1 327 1 346 1 79 1 127 2 11 1 294 1 347 1 177 2 159 1 211 1 273 1 313 4 295 2 212 1 180 1 89 1 275 1 137 1 138 1 214 1 95 2 216 1 
141 2 334 1 232 2 117 1 233 2 337 1 338 2 264 1 47 1 286 4 49 1 306 2 172 4 153 4 222 1 7 1 269 1 245 1 78 1 327 1 346 1 79 1 127 2 11 1 294 1 347 1 177 2 159 1 211 1 273 1 313 4 295 2 212 1 180 1 89 1 275 1 137 1 138 1 214 1 95 2 216 1 
232 2 117 1 233 2 338 2 264 1 47 1 286 4 49 1 235 2 4 1 197 1 172 4 153 4 222 1 175 2 7 1 269 1 245 1 78 1 327 1 346 1 79 1 11 1 294 1 347 1 177 2 176 1 131 2 159 1 211 1 273 1 313 4 295 2 212 1 180 1 89 1 275 1 137 1 214 1 95 2 216 1 
141 2 334 1 232 2 117 1 233 3 337 1 338 2 264 1 47 1 49 1 286 5 26 1 306 2 172 4 153 5 222 1 7 1 269 1 245 1 78 1 327 1 79 1 346 1 127 2 11 1 294 1 347 1 177 3 159 1 211 1 273 1 313 4 212 1 295 3 180 1 89 1 275 1 137 1 138 1 214 1 95 2 216 1 
141 2 334 1 232 2 117 1 233 3 337 1 338 2 264 1 47 1 49 1 286 5 26 1 306 2 172 4 153 5 222 1 7 1 269 1 245 1 78 1 327 1 79 1 346 1 127 2 11 1 294 1 347 1 177 3 159 1 211 1 273 1 313 4 212 1 295 3 180 1 89 1 275 1 137 1 138 1 214 1 95 2 216 1 
232 2 117 1 233 2 338 2 264 1 47 1 49 1 286 4 235 2 170 1 197 1 172 4 153 4 222 1 175 2 7 1 269 1 245 1 78 1 79 1 346 1 11 1 294 1 347 1 177 2 131 2 159 1 211 1 273 1 313 4 295 2 212 1 180 1 89 1 275 1 137 1 214 1 95 2 216 1 
140 1 257 1 0 1 280 1 116 1 282 1 322 1 118 1 287 1 289 1 150 1 71 3 73 2 152 1 202 1 76 2 204 3 58 1 246 2 158 6 18 1 60 1 181 1 35 1 253 2 277 1 
63 1 257 2 0 2 280 1 41 1 217 1 282 11 322 1 191 1 2 1 118 2 287 2 50 3 289 2 325 2 150 4 71 8 73 1 307 1 76 1 204 6 206 3 246 4 271 1 158 14 84 2 272 1 60 2 90 1 250 1 181 11 253 2 276 1 
298 1 257 1 63 1 143 1 261 1 219 1 167 1 301 1 322 1 2 1 118 1 146 1 287 1 289 1 150 1 54 1 71 1 123 1 173 1 308 1 76 1 124 1 204 1 101 1 245 2 246 2 12 1 158 2 13 1 224 1 83 1 272 1 211 1 60 1 89 2 314 1 227 1 215 1 
140 1 280 3 0 3 282 7 143 3 322 3 2 1 287 3 289 3 150 7 325 2 54 2 242 2 152 1 200 1 204 10 245 3 101 2 58 1 246 6 12 2 158 20 211 1 60 3 20 1 330 2 250 2 253 8 62 1 215 2 63 1 298 3 257 3 115 2 116 1 260 1 261 1 219 3 301 1 167 2 118 3 71 10 73 4 123 2 173 1 307 4 76 2 124 2 126 2 128 2 224 1 84 2 272 1 89 3 314 2 227 1 181 7 35 1 277 1 
185 1 298 8 257 2 63 1 260 1 143 7 261 2 218 1 219 8 301 1 167 2 322 2 118 2 323 1 287 2 148 1 289 2 53 1 71 1 173 1 202 1 204 1 245 1 101 2 125 2 205 1 80 1 246 4 158 2 224 1 272 1 16 1 211 1 60 2 89 1 249 1 314 3 164 1 215 2 
257 1 0 1 280 1 282 1 301 1 322 1 2 1 118 1 287 1 289 1 150 1 70 1 325 1 71 1 73 1 8 1 204 2 245 1 9 1 246 2 158 3 224 1 84 1 211 1 60 1 89 1 250 1 181 1 253 1 
257 1 0 1 202 1 282 1 246 2 158 2 322 1 99 1 118 1 287 1 60 1 289 1 150 1 325 1 181 1 71 2 253 1 307 1 
257 1 280 1 202 1 204 2 282 1 246 2 158 2 322 1 118 1 287 1 161 1 60 1 289 1 150 1 250 1 181 1 73 1 253 1 
280 1 257 1 0 1 202 1 204 2 282 2 246 2 158 4 322 1 118 1 84 1 287 1 60 1 289 1 250 1 150 2 325 1 181 2 71 2 73 1 253 2 307 1 
257 1 0 1 282 1 218 1 246 2 158 2 322 1 99 1 118 1 287 1 60 1 289 1 150 1 325 1 181 1 71 2 253 1 307 1 
257 1 280 1 204 2 282 1 218 1 246 2 158 2 322 1 118 1 287 1 161 1 60 1 289 1 150 1 250 1 181 1 73 1 253 1 
280 1 257 1 0 1 204 2 282 2 218 1 246 2 158 4 322 1 118 1 84 1 287 1 60 1 289 1 250 1 150 2 325 1 181 2 71 2 73 1 253 2 307 1 
280 1 257 1 0 1 204 2 282 2 246 2 322 1 158 4 118 1 84 1 287 1 60 1 289 1 250 1 150 2 325 1 181 2 71 2 73 1 253 2 307 1 
63 1 298 1 257 1 115 1 143 1 261 1 219 1 167 1 322 1 118 1 287 1 289 1 71 1 54 1 123 1 76 1 124 1 204 1 101 1 245 1 246 2 12 1 158 2 272 1 60 1 89 1 314 1 215 1 
63 1 298 1 257 1 143 1 261 1 219 1 167 1 322 1 118 1 287 1 289 1 71 1 123 1 55 1 76 1 124 1 204 1 101 1 245 1 292 1 246 2 158 2 272 1 60 1 89 1 314 1 111 1 215 1 
280 1 257 1 0 1 204 2 282 2 246 2 158 4 322 1 2 1 118 1 84 1 287 1 60 1 289 1 250 1 150 2 325 1 181 2 71 2 73 1 253 2 307 1 
280 1 0 1 298 1 257 1 115 1 282 2 143 1 219 1 167 1 322 1 118 1 287 1 289 1 150 2 325 1 71 2 54 1 73 1 123 1 307 1 204 2 124 1 101 1 245 1 246 2 12 1 158 4 128 1 84 1 16 1 60 1 89 1 250 1 314 1 181 2 253 2 215 1 
280 1 257 1 0 1 282 1 301 1 322 1 2 1 118 1 287 1 289 1 325 1 150 1 71 2 307 1 8 1 204 1 245 1 9 1 246 2 158 3 224 1 84 1 211 1 60 1 89 1 250 1 181 1 253 1 355 1 
0 3 280 3 41 1 339 1 192 2 341 2 118 2 287 2 342 1 50 2 149 1 289 2 51 1 325 3 71 9 73 3 307 3 204 10 207 1 206 1 246 4 81 1 271 1 158 19 84 3 30 1 60 2 250 3 61 1 253 6 
280 2 0 3 41 2 339 1 97 1 192 1 341 4 118 3 287 3 149 2 289 3 51 1 50 2 325 3 240 1 71 14 267 1 73 2 307 2 310 1 204 12 206 2 246 6 81 1 158 26 84 3 30 1 60 3 296 1 250 2 61 2 229 1 253 4 317 2 
280 5 0 5 140 1 41 3 97 1 192 1 287 3 51 1 289 3 149 1 50 4 325 4 240 1 152 1 204 21 58 1 206 3 246 6 158 41 60 3 296 1 250 4 61 2 253 8 116 1 339 1 118 3 341 4 342 1 71 20 73 4 267 1 307 4 310 1 271 1 81 1 84 4 30 1 229 1 35 1 277 1 317 1 278 1 
140 1 0 5 280 4 41 3 116 1 339 1 97 1 192 1 341 4 118 4 287 4 342 1 50 4 149 1 289 4 51 1 325 4 240 1 71 20 267 1 73 4 152 1 307 3 310 1 204 18 58 1 206 3 246 8 81 1 271 1 158 38 84 4 30 1 60 4 296 1 250 3 61 2 35 1 229 1 253 7 277 1 317 2 278 1 
140 1 0 8 280 8 41 2 116 1 339 1 97 1 192 1 341 4 118 2 287 2 50 4 149 1 289 2 51 1 325 7 240 1 71 27 267 1 73 7 152 1 307 7 310 1 204 25 58 1 206 4 246 4 81 1 271 2 158 52 84 7 30 1 60 2 296 1 90 2 250 7 61 1 35 1 229 1 253 14 277 1 317 1 
333 1 298 2 257 1 63 1 143 2 219 2 167 1 322 1 2 1 118 1 287 1 289 1 53 1 71 1 309 1 311 1 204 1 101 1 245 2 125 2 246 2 158 2 178 1 272 1 211 2 86 1 60 1 89 2 249 1 314 1 215 1 
298 2 101 1 260 1 105 1 143 2 263 1 219 2 157 1 303 1 179 1 68 1 16 1 87 1 88 1 135 1 74 1 37 2 343 1 215 1 
298 1 101 1 260 1 105 1 143 1 263 1 219 1 157 1 130 1 303 1 68 1 87 1 88 1 74 1 37 2 343 1 215 1 
298 1 279 1 101 1 261 1 143 1 205 1 219 1 167 1 68 1 135 1 314 1 164 1 183 1 215 1 
298 1 101 1 260 1 105 1 143 1 263 1 219 1 157 1 303 1 179 1 68 1 87 1 88 1 135 1 74 1 37 2 343 1 215 1 
120 1 
17 1 269 1 57 1 18 1 78 1 347 1 47 1 
141 1 232 1 337 1 47 1 49 1 306 1 172 1 153 1 269 1 78 1 79 1 127 1 11 1 294 1 347 2 131 1 313 1 
184 1 0 2 280 2 232 3 142 2 143 3 145 1 42 1 188 6 3 1 45 2 47 9 49 4 196 3 325 2 153 5 57 1 101 4 104 1 294 4 11 4 16 1 17 1 160 2 330 2 250 2 254 2 215 3 298 3 261 1 262 2 219 3 166 2 167 3 265 2 221 2 306 6 172 5 268 1 269 8 124 3 78 2 79 4 346 2 347 8 84 2 131 12 313 5 134 2 314 10 91 6 351 2 139 1 40 2 
0 2 280 2 41 1 232 1 188 5 97 1 265 1 45 1 221 2 47 8 49 2 50 1 325 2 240 1 306 3 172 1 153 1 268 1 310 1 269 5 78 2 79 2 206 1 11 2 294 2 347 5 84 2 131 6 248 1 133 1 313 1 296 1 250 2 91 5 229 1 
334 1 0 2 280 1 301 1 265 1 221 2 47 2 49 1 72 1 172 1 152 1 269 2 245 1 9 1 79 1 106 1 58 1 11 1 294 1 129 1 224 1 211 1 273 1 313 1 89 1 35 1 110 1 93 1 
57 1 269 1 78 1 79 1 294 1 11 1 347 1 47 1 17 1 49 1 
0 2 280 2 269 5 188 5 265 1 347 5 84 2 221 2 131 10 47 5 330 1 325 2 250 2 91 5 306 5 
313 1 232 1 78 1 172 1 347 1 153 1 
298 4 232 2 143 4 261 2 145 1 219 4 167 1 45 2 47 2 49 2 52 1 172 3 153 4 268 2 269 2 101 1 104 2 79 1 205 1 11 2 294 2 14 1 313 3 314 1 164 1 113 1 94 1 318 1 215 1 
298 1 257 1 115 1 143 1 261 1 219 1 301 2 167 1 322 1 118 1 287 1 289 1 54 1 123 1 76 1 204 1 124 1 245 3 101 1 9 2 246 2 12 1 158 1 129 1 224 2 312 1 272 1 211 2 60 1 89 3 314 1 215 1 
269 2 78 2 79 1 188 2 294 1 11 1 347 4 45 1 131 4 47 1 49 1 91 2 306 2 277 1 268 1 
302 1 243 1 
302 1 243 1 
302 1 243 1 
302 1 243 1 
302 1 243 1 
302 1 243 1 
302 1 243 1 
302 1 243 1 
171 1 34 1 
280 1 0 1 140 1 116 1 204 4 58 1 246 4 158 8 118 2 287 2 60 2 289 2 71 4 73 2 35 1 253 3 277 1 152 1 307 1 317 1 
140 1 0 1 280 1 116 1 204 3 58 1 158 6 18 1 71 3 73 2 35 1 253 2 277 1 152 1 
280 1 0 1 204 2 246 2 158 4 118 1 84 1 287 1 60 1 289 1 250 1 325 1 71 2 73 1 253 2 307 1 297 1 
280 1 0 1 41 1 204 4 206 1 271 1 158 7 84 1 50 2 250 1 325 1 71 3 73 1 253 2 307 1 
140 1 0 3 280 3 116 1 187 1 118 2 287 2 50 2 289 2 325 2 71 11 73 5 152 1 307 4 204 12 58 2 206 2 246 4 271 1 158 23 84 2 60 2 250 2 90 1 35 2 253 9 277 1 276 1 317 2 
204 1 50 1 158 1 
71 1 206 1 158 1 
0 1 280 1 204 3 246 2 158 6 118 1 84 1 287 1 60 1 289 1 330 1 325 1 250 1 71 3 73 2 253 3 307 1 297 1 
0 2 280 2 41 1 339 1 97 1 118 1 287 1 50 1 289 1 325 2 71 6 240 1 73 1 307 1 310 1 204 6 206 1 246 2 158 12 84 2 60 1 296 1 250 2 229 1 253 2 
0 1 280 1 204 3 58 1 158 6 71 3 73 1 35 1 253 2 152 1 307 1 
140 1 116 1 204 2 58 1 187 1 246 2 158 3 118 1 287 1 60 1 289 1 71 1 73 1 35 1 253 2 307 1 317 1 
0 2 280 2 204 5 339 1 58 2 246 2 158 10 118 1 287 1 60 1 289 1 72 1 71 5 73 3 35 2 253 5 152 1 307 2 
0 1 339 1 246 2 158 2 118 1 287 1 60 1 289 1 325 1 71 2 253 1 307 1 
280 1 0 1 204 2 339 1 246 2 158 4 118 1 84 1 287 1 60 1 289 1 250 1 325 1 71 2 73 1 253 2 307 1 
204 2 187 1 339 1 58 1 246 6 158 3 118 3 287 3 60 3 342 1 289 3 71 1 73 1 35 1 253 2 317 1 307 1 
140 1 0 5 280 5 41 1 116 1 187 1 339 1 118 5 287 5 342 1 50 4 289 5 325 3 71 16 73 7 152 2 174 1 201 1 307 5 204 18 58 3 206 3 246 10 271 1 158 34 84 3 32 1 60 5 250 3 35 3 253 12 277 1 317 2 297 1 
280 1 0 1 140 1 41 1 116 1 339 1 118 1 287 1 50 1 289 1 71 4 73 2 152 1 204 4 58 1 206 1 246 2 158 8 60 1 229 1 35 1 253 2 277 1 
280 1 140 1 0 2 41 1 116 1 339 1 118 2 287 2 50 2 289 2 325 1 71 6 73 2 152 1 307 1 204 5 58 1 206 1 246 4 271 1 158 11 84 1 60 2 35 1 229 1 253 3 277 1 297 1 
140 1 0 3 280 3 41 1 116 1 339 1 97 1 118 3 287 3 50 1 289 3 325 2 71 9 240 1 73 3 152 1 307 1 310 1 204 10 58 1 206 1 246 6 158 19 84 2 60 3 296 1 250 2 35 1 229 1 253 4 277 1 317 1 297 1 
140 1 0 3 280 2 41 1 116 1 339 1 97 1 118 3 287 3 50 1 289 3 325 2 71 10 240 1 73 3 152 1 307 2 310 1 204 7 58 1 206 1 246 6 158 17 84 2 60 3 296 1 250 1 35 1 229 1 253 5 277 1 317 1 297 1 
280 1 0 1 140 1 41 1 116 1 339 1 118 1 287 1 50 1 289 1 71 4 73 2 152 1 204 4 58 1 206 1 246 2 158 8 60 1 229 1 35 1 253 2 277 1 
0 2 280 2 41 1 339 1 97 1 118 1 287 1 50 1 289 1 325 2 71 6 240 1 73 1 307 1 310 1 204 6 206 1 246 2 158 12 84 2 60 1 296 1 250 2 229 1 253 2 
140 1 0 3 280 2 41 1 116 1 339 1 97 1 118 4 287 4 50 1 289 4 325 2 240 1 71 10 73 3 152 1 307 2 310 1 204 8 58 1 206 1 246 8 158 18 84 2 60 4 296 1 250 1 35 1 229 1 253 5 277 1 317 2 297 1 
0 3 280 2 41 1 339 1 97 1 118 4 287 4 342 1 50 1 289 4 325 3 240 1 71 9 73 3 307 3 310 1 204 7 206 1 246 8 158 16 84 3 60 4 296 1 250 2 229 1 253 6 317 2 
280 1 140 2 0 1 116 1 204 4 58 3 158 7 71 3 73 3 35 3 253 6 152 1 307 3 
140 1 0 3 280 2 41 1 116 1 339 1 97 1 118 4 287 4 342 1 50 1 289 4 325 2 240 1 71 10 73 3 152 1 307 1 310 1 204 8 58 1 206 1 246 8 158 18 84 2 60 4 296 1 250 1 35 1 229 1 253 4 277 1 317 2 
76 1 299 1 245 1 89 1 214 1 112 1 211 1 
76 1 299 1 336 1 245 1 320 1 190 1 211 1 59 1 89 1 251 1 112 1 214 1 
298 1 18 1 101 1 314 1 143 1 261 1 164 1 205 1 219 1 167 1 215 1 
298 1 76 1 124 1 101 1 245 2 261 1 143 1 219 1 167 1 301 1 12 1 224 1 211 1 89 2 314 1 123 1 173 1 215 1 
298 1 76 1 124 2 101 1 245 2 142 1 104 1 143 1 166 1 264 1 219 1 167 2 301 2 12 1 224 1 211 2 273 1 212 1 89 2 314 3 123 1 173 1 215 1 
298 2 76 1 124 2 101 1 245 2 142 1 104 1 143 2 166 1 264 1 219 2 167 2 301 2 224 1 67 1 211 2 273 1 212 1 89 2 314 3 123 1 55 1 173 1 215 1 
298 3 124 1 101 1 78 1 142 1 261 1 346 1 104 1 143 3 166 1 219 3 167 1 1 1 247 1 347 1 67 1 313 2 196 1 314 4 172 2 153 1 40 1 215 1 
298 3 124 1 101 1 78 1 142 1 261 1 346 1 104 1 143 3 166 1 219 3 167 1 347 1 67 1 313 2 196 1 314 4 172 2 153 1 254 1 40 1 215 1 
298 1 185 1 101 1 143 1 219 1 215 1 
185 1 298 7 124 1 101 3 125 1 260 1 24 1 261 2 143 6 219 7 42 1 80 1 220 1 167 2 16 1 323 1 148 1 53 1 314 3 75 1 215 2 
280 1 0 1 140 1 257 2 298 1 115 1 116 1 282 1 143 1 219 1 167 1 301 1 322 2 2 1 118 2 287 2 289 2 150 1 71 3 54 1 73 2 123 1 242 1 152 1 173 1 76 2 311 1 204 3 124 1 101 1 245 2 58 1 246 4 12 1 158 6 128 1 224 1 211 1 16 1 60 2 89 2 314 1 181 1 35 1 253 2 277 1 215 1 
298 1 232 1 143 1 261 1 145 1 262 1 219 1 98 1 47 1 49 2 196 1 172 3 153 2 269 1 57 1 78 1 79 2 346 1 11 2 294 2 347 1 17 1 313 3 134 1 314 2 351 1 254 1 40 1 
185 1 298 2 184 1 124 1 101 2 143 2 219 2 42 1 167 1 16 1 314 2 40 1 215 1 
298 4 101 1 261 1 143 4 205 1 219 4 167 1 67 1 16 1 314 1 164 1 151 1 215 1 
298 2 124 1 101 2 104 1 24 1 143 2 219 2 220 1 167 1 168 1 314 1 200 1 326 1 215 1 
298 1 101 1 88 1 105 1 143 1 261 1 263 1 219 1 37 1 215 1 
333 1 298 2 101 1 260 1 314 1 53 1 143 2 219 2 167 1 215 1 16 1 
298 5 101 2 104 1 261 1 143 4 205 1 219 5 80 1 167 2 16 1 323 1 53 1 314 3 164 1 151 1 215 2 
298 5 281 1 101 2 104 1 261 1 143 4 205 1 219 5 80 1 167 2 16 1 53 1 314 3 164 1 151 1 215 2 
298 1 76 1 124 1 101 1 245 2 261 1 143 1 219 1 167 1 301 1 224 1 211 1 89 2 314 1 123 1 55 1 173 1 215 1 
298 1 124 1 101 2 24 1 104 1 143 1 219 1 42 1 220 1 167 1 314 1 75 1 215 1 
76 1 288 1 136 1 353 1 244 1 
76 1 78 1 346 1 264 1 98 1 347 1 25 1 273 1 313 2 212 1 162 1 288 2 239 1 136 2 122 1 353 2 172 2 222 1 244 1 
86 1 288 1 245 1 89 1 353 1 178 1 211 1 244 1 309 1 
162 1 239 1 244 1 
18 1 156 1 163 1 38 1 
156 1 155 1 163 1 186 1 77 1 354 1 38 1 
155 1 270 1 256 1 
155 3 156 1 96 1 77 1 186 3 15 1 119 1 304 2 163 1 252 1 354 1 38 1 
156 1 155 2 163 1 186 2 77 1 144 1 354 1 38 1 28 1 
155 1 87 1 186 1 77 1 105 1 37 1 252 1 354 1 38 1 165 1 266 1 
156 1 155 1 186 1 77 1 252 1 354 1 38 1 
156 2 155 1 163 1 186 1 77 1 252 1 354 1 
156 1 335 1 155 2 77 2 186 2 33 1 332 1 252 1 354 2 38 1 
156 1 155 3 77 1 186 3 48 1 274 1 163 1 252 1 354 1 28 2 165 1 38 2 39 1 
156 1 155 2 77 1 186 2 105 1 263 1 303 1 163 1 87 1 241 1 37 2 252 1 354 1 38 1 28 1 
156 1 155 4 77 2 186 4 144 1 274 1 163 1 69 1 252 1 354 2 28 2 165 1 38 2 
156 1 155 1 163 1 186 1 77 1 252 1 354 1 38 1 
156 2 155 4 186 4 77 1 119 1 15 1 304 1 27 1 274 1 163 2 354 1 28 2 165 1 38 3 
156 1 155 2 77 1 186 2 121 1 163 1 5 1 252 1 354 1 230 1 38 1 28 1 
64 1 155 3 156 1 77 1 186 3 15 1 119 2 304 2 163 1 252 1 354 1 38 1 
194 2 345 1 82 1 38 2 
155 1 186 1 77 1 228 1 252 1 354 1 
156 1 155 2 163 1 186 2 77 1 252 1 354 1 38 1 28 1 48 1 
231 1 
156 1 155 1 163 1 186 1 77 1 252 1 354 1 38 1 
155 3 156 1 77 1 186 3 48 1 304 1 163 1 252 1 354 1 28 1 38 1 
27 1 274 1 38 1 165 1 
156 1 38 1 

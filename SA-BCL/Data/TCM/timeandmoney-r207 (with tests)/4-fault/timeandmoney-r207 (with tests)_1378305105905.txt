#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 349 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 349 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 349 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 349 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | RETURN | 873 | return null
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 3812 | return null
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3154 | stmt -> ;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | ASSIGN | 1600 | = null
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
179 1 78 1 74 1 168 1 349 1 260 1 
179 1 78 1 74 1 168 1 349 1 260 1 
179 1 78 1 74 1 168 1 349 1 260 1 
179 1 78 1 74 1 168 1 349 1 260 1 
306 1 305 1 130 1 179 4 38 3 332 1 168 1 74 1 237 2 106 2 28 1 364 1 78 1 30 3 48 1 355 1 209 1 260 4 
306 1 97 1 130 1 38 1 179 2 236 1 168 1 74 1 171 1 227 1 28 1 78 1 365 1 366 1 48 1 260 2 
356 1 306 1 97 1 305 1 179 3 38 2 168 1 74 2 106 1 78 2 30 1 48 1 260 3 
356 1 97 1 179 9 332 1 74 2 237 2 104 1 106 4 28 1 78 2 364 1 30 7 260 9 306 1 305 3 130 1 38 5 84 1 168 1 353 1 142 1 48 1 355 1 209 1 
356 1 97 1 179 9 332 1 74 2 237 2 104 1 106 4 28 1 78 2 364 1 30 7 260 9 306 1 305 3 130 1 38 5 84 1 168 1 353 1 142 1 48 1 355 1 209 1 
126 1 258 1 322 1 
134 2 150 1 258 1 
6 2 107 2 182 2 345 2 207 2 321 1 303 2 53 1 
50 1 182 3 152 1 51 1 185 1 53 1 102 1 6 2 156 1 300 1 188 1 77 2 107 2 8 1 10 1 58 1 321 1 303 2 285 1 370 2 222 1 81 1 341 1 114 1 263 2 345 2 115 2 170 1 15 1 326 1 138 1 139 1 311 1 207 3 293 1 269 2 22 1 
6 1 245 1 107 1 182 1 345 1 207 1 368 1 73 1 303 1 53 1 
261 1 245 1 182 1 121 1 272 1 345 1 203 1 135 1 206 1 207 1 258 1 197 1 322 1 94 1 
245 1 182 1 272 2 121 2 345 1 6 1 203 1 107 1 206 1 207 1 258 1 303 1 197 1 322 1 94 1 
272 1 121 1 235 1 93 1 110 1 
375 1 262 1 272 2 121 2 235 1 258 1 110 1 322 1 
272 1 121 1 110 1 
245 1 182 1 121 1 272 1 235 1 345 1 73 1 53 1 6 1 107 1 207 1 368 1 61 1 303 1 
258 1 
375 1 338 1 272 2 121 2 235 1 258 1 110 1 322 1 
113 1 330 1 211 2 121 5 272 5 235 2 214 1 265 1 335 1 298 1 155 2 374 1 373 1 328 2 375 1 258 1 109 1 110 2 322 1 
126 1 321 1 
182 2 345 2 116 1 6 1 107 1 207 2 194 1 303 1 321 2 
254 1 46 1 334 1 
341 1 50 1 182 1 115 1 326 1 300 1 188 1 77 1 8 1 10 1 207 1 321 1 285 1 370 1 34 1 222 1 
261 1 182 5 345 5 116 1 101 1 6 1 7 1 107 4 44 2 207 5 160 1 303 4 321 1 119 1 
342 1 245 1 107 2 182 2 345 2 207 2 368 1 303 2 
341 1 50 1 182 2 345 1 115 1 326 1 300 1 188 1 77 1 107 1 8 1 10 1 44 1 207 2 46 1 303 1 285 1 119 1 370 1 222 1 
6 1 107 3 182 3 44 1 345 3 207 3 321 1 303 3 
245 1 107 1 182 1 345 1 207 1 368 1 303 1 
6 1 245 1 107 1 182 1 345 1 207 1 116 1 194 1 303 1 
50 1 182 4 121 1 272 1 152 1 185 1 53 1 102 1 5 1 156 1 6 2 300 1 188 1 77 1 107 3 8 1 10 1 301 1 321 1 303 3 285 1 197 1 370 1 222 1 81 1 341 1 114 1 245 1 263 1 345 3 115 1 116 1 15 1 326 1 203 1 139 1 44 1 206 1 207 4 293 1 269 2 22 1 119 1 94 1 
7 1 261 1 107 1 182 2 44 1 345 2 207 2 321 1 303 1 
245 1 182 3 272 1 121 1 345 3 346 1 116 1 5 1 6 1 203 1 107 3 44 2 206 1 207 3 258 1 303 3 119 1 197 1 94 1 
182 2 254 1 345 2 116 1 6 1 107 2 44 1 207 2 46 1 303 2 
341 1 50 1 182 1 115 1 326 1 300 1 188 1 77 1 8 1 10 1 207 1 321 1 285 1 370 1 222 1 
182 1 167 1 115 1 326 1 55 1 300 1 188 1 77 1 8 1 10 1 207 1 321 1 285 1 370 1 222 1 
358 1 359 1 254 2 151 1 315 1 334 2 102 1 257 1 12 1 81 1 112 1 165 1 288 1 114 1 263 4 170 2 15 1 372 1 139 1 293 2 46 2 177 1 269 2 22 1 
203 1 342 1 245 1 107 1 182 1 345 1 207 1 303 1 
319 1 350 1 
319 1 350 1 
137 1 324 1 
137 1 324 1 
137 1 324 1 
181 1 319 1 350 1 
181 1 319 1 350 1 
85 1 319 1 350 1 
218 1 137 1 324 1 319 2 60 1 350 2 
181 1 319 1 350 1 
90 1 319 1 350 1 
90 1 319 1 350 1 
90 1 319 1 350 1 
313 1 99 1 182 2 272 1 121 1 255 1 52 1 362 1 154 1 107 2 190 1 319 1 321 1 303 2 196 1 221 1 82 1 85 1 225 1 345 2 350 1 17 1 45 1 207 2 
313 3 224 1 99 2 121 2 272 2 307 1 350 2 186 2 154 2 317 1 67 1 218 1 190 2 319 2 45 1 258 1 259 1 196 2 162 1 
28 1 130 1 332 1 
28 1 130 1 227 1 
363 1 217 1 130 3 332 2 9 1 227 1 
363 1 217 1 130 2 332 1 227 1 266 1 
363 2 217 1 130 2 332 1 227 1 
230 2 358 1 330 2 98 1 359 1 3 1 211 1 150 1 272 5 121 5 255 1 151 1 235 4 155 1 298 3 337 2 191 2 258 2 109 1 110 1 111 1 322 1 164 1 82 1 39 1 289 1 169 1 17 1 134 3 328 1 375 1 177 1 
230 6 358 3 330 6 98 2 359 3 211 2 150 3 272 9 121 9 24 1 151 3 235 7 214 1 277 1 155 2 298 8 337 6 258 5 109 1 110 6 80 1 322 1 164 1 39 2 347 1 169 3 87 5 267 1 17 4 175 1 134 9 328 2 375 1 177 3 93 5 
230 2 358 1 98 1 330 2 3 1 211 1 359 1 150 2 272 3 121 3 151 1 235 2 214 1 155 1 298 3 337 2 191 1 258 3 322 1 39 1 289 1 169 1 17 1 134 4 328 1 177 1 
230 4 358 2 98 1 330 4 211 1 3 1 359 2 150 3 272 4 121 4 151 2 235 3 214 1 277 1 155 1 298 5 337 4 191 2 258 4 322 1 39 1 289 1 347 1 169 2 17 2 134 7 175 1 328 1 177 2 
326 1 126 1 282 1 
326 1 40 1 
329 1 
326 1 10 1 285 1 
326 1 323 1 
326 1 285 1 
234 1 276 1 326 2 10 1 329 1 282 2 285 1 
165 3 112 2 358 1 35 1 294 1 83 1 120 1 180 1 263 7 151 1 325 1 170 4 351 1 75 2 76 1 302 1 293 3 
165 3 112 2 358 1 35 1 294 1 83 1 120 1 180 1 263 7 151 1 325 1 170 4 351 1 75 2 76 1 302 1 293 3 
165 3 112 2 358 1 35 1 294 1 148 1 83 1 120 1 180 1 263 7 151 1 325 1 170 4 351 1 75 2 76 1 302 1 293 3 
294 2 358 4 120 1 180 1 359 3 151 4 27 4 256 1 102 1 297 1 75 3 76 1 302 2 367 3 81 1 165 10 112 5 35 5 83 2 114 1 263 31 264 1 66 1 325 2 170 16 169 3 351 1 228 1 293 15 251 1 177 3 269 2 22 1 147 1 
358 1 294 1 120 1 151 1 102 2 75 2 76 1 302 1 59 1 163 1 81 2 112 3 165 4 35 1 83 1 114 2 263 9 66 1 325 1 170 5 351 1 293 4 269 4 22 2 
357 1 97 1 232 1 179 2 332 1 74 1 300 1 188 1 28 1 77 1 78 1 9 1 30 1 219 1 240 1 339 1 128 1 220 1 370 1 260 2 306 1 371 1 130 2 38 1 115 1 168 1 201 1 227 1 354 1 48 1 
357 1 97 1 232 1 179 3 332 1 74 1 300 1 188 1 28 1 77 1 78 1 9 1 30 2 240 1 339 1 128 1 370 1 260 3 223 1 306 1 371 1 244 1 130 2 38 1 115 1 201 1 227 1 141 1 354 1 48 1 
357 1 97 1 232 1 179 2 332 1 300 1 188 1 77 1 28 1 9 1 30 2 339 1 370 1 260 2 306 1 371 1 244 1 130 2 38 1 115 1 201 1 227 1 141 1 354 1 48 1 
23 1 357 2 97 2 232 2 179 1 74 1 300 1 188 1 77 1 8 1 78 1 239 1 285 1 370 1 260 1 223 1 371 2 115 1 326 1 89 1 250 1 268 1 377 1 
357 1 97 1 232 1 179 1 332 1 74 1 300 1 188 1 28 1 77 1 78 1 9 1 240 1 339 1 128 1 220 1 370 1 260 1 371 1 244 1 130 2 115 1 168 1 201 1 227 1 354 1 
208 1 
1 1 330 2 211 1 150 2 4 1 298 2 155 1 300 1 8 2 258 2 109 1 110 6 304 1 261 1 115 2 345 1 348 1 308 1 20 2 268 1 176 1 182 1 121 5 272 5 26 2 123 1 187 2 318 2 188 1 77 2 280 1 281 1 283 2 195 2 285 1 197 1 370 2 322 1 245 1 131 4 39 1 326 1 41 1 134 2 42 2 203 1 43 1 328 1 135 1 250 1 375 3 91 1 206 1 207 1 94 1 
182 1 272 3 121 3 4 1 123 1 187 1 338 1 281 1 110 2 197 1 261 1 245 1 131 2 345 1 348 1 41 1 203 1 135 1 375 1 206 1 207 1 94 1 
182 1 272 3 121 3 4 1 123 1 338 1 281 1 283 1 258 1 110 1 197 1 322 1 261 1 245 1 131 3 345 1 348 1 41 1 203 1 135 1 375 1 206 1 207 1 94 1 
182 1 272 3 121 3 4 1 123 1 187 1 318 1 338 1 281 1 283 1 258 1 110 2 197 1 322 1 261 1 245 1 131 3 345 1 348 1 41 1 203 1 135 1 375 1 206 1 207 1 94 1 
330 1 211 1 150 2 4 1 155 1 298 1 338 1 258 5 109 1 110 7 304 1 261 1 345 1 348 1 20 2 271 1 231 1 233 1 182 1 121 5 272 5 26 2 123 1 187 4 278 1 318 4 281 1 283 4 195 2 197 1 322 5 245 1 131 6 41 1 203 1 42 2 135 1 328 1 375 3 206 1 91 1 207 1 140 1 94 1 
1 1 330 1 211 1 182 1 150 2 272 4 121 4 26 2 4 1 123 1 187 2 298 1 155 1 318 2 281 1 258 2 283 2 109 1 110 4 195 2 197 1 322 1 304 1 261 1 245 1 131 4 345 1 348 1 41 1 134 2 20 2 42 2 203 1 135 1 328 1 375 2 91 1 206 1 207 1 94 1 
231 1 330 1 211 1 182 1 150 2 272 4 121 4 26 2 4 1 123 1 187 2 298 1 155 1 278 1 318 2 281 1 258 1 283 2 109 1 110 4 195 2 197 1 322 1 304 1 261 1 245 1 131 4 345 1 348 1 41 1 20 2 42 2 203 1 135 1 328 1 375 2 91 1 206 1 207 1 140 1 94 1 
231 1 330 1 211 1 182 1 150 2 272 4 121 4 26 2 4 1 123 1 187 2 298 1 155 1 278 1 318 2 281 1 258 1 283 2 109 1 110 4 195 2 197 1 322 1 304 1 261 1 245 1 131 4 345 1 348 1 41 1 20 2 42 2 203 1 135 1 328 1 375 2 91 1 206 1 207 1 140 1 94 1 
330 1 211 1 182 1 272 4 121 4 4 1 123 1 187 2 298 1 155 1 278 1 318 2 125 1 281 1 258 1 283 2 109 1 110 4 195 2 197 1 322 1 261 1 245 1 131 4 200 2 345 1 348 1 290 2 132 1 41 1 133 1 134 2 42 2 203 1 135 1 328 1 375 2 91 1 206 1 207 1 94 1 
231 1 330 1 233 1 211 1 182 1 150 2 272 4 121 4 26 2 4 1 123 1 187 3 298 1 155 1 278 1 318 3 281 1 258 1 283 3 109 1 195 2 110 5 197 1 322 1 304 1 261 1 245 1 131 5 345 1 348 1 41 1 20 2 42 2 203 1 328 1 135 1 375 2 91 1 206 1 207 1 140 1 94 1 
231 1 330 1 233 1 211 1 182 1 150 2 272 4 121 4 26 2 4 1 123 1 187 3 298 1 155 1 278 1 318 3 281 1 258 1 283 3 109 1 195 2 110 5 197 1 322 1 304 1 261 1 245 1 131 5 345 1 348 1 41 1 20 2 42 2 203 1 328 1 135 1 375 2 91 1 206 1 207 1 140 1 94 1 
1 1 330 1 211 1 182 1 272 4 121 4 4 1 123 1 187 2 298 1 155 1 318 2 281 1 258 1 283 2 109 1 110 4 195 2 197 1 322 1 261 1 245 1 131 4 200 2 345 1 348 1 290 2 132 1 41 1 134 2 42 2 203 1 135 1 328 1 375 2 91 1 206 1 207 1 94 1 
294 1 358 1 120 1 254 1 151 1 334 1 102 1 75 1 257 1 76 1 126 1 321 2 81 1 112 2 165 2 83 1 114 1 263 6 170 3 351 1 15 1 139 1 46 1 293 3 269 2 22 1 
49 1 71 1 358 2 359 2 254 4 151 1 185 1 27 3 334 11 256 1 102 2 297 1 279 1 367 3 58 1 321 1 81 2 165 2 112 1 35 1 114 2 246 1 263 14 170 8 169 2 247 1 15 1 139 2 293 6 46 11 177 1 269 4 22 2 
71 1 50 1 182 2 254 1 185 1 102 1 300 1 188 1 336 1 77 1 8 1 107 1 10 1 320 1 58 1 321 1 303 1 285 1 370 1 222 1 34 1 341 1 81 1 114 1 263 2 115 1 345 1 170 1 15 1 326 1 139 1 44 1 207 2 293 1 269 2 119 1 22 1 146 1 
294 1 50 2 254 7 151 3 213 1 334 7 102 3 156 2 300 2 8 1 107 1 10 2 58 1 303 1 222 2 341 2 112 4 165 8 114 3 263 20 115 3 345 1 169 2 170 10 351 1 15 3 174 2 117 2 177 2 269 6 270 2 22 3 119 1 70 1 71 1 358 3 120 1 182 3 359 2 185 1 75 1 76 1 188 2 77 3 29 1 321 2 285 2 370 3 81 3 35 4 244 1 83 1 326 2 327 2 44 1 139 3 207 3 293 10 46 7 
210 1 182 1 361 1 153 1 185 1 215 1 102 2 257 1 300 2 188 2 77 8 107 1 8 2 219 1 58 1 192 1 303 1 285 2 370 8 81 2 244 1 114 2 263 2 345 1 115 7 202 1 170 1 15 2 173 1 326 3 250 1 44 1 139 2 268 1 207 1 311 2 293 1 269 4 22 2 
71 1 358 1 182 1 359 1 254 1 151 1 334 1 102 1 6 1 107 1 303 1 81 1 165 1 112 1 114 1 263 3 345 1 116 1 169 1 170 1 15 1 139 1 207 1 46 1 229 1 293 2 177 1 269 2 22 1 
81 1 165 1 35 1 358 1 288 1 114 1 359 1 254 1 263 2 334 1 170 2 102 1 15 1 257 1 139 1 46 1 269 2 22 1 
81 1 165 1 112 1 114 1 254 1 263 2 151 1 315 1 334 1 102 1 15 1 257 1 139 1 46 1 293 2 177 1 269 2 22 1 
358 1 359 1 254 2 151 1 334 2 102 1 257 1 81 1 165 2 112 1 35 1 114 1 263 4 170 2 169 1 15 1 139 1 46 2 293 2 177 1 269 2 22 1 
81 1 165 1 35 1 358 1 288 1 114 1 359 1 254 1 263 2 334 1 170 2 102 1 15 1 173 1 139 1 46 1 269 2 22 1 
81 1 165 1 112 1 114 1 254 1 263 2 151 1 315 1 334 1 102 1 15 1 173 1 139 1 46 1 293 2 177 1 269 2 22 1 
358 1 359 1 254 2 151 1 334 2 102 1 81 1 165 2 112 1 35 1 114 1 263 4 170 2 169 1 15 1 173 1 139 1 46 2 293 2 177 1 269 2 22 1 
358 1 359 1 254 2 151 1 334 2 102 1 81 1 165 2 112 1 35 1 114 1 263 4 170 2 169 1 15 1 139 1 46 2 293 2 177 1 269 2 22 1 
50 1 182 1 185 1 102 1 156 1 300 1 188 1 77 1 8 1 10 1 58 1 321 1 285 1 370 1 222 1 341 1 81 1 114 1 263 2 115 1 170 1 15 1 326 1 139 1 207 1 293 1 269 2 22 1 
182 1 185 1 102 1 300 1 55 1 188 1 77 1 8 1 10 1 58 1 321 1 285 1 242 1 370 1 222 1 81 1 114 1 167 1 263 2 115 1 170 1 15 1 326 1 139 1 207 1 293 1 269 2 22 1 
358 1 71 1 359 1 254 2 151 1 334 2 102 1 81 1 165 2 112 1 35 1 114 1 263 4 170 2 169 1 15 1 139 1 46 2 293 2 177 1 269 2 22 1 
358 1 50 1 359 1 182 1 254 2 151 1 334 2 102 1 156 1 300 1 188 1 77 1 10 1 219 1 285 1 370 1 222 1 341 1 81 1 112 1 165 2 35 1 114 1 263 4 115 1 170 2 169 1 15 1 326 1 117 1 139 1 207 1 293 2 46 2 177 1 269 2 22 1 
71 1 358 1 182 1 359 1 254 1 151 1 334 1 102 1 6 1 107 1 303 1 81 1 165 1 198 1 35 1 114 1 263 3 345 1 116 1 169 1 170 2 15 1 139 1 207 1 293 1 46 1 177 1 269 2 22 1 
253 1 178 2 358 3 359 3 273 1 151 3 360 1 27 2 296 1 256 1 102 2 297 1 124 1 189 1 367 1 158 1 59 1 81 2 112 3 165 6 35 3 114 2 263 19 170 9 169 3 248 2 293 10 177 3 269 4 22 2 
253 1 178 4 358 3 359 3 273 1 151 2 360 2 296 2 27 2 102 3 297 2 316 1 124 1 367 2 159 1 59 1 129 1 31 1 81 3 165 4 112 2 35 2 114 3 263 26 14 1 66 2 170 14 169 3 352 1 248 1 293 12 177 2 269 6 22 3 
253 1 294 1 151 5 296 2 256 1 102 3 297 3 159 1 59 1 165 8 112 4 114 3 263 41 14 1 66 1 169 4 170 20 351 1 352 1 177 4 269 6 22 3 358 5 178 4 120 1 359 4 273 1 360 1 27 4 316 1 75 1 124 1 76 1 189 1 367 3 31 1 129 1 369 1 81 3 35 4 83 1 248 1 293 21 
253 1 294 1 178 4 358 5 120 1 359 4 273 1 151 4 360 1 27 4 296 2 256 1 102 4 297 3 75 1 316 1 76 1 124 1 189 1 367 3 159 1 59 1 369 1 129 1 31 1 81 4 112 4 165 7 35 3 83 1 114 4 263 38 14 1 66 2 170 20 169 4 351 1 352 1 248 1 293 18 177 3 269 8 22 4 
253 1 294 1 178 4 358 8 120 1 359 7 273 1 151 8 360 1 27 4 296 1 256 2 102 2 297 2 75 1 316 1 76 1 124 1 367 4 159 1 59 1 129 1 31 1 81 2 112 7 165 14 35 7 83 1 114 2 263 52 14 1 66 1 170 27 169 7 351 1 247 2 352 1 248 1 293 25 177 7 269 4 22 2 
218 1 224 1 190 1 99 1 319 1 25 1 307 1 350 1 196 1 154 1 
85 1 221 1 
96 1 190 1 99 1 319 1 183 1 184 1 350 1 196 1 154 1 
181 1 122 1 
2 1 90 1 60 1 
313 2 224 1 99 1 121 1 272 1 307 1 350 1 186 1 154 1 317 1 67 1 218 1 190 1 319 1 45 1 258 1 259 1 196 1 
313 2 224 1 99 1 121 1 272 1 307 1 350 1 186 1 154 1 317 1 67 1 218 1 190 1 319 1 45 1 258 1 259 1 196 1 
313 2 224 1 99 1 121 1 272 1 307 1 350 1 186 1 154 1 317 1 67 1 218 1 190 1 319 1 45 1 258 1 259 1 196 1 
181 1 122 1 60 1 
181 1 122 1 60 1 
2 1 90 1 
2 1 90 1 60 1 
52 1 362 1 
313 1 182 2 99 1 272 1 121 1 235 1 255 1 52 1 362 1 186 1 317 1 154 1 107 2 190 1 319 1 321 1 303 2 196 1 221 1 82 1 85 1 225 1 345 2 226 1 350 1 17 1 207 2 
71 1 182 2 153 1 185 1 102 1 300 1 188 1 77 2 238 1 58 1 192 1 340 1 285 1 370 2 33 1 81 1 114 1 263 2 345 2 115 2 170 1 15 1 16 1 326 1 68 1 139 1 207 2 311 2 293 1 269 2 22 1 
357 1 130 2 244 1 332 1 115 2 201 1 227 1 300 1 188 1 28 1 77 2 9 1 205 1 219 1 240 1 354 1 47 1 11 1 370 2 
357 1 130 2 244 1 332 1 115 1 201 1 227 1 300 1 188 1 28 1 77 1 9 1 157 1 240 1 354 1 11 1 370 1 
23 1 357 1 115 1 326 1 300 1 188 1 136 1 77 1 8 1 250 1 268 1 47 1 285 1 370 1 
357 1 130 2 244 1 332 1 115 1 201 1 227 1 300 1 188 1 28 1 77 1 9 1 205 1 240 1 354 1 47 1 11 1 370 1 
108 1 
374 1 113 1 330 1 126 1 258 1 298 1 322 1 
330 1 211 1 150 1 121 1 272 1 26 1 298 1 155 1 258 2 109 1 110 1 304 1 322 1 20 1 134 1 328 1 375 1 
230 3 312 1 358 1 330 3 359 1 211 2 150 3 272 2 121 2 234 1 151 1 299 1 155 2 298 4 300 1 188 2 77 1 8 1 337 3 10 1 258 3 109 2 110 2 62 1 79 1 285 1 243 1 286 1 370 1 115 1 39 1 169 1 40 2 18 1 326 3 134 6 327 1 328 2 375 1 206 1 92 1 177 1 
230 5 312 2 358 2 331 1 330 5 211 2 359 2 272 1 121 1 150 3 151 2 27 1 297 1 316 1 298 8 155 2 337 5 367 1 159 1 258 5 31 1 109 2 110 1 322 2 39 1 14 1 169 2 352 1 291 1 134 6 328 2 375 1 176 1 177 2 144 1 
312 2 231 1 294 1 358 2 330 2 182 1 211 1 272 1 121 1 151 1 295 1 73 1 53 1 155 1 298 2 76 1 6 1 107 1 368 1 109 1 61 1 303 1 83 1 245 1 345 1 291 1 328 1 207 1 
113 1 330 1 211 1 155 1 298 1 374 1 328 1 258 1 109 1 322 1 
230 5 312 2 358 2 330 5 359 2 150 5 151 2 169 2 298 5 291 1 134 10 327 1 337 5 258 5 177 2 
375 1 272 1 121 1 258 1 110 1 322 1 
330 2 211 2 100 2 121 3 272 3 72 1 214 1 155 2 298 2 300 1 188 1 77 4 8 2 109 1 110 4 285 1 370 4 64 1 115 4 39 2 326 1 308 1 43 1 328 2 375 2 250 1 176 2 268 1 69 1 
50 1 182 3 152 1 185 1 53 1 102 1 6 2 156 1 300 1 188 1 77 1 8 1 107 2 10 1 321 1 303 2 285 1 370 1 222 1 81 1 341 1 114 1 263 1 115 1 345 2 15 1 326 1 139 1 207 3 293 1 269 2 22 1 
230 2 330 2 211 1 150 2 39 1 75 1 155 1 298 1 134 4 328 1 337 2 176 1 258 4 109 1 322 2 
190 1 99 1 118 1 
190 1 99 1 118 1 
0 1 190 1 99 1 307 1 362 1 
190 1 99 1 118 1 
309 1 190 1 99 1 
309 1 190 1 99 1 
309 1 190 1 99 1 
190 1 99 1 
319 1 350 1 
81 2 165 3 112 2 358 1 35 1 294 1 120 1 83 1 114 2 263 8 151 1 66 1 170 4 102 2 351 1 75 1 76 1 293 4 269 4 22 2 
76 1 165 2 112 2 358 1 294 1 83 1 120 1 263 6 151 1 126 1 293 3 170 3 351 1 75 1 
81 1 112 1 165 2 358 1 35 1 65 1 114 1 359 1 263 4 151 1 169 1 170 2 102 1 293 2 177 1 269 2 22 1 
112 1 165 2 358 1 35 1 359 1 263 7 151 1 27 2 170 3 256 1 169 1 297 1 367 1 293 4 177 1 
294 2 358 3 120 1 359 2 151 3 27 2 256 1 102 2 75 1 76 1 279 1 367 2 81 2 165 9 112 5 35 4 83 2 114 2 263 23 66 2 169 2 170 11 351 1 247 1 293 12 177 2 269 4 22 2 252 1 
263 1 293 1 27 1 
263 1 367 1 170 1 
81 1 165 3 112 2 358 1 35 1 114 1 65 1 359 1 263 6 151 1 169 1 170 3 102 1 327 1 293 3 177 1 269 2 22 1 
358 2 359 2 151 2 27 1 102 1 297 1 316 1 367 1 159 1 59 1 31 1 81 1 112 1 165 2 35 1 114 1 263 12 14 1 170 6 169 2 352 1 293 6 177 2 269 2 22 1 
112 1 165 2 358 1 294 1 35 1 83 1 263 6 151 1 170 3 76 1 293 3 
81 1 165 2 112 1 35 1 294 1 83 1 120 1 114 1 263 3 66 1 170 1 102 1 351 1 293 2 269 2 252 1 22 1 
81 1 112 3 165 5 294 2 35 2 358 2 83 2 114 1 263 10 151 2 295 1 170 5 102 1 76 1 293 5 59 1 269 2 22 1 
81 1 165 1 358 1 35 1 114 1 359 1 263 2 170 2 102 1 59 1 269 2 22 1 
81 1 112 1 165 2 358 1 35 1 114 1 359 1 263 4 151 1 169 1 170 2 102 1 293 2 177 1 59 1 269 2 22 1 
81 3 112 1 165 2 294 1 35 1 83 1 114 3 263 3 66 1 170 1 102 3 189 1 293 2 59 1 269 6 252 1 22 3 
294 3 358 5 120 1 359 3 151 5 27 4 256 1 102 5 297 1 75 1 76 2 189 1 367 3 59 1 81 5 165 12 112 7 35 5 83 3 65 1 114 5 263 34 66 2 264 1 170 16 169 3 351 1 228 1 293 18 177 3 269 10 252 1 22 5 147 1 
358 1 294 1 120 1 151 1 27 1 102 1 297 1 75 1 76 1 367 1 59 1 31 1 81 1 112 2 165 2 83 1 114 1 263 8 170 4 351 1 293 4 269 2 22 1 
294 1 358 2 120 1 359 1 151 1 27 2 256 1 102 2 297 1 75 1 76 1 367 1 59 1 31 1 81 2 112 2 165 3 35 1 83 1 114 2 65 1 263 11 170 6 169 1 351 1 293 5 269 4 22 2 
294 1 358 3 120 1 359 2 151 3 27 1 102 3 297 1 75 1 316 1 76 1 367 1 159 1 59 1 31 1 81 3 112 3 165 4 35 1 83 1 65 1 114 3 263 19 14 1 66 1 170 9 169 2 351 1 352 1 293 10 177 2 269 6 22 3 
294 1 358 3 120 1 359 2 151 2 27 1 102 3 297 1 75 1 316 1 76 1 367 1 159 1 59 1 31 1 81 3 112 3 165 5 35 2 83 1 65 1 114 3 263 17 14 1 66 1 170 10 169 2 351 1 352 1 293 7 177 1 269 6 22 3 
358 1 294 1 120 1 151 1 27 1 102 1 297 1 75 1 76 1 367 1 59 1 31 1 81 1 112 2 165 2 83 1 114 1 263 8 170 4 351 1 293 4 269 2 22 1 
358 2 359 2 151 2 27 1 102 1 297 1 316 1 367 1 159 1 59 1 31 1 81 1 112 1 165 2 35 1 114 1 263 12 14 1 170 6 169 2 352 1 293 6 177 2 269 2 22 1 
294 1 358 3 120 1 359 2 151 2 27 1 102 4 297 1 75 1 316 1 76 1 367 1 159 1 59 1 31 1 81 4 112 3 165 5 35 2 83 1 65 1 114 4 263 18 14 1 66 2 170 10 169 2 351 1 352 1 293 8 177 1 269 8 22 4 
358 3 359 3 151 2 27 1 102 4 297 1 316 1 189 1 367 1 159 1 59 1 31 1 81 4 112 3 165 6 35 3 114 4 263 16 14 1 66 2 170 9 169 3 352 1 293 7 177 2 269 8 22 4 
112 3 165 6 294 3 35 3 358 1 120 2 83 3 263 7 151 1 170 3 351 1 76 1 293 4 
294 1 358 3 120 1 359 2 151 2 27 1 102 4 297 1 75 1 316 1 76 1 189 1 367 1 159 1 59 1 31 1 81 4 112 3 165 4 35 1 83 1 114 4 263 18 14 1 66 2 170 10 169 2 351 1 352 1 293 8 177 1 269 8 22 4 
7 1 261 1 182 1 345 1 207 1 321 1 284 1 
166 1 261 1 182 1 345 1 274 1 56 1 7 1 207 1 321 1 284 1 145 1 287 1 
326 1 300 1 188 1 77 1 250 1 8 1 268 1 115 1 126 1 285 1 370 1 
341 1 182 2 345 1 115 1 326 1 300 1 188 1 77 1 107 1 8 1 10 1 44 1 207 2 321 1 303 1 285 1 370 1 222 1 
182 2 100 1 300 1 188 1 77 1 107 1 10 2 127 1 321 1 303 2 285 2 197 1 370 1 222 1 323 1 341 1 245 1 115 1 345 2 326 3 203 1 44 1 207 2 
182 2 100 1 300 1 188 1 77 2 107 1 10 2 127 1 321 1 303 2 285 2 197 1 370 2 222 1 323 1 245 1 167 1 199 1 115 2 345 2 326 3 203 1 44 1 207 2 
100 1 272 2 121 2 54 1 300 1 188 1 77 3 8 1 10 1 282 1 127 1 258 1 110 1 285 1 370 3 323 1 322 1 199 1 115 3 40 1 326 4 88 1 206 1 
182 1 100 1 272 2 121 2 73 1 53 1 299 1 6 1 77 1 107 1 368 1 258 1 110 1 61 1 303 1 370 1 322 1 245 1 115 1 345 1 40 1 326 1 206 1 207 1 
300 1 188 1 77 1 115 1 361 1 370 1 
244 1 210 1 37 1 234 1 115 6 361 1 202 1 215 1 216 1 326 3 105 1 300 2 188 3 77 7 8 2 10 1 311 1 219 1 192 1 285 2 370 7 
358 1 294 1 71 1 120 1 50 1 182 2 254 1 151 1 334 1 102 2 75 1 76 1 156 1 300 1 188 1 77 1 107 1 10 1 219 1 321 2 303 1 285 1 370 1 222 1 81 2 341 1 165 2 112 2 83 1 114 2 263 6 345 1 115 1 170 3 351 1 15 2 326 1 68 1 117 1 139 2 44 1 207 2 46 1 293 3 269 4 270 1 22 2 
294 1 330 5 211 2 151 2 295 1 53 1 299 1 155 2 298 4 6 1 8 1 107 1 258 2 109 2 110 2 62 1 61 1 303 1 113 1 115 1 345 1 18 1 69 1 312 2 358 2 182 1 121 3 272 3 235 1 73 1 76 1 77 1 368 1 79 1 370 1 322 2 83 1 245 1 40 1 326 1 374 1 291 1 328 2 375 1 206 1 207 1 
234 1 115 2 361 1 326 2 300 1 188 2 77 2 10 1 219 1 282 1 285 1 370 2 243 1 
199 1 115 4 326 1 300 1 292 1 188 1 77 4 8 1 250 1 268 1 219 1 285 1 370 4 
13 1 37 1 100 1 115 2 326 1 105 1 300 1 188 2 77 2 10 1 241 1 285 1 370 2 70 1 
300 1 188 1 28 1 130 1 77 1 8 1 115 1 354 1 227 1 370 1 
326 1 300 1 188 1 244 1 77 2 115 2 219 1 192 1 285 1 370 2 16 1 
210 1 100 1 115 4 202 1 326 3 300 2 292 1 188 2 77 5 250 1 8 1 268 1 219 1 192 1 285 2 370 5 
100 1 115 4 202 1 326 3 300 2 292 1 188 2 77 5 250 1 8 1 268 1 219 1 192 1 21 1 285 2 370 5 
182 2 167 1 345 1 115 1 326 1 300 1 188 1 77 1 107 1 8 1 10 1 44 1 207 2 321 1 303 1 285 1 370 1 222 1 
37 1 100 1 234 1 115 1 216 1 326 1 105 1 300 1 188 2 77 1 10 1 285 1 370 1 
182 1 212 1 345 1 172 1 238 1 249 1 207 1 340 1 33 1 
212 1 193 1 143 1 
149 1 249 1 212 1 321 1 172 1 
63 1 149 2 245 1 212 1 121 2 272 2 235 1 172 2 5 1 203 1 249 2 206 1 258 1 143 1 193 1 321 1 197 1 322 1 94 1 
306 1 38 1 126 1 48 1 
306 1 38 1 179 1 78 1 74 1 48 1 260 1 
97 1 371 1 260 1 
306 1 38 1 179 3 168 1 74 1 275 1 171 2 310 1 78 1 376 1 48 1 260 3 
306 1 38 1 179 2 78 1 30 1 74 1 237 1 48 1 260 2 
106 1 28 1 130 1 38 1 179 1 332 1 78 1 74 1 168 1 209 1 260 1 
38 1 179 1 78 1 74 1 168 1 48 1 260 1 
306 1 179 1 78 1 74 1 168 1 48 2 260 1 
38 1 179 2 344 1 168 1 74 2 204 1 78 2 48 1 32 1 260 2 
306 1 305 1 179 3 84 1 38 2 168 1 74 1 106 1 78 1 353 1 30 2 48 1 260 3 
306 1 130 2 38 1 179 2 332 1 314 1 168 1 74 1 227 1 28 1 78 1 9 1 30 1 48 1 260 2 
306 1 305 1 179 4 38 2 168 1 74 2 237 1 106 1 78 2 364 1 30 2 48 1 260 4 
306 1 38 1 179 1 78 1 74 1 168 1 48 1 260 1 
306 2 305 1 179 4 38 3 74 1 171 1 106 1 310 1 78 1 30 2 376 1 48 2 161 1 260 4 
306 1 38 1 179 2 168 1 74 1 104 1 19 1 78 1 30 1 57 1 48 1 260 2 
306 1 38 1 179 3 343 1 168 1 74 1 171 2 310 1 78 1 376 2 48 1 260 3 
95 2 36 1 38 2 86 1 
179 1 78 1 333 1 74 1 168 1 260 1 
306 1 38 1 84 1 179 2 78 1 30 1 74 1 168 1 48 1 260 2 
103 1 
306 1 38 1 179 1 78 1 74 1 168 1 48 1 260 1 
306 1 84 1 38 1 179 3 78 1 30 1 74 1 168 1 48 1 171 1 260 3 
106 1 305 1 38 1 161 1 
38 1 48 1 

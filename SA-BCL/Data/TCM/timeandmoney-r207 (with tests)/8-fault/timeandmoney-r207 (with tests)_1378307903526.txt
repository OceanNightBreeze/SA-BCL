#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 362 90 148 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 362 90 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 362 90 148 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 362 90 148 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 362 90 148 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 6040 | stmt -> ;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | == -> <=
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4378 | == -> <
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 12316 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2274 | = null
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
345 2 30 9 0 2 321 2 3 1 200 1 97 1 11 1 38 2 252 1 136 4 305 3 256 1 76 1 15 1 358 1 261 1 105 9 312 5 234 2 204 1 264 1 152 2 122 6 177 1 215 1 372 2 27 1 
0 2 345 2 30 9 321 2 3 1 200 1 97 1 11 1 38 2 252 1 136 4 305 3 256 1 76 1 15 1 358 1 261 1 105 9 312 5 234 2 204 1 264 1 152 2 122 6 177 1 215 1 372 2 27 1 
0 2 345 2 30 10 321 2 3 1 200 1 97 1 11 1 38 2 252 1 136 5 305 4 256 1 76 1 15 1 358 1 261 1 105 10 312 6 234 2 204 1 264 1 152 2 122 7 177 1 215 1 372 2 27 1 
0 2 345 2 30 7 321 2 3 1 200 1 97 1 11 1 38 2 252 1 136 3 305 2 256 1 76 1 358 1 261 1 105 7 312 4 234 2 204 1 264 1 152 2 122 4 177 1 215 1 372 1 27 1 
15 1 30 4 0 1 105 4 261 1 321 1 312 3 234 1 204 1 97 1 152 1 122 3 11 1 38 1 136 2 305 1 256 1 372 2 
30 2 202 1 345 1 105 2 321 1 175 1 312 1 234 1 264 1 97 1 152 1 11 1 38 1 177 1 256 1 272 1 
30 3 345 1 105 3 321 2 312 2 97 1 152 2 122 1 11 1 136 1 305 1 256 1 215 1 
345 1 30 9 0 1 320 1 321 2 200 1 97 1 11 1 38 1 136 4 305 3 256 1 15 1 358 1 105 9 261 1 312 5 204 1 234 1 122 7 152 2 215 1 372 2 65 1 
345 1 30 9 0 1 320 1 321 2 200 1 97 1 11 1 38 1 136 4 305 3 256 1 15 1 358 1 105 9 261 1 312 5 204 1 234 1 122 7 152 2 215 1 372 2 65 1 
367 1 88 1 248 1 
115 2 217 1 88 1 
53 2 52 2 44 2 180 2 87 1 155 2 182 1 326 2 
158 1 346 1 53 3 52 2 180 2 160 2 277 1 323 2 95 1 182 1 71 2 326 2 114 1 282 2 137 1 254 1 138 1 100 1 331 1 44 2 17 2 146 1 310 1 174 1 78 1 192 1 151 1 210 1 237 1 197 1 243 1 87 1 293 1 49 1 89 1 155 3 294 1 
183 1 53 1 52 1 44 1 180 1 87 1 21 1 155 1 325 1 326 1 
52 1 53 1 179 1 248 1 135 1 154 1 183 1 167 1 270 1 88 1 168 1 111 1 155 1 230 1 
44 1 52 1 53 1 179 1 180 1 248 1 326 1 135 1 154 1 183 1 270 1 88 1 111 2 155 1 230 2 
289 1 111 1 47 1 230 1 42 1 
289 1 88 1 111 2 248 1 133 1 112 1 230 2 42 1 
289 1 111 1 230 1 
44 1 52 1 53 1 180 1 21 1 325 1 326 1 183 1 126 1 111 1 87 1 155 1 230 1 42 1 
88 1 
289 1 88 1 111 2 227 1 248 1 133 1 230 2 42 1 
178 1 298 1 173 1 289 2 147 2 68 1 46 1 248 1 133 1 207 2 73 2 74 1 88 1 111 5 13 1 28 1 230 5 59 1 42 2 
367 1 182 1 
52 2 53 2 44 1 180 1 182 2 326 1 340 1 155 2 64 1 
364 1 250 1 127 1 
158 1 53 1 174 1 160 1 78 1 95 1 182 1 71 1 210 1 114 1 237 1 327 1 282 1 293 1 155 1 294 1 
158 1 172 1 44 1 52 1 53 2 174 1 180 1 160 1 78 1 161 1 95 1 71 1 364 1 210 1 114 1 237 1 282 1 293 1 155 2 294 1 
157 1 172 1 44 4 52 5 53 5 180 4 161 2 182 1 326 1 168 1 155 5 64 1 356 1 29 1 
319 1 183 1 53 2 52 2 44 2 180 2 155 2 325 1 
53 3 52 3 44 3 180 3 161 1 155 3 182 1 326 1 
183 1 53 1 52 1 44 1 180 1 155 1 325 1 
183 1 53 1 52 1 44 1 180 1 340 1 155 1 64 1 326 1 
158 1 346 1 53 4 52 3 179 1 180 3 160 1 161 1 277 1 323 2 95 1 182 1 71 1 326 2 135 1 114 1 183 1 282 1 331 1 230 1 103 1 172 1 44 3 17 1 146 1 174 1 359 1 310 1 78 1 192 1 151 1 210 1 237 1 154 1 197 1 270 1 243 1 293 1 111 1 87 1 49 1 64 1 155 4 294 1 
53 2 52 2 44 1 180 1 161 1 168 1 155 2 182 1 356 1 
103 1 172 1 44 3 52 3 53 3 179 1 180 3 161 2 326 1 135 1 154 1 183 1 270 1 88 1 111 1 328 1 64 1 155 3 230 1 
44 2 52 2 53 2 180 2 161 1 326 1 364 1 250 1 64 1 155 2 
158 1 53 1 174 1 160 1 78 1 95 1 182 1 71 1 210 1 114 1 237 1 282 1 293 1 155 1 294 1 
158 1 53 1 174 1 160 1 78 1 314 1 182 1 71 1 210 1 114 1 237 1 282 1 284 1 293 1 155 1 
346 1 277 1 323 2 220 1 354 1 250 2 304 1 281 1 100 2 146 1 17 4 263 1 119 1 205 1 192 2 209 1 151 1 176 1 364 2 316 1 197 1 127 2 373 1 49 1 
183 1 53 1 52 1 44 1 319 1 180 1 270 1 155 1 
86 1 307 1 
86 1 307 1 
259 1 96 1 
259 1 96 1 
86 1 259 1 307 1 96 1 
255 1 86 1 307 1 
255 1 86 1 307 1 
255 1 86 1 307 1 
86 2 370 1 259 1 96 1 307 2 363 1 
86 1 169 1 307 1 
86 1 116 1 307 1 
86 1 116 1 307 1 
86 1 116 1 307 1 
198 1 53 2 52 2 275 1 44 2 18 1 180 2 313 1 350 1 182 1 365 1 222 1 125 1 268 1 86 1 306 1 111 1 130 1 330 1 155 2 169 1 230 1 307 1 295 1 
297 2 198 3 275 2 276 1 262 1 313 2 363 1 211 1 125 2 86 2 371 1 110 1 306 2 88 1 111 2 231 1 307 2 230 2 295 1 
0 1 38 1 234 1 
38 1 272 1 234 1 
0 2 38 3 54 1 272 1 141 1 149 1 
0 1 38 2 272 1 8 1 141 1 149 1 
0 1 38 2 272 1 141 1 149 2 
298 2 217 1 219 1 133 1 248 1 354 1 73 1 115 3 185 1 330 1 230 5 42 4 260 2 143 1 173 1 289 1 18 1 147 1 263 1 118 1 63 1 235 1 207 1 209 1 267 1 241 2 83 2 268 1 111 5 88 2 373 1 28 3 
298 6 217 3 69 5 348 1 55 1 219 2 248 1 133 1 354 3 36 1 73 2 115 9 185 2 40 1 99 1 13 1 330 4 230 9 42 7 260 6 143 1 289 6 173 1 147 2 263 3 63 3 47 5 207 2 209 3 241 6 129 1 111 9 88 5 373 3 28 8 
298 2 217 2 219 1 248 1 354 1 73 1 185 1 115 4 13 1 330 1 230 3 42 2 260 2 147 1 263 1 118 1 63 1 235 1 207 1 209 1 83 1 241 2 88 3 111 3 373 1 28 3 
298 4 217 3 55 1 219 1 248 1 354 2 73 1 115 7 185 1 99 1 13 1 330 2 230 4 42 3 260 4 147 1 263 2 118 1 63 2 235 1 207 1 209 2 241 4 83 2 129 1 88 4 111 4 373 2 28 5 
237 1 367 1 349 1 
237 1 336 1 
303 1 
237 1 158 1 78 1 
237 1 24 1 
237 1 78 1 
237 3 158 1 61 1 251 1 349 2 78 1 
104 1 17 7 220 3 205 2 7 1 192 3 209 1 113 1 98 1 124 1 12 1 225 2 283 1 373 1 100 4 257 1 344 1 
104 1 17 7 220 3 205 2 7 1 192 3 209 1 113 1 98 1 124 1 12 1 225 2 283 1 373 1 100 4 257 1 344 1 
104 1 17 7 220 3 205 2 7 1 192 3 209 1 113 1 98 1 124 1 12 1 106 1 225 2 283 1 373 1 100 4 257 1 344 1 
32 1 346 1 323 2 277 1 7 1 220 2 56 1 98 1 12 2 225 1 283 1 140 1 100 3 101 1 186 1 60 1 104 1 17 6 205 1 192 3 197 1 212 1 49 1 344 1 
346 2 181 1 277 2 323 4 220 4 7 1 98 1 113 1 12 1 225 2 100 5 257 1 186 1 104 1 17 9 205 3 192 4 209 1 81 1 124 1 197 2 373 1 49 2 344 1 
0 1 30 2 345 1 321 1 54 1 160 1 93 1 94 1 5 1 71 1 97 1 10 1 114 1 11 1 38 2 282 1 256 1 77 1 105 2 312 1 234 1 150 1 122 1 152 1 242 1 107 1 214 1 341 1 272 1 293 1 
0 1 30 3 345 1 321 1 54 1 160 1 93 1 94 1 5 1 9 1 71 1 280 1 114 1 11 1 38 2 282 1 256 1 187 1 77 1 105 3 312 1 234 1 150 1 152 1 122 2 107 1 214 1 341 1 272 1 293 1 
345 1 30 2 0 1 54 1 160 1 93 1 9 1 71 1 114 1 11 1 38 2 282 1 256 1 187 1 77 1 105 2 312 1 234 1 150 1 122 2 107 1 214 1 341 1 272 1 293 1 
345 2 30 1 105 1 321 1 160 1 78 1 93 2 71 1 150 2 280 1 152 1 210 1 114 1 237 1 266 1 238 1 82 1 282 1 195 1 108 1 214 2 293 1 156 1 
0 1 30 1 345 1 321 1 54 1 160 1 93 1 94 1 5 1 9 1 71 1 97 1 10 1 114 1 38 2 282 1 77 1 105 1 234 1 150 1 152 1 107 1 214 1 341 1 272 1 293 1 
37 1 
318 2 52 1 53 1 179 1 92 2 217 2 2 1 216 1 133 3 279 1 135 1 183 1 282 2 185 1 230 5 188 1 334 1 289 6 144 1 147 1 193 2 237 1 154 1 292 2 111 5 293 1 155 1 28 2 156 1 66 1 298 2 160 2 347 1 299 1 300 2 34 4 248 1 353 2 71 2 249 1 73 1 114 1 115 2 167 1 168 1 173 1 78 1 360 1 207 1 315 2 210 2 82 1 270 1 88 2 50 1 
334 1 52 1 53 1 289 2 144 1 179 1 216 1 300 1 360 1 34 2 133 1 279 1 135 1 154 1 183 1 167 1 270 1 111 3 168 1 227 1 155 1 230 3 
53 1 52 1 179 1 216 1 34 3 248 1 133 1 279 1 135 1 183 1 167 1 168 1 227 1 230 3 334 1 289 1 144 1 360 1 154 1 292 1 270 1 111 3 88 1 155 1 
53 1 52 1 179 1 92 1 216 1 300 1 34 3 133 1 248 1 279 1 135 1 183 1 167 1 168 1 227 1 230 3 334 1 144 1 289 2 360 1 154 1 292 1 270 1 111 3 88 1 155 1 
318 2 53 1 52 1 179 1 92 4 216 1 217 2 133 3 279 1 135 1 183 1 57 1 227 1 230 5 334 1 289 7 144 1 20 1 147 1 193 2 338 1 154 1 292 4 111 5 155 1 28 1 66 1 298 1 299 1 300 4 34 6 248 5 353 2 73 1 201 1 167 1 168 1 173 1 360 1 207 1 315 2 85 1 270 1 88 5 
318 2 66 1 52 1 53 1 298 1 179 1 92 2 217 2 216 1 299 1 300 2 34 4 248 1 133 2 353 2 279 1 135 1 73 1 183 1 115 2 167 1 168 1 230 4 188 1 334 1 289 4 144 1 173 1 147 1 360 1 207 1 193 2 315 2 154 1 292 2 270 1 88 2 111 4 155 1 28 1 
318 2 66 1 53 1 52 1 298 1 179 1 92 2 217 2 299 1 216 1 300 2 34 4 248 1 133 2 353 2 279 1 135 1 73 1 183 1 201 1 167 1 168 1 230 4 334 1 289 4 144 1 173 1 20 1 147 1 360 1 207 1 193 2 315 2 338 1 154 1 292 2 270 1 88 1 111 4 155 1 28 1 
318 2 66 1 53 1 52 1 298 1 179 1 92 2 217 2 299 1 216 1 300 2 34 4 248 1 133 2 353 2 279 1 135 1 73 1 183 1 201 1 167 1 168 1 230 4 334 1 289 4 144 1 173 1 20 1 147 1 360 1 207 1 193 2 315 2 338 1 154 1 292 2 270 1 88 1 111 4 155 1 28 1 
66 1 53 1 52 1 298 1 179 1 92 2 216 1 300 2 34 4 248 1 133 2 35 2 353 2 279 1 72 1 135 1 73 1 223 2 183 1 115 2 167 1 168 1 230 4 355 1 334 1 289 4 144 1 173 1 147 1 360 1 120 1 207 1 315 2 338 1 154 1 292 2 270 1 88 1 111 4 155 1 28 1 
318 2 66 1 53 1 52 1 298 1 179 1 92 3 217 2 299 1 216 1 300 3 34 5 248 1 133 2 353 2 279 1 135 1 73 1 201 1 183 1 57 1 167 1 168 1 230 4 334 1 173 1 144 1 289 5 20 1 147 1 360 1 207 1 193 2 315 2 338 1 154 1 292 3 270 1 88 1 111 4 155 1 28 1 
318 2 66 1 53 1 52 1 298 1 179 1 92 3 217 2 299 1 216 1 300 3 34 5 248 1 133 2 353 2 279 1 135 1 73 1 201 1 183 1 57 1 167 1 168 1 230 4 334 1 173 1 144 1 289 5 20 1 147 1 360 1 207 1 193 2 315 2 338 1 154 1 292 3 270 1 88 1 111 4 155 1 28 1 
66 1 52 1 53 1 298 1 179 1 92 2 216 1 300 2 34 4 248 1 133 2 35 2 353 2 279 1 135 1 72 1 73 1 223 2 183 1 115 2 167 1 168 1 230 4 188 1 334 1 289 4 144 1 173 1 147 1 360 1 207 1 315 2 154 1 292 2 270 1 88 1 111 4 155 1 28 1 
346 1 277 1 323 2 7 1 220 2 182 2 113 1 250 1 225 1 257 1 100 3 104 1 146 1 17 6 205 2 192 3 364 1 151 1 176 1 209 1 124 1 367 1 197 1 127 1 49 1 373 1 
1 1 346 2 33 1 277 2 323 4 220 2 182 1 56 2 352 1 354 1 98 1 183 1 250 3 100 6 331 1 60 2 332 1 16 1 146 2 17 11 263 2 63 2 205 1 192 5 151 1 364 8 209 2 366 1 196 1 197 2 127 8 49 2 373 1 
158 1 1 1 53 2 52 1 346 1 180 1 160 1 161 1 323 2 277 1 95 1 182 1 71 1 114 1 327 1 250 1 282 1 137 1 100 1 171 1 331 1 172 1 44 1 174 1 146 1 17 2 78 1 192 1 210 1 151 1 237 1 197 1 84 1 293 1 342 1 49 1 155 2 294 1 
1 1 52 1 53 3 180 1 277 3 323 6 9 1 7 1 95 2 220 10 182 2 98 4 282 3 225 1 137 1 100 10 331 1 104 1 146 3 17 20 63 2 337 2 192 10 151 3 237 2 240 2 197 3 243 2 26 1 293 2 155 3 294 2 158 2 346 3 160 3 161 1 71 3 354 2 113 1 114 2 250 7 257 1 357 2 172 1 44 1 203 1 174 2 263 2 78 2 205 6 210 1 364 7 209 3 124 1 369 2 271 1 127 7 373 3 49 3 
31 1 53 1 52 1 346 2 180 1 160 8 161 1 277 2 323 4 9 1 324 1 71 7 114 2 282 8 137 1 75 1 100 1 170 1 331 1 44 1 146 2 17 2 78 2 206 1 192 1 176 1 210 2 151 2 123 1 237 3 82 1 242 1 197 2 109 1 293 2 155 1 49 2 89 2 156 1 
1 1 346 1 52 1 53 1 67 1 180 1 277 1 323 2 220 1 326 1 354 1 250 1 100 1 44 1 146 1 17 3 263 1 63 1 205 1 192 2 364 1 151 1 209 1 197 1 127 1 64 1 49 1 155 1 373 1 
346 1 17 2 146 1 263 1 323 2 277 1 220 1 98 1 364 1 176 1 151 1 209 1 250 1 304 1 197 1 127 1 49 1 100 2 
346 1 17 2 146 1 323 2 277 1 220 1 205 1 354 1 192 2 364 1 176 1 151 1 250 1 281 1 197 1 127 1 49 1 373 1 
346 1 17 4 146 1 263 1 323 2 277 1 63 1 205 1 220 2 192 2 354 1 98 1 364 2 176 1 151 1 209 1 250 2 197 1 127 2 373 1 49 1 100 2 
346 1 17 2 146 1 263 1 323 2 277 1 220 1 98 1 364 1 151 1 209 1 250 1 304 1 197 1 75 1 127 1 49 1 100 2 
346 1 17 2 146 1 323 2 277 1 220 1 205 1 354 1 192 2 364 1 151 1 250 1 281 1 197 1 75 1 127 1 49 1 373 1 
346 1 17 4 146 1 263 1 323 2 277 1 63 1 205 1 220 2 192 2 354 1 98 1 364 2 151 1 209 1 250 2 197 1 75 1 127 2 373 1 49 1 100 2 
346 1 146 1 17 4 263 1 323 2 277 1 63 1 205 1 220 2 192 2 354 1 98 1 364 2 151 1 209 1 250 2 197 1 127 2 373 1 49 1 100 2 
158 1 53 1 346 1 160 1 323 2 277 1 95 1 182 1 71 1 114 1 282 1 137 1 100 1 331 1 17 2 174 1 146 1 78 1 192 1 210 1 151 1 237 1 197 1 243 1 293 1 155 1 49 1 294 1 
158 1 53 1 346 1 160 1 323 2 277 1 182 1 71 1 114 1 282 1 137 1 284 1 100 1 331 1 17 2 174 1 146 1 78 1 314 1 265 1 192 1 210 1 151 1 237 1 197 1 293 1 155 1 49 1 
1 1 346 1 17 4 146 1 263 1 323 2 277 1 63 1 205 1 220 2 192 2 354 1 98 1 364 2 151 1 209 1 250 2 197 1 127 2 373 1 49 1 100 2 
158 1 53 1 346 1 160 1 323 2 277 1 220 2 95 1 71 1 354 1 98 1 114 1 250 2 282 1 100 2 357 1 17 4 174 1 146 1 263 1 78 1 63 1 205 1 192 2 364 2 209 1 151 1 237 1 242 1 197 1 127 2 243 1 293 1 373 1 155 1 49 1 294 1 
274 1 1 1 346 1 52 1 53 1 180 1 277 1 323 2 220 1 354 1 326 1 98 1 250 1 100 2 44 1 146 1 17 3 263 1 63 1 192 1 151 1 209 1 364 1 197 1 127 1 373 1 64 1 49 1 155 1 
346 1 17 2 181 1 148 1 323 2 277 1 362 1 236 1 192 1 197 1 100 1 49 1 285 1 90 1 
346 1 17 2 181 1 148 1 323 2 277 1 362 2 236 1 192 1 197 1 100 1 49 1 285 1 90 2 
346 1 17 2 181 1 148 1 323 2 277 1 362 1 236 1 192 1 197 1 100 1 49 1 285 1 90 1 
346 1 17 2 181 1 148 1 323 2 277 1 362 1 236 1 192 1 197 1 100 1 49 1 285 1 90 1 
346 1 17 2 181 1 148 1 323 2 277 1 362 1 236 1 192 1 197 1 100 1 49 1 285 1 90 1 
211 1 275 1 125 1 276 1 199 1 86 1 306 1 313 1 307 1 363 1 
350 1 169 1 
233 1 275 1 125 1 86 1 290 1 213 1 306 1 313 1 307 1 
255 1 228 1 
269 1 370 1 116 1 
297 1 198 2 275 1 276 1 262 1 313 1 363 1 211 1 125 1 86 1 110 1 306 1 88 1 111 1 231 1 230 1 307 1 295 1 
297 1 198 2 275 1 276 1 262 1 313 1 363 1 211 1 125 1 86 1 110 1 306 1 88 1 111 1 231 1 230 1 307 1 295 1 
297 1 198 2 275 1 276 1 262 1 313 1 363 1 211 1 125 1 86 1 110 1 306 1 88 1 111 1 231 1 230 1 307 1 295 1 
255 1 370 1 228 1 
255 1 370 1 228 1 
269 1 116 1 
269 1 370 1 116 1 
365 1 130 1 
297 1 198 1 53 2 275 1 52 2 180 2 350 1 182 1 222 1 306 1 330 1 169 1 230 1 307 1 42 1 44 2 18 1 262 1 313 1 365 1 125 1 86 1 268 1 111 1 155 2 130 1 343 1 
1 1 53 2 52 2 346 1 159 1 160 2 162 1 6 1 323 2 277 1 324 1 71 2 114 1 282 2 137 1 100 1 331 1 146 1 17 2 78 1 192 1 151 1 237 1 239 1 197 1 109 1 293 1 155 2 244 1 49 1 89 2 
0 1 77 1 54 1 160 2 93 1 45 1 4 1 234 1 5 1 9 1 71 2 114 1 38 2 282 2 242 1 272 1 139 1 341 1 293 1 
0 1 77 1 54 1 117 1 160 1 93 1 45 1 234 1 5 1 9 1 71 1 114 1 38 2 282 1 272 1 341 1 293 1 
160 1 78 1 93 1 80 1 71 1 210 1 114 1 237 1 282 1 82 1 108 1 139 1 293 1 156 1 
0 1 77 1 54 1 160 1 93 1 45 1 4 1 234 1 5 1 9 1 71 1 114 1 38 2 282 1 272 1 139 1 341 1 293 1 
288 1 
298 1 367 1 68 1 46 1 88 1 28 1 248 1 
318 1 298 1 217 1 299 1 133 1 248 1 73 1 115 1 230 1 173 1 289 1 147 1 207 1 193 1 88 2 111 1 28 1 
322 1 217 6 133 3 221 2 224 2 282 3 185 2 14 2 230 5 333 1 142 1 61 1 289 5 147 4 63 2 336 3 337 2 194 2 237 10 154 2 24 2 242 1 241 6 293 4 111 5 28 9 296 1 158 3 298 8 68 1 160 3 247 2 349 2 70 1 248 2 71 3 354 2 249 1 114 3 73 4 166 2 115 12 43 2 260 6 173 4 263 2 78 3 46 1 121 3 207 4 210 1 209 2 88 8 373 2 
298 5 217 3 351 1 133 1 56 1 248 2 221 1 164 1 354 2 249 1 73 2 185 1 115 6 140 1 230 1 60 1 260 5 289 1 173 2 145 1 147 2 263 2 191 1 63 2 48 1 22 1 121 2 207 2 209 2 153 1 241 5 111 1 88 5 373 2 28 8 
53 1 52 1 298 2 180 1 7 1 325 1 221 1 326 1 113 1 73 1 183 1 201 1 230 1 104 1 44 1 173 1 147 1 21 1 335 1 121 2 207 1 209 2 126 1 111 1 87 1 155 1 373 1 28 2 
173 1 298 1 147 1 68 1 46 1 248 1 207 1 73 1 88 1 28 1 
260 5 298 5 263 2 217 5 63 2 221 1 337 1 121 2 354 2 209 2 241 5 115 10 88 5 373 2 28 5 
289 1 88 1 111 1 248 1 230 1 133 1 
298 2 160 4 2 1 322 1 133 2 71 4 114 1 73 2 249 2 282 4 185 2 13 1 230 3 232 1 173 1 289 4 147 2 78 1 207 2 210 2 237 1 82 1 293 1 111 3 245 1 28 2 50 1 156 1 296 2 
158 1 346 1 53 3 52 2 180 2 160 1 277 1 323 2 95 1 182 1 71 1 326 2 114 1 282 1 331 1 44 2 17 1 310 1 174 1 146 1 78 1 192 1 210 1 151 1 237 1 197 1 243 1 87 1 293 1 49 1 155 3 294 1 
260 2 298 2 173 1 147 1 217 2 248 2 207 1 73 1 249 1 225 1 115 4 241 2 185 1 88 4 28 1 
291 1 306 1 313 1 
291 1 306 1 313 1 
291 1 306 1 313 1 
211 1 306 1 329 1 313 1 130 1 
41 1 306 1 313 1 
41 1 306 1 313 1 
41 1 306 1 313 1 
306 1 313 1 
86 1 307 1 
104 1 346 2 17 8 323 4 277 2 220 3 205 2 7 1 192 4 209 1 113 1 98 1 124 1 225 1 197 2 373 1 100 4 49 2 257 1 186 1 
209 1 113 1 104 1 124 1 367 1 17 6 225 1 373 1 100 3 257 1 220 2 205 2 7 1 192 3 
346 1 17 4 263 1 323 2 277 1 63 1 205 1 220 2 192 2 354 1 209 1 98 1 197 1 373 1 374 1 49 1 100 2 
17 2 100 1 140 1 56 1 192 1 60 1 
346 1 323 2 277 1 7 2 220 8 56 2 352 1 354 2 113 2 98 4 225 1 100 13 257 1 186 1 60 2 104 2 16 1 17 26 263 2 335 1 63 2 205 4 192 13 209 5 124 1 366 1 197 1 373 5 49 1 
17 1 192 1 60 1 
17 1 100 1 56 1 
346 1 17 6 263 1 277 1 323 2 63 1 220 2 205 1 337 1 192 3 354 1 209 1 98 1 197 1 49 1 374 1 100 3 373 1 
346 1 181 1 277 1 323 2 220 2 56 1 351 1 164 1 354 2 98 1 140 1 100 6 60 1 17 12 145 1 263 2 191 1 63 2 205 1 192 6 209 2 153 1 197 1 49 1 373 2 
104 1 17 6 7 1 205 1 220 2 192 3 113 1 209 1 98 1 100 3 373 1 
104 1 32 1 346 1 17 3 323 2 277 1 220 2 205 1 7 1 192 2 98 1 124 1 197 1 100 1 49 1 257 1 186 1 
104 2 346 1 181 1 17 10 277 1 323 2 335 1 7 2 205 3 220 5 192 5 98 2 113 1 209 2 197 1 49 1 100 5 373 2 
346 1 181 1 17 2 263 1 323 2 277 1 220 1 209 1 98 1 197 1 49 1 100 2 
346 1 181 1 17 4 263 1 323 2 277 1 63 1 205 1 220 2 192 2 354 1 209 1 98 1 197 1 373 1 49 1 100 2 
104 1 32 1 346 3 17 3 181 1 323 6 277 3 7 1 205 1 220 2 192 2 302 1 98 1 197 3 49 3 100 1 186 1 
346 4 32 1 181 1 277 4 323 8 220 6 7 2 56 1 113 1 98 3 302 1 140 1 100 7 257 1 101 1 186 1 60 1 104 2 17 15 335 1 205 3 192 8 209 2 124 1 197 4 373 2 374 1 49 4 
346 2 181 1 277 2 323 4 7 2 220 9 56 1 351 1 164 1 354 1 113 2 98 4 225 1 257 1 140 1 100 14 186 1 60 1 104 2 17 25 145 1 263 2 191 1 335 1 63 2 205 5 192 11 209 5 124 1 153 1 197 2 49 2 373 4 
346 3 181 1 277 3 323 6 7 1 220 4 56 1 351 1 164 1 354 1 113 1 98 1 225 1 257 1 140 1 100 10 186 1 60 1 104 1 17 17 145 1 263 2 191 1 63 2 205 3 192 7 209 3 124 1 153 1 197 3 49 3 374 1 373 2 
346 3 181 1 277 3 323 6 7 1 220 4 56 1 351 1 164 1 354 2 113 1 98 1 225 1 257 1 140 1 100 9 186 1 60 1 104 1 17 19 145 1 263 2 191 1 63 2 205 3 192 10 209 3 124 1 153 1 197 3 374 1 49 3 373 3 
346 3 181 1 277 3 323 6 7 1 220 5 56 1 351 1 164 1 354 1 113 1 98 2 225 1 257 1 140 1 100 10 186 1 60 1 104 1 17 17 145 1 263 2 191 1 63 2 205 3 192 7 209 3 124 1 153 1 197 3 374 1 49 3 373 2 
346 2 181 1 277 2 323 4 7 2 220 9 56 1 351 1 164 1 354 1 113 2 98 4 225 1 257 1 140 1 100 14 186 1 60 1 104 2 17 25 145 1 263 2 191 1 335 1 63 2 205 5 192 11 209 5 124 1 153 1 197 2 49 2 373 4 
346 1 181 1 277 1 323 2 220 2 56 1 351 1 164 1 354 2 98 1 140 1 100 6 60 1 17 12 145 1 263 2 191 1 63 2 205 1 192 6 209 2 153 1 197 1 49 1 373 2 
346 4 181 1 277 4 323 8 7 1 220 5 351 1 56 1 164 1 354 1 113 1 98 2 225 1 257 1 140 1 100 10 186 2 60 1 104 1 17 18 145 1 263 2 191 1 63 2 205 3 192 8 209 3 124 1 153 1 197 4 374 1 49 4 373 2 
346 4 181 1 277 4 323 8 220 6 351 1 56 1 164 1 354 2 98 3 302 1 140 1 100 9 186 2 60 1 17 16 145 1 263 3 191 1 63 3 205 3 192 7 209 3 153 1 197 4 49 4 373 2 
104 3 17 7 7 3 205 3 220 6 192 4 98 3 113 1 209 1 124 2 373 1 257 1 100 3 
346 4 181 1 277 4 323 8 7 1 220 4 351 1 56 1 164 1 354 1 113 1 98 1 302 1 225 1 257 1 140 1 100 10 186 2 60 1 104 1 17 18 145 1 263 2 191 1 63 2 205 3 192 8 209 3 124 1 153 1 197 4 49 4 373 2 
53 1 52 1 168 1 155 1 79 1 182 1 356 1 
52 1 53 1 19 1 311 1 361 1 79 1 182 1 39 1 168 1 155 1 317 1 356 1 
210 1 114 1 237 1 367 1 82 1 282 1 160 1 78 1 293 1 156 1 71 1 
158 1 44 1 52 1 53 2 174 1 180 1 160 1 78 1 161 1 182 1 71 1 210 1 114 1 237 1 282 1 293 1 155 2 294 1 
158 2 44 1 52 2 53 2 174 1 180 2 160 1 78 2 161 1 182 1 71 1 135 1 114 1 237 3 224 1 183 1 24 1 282 1 270 1 293 1 155 2 294 1 296 1 
158 2 53 2 52 2 180 2 160 2 161 1 182 1 71 2 135 1 114 1 183 1 224 1 282 2 284 1 287 1 44 1 174 1 78 2 237 3 24 1 270 1 293 1 155 2 296 1 
158 1 160 3 349 1 248 1 71 3 114 1 224 1 282 3 230 2 287 1 289 1 309 1 190 1 78 1 336 1 210 1 237 4 154 1 24 1 111 2 293 1 88 1 296 1 
287 1 158 1 289 1 160 3 78 1 349 1 248 1 71 3 336 1 210 1 114 1 154 1 237 4 224 1 24 1 282 3 88 1 293 1 111 2 230 2 14 1 296 1 
114 1 282 1 160 1 293 1 206 1 71 1 
189 1 61 1 158 1 31 1 160 7 78 2 9 1 206 1 71 6 210 2 123 1 114 2 237 3 282 7 242 1 226 1 109 1 293 3 89 1 229 1 170 1 
158 1 1 1 53 2 52 1 346 2 180 1 160 1 161 1 323 4 277 2 220 2 7 1 95 1 182 2 71 1 113 1 114 1 250 1 282 1 225 1 100 3 257 1 104 1 357 1 44 1 17 6 174 1 146 2 78 1 205 2 192 3 364 1 209 1 151 2 124 1 237 1 239 1 240 1 242 1 197 2 127 1 243 1 293 1 373 1 49 2 155 2 294 1 
298 1 68 1 160 1 322 1 247 1 349 1 248 1 133 1 71 1 73 2 282 1 230 3 14 1 42 1 43 1 173 2 289 2 147 2 46 1 336 1 207 2 210 1 194 1 237 2 154 1 88 1 111 3 28 1 
333 1 61 1 158 1 160 2 349 1 78 1 206 1 71 2 114 1 237 2 282 2 242 1 293 2 
287 1 131 1 160 4 78 1 71 4 210 1 114 1 237 1 282 4 82 1 242 1 293 1 156 1 
189 1 158 1 160 2 78 1 71 2 134 1 114 1 237 1 282 2 253 1 271 1 293 2 229 1 296 1 
210 1 114 1 77 1 38 1 282 1 160 1 272 1 293 1 234 1 71 1 
159 1 160 2 78 1 9 1 71 2 114 1 237 1 282 2 242 1 109 1 293 1 
131 1 31 1 160 5 78 2 71 4 210 1 114 2 237 3 82 1 282 5 242 1 109 1 293 2 170 1 156 1 296 1 
131 1 31 1 160 5 78 2 163 1 71 4 210 1 114 2 237 3 82 1 282 5 242 1 109 1 293 2 156 1 296 1 
158 1 44 1 52 1 53 2 174 1 180 1 160 1 78 1 161 1 182 1 71 1 210 1 114 1 237 1 282 1 284 1 293 1 155 2 
189 1 61 1 158 1 160 1 78 1 71 1 114 1 237 1 282 1 226 1 293 2 229 1 296 1 
165 1 25 1 258 1 182 1 301 1 
103 1 179 1 91 1 218 1 182 1 248 1 301 2 135 1 165 1 154 1 23 1 183 1 270 1 25 2 88 1 111 2 258 2 230 2 42 1 
165 1 53 1 52 1 155 1 162 1 6 1 244 1 258 1 301 1 
165 1 23 1 218 1 
11 1 367 1 256 1 312 1 
152 1 30 1 11 1 105 1 321 1 256 1 312 1 
345 1 30 1 214 1 
152 1 308 1 30 3 11 1 105 3 321 1 256 1 128 1 312 1 58 1 264 2 97 1 
122 1 152 1 30 2 11 1 105 2 321 1 256 1 312 1 372 1 
152 1 0 1 30 1 38 1 261 1 105 1 136 1 321 1 312 1 234 1 97 1 
152 1 30 1 11 1 105 1 321 1 312 1 97 1 
152 1 30 1 11 2 105 1 321 1 256 1 97 1 
30 2 105 2 321 2 312 1 278 1 97 1 152 2 11 1 368 1 102 1 
122 2 152 1 358 1 30 3 11 1 105 3 136 1 321 1 305 1 256 1 312 2 200 1 97 1 
30 2 0 1 51 1 105 2 321 1 54 1 312 1 234 1 97 1 152 1 122 1 11 1 38 2 256 1 272 1 
122 2 15 1 152 2 30 4 11 1 105 4 136 1 321 2 305 1 256 1 312 2 372 1 97 1 
152 1 30 1 11 1 105 1 321 1 256 1 312 1 97 1 
308 1 30 4 105 4 321 1 312 3 132 1 264 1 122 2 152 1 11 2 136 1 305 1 128 1 256 2 
122 1 152 1 30 2 11 1 62 1 105 2 321 1 256 1 312 1 286 1 65 1 97 1 
30 3 308 2 105 3 321 1 312 1 264 2 97 1 152 1 11 1 128 1 256 1 246 1 
339 2 312 2 273 1 375 1 
152 1 30 1 105 1 184 1 321 1 97 1 
122 1 152 1 358 1 30 2 11 1 105 2 321 1 256 1 312 1 97 1 
208 1 
152 1 30 1 11 1 105 1 321 1 256 1 312 1 97 1 
30 3 358 1 105 3 321 1 312 1 264 1 97 1 122 1 152 1 11 1 256 1 
136 1 305 1 312 1 132 1 
11 1 312 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (208,235) (208,235) 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 104 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 104 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 104 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 104 216 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 53 96 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 99 265 146 144 308 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 99 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 99 265 146 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 99 265 146 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 99 265 146 144 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 99 265 146 144 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 330 223 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 292 223 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 86 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 280 (70,87) 54 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 220 34 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 3 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (208,235) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V ERROR java.lang.NullPointerException 292 223 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 53 96 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (208,235) (208,235) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> !=
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 11341 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1740 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z | OPERATOR | 2861 | != -> ==
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | STATEMENT | 5650 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9723 | ^ -> &
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable; | RETURN | 1077 | return null
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
138 1 140 4 169 2 81 1 196 2 347 2 61 1 147 1 10 1 245 6 12 1 181 1 227 1 274 1 16 2 276 1 152 1 313 1 91 1 337 9 295 1 161 2 47 2 317 5 339 9 259 3 188 2 215 1 
138 1 140 4 169 2 81 1 196 2 347 2 61 1 147 1 10 1 245 6 12 1 181 1 227 1 274 1 16 2 276 1 152 1 313 1 91 1 337 9 295 1 161 2 47 2 317 5 339 9 259 3 188 2 215 1 
138 1 140 5 169 2 81 1 196 2 347 2 61 1 147 1 10 1 245 7 12 1 181 1 227 1 274 1 16 2 276 1 152 1 313 1 91 1 337 10 295 1 161 2 47 2 317 6 339 10 259 4 188 2 215 1 
138 1 140 3 169 2 81 1 196 1 347 2 61 1 147 1 10 1 245 4 181 1 227 1 274 1 16 2 276 1 152 1 313 1 91 1 337 7 295 1 161 2 47 2 317 4 339 7 259 2 188 2 215 1 
138 1 16 1 140 2 81 1 196 2 91 1 337 4 347 1 161 1 47 1 317 3 61 1 259 1 339 4 245 3 12 1 188 1 215 1 
138 1 276 1 169 1 82 1 152 1 91 1 337 2 161 1 347 1 59 1 47 1 317 1 61 1 339 2 188 1 189 1 
138 1 140 1 169 1 91 1 337 3 295 1 161 2 317 2 61 1 339 3 259 1 245 1 188 2 
116 1 138 1 274 1 16 1 140 4 169 1 81 1 196 2 91 1 337 9 304 1 295 1 347 1 161 2 47 1 317 5 61 1 147 1 339 9 245 7 259 3 12 1 188 2 215 1 
116 1 138 1 274 1 16 1 140 4 169 1 81 1 196 2 91 1 337 9 304 1 295 1 347 1 161 2 47 1 317 5 61 1 147 1 339 9 245 7 259 3 12 1 188 2 215 1 
1 1 86 1 284 1 
284 1 56 1 226 2 
105 2 211 2 219 1 163 2 288 2 247 2 5 1 25 2 
219 1 78 1 344 2 2 1 301 1 79 1 170 1 194 1 172 2 5 1 346 1 174 1 63 1 64 1 33 1 288 3 179 1 246 2 247 3 309 1 250 1 105 2 253 1 207 2 71 1 359 1 154 1 157 1 211 2 231 1 163 2 318 1 341 1 97 1 115 2 167 1 25 2 
105 1 211 1 219 1 338 1 163 1 288 1 183 1 247 1 218 1 25 1 
355 1 233 1 1 1 141 1 284 1 258 1 32 1 20 1 212 1 65 1 288 1 247 1 25 1 218 1 
219 1 233 2 1 1 141 1 284 1 32 2 65 1 288 2 247 2 105 2 258 1 183 1 211 2 230 1 20 1 338 1 163 2 218 2 25 2 
233 1 32 1 129 1 182 1 251 1 
100 1 233 2 32 2 1 1 323 1 284 1 182 1 251 1 
233 1 32 1 182 1 
219 1 105 1 233 1 183 1 230 1 211 1 32 1 338 1 163 1 288 1 247 1 218 1 251 1 25 1 
284 1 
233 2 32 2 1 1 323 1 177 1 284 1 182 1 251 1 
354 1 90 2 322 1 233 5 1 1 323 1 41 2 275 1 235 1 284 1 208 1 107 1 182 2 134 1 32 5 190 2 67 1 74 1 251 2 
86 1 5 1 
105 1 26 1 184 1 5 2 211 1 163 1 288 2 247 2 25 2 
266 1 263 1 109 1 
2 1 79 1 207 1 71 1 172 1 5 1 132 1 346 1 174 1 231 1 288 1 33 1 115 1 247 1 309 1 250 1 
105 1 2 1 79 1 207 1 71 1 172 1 109 1 346 1 174 1 231 1 163 1 33 1 288 2 115 1 309 1 247 2 310 1 250 1 249 1 25 1 
211 1 105 3 163 3 288 3 247 3 5 1 249 1 25 3 
105 1 163 1 288 1 183 1 247 1 218 1 25 1 
105 1 211 1 26 1 163 1 288 1 247 1 184 1 218 1 25 1 
219 1 233 1 344 1 2 1 301 1 141 1 79 1 170 1 194 1 172 1 5 1 346 1 174 1 32 1 64 1 65 1 33 1 288 4 353 1 246 2 309 1 247 4 310 1 250 1 249 1 105 3 207 1 71 1 359 1 258 1 154 1 184 1 157 1 211 2 361 1 20 1 231 1 163 3 341 1 97 1 115 1 167 1 25 3 218 1 
105 1 355 1 163 1 288 2 247 2 5 1 225 1 25 2 249 1 
105 3 233 1 141 1 284 1 258 1 184 1 211 1 32 1 361 1 20 1 163 3 65 1 288 3 95 1 247 3 310 1 218 1 249 2 25 3 
105 2 184 1 109 1 211 1 266 1 163 2 288 2 247 2 249 1 25 2 
2 1 79 1 207 1 71 1 172 1 5 1 346 1 174 1 231 1 288 1 33 1 115 1 247 1 309 1 250 1 
356 1 2 1 79 1 207 1 71 1 172 1 5 1 346 1 58 1 231 1 288 1 33 1 115 1 247 1 309 1 
0 1 78 1 344 2 142 1 263 1 194 1 266 1 350 1 64 1 330 1 246 2 256 1 17 1 292 1 359 1 154 1 109 1 185 1 133 1 157 1 340 1 341 1 167 1 
105 1 15 1 20 1 163 1 288 1 247 1 218 1 25 1 
105 4 355 1 264 1 184 1 5 1 211 1 101 1 163 4 288 5 247 5 310 1 225 1 249 2 25 5 
105 2 15 1 163 2 288 2 183 1 247 2 218 1 25 2 
139 1 153 1 
139 1 153 1 
8 1 69 1 
8 1 69 1 
8 1 69 1 
139 1 153 1 4 1 
139 1 348 1 153 1 
139 2 124 1 8 1 69 1 153 2 103 1 
139 1 153 1 4 1 
139 1 153 1 4 1 
139 1 153 1 209 1 
139 1 153 1 209 1 
139 1 153 1 209 1 
13 1 191 1 234 1 233 2 55 1 139 2 42 1 277 2 284 1 153 2 326 2 155 2 336 2 32 2 93 2 162 3 281 1 103 1 35 1 
233 1 55 1 139 1 5 1 326 1 32 1 222 1 348 1 178 1 288 2 272 1 247 2 105 2 254 1 277 1 153 1 155 1 336 1 111 1 135 1 162 1 163 2 164 1 25 2 
347 1 47 1 16 1 
347 1 47 1 59 1 
180 1 16 2 47 3 59 1 73 1 331 1 
180 1 68 1 16 1 47 2 59 1 331 1 
180 1 16 1 47 2 59 1 331 2 
354 1 90 1 233 4 1 1 323 1 41 1 127 1 171 1 284 1 237 1 182 1 32 4 362 1 349 1 104 1 190 1 67 1 251 3 
354 1 90 1 233 4 41 1 323 1 1 1 127 1 129 1 284 1 237 1 182 2 32 4 241 1 85 1 104 1 190 1 67 1 36 1 251 3 
354 1 90 1 233 2 41 1 107 1 237 1 32 2 362 1 349 1 104 1 190 1 251 1 
354 1 90 1 233 1 41 1 107 1 237 1 32 1 362 1 349 1 104 1 190 1 216 1 
79 1 358 1 86 1 
79 1 197 1 
242 1 
79 1 33 1 
77 1 2 1 79 3 268 1 358 2 33 1 
2 1 79 1 33 1 
79 1 279 1 
273 1 14 1 232 1 311 1 256 3 78 3 344 4 236 1 46 1 185 1 360 1 320 1 66 2 94 1 340 2 341 1 
273 1 14 1 232 1 311 1 256 3 78 3 344 4 236 1 46 1 185 1 360 1 320 1 66 2 94 1 340 2 341 1 
273 1 311 1 14 1 232 1 256 3 78 3 344 4 236 1 46 1 185 1 360 1 320 1 66 2 94 1 214 1 340 2 341 1 
232 1 78 12 220 1 344 22 236 2 193 1 194 1 83 1 29 1 223 3 64 1 66 3 330 3 246 2 123 1 273 2 311 1 14 1 256 6 292 3 154 1 46 2 185 4 157 1 18 3 360 2 48 1 21 1 320 1 94 2 321 4 340 4 341 10 
273 1 311 1 232 1 256 4 78 4 344 6 236 1 194 2 45 1 29 1 154 2 46 1 185 1 287 1 157 2 360 1 320 1 64 2 66 2 94 1 340 3 341 2 246 4 
138 1 169 1 84 1 172 1 303 1 346 1 175 1 198 1 347 1 199 1 59 1 61 1 62 1 245 1 333 1 149 1 16 1 291 1 207 1 71 1 91 1 337 2 161 1 47 2 317 1 73 1 339 2 188 1 115 1 217 1 
138 1 169 1 84 1 172 1 346 1 175 1 198 1 347 1 199 1 59 1 61 1 352 1 245 2 333 1 39 1 149 1 16 1 291 1 207 1 71 1 337 3 161 1 47 2 317 1 73 1 339 3 188 1 115 1 165 1 217 1 
149 1 39 1 138 1 16 1 291 1 169 1 207 1 71 1 172 1 84 1 346 1 337 2 198 1 347 1 47 2 59 1 317 1 61 1 73 1 245 2 339 2 165 1 115 1 217 1 333 1 
75 1 300 1 291 2 79 1 169 2 207 1 71 1 172 1 84 2 346 1 337 1 221 1 19 1 161 1 231 1 319 1 352 1 351 1 33 1 339 1 188 1 115 1 333 2 
169 1 84 1 172 1 346 1 175 1 198 1 347 1 199 1 59 1 62 1 333 1 39 1 149 1 16 1 291 1 207 1 71 1 91 1 337 1 161 1 47 2 73 1 339 1 188 1 115 1 217 1 
205 1 
354 1 90 1 233 1 41 1 207 1 237 1 172 1 32 1 231 1 53 1 190 1 115 1 96 1 67 1 
233 3 323 1 141 1 325 1 143 1 32 3 177 1 65 1 288 1 271 1 247 1 355 1 357 1 125 2 258 1 182 2 229 1 20 1 212 1 363 1 25 1 218 1 
233 3 1 1 323 1 141 1 143 1 284 1 32 3 177 1 65 1 288 1 271 1 247 1 355 1 312 1 357 1 125 3 258 1 182 1 229 1 20 1 212 1 363 1 25 1 218 1 
233 3 323 1 1 1 141 1 325 1 143 1 284 1 32 3 177 1 65 1 288 1 271 1 247 1 355 1 312 1 357 1 125 3 293 1 258 1 182 2 229 1 20 1 212 1 363 1 25 1 218 1 
233 3 323 1 141 1 325 2 143 1 265 1 99 1 286 1 144 1 146 1 32 3 177 1 65 1 308 1 288 1 120 1 271 1 67 1 247 1 354 1 90 1 204 1 355 1 41 1 357 1 125 2 293 2 258 1 182 3 229 1 20 1 113 1 212 1 363 1 136 1 190 1 74 1 25 1 218 1 
233 2 141 1 143 1 99 1 32 2 65 1 288 1 271 1 120 1 67 1 247 1 354 1 90 1 204 1 355 1 357 1 41 1 125 2 258 1 229 1 20 1 113 1 212 1 363 1 136 1 190 1 74 1 25 1 218 1 
233 2 141 1 143 1 265 1 99 1 286 1 146 1 32 2 65 1 288 1 120 1 271 1 247 1 67 1 354 1 90 1 204 1 355 1 357 1 41 1 125 2 258 1 229 1 20 1 113 1 212 1 363 1 136 1 190 1 74 1 25 1 218 1 
233 2 141 1 143 1 265 1 99 1 286 1 146 1 32 2 65 1 288 1 120 1 271 1 247 1 67 1 354 1 90 1 204 1 355 1 357 1 41 1 125 2 258 1 229 1 20 1 113 1 212 1 363 1 136 1 190 1 74 1 25 1 218 1 
233 4 1 1 323 2 325 2 141 1 284 1 143 1 265 1 99 1 173 1 32 4 329 1 65 1 288 1 271 1 247 1 67 1 226 2 354 1 90 1 204 2 312 2 355 1 357 1 41 1 125 4 293 2 258 1 182 4 229 1 159 1 160 2 20 1 212 1 363 1 136 2 52 2 190 1 74 1 25 1 218 1 
233 2 141 1 325 1 143 1 265 1 99 1 286 1 144 1 146 1 32 2 65 1 288 1 120 1 271 1 67 1 247 1 354 1 90 1 204 1 355 1 312 1 41 1 357 1 125 3 293 1 258 1 182 1 229 1 20 1 113 1 212 1 363 1 136 1 190 1 74 1 25 1 218 1 
233 2 141 1 325 1 143 1 265 1 99 1 286 1 144 1 146 1 32 2 65 1 288 1 120 1 271 1 67 1 247 1 354 1 90 1 204 1 355 1 312 1 41 1 357 1 125 3 293 1 258 1 182 1 229 1 20 1 113 1 212 1 363 1 136 1 190 1 74 1 25 1 218 1 
233 4 323 2 1 1 141 1 325 2 143 1 284 1 99 1 65 1 288 1 247 1 67 1 204 2 293 2 258 1 159 1 160 2 20 1 72 1 212 1 218 1 25 1 74 1 32 4 271 1 226 2 90 1 354 1 355 1 312 2 41 1 357 1 125 4 182 4 229 1 363 1 136 2 190 1 52 2 
273 1 232 1 311 1 78 2 256 2 344 3 17 1 263 1 359 1 194 1 154 1 109 1 5 1 185 1 157 1 266 1 360 1 320 1 64 1 66 1 86 1 340 2 341 1 246 2 167 1 
78 6 220 1 192 1 344 12 263 10 170 1 194 2 193 1 5 1 119 1 266 2 223 2 64 2 330 2 179 1 200 1 246 4 256 1 206 1 292 2 106 1 359 1 154 2 109 10 185 2 157 2 18 3 321 3 340 1 341 6 167 2 
76 1 78 1 2 1 344 2 79 1 170 1 118 1 194 1 172 1 5 1 346 1 119 1 174 1 266 1 64 1 33 1 288 2 246 2 179 1 309 1 247 2 310 1 250 1 249 1 105 1 207 1 71 1 359 1 154 1 132 1 157 1 231 1 163 1 115 1 341 1 167 1 24 1 25 1 
232 1 2 2 194 3 5 1 239 2 64 3 243 2 66 1 330 2 288 3 246 6 247 3 249 1 250 2 105 1 256 4 207 1 292 2 70 2 71 2 154 3 109 5 157 3 163 1 340 4 341 6 115 1 167 3 25 1 78 7 344 13 301 2 79 2 263 5 170 1 172 1 119 1 346 2 174 2 266 5 306 1 223 2 33 2 179 1 309 2 310 1 273 1 311 1 128 1 359 3 44 2 185 3 360 1 231 1 320 1 
75 1 78 1 344 2 79 3 170 1 194 2 195 1 303 1 172 8 346 2 145 1 63 2 64 2 288 1 33 2 246 4 179 1 247 1 37 1 249 1 38 1 334 1 105 1 39 1 255 1 17 1 207 8 130 1 71 2 359 2 154 2 157 2 231 2 163 1 319 1 115 7 341 1 167 2 25 1 
105 1 78 2 344 2 359 1 194 1 154 1 184 1 185 1 119 1 157 1 211 1 223 1 64 1 163 1 330 1 288 1 246 2 247 1 88 1 167 1 25 1 
0 1 78 1 344 1 17 1 359 1 194 1 154 1 185 1 157 1 64 1 330 1 246 2 167 1 
256 1 17 1 344 1 292 1 263 1 359 1 194 1 154 1 109 1 157 1 266 1 350 1 64 1 340 1 246 2 341 1 167 1 
78 1 344 2 263 1 194 1 266 1 223 1 64 1 330 1 246 2 256 1 17 1 292 1 359 1 154 1 109 1 185 1 157 1 340 1 341 1 167 1 
0 1 78 1 344 1 359 1 194 1 154 1 185 1 157 1 64 1 330 1 246 2 37 1 167 1 
256 1 344 1 292 1 263 1 359 1 194 1 154 1 109 1 157 1 266 1 350 1 64 1 340 1 246 2 341 1 37 1 167 1 
78 1 344 2 263 1 194 1 266 1 223 1 64 1 330 1 246 2 37 1 256 1 292 1 359 1 154 1 109 1 185 1 157 1 340 1 341 1 167 1 
78 1 344 2 263 1 194 1 266 1 223 1 64 1 330 1 246 2 256 1 292 1 359 1 154 1 109 1 185 1 157 1 340 1 341 1 167 1 
78 1 344 2 2 1 301 1 79 1 170 1 194 1 172 1 5 1 346 1 174 1 64 1 33 1 288 1 179 1 246 2 309 1 247 1 250 1 207 1 71 1 359 1 154 1 157 1 231 1 115 1 341 1 167 1 
78 1 344 2 2 1 79 1 170 1 194 1 172 1 5 1 346 1 58 1 64 1 33 1 288 1 179 1 246 2 309 1 247 1 356 1 207 1 71 1 359 1 154 1 156 1 157 1 231 1 115 1 341 1 167 1 
78 1 344 2 263 1 194 1 119 1 266 1 223 1 64 1 330 1 246 2 256 1 292 1 359 1 154 1 109 1 185 1 157 1 340 1 341 1 167 1 
78 1 344 2 2 1 301 1 79 1 263 1 194 1 172 1 303 1 346 1 174 1 266 1 223 1 64 1 330 1 33 1 288 1 246 2 309 1 247 1 250 1 256 1 292 1 207 1 71 1 44 1 359 1 154 1 109 1 185 1 157 1 340 1 341 1 115 1 167 1 
105 1 78 1 344 2 292 1 359 1 194 1 154 1 184 1 185 1 119 1 157 1 211 1 223 1 364 1 64 1 163 1 330 1 288 1 341 1 246 2 247 1 167 1 25 1 
78 3 220 1 344 7 28 1 194 2 193 1 287 1 223 1 64 2 330 1 246 4 150 1 256 1 126 1 292 1 154 2 185 1 157 2 18 1 186 1 296 1 50 1 321 2 340 1 260 1 341 4 261 1 
78 8 324 1 344 17 220 2 117 1 28 1 194 2 29 1 285 1 287 1 223 2 64 2 330 2 102 1 34 1 246 4 290 1 150 2 256 1 126 1 292 2 257 1 154 2 185 2 157 2 18 2 296 3 50 2 321 2 340 1 341 9 261 1 
78 3 220 1 344 7 28 1 194 2 193 1 287 1 223 1 64 2 330 1 102 1 246 4 150 1 256 1 126 1 292 1 154 2 185 1 157 2 18 1 186 1 296 1 50 1 321 2 340 1 341 4 261 1 
78 3 220 1 344 7 28 1 194 2 193 1 287 1 223 1 64 2 330 1 102 1 246 4 150 1 256 1 126 1 292 1 154 2 185 1 157 2 18 1 186 1 296 1 50 1 321 2 340 1 341 4 261 1 
232 1 78 15 324 1 220 2 344 28 117 1 28 1 194 1 193 2 285 1 287 1 223 6 64 1 66 1 330 6 102 1 34 1 290 1 246 2 273 1 311 1 150 1 256 6 126 1 206 2 292 6 257 1 154 1 185 7 157 1 18 4 360 1 296 2 320 1 50 1 321 4 340 6 341 13 261 1 
13 1 139 1 277 1 153 1 103 1 238 1 35 1 155 1 326 1 336 1 
135 1 348 1 
267 1 316 1 139 1 277 1 289 1 153 1 155 1 326 1 336 1 
13 1 191 1 234 1 233 1 55 1 139 1 42 1 277 1 284 1 153 1 326 1 155 1 336 1 32 1 93 1 162 2 103 1 35 1 
13 1 191 1 234 1 233 1 55 1 139 1 42 1 277 1 284 1 153 1 326 1 155 1 336 1 32 1 93 1 162 2 103 1 35 1 
13 1 191 1 234 1 233 1 55 1 139 1 42 1 277 1 284 1 153 1 326 1 155 1 336 1 32 1 93 1 162 2 103 1 35 1 
124 1 151 1 4 1 
124 1 151 1 4 1 
7 1 209 1 
7 1 124 1 209 1 
254 1 178 1 
233 1 139 1 5 1 326 1 32 1 222 1 307 1 348 1 178 1 288 2 272 1 247 2 251 1 105 2 254 1 42 1 277 1 153 1 155 1 336 1 111 1 93 1 135 1 162 1 163 2 164 1 25 2 
151 1 4 1 
7 1 124 1 209 1 
78 1 344 2 79 1 80 1 170 1 194 1 172 2 346 1 119 1 145 1 63 2 64 1 33 1 288 2 246 2 179 1 247 2 38 1 40 1 207 2 71 1 43 1 359 1 154 1 294 1 157 1 22 1 341 1 115 2 167 1 25 2 
39 1 149 1 16 1 207 2 71 1 172 2 303 1 131 1 346 1 240 1 175 1 347 1 47 2 59 1 49 1 73 1 115 2 217 1 333 1 
39 1 149 1 16 1 207 1 71 1 172 1 346 1 175 1 347 1 47 2 59 1 6 1 49 1 73 1 115 1 217 1 333 1 
75 1 79 1 207 1 71 1 172 1 346 1 240 1 19 1 231 1 319 1 33 1 115 1 333 1 248 1 
39 1 149 1 16 1 207 1 71 1 172 1 131 1 346 1 240 1 175 1 347 1 47 2 59 1 49 1 73 1 115 1 217 1 333 1 
176 1 
354 1 1 1 235 1 86 1 284 1 208 1 74 1 
354 1 90 1 41 1 113 1 120 1 190 1 67 1 74 1 
354 1 90 1 54 1 41 1 2 1 79 2 207 1 71 2 237 1 172 1 197 1 346 1 280 1 231 1 268 1 87 1 33 1 190 1 115 1 67 1 148 1 
18 1 354 1 90 1 41 1 220 1 321 1 34 1 190 1 67 1 74 1 
354 2 90 1 273 1 233 1 41 1 3 1 185 2 92 2 286 1 210 2 360 1 32 1 320 1 190 1 67 1 74 3 
354 1 90 1 1 1 41 1 235 1 284 1 190 1 67 1 74 1 
354 1 223 1 292 1 330 1 185 1 74 1 
233 1 32 1 1 1 323 1 284 1 182 1 
354 1 90 1 299 1 41 1 207 1 237 1 172 1 231 1 115 1 190 1 96 1 53 1 67 1 
219 1 344 1 301 1 2 1 79 1 170 1 194 1 172 1 5 1 346 1 174 1 64 1 288 3 33 1 246 2 247 3 309 1 250 1 105 2 207 1 71 1 359 1 154 1 157 1 211 2 231 1 163 2 341 1 115 1 97 1 167 1 25 2 
219 1 1 1 284 1 237 1 288 1 67 1 247 1 354 1 90 1 105 1 41 1 183 1 230 1 211 1 338 1 163 1 190 1 25 1 218 1 
203 1 155 1 336 1 
283 1 178 1 35 1 155 1 336 1 
203 1 155 1 336 1 
203 1 155 1 336 1 
30 1 155 1 336 1 
30 1 155 1 336 1 
30 1 155 1 336 1 
155 1 336 1 
139 1 153 1 
273 1 232 1 311 1 78 3 256 3 344 5 194 2 154 2 29 1 185 1 157 2 360 1 320 1 64 2 66 1 94 1 340 2 341 2 246 4 
273 1 311 1 232 1 360 1 78 2 256 2 344 3 320 1 66 1 86 1 340 2 341 1 185 1 
202 1 256 1 78 1 344 2 292 1 194 1 154 1 185 1 157 1 223 1 64 1 330 1 340 1 341 1 246 2 
256 1 78 2 220 1 344 5 292 1 193 1 185 1 18 1 223 1 330 1 321 2 340 1 341 3 
232 1 78 8 344 16 192 1 193 1 194 2 29 2 223 2 64 2 66 1 330 2 246 4 332 1 273 2 311 1 256 7 206 1 292 2 154 2 185 3 18 2 157 2 360 2 320 1 94 2 321 2 340 5 341 8 
344 1 321 1 341 1 
18 1 78 1 344 1 
202 1 78 2 256 2 344 4 292 1 194 1 154 1 185 1 157 1 223 1 64 1 243 1 330 1 340 2 246 2 341 2 
256 1 78 4 220 1 344 8 292 2 117 1 257 1 194 1 154 1 285 1 185 2 287 1 157 1 18 1 223 2 64 1 330 2 321 1 340 1 34 1 290 1 246 2 341 4 
78 1 344 1 320 1 185 1 
273 1 311 1 232 1 78 1 256 2 344 3 194 1 29 1 154 1 157 1 360 1 64 1 94 1 340 1 341 2 246 2 332 1 
273 1 256 3 78 2 344 4 3 1 185 2 92 1 360 1 320 1 94 1 340 2 341 2 
78 1 344 1 194 1 154 1 185 1 287 1 157 1 64 1 330 1 246 2 
256 1 78 1 344 2 292 1 194 1 154 1 185 1 287 1 157 1 223 1 64 1 330 1 340 1 341 1 246 2 
273 1 256 2 78 1 344 3 194 3 29 1 154 3 287 1 157 3 186 1 360 1 64 3 94 1 340 1 341 2 246 6 332 1 
232 1 78 11 220 1 344 22 194 5 193 1 29 2 83 1 287 1 223 3 64 5 66 1 330 3 246 10 332 1 123 1 273 2 202 1 311 1 256 6 292 3 154 5 185 5 157 5 18 3 360 2 186 1 48 1 320 2 94 2 321 4 340 4 341 11 
232 1 78 6 344 11 220 1 117 1 194 1 285 1 287 1 223 2 64 1 66 1 330 2 34 1 246 2 290 1 273 1 311 1 256 3 292 2 257 1 154 1 185 3 18 1 157 1 360 1 320 1 321 1 340 3 341 5 
78 7 344 14 220 1 117 1 194 2 193 1 285 1 287 1 223 4 64 2 330 4 34 1 246 4 290 1 202 1 256 3 206 1 292 4 257 1 154 2 185 4 157 2 18 2 321 2 340 3 341 7 
232 1 78 6 344 12 220 1 117 1 194 3 29 1 285 1 287 1 223 2 64 3 66 1 330 2 34 1 246 6 290 1 273 1 202 1 311 1 256 3 292 2 257 1 154 3 185 3 18 1 157 3 360 1 320 1 321 1 340 3 341 6 
78 4 344 8 220 1 117 1 194 2 285 1 287 1 223 2 64 2 330 2 34 1 246 4 290 1 202 1 256 1 292 2 257 1 154 2 185 2 18 1 157 2 321 1 340 1 341 4 
232 1 78 6 344 11 220 1 117 1 194 1 285 1 287 1 223 2 64 1 66 1 330 2 34 1 246 2 290 1 273 1 311 1 256 3 292 2 257 1 154 1 185 3 18 1 157 1 360 1 320 1 321 1 340 3 341 5 
256 1 78 4 220 1 344 8 292 2 117 1 257 1 194 1 154 1 285 1 185 2 287 1 157 1 18 1 223 2 64 1 330 2 321 1 340 1 34 1 290 1 246 2 341 4 
78 4 344 9 220 1 117 1 194 3 29 1 285 1 287 1 223 2 64 3 330 2 34 1 246 6 290 1 202 1 256 1 292 2 257 1 154 3 185 2 157 3 18 1 321 1 340 1 341 5 
78 4 344 9 220 1 117 1 194 3 29 1 285 1 287 1 223 2 64 3 330 2 34 1 246 6 290 1 256 2 292 2 257 1 154 3 185 2 157 3 18 1 186 1 321 1 340 2 341 5 
273 2 232 1 311 1 256 7 78 4 344 6 3 1 185 3 92 1 360 2 320 2 66 1 94 3 340 4 341 2 
78 4 344 9 220 1 117 1 194 3 29 1 285 1 287 1 223 2 64 3 330 2 34 1 246 6 290 1 256 1 292 2 257 1 154 3 185 2 157 3 18 1 186 1 321 1 340 1 341 5 
355 1 288 1 114 1 247 1 5 1 25 1 225 1 
355 1 302 1 5 1 327 1 158 1 314 1 305 1 114 1 288 1 247 1 225 1 25 1 
75 1 231 1 79 1 207 1 319 1 86 1 71 1 33 1 172 1 115 1 346 1 
105 1 2 1 79 1 207 1 71 1 172 1 5 1 346 1 231 1 163 1 33 1 288 2 115 1 309 1 247 2 249 1 25 1 250 1 
2 2 79 3 172 1 5 1 346 1 288 2 33 2 247 2 309 1 250 1 249 1 105 2 207 1 228 1 71 1 258 1 279 1 112 1 20 1 163 1 115 1 25 2 218 1 
2 2 79 3 172 2 5 1 346 1 58 1 288 2 33 2 247 2 309 1 249 1 105 2 207 2 228 1 71 1 258 1 279 1 112 1 20 1 213 1 163 1 115 2 25 2 218 1 
233 2 1 1 141 1 2 1 79 4 207 3 358 1 228 1 284 1 71 1 172 3 279 1 197 1 182 1 346 1 110 1 112 1 32 2 231 1 269 1 213 1 33 1 115 3 
233 2 1 1 141 1 2 1 168 1 79 4 207 3 358 1 228 1 284 1 71 1 172 3 279 1 197 1 182 1 346 1 112 1 32 2 231 1 213 1 33 1 115 3 
334 1 207 1 71 1 172 1 115 1 346 1 
334 1 39 1 255 1 2 1 79 3 207 7 130 1 71 3 335 1 195 1 303 1 172 7 346 2 145 1 231 2 224 1 268 1 63 1 33 2 115 6 342 1 
232 1 78 2 344 3 2 1 301 1 79 1 80 1 263 1 194 2 303 1 172 1 5 1 346 1 119 1 174 1 266 1 64 2 66 1 33 1 288 2 246 4 309 1 247 2 249 1 250 1 273 1 105 1 311 1 256 2 207 1 70 1 71 1 359 2 44 1 154 2 109 1 185 1 157 2 360 1 320 1 163 1 340 2 341 1 115 1 167 2 25 1 
299 1 233 3 1 1 323 1 235 1 141 1 168 1 79 2 284 1 172 1 197 1 32 3 87 1 67 2 251 1 354 1 90 2 41 2 207 1 358 1 208 1 182 2 280 1 231 1 115 1 190 2 298 1 74 1 
334 1 2 1 79 2 358 1 207 2 71 2 303 1 172 2 346 1 268 1 33 1 115 2 148 1 
75 1 79 1 207 4 71 1 172 4 303 1 346 1 231 1 213 1 319 1 244 1 33 1 115 4 
98 1 343 1 2 1 79 1 207 2 228 1 71 2 335 1 172 2 346 1 33 1 270 1 115 2 342 1 
149 1 347 1 47 1 59 1 231 1 207 1 71 1 172 1 115 1 346 1 
145 1 39 1 79 1 207 2 71 1 33 1 43 1 172 2 115 2 303 1 346 1 
75 1 79 3 207 5 228 1 71 2 130 1 172 5 303 1 195 1 346 2 145 1 231 1 319 1 244 1 33 2 115 4 
75 1 79 3 207 5 228 1 71 2 130 1 172 5 303 1 346 2 31 1 145 1 231 1 319 1 244 1 33 2 115 4 
105 1 2 1 79 1 207 1 71 1 172 1 5 1 346 1 58 1 231 1 163 1 33 1 288 2 115 1 309 1 247 2 249 1 25 1 
2 1 79 1 207 1 228 1 71 2 335 1 172 1 346 1 224 1 268 1 33 1 115 1 342 1 
27 1 11 1 278 1 5 1 57 1 
219 1 233 2 1 1 345 1 141 1 27 2 284 1 57 2 5 1 32 2 65 1 11 2 288 1 247 1 251 1 105 1 278 1 258 1 183 1 211 1 230 1 361 1 20 1 338 1 163 1 187 1 297 1 25 1 218 2 
294 1 40 1 27 1 22 1 278 1 11 1 288 1 247 1 25 1 
345 1 278 1 297 1 
138 1 317 1 61 1 86 1 
138 1 161 1 317 1 61 1 339 1 188 1 337 1 
169 1 84 1 337 1 
282 1 138 1 276 2 91 1 337 3 161 1 317 1 61 1 339 3 188 1 166 1 23 1 
138 1 161 1 317 1 61 1 245 1 339 2 188 1 196 1 337 2 
347 1 161 1 47 1 16 1 317 1 140 1 339 1 188 1 215 1 91 1 337 1 
138 1 161 1 317 1 339 1 188 1 91 1 337 1 
138 2 161 1 61 1 339 1 188 1 91 1 337 1 
138 1 91 1 337 2 161 2 317 1 60 1 137 1 339 2 188 2 121 1 
138 1 274 1 161 1 317 2 140 1 61 1 147 1 259 1 245 2 339 3 188 1 91 1 337 3 
138 1 16 1 91 1 337 2 161 1 347 1 59 1 47 2 317 1 61 1 73 1 51 1 339 2 245 1 188 1 
138 1 161 2 317 2 140 1 61 1 259 1 245 2 339 4 12 1 188 2 196 1 91 1 337 4 
138 1 161 1 317 1 61 1 339 1 188 1 91 1 337 1 
282 1 138 2 262 1 276 1 140 1 337 4 161 1 317 3 61 2 245 2 339 4 259 1 188 1 166 1 
304 1 138 1 161 1 317 1 61 1 245 1 339 2 188 1 91 1 89 1 252 1 337 2 
282 2 138 1 276 2 108 1 91 1 337 3 161 1 317 1 61 1 339 3 188 1 166 1 
315 2 317 2 328 1 9 1 
161 1 339 1 188 1 201 1 91 1 337 1 
138 1 161 1 317 1 61 1 147 1 245 1 339 2 188 1 91 1 337 2 
122 1 
138 1 161 1 317 1 61 1 339 1 188 1 91 1 337 1 
138 1 276 1 91 1 337 3 161 1 317 1 61 1 147 1 245 1 339 3 188 1 
262 1 317 1 140 1 259 1 
138 1 317 1 

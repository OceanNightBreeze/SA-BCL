#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (34,48,112,272,370) (175,323) (175,323) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (34,48,112,272,370) (175,323) (175,323) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (34,48,112,272,370) (175,323) (175,323) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (34,48,112,272,370) (175,323) (175,323) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 168 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (34,48,112,272,370) (119,327) (119,327) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 168 252 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 168 252 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (30,296) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testLongRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (122,156,164,269) (122,156,164,269) (8,188,266) (8,188,266) (8,188,266) 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (122,156,164,269) (122,156,164,269) (8,188,266) (8,188,266) (8,188,266) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (122,156,164,269) (122,156,164,269) (8,188,266) (8,188,266) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (122,156,164,269) (122,156,164,269) (8,188,266) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 381 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 79 98 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 381 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (122,156,164,269) (122,156,164,269) 315 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal; | RETURN | 1824 | return null
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V | STATEMENT | 809 | stmt -> ;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | ASSIGN | 3588 | = null
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3809 | return null
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> 1
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1674 | return null
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 11810 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | OPERATOR | 6134 | && -> ||
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
122 2 164 1 356 1 185 1 249 1 267 1 229 1 156 2 269 3 82 2 293 3 162 1 233 1 
122 1 175 1 293 1 356 1 373 1 323 1 278 1 28 1 63 1 65 1 229 1 280 1 272 1 269 1 156 1 
122 1 175 1 293 1 356 1 373 1 323 1 278 1 28 1 63 1 65 1 229 1 280 1 272 1 269 1 156 1 
122 1 175 1 293 1 356 1 373 1 323 1 278 1 28 1 63 1 65 1 229 1 280 1 272 1 269 1 156 1 
122 1 175 1 293 1 356 1 373 1 323 1 278 1 28 1 63 1 65 1 229 1 280 1 272 1 269 1 156 1 
122 1 164 1 96 1 356 1 63 1 168 1 156 1 269 2 82 1 293 2 373 1 162 1 280 1 72 1 
122 1 293 1 356 1 28 1 119 1 63 1 327 1 305 1 229 1 280 1 272 1 269 1 156 1 
96 1 60 1 122 2 164 5 356 1 185 2 63 1 168 1 229 1 82 3 156 2 269 7 252 1 293 7 373 1 258 1 162 3 233 1 280 1 72 1 342 1 
96 1 60 1 122 2 164 5 356 1 185 2 63 1 168 1 229 1 82 3 156 2 269 7 252 1 293 7 373 1 258 1 162 3 233 1 280 1 72 1 342 1 
74 1 20 1 166 1 61 1 183 1 154 1 67 1 270 1 309 1 310 1 47 1 190 1 191 1 92 1 
328 1 
244 1 89 1 310 2 328 1 70 1 67 2 191 1 142 1 
262 1 357 2 306 1 246 1 167 1 328 1 67 5 142 2 197 1 11 1 160 1 374 1 375 1 364 2 89 1 310 5 212 2 70 1 191 2 
89 1 328 1 381 1 
277 1 213 2 328 1 
270 2 20 1 61 2 166 2 183 2 190 2 287 1 92 2 
17 1 203 1 20 1 124 1 61 3 245 1 183 3 24 1 126 2 247 2 186 1 101 1 66 2 251 1 276 1 362 1 190 2 111 1 4 1 166 2 78 1 54 1 6 1 140 1 283 2 141 1 287 1 80 2 270 2 200 1 35 1 295 1 91 1 225 1 92 2 38 1 379 1 
74 1 270 1 20 1 61 1 166 1 183 1 309 1 47 1 190 1 92 1 
61 1 183 1 64 1 328 1 67 1 155 1 349 1 270 1 224 1 109 1 89 1 309 1 310 1 49 1 
166 1 61 1 183 1 328 1 67 2 155 1 270 1 224 1 109 1 89 1 309 1 310 2 190 1 49 1 92 1 
44 1 310 1 67 1 191 1 142 1 
89 1 331 1 310 2 328 1 70 1 67 2 191 1 142 1 
310 1 67 1 142 1 
311 1 61 2 166 1 183 2 287 2 270 2 198 1 190 1 92 1 
30 1 313 1 128 1 
124 1 61 1 183 1 126 1 24 1 247 1 283 1 186 1 141 1 287 1 276 1 362 1 3 1 35 1 225 1 379 1 
30 1 124 1 61 2 183 2 24 1 126 1 186 1 247 1 283 1 141 1 56 1 276 1 362 1 270 1 35 1 190 1 225 1 92 1 379 1 380 1 
287 1 381 1 
270 3 166 1 61 3 183 3 56 1 190 3 287 1 92 3 
74 1 270 1 61 1 183 1 309 1 190 1 92 1 
311 1 270 1 61 1 166 1 198 1 183 1 309 1 190 1 92 1 
203 1 19 1 311 1 124 1 20 1 61 4 245 1 183 4 24 1 126 1 186 1 247 1 101 1 66 2 67 1 155 1 251 1 276 1 362 1 109 1 190 3 49 1 4 1 166 2 54 1 6 1 140 1 283 1 141 1 56 1 287 1 307 1 80 1 270 3 200 1 35 1 224 1 309 1 310 1 295 1 225 1 92 3 379 1 380 1 
105 1 270 2 61 2 183 2 64 1 56 1 190 1 287 1 92 1 
311 1 369 1 166 1 61 3 183 3 56 2 328 1 67 1 307 1 155 1 270 3 224 1 109 1 310 1 309 1 190 3 49 1 92 3 380 1 
311 1 30 1 166 1 61 2 313 1 183 2 56 1 270 2 190 2 92 2 
124 1 61 1 183 1 126 1 24 1 247 1 283 1 186 1 141 1 287 1 276 1 362 1 35 1 225 1 379 1 
61 1 183 1 126 1 24 1 247 1 283 1 141 1 287 1 276 1 362 1 223 1 35 1 241 1 225 1 379 1 
296 1 182 1 
270 1 61 1 183 1 309 1 190 1 92 1 155 1 104 1 
311 1 61 5 166 1 183 5 1 1 64 1 56 2 248 1 287 1 105 1 270 5 190 4 92 4 380 1 
74 1 270 2 61 2 183 2 309 1 190 2 92 2 104 1 
147 1 343 1 32 1 
147 2 131 1 68 1 352 1 32 2 51 1 
147 1 32 1 
147 1 32 1 
131 1 51 1 
131 1 51 1 
131 1 51 1 
147 1 228 1 32 1 
147 1 228 1 32 1 
147 1 228 1 32 1 
147 1 118 1 32 1 
147 1 118 1 32 1 
147 1 118 1 32 1 
147 2 123 3 336 2 97 1 192 1 32 2 194 1 328 1 67 2 196 1 117 1 83 2 351 1 352 1 294 1 310 2 15 2 136 2 163 2 
123 1 147 1 61 2 183 2 2 1 67 1 230 1 208 1 159 1 190 2 136 1 163 1 114 1 343 1 32 1 287 1 117 1 270 2 83 1 176 1 310 1 37 1 15 1 92 2 
209 2 373 1 264 1 305 1 280 2 
373 1 63 1 280 1 
63 1 305 1 280 1 
209 1 137 1 264 1 373 2 305 1 280 3 
209 1 264 1 373 1 86 1 305 1 280 2 
357 1 227 2 205 1 298 2 99 1 103 1 67 5 25 1 107 1 159 1 277 1 160 3 319 1 364 1 212 1 213 3 366 1 70 1 191 4 114 1 262 1 306 2 237 1 328 2 288 1 142 1 176 1 310 5 89 1 332 1 94 1 120 2 
226 1 357 2 205 2 298 6 103 3 67 9 25 3 44 5 107 3 277 3 160 8 364 2 212 2 213 9 366 1 71 1 191 7 70 1 73 1 114 4 76 1 262 1 306 6 237 3 328 5 288 2 142 6 350 1 374 1 376 5 88 1 310 9 89 1 332 3 120 6 
357 1 205 1 227 1 298 2 99 1 67 3 103 1 25 1 107 1 277 2 160 3 364 1 212 1 213 4 191 2 114 1 306 2 237 1 328 3 288 1 374 1 89 1 310 3 332 1 94 1 120 2 
357 1 205 1 227 2 298 4 99 1 67 4 103 2 25 2 107 2 277 3 160 5 364 1 212 1 213 7 71 1 191 3 114 2 76 1 306 4 237 2 328 4 288 1 374 1 89 1 88 1 310 4 332 2 94 1 120 4 
43 1 
353 1 225 1 381 1 
290 1 225 1 
141 1 225 1 
273 1 24 1 353 2 141 1 225 3 317 1 
24 1 141 1 225 1 
225 1 300 1 
75 1 322 1 265 4 151 1 54 8 78 10 187 2 139 1 371 2 80 18 253 1 25 3 107 3 84 2 330 1 340 3 320 2 177 1 179 7 
148 1 204 3 245 1 151 2 187 3 40 1 66 2 103 3 251 1 231 1 253 1 25 5 107 6 132 1 340 7 320 3 75 2 322 1 5 1 265 7 6 1 54 17 78 21 139 1 237 3 371 2 173 1 80 38 84 3 199 4 201 1 177 1 295 1 332 2 179 14 
245 2 151 1 274 1 187 2 66 4 251 2 25 3 107 3 132 1 340 4 110 1 320 2 75 1 322 1 265 5 6 2 78 11 54 9 139 1 371 2 80 20 84 2 177 1 295 2 179 9 
75 1 322 1 265 4 151 1 54 8 78 10 187 2 139 1 371 2 80 18 253 1 25 3 107 3 84 2 340 3 320 2 177 1 179 7 
75 1 322 1 265 4 151 1 54 8 78 10 187 2 139 1 371 2 80 18 253 1 25 3 107 3 84 2 340 3 320 2 177 1 179 7 
113 1 122 1 358 1 126 1 247 1 283 1 236 2 141 1 171 2 229 2 339 2 42 1 156 1 269 1 276 1 362 1 293 1 58 1 87 1 225 1 368 1 16 1 379 1 
122 1 356 1 126 1 63 1 247 1 188 1 229 1 339 1 156 1 276 1 305 1 280 2 164 1 235 1 137 1 115 1 236 1 283 1 266 1 171 1 8 1 143 1 269 2 9 1 293 1 373 1 379 1 
122 1 356 1 126 1 63 1 247 1 188 1 229 1 339 1 156 1 276 1 134 1 305 1 280 2 164 1 235 1 137 1 236 1 283 1 266 1 171 1 8 1 143 1 269 2 9 1 293 1 373 1 379 1 
122 1 126 1 63 1 247 1 229 1 339 1 156 1 276 1 305 1 280 2 164 2 235 1 263 1 137 1 115 1 236 1 283 1 266 1 171 1 8 1 143 1 269 3 9 1 293 2 373 1 58 1 379 1 
164 2 235 1 263 1 137 1 115 1 126 1 63 1 247 1 283 1 236 1 8 1 171 1 229 1 143 1 339 1 269 2 276 1 293 1 373 1 305 1 280 2 379 1 
234 1 
297 2 149 1 150 1 152 2 247 2 100 1 299 2 155 1 42 1 160 2 109 1 212 1 213 2 260 2 49 1 262 1 306 2 345 1 349 1 270 1 224 1 310 5 309 1 14 1 225 1 355 1 271 1 61 1 357 1 125 2 358 1 184 2 23 1 183 1 126 2 64 1 67 5 276 1 362 2 277 2 133 2 364 1 321 1 70 3 283 2 141 1 328 2 288 1 239 1 142 6 291 1 89 1 202 4 93 1 379 1 
244 1 61 1 183 1 150 1 23 1 152 1 64 1 100 1 67 3 155 1 109 1 49 1 70 1 239 1 142 2 349 1 270 1 224 1 310 3 309 1 202 2 271 1 
244 1 61 1 183 1 150 1 23 1 184 1 64 1 100 1 67 3 155 1 109 1 49 1 70 1 239 1 328 1 142 1 349 1 270 1 224 1 310 3 309 1 89 1 202 3 271 1 
244 1 61 1 183 1 150 1 23 1 184 1 152 1 64 1 100 1 67 3 155 1 133 1 109 1 49 1 70 1 239 1 328 1 142 2 349 1 270 1 224 1 310 3 309 1 89 1 202 3 271 1 
244 1 20 1 61 2 150 1 23 1 183 2 206 1 152 2 154 1 64 1 100 1 67 3 155 1 133 2 109 1 47 1 190 1 49 1 70 1 74 1 166 1 328 1 239 1 142 3 349 1 270 2 144 1 224 1 89 1 310 3 309 2 202 2 92 1 271 1 
297 2 150 1 152 2 100 1 155 1 299 2 160 1 109 1 212 1 260 2 213 2 49 1 262 1 306 1 345 1 349 1 270 1 224 1 309 1 310 4 271 1 61 1 357 1 125 2 183 1 23 1 184 2 64 1 67 4 277 2 133 2 364 1 321 1 70 2 239 1 328 2 142 4 291 1 89 1 202 4 
297 2 61 1 357 1 125 2 184 2 183 1 150 1 23 1 152 2 64 1 100 1 67 4 299 2 155 1 277 2 160 1 133 2 211 1 259 1 364 1 109 1 212 1 260 2 321 1 49 1 70 2 262 1 306 1 7 1 328 1 239 1 142 4 291 1 349 1 270 1 224 1 89 1 310 4 309 1 202 4 271 1 
297 2 61 1 357 1 125 2 184 2 183 1 150 1 23 1 152 2 64 1 100 1 67 4 299 2 155 1 277 2 160 1 133 2 211 1 259 1 364 1 109 1 212 1 260 2 321 1 49 1 70 2 262 1 306 1 7 1 328 1 239 1 142 4 291 1 349 1 270 1 224 1 89 1 310 4 309 1 202 4 271 1 
297 2 61 1 357 1 184 2 183 1 150 1 23 1 152 2 64 1 100 1 67 4 129 1 155 1 160 1 133 2 211 1 303 1 364 1 109 1 212 1 213 2 260 2 365 1 321 1 49 1 70 2 262 1 306 1 328 1 239 1 142 4 268 2 289 2 349 1 270 1 224 1 89 1 310 4 309 1 202 4 271 1 
297 2 61 1 357 1 125 2 183 1 150 1 23 1 184 3 152 3 64 1 100 1 67 4 299 2 155 1 277 2 160 1 211 1 133 3 259 1 364 1 109 1 212 1 260 2 321 1 49 1 70 2 262 1 306 1 7 1 328 1 239 1 142 5 291 1 349 1 270 1 144 1 224 1 89 1 310 4 309 1 202 5 271 1 
297 2 61 1 357 1 125 2 183 1 150 1 23 1 184 3 152 3 64 1 100 1 67 4 299 2 155 1 277 2 160 1 211 1 133 3 259 1 364 1 109 1 212 1 260 2 321 1 49 1 70 2 262 1 306 1 7 1 328 1 239 1 142 5 291 1 349 1 270 1 144 1 224 1 89 1 310 4 309 1 202 5 271 1 
297 2 61 1 357 1 184 2 150 1 23 1 183 1 152 2 64 1 100 1 67 4 155 1 160 1 133 2 364 1 109 1 303 1 212 1 213 2 260 2 321 1 49 1 70 2 262 1 306 1 345 1 328 1 239 1 142 4 268 2 289 2 349 1 270 1 224 1 89 1 310 4 309 1 202 4 271 1 
203 1 61 1 245 1 314 1 182 1 358 1 183 1 126 7 247 8 101 1 66 2 42 1 276 2 251 1 362 2 189 1 134 1 190 1 111 1 77 1 31 1 115 1 218 1 6 1 78 1 54 1 283 8 140 1 141 2 56 1 174 1 80 2 270 1 295 1 91 2 92 1 225 3 379 2 146 1 
311 1 61 1 313 1 245 1 183 1 101 1 128 1 66 2 103 1 251 1 25 1 107 1 304 1 190 1 30 1 344 1 166 1 265 1 6 1 78 1 54 2 140 1 237 1 80 3 270 1 295 1 92 1 332 1 179 1 
182 1 381 1 
203 1 204 3 245 2 313 4 337 1 40 2 101 1 66 4 128 13 103 3 301 1 251 2 25 1 107 3 340 1 111 1 344 1 30 13 265 1 54 7 6 2 78 10 140 2 237 3 170 1 173 1 287 1 80 17 292 1 199 4 295 2 332 1 179 2 
203 1 124 1 61 2 313 1 245 1 183 2 24 1 126 1 186 1 247 1 101 1 66 2 276 1 251 1 362 1 257 1 3 1 190 1 111 1 344 1 6 1 54 1 78 1 283 1 140 1 141 1 56 1 287 1 80 2 270 1 372 1 221 1 35 1 295 1 225 1 92 1 379 1 380 1 
203 1 245 3 338 2 247 1 101 3 103 2 251 3 107 5 46 2 340 3 161 1 111 1 4 2 344 1 265 8 54 15 6 3 56 1 347 1 270 1 309 1 177 1 225 2 179 11 124 2 61 3 313 6 183 3 126 1 24 2 187 2 186 2 360 2 66 6 316 2 128 6 276 2 362 1 25 5 320 1 190 1 322 1 30 6 78 16 139 1 283 1 140 3 237 2 371 2 141 2 287 5 80 31 84 2 35 2 145 1 295 3 92 1 332 2 379 2 380 1 
182 1 
182 1 
182 1 
52 1 30 1 313 1 245 1 6 1 78 2 140 1 101 1 128 1 66 2 103 1 80 2 251 1 107 1 340 1 295 1 146 1 179 1 
30 1 313 1 245 1 265 1 62 1 6 1 54 2 140 1 101 1 128 1 66 2 80 2 251 1 25 1 295 1 332 1 146 1 179 1 
245 1 313 2 101 1 66 2 128 2 103 1 251 1 25 1 107 1 340 1 30 2 265 1 78 2 6 1 54 2 237 1 140 1 80 4 295 1 332 1 146 1 179 2 
245 1 313 2 101 1 66 2 128 2 103 1 251 1 25 1 107 1 30 2 265 1 78 2 6 1 54 2 237 1 140 1 80 4 295 1 332 1 179 1 
203 1 124 1 61 1 245 1 183 1 24 1 126 1 186 1 247 1 101 1 66 2 276 1 251 1 362 1 111 1 4 1 78 1 6 1 54 1 283 1 140 1 141 1 287 1 80 2 35 1 295 1 225 1 379 1 
203 1 61 1 245 1 183 1 24 1 126 1 247 1 101 1 66 2 276 1 251 1 362 1 215 1 111 1 78 1 6 1 54 1 283 1 140 1 141 1 287 1 80 2 35 1 223 1 241 1 295 1 225 1 379 1 
245 1 313 2 101 1 66 2 128 2 103 1 251 1 25 1 107 1 344 1 30 2 265 1 78 2 6 1 54 2 237 1 140 1 80 4 295 1 332 1 179 1 
124 1 61 1 313 2 245 1 183 1 24 1 126 1 186 1 247 1 360 1 101 1 128 2 66 2 103 1 276 1 251 1 25 1 107 1 134 1 4 1 30 2 265 1 54 2 78 2 6 1 283 1 140 1 237 1 141 1 80 4 35 1 295 1 332 1 225 1 379 1 179 1 
311 1 61 1 245 1 313 1 183 1 101 1 66 2 128 1 103 1 251 1 25 1 107 1 340 1 190 1 281 1 344 1 30 1 166 1 54 1 6 1 78 2 140 1 237 1 80 3 270 1 295 1 332 1 92 1 179 1 
204 1 245 2 21 1 40 1 66 4 103 2 251 2 25 1 107 2 318 1 340 1 110 1 265 1 217 1 325 1 6 2 54 5 78 6 237 2 173 1 80 11 220 1 199 2 13 1 295 2 332 1 242 1 334 1 179 2 
39 1 204 2 245 3 181 1 66 6 103 3 251 3 25 2 107 3 132 2 318 1 340 2 110 1 367 1 214 1 216 1 265 2 217 2 325 1 54 12 6 3 78 14 237 3 195 1 286 1 173 2 80 26 199 2 13 4 295 3 332 2 242 2 334 1 179 4 
39 1 204 3 245 4 40 2 103 5 251 4 107 6 340 5 110 1 214 1 216 1 217 2 265 3 53 1 54 18 6 4 173 3 220 1 13 4 179 8 181 1 187 1 66 8 25 3 318 1 132 2 320 1 367 1 322 1 325 1 78 23 237 5 139 1 371 1 286 1 195 1 80 41 199 5 84 1 295 4 332 2 242 1 334 1 
204 1 245 2 40 1 66 4 103 2 251 2 25 1 107 2 318 1 340 2 110 1 367 1 265 1 217 1 325 1 6 2 54 6 78 7 237 2 173 1 80 13 220 1 199 2 13 2 295 2 332 1 242 1 334 1 179 3 
39 1 204 2 181 1 245 3 187 1 40 1 66 6 103 4 251 3 25 4 107 5 132 2 318 1 340 4 110 1 320 1 367 1 214 1 322 1 216 1 217 1 265 4 325 1 6 3 54 17 78 19 139 1 237 4 371 1 195 1 286 1 173 2 80 36 84 1 199 3 13 3 295 3 332 3 242 1 334 1 179 8 
157 1 147 1 83 1 97 1 352 1 192 1 32 1 15 1 136 1 163 1 
343 1 208 1 
147 1 10 1 83 1 0 1 32 1 135 1 15 1 136 1 163 1 
147 1 123 2 336 1 97 1 192 1 32 1 194 1 328 1 67 1 117 1 83 1 351 1 352 1 294 1 310 1 15 1 136 1 163 1 
147 1 123 2 336 1 97 1 192 1 32 1 194 1 328 1 67 1 117 1 83 1 351 1 352 1 294 1 310 1 15 1 136 1 163 1 
147 1 123 2 336 1 97 1 192 1 32 1 194 1 328 1 67 1 117 1 83 1 351 1 352 1 294 1 310 1 15 1 136 1 163 1 
68 1 228 1 95 1 
68 1 228 1 95 1 
118 1 180 1 
68 1 118 1 180 1 
37 1 230 1 
336 1 147 1 123 1 61 2 183 2 2 1 67 1 230 1 208 1 159 1 190 2 191 1 136 1 163 1 114 1 343 1 138 1 32 1 194 1 287 1 270 2 83 1 176 1 310 1 37 1 15 1 92 2 
228 1 95 1 
68 1 118 1 180 1 
203 1 61 2 245 1 314 1 183 2 126 2 247 2 101 1 66 2 276 1 251 1 158 1 106 1 69 1 111 1 344 1 324 1 218 1 6 1 78 1 54 1 283 2 140 1 141 1 80 2 270 2 295 1 91 2 225 1 379 1 121 1 
358 1 126 1 247 1 283 1 141 1 171 1 42 1 276 1 362 1 363 1 222 1 225 1 368 1 379 1 
235 1 137 1 115 1 126 1 63 1 247 1 283 1 171 1 143 1 9 1 276 1 373 1 222 1 305 1 279 1 280 2 379 1 243 1 
235 1 137 1 115 1 126 2 63 1 247 2 283 2 171 1 143 1 276 1 9 1 373 1 222 1 134 1 305 1 279 1 280 2 379 1 243 1 
235 1 137 1 115 1 126 1 63 1 247 1 283 1 171 1 143 1 9 1 276 1 256 1 373 1 305 1 280 2 243 1 379 1 
41 1 
262 1 357 1 306 1 246 1 328 1 160 1 375 1 364 1 212 1 89 1 
306 5 338 1 237 2 298 5 153 1 103 2 328 5 25 2 107 2 277 5 160 5 210 2 213 10 332 2 120 5 
89 1 310 1 328 1 67 1 70 1 142 1 
335 1 149 1 357 2 358 1 98 1 126 3 247 3 67 2 42 1 232 1 276 1 362 2 160 2 364 2 212 2 70 1 262 1 306 1 79 1 283 3 141 1 288 2 142 3 374 1 310 2 14 1 225 1 355 1 379 1 
160 1 306 1 246 1 375 1 89 1 328 1 381 1 
357 1 125 1 67 1 299 1 277 1 160 1 364 1 212 1 213 1 70 1 262 1 306 1 328 2 142 1 291 1 310 1 89 1 
335 1 246 1 338 2 247 3 298 6 153 2 103 2 300 2 107 2 160 9 210 2 109 2 212 4 213 12 262 4 306 8 116 1 219 2 353 2 310 5 14 1 225 10 120 6 357 4 273 1 22 1 24 3 126 3 275 2 361 2 67 5 232 1 276 3 362 1 25 2 277 6 27 2 364 4 134 1 70 3 283 3 237 2 141 3 193 2 288 2 328 8 142 5 290 3 329 1 85 2 375 1 89 2 332 2 379 4 
39 1 204 1 181 1 357 2 298 5 153 1 67 1 103 2 25 2 107 2 277 3 160 8 210 2 364 2 212 2 213 6 214 1 70 1 262 2 216 1 306 5 326 1 237 2 238 1 286 1 173 1 288 1 328 5 142 1 199 1 310 1 89 2 14 1 332 2 120 5 
20 1 61 1 357 1 183 1 187 1 153 1 154 1 67 1 25 1 107 2 160 2 210 2 364 1 212 1 47 1 190 1 74 1 262 1 166 1 306 2 7 1 371 1 270 1 84 1 309 1 310 1 177 1 92 1 
203 1 20 1 124 1 61 3 245 1 183 3 126 1 24 1 247 1 186 1 101 1 66 2 251 1 276 1 362 1 190 2 4 1 166 2 54 1 6 1 283 1 140 1 141 1 287 1 80 1 270 2 200 1 35 1 295 1 92 2 225 1 379 1 
262 1 357 1 306 2 298 2 288 1 328 4 277 2 160 1 364 1 212 1 89 2 213 4 320 1 14 1 120 2 
83 1 97 1 36 1 136 1 230 1 
26 1 83 1 136 1 
26 1 83 1 136 1 
26 1 83 1 136 1 
83 1 136 1 81 1 
83 1 136 1 81 1 
83 1 136 1 81 1 
83 1 136 1 
147 1 32 1 
265 2 78 5 54 5 187 1 371 1 80 10 25 2 107 2 84 1 340 2 177 1 179 4 
245 1 6 1 78 2 66 2 103 1 80 2 251 1 107 1 340 1 110 1 295 1 179 1 
245 1 265 1 54 2 6 1 78 2 237 1 66 2 103 1 80 4 251 1 25 1 107 1 110 1 295 1 332 1 179 1 
245 1 265 1 54 1 6 1 78 1 187 1 66 2 80 2 251 1 84 1 340 1 110 1 295 1 179 2 
148 1 204 3 245 4 187 2 40 1 66 8 103 3 302 1 251 4 25 5 107 6 132 1 340 4 110 1 320 1 322 1 5 1 265 5 54 16 6 4 78 18 139 1 237 3 371 2 173 1 80 34 220 1 84 2 199 4 201 1 177 1 295 4 332 2 179 9 
204 1 181 1 245 1 40 1 187 2 66 2 103 1 251 1 25 3 107 4 340 3 110 1 320 1 322 1 265 4 54 10 6 1 78 12 237 1 139 1 371 2 173 1 80 22 84 2 199 2 177 1 295 1 179 7 
204 1 181 1 245 2 187 2 40 1 66 4 103 1 251 2 302 1 25 3 107 4 340 4 110 1 320 1 322 1 265 4 54 10 6 2 78 12 139 1 237 1 371 2 173 1 80 22 84 2 199 2 177 1 295 2 179 8 
39 1 204 1 181 1 245 4 66 8 103 2 302 1 251 4 25 1 107 2 132 2 340 2 110 1 214 1 216 1 265 1 54 5 6 4 78 7 237 2 173 1 286 1 80 12 199 1 295 4 332 1 179 3 
39 1 204 1 181 1 245 4 66 8 103 2 302 1 251 4 25 1 107 2 132 2 340 1 110 1 214 1 216 1 265 2 54 5 6 4 78 7 237 2 173 1 286 1 80 12 199 1 295 4 332 1 179 3 
204 1 181 1 245 1 40 1 187 2 66 2 103 1 251 1 25 3 107 4 340 3 110 1 320 1 322 1 265 4 54 10 6 1 78 12 237 1 139 1 371 2 173 1 80 22 84 2 199 2 177 1 295 1 179 7 
39 1 204 1 181 1 245 3 66 6 103 2 251 3 25 1 107 2 132 2 340 2 110 1 214 1 216 1 265 2 54 5 6 3 78 7 237 2 173 1 286 1 80 12 199 1 295 3 332 1 179 4 
39 1 204 1 181 1 245 4 187 2 66 8 103 2 302 1 251 4 25 4 107 5 132 2 340 4 110 1 320 1 214 1 322 1 216 1 265 5 54 13 6 4 78 16 139 1 237 2 371 2 286 1 173 1 80 29 84 2 199 1 177 1 295 4 332 1 179 9 
39 1 204 1 181 1 245 2 66 4 103 2 251 2 25 1 107 2 340 2 110 1 214 1 216 1 265 2 54 5 6 2 78 7 237 2 173 1 286 1 80 12 220 1 199 1 295 2 332 1 179 4 
322 1 265 2 78 2 54 2 139 2 187 2 80 4 84 2 340 2 179 4 
39 1 204 1 181 1 245 4 187 2 66 8 103 2 251 4 25 4 107 5 132 2 340 4 110 1 320 1 214 1 322 1 216 1 265 5 54 13 6 4 78 16 139 1 237 2 371 2 286 1 173 1 80 29 220 1 84 2 199 1 177 1 295 4 332 1 179 9 
245 2 187 2 66 4 251 2 25 3 107 3 132 1 340 3 320 1 322 1 265 4 6 2 78 9 54 8 139 1 371 2 80 17 84 2 177 1 295 2 179 7 
322 1 265 2 78 4 54 3 139 1 187 1 371 1 80 7 25 1 107 1 84 1 340 1 320 1 381 1 179 3 
245 1 265 1 54 2 6 1 78 2 237 1 66 2 103 1 80 4 302 1 251 1 25 1 107 1 340 1 295 1 332 1 179 2 
204 1 265 1 54 4 78 3 40 1 237 1 173 1 103 1 80 7 25 1 107 1 199 2 340 1 332 1 179 2 
204 2 245 1 337 1 187 2 40 1 66 2 103 2 251 1 25 4 107 5 132 1 340 4 320 1 322 1 265 5 78 15 54 12 6 1 139 1 237 2 371 2 170 1 80 27 84 2 199 2 177 1 295 1 332 1 179 9 
199 1 54 1 80 1 
204 1 78 1 80 1 
245 1 265 2 6 1 338 1 54 3 78 3 237 1 66 2 103 1 80 6 251 1 302 1 25 1 107 1 340 2 295 1 332 1 179 4 
39 1 204 1 181 1 245 1 66 2 103 2 251 1 25 1 107 2 340 2 110 1 214 1 216 1 265 2 54 5 6 1 78 7 237 2 173 1 286 1 80 12 199 1 295 1 332 1 179 4 
265 1 78 3 54 3 187 1 371 1 80 6 25 1 107 1 84 1 340 1 179 2 
322 1 245 1 265 1 78 1 54 2 6 1 187 1 139 1 66 2 80 3 251 1 45 1 84 1 132 1 340 1 295 1 179 2 
105 1 255 1 270 1 61 1 183 1 64 1 287 1 
61 1 183 1 64 1 287 1 250 1 254 1 255 1 105 1 270 1 377 1 90 1 354 1 
358 1 126 4 359 1 247 4 283 4 141 1 42 1 276 1 362 1 134 1 50 1 225 1 379 1 
18 1 282 1 126 2 24 1 247 2 283 2 141 1 232 1 348 1 276 1 108 1 225 1 378 1 379 2 
235 1 126 1 247 1 283 1 63 1 276 1 362 1 305 1 280 1 379 1 
115 1 314 1 126 2 247 2 283 2 141 1 276 1 134 1 225 1 379 1 121 1 
77 1 31 1 358 1 314 1 126 4 247 5 283 5 141 2 42 1 232 1 276 2 362 1 134 1 50 1 225 3 379 2 
31 1 358 1 314 1 126 4 247 5 283 5 141 2 42 1 232 1 276 2 362 1 134 1 341 1 50 1 225 3 379 2 
276 1 362 1 358 1 126 1 283 1 247 1 141 1 225 1 379 1 42 1 381 1 
61 2 183 2 24 1 126 1 247 1 283 1 186 1 141 1 56 1 287 1 276 1 362 1 270 1 35 1 190 1 225 1 92 1 379 1 
61 2 183 2 24 2 126 1 247 1 283 1 186 1 141 2 56 1 287 1 155 1 300 1 232 1 276 1 270 2 85 1 35 1 309 1 49 1 190 1 225 3 92 2 379 1 
61 2 183 2 126 2 24 2 359 1 247 2 155 1 300 1 276 1 232 1 190 1 49 1 283 2 141 2 56 1 287 1 270 2 35 1 85 1 309 1 241 1 92 2 225 3 379 1 
126 3 24 1 359 1 247 3 67 2 300 1 276 1 232 1 362 1 109 1 283 3 169 1 141 1 328 1 142 1 290 1 85 1 353 1 310 2 89 1 225 4 59 1 379 1 
24 1 126 3 359 1 247 3 283 3 141 1 328 1 67 2 142 1 300 1 232 1 290 1 276 1 362 1 85 1 27 1 109 1 89 1 310 2 353 1 225 4 379 1 
276 1 126 1 283 1 247 1 189 1 379 1 
18 1 77 1 31 1 115 1 273 1 314 1 126 6 24 1 247 7 283 7 141 2 174 1 276 2 362 2 189 1 134 1 91 1 29 1 225 3 378 1 379 3 
245 2 247 1 101 2 251 2 107 3 340 3 4 1 344 1 265 4 6 2 54 8 56 1 270 1 309 1 177 1 225 1 179 7 124 1 61 2 183 2 126 1 24 1 186 1 187 2 360 1 316 1 66 4 276 1 25 3 134 1 320 1 190 1 322 1 324 1 78 9 283 1 140 2 139 1 141 1 371 2 287 5 80 17 84 2 35 1 145 1 295 2 92 1 379 1 
335 1 357 2 246 1 126 1 247 1 275 1 67 3 362 1 160 1 27 1 364 2 109 1 212 2 191 1 70 1 262 2 306 1 219 1 283 1 193 1 328 1 142 2 290 1 375 1 89 1 310 3 353 1 225 2 
273 1 126 2 24 1 247 2 283 2 141 1 329 1 276 1 134 1 353 1 189 1 225 2 379 2 
61 2 183 2 24 1 126 1 247 1 283 1 141 1 56 1 287 1 276 1 362 1 270 1 35 1 241 1 190 1 225 1 92 1 379 1 
18 1 273 1 126 1 24 1 247 1 283 1 141 1 232 1 276 1 29 1 225 1 378 1 379 2 
285 1 55 1 287 1 207 1 261 1 
284 1 55 2 285 2 287 1 328 1 67 2 207 2 307 1 155 1 308 1 224 1 109 1 89 1 309 1 310 2 240 1 49 1 191 1 261 1 
61 1 183 1 55 1 207 1 270 1 106 1 158 1 69 1 261 1 
308 1 284 1 261 1 
122 1 293 1 356 1 249 1 267 1 82 1 269 1 156 1 
164 2 122 1 370 1 185 1 249 2 346 1 267 2 269 4 156 1 82 3 34 1 293 4 162 1 272 1 
122 1 164 1 356 1 33 1 249 1 267 1 82 1 156 1 269 2 293 2 12 1 258 1 
122 1 370 1 356 1 249 1 267 1 82 1 156 1 269 3 34 2 293 3 48 1 272 2 
130 2 172 1 178 1 82 2 
122 1 293 1 356 1 127 1 269 1 156 1 
164 1 122 1 293 2 356 1 249 1 267 1 82 1 342 1 269 2 156 1 
333 1 
122 1 293 1 356 1 249 1 267 1 82 1 269 1 156 1 
249 1 267 1 82 1 381 1 
122 1 293 1 249 1 267 1 82 1 269 1 156 1 
293 1 229 1 339 1 
122 1 370 1 356 1 249 1 267 1 82 1 156 1 269 3 34 1 293 3 272 2 112 1 
164 1 122 1 293 2 249 1 267 1 72 1 82 1 269 2 156 1 
122 1 96 1 356 1 63 1 156 1 269 1 82 1 293 1 373 1 162 1 280 1 
122 1 293 1 356 1 249 1 82 1 269 1 156 1 
122 1 293 1 356 1 249 2 267 1 269 1 156 1 
122 2 356 1 312 1 249 1 102 1 82 1 156 2 269 2 57 1 293 2 
164 2 60 1 122 1 293 3 356 1 185 1 162 1 249 1 267 1 82 2 342 1 269 3 156 1 
164 1 122 1 137 1 293 1 356 1 373 1 315 1 63 1 305 1 280 2 269 2 156 1 
164 2 122 2 165 1 293 4 356 1 185 1 162 1 249 1 267 1 72 1 82 2 269 4 156 2 
164 1 122 1 356 1 249 1 267 1 156 1 269 3 82 1 293 3 272 1 342 1 
185 1 162 1 346 1 82 1 
249 1 82 1 

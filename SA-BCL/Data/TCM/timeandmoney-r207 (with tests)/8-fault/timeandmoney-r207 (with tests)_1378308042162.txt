#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (185,262) 224 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (153,282) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (36,207,271) (36,207,271) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (36,207,271) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (153,282) (153,282) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 241 
com.domainlanguage.time.TimePointTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 151 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 151 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 178 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (36,207,271) (36,207,271) 74 182 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (36,207,271) (36,207,271) 74 182 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (36,207,271) (36,207,271) 74 182 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (36,207,271) (36,207,271) 74 182 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (36,207,271) (36,207,271) 74 182 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (36,207,271) (36,207,271) 74 182 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (36,207,271) (36,207,271) 74 182 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (36,207,271) (36,207,271) 74 182 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (36,207,271) (36,207,271) 74 182 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (36,207,271) (36,207,271) 74 182 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (36,207,271) (36,207,271) 74 182 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (36,207,271) (36,207,271) 74 182 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 241 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 200 297 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (185,262) (185,262) (34,265) 76 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 125 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (185,262) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 129 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (185,262) (185,262) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (153,282) (153,282) 187 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (185,262) 224 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 321 (208,314) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 321 (208,314) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 321 (136,332) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.IllegalArgumentException 268 5 276 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.IllegalArgumentException 268 186 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.IllegalArgumentException 268 5 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.IllegalArgumentException 268 300 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 321 (136,332) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 86 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7110 | stmt -> ;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1433 | return null
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2913 | return null
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 794 | = null
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V | CONDITION | 6304 | if (x) -> if (!x)
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONDITION | 5405 | if (x) -> if (!x)
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 2215 | stmt -> ;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
197 2 295 1 89 1 92 1 133 9 94 1 95 6 206 2 263 2 264 5 67 1 176 1 175 1 211 2 137 1 143 1 217 1 19 2 23 1 24 1 322 9 225 1 79 4 31 2 33 3 329 2 285 1 85 1 
197 2 295 1 89 1 92 1 133 9 94 1 95 6 206 2 263 2 264 5 67 1 176 1 175 1 211 2 137 1 143 1 217 1 19 2 23 1 24 1 322 9 225 1 79 4 31 2 33 3 329 2 285 1 85 1 
197 2 295 1 89 1 92 1 133 10 94 1 95 7 206 2 263 2 264 6 67 1 176 1 175 1 211 2 137 1 143 1 217 1 19 2 23 1 24 1 322 10 225 1 79 5 31 2 33 4 329 2 285 1 85 1 
197 1 295 1 89 1 92 1 133 7 94 1 95 4 206 2 263 2 264 4 67 1 176 1 175 1 211 2 137 1 143 1 217 1 19 2 23 1 24 1 322 7 225 1 79 3 31 2 33 2 329 2 85 1 
197 2 295 1 217 1 322 4 225 1 92 1 133 4 79 2 94 1 95 3 33 1 31 1 206 1 263 1 329 1 264 3 285 1 211 1 
292 1 295 1 143 1 19 1 23 1 107 1 322 2 225 1 92 1 133 2 31 1 264 1 329 1 263 1 158 1 211 1 
295 1 19 1 322 3 225 1 92 1 133 3 79 1 95 1 31 2 33 1 264 2 211 2 137 1 
48 1 197 2 165 1 295 1 92 1 133 9 94 1 95 7 206 1 264 5 263 1 175 1 211 2 137 1 217 1 19 1 322 9 225 1 79 4 33 3 31 2 329 1 285 1 85 1 
48 1 197 2 165 1 295 1 92 1 133 9 94 1 95 7 206 1 264 5 263 1 175 1 211 2 137 1 217 1 19 1 322 9 225 1 79 4 33 3 31 2 329 1 285 1 85 1 
241 1 150 1 312 1 
87 2 312 1 194 1 
32 2 75 2 170 2 171 2 291 1 
15 1 144 1 21 2 75 1 224 1 170 1 171 1 7 2 325 1 32 1 262 1 10 1 44 2 291 1 
32 1 153 1 75 1 170 1 171 1 291 1 
32 1 36 1 189 1 207 1 
32 1 36 1 75 1 170 1 171 1 
304 1 204 1 113 1 77 1 271 1 
150 1 304 1 37 1 236 1 204 1 113 2 312 1 271 2 
304 1 113 1 271 1 
282 1 32 1 153 1 75 1 170 1 204 1 113 1 171 1 271 1 291 1 
312 1 
150 1 304 1 37 1 124 1 204 1 113 2 312 1 271 2 
49 1 104 2 2 2 201 1 298 1 204 2 113 5 303 1 228 1 326 1 150 1 61 1 230 1 304 2 37 1 284 2 45 1 312 1 271 5 
241 1 
243 1 32 2 35 1 75 1 170 1 171 1 
15 1 32 1 199 1 21 1 75 1 170 1 44 1 128 1 7 1 
243 1 32 5 294 1 199 1 189 1 75 4 266 1 170 4 171 1 128 2 162 1 
32 1 75 1 170 1 
32 3 75 3 170 3 171 1 128 1 
32 1 75 1 170 1 
32 1 243 1 35 1 75 1 170 1 171 1 
243 1 32 2 199 1 75 2 170 2 171 1 128 1 
32 2 189 1 75 1 266 1 170 1 128 1 
32 1 199 1 75 1 170 1 128 1 
32 1 243 1 75 1 170 1 171 1 
15 1 21 1 44 1 7 1 
15 1 21 1 44 1 7 1 
327 1 275 2 142 1 222 1 247 1 57 1 193 1 149 1 
32 1 75 1 170 1 13 1 
235 1 290 1 
235 1 290 1 
278 1 28 1 
278 1 28 1 
278 1 28 1 
235 1 56 1 290 1 
235 1 290 1 116 1 
156 1 235 2 278 1 290 2 6 1 28 1 
235 1 56 1 290 1 
235 1 56 1 290 1 
256 1 235 1 290 1 
256 1 235 1 290 1 
256 1 235 1 290 1 
73 1 131 1 75 2 203 1 170 2 113 1 184 1 253 1 116 1 32 2 98 1 188 1 232 1 235 1 288 1 213 1 334 1 271 1 239 1 290 1 180 1 
203 3 113 2 184 2 6 1 254 1 29 1 98 2 188 2 62 1 305 2 328 1 331 1 235 2 288 1 177 1 312 1 239 2 290 2 271 2 
206 1 263 1 329 1 
263 1 329 1 158 1 
206 2 329 3 308 1 110 1 158 1 100 1 
163 1 206 1 329 2 308 1 110 1 158 1 
206 1 329 2 308 1 110 2 158 1 
204 3 113 4 59 1 150 1 304 1 151 1 37 1 155 1 12 1 312 1 271 4 101 1 
106 1 204 3 113 4 77 1 150 1 304 2 151 1 37 1 269 1 12 1 312 1 271 4 215 1 
242 1 50 1 2 1 87 4 298 3 131 1 204 2 303 2 59 1 61 1 135 2 312 3 271 3 101 1 104 1 273 1 216 2 319 1 111 1 113 3 226 1 150 1 151 1 284 1 155 1 194 2 
242 2 50 2 2 1 87 7 298 5 131 2 204 3 249 1 303 4 59 1 172 1 61 1 135 4 312 4 271 4 101 1 216 4 104 1 273 2 220 1 319 2 111 1 113 4 226 2 150 1 151 1 284 1 155 2 194 3 
241 1 46 1 324 1 
152 1 324 1 
205 1 
69 1 324 1 240 1 
324 1 338 1 
324 1 240 1 
202 1 69 1 46 2 324 3 240 1 336 1 
0 1 317 1 52 1 319 1 223 3 26 1 226 1 252 1 119 4 257 1 174 1 261 1 83 3 68 7 311 1 179 2 195 2 
0 1 317 1 52 1 319 1 223 3 26 1 226 1 252 1 119 4 257 1 174 1 261 1 83 3 68 7 311 1 179 2 195 2 
0 1 317 1 52 1 319 1 223 3 26 1 226 1 252 1 119 4 257 1 174 1 261 1 83 3 68 7 311 1 14 1 179 2 195 2 
242 3 0 1 50 3 244 1 91 1 252 1 174 1 261 4 68 22 178 1 179 1 181 1 273 3 317 1 275 2 221 3 222 1 319 3 223 11 226 3 149 1 327 1 119 11 121 4 40 1 83 7 286 1 160 1 193 1 195 3 
0 1 52 1 248 1 252 1 257 1 174 1 261 1 68 9 311 1 179 2 181 1 16 1 317 1 275 4 319 1 222 2 223 4 226 1 149 2 327 2 119 5 83 4 193 2 195 3 
293 1 198 1 295 1 92 1 302 1 132 1 133 2 7 1 95 1 258 1 206 1 9 1 264 1 263 1 210 1 211 1 100 1 316 1 19 1 21 1 22 1 322 2 225 1 229 1 31 1 38 1 191 1 329 2 158 1 44 1 
293 1 198 1 53 1 92 1 302 1 133 3 7 1 95 2 258 1 206 1 9 1 264 1 263 1 210 1 211 1 100 1 316 1 19 1 21 1 322 3 225 1 115 1 118 1 229 1 31 1 38 1 191 1 329 2 158 1 44 1 
293 1 198 1 53 1 92 1 302 1 133 2 7 1 95 2 258 1 206 1 9 1 264 1 263 1 100 1 316 1 19 1 21 1 322 2 225 1 115 1 229 1 191 1 329 2 158 1 44 1 
164 1 15 1 293 2 198 1 19 2 21 1 245 1 108 1 322 1 302 2 324 1 133 1 7 1 117 1 118 1 31 1 258 1 63 1 9 2 44 1 270 1 211 1 240 1 
293 1 198 1 295 1 302 1 132 1 133 1 7 1 258 1 206 1 9 1 263 1 210 1 211 1 100 1 316 1 19 1 21 1 322 1 115 1 229 1 31 1 38 1 191 1 329 2 158 1 44 1 
209 1 
164 1 49 1 198 1 2 1 296 1 298 1 245 1 303 1 7 2 258 1 304 2 207 1 260 1 306 1 271 2 15 2 182 1 104 1 17 1 74 1 21 2 111 1 113 2 281 1 324 1 32 1 36 1 189 1 37 1 284 1 44 2 240 1 
182 1 32 1 36 1 189 1 207 1 260 1 74 1 296 1 113 1 271 1 
182 1 32 1 36 1 189 1 207 1 260 1 74 1 296 1 113 1 271 1 
182 1 32 1 36 1 189 1 207 1 260 1 74 1 296 1 113 1 271 1 
182 1 296 1 74 1 113 2 32 1 304 1 36 1 37 1 207 1 189 1 260 1 124 1 271 2 
49 1 104 1 182 1 2 1 296 1 74 1 113 1 32 1 36 1 189 1 207 1 260 1 284 1 271 1 
182 1 32 1 36 1 189 1 207 1 260 1 74 1 296 1 113 1 271 1 
182 1 32 1 36 1 189 1 207 1 260 1 74 1 296 1 113 1 271 1 
182 1 32 1 36 1 189 1 207 1 260 1 74 1 296 1 113 1 271 1 
182 1 32 1 36 1 189 1 207 1 260 1 74 1 296 1 113 1 271 1 
182 1 32 1 36 1 189 1 207 1 260 1 74 1 296 1 113 1 271 1 
49 1 104 1 182 1 2 1 296 1 74 1 113 1 32 1 36 1 189 1 207 1 260 1 284 1 271 1 
241 1 0 1 142 1 275 2 52 1 319 1 222 1 247 1 57 1 252 1 149 1 119 2 327 1 257 1 83 1 68 2 311 1 193 1 179 1 195 1 
142 1 275 2 200 1 221 1 297 1 222 1 223 1 57 1 149 1 119 1 327 1 121 1 259 1 68 2 193 1 
196 1 199 1 142 1 275 2 168 1 75 1 222 1 223 1 170 1 57 1 280 1 149 1 119 1 327 1 32 1 259 1 154 1 68 2 193 1 128 1 
15 1 199 1 142 1 275 2 21 1 75 1 222 1 223 1 76 1 170 1 57 1 280 1 149 1 7 1 185 1 327 1 32 1 259 1 262 1 265 1 68 1 44 1 193 1 128 1 
196 1 15 1 142 1 275 2 21 1 222 1 57 1 149 1 7 1 119 1 327 1 68 1 125 1 126 1 44 1 193 1 
242 1 243 1 50 1 57 1 170 1 171 1 259 1 68 2 273 1 275 2 142 1 75 1 222 1 319 1 223 1 226 1 149 1 327 1 119 1 32 1 157 1 193 1 
273 1 142 1 275 2 222 1 319 1 247 1 57 1 114 1 149 1 327 1 119 1 68 1 193 1 
242 1 142 1 275 2 222 1 109 1 247 1 223 1 57 1 226 1 149 1 327 1 68 1 193 1 
242 1 273 1 50 1 142 1 275 2 222 1 319 1 223 1 247 1 57 1 226 1 149 1 327 1 119 1 68 2 193 1 
273 1 142 1 275 2 222 1 319 1 57 1 114 1 149 1 327 1 119 1 68 1 126 1 193 1 
242 1 142 1 275 2 222 1 109 1 223 1 57 1 226 1 149 1 327 1 68 1 126 1 193 1 
242 1 273 1 50 1 142 1 275 2 222 1 319 1 223 1 57 1 226 1 149 1 327 1 119 1 68 2 126 1 193 1 
242 1 273 1 50 1 142 1 275 2 222 1 319 1 223 1 57 1 226 1 149 1 327 1 119 1 68 2 193 1 
15 1 262 1 21 1 44 1 7 1 
15 1 129 1 21 1 44 1 7 1 
242 1 273 1 50 1 142 1 275 2 222 1 319 1 223 1 57 1 226 1 149 1 327 1 119 1 259 1 68 2 193 1 
185 1 262 1 21 1 22 1 44 1 7 1 
242 1 243 1 50 1 57 1 170 1 171 1 259 1 66 1 68 2 273 1 275 2 142 1 75 1 222 1 319 1 223 1 226 1 149 1 327 1 119 1 32 1 193 1 
242 2 50 2 248 1 250 2 60 1 307 1 261 2 68 12 309 1 272 1 273 2 275 4 145 1 222 2 319 2 223 6 226 2 149 2 327 2 119 6 83 4 123 2 193 2 127 1 335 1 195 2 
242 1 50 1 248 1 250 1 60 1 307 1 68 8 272 1 273 1 275 2 145 2 222 1 319 1 223 4 226 1 149 1 327 1 119 4 123 2 193 1 335 2 
242 1 50 1 248 1 250 1 60 1 307 1 261 1 68 8 272 1 273 1 275 4 218 1 145 1 222 2 319 1 223 4 226 1 149 2 327 2 119 4 83 1 123 2 193 2 127 1 335 2 
242 1 50 1 248 1 250 1 60 1 307 1 261 1 68 8 272 1 273 1 275 4 218 1 145 1 222 2 319 1 223 4 226 1 149 2 327 2 119 4 83 2 123 2 193 2 127 1 335 2 195 1 
242 1 50 1 0 2 52 2 248 1 250 1 252 2 60 1 257 2 261 1 307 1 68 18 311 2 272 1 179 2 273 1 275 2 145 1 222 1 319 3 223 8 226 3 149 1 327 1 119 10 83 4 123 2 193 1 335 1 195 3 
29 1 188 1 98 1 62 1 235 1 184 1 27 1 290 1 239 1 6 1 
253 1 116 1 
173 1 188 1 98 1 39 1 235 1 299 1 184 1 290 1 239 1 
1 1 56 1 
256 1 156 1 251 1 
203 2 113 1 184 1 6 1 254 1 29 1 98 1 188 1 62 1 305 1 328 1 331 1 235 1 288 1 312 1 271 1 239 1 290 1 
203 2 113 1 184 1 6 1 254 1 29 1 98 1 188 1 62 1 305 1 328 1 331 1 235 1 288 1 312 1 271 1 239 1 290 1 
203 2 113 1 184 1 6 1 254 1 29 1 98 1 188 1 62 1 305 1 328 1 331 1 235 1 288 1 312 1 271 1 239 1 290 1 
1 1 156 1 56 1 
1 1 156 1 56 1 
256 1 251 1 
256 1 156 1 251 1 
73 1 213 1 
73 1 75 2 131 1 203 1 170 2 204 1 113 1 184 1 253 1 254 1 116 1 32 2 98 1 188 1 232 1 283 1 305 1 235 1 213 1 334 1 239 1 290 1 271 1 180 1 
139 1 32 2 18 1 255 1 
198 1 21 2 22 1 183 1 115 1 58 1 7 2 229 1 258 1 206 1 9 1 38 1 263 1 329 2 191 1 158 1 44 2 333 1 100 1 
198 1 21 1 169 1 183 1 115 1 7 1 229 1 258 1 206 1 9 1 38 1 263 1 329 2 191 1 158 1 44 1 100 1 
15 1 164 1 198 1 21 1 245 1 90 1 324 1 58 1 7 1 258 1 63 1 9 1 44 1 240 1 
198 1 21 1 183 1 115 1 58 1 7 1 229 1 258 1 206 1 9 1 38 1 263 1 329 2 191 1 158 1 44 1 333 1 100 1 
161 1 
241 1 150 1 230 1 298 1 45 1 312 1 303 1 
49 1 2 1 87 1 298 1 303 1 304 1 310 1 312 2 271 1 104 1 277 1 113 1 323 1 150 1 37 1 284 1 194 1 
242 2 167 2 2 4 87 12 88 1 246 2 7 3 97 2 258 3 267 2 271 5 15 1 104 4 273 2 22 1 21 3 111 2 113 5 279 2 281 1 34 2 37 3 284 4 42 1 45 1 44 3 46 2 194 6 49 4 198 4 50 2 51 2 298 9 303 8 304 5 135 6 69 3 312 8 315 1 313 2 314 2 71 2 216 6 319 2 148 1 226 2 324 10 150 2 230 1 152 3 238 1 240 3 336 1 338 2 
49 2 242 2 130 1 50 2 167 1 166 1 2 2 87 6 298 8 3 1 91 1 303 5 8 1 97 2 304 1 135 5 65 1 271 1 312 5 216 5 104 2 273 2 221 1 319 2 111 1 25 1 113 1 281 1 226 2 150 2 121 1 37 1 284 2 192 1 194 3 
49 1 104 1 0 1 2 1 75 1 298 2 319 1 170 1 113 1 171 1 226 1 252 1 303 1 282 1 187 1 32 1 97 2 153 1 284 1 287 1 311 1 271 1 291 1 
49 1 104 1 2 1 298 1 303 1 150 1 230 1 284 1 45 1 312 1 
273 2 216 5 242 2 50 2 167 1 87 10 319 2 298 5 226 2 303 5 97 2 135 5 312 5 194 5 71 1 
150 1 304 1 37 1 113 1 312 1 271 1 
164 1 49 1 198 1 2 2 298 2 245 1 303 2 7 4 61 1 258 1 304 4 306 1 271 3 15 2 104 2 17 1 21 4 111 2 113 3 148 1 281 2 324 1 37 2 82 1 284 2 41 1 44 4 238 2 240 1 
15 1 32 1 262 1 21 1 75 1 170 1 224 1 44 1 171 1 7 1 291 1 
216 2 49 1 104 1 2 1 87 4 298 1 111 1 281 1 303 2 150 2 135 2 284 1 312 4 179 1 194 2 
141 1 188 1 98 1 
29 1 80 1 188 1 98 1 73 1 
141 1 188 1 98 1 
141 1 188 1 98 1 
188 1 98 1 64 1 
188 1 98 1 64 1 
188 1 98 1 64 1 
188 1 98 1 
235 1 290 1 
181 1 0 1 275 4 52 1 319 1 222 2 223 4 226 1 252 1 149 2 119 4 327 2 257 1 261 1 83 3 68 8 311 1 193 2 179 1 195 2 
241 1 0 1 52 1 319 1 223 3 252 1 226 1 119 3 257 1 83 2 68 6 311 1 179 1 195 2 
242 1 273 1 50 1 275 2 222 1 319 1 223 2 226 1 149 1 327 1 119 2 261 1 83 2 68 4 11 1 193 1 195 1 
242 1 273 1 50 1 244 1 221 1 319 1 223 4 91 1 226 1 119 3 121 2 261 1 83 2 68 7 195 1 
242 2 0 2 50 2 244 1 200 1 52 1 252 2 257 1 261 4 68 23 311 1 179 1 214 1 181 2 273 2 275 4 221 2 319 3 222 2 223 12 226 3 149 2 119 11 327 2 121 2 83 9 122 1 193 2 195 5 
121 1 68 1 223 1 
119 1 221 1 68 1 
273 1 242 1 50 1 275 2 222 1 319 1 223 3 226 1 149 1 327 1 119 3 261 1 83 3 68 6 193 1 11 1 71 1 195 2 
242 2 130 1 50 2 166 1 3 1 248 1 91 1 8 1 261 1 68 12 273 2 275 2 221 1 222 1 319 2 223 6 226 2 149 1 327 1 119 6 121 1 83 2 192 1 193 1 195 1 
0 1 319 1 223 3 226 1 252 1 119 3 261 1 83 2 68 6 311 1 195 1 
181 1 0 1 275 2 52 1 222 1 223 2 252 1 149 1 119 1 327 1 257 1 261 1 83 2 122 1 68 3 193 1 195 1 
0 2 275 2 222 1 319 2 223 5 248 1 252 2 226 2 149 1 327 1 187 1 119 5 261 2 83 5 68 10 193 1 311 1 195 3 
273 1 275 2 222 1 319 1 248 1 149 1 327 1 119 2 261 1 83 1 68 2 193 1 
242 1 273 1 50 1 275 2 222 1 319 1 223 2 248 1 226 1 149 1 327 1 119 2 261 1 83 2 68 4 193 1 195 1 
181 1 0 1 275 6 222 3 223 2 248 1 252 1 149 3 327 3 119 1 261 1 122 1 83 2 68 3 127 1 193 3 195 1 
242 3 0 3 50 3 244 1 52 1 248 1 91 1 252 3 257 1 261 5 68 34 311 2 11 1 179 1 181 2 273 3 275 10 221 3 222 5 319 5 223 18 226 5 149 5 327 5 119 16 121 4 40 1 122 1 83 12 286 1 160 1 127 1 193 5 195 7 
0 1 52 1 3 1 248 1 91 1 252 1 257 1 68 8 311 1 179 1 275 2 221 1 319 1 222 1 223 4 226 1 149 1 327 1 119 4 121 1 83 2 193 1 195 2 
0 1 50 1 244 1 52 1 3 1 248 1 91 1 252 1 257 1 261 1 68 11 311 1 11 1 179 1 273 1 275 4 221 1 222 2 319 2 223 5 226 1 149 2 327 2 119 6 121 2 83 3 193 2 195 2 
242 2 0 1 130 1 50 2 166 1 52 1 3 1 248 1 91 1 252 1 8 1 257 1 261 1 68 19 311 1 11 1 179 1 181 1 273 2 275 6 221 1 222 3 319 3 223 10 226 3 149 3 327 3 119 9 121 1 83 4 192 1 193 3 195 3 
242 1 0 1 130 1 50 2 166 1 52 1 3 1 248 1 91 1 252 1 8 1 257 1 261 2 68 17 311 1 11 1 179 1 181 1 273 2 275 6 221 1 222 3 319 3 223 7 226 2 149 3 327 3 119 10 121 1 83 4 192 1 193 3 195 2 
0 1 52 1 3 1 248 1 91 1 252 1 257 1 68 8 311 1 179 1 275 2 221 1 319 1 222 1 223 4 226 1 149 1 327 1 119 4 121 1 83 2 193 1 195 2 
242 2 130 1 50 2 166 1 3 1 248 1 91 1 8 1 261 1 68 12 273 2 275 2 221 1 222 1 319 2 223 6 226 2 149 1 327 1 119 6 121 1 83 1 192 1 193 1 
242 1 0 1 130 1 50 2 166 1 52 1 3 1 248 1 91 1 252 1 8 1 257 1 261 2 68 18 311 1 11 1 179 1 181 2 273 2 275 8 221 1 222 4 319 3 223 8 226 2 149 4 327 4 119 10 121 1 83 5 192 1 193 4 195 3 
242 2 130 1 50 3 166 1 3 1 248 1 91 1 8 1 261 3 68 16 181 2 273 3 275 8 221 1 222 4 319 3 223 7 226 2 149 4 327 4 119 9 121 1 83 6 192 1 193 4 127 1 195 3 
0 3 52 1 319 1 223 4 226 1 252 3 119 3 257 2 261 3 83 6 68 7 311 1 195 3 
242 1 0 1 130 1 50 2 166 1 52 1 3 1 248 1 91 1 252 1 8 1 257 1 261 1 68 18 311 1 179 1 181 2 273 2 275 8 221 1 222 4 319 3 223 8 226 2 149 4 327 4 119 10 121 1 83 4 192 1 193 4 127 1 195 3 
32 1 189 1 190 1 233 1 266 1 4 1 99 1 
103 1 54 1 147 1 4 1 30 1 32 1 189 1 190 1 233 1 266 1 159 1 99 1 
164 1 241 1 15 1 198 1 258 1 21 1 245 1 44 1 324 1 240 1 7 1 
15 1 198 1 21 1 75 1 170 1 321 1 324 1 7 1 32 1 258 1 208 1 69 1 44 1 128 1 240 1 
198 1 21 1 75 1 170 1 321 1 324 1 7 1 32 1 258 1 208 1 69 1 44 1 128 1 238 1 240 1 
198 1 21 1 75 1 170 1 321 1 324 1 7 1 32 1 258 1 136 1 69 1 44 1 128 1 238 1 240 1 
15 1 198 1 51 1 21 3 55 1 113 2 279 1 324 4 7 3 150 1 304 1 258 1 152 1 330 1 69 1 44 3 332 1 312 1 271 2 238 1 46 1 240 1 338 1 
15 1 198 1 51 1 21 3 55 1 113 2 279 1 324 4 7 3 150 1 304 1 258 1 152 1 69 1 44 3 312 1 271 2 238 1 46 1 240 1 314 1 338 1 
140 1 198 1 258 1 21 1 44 1 7 1 
15 2 274 2 198 4 318 1 276 1 219 2 22 1 21 3 5 1 324 3 7 3 258 2 69 2 268 1 44 3 43 1 240 3 102 1 336 1 
32 1 75 1 170 1 128 1 
49 2 2 2 298 1 246 1 204 1 303 1 7 1 304 2 312 1 271 3 313 1 314 1 15 1 104 2 21 1 113 3 279 1 148 1 324 2 150 1 230 1 34 1 37 1 152 1 284 2 45 1 44 1 46 1 
140 1 198 2 22 1 21 2 88 1 324 2 7 2 258 1 69 1 44 2 46 1 240 1 336 1 
15 1 164 1 198 1 21 4 22 1 245 1 112 1 55 1 324 1 7 4 258 1 44 4 240 1 
47 1 274 1 198 2 219 1 318 1 21 2 324 1 7 2 258 1 69 1 44 2 238 1 240 1 102 1 
15 1 198 1 258 1 263 1 329 1 191 1 21 1 158 1 44 1 7 1 
198 2 274 1 219 1 318 1 22 1 21 2 115 1 324 2 7 2 186 1 258 1 69 1 44 2 268 1 240 2 102 1 
15 1 198 2 274 1 219 1 318 1 21 2 22 1 5 1 324 2 7 2 258 1 69 1 44 2 268 1 240 2 102 1 
15 1 198 2 274 1 219 1 318 1 21 2 22 1 300 1 324 2 7 2 258 1 69 1 44 2 268 1 240 2 102 1 
15 1 198 1 21 1 75 1 170 1 321 1 324 1 7 1 32 1 258 1 136 1 69 1 44 1 128 1 240 1 
274 1 198 2 219 1 21 1 324 1 7 1 258 1 69 1 44 1 43 1 238 1 240 1 336 1 
96 1 105 1 84 1 237 1 
96 1 105 1 84 1 204 1 113 1 237 1 212 1 86 1 271 1 138 1 
139 1 105 1 32 1 18 1 84 1 237 1 255 1 
84 1 212 1 86 1 
241 1 264 1 225 1 92 1 
31 1 264 1 322 1 225 1 92 1 211 1 133 1 
293 1 19 1 133 1 
295 1 23 2 320 1 322 3 92 1 225 1 133 3 78 1 81 1 31 1 264 1 211 1 
95 1 197 1 31 1 264 1 322 2 225 1 92 1 211 1 133 2 
94 1 31 1 295 1 206 1 263 1 329 1 264 1 322 1 211 1 133 1 79 1 
31 1 295 1 264 1 322 1 225 1 211 1 133 1 
31 1 295 1 322 1 225 2 92 1 211 1 133 1 
295 1 322 2 146 1 225 1 133 2 134 1 31 2 264 1 211 2 337 1 
295 1 322 3 225 1 92 1 133 3 79 1 95 2 31 1 33 1 264 2 85 1 175 1 211 1 
295 1 322 2 225 1 92 1 133 2 95 1 31 1 206 1 264 1 329 2 263 1 158 1 211 1 289 1 100 1 
197 1 295 1 322 4 225 1 92 1 133 4 79 1 95 2 31 2 33 1 264 2 285 1 211 2 
31 1 295 1 264 1 322 1 225 1 92 1 211 1 133 1 
23 1 320 1 322 4 225 2 92 2 78 1 133 4 79 1 120 1 95 2 31 1 33 1 264 3 211 1 
72 1 295 1 165 1 322 2 225 1 92 1 227 1 133 2 95 1 31 1 264 1 211 1 
295 1 20 1 23 2 320 2 322 3 92 1 225 1 78 1 133 3 31 1 264 1 211 1 
264 2 301 1 93 1 70 2 
31 1 295 1 234 1 322 1 211 1 133 1 
95 1 31 1 295 1 264 1 322 2 175 1 225 1 92 1 211 1 133 2 
231 1 
31 1 295 1 264 1 322 1 225 1 92 1 211 1 133 1 
95 1 31 1 295 1 264 1 23 1 322 3 175 1 225 1 92 1 211 1 133 3 
120 1 33 1 264 1 79 1 
264 1 225 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 333 (163,358) (163,358) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 333 (163,358) (163,358) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 333 (163,358) (163,358) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 333 (163,358) (163,358) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArrayIndexOutOfBoundsException 333 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException 333 51 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException 333 51 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 6 64 73 124 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 6 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 6 64 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 6 64 199 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 6 64 73 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 6 64 73 312 60 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 6 64 73 312 60 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 6 64 73 312 135 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 6 64 189 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 6 64 189 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 6 64 73 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | ASSIGN | 1389 | = null
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> 1
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 3650 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | RETURN | 2675 | return null
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6370 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3115 | < -> <=
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12227 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V | STATEMENT | 842 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
183 1 22 2 163 1 166 3 228 2 32 1 169 1 8 9 126 6 79 2 80 2 371 4 192 9 150 1 373 2 237 1 11 1 195 1 13 1 375 4 67 2 44 1 202 1 357 2 333 1 358 1 
183 1 22 2 163 1 166 3 228 2 32 1 169 1 8 9 126 6 79 2 80 2 371 4 192 9 150 1 373 2 237 1 11 1 195 1 13 1 375 4 67 2 44 1 202 1 357 2 333 1 358 1 
183 1 22 2 163 1 166 3 228 2 32 1 169 1 8 9 126 6 79 2 80 2 371 4 192 9 150 1 373 2 237 1 11 1 195 1 13 1 375 4 67 2 44 1 202 1 357 2 333 1 358 1 
183 1 22 2 163 1 166 2 228 2 32 1 169 1 8 7 126 4 79 2 80 2 371 3 192 7 150 1 373 2 11 1 195 1 13 1 375 3 67 2 44 1 202 1 357 1 333 1 358 1 
237 1 22 1 375 2 166 1 67 1 169 1 8 4 126 3 79 1 202 1 371 2 80 1 357 2 192 4 333 1 373 1 
22 1 254 1 217 1 164 1 210 1 67 1 228 1 32 1 169 1 279 1 147 1 8 1 79 1 192 1 373 1 
22 2 169 1 195 1 279 1 8 3 126 1 254 1 371 2 375 1 166 1 192 3 228 1 373 2 
237 1 11 1 22 2 51 1 195 1 225 1 375 4 166 3 67 1 228 1 169 1 8 9 126 7 79 1 202 1 80 1 371 4 357 2 192 9 333 1 150 1 373 2 
237 1 11 1 22 2 51 1 195 1 225 1 375 4 166 3 67 1 228 1 169 1 8 9 126 7 79 1 202 1 80 1 371 4 357 2 192 9 333 1 150 1 373 2 
63 1 301 1 122 1 
63 1 235 2 132 1 
42 1 230 2 331 1 158 2 90 2 193 2 4 2 267 2 
72 1 250 1 0 1 53 1 338 1 339 1 54 1 255 2 25 1 167 1 363 2 4 3 5 1 365 1 230 2 35 1 59 1 370 1 233 1 193 2 102 1 267 2 133 1 273 1 240 1 66 2 306 1 109 2 42 1 354 1 87 2 331 1 158 3 90 2 206 1 224 1 311 1 
103 1 230 1 331 1 158 1 90 1 61 1 193 1 4 1 267 1 181 1 
103 1 336 1 161 1 63 1 122 1 4 1 30 1 108 1 156 1 190 1 113 1 158 1 267 1 335 1 
103 1 336 1 63 1 122 1 108 2 4 1 30 1 156 1 230 1 113 1 158 1 90 1 193 1 267 1 335 2 
212 1 234 1 108 1 335 1 21 1 
212 1 57 1 63 1 122 1 108 2 335 2 249 1 21 1 
212 1 108 1 335 1 
103 1 108 1 4 1 368 1 230 1 331 1 158 1 61 1 90 1 193 1 335 1 267 1 181 1 21 1 
63 1 
212 1 86 1 63 1 122 1 108 2 335 2 249 1 21 1 
2 1 93 2 252 1 63 1 317 1 146 1 122 1 108 5 157 2 212 2 170 1 58 1 125 1 45 2 99 1 37 1 335 5 249 1 21 2 
42 1 301 1 
172 1 4 2 42 2 230 1 158 2 90 1 193 1 267 2 324 1 
229 1 215 1 203 1 
250 1 133 1 0 1 53 1 339 1 216 1 54 1 363 1 4 1 109 1 42 1 87 1 158 1 206 1 102 1 311 1 
172 1 360 1 121 2 353 1 4 5 42 1 85 1 230 4 190 1 158 5 356 1 90 1 193 4 267 5 
103 1 230 2 158 2 265 1 193 2 4 2 267 2 181 1 
250 1 0 1 133 1 215 1 53 1 339 1 54 1 121 1 363 1 4 2 109 1 230 1 87 1 158 2 356 1 206 1 193 1 102 1 267 1 311 1 
42 1 230 3 121 1 158 3 90 1 193 3 4 3 267 3 
103 1 230 1 158 1 193 1 4 1 267 1 181 1 
103 1 172 1 230 1 158 1 90 1 193 1 4 1 267 1 324 1 
72 1 250 1 0 1 336 1 53 1 338 1 339 1 54 1 121 1 255 2 25 1 167 1 363 1 4 4 30 1 230 3 59 1 370 1 233 1 193 3 102 1 267 3 103 1 133 1 172 1 151 1 273 1 240 1 327 1 66 1 108 1 109 1 42 1 156 1 87 1 113 1 331 1 158 4 356 1 206 1 90 2 224 1 335 1 311 1 
42 1 230 1 190 1 360 1 121 1 158 2 193 1 4 2 267 2 
103 1 172 1 336 1 63 1 121 2 327 1 108 1 4 3 30 1 156 1 230 3 113 1 246 1 158 3 356 1 90 1 193 3 335 1 267 3 
172 1 229 1 215 1 230 2 121 1 158 2 90 1 193 2 4 2 267 2 
250 1 133 1 0 1 53 1 339 1 54 1 363 1 4 1 109 1 42 1 87 1 158 1 206 1 102 1 311 1 
250 1 0 1 53 1 339 1 54 1 363 1 4 1 109 1 42 1 34 1 87 1 158 1 102 1 311 1 294 1 
72 1 74 1 338 1 255 2 229 2 59 1 370 1 233 1 372 1 215 2 273 2 326 1 66 4 306 2 307 1 243 1 280 1 332 1 221 1 203 2 355 1 378 1 222 1 224 1 
103 1 230 1 158 1 265 1 193 1 30 1 4 1 267 1 
68 1 46 1 
68 1 46 1 
33 1 115 1 
33 1 115 1 
33 1 115 1 
68 1 46 1 351 1 
68 1 46 1 130 1 
33 1 68 2 46 2 309 1 277 1 115 1 
68 1 46 1 351 1 
68 1 46 1 351 1 
68 1 46 1 165 1 
68 1 46 1 165 1 
68 1 46 1 165 1 
251 1 118 1 286 1 285 1 227 1 4 2 230 2 367 1 344 1 100 1 262 1 130 1 263 1 193 2 38 1 267 2 272 1 300 1 108 1 42 1 68 1 46 1 158 2 335 1 
251 2 118 2 337 1 63 1 137 1 286 1 83 1 108 2 242 1 367 2 43 1 68 2 344 3 46 2 262 2 214 1 309 1 236 2 335 2 
79 1 80 1 67 1 
79 1 210 1 67 1 
110 1 330 1 80 2 205 1 210 1 67 3 
239 1 330 1 80 1 205 1 210 1 67 2 
330 1 80 1 205 2 210 1 67 2 
93 1 55 1 317 1 285 1 122 1 212 1 170 3 58 2 149 1 372 1 235 3 132 1 268 2 347 1 272 1 63 2 300 1 107 2 40 2 108 5 377 1 328 1 307 1 157 1 278 1 332 1 45 1 48 1 355 1 335 5 249 1 21 4 
160 5 93 2 76 1 3 1 55 2 317 1 285 4 168 1 122 1 212 6 289 1 170 8 58 6 149 1 37 1 372 3 235 9 234 5 132 3 268 6 63 5 40 6 108 9 328 2 307 3 157 2 278 3 219 1 332 3 45 2 355 3 141 1 335 9 21 7 249 1 
93 1 55 1 285 1 122 1 170 3 58 2 37 1 372 1 235 4 132 2 268 2 347 1 63 3 107 1 377 1 108 3 40 2 328 1 157 1 307 1 278 1 332 1 45 1 355 1 335 3 21 2 
93 1 76 1 55 1 285 2 122 1 289 1 170 5 58 4 37 1 372 2 235 7 132 3 268 4 347 1 63 4 107 2 40 4 108 4 377 1 328 1 157 1 307 2 278 2 219 1 332 2 45 1 355 2 335 4 21 3 
145 1 301 1 102 1 
142 1 102 1 
184 1 
53 1 54 1 102 1 
260 1 102 1 
53 1 102 1 
53 1 244 1 54 1 316 1 145 2 102 3 
74 3 187 1 75 1 144 1 273 3 318 1 152 1 66 7 306 4 243 2 97 1 355 1 129 1 379 1 372 1 20 2 71 1 
74 3 187 1 75 1 144 1 273 3 318 1 152 1 66 7 306 4 243 2 97 1 355 1 129 1 379 1 372 1 20 2 71 1 
74 3 187 1 75 1 144 1 273 3 318 1 152 1 66 7 306 4 243 2 97 1 355 1 129 1 379 1 372 1 71 1 334 1 20 2 
182 1 74 10 23 1 159 1 187 2 75 2 338 1 144 1 318 1 255 2 97 5 59 1 370 1 129 1 148 1 372 4 345 1 322 1 238 4 348 3 273 15 66 31 152 2 15 1 306 16 307 3 243 5 278 3 332 3 355 4 379 2 224 1 71 1 20 3 
74 4 1 1 338 2 75 1 187 1 255 4 318 1 97 1 59 2 370 2 148 1 129 1 372 1 273 4 66 9 152 1 306 5 243 3 355 1 49 1 379 1 224 2 20 2 71 1 
250 1 22 1 0 1 254 1 363 1 210 1 228 1 169 1 287 1 213 1 231 1 8 2 126 1 79 1 371 1 80 1 192 2 266 1 373 1 173 1 67 2 109 1 110 1 279 1 87 1 70 1 308 1 18 1 310 1 282 1 
250 1 22 1 0 1 209 1 254 1 362 1 363 1 210 1 228 1 287 1 213 1 231 1 8 3 126 2 79 1 371 1 80 1 192 3 373 1 173 1 352 1 67 2 109 1 110 1 279 1 87 1 70 1 308 1 18 1 282 1 
250 1 0 1 254 1 362 1 363 1 210 1 228 1 213 1 231 1 8 2 126 2 79 1 371 1 80 1 192 2 173 1 352 1 67 2 109 1 110 1 279 1 87 1 70 1 18 1 282 1 
250 1 0 1 22 1 209 1 186 1 53 1 226 1 162 1 24 1 363 1 228 2 8 1 231 2 192 1 102 1 373 1 109 1 87 1 70 2 18 2 179 1 380 1 311 1 
250 1 0 1 22 1 173 1 352 1 210 1 363 1 67 2 228 1 109 1 110 1 169 1 287 1 213 1 87 1 8 1 231 1 70 1 308 1 79 1 80 1 266 1 192 1 18 1 282 1 373 1 
82 1 
0 1 336 1 53 1 93 1 55 1 4 1 6 1 98 1 190 1 58 2 235 1 101 1 293 1 102 1 103 1 64 1 299 1 108 4 109 2 157 1 156 1 201 1 113 1 158 1 247 1 249 2 311 2 73 1 250 1 161 1 24 1 162 1 317 1 26 1 363 2 319 2 364 1 30 1 211 1 366 1 212 3 170 2 124 1 132 1 267 1 176 1 177 1 87 2 45 1 91 1 335 4 
103 1 336 1 161 1 26 1 319 2 30 1 108 2 4 1 6 1 366 1 156 1 190 1 113 1 158 1 91 1 101 1 293 1 335 2 267 1 
336 1 161 1 26 1 319 3 4 1 30 1 122 1 366 1 212 1 190 1 293 1 101 1 267 1 103 1 81 1 63 1 108 3 156 1 86 1 113 1 158 1 91 1 335 3 249 1 
103 1 336 1 161 1 64 1 26 1 319 2 30 1 108 2 4 1 6 1 366 1 156 1 190 1 113 1 158 1 91 1 101 1 293 1 335 2 267 1 
103 1 336 1 161 1 64 1 26 1 319 2 30 1 4 1 108 3 6 1 366 1 156 1 212 1 86 1 199 1 190 1 113 1 158 1 91 1 101 1 293 1 335 3 267 1 249 1 
73 1 336 1 161 1 93 1 317 1 26 1 319 2 364 1 4 1 30 1 211 1 6 1 366 1 212 1 170 1 190 1 58 1 235 1 293 1 101 1 132 1 267 1 103 1 64 1 299 1 108 3 157 1 156 1 177 1 113 1 45 1 158 1 91 1 247 1 335 3 249 1 
73 1 116 1 336 1 161 1 93 1 317 1 26 1 364 1 319 2 4 1 30 1 211 1 6 1 366 1 212 1 170 1 190 1 58 1 60 1 293 1 101 1 132 1 267 1 103 1 64 1 299 1 108 3 156 1 157 1 177 1 113 1 45 1 158 1 91 1 247 1 335 3 249 1 312 1 
73 1 116 1 336 1 161 1 93 1 317 1 26 1 364 1 319 2 4 1 30 1 211 1 6 1 366 1 212 1 170 1 190 1 58 1 60 1 293 1 101 1 132 1 267 1 103 1 64 1 299 1 108 3 156 1 157 1 177 1 113 1 45 1 158 1 91 1 247 1 335 3 249 1 312 1 
73 1 336 1 161 1 93 1 317 1 26 1 319 2 4 1 30 1 211 1 6 1 366 1 212 1 170 1 190 1 58 1 235 1 10 1 293 1 101 1 267 1 295 1 103 1 298 1 135 1 64 1 305 1 108 3 156 1 157 1 113 1 45 1 158 1 91 1 247 1 335 3 249 1 312 1 
103 1 336 1 161 1 64 1 189 1 26 1 319 2 30 1 108 2 4 1 6 1 366 1 156 1 190 1 113 1 158 1 91 1 101 1 293 1 335 2 267 1 
103 1 336 1 161 1 64 1 189 1 26 1 319 2 30 1 108 2 4 1 6 1 366 1 156 1 190 1 113 1 158 1 91 1 101 1 293 1 335 2 267 1 
73 1 336 1 161 1 93 1 317 1 26 1 319 2 4 1 30 1 211 1 6 1 366 1 212 1 170 1 190 1 58 1 235 1 293 1 101 1 10 1 267 1 103 1 298 1 64 1 305 1 108 3 157 1 156 1 113 1 45 1 158 1 91 1 247 1 335 3 249 1 
72 1 74 2 75 1 338 1 187 1 318 1 255 2 229 1 59 1 370 1 129 1 233 1 372 1 215 1 273 3 301 1 66 6 306 3 42 2 243 2 203 1 355 1 222 1 224 1 71 1 20 1 
182 1 72 1 74 2 338 2 255 4 25 1 365 1 229 4 97 1 342 1 59 2 370 2 128 1 233 2 372 2 270 1 238 3 215 11 348 3 273 6 198 1 66 14 15 1 306 8 42 1 307 2 243 1 278 2 332 1 203 11 355 1 224 2 207 1 
250 1 72 1 0 1 53 1 339 1 338 1 54 1 121 1 255 2 25 1 363 1 28 1 4 2 365 1 229 1 230 1 370 1 59 1 233 1 193 1 102 1 267 1 133 1 216 1 349 1 273 1 66 2 109 1 155 1 306 1 42 1 87 1 158 2 356 1 206 1 224 1 207 1 311 1 
0 1 53 1 187 1 338 2 339 1 54 1 4 2 229 6 97 1 230 1 59 2 233 2 193 1 102 1 103 1 240 1 66 17 109 1 306 8 307 2 243 4 200 1 158 2 203 6 356 1 355 3 206 1 207 1 71 1 248 2 311 1 72 2 250 1 117 1 74 5 75 1 121 1 318 1 255 4 25 1 363 1 78 1 127 1 370 2 372 3 267 1 133 1 215 6 273 9 275 2 278 2 87 1 220 1 332 2 223 1 224 2 
250 2 72 2 0 2 53 2 338 2 253 1 121 1 162 1 24 1 255 4 25 1 363 8 56 1 4 1 365 1 288 1 230 1 232 1 59 2 370 2 233 2 193 1 267 1 102 3 12 1 136 1 273 1 352 1 66 2 109 8 306 1 178 1 354 2 87 7 158 1 222 1 224 2 310 1 311 2 
72 1 74 1 338 1 255 2 4 1 229 1 230 1 59 1 370 1 233 1 372 1 193 1 267 1 172 1 215 1 374 1 273 2 66 3 306 1 307 1 243 1 278 1 332 1 158 1 203 1 355 1 90 1 224 1 207 1 
72 1 74 1 215 1 338 1 255 2 66 2 306 2 307 1 229 1 97 1 370 1 59 1 203 1 378 1 222 1 233 1 224 1 372 1 
72 1 74 1 215 1 338 1 273 2 255 2 66 2 243 1 229 1 332 1 370 1 59 1 203 1 221 1 355 1 222 1 233 1 224 1 
72 1 74 2 338 1 255 2 229 2 97 1 59 1 370 1 233 1 372 1 215 2 273 2 66 4 306 2 307 1 243 1 278 1 332 1 203 2 355 1 222 1 224 1 
72 1 74 1 215 1 338 1 136 1 255 2 66 2 306 2 307 1 229 1 97 1 370 1 59 1 203 1 378 1 233 1 224 1 372 1 
72 1 74 1 215 1 338 1 136 1 273 2 255 2 66 2 243 1 229 1 332 1 370 1 59 1 203 1 221 1 355 1 233 1 224 1 
72 1 74 2 338 1 255 2 229 2 97 1 59 1 370 1 233 1 372 1 215 2 136 1 273 2 66 4 306 2 307 1 243 1 278 1 332 1 203 2 355 1 224 1 
72 1 74 2 215 2 338 1 273 2 255 2 66 4 306 2 307 1 243 1 229 2 97 1 278 1 332 1 370 1 59 1 203 2 355 1 233 1 224 1 372 1 
250 1 72 1 0 1 53 1 339 1 338 1 54 1 255 2 25 1 363 1 4 1 365 1 370 1 59 1 233 1 102 1 133 1 240 1 273 1 66 2 306 1 109 1 42 1 87 1 158 1 206 1 224 1 311 1 
250 1 72 1 0 1 53 1 339 1 338 1 54 1 255 2 25 1 363 1 4 1 365 1 34 1 370 1 59 1 233 1 102 1 294 1 273 1 66 2 306 1 109 1 42 1 112 1 87 1 158 1 224 1 311 1 
72 1 74 2 338 1 255 2 229 2 97 1 59 1 370 1 233 1 372 1 215 2 273 2 66 4 306 2 307 1 243 1 278 1 332 1 203 2 355 1 224 1 207 1 
250 1 72 1 74 2 0 1 53 1 339 1 338 1 54 1 255 2 363 1 4 1 229 2 97 1 78 1 370 1 59 1 233 1 372 1 102 1 133 1 215 2 273 2 240 1 66 4 306 2 109 1 307 1 243 1 278 1 87 1 332 1 158 1 203 2 355 1 206 1 224 1 310 1 
72 1 74 1 338 1 255 2 4 1 229 1 97 1 230 1 59 1 370 1 171 1 233 1 372 1 193 1 267 1 172 1 215 1 273 1 66 3 306 2 307 1 278 1 332 1 158 1 203 1 355 1 90 1 224 1 207 1 
182 3 74 8 119 1 187 1 75 1 338 3 188 1 318 1 77 4 255 6 95 2 256 1 341 1 97 4 59 3 370 3 129 1 148 1 372 5 104 1 62 1 346 1 238 4 348 3 273 21 350 1 197 1 241 1 66 41 15 1 138 1 306 20 307 4 243 4 278 4 69 1 332 4 355 5 49 1 224 3 20 1 71 1 180 1 
182 3 338 3 187 1 188 1 95 2 341 1 97 2 59 3 148 1 62 1 104 1 238 4 346 1 348 3 350 1 66 38 241 1 197 1 15 1 306 20 307 4 243 4 69 1 355 4 71 1 20 1 74 6 119 1 75 1 255 6 77 4 318 1 256 1 370 3 129 1 372 5 273 18 138 1 278 4 332 3 49 1 224 3 180 1 
182 2 74 13 119 1 187 1 75 1 338 1 188 1 318 1 77 3 255 2 95 1 341 1 97 6 59 1 370 1 128 2 129 1 372 8 104 1 62 1 346 1 238 4 348 4 273 24 350 1 197 1 241 1 66 50 15 2 138 1 306 26 307 7 243 7 278 7 332 7 355 8 49 1 224 1 20 1 71 1 180 1 
182 1 74 6 119 1 338 2 188 1 77 2 255 4 95 1 256 1 97 3 59 2 370 2 372 3 346 2 238 2 348 1 273 10 105 1 241 1 66 19 15 1 138 1 306 9 307 3 243 3 278 3 332 3 355 3 49 1 224 2 
182 2 74 2 119 1 338 2 188 1 77 4 255 4 95 2 341 1 97 1 59 2 370 2 148 1 372 3 62 1 104 1 346 1 238 2 348 2 273 12 350 1 197 1 241 1 66 26 138 2 306 14 307 3 243 1 278 3 332 2 355 2 49 1 224 2 180 1 
251 1 118 1 367 1 337 1 68 1 284 1 46 1 262 1 83 1 309 1 
130 1 227 1 
84 1 251 1 118 1 367 1 174 1 343 1 68 1 46 1 262 1 
258 1 351 1 
16 1 165 1 277 1 
251 1 118 1 337 1 63 1 137 1 286 1 83 1 108 1 242 1 367 1 43 1 68 1 344 2 46 1 262 1 309 1 236 1 335 1 
251 1 118 1 337 1 63 1 137 1 286 1 83 1 108 1 242 1 367 1 43 1 68 1 344 2 46 1 262 1 309 1 236 1 335 1 
251 1 118 1 337 1 63 1 137 1 286 1 83 1 108 1 242 1 367 1 43 1 68 1 344 2 46 1 262 1 309 1 236 1 335 1 
258 1 351 1 277 1 
258 1 351 1 277 1 
16 1 165 1 
16 1 165 1 277 1 
263 1 38 1 
251 1 118 1 285 1 227 1 4 2 367 1 230 2 344 1 100 1 262 1 130 1 263 1 236 1 38 1 193 2 267 2 194 1 272 1 300 1 242 1 108 1 42 1 68 1 46 1 158 2 335 1 21 1 
250 1 72 1 0 1 53 1 338 1 253 1 255 2 25 1 363 2 4 2 96 1 365 1 369 1 370 1 59 1 233 1 102 1 267 2 273 1 66 2 109 2 306 1 178 1 354 2 245 1 87 2 158 2 139 1 224 1 19 1 207 1 
250 1 0 1 173 1 315 1 352 1 196 1 210 1 363 2 67 2 109 2 110 1 87 2 231 1 308 1 79 1 80 1 310 1 131 1 282 1 
250 1 0 1 173 1 340 1 352 1 210 1 363 1 67 2 109 1 110 1 87 1 231 1 308 1 79 1 80 1 131 1 282 1 
250 1 0 1 53 1 87 1 231 1 24 1 162 1 175 1 196 1 363 1 179 1 102 1 109 1 311 1 
250 1 0 1 173 1 315 1 352 1 196 1 210 1 363 1 67 2 109 1 110 1 87 1 231 1 308 1 79 1 80 1 131 1 282 1 
291 1 
170 1 252 1 58 1 63 1 301 1 146 1 122 1 
93 1 317 1 364 1 122 1 212 1 170 1 58 1 235 1 132 1 299 1 63 2 108 1 157 1 177 1 45 1 335 1 249 1 
0 2 142 2 53 1 93 2 54 1 55 1 145 1 58 3 9 1 235 6 102 4 63 3 303 1 108 2 109 1 157 2 307 1 113 1 355 1 248 1 311 1 249 1 250 1 316 1 317 2 363 1 27 1 212 2 170 4 321 1 36 1 372 1 323 1 132 3 268 3 39 1 40 3 278 1 87 1 45 2 332 1 335 2 
182 1 314 1 93 2 55 1 317 2 122 2 341 1 212 1 170 8 58 5 372 2 235 6 132 3 268 5 62 1 104 1 238 1 348 1 63 5 350 1 14 1 108 1 40 5 157 2 307 2 278 2 201 1 45 2 332 2 47 1 140 2 355 2 335 1 249 1 180 1 
116 1 93 1 187 1 75 1 317 1 4 1 368 1 230 1 170 2 58 1 61 1 372 1 193 1 267 1 103 1 108 1 157 1 331 1 45 1 47 1 158 1 140 2 355 1 223 1 90 1 335 1 181 1 
157 1 93 1 170 1 252 1 58 1 63 1 45 1 317 1 146 1 122 1 
63 2 40 2 307 1 278 1 170 2 58 2 332 1 355 1 372 1 235 4 132 2 268 2 
212 1 63 1 122 1 108 1 335 1 249 1 
250 1 0 1 185 1 53 1 93 2 52 1 55 2 162 1 24 1 317 1 363 4 29 1 212 4 98 1 170 2 58 2 259 2 37 1 102 1 176 1 108 3 109 4 157 2 87 4 201 2 45 2 335 3 311 2 249 2 
250 1 72 1 0 1 53 1 339 1 338 1 54 1 255 2 25 1 363 1 167 1 4 3 230 2 59 1 370 1 233 1 193 2 267 2 102 1 133 1 273 1 240 1 66 1 109 1 42 1 87 1 331 1 158 3 90 2 206 1 224 1 311 1 
93 1 55 1 63 2 317 1 40 1 122 1 157 1 170 1 201 1 58 1 45 1 235 2 132 1 
251 1 118 1 290 1 
251 1 118 1 83 1 292 1 38 1 
251 1 118 1 290 1 
251 1 118 1 290 1 
251 1 118 1 31 1 
251 1 118 1 31 1 
251 1 118 1 31 1 
251 1 118 1 
68 1 46 1 
182 1 74 2 338 1 75 1 187 1 255 2 318 1 59 1 370 1 129 1 372 1 62 1 238 1 348 1 273 4 66 8 306 4 243 2 355 1 49 1 224 1 20 1 71 1 
182 1 74 3 187 1 75 1 338 2 318 1 255 4 97 1 59 2 370 2 129 1 372 2 62 1 238 2 348 1 273 5 376 1 66 11 15 1 306 6 307 1 243 2 278 1 355 1 49 1 224 2 20 1 71 1 
182 1 74 4 187 1 75 1 338 3 318 1 255 6 341 1 97 1 59 3 370 3 129 1 148 1 372 3 62 1 104 1 238 1 348 1 273 10 350 1 376 1 66 19 306 9 307 2 243 3 278 2 332 2 355 3 49 1 224 3 20 1 71 1 180 1 
182 1 74 1 338 2 255 4 341 1 59 2 370 2 372 2 62 1 104 1 238 1 348 1 273 4 350 1 376 1 66 11 306 7 307 2 243 1 278 2 332 1 355 1 49 1 224 2 180 1 
182 1 74 2 338 1 75 1 187 1 255 2 318 1 59 1 370 1 129 1 372 1 62 1 238 1 348 1 273 4 66 8 306 4 243 2 355 1 49 1 224 1 20 1 71 1 
182 1 74 2 338 1 255 2 341 1 97 1 59 1 370 1 372 2 62 1 104 1 238 1 348 1 273 6 350 1 66 12 306 6 307 2 243 1 278 2 332 2 355 2 49 1 224 1 180 1 
182 1 74 1 338 3 255 6 341 1 59 3 370 3 148 1 372 2 62 1 104 1 238 1 348 1 273 5 350 1 376 1 66 12 306 7 307 2 243 1 278 2 332 1 355 1 49 1 224 3 180 1 
182 1 74 4 338 3 255 6 256 1 341 1 97 2 59 3 370 3 148 1 372 2 62 1 104 1 238 1 348 1 273 5 350 1 66 12 306 7 307 2 243 2 278 2 332 1 355 1 49 1 224 3 180 1 
74 6 75 3 187 3 273 4 318 1 66 7 306 3 243 3 97 3 355 1 129 1 372 1 71 2 
182 1 74 1 338 3 255 6 256 1 341 1 59 3 370 3 148 1 372 2 62 1 104 1 238 1 348 1 273 5 350 1 66 12 306 7 307 2 243 1 278 2 332 1 355 1 49 1 224 3 180 1 
74 3 338 2 75 1 187 1 273 4 255 4 318 1 66 8 306 4 243 2 97 1 370 2 59 2 355 1 129 1 148 1 372 1 224 2 20 1 71 1 
74 2 75 1 187 1 273 3 301 1 318 1 66 6 306 3 243 2 129 1 355 1 372 1 20 1 71 1 
74 2 338 1 273 2 255 2 376 1 66 4 306 2 307 1 243 1 278 1 97 1 332 1 370 1 59 1 355 1 224 1 372 1 
182 1 74 2 238 2 348 1 273 4 66 7 15 1 306 3 307 1 243 1 278 1 97 1 332 1 355 1 372 1 
74 9 187 2 75 2 338 2 318 1 255 4 97 4 370 2 59 2 128 1 129 1 148 2 372 3 238 2 348 2 273 12 66 23 198 1 15 1 306 11 307 2 243 5 278 2 332 2 114 1 355 3 224 2 20 1 71 1 
238 1 273 1 66 1 
348 1 66 1 306 1 
74 3 338 1 273 3 255 2 376 1 66 6 306 3 307 1 243 2 278 1 97 1 332 1 59 1 370 1 355 1 224 1 372 1 248 1 
182 1 74 2 338 1 255 2 341 1 97 1 59 1 370 1 372 2 62 1 104 1 238 1 348 1 273 6 350 1 66 12 306 6 307 2 243 1 278 2 332 2 355 2 49 1 224 1 180 1 
74 2 75 1 187 1 273 3 66 6 306 3 243 1 97 1 129 1 355 1 372 1 
74 2 187 1 75 1 338 1 273 2 255 2 318 1 66 3 306 1 243 1 97 1 114 1 370 1 59 1 148 1 224 1 71 1 
74 4 338 1 75 1 187 1 273 3 255 2 66 6 306 3 243 2 97 2 59 1 370 1 355 1 49 1 223 1 224 1 372 1 
74 1 338 1 255 2 66 2 306 2 307 1 97 1 370 1 59 1 49 1 224 1 372 1 
74 2 338 1 273 2 255 2 66 4 306 2 307 1 243 1 278 1 97 1 332 1 370 1 59 1 355 1 49 1 224 1 372 1 
74 2 338 3 75 1 187 1 273 2 255 6 66 3 256 1 306 1 243 1 97 1 114 1 370 3 59 3 148 1 49 1 224 3 
182 1 23 1 74 12 159 1 187 3 75 3 338 5 318 1 255 10 256 1 97 5 59 5 370 5 129 2 148 2 372 5 322 1 238 4 348 3 273 18 376 1 66 34 15 1 306 16 307 3 243 7 278 3 114 1 332 3 355 5 49 1 224 5 20 1 71 1 
42 1 190 1 360 1 158 1 4 1 267 1 269 1 
296 1 208 1 297 1 360 1 94 1 4 1 42 1 190 1 158 1 261 1 267 1 269 1 
250 1 0 1 53 1 87 1 24 1 162 1 301 1 363 1 102 1 109 1 311 1 
250 1 0 1 53 1 339 1 54 1 121 1 363 1 4 2 109 1 42 1 230 1 87 1 158 2 206 1 193 1 102 1 267 1 311 1 
103 1 250 1 336 1 0 1 283 1 53 2 339 1 54 2 121 1 363 1 30 1 4 2 109 1 42 1 230 1 87 1 259 1 260 1 158 2 206 1 193 2 102 3 267 2 
250 1 0 1 336 1 53 2 283 1 339 1 54 2 121 1 363 2 4 2 30 1 230 1 34 1 259 1 260 1 193 2 267 2 102 3 103 1 41 1 109 2 42 1 87 2 158 2 
250 1 0 1 142 1 143 1 283 1 53 1 54 1 145 1 363 3 122 1 212 1 259 1 260 1 102 4 63 1 65 1 108 2 41 1 109 3 87 3 113 1 335 2 311 1 
250 1 0 1 142 1 53 1 283 1 54 1 63 1 145 1 363 3 303 1 122 1 108 2 41 1 109 3 212 1 87 3 113 1 259 1 260 1 335 2 102 4 311 1 
250 1 0 1 12 1 87 1 363 1 109 1 
250 2 0 3 12 1 53 2 316 1 54 1 352 1 363 7 276 1 56 1 109 7 288 1 354 1 178 1 87 6 232 1 191 1 310 1 92 1 102 3 311 2 
0 1 53 1 338 2 339 1 187 1 54 1 4 2 229 1 230 1 59 2 233 2 193 1 102 1 240 1 66 6 109 1 306 3 243 2 158 2 203 1 355 1 206 1 310 1 207 1 71 1 20 1 72 2 250 1 74 2 75 1 121 1 255 4 318 1 363 1 78 1 370 2 129 1 372 1 267 1 133 1 215 1 273 3 42 2 87 1 220 1 139 1 224 2 
142 1 93 2 52 1 252 1 317 2 145 1 146 1 363 1 122 1 212 2 170 1 58 1 9 1 36 1 102 2 63 1 39 1 303 1 108 3 109 1 157 2 87 1 113 1 45 2 335 3 311 1 21 1 249 1 
250 1 0 2 53 1 12 1 87 2 54 1 316 1 145 1 27 1 363 2 310 1 102 2 109 2 
250 1 0 1 53 1 162 1 24 1 363 4 41 1 109 4 87 4 281 1 310 1 102 1 311 1 
250 1 0 2 325 1 53 1 54 1 106 1 363 2 109 2 257 1 87 2 259 1 191 1 92 1 102 1 
250 1 0 1 87 1 79 1 210 1 363 1 67 1 282 1 109 1 311 1 
250 1 0 1 53 1 352 1 363 2 109 2 178 1 87 2 310 1 19 1 102 1 
250 2 0 2 53 2 24 1 162 1 363 5 56 1 109 5 288 1 178 1 87 4 281 1 259 1 310 1 102 3 311 1 
250 2 0 2 53 2 24 1 162 1 361 1 363 5 56 1 109 5 178 1 87 4 281 1 259 1 310 1 102 3 311 1 
250 1 0 1 53 1 339 1 54 1 121 1 363 1 4 2 109 1 42 1 230 1 34 1 87 1 158 2 193 1 102 1 267 1 311 1 
250 1 0 2 53 1 316 1 54 1 363 1 276 1 109 1 87 1 259 1 191 1 92 1 102 1 
42 1 329 1 111 1 153 1 50 1 
103 1 336 1 63 1 327 1 153 2 122 1 30 1 108 2 154 1 42 1 329 1 156 1 111 2 113 1 88 1 89 1 335 2 50 2 21 1 
96 1 329 1 245 1 369 1 158 1 153 1 4 1 267 1 50 1 
329 1 89 1 154 1 
279 1 301 1 254 1 371 1 
22 1 279 1 8 1 254 1 371 1 192 1 373 1 
70 1 192 1 228 1 
22 1 274 1 254 1 169 1 123 1 320 1 44 2 279 1 8 3 371 1 192 3 373 1 
22 1 279 1 8 2 126 1 254 1 371 1 357 1 192 2 373 1 
22 1 169 1 8 1 79 1 202 1 80 1 371 1 375 1 192 1 67 1 373 1 
22 1 169 1 279 1 8 1 371 1 192 1 373 1 
22 1 169 1 279 2 8 1 254 1 192 1 373 1 
22 2 359 1 302 1 169 1 218 1 279 1 8 2 371 1 192 2 373 2 
11 1 22 1 169 1 279 1 8 3 126 2 254 1 371 2 375 1 166 1 192 3 150 1 373 1 
22 1 254 1 210 1 67 2 169 1 110 1 279 1 8 2 126 1 79 1 371 1 80 1 264 1 192 2 373 1 
237 1 22 2 169 1 279 1 8 4 126 2 254 1 371 2 375 1 166 1 357 1 192 4 373 2 
22 1 169 1 279 1 8 1 254 1 371 1 192 1 373 1 
22 1 254 2 217 1 375 1 166 1 123 1 44 1 320 1 279 2 8 4 126 2 371 3 192 4 373 1 
22 1 169 1 271 1 225 1 279 1 8 2 126 1 254 1 371 1 192 2 304 1 373 1 
22 1 134 1 254 1 169 1 123 2 320 1 44 2 279 1 8 3 371 1 192 3 373 1 
7 2 120 1 17 1 371 2 
313 1 22 1 169 1 8 1 192 1 373 1 
22 1 169 1 279 1 8 2 126 1 254 1 371 1 192 2 150 1 373 1 
204 1 
22 1 169 1 279 1 8 1 254 1 371 1 192 1 373 1 
22 1 169 1 44 1 279 1 8 3 126 1 254 1 371 1 192 3 150 1 373 1 
217 1 371 1 375 1 166 1 
279 1 371 1 

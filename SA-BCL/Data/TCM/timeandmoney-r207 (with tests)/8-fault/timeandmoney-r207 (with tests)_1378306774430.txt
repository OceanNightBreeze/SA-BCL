#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 162 218 260 (58,188) (58,188) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 162 218 260 (58,188) (58,188) 85 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 162 218 260 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 162 218 260 233 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 162 218 260 (58,188) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 162 218 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 162 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 29 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 162 313 18 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 32 147 308 89 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 162 218 260 (58,188) (58,188) 85 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 162 218 260 233 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 162 2 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 162 2 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 162 2 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 162 2 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 162 2 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 794 | = null
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 863 | < -> <=
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7110 | stmt -> ;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> -
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4823 | stmt -> ;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3022 | < -> !=
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
241 1 203 1 142 1 248 1 122 1 252 1 310 3 111 2 12 1 115 1 262 2 36 2 16 3 
38 2 241 1 201 1 203 1 298 1 248 6 122 4 253 1 252 1 310 9 53 2 54 2 12 3 262 2 16 9 142 1 185 2 100 1 324 1 105 1 189 1 277 1 148 1 152 1 111 2 115 2 77 1 36 5 
38 2 241 1 201 1 203 1 298 1 248 6 122 4 253 1 252 1 310 9 53 2 54 2 12 3 262 2 16 9 142 1 185 2 100 1 324 1 105 1 189 1 277 1 148 1 152 1 111 2 115 2 77 1 36 5 
38 2 241 1 201 1 203 1 298 1 248 7 122 5 253 1 252 1 310 10 53 2 54 2 12 4 262 2 16 10 142 1 185 2 100 1 324 1 105 1 189 1 277 1 148 1 152 1 111 2 115 2 77 1 36 6 
38 1 241 1 201 1 203 1 298 1 248 4 122 3 253 1 252 1 310 7 53 2 54 2 12 2 262 2 16 7 142 1 185 2 100 1 324 1 189 1 277 1 148 1 152 1 111 2 115 2 77 1 36 4 
38 2 241 1 142 1 185 1 248 3 122 2 324 1 105 1 252 1 310 4 111 1 152 1 53 1 54 1 12 1 262 1 36 3 16 4 
241 1 142 1 185 1 100 1 252 1 189 1 167 1 168 1 310 2 111 1 53 1 33 1 115 1 262 1 36 1 16 2 
38 2 241 1 203 1 298 1 248 7 122 4 123 1 252 1 310 9 53 1 54 1 12 3 262 2 16 9 142 1 185 1 324 1 277 1 105 1 190 1 111 2 152 1 115 1 36 5 
38 2 241 1 203 1 298 1 248 7 122 4 123 1 252 1 310 9 53 1 54 1 12 3 262 2 16 9 142 1 185 1 324 1 277 1 105 1 190 1 111 2 152 1 115 1 36 5 
86 1 232 1 162 1 260 1 58 1 274 1 188 1 218 1 
107 1 
86 2 112 1 120 1 232 2 287 1 274 1 107 1 28 1 
121 4 162 1 249 1 1 1 250 1 124 1 309 1 84 2 49 1 85 1 6 1 170 2 86 5 260 1 58 1 91 1 218 1 98 2 225 3 229 1 145 1 325 2 274 2 188 1 28 2 107 2 73 2 112 2 232 5 75 1 287 1 
112 1 22 1 107 1 
323 1 234 2 107 1 
162 1 260 1 218 1 
233 1 162 1 260 1 218 1 
162 1 260 1 188 1 218 1 
182 1 43 1 224 1 127 1 107 1 86 1 112 1 232 1 55 1 13 1 238 1 179 1 117 1 61 1 
162 1 218 1 
86 1 232 1 274 1 28 1 255 1 
86 2 112 1 39 1 232 2 287 1 274 1 107 1 28 1 
86 1 232 1 28 1 
19 1 113 1 78 1 
19 2 154 1 284 1 76 1 78 2 200 1 
19 1 78 1 
19 1 78 1 
76 1 200 1 
76 1 200 1 
76 1 200 1 
19 1 60 1 78 1 
19 1 60 1 78 1 
19 1 60 1 78 1 
19 1 236 1 78 1 
19 1 236 1 78 1 
19 1 236 1 78 1 
86 1 330 1 19 1 131 1 232 1 268 1 162 1 78 1 327 1 231 1 95 1 
19 2 268 2 46 1 327 2 107 1 231 3 86 2 108 2 330 2 210 1 131 2 232 2 193 1 154 1 285 1 259 1 176 1 78 2 95 1 
42 1 212 2 54 1 185 2 167 1 
53 1 54 1 185 1 
53 1 185 1 167 1 
212 1 42 1 54 2 185 3 156 1 167 1 
30 1 212 1 42 1 54 1 185 2 167 1 
121 3 249 1 3 1 124 1 84 1 170 1 86 5 10 2 217 1 15 1 219 1 318 2 319 1 321 1 225 2 21 1 66 1 323 1 25 1 325 1 274 4 68 1 28 1 107 2 329 1 150 2 73 1 112 1 232 5 234 3 116 1 287 1 
121 8 301 1 165 1 249 3 207 1 124 1 84 2 255 5 170 3 86 9 10 6 217 1 15 2 319 3 321 4 225 6 323 3 25 2 274 7 325 2 68 3 69 1 28 6 107 5 150 6 72 5 73 2 112 1 232 9 194 1 75 1 234 9 288 1 116 3 287 1 
121 3 249 1 84 1 170 1 86 3 10 2 15 1 318 1 319 1 321 1 66 1 21 1 225 2 323 2 25 1 274 2 325 1 68 1 107 3 150 2 73 1 112 1 232 3 75 1 234 4 116 1 
121 5 249 2 207 1 84 1 170 2 86 4 10 4 15 1 318 2 319 2 321 2 66 1 21 1 225 4 323 3 25 1 325 1 274 3 68 2 107 4 150 4 73 1 112 1 232 4 194 1 234 7 75 1 288 1 116 2 
80 1 334 1 50 1 
22 1 208 1 106 1 
63 1 106 1 
331 1 59 1 106 1 
227 1 106 1 
331 1 106 1 
331 1 59 1 23 1 208 2 216 1 106 3 
295 2 242 3 317 3 297 1 249 1 271 1 250 1 101 7 305 1 229 1 145 1 166 1 130 2 170 1 258 1 92 1 198 1 139 4 
295 3 242 11 296 1 297 1 83 1 249 3 250 1 48 1 130 1 170 3 87 1 311 4 314 1 139 11 62 1 265 3 317 7 319 3 271 4 101 22 145 1 103 2 68 3 29 1 31 1 195 1 116 3 197 1 158 1 198 1 
159 1 79 1 295 3 242 4 297 1 249 1 305 1 250 1 166 1 130 2 170 1 87 2 314 1 139 5 317 4 271 1 101 9 103 4 145 1 229 1 195 2 197 2 158 2 198 1 
295 2 242 3 317 3 297 1 249 1 271 1 250 1 101 7 305 1 229 1 145 1 166 1 130 2 170 1 258 1 198 1 139 4 
295 2 242 3 317 3 297 1 249 1 271 1 250 1 101 7 305 1 229 1 145 1 166 1 130 2 170 1 258 1 198 1 139 4 
293 1 161 1 206 1 310 1 133 2 262 1 215 1 137 2 16 1 315 1 99 1 141 1 322 1 106 1 147 2 280 2 111 1 331 1 32 2 192 1 34 1 115 2 35 1 290 2 
96 1 65 1 185 2 326 1 252 1 167 1 4 1 147 1 52 1 310 1 280 1 111 1 32 1 192 1 53 1 54 1 34 1 175 1 115 1 133 1 262 1 156 1 14 1 137 1 290 1 16 1 
241 1 248 1 252 1 4 1 167 1 310 2 52 1 53 1 54 1 175 1 133 1 262 1 137 1 14 1 16 2 96 1 222 1 142 1 185 2 326 1 147 1 280 1 111 1 32 1 192 1 34 1 115 1 156 1 36 1 290 1 
241 1 248 2 4 1 167 1 310 3 52 1 53 1 54 1 133 1 262 1 137 1 215 1 14 1 16 3 96 1 266 1 65 1 142 1 185 2 326 1 147 1 280 1 111 1 32 1 192 1 34 1 115 1 156 1 36 1 290 1 
241 1 248 2 4 1 167 1 310 2 52 1 53 1 54 1 133 1 137 1 14 1 16 2 266 1 65 1 142 1 185 2 147 1 280 1 32 1 192 1 34 1 115 1 156 1 36 1 290 1 
254 1 
240 1 160 2 82 1 246 1 84 1 86 5 8 1 13 1 180 1 179 1 15 1 93 1 17 1 182 1 183 4 270 2 106 1 107 2 28 6 280 2 191 1 112 1 32 2 192 1 34 1 287 3 35 1 291 1 117 1 199 1 121 2 43 1 124 1 127 1 51 2 55 1 138 1 61 1 140 2 141 1 322 2 224 1 225 2 323 2 325 1 147 2 71 2 331 1 73 1 332 1 232 5 74 2 234 2 238 1 239 2 
120 1 82 1 43 1 127 1 86 3 8 1 55 1 13 1 179 1 180 1 61 1 182 1 183 2 224 1 28 2 191 1 232 3 74 1 287 1 238 1 117 1 199 1 
120 1 82 1 43 1 127 1 86 3 8 1 55 1 13 1 179 1 180 1 61 1 182 1 183 3 224 1 28 1 107 1 191 1 112 1 232 3 287 1 238 1 117 1 199 1 239 1 
120 1 82 1 43 1 127 1 86 3 8 1 55 1 13 1 179 1 180 1 61 1 182 1 183 3 140 1 224 1 28 2 107 1 191 1 112 1 232 3 74 1 287 1 238 1 117 1 199 1 239 1 
240 1 160 2 81 1 82 1 84 1 86 5 8 1 13 1 179 1 180 1 182 1 183 6 270 2 278 1 28 7 107 5 191 1 112 5 283 1 287 3 117 1 291 1 199 1 120 1 121 1 43 1 124 1 127 1 51 2 55 1 57 1 61 1 221 1 140 4 224 1 225 1 323 2 325 1 71 2 73 1 232 5 74 4 238 1 239 4 
240 1 160 2 82 1 84 1 86 4 8 1 13 1 179 1 180 1 182 1 183 4 270 2 28 4 107 2 191 1 112 1 287 2 117 1 291 1 199 1 121 1 43 1 124 1 127 1 51 2 55 1 61 1 140 2 224 1 225 1 323 2 325 1 71 2 73 1 232 4 332 1 74 2 234 2 238 1 239 2 
240 1 160 2 81 1 121 1 82 1 43 1 124 1 127 1 84 1 51 2 86 4 8 1 55 1 13 1 57 1 179 1 180 1 61 1 182 1 183 4 140 2 270 2 224 1 225 1 323 2 325 1 278 1 107 1 28 4 71 2 191 1 73 1 112 1 232 4 74 2 287 2 238 1 291 1 117 1 239 2 199 1 
240 1 160 2 81 1 121 1 82 1 43 1 124 1 127 1 84 1 51 2 86 4 8 1 55 1 13 1 57 1 179 1 180 1 61 1 182 1 183 4 140 2 270 2 224 1 225 1 323 2 325 1 278 1 107 1 28 4 71 2 191 1 73 1 112 1 232 4 74 2 287 2 238 1 291 1 117 1 239 2 199 1 
160 2 81 1 121 1 82 1 299 1 43 1 44 2 124 1 127 1 84 1 86 4 8 1 55 1 13 1 179 1 180 1 61 1 182 1 183 4 140 2 224 1 225 1 187 1 186 1 325 1 107 1 28 4 71 2 191 1 73 1 112 1 153 2 232 4 74 2 234 2 287 2 238 1 291 1 117 1 239 2 199 1 
240 1 160 2 81 1 121 1 82 1 43 1 124 1 127 1 84 1 51 2 86 4 8 1 55 1 13 1 57 1 179 1 180 1 61 1 182 1 183 5 221 1 270 2 140 3 224 1 225 1 323 2 325 1 278 1 107 1 71 2 28 5 73 1 191 1 112 1 232 4 74 3 287 2 238 1 291 1 117 1 199 1 239 3 
240 1 160 2 81 1 121 1 82 1 43 1 124 1 127 1 84 1 51 2 86 4 8 1 55 1 13 1 57 1 179 1 180 1 61 1 182 1 183 5 221 1 270 2 140 3 224 1 225 1 323 2 325 1 278 1 107 1 71 2 28 5 73 1 191 1 112 1 232 4 74 3 287 2 238 1 291 1 117 1 199 1 239 3 
160 2 82 1 84 1 86 4 8 1 13 1 179 1 180 1 182 1 183 4 28 4 107 1 191 1 112 1 287 2 117 1 291 1 199 1 121 1 299 1 43 1 44 2 124 1 127 1 55 1 61 1 140 2 224 1 225 1 325 1 71 2 73 1 232 4 153 2 332 1 74 2 234 2 238 1 239 2 
79 1 295 3 242 10 244 1 83 1 249 3 303 2 170 3 87 2 9 1 311 2 263 1 139 9 62 1 316 1 265 1 317 6 319 3 143 1 144 1 271 3 101 19 103 4 68 3 328 2 27 1 195 2 116 3 197 2 158 2 
79 1 295 2 242 12 244 1 300 1 249 3 303 4 251 1 5 1 170 2 87 3 9 1 311 2 211 1 261 1 314 2 139 14 62 2 316 2 265 2 317 4 319 2 271 2 144 2 101 26 103 6 68 3 328 1 27 1 195 3 116 3 237 1 197 3 158 3 
79 1 242 21 244 1 83 1 249 5 250 1 251 1 166 1 5 1 170 5 87 3 9 1 261 1 265 3 271 4 101 41 103 6 27 1 195 3 116 4 197 3 295 4 300 1 303 4 305 1 130 1 311 4 211 1 314 1 139 20 62 3 316 2 317 8 319 4 320 1 144 1 143 1 145 1 229 1 68 4 328 1 237 1 158 3 
79 1 295 4 242 18 244 1 300 1 83 1 249 5 250 1 305 1 303 4 166 1 251 1 130 1 5 1 170 4 87 4 9 1 211 1 311 4 261 1 314 2 139 20 62 3 316 2 265 3 317 7 319 3 320 1 143 1 144 1 271 3 101 38 229 1 145 1 103 8 68 4 328 1 27 1 195 4 116 4 237 1 197 4 158 4 
79 1 295 7 242 25 244 1 300 1 83 2 249 8 250 1 305 1 303 4 166 1 251 1 130 1 5 1 170 8 87 2 9 1 211 1 311 4 261 1 314 1 139 27 62 2 316 1 265 4 64 2 317 15 319 7 144 1 271 8 101 52 229 1 145 1 103 4 68 7 328 1 27 1 195 2 116 7 237 1 197 2 158 2 
330 1 19 1 131 1 268 1 154 1 285 1 259 1 104 1 78 1 327 1 
113 1 136 1 
330 1 19 1 131 1 268 1 114 1 56 1 306 1 78 1 327 1 
60 1 146 1 
284 1 236 1 90 1 
19 1 268 1 46 1 327 1 107 1 231 2 86 1 108 1 330 1 131 1 232 1 193 1 154 1 285 1 259 1 176 1 78 1 95 1 
19 1 268 1 46 1 327 1 107 1 231 2 86 1 108 1 330 1 131 1 232 1 193 1 154 1 285 1 259 1 176 1 78 1 95 1 
19 1 268 1 46 1 327 1 107 1 231 2 86 1 108 1 330 1 131 1 232 1 193 1 154 1 285 1 259 1 176 1 78 1 95 1 
284 1 60 1 146 1 
284 1 60 1 146 1 
236 1 90 1 
284 1 236 1 90 1 
40 1 169 1 
18 1 19 1 40 1 268 1 321 1 162 1 274 1 327 1 169 1 231 1 329 1 86 1 108 1 330 1 131 1 232 1 193 1 113 1 136 1 313 1 78 1 219 1 
242 1 163 1 126 1 209 1 87 1 172 1 61 2 139 1 99 2 184 1 224 2 272 1 101 2 275 1 103 2 276 1 106 1 26 1 147 2 149 1 151 1 280 2 331 1 32 2 192 1 281 1 34 1 195 1 238 2 197 1 158 1 
119 1 141 1 322 1 206 1 106 1 147 1 280 1 331 1 32 1 192 1 174 1 34 1 133 1 35 1 
96 1 202 1 20 1 65 1 185 2 167 1 147 1 4 1 280 1 52 1 32 1 192 1 53 1 54 1 174 1 34 1 133 1 156 1 
96 1 202 1 20 1 222 1 65 1 185 2 167 1 147 2 4 1 280 2 52 1 32 2 192 1 53 1 54 1 174 1 34 1 133 1 156 1 
96 1 20 1 65 1 185 2 167 1 147 1 4 1 280 1 52 1 32 1 192 1 53 1 173 1 54 1 34 1 133 1 156 1 
67 1 
121 1 225 1 1 1 325 1 124 1 84 1 49 1 107 1 73 1 112 1 
98 2 121 5 319 2 225 5 249 2 323 5 228 1 68 2 107 5 150 5 170 2 333 1 10 5 234 10 116 2 
86 1 112 1 232 1 287 1 107 1 28 1 
245 1 121 2 302 1 308 2 124 1 84 2 86 3 89 1 138 2 93 1 15 2 17 1 141 1 322 2 225 2 325 2 106 1 147 4 28 4 280 4 331 1 73 2 32 4 192 1 232 3 34 1 75 1 287 2 35 1 
112 1 121 1 225 1 22 1 1 1 49 1 107 1 
240 1 121 1 124 1 84 1 51 1 86 1 270 1 225 1 323 1 325 1 107 2 28 1 73 1 112 1 232 1 234 1 287 1 
245 1 0 1 1 1 164 2 249 2 84 4 86 5 170 2 88 2 10 6 13 2 264 2 15 2 181 2 98 2 106 10 28 5 107 8 280 3 112 2 32 3 192 3 34 4 287 3 116 2 37 1 121 9 208 2 308 1 124 4 125 2 49 1 59 3 312 1 138 1 216 1 63 3 222 1 319 2 322 1 225 8 227 2 323 6 228 2 325 4 68 2 147 3 150 6 331 3 73 4 232 5 155 2 333 2 234 12 
121 8 300 1 249 2 124 2 5 1 84 2 86 1 170 2 311 1 211 1 10 5 261 1 214 1 138 1 15 1 62 1 265 1 98 2 319 2 225 5 323 3 325 2 68 2 28 1 107 5 150 5 73 2 112 2 232 1 333 1 234 6 287 1 116 2 289 1 237 1 
98 2 121 2 162 1 225 1 249 1 250 1 229 1 325 1 145 1 188 1 124 1 84 1 85 1 170 1 86 1 73 1 232 1 260 1 58 1 57 1 218 1 
233 1 162 1 260 1 218 1 
121 1 225 2 323 2 325 1 124 1 130 1 84 1 107 4 150 2 73 1 112 2 10 2 234 4 138 1 15 1 
110 1 131 1 40 1 268 1 285 1 
131 1 268 1 223 1 
131 1 268 1 223 1 
131 1 268 1 223 1 
131 1 268 1 235 1 
131 1 268 1 235 1 
131 1 268 1 235 1 
131 1 268 1 
19 1 78 1 
79 1 295 3 242 5 317 5 271 2 249 2 250 2 101 10 103 2 145 2 229 1 85 1 170 2 87 1 195 1 197 1 158 1 139 5 
79 1 317 1 249 1 271 1 101 2 103 2 68 1 87 1 195 1 197 1 158 1 139 2 
79 1 295 1 242 2 317 2 319 1 249 1 271 1 101 4 103 2 68 1 170 1 87 1 195 1 116 1 197 1 158 1 139 2 
79 1 295 1 242 2 317 2 143 1 271 1 101 3 250 1 103 6 145 1 129 1 87 3 195 3 314 1 197 3 158 3 139 1 
79 1 295 7 242 18 296 1 205 1 83 1 249 5 250 3 305 1 166 1 129 1 48 1 130 1 170 5 87 5 311 4 314 2 139 16 62 1 265 3 317 12 319 3 143 1 271 5 101 34 229 2 145 3 103 10 68 3 31 1 195 5 116 3 197 5 158 5 
79 1 295 2 242 4 249 1 305 1 250 1 166 1 130 1 170 1 87 1 311 1 139 4 62 1 265 1 317 2 101 8 103 2 145 1 229 1 195 1 237 1 197 1 158 1 
79 1 295 2 242 5 205 1 83 1 249 2 250 1 305 1 166 1 130 1 170 1 87 2 311 2 139 6 62 1 265 1 317 3 271 1 101 11 229 1 145 1 103 4 68 1 195 2 116 1 237 1 197 2 158 2 
79 1 295 3 242 10 205 1 300 1 249 3 250 1 305 1 166 1 130 1 5 1 170 3 87 3 311 1 211 1 261 1 314 1 139 9 62 1 265 1 317 4 319 2 271 1 101 19 229 1 145 1 103 6 68 2 195 3 116 2 237 1 197 3 158 3 
79 1 295 2 242 7 205 1 300 1 249 3 250 1 305 1 166 1 130 1 5 1 170 2 87 3 311 1 211 1 261 1 314 1 139 10 62 1 265 1 317 4 319 1 271 2 101 17 229 1 145 1 103 6 68 2 195 3 116 2 237 1 197 3 158 3 
79 1 295 2 242 4 249 1 305 1 250 1 166 1 130 1 170 1 87 1 311 1 139 4 62 1 265 1 317 2 101 8 103 2 145 1 229 1 195 1 237 1 197 1 158 1 
79 1 242 6 300 1 249 2 5 1 170 2 87 1 311 1 211 1 261 1 139 6 62 1 265 1 317 1 319 2 271 1 101 12 103 2 68 2 195 1 116 2 237 1 197 1 158 1 
79 1 295 3 242 8 205 1 300 1 249 3 250 1 305 1 166 1 130 1 5 1 170 2 87 4 311 1 211 1 261 1 314 2 139 10 62 1 265 1 317 5 319 1 271 2 101 18 229 1 145 1 103 8 68 2 195 4 116 2 237 1 197 4 158 4 
79 1 295 3 242 7 300 1 249 3 5 1 170 2 87 4 311 1 211 1 261 1 314 2 139 9 62 1 265 1 317 6 319 2 271 3 143 1 101 16 103 8 68 3 195 4 116 3 237 1 197 4 158 4 
295 3 242 4 317 6 271 3 249 1 101 7 305 1 250 3 166 2 145 3 229 1 170 1 139 3 
79 1 295 3 242 8 300 1 249 3 250 1 305 1 166 1 130 1 5 1 170 2 87 4 311 1 211 1 261 1 314 2 139 10 62 1 265 1 317 4 319 1 271 1 143 1 101 18 229 1 145 1 103 8 68 2 195 4 116 2 237 1 197 4 158 4 
295 2 242 4 317 3 249 1 271 1 101 8 305 1 250 1 229 1 103 4 166 1 145 1 130 1 170 1 87 2 195 2 197 2 314 1 158 2 139 4 
295 2 242 3 317 2 22 1 249 1 305 1 250 1 101 6 166 1 145 1 229 1 130 1 170 1 139 3 
295 1 242 2 317 2 205 1 319 1 249 1 271 1 101 4 103 2 68 1 170 1 87 1 195 1 116 1 197 1 158 1 139 2 
265 1 295 1 242 4 317 2 319 1 83 1 249 1 271 1 101 7 68 1 170 1 311 2 116 1 139 3 62 1 
295 5 242 12 83 1 249 3 250 2 305 1 166 1 129 1 130 1 170 3 87 2 311 2 314 2 139 11 265 2 317 9 64 1 319 2 271 4 101 23 229 1 145 2 103 4 68 2 279 1 195 2 116 2 197 2 158 2 
242 1 311 1 101 1 
265 1 101 1 139 1 
295 2 242 3 317 3 205 1 319 1 249 1 271 1 228 1 101 6 103 2 68 1 170 1 87 1 195 1 116 1 197 1 158 1 139 3 
79 1 295 1 242 6 300 1 249 2 5 1 170 2 87 1 311 1 211 1 261 1 139 6 62 1 265 1 317 2 319 2 271 1 101 12 103 2 68 2 195 1 116 2 237 1 197 1 158 1 
295 1 242 3 317 2 249 1 271 1 101 6 250 1 229 1 145 1 170 1 139 3 
295 1 242 2 317 2 271 1 250 1 101 3 305 1 145 1 166 1 103 2 129 1 87 1 195 1 314 1 197 1 158 1 139 1 
43 1 224 1 134 1 135 1 238 1 61 1 70 1 
41 1 43 1 247 1 224 1 47 1 70 1 109 1 135 1 134 1 286 1 238 1 61 1 
222 1 141 1 322 1 24 1 147 4 106 1 280 4 331 1 32 4 192 1 213 1 34 1 35 1 
97 1 267 1 308 1 147 2 106 1 280 2 331 1 32 2 192 1 34 2 59 1 157 1 178 1 118 1 
280 1 32 1 192 1 53 1 185 1 34 1 322 1 167 1 4 1 147 1 
222 1 65 1 276 1 147 2 126 1 106 1 280 2 331 1 32 2 192 1 34 1 
222 1 141 1 322 1 308 1 276 1 147 4 106 3 256 1 171 1 280 5 331 2 32 5 192 2 213 1 34 2 35 1 
222 1 141 1 322 1 308 1 276 1 147 4 106 3 171 1 280 5 331 2 32 5 192 2 213 1 34 2 35 1 94 1 
280 1 331 1 32 1 192 1 141 1 34 1 322 1 22 1 35 1 106 1 147 1 
162 1 2 1 
162 1 2 1 
162 1 2 1 
63 1 322 1 227 1 164 1 24 1 208 1 308 1 147 3 106 4 107 1 7 1 28 1 86 2 280 3 331 1 112 1 32 3 232 2 192 1 282 1 34 1 13 1 59 1 
63 1 322 1 227 1 164 1 24 1 208 1 308 1 147 3 106 4 107 1 28 1 86 2 280 3 331 1 88 1 112 1 32 3 232 2 192 1 34 1 13 1 59 1 
280 1 32 1 192 1 34 1 147 1 292 1 
97 1 99 1 204 1 222 1 65 1 269 1 322 2 276 1 147 6 106 3 256 1 171 1 280 7 331 2 32 7 192 2 34 3 59 1 178 1 216 1 292 1 
162 1 2 1 
245 1 121 1 1 1 208 1 124 2 125 1 49 1 84 2 86 3 88 1 13 1 264 1 63 1 322 1 225 1 325 2 274 1 147 1 106 2 107 1 28 2 280 1 73 2 112 1 32 1 232 3 155 1 287 1 
37 1 222 1 208 1 147 2 106 2 280 2 331 1 32 2 192 1 34 2 59 1 216 1 292 1 
162 1 2 1 
97 1 269 1 308 1 147 1 106 1 280 1 331 1 32 1 192 1 34 2 59 1 178 1 216 1 
241 1 310 1 111 1 142 1 262 1 36 1 252 1 16 1 
241 2 142 2 248 2 100 1 226 1 122 1 310 4 111 1 11 1 12 1 262 1 177 1 36 3 16 4 
241 1 248 1 142 1 252 1 123 1 310 2 111 1 132 1 262 1 196 1 36 1 16 2 
241 1 220 1 142 1 226 1 100 2 252 1 310 3 111 1 11 2 262 1 36 1 16 3 
45 2 102 1 304 1 36 2 
310 1 243 1 111 1 262 1 252 1 16 1 
241 1 310 2 111 1 298 1 142 1 248 1 262 1 36 1 252 1 16 2 
230 1 
241 1 310 1 111 1 142 1 262 1 36 1 252 1 16 1 
241 1 142 1 22 1 36 1 
241 1 310 1 111 1 142 1 262 1 36 1 16 1 
310 1 115 1 290 1 
241 1 142 1 226 1 100 2 273 1 252 1 310 3 111 1 11 1 262 1 36 1 16 3 
38 1 241 1 310 2 111 1 142 1 248 1 262 1 36 1 16 2 
310 1 152 1 111 1 53 1 54 1 185 1 122 1 262 1 36 1 252 1 16 1 
241 1 310 1 111 1 262 1 36 1 252 1 16 1 
241 2 310 1 111 1 142 1 262 1 252 1 16 1 
241 1 307 1 252 1 128 1 310 2 111 2 257 1 262 2 36 1 16 2 
241 1 298 1 142 1 248 2 122 1 252 1 277 1 310 3 111 1 12 1 262 1 36 2 16 3 
241 1 294 1 142 1 185 2 248 1 252 1 167 1 310 2 111 1 53 1 54 1 262 1 156 1 36 1 16 2 
38 1 241 1 142 1 248 2 122 1 252 1 105 1 310 4 111 2 12 1 262 2 36 2 16 4 
241 1 298 1 248 1 142 1 100 1 252 1 310 3 111 1 262 1 36 1 16 3 
12 1 122 1 177 1 36 1 
241 1 36 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 88 197 43 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 88 197 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 88 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 88 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 88 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 88 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 88 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 88 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 88 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3154 | stmt -> ;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> %
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> >>>
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5772 | 0 -> -1
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay; | RETURN | 495 | return null
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1 1 316 1 177 1 144 3 64 1 257 3 15 1 262 2 17 2 32 1 355 1 290 2 10 1 
129 1 1 6 71 1 316 1 177 1 161 2 32 2 10 4 227 2 226 1 251 1 167 1 140 1 143 2 104 1 144 9 64 1 234 1 257 9 83 2 15 3 42 1 262 5 170 1 17 2 355 1 356 1 290 2 
129 1 1 6 71 1 316 1 177 1 161 2 32 2 10 4 227 2 226 1 251 1 167 1 140 1 143 2 104 1 144 9 64 1 234 1 257 9 83 2 15 3 42 1 262 5 170 1 17 2 355 1 356 1 290 2 
129 1 1 7 71 1 316 1 177 1 161 2 32 2 10 5 227 2 226 1 251 1 167 1 140 1 143 2 104 1 144 10 64 1 234 1 257 10 83 2 15 4 42 1 262 6 170 1 17 2 355 1 356 1 290 2 
129 1 1 4 71 1 316 1 177 1 161 1 32 2 10 3 227 2 226 1 251 1 167 1 140 1 143 2 104 1 144 7 64 1 234 1 257 7 83 2 15 2 262 4 170 1 17 2 355 1 356 1 290 2 
129 1 1 3 71 1 316 1 143 1 177 1 144 4 64 1 83 1 257 4 15 1 161 2 42 1 262 3 17 1 290 1 10 2 227 1 
184 1 251 1 167 1 316 1 143 1 177 1 144 2 64 1 233 1 257 2 83 1 262 1 6 1 17 1 32 1 290 1 
129 1 1 7 71 1 316 1 177 1 55 1 161 2 32 1 10 4 226 1 227 1 143 1 144 9 64 1 283 1 257 9 83 1 15 3 42 1 262 5 170 1 17 2 355 1 290 2 
129 1 1 7 71 1 316 1 177 1 55 1 161 2 32 1 10 4 226 1 227 1 143 1 144 9 64 1 283 1 257 9 83 1 15 3 42 1 262 5 170 1 17 2 355 1 290 2 
277 1 228 1 103 1 270 1 141 1 317 1 306 1 339 1 26 1 342 1 40 1 273 1 171 1 21 1 
122 1 
277 2 122 1 107 1 93 1 324 1 306 1 26 2 272 1 
277 5 122 1 254 1 93 2 188 1 306 2 157 1 26 5 123 1 321 1 84 1 235 1 246 1 245 1 162 2 107 1 324 1 60 2 198 2 
122 1 324 1 203 1 
122 1 204 2 268 1 
103 2 171 2 141 1 339 2 342 2 325 1 21 2 40 2 
176 1 337 1 156 1 339 3 342 2 27 1 320 2 298 1 94 1 30 1 77 2 322 1 31 1 163 1 180 1 57 1 349 1 223 2 325 1 249 1 252 1 103 2 141 1 39 2 208 2 331 1 259 1 40 2 124 1 237 1 333 1 210 1 171 2 87 1 21 3 45 1 91 1 
103 1 270 1 273 1 171 1 141 1 317 1 339 1 342 1 21 1 40 1 
277 1 279 1 122 1 339 1 317 1 255 1 26 1 40 1 324 1 34 1 21 1 81 1 303 1 22 1 
277 2 122 1 103 1 339 1 317 1 26 2 342 1 40 1 171 1 324 1 34 1 21 1 81 1 303 1 22 1 
277 1 93 1 306 1 26 1 128 1 
139 1 277 2 122 1 107 1 93 1 324 1 306 1 26 2 
277 1 93 1 26 1 
103 1 241 1 317 1 339 2 342 1 243 1 40 2 86 1 171 1 21 2 325 1 
300 1 148 1 80 1 
339 1 39 1 158 1 320 1 331 1 124 1 322 1 31 1 210 1 163 1 180 1 223 1 87 1 325 1 21 1 91 1 
203 1 325 1 
23 1 339 2 39 1 342 1 106 1 320 1 331 1 124 1 40 1 322 1 31 1 210 1 171 1 163 1 180 1 223 1 80 1 87 1 21 2 91 1 
23 2 328 1 261 1 103 1 171 4 339 5 255 1 342 4 169 1 325 1 21 5 106 1 243 1 40 5 
273 1 171 1 317 1 339 1 342 1 21 1 40 1 
23 1 103 1 171 3 339 3 342 3 325 1 21 3 40 3 
273 1 171 1 317 1 339 1 342 1 21 1 40 1 
103 1 339 1 317 1 342 1 243 1 40 1 86 1 171 1 21 1 
176 1 317 2 320 1 94 1 322 1 180 1 57 1 223 1 325 1 277 1 103 2 141 1 231 1 106 1 331 1 237 1 21 4 22 1 23 1 337 1 241 1 156 1 339 4 26 1 342 3 27 1 243 1 244 1 77 1 31 1 163 1 349 1 34 1 303 1 81 1 249 1 39 1 208 2 40 3 124 1 210 1 171 3 87 1 45 1 91 1 
23 1 328 1 241 1 317 1 339 2 255 1 342 1 40 2 171 1 21 2 325 1 
277 1 23 2 103 1 122 1 317 1 339 3 26 1 342 3 243 1 106 1 40 3 244 1 78 1 171 3 34 1 21 3 81 1 303 1 22 1 
23 1 103 1 339 2 342 2 148 1 243 1 40 2 171 2 80 1 21 2 
339 1 39 1 320 1 331 1 124 1 322 1 31 1 210 1 180 1 163 1 223 1 87 1 325 1 21 1 91 1 
339 1 39 1 320 1 331 1 124 1 3 1 322 1 210 1 180 1 163 1 223 1 313 1 325 1 21 1 91 1 
155 1 156 1 297 1 298 2 94 1 300 2 77 4 57 2 349 1 80 2 249 1 205 1 102 1 146 1 105 1 148 2 208 2 193 1 237 1 267 1 314 1 45 1 
230 1 339 1 317 1 342 1 40 1 171 1 21 1 303 1 
278 1 346 1 136 1 309 1 287 1 
135 1 136 1 309 1 
136 1 309 1 
136 1 309 1 
346 1 
346 1 
346 1 
305 1 136 1 309 1 
305 1 136 1 309 1 
305 1 136 1 309 1 
136 1 189 1 309 1 
136 1 189 1 309 1 
136 1 189 1 309 1 
113 1 277 1 136 1 221 1 43 1 26 1 197 1 88 1 309 1 
113 1 136 1 221 1 197 1 88 1 309 1 
184 1 159 2 83 2 227 1 166 1 
143 1 83 1 227 1 
184 1 143 1 83 1 
28 1 184 1 159 1 83 3 166 1 227 2 
2 1 184 1 159 1 83 2 166 1 227 1 
70 1 93 1 294 2 338 1 157 1 26 5 296 1 297 1 299 1 246 2 162 1 220 1 118 1 60 1 324 1 204 3 102 1 277 5 122 2 306 4 147 2 123 3 258 2 193 1 107 1 108 1 194 1 267 1 198 1 44 1 268 1 173 1 
200 1 93 6 294 6 26 9 157 1 134 1 297 3 299 2 245 1 246 6 162 2 117 1 118 4 324 1 60 2 204 9 102 3 277 9 229 1 122 5 306 7 352 5 147 6 123 8 193 3 150 1 107 1 194 3 211 1 267 3 44 1 198 2 268 3 173 2 128 5 
338 1 294 2 26 3 297 1 299 1 245 1 246 2 162 1 220 1 118 1 324 1 60 1 204 4 102 1 277 3 122 3 306 2 123 3 147 2 258 1 193 1 194 1 267 1 198 1 268 2 173 1 
200 1 294 4 338 1 26 4 134 1 297 2 299 1 245 1 246 4 162 1 117 1 220 1 118 2 324 1 60 1 204 7 102 2 277 4 122 4 306 3 147 4 123 5 258 2 193 2 194 2 267 2 198 1 268 3 173 1 
9 1 
288 1 163 1 203 1 
163 1 111 1 
210 1 163 1 180 1 
163 1 347 1 
210 1 163 1 
46 1 288 2 210 1 163 3 180 1 239 1 
304 1 199 1 212 1 47 1 297 1 353 1 149 1 191 1 298 4 77 7 57 3 302 3 172 1 222 2 20 1 35 1 153 2 102 1 
212 2 199 5 72 1 156 1 297 4 298 16 94 1 77 31 58 3 57 15 56 4 302 8 349 1 222 3 182 1 35 1 249 1 102 4 304 1 281 1 307 1 208 2 191 1 353 2 149 2 193 3 194 3 195 1 172 1 110 1 20 2 267 3 89 1 153 3 
304 1 36 1 199 1 212 1 72 1 156 2 297 1 208 4 353 1 149 1 298 5 94 2 77 9 302 4 57 4 172 1 349 2 222 3 20 1 137 1 35 1 153 2 249 2 102 1 
304 1 199 1 212 1 297 1 353 1 149 1 191 1 298 4 77 7 57 3 302 3 172 1 222 2 20 1 35 1 153 2 102 1 
304 1 199 1 212 1 297 1 353 1 149 1 191 1 298 4 77 7 57 3 302 3 172 1 222 2 20 1 35 1 153 2 102 1 
24 2 39 1 144 1 75 1 53 1 320 1 331 1 257 1 332 1 301 1 322 1 210 1 163 1 32 2 17 1 18 2 101 2 223 1 334 1 266 1 350 1 290 1 91 1 
174 1 24 1 177 1 341 1 318 1 320 1 201 1 28 1 218 1 32 1 101 1 223 1 227 1 184 1 143 1 39 1 144 1 282 1 257 1 331 1 83 2 85 1 17 1 18 1 290 1 91 1 
1 1 24 1 316 1 177 1 341 1 318 1 320 1 201 1 28 1 218 1 32 1 101 1 223 1 227 1 184 1 143 1 39 1 144 2 64 1 282 1 257 2 331 1 83 2 41 1 85 1 262 1 17 1 18 1 290 1 91 1 
174 1 1 2 24 1 316 1 341 1 318 1 75 1 320 1 201 1 178 1 28 1 218 1 32 1 101 1 223 1 227 1 184 1 143 1 39 1 144 3 64 1 282 1 257 3 331 1 83 2 262 1 17 1 18 1 290 1 91 1 
174 1 1 2 24 1 316 1 318 1 320 1 201 1 178 1 28 1 218 1 32 1 101 1 223 1 227 1 184 1 143 1 39 1 144 2 64 1 257 2 331 1 83 2 262 1 18 1 91 1 
248 1 
0 1 132 1 93 6 317 1 271 1 320 2 97 1 217 1 322 2 99 1 324 1 60 1 223 2 224 1 225 2 277 5 279 1 62 1 331 1 332 1 107 3 151 1 334 1 335 2 198 1 21 1 291 4 22 1 292 1 293 2 339 1 26 5 157 1 299 1 246 2 162 1 163 1 119 2 204 2 79 1 34 1 81 1 303 1 122 2 253 2 39 2 255 1 123 2 40 1 210 1 311 1 312 2 265 2 268 2 91 1 
277 3 0 1 279 1 93 2 253 1 317 1 339 1 26 3 255 1 272 1 40 1 97 1 107 1 311 1 151 1 79 1 34 1 21 1 303 1 81 1 291 2 22 1 
0 1 93 1 293 1 339 1 317 1 26 3 272 1 97 1 324 1 34 1 79 1 81 1 303 1 277 3 279 1 122 1 255 1 40 1 107 1 311 1 151 1 21 1 291 3 22 1 
0 1 93 2 293 1 339 1 317 1 26 3 272 1 97 1 324 1 34 1 79 1 81 1 303 1 277 3 279 1 122 1 253 1 255 1 40 1 107 1 311 1 151 1 312 1 21 1 291 3 22 1 
0 1 132 1 93 7 317 1 214 1 272 1 97 1 4 1 99 1 274 1 324 5 60 1 138 1 225 2 277 5 279 1 107 3 151 1 21 1 198 1 335 2 291 6 22 1 293 4 339 1 26 5 157 1 246 1 162 1 119 2 34 1 79 1 303 1 81 1 122 5 207 1 253 4 255 1 123 1 40 1 311 1 312 4 265 2 268 2 
0 1 132 1 93 4 317 1 97 1 217 1 99 1 60 1 324 1 225 2 277 4 279 1 107 2 151 1 21 1 198 1 335 2 291 4 22 1 293 2 339 1 26 4 157 1 246 1 162 1 119 2 204 2 34 1 79 1 303 1 81 1 122 2 253 2 255 1 123 1 40 1 311 1 265 2 312 2 268 2 
0 1 132 1 293 2 93 4 339 1 317 1 26 4 157 1 246 1 97 1 162 1 99 1 4 1 324 1 60 1 119 2 34 1 79 1 138 1 81 1 303 1 225 2 277 4 279 1 122 1 207 1 253 2 255 1 123 1 40 1 107 2 311 1 151 1 312 2 265 2 335 2 198 1 21 1 268 2 291 4 22 1 
0 1 132 1 293 2 93 4 339 1 317 1 26 4 157 1 246 1 97 1 162 1 99 1 4 1 324 1 60 1 119 2 34 1 79 1 138 1 81 1 303 1 225 2 277 4 279 1 122 1 207 1 253 2 255 1 123 1 40 1 107 2 311 1 151 1 312 2 265 2 335 2 198 1 21 1 268 2 291 4 22 1 
0 1 240 2 293 2 93 4 339 1 317 1 26 4 157 1 76 1 246 1 97 1 162 1 99 1 324 1 60 1 119 2 204 2 34 1 79 1 81 1 303 1 277 4 279 1 122 1 207 1 253 2 142 1 255 1 123 1 40 1 107 2 125 1 67 2 311 1 151 1 312 2 335 2 198 1 21 1 291 4 22 1 
0 1 132 1 93 5 293 3 339 1 317 1 157 1 26 4 214 1 246 1 97 1 162 1 99 1 4 1 324 1 60 1 119 2 34 1 79 1 138 1 81 1 303 1 225 2 277 4 279 1 122 1 207 1 253 3 255 1 123 1 40 1 107 2 311 1 151 1 265 2 312 3 335 2 198 1 21 1 268 2 291 5 22 1 
0 1 132 1 93 5 293 3 339 1 317 1 157 1 26 4 214 1 246 1 97 1 162 1 99 1 4 1 324 1 60 1 119 2 34 1 79 1 138 1 81 1 303 1 225 2 277 4 279 1 122 1 207 1 253 3 255 1 123 1 40 1 107 2 311 1 151 1 265 2 312 3 335 2 198 1 21 1 268 2 291 5 22 1 
0 1 93 4 317 1 97 1 217 1 99 1 60 1 324 1 277 4 279 1 107 2 67 2 151 1 21 1 198 1 335 2 291 4 22 1 240 2 293 2 339 1 26 4 157 1 76 1 246 1 162 1 119 2 204 2 34 1 79 1 303 1 81 1 122 1 253 2 255 1 123 1 40 1 311 1 312 2 
174 1 23 1 315 1 25 1 155 1 176 1 156 2 339 1 342 1 320 8 298 1 94 2 322 2 77 2 163 3 181 1 57 1 349 2 223 7 249 2 206 1 37 1 39 8 63 1 145 1 208 4 331 2 40 1 259 2 332 1 41 1 237 2 333 1 210 2 171 1 334 1 21 1 45 2 91 2 
156 1 339 1 342 1 297 1 243 1 298 1 94 1 300 1 77 3 57 2 349 1 80 1 249 1 102 1 103 1 190 1 148 1 208 2 40 1 193 1 237 1 171 1 194 1 21 1 267 1 45 1 127 1 
304 1 155 1 156 1 148 1 297 1 208 2 353 1 149 1 298 3 94 1 300 1 77 6 237 1 57 3 302 2 349 1 203 1 172 1 222 2 80 1 325 2 45 1 35 1 153 1 249 1 102 1 
154 1 199 1 176 1 156 2 50 1 297 1 298 8 94 2 300 11 77 14 302 1 57 6 56 3 164 1 58 3 349 2 80 11 325 1 249 2 102 2 190 1 307 1 148 4 208 4 192 1 193 2 237 1 333 1 194 2 267 1 45 2 89 1 
23 1 176 1 156 1 339 2 158 1 342 1 320 1 298 1 112 1 94 1 322 1 77 2 31 1 163 1 180 1 57 1 349 1 223 1 325 1 249 1 187 1 39 1 190 1 148 1 106 1 208 2 331 1 124 1 40 1 237 1 310 1 333 1 210 1 171 1 87 1 21 2 45 1 91 1 
176 1 320 1 94 2 322 1 5 1 100 1 180 1 57 4 223 1 222 1 102 1 190 1 232 1 148 3 106 1 331 1 193 1 237 2 194 1 21 2 23 1 156 2 339 2 342 1 27 1 297 1 298 3 300 3 77 7 115 1 31 1 163 1 302 1 349 2 80 3 249 2 39 1 208 4 40 1 124 1 210 1 171 1 126 1 87 1 267 1 45 2 91 1 
199 1 155 1 156 1 105 1 148 1 208 2 298 2 94 1 193 1 300 1 77 2 237 1 302 1 349 1 80 1 45 1 249 1 102 1 
155 1 156 1 148 1 297 1 208 2 94 1 300 1 77 2 237 1 57 2 349 1 80 1 267 1 45 1 314 1 249 1 
155 1 156 1 297 1 298 2 94 1 300 2 77 4 57 2 349 1 80 2 249 1 102 1 148 2 208 2 193 1 237 1 194 1 267 1 45 1 
199 1 156 1 105 1 148 1 208 2 298 2 94 1 193 1 300 1 77 2 237 1 302 1 181 1 349 1 80 1 45 1 249 1 102 1 
156 1 148 1 297 1 208 2 94 1 300 1 77 2 237 1 181 1 57 2 349 1 80 1 267 1 45 1 314 1 249 1 
199 1 156 1 297 1 298 2 94 1 300 2 77 4 181 1 302 1 57 2 349 1 80 2 249 1 102 1 148 2 208 2 193 1 237 1 194 1 267 1 45 1 
156 1 148 2 297 1 208 2 298 2 94 1 193 1 300 2 237 1 77 4 194 1 57 2 349 1 80 2 267 1 45 1 249 1 102 1 
176 1 156 1 339 1 27 1 320 1 298 1 94 1 77 2 322 1 31 1 180 1 163 1 57 1 349 1 223 1 325 1 249 1 39 1 208 2 331 1 124 1 237 1 333 1 210 1 87 1 21 1 45 1 91 1 
176 1 156 1 339 1 320 1 298 1 94 1 3 1 77 2 322 1 180 1 163 1 57 1 349 1 223 1 325 1 249 1 39 1 208 2 331 1 124 1 237 1 333 1 210 1 196 1 313 1 21 1 45 1 91 1 
156 1 297 1 298 2 94 1 300 2 77 4 57 2 349 1 80 2 249 1 102 1 190 1 148 2 208 2 193 1 237 1 194 1 267 1 45 1 
156 1 339 1 27 1 297 1 320 1 298 2 94 1 300 2 77 4 31 1 100 1 180 1 163 1 57 2 349 1 223 1 80 2 249 1 102 1 39 1 148 2 208 2 331 1 124 1 193 1 41 1 237 1 210 1 194 1 87 1 267 1 21 1 45 1 91 1 
199 1 156 1 339 1 342 1 297 1 243 1 298 2 94 1 300 1 77 3 57 1 302 1 349 1 80 1 249 1 102 1 103 1 185 1 190 1 148 1 208 2 40 1 193 1 237 1 171 1 194 1 267 1 21 1 45 1 
269 1 199 1 49 1 156 2 297 2 54 1 298 6 94 2 114 1 77 13 56 2 57 7 58 1 302 1 349 2 137 1 249 2 102 2 250 1 61 1 307 1 208 4 193 2 209 1 194 2 354 1 267 2 89 1 
269 1 199 2 131 1 130 1 48 1 72 2 156 3 297 2 54 1 298 14 94 3 114 4 77 26 348 1 302 3 57 12 56 2 58 2 349 3 222 1 137 1 249 3 102 3 250 2 280 1 61 2 351 1 168 1 208 6 193 3 209 1 194 3 267 2 89 2 
269 1 130 1 131 1 48 1 54 1 94 3 58 3 57 21 56 4 222 2 137 1 102 5 280 1 61 2 149 1 193 4 194 4 153 1 199 4 156 3 72 1 297 5 298 20 77 41 114 4 348 1 302 6 349 3 35 1 249 3 250 1 304 1 351 1 168 1 307 1 208 6 353 1 209 1 354 1 172 1 267 4 357 1 89 3 
269 1 130 1 131 1 48 1 54 1 94 4 58 3 57 18 56 4 222 2 137 1 102 5 280 1 61 2 149 1 193 4 194 4 153 1 199 3 156 4 72 2 297 4 298 20 77 38 114 4 348 1 302 5 349 4 35 1 249 4 250 1 304 1 351 1 168 1 307 1 208 8 353 1 209 1 354 1 172 1 267 3 357 1 89 3 
269 1 199 2 131 1 130 1 48 1 72 1 156 2 297 5 54 1 298 18 94 2 77 37 114 4 348 1 302 4 56 3 57 19 58 2 349 2 222 2 137 1 35 1 249 2 102 5 304 1 250 1 280 1 61 1 351 1 168 1 307 1 208 4 353 1 149 1 193 4 209 1 194 4 172 1 267 4 153 1 89 2 
176 1 156 1 339 2 320 2 298 1 94 1 202 1 77 2 98 1 163 1 57 1 349 1 223 2 8 1 249 1 39 2 63 1 145 1 190 1 208 2 331 1 40 2 259 2 237 1 333 1 210 1 263 1 69 1 21 2 45 1 91 1 
332 1 322 1 210 1 163 1 39 1 101 1 223 1 334 1 266 1 256 1 320 1 331 1 160 1 91 1 
184 1 174 1 143 1 39 1 341 1 12 1 320 1 201 1 83 2 331 1 160 1 28 1 66 1 218 1 223 1 101 1 227 1 91 1 
184 1 174 1 143 1 39 2 341 1 12 1 320 2 201 1 83 2 331 1 160 1 28 1 41 1 66 1 218 1 223 2 101 1 227 1 91 1 
184 1 174 1 186 1 143 1 39 1 341 1 320 1 201 1 83 2 331 1 28 1 66 1 218 1 223 1 101 1 227 1 91 1 
340 1 
122 1 188 1 157 1 123 1 235 1 246 1 162 1 60 1 324 1 198 1 
122 2 294 2 147 2 123 2 297 1 193 1 246 2 194 1 204 4 267 1 268 2 102 1 
277 1 122 1 107 1 93 1 324 1 26 1 
93 4 157 1 26 3 271 1 320 4 299 2 245 1 246 2 162 2 322 2 163 1 60 2 223 4 224 2 183 2 165 1 277 3 62 1 39 4 123 2 13 1 331 1 332 1 107 2 210 1 109 1 334 1 198 2 91 1 
235 1 246 1 122 1 188 1 324 1 203 1 123 1 
132 1 93 1 157 1 26 1 246 1 162 1 60 1 324 1 204 1 225 1 277 1 122 2 123 1 107 1 265 1 198 1 268 1 
46 1 213 1 93 2 320 1 322 1 219 1 180 1 60 2 59 1 223 1 102 1 277 2 147 3 331 1 286 1 193 1 107 1 194 1 198 2 22 1 295 1 294 3 157 2 26 2 111 2 74 1 297 1 344 1 299 1 246 3 162 2 115 1 163 3 33 1 204 6 122 3 39 1 123 4 210 1 267 1 268 3 91 2 
131 1 130 1 93 1 48 1 294 5 26 1 157 2 73 1 297 2 299 1 246 5 162 2 219 2 56 1 60 2 58 1 324 2 204 6 224 1 102 2 277 1 122 5 351 1 168 1 147 5 123 8 284 1 193 2 107 1 289 1 194 2 198 2 267 2 268 3 89 1 
270 1 317 1 339 1 157 1 26 1 342 1 297 1 246 2 162 1 219 2 273 1 60 1 138 1 102 2 277 1 304 1 228 1 103 1 141 1 123 2 284 1 353 1 149 1 40 1 171 1 68 1 21 1 198 1 
176 1 337 1 156 1 339 3 342 2 27 1 320 1 94 1 77 1 322 1 31 1 180 1 163 1 57 1 349 1 223 1 325 1 249 1 103 2 141 1 39 1 208 2 331 1 40 2 124 1 237 1 210 1 171 2 87 1 21 3 45 1 91 1 
122 4 294 2 157 1 147 2 123 1 299 1 246 2 162 1 60 1 324 2 204 4 224 1 198 1 268 2 153 1 
221 1 88 1 
221 1 88 1 
221 1 88 1 
221 1 88 1 
221 1 88 1 
221 1 88 1 
221 1 88 1 
221 1 88 1 
136 1 309 1 
304 1 199 2 156 1 297 2 208 2 149 2 353 2 298 5 94 1 77 10 68 1 302 5 57 5 349 1 222 3 137 1 249 1 102 2 
199 1 156 1 208 2 298 2 94 1 193 1 77 2 302 1 349 1 137 1 249 1 102 1 
156 1 297 1 208 2 298 2 94 1 193 1 77 4 194 1 57 2 349 1 137 1 267 1 249 1 102 1 
199 1 72 1 156 3 208 6 149 1 353 1 298 1 94 3 236 1 77 3 354 1 57 2 302 2 349 3 222 1 137 1 249 3 
199 5 72 2 156 5 52 1 297 5 298 16 94 5 77 34 57 18 56 4 58 3 302 9 349 5 222 4 182 1 137 1 35 1 249 5 102 5 304 2 281 1 307 1 208 10 353 3 149 3 193 3 236 1 194 3 354 1 195 1 172 1 267 3 153 1 89 1 
130 1 156 1 297 1 298 4 94 1 77 8 58 1 57 4 56 1 302 2 349 1 222 2 137 1 35 1 249 1 102 1 304 1 208 2 149 1 353 1 172 1 153 1 89 1 
130 1 199 1 156 2 52 1 297 1 298 6 94 2 77 11 57 5 56 2 58 1 302 3 349 2 222 2 137 1 35 1 249 2 102 2 304 1 307 1 208 4 353 1 149 1 193 1 194 1 172 1 153 1 89 1 
199 1 130 1 131 1 48 1 156 3 72 1 52 1 297 3 298 9 94 3 77 19 58 1 57 10 56 1 302 4 349 3 222 3 137 1 35 1 249 3 102 3 304 1 351 1 168 1 208 6 353 1 149 1 193 2 194 2 172 1 267 2 153 1 89 1 
199 1 130 1 131 1 48 1 156 4 72 2 52 1 297 1 298 7 94 4 77 12 58 1 57 5 56 1 302 2 349 4 222 1 137 1 249 4 102 2 351 1 168 1 208 8 193 2 194 2 267 1 89 1 
130 1 156 1 297 1 298 4 94 1 77 8 58 1 57 4 56 1 302 2 349 1 222 2 137 1 35 1 249 1 102 1 304 1 208 2 149 1 353 1 172 1 153 1 89 1 
199 1 130 1 131 1 48 1 156 2 72 1 297 2 298 6 94 2 77 13 58 1 57 7 56 1 302 2 349 2 222 1 137 1 249 2 102 2 351 1 168 1 208 4 193 2 194 2 267 2 89 1 
199 2 131 1 130 1 48 1 156 4 72 2 52 1 297 2 298 10 94 4 77 18 57 8 56 1 58 1 302 5 349 4 222 3 137 1 35 1 249 4 102 3 304 1 351 1 168 1 208 8 353 1 149 1 193 2 194 2 172 1 267 1 153 1 89 1 
199 3 131 1 130 1 48 1 156 4 72 2 297 2 298 9 94 4 77 16 57 7 56 1 58 1 302 4 349 4 222 1 137 1 249 4 102 3 351 1 168 1 208 8 193 3 194 3 354 1 267 2 89 1 
304 1 199 3 297 1 149 3 353 3 298 3 77 7 57 4 302 6 172 1 222 3 35 2 102 1 
199 1 131 1 130 1 48 1 156 4 72 2 297 2 298 10 94 4 77 18 57 8 56 1 58 1 302 4 349 4 222 3 137 1 35 1 249 4 102 3 304 1 351 1 168 1 208 8 353 1 149 1 193 2 194 2 354 1 172 1 267 1 153 1 89 1 
304 1 199 1 156 2 72 1 297 1 208 4 149 1 353 1 298 4 94 2 77 8 57 4 302 3 349 2 172 1 222 2 35 1 153 1 249 2 102 1 
304 1 297 1 149 1 353 1 298 3 77 6 57 3 302 2 203 1 172 1 222 2 35 1 153 1 102 1 
199 1 156 1 52 1 297 1 208 2 298 2 94 1 193 1 77 4 194 1 57 2 302 1 349 1 267 1 249 1 102 1 
199 1 307 1 297 1 298 3 193 1 77 7 194 1 56 2 57 4 58 1 302 1 267 1 89 1 102 1 
154 1 199 4 72 1 156 1 297 5 298 13 94 1 77 25 58 2 57 12 56 2 302 8 349 1 222 4 35 1 249 1 102 5 304 2 307 1 208 2 353 2 149 2 192 1 193 2 194 2 68 1 172 1 267 2 153 1 
77 1 57 1 56 1 
77 1 58 1 298 1 
199 1 297 1 298 3 193 1 115 1 77 6 194 1 57 3 302 2 222 1 267 1 102 1 
199 1 130 1 131 1 48 1 156 2 72 1 297 2 298 6 94 2 77 13 58 1 57 7 56 1 302 2 349 2 222 1 137 1 249 2 102 2 351 1 168 1 208 4 193 2 194 2 267 2 89 1 
304 1 199 1 297 1 149 1 353 1 298 3 77 6 57 3 302 2 222 1 102 1 
199 1 72 1 156 1 208 2 353 1 149 1 298 1 94 1 236 1 77 3 302 2 57 2 349 1 172 1 222 1 35 1 249 1 
328 1 339 1 255 1 325 1 21 1 276 1 40 1 
328 1 38 1 339 1 255 1 40 1 96 1 260 1 238 1 325 1 21 1 276 1 336 1 
39 4 320 4 331 1 285 1 332 1 41 1 322 1 210 1 264 1 163 1 223 4 334 1 91 1 
327 1 121 1 39 2 51 1 320 2 215 1 331 1 210 1 180 1 163 1 19 1 223 2 183 1 91 2 
184 1 322 1 218 1 143 1 39 1 223 1 320 1 83 1 331 1 91 1 
174 1 39 2 145 1 320 2 331 1 41 1 210 1 163 1 223 2 69 1 91 1 
206 1 25 1 39 5 145 1 320 5 331 2 285 1 332 1 41 1 322 1 210 2 163 3 223 4 334 1 183 1 91 2 
175 1 206 1 39 5 145 1 320 5 331 2 285 1 332 1 41 1 322 1 210 2 163 3 223 4 334 1 183 1 91 2 
332 1 322 1 210 1 163 1 39 1 203 1 223 1 334 1 320 1 331 1 91 1 
23 1 339 2 39 1 342 1 320 1 331 1 124 1 40 1 322 1 210 1 171 1 163 1 180 1 223 1 87 1 325 1 21 2 91 1 
23 1 241 1 339 2 317 2 342 2 320 1 247 1 180 2 163 3 347 1 223 1 325 1 183 1 81 1 303 1 39 1 331 1 40 2 124 1 210 2 171 1 87 1 21 2 91 1 
23 1 241 1 339 2 317 2 342 2 320 1 247 1 180 2 163 3 347 1 223 1 325 1 183 1 81 1 303 1 39 1 331 1 40 2 124 1 210 2 171 1 313 1 21 2 91 1 
270 1 93 1 317 1 339 1 26 2 342 1 111 1 320 1 247 1 273 1 163 4 180 1 347 1 324 1 223 1 183 1 228 1 277 2 82 1 103 1 122 1 141 1 39 1 308 1 331 1 40 1 288 1 210 1 171 1 21 1 91 1 22 1 
270 1 93 1 317 1 339 1 26 2 342 1 111 1 320 1 273 1 163 1 59 1 324 1 223 1 183 1 277 2 228 1 122 1 103 1 141 1 39 1 40 1 171 1 21 1 22 1 
315 1 39 1 223 1 320 1 331 1 91 1 
174 1 315 1 206 1 46 1 121 1 37 1 25 1 39 7 51 1 145 1 320 7 331 2 259 1 41 1 322 2 179 1 210 2 180 1 163 3 223 6 91 3 
23 1 156 2 339 2 342 1 27 1 297 1 320 1 298 3 94 2 300 1 202 1 77 6 5 1 100 1 31 1 163 1 180 1 57 3 302 2 349 2 222 2 223 1 80 1 325 2 35 1 249 2 102 1 304 1 39 1 190 1 148 1 208 4 353 1 149 1 331 1 124 1 40 1 41 1 237 2 210 1 171 1 172 1 87 1 21 2 45 2 153 1 91 1 
270 1 93 2 317 1 320 1 322 1 219 2 273 1 59 1 60 2 324 2 223 1 102 2 277 3 228 1 103 1 141 1 188 1 13 1 284 1 149 1 286 1 235 1 107 1 68 1 198 2 21 1 22 1 339 1 26 3 157 2 342 1 111 1 74 1 297 2 246 5 162 2 163 1 33 1 304 1 122 2 39 1 306 1 123 4 353 1 40 1 171 1 
315 1 46 1 295 1 39 2 320 2 331 1 41 1 288 1 210 1 180 1 163 2 223 2 91 2 
23 1 339 2 39 1 342 1 320 1 331 1 124 1 40 1 322 1 210 1 171 1 163 1 180 1 223 1 313 1 325 1 21 2 91 1 
46 1 121 1 39 1 51 1 320 1 331 1 179 1 210 1 180 1 163 1 223 1 183 1 91 2 
29 1 330 1 11 1 325 1 14 1 
270 1 339 1 317 2 26 2 342 1 244 1 29 1 273 1 324 1 275 1 34 1 81 1 303 1 277 2 228 1 330 1 103 1 122 1 141 1 11 1 306 1 14 1 40 1 65 1 171 1 21 1 152 1 22 1 
29 1 98 1 263 1 339 1 11 1 8 1 21 1 14 1 40 1 
29 1 275 1 152 1 
262 1 316 1 17 1 177 1 144 1 64 1 257 1 290 1 
1 2 167 1 316 2 144 4 64 2 345 1 257 4 15 1 323 1 262 3 17 1 290 1 10 1 120 1 
1 1 262 1 316 1 17 1 177 1 144 2 64 1 343 1 283 1 257 2 290 1 95 1 
167 2 92 1 316 1 177 1 144 3 64 1 257 3 323 1 262 1 17 1 290 1 120 2 
329 1 262 2 133 1 90 2 
16 1 17 1 177 1 144 1 257 1 290 1 
1 1 262 1 316 1 17 1 177 1 144 2 64 1 257 2 290 1 226 1 
7 1 
262 1 316 1 17 1 177 1 144 1 64 1 257 1 290 1 
262 1 316 1 203 1 64 1 
262 1 316 1 17 1 144 1 64 1 257 1 290 1 
24 1 32 1 144 1 
167 2 323 1 262 1 316 1 17 1 177 1 144 3 64 1 326 1 257 3 290 1 120 1 
1 1 161 1 262 1 316 1 17 1 144 2 64 1 257 2 290 1 
129 1 262 1 143 1 17 1 177 1 144 1 83 1 257 1 10 1 290 1 227 1 
262 1 17 1 177 1 144 1 64 1 257 1 290 1 
316 1 17 1 177 1 144 1 64 2 257 1 290 1 
177 1 144 2 64 1 319 1 257 2 216 1 116 1 262 1 17 2 290 2 
1 2 316 1 177 1 144 3 64 1 257 3 15 1 170 1 262 2 17 1 290 1 10 1 226 1 
184 1 1 1 316 1 143 1 177 1 144 2 64 1 242 1 83 2 257 2 28 1 262 1 17 1 290 1 227 1 
1 2 316 1 177 1 144 4 64 1 257 4 15 1 161 1 42 1 262 2 17 2 290 2 10 1 
1 1 167 1 262 1 316 1 17 1 177 1 144 3 64 1 257 3 290 1 226 1 
262 1 345 1 10 1 15 1 
262 1 64 1 

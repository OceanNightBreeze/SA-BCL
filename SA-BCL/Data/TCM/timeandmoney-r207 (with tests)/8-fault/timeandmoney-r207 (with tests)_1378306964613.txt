#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 152 
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 178 87 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 152 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (8,206) (8,206) (51,187) 147 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 59 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 35 236 84 185 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 152 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 178 (245,252) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 178 (77,197) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 178 (77,197) 262 56 (51,187) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 178 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 347 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1083 | 12 -> -1
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 5081 | = null
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9719 | if (x) -> if (!x)
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> -
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | RETURN | 891 | return null
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | ASSIGN | 4081 | = null
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | OPERATOR | 2465 | - -> <<
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> 0
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
66 5 91 1 50 2 188 1 10 2 237 1 171 2 30 2 127 4 216 1 280 1 156 1 310 9 36 1 339 1 313 1 312 1 285 1 39 3 80 6 83 2 342 1 16 1 141 1 345 2 18 1 88 9 65 2 
66 5 91 1 50 2 188 1 10 2 237 1 171 2 30 2 127 4 216 1 280 1 156 1 310 9 36 1 339 1 313 1 312 1 285 1 39 3 80 6 83 2 342 1 16 1 141 1 345 2 18 1 88 9 65 2 
66 6 91 1 50 2 188 1 10 2 237 1 171 2 30 2 127 5 216 1 280 1 156 1 310 10 36 1 339 1 313 1 312 1 285 1 39 4 80 7 83 2 342 1 16 1 141 1 345 2 18 1 88 10 65 2 
66 4 91 1 50 2 188 1 10 2 237 1 171 2 30 2 127 3 216 1 280 1 156 1 310 7 36 1 313 1 312 1 285 1 39 2 80 4 83 2 342 1 16 1 141 1 345 1 18 1 88 7 65 2 
280 1 66 3 91 1 156 1 310 4 339 1 39 1 50 1 80 3 83 1 10 1 16 1 141 1 30 1 127 2 345 2 88 4 65 1 
66 1 280 1 47 1 156 1 310 2 199 1 312 1 50 1 148 1 10 1 141 1 171 1 30 1 18 1 88 2 65 1 
280 1 66 2 156 1 310 3 50 2 39 1 80 1 342 1 141 1 171 1 127 1 88 3 65 2 
66 5 91 1 50 2 188 1 10 1 171 1 30 1 127 4 331 1 280 1 156 1 310 9 36 1 257 1 339 1 39 3 80 7 342 1 83 1 16 1 141 1 345 2 88 9 65 2 
66 5 91 1 50 2 188 1 10 1 171 1 30 1 127 4 331 1 280 1 156 1 310 9 36 1 257 1 339 1 39 3 80 7 342 1 83 1 16 1 141 1 345 2 88 9 65 2 
134 1 152 1 338 1 
109 1 351 2 134 1 
82 2 169 2 343 2 228 2 86 1 107 2 356 1 165 2 
118 1 169 2 21 1 292 2 94 1 267 2 268 1 24 1 123 1 236 2 302 1 305 1 356 1 278 1 357 1 358 1 132 1 360 1 154 1 35 2 198 1 176 2 77 1 107 3 108 1 177 1 82 2 343 2 112 1 320 1 61 1 287 1 228 2 86 1 206 1 165 3 208 1 
82 1 169 1 9 1 2 1 343 1 336 1 228 1 107 1 356 1 165 1 
116 1 2 1 134 1 284 1 338 1 25 1 107 1 122 1 271 1 159 1 343 1 31 1 165 1 263 1 
169 1 116 1 2 1 134 1 284 1 338 1 25 1 107 1 122 1 271 2 82 1 343 1 31 2 228 1 165 1 
271 1 41 1 189 1 31 1 53 1 
271 2 134 1 41 1 189 1 31 2 353 1 338 1 106 1 
271 1 189 1 31 1 
169 1 2 1 336 1 212 1 107 1 271 1 9 1 82 1 343 1 41 1 31 1 228 1 356 1 165 1 
134 1 
271 2 134 1 41 1 189 1 31 2 338 1 106 1 270 1 
346 1 46 1 134 1 282 1 220 1 338 1 106 1 234 1 298 1 223 2 271 5 366 1 81 2 368 2 41 2 31 5 189 2 72 1 142 1 
132 1 236 1 35 1 158 1 176 1 
152 1 86 1 
169 1 107 2 82 1 343 2 228 1 86 2 52 1 165 2 253 1 
243 1 246 1 129 1 
132 1 360 1 35 1 186 1 268 1 176 1 77 1 107 1 108 1 236 1 112 1 287 1 86 1 165 1 357 1 208 1 
90 1 169 1 2 1 158 1 107 2 82 2 343 2 17 1 228 2 86 1 165 2 253 1 
82 2 2 1 343 2 336 1 228 2 322 1 107 2 165 2 
169 1 82 3 343 3 17 1 228 3 86 1 107 3 165 3 
82 1 2 1 343 1 336 1 228 1 107 1 165 1 
82 1 169 1 2 1 343 1 228 1 52 1 107 1 165 1 253 1 
82 1 169 1 343 1 228 1 158 1 107 1 165 1 253 1 
159 1 82 1 343 2 17 1 228 1 86 1 107 2 277 1 165 2 
158 1 
169 1 107 2 82 2 243 1 343 2 17 1 228 2 129 1 165 2 253 1 
132 1 360 1 35 1 268 1 176 1 77 1 107 1 108 1 236 1 112 1 287 1 86 1 165 1 357 1 208 1 
132 1 360 1 35 1 34 1 268 1 176 1 107 1 108 1 236 1 112 1 252 1 287 1 86 1 165 1 208 1 
118 1 45 1 21 1 94 1 292 4 246 2 267 2 348 1 95 1 328 1 297 1 7 1 302 1 305 1 129 2 333 1 32 1 358 2 154 1 243 2 202 1 320 2 260 1 261 1 
82 1 2 1 343 1 228 1 107 1 322 1 165 1 122 1 
173 1 355 1 
173 1 355 1 
40 1 238 1 
40 1 238 1 
40 1 238 1 
104 1 173 1 355 1 
273 1 40 1 301 1 238 1 173 2 355 2 
276 1 173 1 355 1 
104 1 173 1 355 1 
104 1 173 1 355 1 
209 1 173 1 355 1 
209 1 173 1 355 1 
209 1 173 1 355 1 
119 1 22 1 327 1 120 1 98 1 271 1 330 1 276 1 31 1 173 1 355 1 75 1 107 2 314 1 82 2 365 1 343 2 321 1 161 1 227 1 228 2 86 1 181 1 165 2 
217 1 75 3 134 1 327 2 38 1 314 2 273 1 271 2 365 2 99 1 110 2 161 2 31 2 227 1 173 2 332 1 289 1 355 2 20 1 
83 1 10 1 30 1 
10 1 30 1 148 1 
153 1 14 1 60 1 83 2 10 3 148 1 
153 1 14 1 83 1 10 2 203 1 148 1 
14 1 153 2 83 1 10 2 148 1 
346 2 46 1 22 1 266 1 120 1 23 2 213 1 5 1 297 1 98 1 7 1 271 5 351 3 172 1 189 1 31 5 333 1 131 2 359 1 134 2 220 3 106 1 338 1 137 2 223 1 317 1 81 1 202 1 109 1 368 1 41 4 143 1 
169 1 2 1 212 1 271 2 9 1 189 1 31 2 125 1 53 1 356 1 134 1 336 1 105 1 338 1 107 1 82 1 343 1 41 2 228 1 288 1 165 1 
346 2 266 1 23 2 5 1 213 1 297 1 234 1 98 1 7 1 271 3 351 4 31 3 333 1 131 1 134 3 220 3 338 1 137 2 317 1 223 1 81 1 202 1 109 2 368 1 41 2 143 1 
346 4 266 1 23 4 247 1 5 1 213 2 297 2 234 1 98 2 7 2 271 4 351 7 31 4 333 2 131 2 134 4 220 5 157 1 338 1 258 1 137 4 223 1 317 1 81 1 202 2 109 3 368 1 41 3 143 1 
178 1 152 1 
229 1 208 1 
145 1 
112 1 287 1 208 1 
214 1 208 1 
287 1 208 1 
178 1 112 1 287 1 63 1 87 1 208 1 
358 6 45 4 292 13 230 1 348 3 96 1 241 1 7 3 235 1 28 2 225 1 344 2 320 7 205 1 70 1 333 3 370 1 290 2 
358 6 45 6 292 13 230 1 348 3 96 1 241 1 7 3 235 3 28 2 225 1 344 2 320 7 205 1 70 1 333 3 370 1 290 2 
45 4 292 13 230 1 348 3 96 1 7 3 235 1 28 2 70 1 333 3 358 6 241 1 225 1 320 7 344 2 205 1 370 1 244 1 290 2 
45 13 21 1 94 1 292 39 230 2 267 2 348 6 96 1 269 1 213 3 297 3 7 6 349 1 28 3 235 7 302 1 70 1 130 1 333 6 307 3 358 19 154 1 283 1 13 4 241 1 316 1 315 1 202 3 225 2 344 2 320 20 205 1 370 2 324 1 290 3 
45 6 21 2 94 2 292 15 230 1 267 4 348 4 96 1 7 3 235 2 28 2 302 2 70 1 333 3 54 1 358 7 154 2 283 1 241 1 225 1 320 8 344 2 162 1 370 1 290 2 
66 1 231 1 50 1 148 1 215 1 350 1 10 2 236 1 171 1 30 1 352 1 55 1 280 1 360 1 12 1 218 1 35 1 156 1 361 1 310 2 176 1 78 1 364 1 108 1 80 1 60 1 83 1 141 1 88 2 65 1 
66 1 231 1 50 1 148 1 215 1 350 1 10 2 236 1 29 1 171 1 30 1 352 1 55 1 193 1 360 1 12 1 218 1 35 1 156 1 310 3 176 1 136 1 364 1 108 1 80 2 60 1 83 1 141 1 88 3 65 1 
66 1 148 1 215 1 10 2 236 1 29 1 171 1 30 1 352 1 55 1 193 1 360 1 12 1 218 1 35 1 156 1 310 2 176 1 364 1 108 1 80 2 60 1 83 1 141 1 88 2 
1 1 211 1 233 1 49 1 50 1 236 1 171 2 55 2 73 1 132 1 360 1 218 2 35 1 310 1 176 1 136 1 108 1 364 2 287 1 85 1 88 1 65 1 208 1 
231 1 50 1 148 1 215 1 350 1 10 2 236 1 171 1 30 1 352 1 55 1 280 1 193 1 360 1 12 1 218 1 35 1 310 1 176 1 78 1 364 1 108 1 60 1 83 1 88 1 65 1 
311 1 
0 2 46 1 184 1 2 1 266 1 4 1 232 1 97 1 271 5 272 1 236 2 189 6 102 1 196 1 284 1 338 1 106 3 107 1 108 1 159 1 109 2 343 1 287 1 64 1 165 1 208 1 346 2 116 1 211 1 25 1 69 2 122 1 299 1 351 2 124 2 300 1 31 5 174 4 306 1 73 1 132 2 360 1 134 2 35 2 220 2 363 1 176 2 223 1 81 1 318 2 259 2 319 2 368 1 183 2 263 1 
116 1 2 1 25 1 97 1 122 1 270 1 299 1 272 1 271 3 300 1 31 3 189 2 174 2 284 1 106 1 107 1 159 1 343 1 319 1 64 1 165 1 263 1 
116 1 2 1 25 1 97 1 122 1 270 1 299 1 272 1 271 3 300 1 189 1 31 3 174 3 134 1 284 1 338 1 106 1 107 1 159 1 343 1 64 1 165 1 263 1 183 1 
116 1 2 1 25 1 97 1 69 1 270 1 122 1 299 1 272 1 271 3 300 1 31 3 189 2 174 3 134 1 284 1 106 1 338 1 107 1 159 1 343 1 319 1 64 1 165 1 263 1 183 1 
0 2 46 1 2 1 184 1 97 1 270 1 271 5 272 1 149 1 189 7 284 1 106 3 338 5 107 1 159 1 286 1 343 1 109 2 64 1 165 1 346 1 116 1 25 1 69 4 122 1 299 1 124 2 300 1 128 1 31 5 174 6 306 1 33 1 134 5 220 1 135 1 223 1 81 1 318 2 259 2 319 4 368 1 263 1 183 4 
0 2 46 1 2 1 184 1 97 1 271 4 272 1 189 4 284 1 106 2 338 1 107 1 159 1 343 1 109 2 64 1 165 1 346 1 116 1 25 1 69 2 122 1 299 1 351 2 124 2 300 1 31 4 174 4 306 1 134 2 220 1 363 1 223 1 81 1 318 2 259 2 368 1 319 2 263 1 183 2 
0 2 346 1 116 1 46 1 184 1 2 1 25 1 97 1 69 2 122 1 299 1 272 1 271 4 149 1 124 2 300 1 189 4 31 4 174 4 306 1 33 1 134 1 220 1 284 1 338 1 106 2 135 1 107 1 223 1 159 1 81 1 318 2 109 2 343 1 259 2 319 2 368 1 64 1 165 1 183 2 263 1 
0 2 346 1 116 1 46 1 184 1 2 1 25 1 97 1 69 2 122 1 299 1 272 1 271 4 149 1 124 2 300 1 189 4 31 4 174 4 306 1 33 1 134 1 220 1 284 1 338 1 106 2 135 1 107 1 223 1 159 1 81 1 318 2 109 2 343 1 259 2 319 2 368 1 64 1 165 1 183 2 263 1 
0 2 346 1 116 1 46 1 184 1 2 1 265 2 92 1 25 1 97 1 69 2 122 1 299 1 272 1 271 4 274 1 351 2 124 2 300 1 189 4 31 4 174 4 33 1 134 1 220 1 284 1 338 1 106 2 107 1 223 1 159 1 81 1 343 1 140 1 319 2 368 1 64 1 89 2 165 1 183 2 263 1 
0 2 346 1 46 1 116 1 184 1 2 1 25 1 97 1 69 3 122 1 299 1 272 1 271 4 149 1 124 2 300 1 31 4 189 5 174 5 306 1 33 1 134 1 220 1 284 1 338 1 106 2 135 1 107 1 223 1 81 1 159 1 318 2 286 1 109 2 343 1 259 2 368 1 319 3 64 1 165 1 263 1 183 3 
0 2 346 1 46 1 116 1 184 1 2 1 25 1 97 1 69 3 122 1 299 1 272 1 271 4 149 1 124 2 300 1 31 4 189 5 174 5 306 1 33 1 134 1 220 1 284 1 338 1 106 2 135 1 107 1 223 1 81 1 159 1 318 2 286 1 109 2 343 1 259 2 368 1 319 3 64 1 165 1 263 1 183 3 
0 2 46 1 2 1 184 1 265 2 97 1 271 4 272 1 274 1 189 4 284 1 106 2 338 1 107 1 159 1 343 1 64 1 165 1 346 1 116 1 25 1 69 2 122 1 299 1 351 2 124 2 300 1 31 4 174 4 134 1 220 1 363 1 223 1 81 1 368 1 319 2 89 2 263 1 183 2 
358 2 45 1 118 1 21 1 154 1 292 4 94 1 348 1 267 2 328 1 96 1 7 1 28 1 320 2 344 1 302 1 70 1 152 1 86 1 305 1 333 1 290 1 
45 2 118 1 21 2 94 2 292 14 68 1 246 11 348 1 267 4 213 2 297 1 7 2 123 1 235 1 302 2 11 1 305 2 129 11 130 1 333 1 307 3 74 1 358 6 154 2 255 1 13 3 202 2 243 4 61 1 180 1 320 8 86 1 324 1 
358 1 118 1 21 1 154 1 292 2 94 1 267 2 158 1 123 1 320 1 61 1 226 1 302 1 305 1 113 1 74 1 
358 1 132 1 118 1 21 1 154 1 292 1 94 1 35 1 267 2 158 1 147 1 176 1 187 1 8 1 123 1 236 1 302 1 305 1 206 1 74 1 
118 2 21 2 94 2 292 2 293 1 267 4 211 1 328 1 296 1 250 1 123 1 236 7 302 2 305 2 240 1 278 2 73 1 358 1 193 1 360 2 132 2 154 2 309 1 35 8 76 1 361 1 221 1 176 8 107 1 108 2 82 1 343 1 17 1 61 1 320 1 228 1 287 2 165 1 208 3 
45 1 169 1 118 1 21 1 94 1 292 3 246 1 348 1 267 2 213 1 297 1 7 1 302 1 129 1 305 1 333 1 253 1 74 1 358 2 154 1 107 1 82 1 243 1 202 1 343 1 320 1 228 1 43 1 165 1 
45 1 118 1 21 1 154 1 292 2 94 1 246 1 267 2 95 1 328 1 7 1 243 1 202 1 235 1 320 2 302 1 129 1 305 1 
358 2 45 1 118 1 21 1 154 1 292 2 94 1 246 1 348 1 267 2 328 1 297 1 243 1 302 1 129 1 305 1 333 1 32 1 
118 1 45 2 21 1 94 1 292 4 246 2 267 2 348 1 328 1 213 1 297 1 7 1 235 1 302 1 305 1 129 2 333 1 358 2 154 1 202 1 243 2 320 2 
45 1 118 1 21 1 154 1 292 2 94 1 246 1 267 2 95 1 7 1 250 1 243 1 202 1 235 1 320 2 302 1 129 1 305 1 
358 2 45 1 118 1 21 1 154 1 292 2 94 1 246 1 348 1 267 2 297 1 250 1 243 1 302 1 129 1 305 1 333 1 32 1 
118 1 45 2 21 1 94 1 292 4 246 2 267 2 348 1 213 1 297 1 7 1 250 1 235 1 302 1 305 1 129 2 333 1 358 2 154 1 202 1 243 2 320 2 
118 1 45 2 21 1 292 4 94 1 246 2 267 2 348 1 213 1 297 1 7 1 235 1 302 1 305 1 129 2 333 1 358 2 154 1 202 1 243 2 320 2 
118 1 21 1 292 2 94 1 267 2 268 1 123 1 236 1 302 1 305 1 357 1 358 1 360 1 132 1 154 1 35 1 77 1 176 1 107 1 108 1 112 1 320 1 61 1 287 1 86 1 206 1 165 1 208 1 
118 1 21 1 292 2 94 1 267 2 268 1 329 1 123 1 236 1 252 1 302 1 305 1 358 1 360 1 132 1 154 1 34 1 35 1 176 1 107 1 108 1 112 1 320 1 61 1 287 1 86 1 165 1 208 1 
118 1 45 2 21 1 94 1 292 4 246 2 267 2 348 1 213 1 297 1 7 1 235 1 302 1 305 1 129 2 333 1 74 1 358 2 154 1 202 1 243 2 320 2 
45 2 118 1 21 1 292 4 94 1 246 2 348 1 267 2 268 1 213 1 297 1 7 1 8 1 235 1 236 1 302 1 129 2 305 1 333 1 357 1 358 2 360 1 154 1 35 1 361 1 77 1 176 1 107 1 108 1 243 2 202 1 112 1 320 2 287 1 206 1 165 1 208 1 
45 1 169 1 118 1 21 1 94 1 292 3 246 1 267 2 213 1 297 1 7 1 235 1 27 1 302 1 305 1 129 1 333 1 253 1 74 1 358 1 154 1 107 1 82 1 202 1 243 1 343 1 320 2 228 1 165 1 
45 6 21 2 93 1 94 2 292 19 348 3 267 4 48 1 213 3 297 3 7 3 235 3 302 2 126 2 354 1 101 2 130 1 333 3 307 1 358 10 154 2 335 1 337 1 13 2 202 3 320 9 162 1 207 1 324 1 164 1 
45 4 21 3 93 1 144 1 94 3 292 26 348 2 267 6 48 2 213 3 297 2 7 3 249 1 235 2 302 3 126 4 354 2 101 1 333 2 307 2 358 12 194 1 154 3 335 1 283 2 13 2 15 1 202 3 179 1 320 14 162 1 163 1 164 1 324 2 
45 8 21 3 93 1 144 1 94 3 292 40 348 4 267 6 96 1 48 2 213 4 297 4 7 5 249 1 28 1 235 4 302 3 126 4 70 1 354 1 101 1 130 1 333 5 307 3 358 21 194 1 154 3 335 1 337 1 283 1 13 4 15 1 202 4 111 1 344 1 179 1 320 19 162 1 163 1 324 3 164 1 290 1 
45 7 21 4 93 1 144 1 94 4 292 37 348 4 267 8 96 1 48 2 213 4 297 3 7 5 249 1 28 1 235 3 302 4 126 4 70 1 354 1 101 1 130 1 333 4 307 3 358 18 194 1 154 4 335 1 337 1 283 2 13 4 15 1 202 4 111 1 344 1 179 1 320 19 162 1 163 1 324 3 164 1 290 1 
45 14 21 2 93 1 144 1 94 2 292 51 348 7 267 4 96 1 48 1 213 7 297 7 7 8 249 1 28 1 235 7 302 2 126 4 70 1 354 1 101 1 130 2 333 8 307 4 358 25 194 1 154 2 335 1 283 1 255 2 13 4 15 1 202 7 344 1 179 1 320 26 162 1 163 1 324 2 164 1 290 1 
273 1 217 1 365 1 327 1 161 1 173 1 37 1 289 1 355 1 314 1 
330 1 276 1 
325 1 365 1 100 1 327 1 161 1 173 1 121 1 355 1 314 1 
104 1 155 1 
209 1 58 1 301 1 
217 1 75 2 134 1 327 1 314 1 273 1 271 1 365 1 99 1 110 1 227 1 31 1 161 1 173 1 332 1 289 1 355 1 20 1 
217 1 75 2 134 1 327 1 314 1 273 1 271 1 365 1 99 1 110 1 227 1 31 1 161 1 173 1 332 1 289 1 355 1 20 1 
217 1 75 2 134 1 327 1 314 1 273 1 271 1 365 1 99 1 110 1 227 1 31 1 161 1 173 1 332 1 289 1 355 1 20 1 
104 1 301 1 155 1 
104 1 301 1 155 1 
209 1 58 1 
209 1 58 1 301 1 
321 1 181 1 
119 1 22 1 327 1 120 1 98 1 271 1 330 1 99 1 276 1 31 1 173 1 355 1 75 1 107 2 314 1 365 1 82 2 343 2 110 1 41 1 321 1 161 1 228 2 86 1 181 1 165 2 167 1 
210 1 118 1 21 1 94 1 292 2 293 1 267 2 26 1 123 1 236 2 302 1 305 1 278 2 74 1 358 1 360 1 154 1 35 2 221 1 176 2 340 1 107 2 108 1 79 1 343 2 61 1 320 1 62 1 287 1 165 2 208 1 
360 1 193 1 133 1 12 1 35 2 231 1 361 1 176 2 295 1 148 1 108 1 364 1 60 1 83 1 224 1 10 2 236 2 30 1 352 1 
193 1 360 1 168 1 12 1 35 1 231 1 176 1 148 1 364 1 108 1 60 1 83 1 224 1 10 2 236 1 30 1 352 1 
360 1 132 1 133 1 35 1 211 1 176 1 108 1 364 1 236 1 287 1 85 1 208 1 279 1 73 1 
193 1 360 1 133 1 12 1 35 1 231 1 176 1 295 1 148 1 108 1 364 1 60 1 83 1 224 1 10 2 236 1 30 1 352 1 
192 1 
346 1 366 1 134 1 220 1 152 1 338 1 72 1 
346 1 46 1 271 1 351 1 189 1 31 1 306 1 134 2 220 1 106 1 338 1 223 1 81 1 318 1 109 1 259 1 368 1 
229 1 360 1 132 1 46 1 35 1 59 1 176 1 108 2 223 1 242 1 81 1 112 1 236 1 368 1 287 1 63 1 208 2 
346 5 46 2 144 1 266 1 146 1 23 5 213 2 297 2 7 2 271 1 249 1 351 6 251 1 31 1 189 1 333 2 307 1 194 1 102 1 219 2 134 5 220 8 13 1 106 1 338 2 137 5 223 2 201 1 81 2 202 2 109 3 179 1 368 2 163 1 324 1 
346 2 46 1 169 1 2 1 212 1 7 2 271 1 9 1 28 1 31 1 333 1 356 1 219 2 336 1 220 2 135 1 107 1 241 1 223 1 201 1 81 1 82 1 343 1 368 1 344 1 228 1 165 1 290 1 
346 1 46 1 134 1 220 1 338 1 223 1 366 1 81 1 368 1 72 1 
346 5 219 2 134 5 23 5 220 5 213 2 137 5 297 2 7 2 201 1 202 2 351 10 109 5 369 1 333 2 
271 1 134 1 31 1 189 1 338 1 106 1 
346 2 46 1 185 1 266 2 211 1 4 1 6 1 234 1 271 3 236 4 189 4 31 3 73 1 360 1 132 2 196 1 102 2 35 4 220 2 106 2 176 4 108 1 223 2 81 2 368 2 287 1 84 2 114 1 208 1 
169 2 118 1 21 1 292 1 94 1 267 2 268 1 24 1 123 1 236 1 302 1 305 1 356 1 357 1 358 1 132 1 360 1 154 1 35 1 176 1 77 1 107 3 108 1 82 2 343 2 112 1 228 2 287 1 86 1 206 1 165 3 208 1 
346 2 46 1 102 1 266 1 134 4 23 2 220 1 338 2 137 2 223 1 81 1 109 2 351 4 368 1 370 1 
365 1 175 1 314 1 
334 1 365 1 321 1 289 1 314 1 
365 1 175 1 314 1 
365 1 175 1 314 1 
365 1 275 1 314 1 
365 1 275 1 314 1 
365 1 275 1 314 1 
365 1 314 1 
173 1 355 1 
358 8 45 6 21 2 154 2 292 16 94 2 283 1 348 3 267 4 96 1 241 1 7 3 235 3 28 2 344 2 320 8 302 2 70 1 333 3 290 2 
358 2 45 1 292 4 348 1 96 1 7 1 28 1 344 1 320 2 70 1 152 1 333 1 290 1 
358 2 45 2 21 1 154 1 94 1 292 4 256 1 348 1 267 2 213 1 297 1 7 1 202 1 235 1 320 2 302 1 333 1 
358 4 45 2 292 7 348 1 13 2 213 1 297 1 7 1 202 1 235 1 320 3 333 1 130 1 307 1 324 1 
45 6 21 1 292 24 94 1 68 1 348 4 267 2 96 1 213 2 297 2 7 5 28 2 235 2 302 1 70 1 333 5 130 1 307 2 358 12 154 1 255 1 283 1 13 2 241 1 202 2 344 2 320 12 290 2 
358 1 292 1 13 1 
292 1 320 1 307 1 
358 3 45 3 21 1 154 1 94 1 292 6 256 1 267 2 348 2 213 1 297 1 7 1 202 1 235 1 320 3 302 1 369 1 333 1 
45 2 21 1 144 1 292 12 94 1 267 2 348 1 213 2 297 2 7 2 249 1 235 1 302 1 333 2 307 1 358 6 194 1 154 1 13 1 202 2 320 6 179 1 162 1 163 1 324 1 
358 3 45 2 292 6 348 1 7 1 28 1 235 1 344 1 320 3 333 1 290 1 
358 2 45 2 21 1 154 1 292 3 94 1 283 1 348 1 267 2 96 1 235 1 28 1 139 1 320 1 302 1 70 1 290 1 
358 5 45 5 21 1 154 1 94 1 292 10 267 2 348 3 241 1 7 2 28 2 235 2 320 5 344 1 302 1 162 1 333 2 290 2 
45 1 21 1 154 1 94 1 292 2 267 2 7 1 202 1 235 1 320 2 302 1 162 1 
358 2 45 2 21 1 154 1 94 1 292 4 348 1 267 2 213 1 297 1 7 1 202 1 235 1 320 2 302 1 162 1 333 1 
358 2 45 2 21 3 154 3 292 3 94 3 283 1 337 1 267 6 348 1 139 1 28 1 235 1 320 1 302 3 162 1 290 1 
45 8 21 4 94 4 292 30 348 4 267 8 96 1 269 1 213 2 297 2 7 5 28 2 235 4 302 4 70 1 333 5 307 3 358 15 154 4 283 1 256 1 337 1 13 3 241 1 316 1 315 1 202 2 344 2 320 15 162 1 324 1 290 2 
45 4 21 1 292 14 94 1 267 2 348 3 96 1 7 3 235 1 28 2 302 1 70 1 333 3 307 1 358 7 194 1 154 1 13 1 241 1 320 7 344 2 162 1 324 1 290 2 
45 5 21 2 292 17 94 2 348 3 267 4 96 1 213 1 7 4 28 2 235 2 302 2 70 1 333 3 130 1 307 1 358 8 194 1 154 2 256 1 13 2 241 1 202 1 344 2 320 9 162 1 324 1 290 2 
45 6 21 3 144 1 292 25 94 3 267 6 348 4 96 1 213 2 297 2 7 5 249 1 28 2 235 2 302 3 70 1 333 5 307 1 358 13 194 1 154 3 256 1 283 1 13 1 241 1 202 2 344 2 179 1 320 12 162 1 163 1 324 1 290 2 
45 8 21 3 144 1 292 23 94 3 267 6 348 4 96 1 213 2 297 1 7 5 249 1 28 2 235 4 302 3 70 1 333 4 307 1 358 10 194 1 154 3 256 1 283 1 13 1 241 1 202 2 344 2 320 13 179 1 162 1 163 1 324 1 290 2 
45 4 21 1 292 14 94 1 267 2 348 3 96 1 7 3 235 1 28 2 302 1 70 1 333 3 307 1 358 7 194 1 154 1 13 1 241 1 320 7 344 2 162 1 324 1 290 2 
45 2 21 1 144 1 292 12 94 1 267 2 348 1 213 2 297 2 7 2 249 1 235 1 302 1 333 2 307 1 358 6 194 1 154 1 13 1 202 2 320 6 179 1 162 1 163 1 324 1 
45 6 21 4 144 1 292 24 94 4 267 8 348 4 96 1 213 2 297 1 7 5 249 1 28 2 235 2 302 4 70 1 333 4 307 1 358 11 194 1 154 4 256 1 283 2 13 1 241 1 202 2 344 2 179 1 320 13 162 1 163 1 324 1 290 2 
45 6 21 4 144 1 292 16 94 4 267 8 348 3 213 3 297 2 7 3 249 1 235 3 302 4 333 2 307 1 358 7 194 1 154 4 337 1 283 2 13 1 202 3 179 1 320 9 162 1 163 1 324 1 
358 4 45 6 292 7 348 3 96 1 7 1 28 3 235 3 344 1 320 3 70 2 333 1 290 3 
45 6 21 4 144 1 292 24 94 4 267 8 348 4 96 1 213 2 297 1 7 5 249 1 28 2 235 2 302 4 70 1 333 4 307 1 358 11 194 1 154 4 337 1 283 2 13 1 241 1 202 2 344 2 179 1 320 13 162 1 163 1 324 1 290 2 
159 1 343 1 239 1 86 1 107 1 165 1 277 1 
67 1 107 1 159 1 367 1 343 1 303 1 304 1 239 1 86 1 166 1 277 1 165 1 
360 1 132 1 236 1 35 1 287 1 211 1 152 1 176 1 108 1 208 1 73 1 
132 1 360 1 35 1 268 1 176 1 77 1 107 2 108 1 82 1 343 1 112 1 236 1 17 1 287 1 228 1 86 1 165 2 208 1 
360 1 2 1 35 1 284 1 268 1 176 1 77 1 214 1 107 2 108 1 122 1 341 1 82 1 343 2 112 2 236 1 17 1 287 2 228 2 84 1 86 1 165 2 208 3 
2 1 248 1 268 1 214 1 122 1 236 2 252 1 360 1 35 2 284 1 176 2 107 2 108 1 341 1 82 1 343 2 112 2 17 1 228 2 287 2 84 1 86 1 165 2 208 3 
229 1 271 1 178 1 236 1 35 1 189 1 245 1 31 1 84 1 176 1 208 1 
229 1 271 1 178 1 236 1 35 1 189 1 197 1 31 1 84 1 176 1 208 1 
360 1 236 1 35 1 176 1 108 1 240 1 
193 1 132 2 360 2 293 1 309 1 35 7 76 1 361 1 296 1 176 7 108 3 138 1 236 6 112 1 204 1 287 2 63 1 42 1 278 1 240 1 208 3 
90 1 45 4 2 1 94 2 267 4 268 1 96 1 187 1 7 3 8 1 235 1 236 1 333 3 154 2 107 2 241 1 108 1 343 1 112 1 17 1 344 2 287 1 206 1 165 2 208 1 290 2 118 2 21 2 292 12 348 3 28 2 302 2 70 1 305 2 357 1 74 1 358 6 360 1 35 1 361 1 77 1 176 1 79 1 82 1 320 6 228 1 86 2 
229 1 56 1 132 1 46 1 35 1 197 1 176 1 6 1 223 1 271 1 81 1 51 1 178 1 236 1 368 1 41 1 189 1 31 1 262 1 208 1 
242 1 360 1 178 1 112 1 236 1 35 1 287 1 63 1 176 1 108 2 240 1 208 1 
132 1 360 1 35 4 361 1 211 1 222 1 248 1 176 4 108 1 236 4 287 1 73 1 208 1 
360 1 117 1 35 2 294 1 200 1 176 2 108 2 236 2 112 1 204 1 287 1 84 1 42 1 208 1 
360 1 132 1 10 1 236 1 30 1 35 1 352 1 176 1 148 1 108 1 
360 1 193 1 236 2 293 1 62 1 35 2 287 1 361 1 176 2 108 1 208 1 
132 1 360 2 35 5 309 1 293 1 211 1 361 1 222 1 176 5 296 1 108 2 236 4 287 2 84 1 73 1 208 3 
132 1 360 2 35 5 293 1 211 1 361 1 222 1 176 5 296 1 108 2 236 4 190 1 287 2 84 1 73 1 208 3 
132 1 360 1 35 1 268 1 176 1 107 2 108 1 82 1 343 1 112 1 236 1 17 1 252 1 287 1 228 1 86 1 165 2 208 1 
360 1 35 1 176 1 108 2 138 1 236 1 112 1 204 1 287 1 84 1 63 1 42 1 208 1 
57 1 308 1 195 1 160 1 
57 1 44 1 271 1 115 1 308 1 195 1 160 1 347 1 41 1 31 1 
57 1 210 1 195 1 343 1 160 1 26 1 107 1 340 1 165 1 
44 1 195 1 347 1 
66 1 141 1 156 1 152 1 
66 1 141 1 156 1 310 1 88 1 50 1 65 1 
171 1 88 1 55 1 
66 1 280 1 170 1 310 3 156 1 312 2 50 1 141 1 150 1 88 3 323 1 65 1 
66 1 80 1 141 1 156 1 345 1 310 2 88 2 50 1 65 1 
280 1 66 1 310 1 50 1 83 1 10 1 16 1 30 1 127 1 88 1 65 1 
66 1 280 1 141 1 310 1 88 1 50 1 65 1 
280 1 141 2 156 1 310 1 88 1 50 1 65 1 
66 1 280 1 291 1 3 1 310 2 50 2 141 1 88 2 182 1 65 2 
280 1 66 2 156 1 310 3 36 1 50 1 39 1 188 1 80 2 141 1 127 1 88 3 65 1 
66 1 280 1 156 1 310 2 148 1 50 1 80 1 60 1 83 1 10 2 141 1 30 1 151 1 88 2 65 1 
280 1 66 2 156 1 310 4 339 1 50 2 39 1 80 2 141 1 127 1 345 1 88 4 65 2 
66 1 280 1 141 1 156 1 310 1 88 1 50 1 65 1 
66 3 264 1 170 1 156 2 310 4 312 1 50 1 39 1 80 2 141 2 127 1 150 1 88 4 65 1 
66 1 280 1 103 1 310 2 156 1 362 1 257 1 50 1 80 1 141 1 88 2 65 1 
66 1 280 1 326 1 170 2 310 3 156 1 312 2 50 1 141 1 150 1 88 3 65 1 
66 2 191 2 19 1 71 1 
280 1 254 1 310 1 88 1 50 1 65 1 
66 1 80 1 280 1 141 1 156 1 310 2 36 1 88 2 50 1 65 1 
281 1 
66 1 280 1 141 1 156 1 310 1 88 1 50 1 65 1 
280 1 66 1 310 3 156 1 36 1 312 1 50 1 80 1 141 1 88 3 65 1 
66 1 264 1 127 1 39 1 
66 1 141 1 

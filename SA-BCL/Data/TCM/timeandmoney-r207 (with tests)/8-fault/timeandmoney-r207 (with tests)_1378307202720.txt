#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) 229 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) 229 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) 229 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) 229 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) 229 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) 229 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) 229 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) 229 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) 229 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 61 148 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (188,194) (234,236) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException (188,194) (234,236) (234,236) 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (188,194) (234,236) (234,236) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException (188,194) (234,236) (234,236) 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (188,194) (234,236) (234,236) 71 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException (188,194) 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 61 165 314 122 (119,161) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException (188,194) 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 61 261 83 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 61 261 83 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 61 261 83 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 61 261 83 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 61 261 83 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) 229 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) (174,287) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) (174,287) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) 229 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (188,194) (234,236) (234,236) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (188,194) (234,236) (234,236) 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (188,194) (234,236) (234,236) 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (188,194) (234,236) (234,236) 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (188,194) (234,236) (234,236) 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (188,194) (234,236) (234,236) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 60 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 61 163 34 89 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 61 148 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 61 165 314 173 2 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 61 148 283 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 61 165 314 173 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 61 165 314 122 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 61 165 314 173 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 61 165 314 122 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 61 165 314 173 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 61 165 314 173 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 61 148 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 61 148 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 61 165 314 173 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 61 165 314 173 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 61 165 314 173 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 61 115 181 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 61 115 181 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 61 115 181 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 61 115 181 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 61 115 181 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 61 148 283 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (188,194) (234,236) (234,236) 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException (188,194) (234,236) (234,236) 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (188,194) (234,236) (234,236) 71 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V ERROR java.lang.NullPointerException (188,194) (234,236) (234,236) 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 251 41 262 125 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 241 209 270 (36,85) (36,85) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 60 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 61 165 314 173 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 61 163 40 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 61 163 34 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V ERROR java.lang.NullPointerException 61 163 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 61 165 314 173 2 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 61 163 40 204 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 61 165 303 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 241 209 270 (36,85) (36,85) 
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 61 165 303 71 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V ERROR java.lang.NullPointerException 61 165 314 
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 61 165 314 173 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 241 209 270 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 61 163 40 281 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 61 163 40 204 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 61 163 40 204 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 61 163 40 204 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 61 163 40 204 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 61 163 40 204 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 61 163 40 204 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 61 163 40 204 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 61 163 40 204 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 241 209 270 (36,85) (36,85) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 61 163 40 204 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (188,194) (234,236) (234,236) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (188,194) (234,236) (234,236) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 61 165 303 (36,85) (36,85) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (188,194) (234,236) (234,236) 71 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) 229 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) 229 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) 229 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) 229 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) 229 
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) 229 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) 229 
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) 229 
com.domainlanguage.money.MoneyTest:testEquals()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) 229 
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) 
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) 229 
com.domainlanguage.money.MoneyTest:testMultiply()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) 229 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) 229 
com.domainlanguage.money.MoneyTest:testNegation()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) 229 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) 229 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException (59,78,94,109) (59,78,94,109) (59,78,94,109) 229 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4492 | + -> *
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 2496 | = null
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | ASSIGN | 4311 | = null
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | CONDITION | 5784 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit; | RETURN | 533 | return null
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4967 | stmt -> ;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4503 | 0 -> 1
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
109 1 78 1 59 1 229 1 
109 1 78 1 59 1 229 1 
109 1 78 1 59 1 229 1 
109 1 78 1 59 1 229 1 
109 1 78 1 59 1 229 1 
109 1 78 1 59 1 229 1 
109 1 78 1 59 1 229 1 
109 1 78 1 59 1 229 1 
109 1 78 1 59 1 229 1 
31 1 60 1 191 1 
86 1 31 1 258 2 
16 2 212 2 203 2 95 2 318 1 167 2 12 1 253 2 
202 1 203 2 120 1 164 1 167 2 262 1 12 1 16 2 212 2 15 1 130 1 217 1 21 1 61 1 95 3 220 1 67 1 309 1 27 1 102 1 318 1 72 2 148 1 190 1 150 1 75 1 153 1 237 1 279 1 322 1 282 1 41 2 242 1 246 1 251 2 252 1 253 3 
16 1 212 1 203 1 236 1 95 1 167 1 194 1 12 1 253 1 
103 1 31 1 143 1 8 1 167 1 73 1 208 1 191 1 156 1 95 1 175 1 244 1 66 1 253 1 
203 1 103 1 31 1 143 1 167 1 208 2 73 1 191 1 212 1 16 1 156 1 95 1 175 1 66 2 253 1 
108 1 313 1 232 1 208 1 66 1 
203 1 4 1 31 1 313 1 167 1 208 2 12 1 191 1 234 1 16 1 212 1 278 1 108 1 236 1 95 1 194 1 66 2 253 1 
108 1 208 1 66 1 
203 1 313 1 167 1 208 1 12 1 234 1 212 1 16 1 236 1 95 1 194 1 66 1 253 1 
31 1 
203 1 4 1 31 1 313 1 167 1 208 2 12 1 191 1 234 1 16 1 212 1 108 1 236 1 95 1 194 1 66 2 135 1 253 1 
203 1 256 2 4 1 165 1 167 1 208 5 209 1 12 1 16 1 212 1 214 1 20 4 303 1 266 1 95 1 63 1 62 3 23 2 270 1 134 1 305 2 66 5 29 2 227 2 31 2 313 2 32 1 71 1 191 2 234 1 108 2 236 1 158 1 194 1 290 1 253 1 
60 1 318 1 
0 1 203 1 87 1 167 2 318 2 212 1 16 1 95 2 253 2 
110 1 113 1 161 1 
120 1 164 1 318 1 72 1 262 1 190 1 150 1 75 1 153 1 95 1 24 1 41 1 242 1 251 1 27 1 253 1 
120 1 164 1 187 1 167 1 72 1 262 1 150 1 190 1 75 1 212 1 16 1 153 1 280 1 95 2 113 1 242 1 41 1 27 1 251 1 253 2 
16 3 212 3 203 1 95 3 318 1 187 1 167 3 253 3 
16 1 212 1 95 1 167 1 194 1 253 1 
0 1 16 1 212 1 203 1 103 1 87 1 95 1 167 1 253 1 
46 1 0 1 202 1 203 2 120 1 164 1 167 3 208 1 262 1 12 1 16 3 212 3 300 1 130 1 217 1 95 4 220 1 175 1 66 1 67 1 309 1 27 1 103 1 143 1 318 1 187 1 72 1 73 1 150 1 190 1 75 1 153 1 237 1 279 1 280 1 322 1 156 1 282 1 242 1 41 1 246 1 251 1 252 1 253 4 
16 1 212 1 257 1 95 2 318 1 167 2 187 1 244 1 253 2 
0 1 203 1 103 1 31 1 143 1 187 2 167 3 208 1 73 1 212 3 16 3 192 1 300 1 280 1 156 1 95 3 175 1 66 1 253 3 
0 1 203 1 187 1 167 2 212 2 16 2 95 2 113 1 161 1 253 2 
120 1 164 1 318 1 72 1 262 1 190 1 150 1 75 1 153 1 95 1 41 1 242 1 251 1 27 1 253 1 
120 1 144 1 164 1 318 1 72 1 262 1 35 1 190 1 150 1 75 1 95 1 41 1 251 1 27 1 253 1 
202 2 1 1 119 1 314 1 165 1 122 1 90 1 210 1 279 1 237 1 130 1 322 1 110 1 217 1 61 1 113 1 218 1 23 1 161 1 67 2 309 1 252 1 
16 1 212 1 103 1 143 1 185 1 95 1 167 1 253 1 
0 1 203 1 257 1 259 1 187 2 167 5 318 1 212 4 16 4 280 1 95 5 244 1 178 1 253 5 
16 1 212 1 95 1 167 1 194 1 253 1 
199 1 166 1 
199 1 166 1 
64 1 327 1 
64 1 327 1 
64 1 327 1 
199 1 221 1 166 1 
199 1 166 1 231 1 
129 1 199 2 166 2 64 1 327 1 331 1 
199 1 221 1 166 1 
199 1 221 1 166 1 
199 1 273 1 166 1 
199 1 273 1 166 1 
199 1 273 1 166 1 
199 2 47 1 183 3 272 1 226 1 31 1 166 2 56 2 126 2 233 2 208 2 129 1 93 1 92 2 107 1 238 2 302 1 245 1 66 2 
199 1 254 1 50 1 5 1 123 1 166 1 56 1 167 2 126 1 208 1 93 1 16 2 212 2 301 1 95 2 66 1 183 1 318 1 233 1 231 1 277 1 238 1 80 1 253 2 
311 1 30 1 319 1 
311 1 260 1 319 1 
30 2 205 1 260 1 319 3 177 1 65 1 
30 1 205 1 142 1 260 1 319 2 177 1 
30 1 205 1 260 1 319 2 177 2 
294 2 293 1 86 1 4 1 5 1 123 1 165 1 258 3 90 1 208 5 299 1 172 2 173 1 214 1 20 3 62 2 23 1 305 1 66 5 29 1 227 1 31 2 314 1 313 4 189 1 191 1 277 1 108 1 154 1 239 2 247 1 330 1 
200 1 293 2 86 3 3 1 4 1 165 3 88 5 258 9 90 3 208 9 299 1 172 6 173 3 214 1 215 1 20 8 62 6 23 3 134 1 66 9 305 2 271 1 227 2 29 2 31 5 314 3 313 7 232 5 191 1 277 4 152 1 108 6 239 6 81 1 247 2 
293 1 294 1 86 2 165 1 258 4 90 1 208 3 172 2 173 1 20 3 62 2 23 1 134 1 305 1 66 3 29 1 227 1 31 3 313 2 314 1 189 1 191 1 277 1 154 1 239 2 247 1 
200 1 293 1 294 2 86 3 3 1 165 2 258 7 90 2 208 4 172 4 173 2 20 5 62 4 23 2 134 1 305 1 66 4 29 1 227 1 31 4 313 3 314 2 189 1 191 1 277 2 154 1 239 4 81 1 247 1 
17 1 164 1 60 1 
100 1 164 1 
49 1 
75 1 164 1 
75 1 17 2 164 3 52 1 27 1 91 1 
75 1 164 1 27 1 
164 1 43 1 
61 1 261 1 70 1 83 1 
61 1 261 1 70 1 83 1 
61 1 261 1 70 1 9 1 83 1 
61 1 261 1 70 1 83 1 
61 1 261 1 70 1 83 1 
109 1 78 1 59 1 229 1 
109 1 78 1 59 1 174 1 
121 1 260 1 59 2 94 2 131 1 132 1 267 1 269 1 65 1 180 1 225 1 311 1 30 1 104 1 319 2 72 1 106 1 190 1 150 1 41 1 44 1 329 1 195 2 287 1 251 1 
109 1 78 1 59 1 174 1 
109 1 78 1 59 1 229 1 
26 1 
293 1 164 2 4 1 53 1 125 1 208 2 262 2 214 1 264 1 20 1 62 1 305 1 66 2 27 1 137 1 140 1 29 1 227 1 72 2 150 3 190 2 75 2 108 2 325 1 157 1 41 2 248 1 251 2 84 1 
4 1 167 1 8 1 206 2 208 3 213 1 95 1 175 1 66 3 135 1 306 1 103 1 143 1 147 1 73 1 108 2 156 1 285 1 244 1 116 1 250 1 253 1 
4 1 167 1 8 1 206 3 208 3 213 1 265 1 95 1 175 1 66 3 306 1 135 1 103 1 143 1 31 1 147 1 73 1 191 1 108 1 156 1 285 1 244 1 116 1 253 1 
4 1 167 1 8 1 206 3 208 3 213 1 265 1 95 1 175 1 66 3 135 1 306 1 103 1 143 1 312 1 147 1 73 1 108 2 156 1 285 1 244 1 116 1 250 1 253 1 
86 2 4 3 8 1 167 2 12 1 16 1 20 1 265 2 95 2 175 1 179 1 29 1 103 1 31 1 191 1 108 7 285 1 193 1 114 2 194 1 116 1 196 1 289 1 45 2 203 1 298 2 206 4 208 5 58 1 212 1 213 1 214 1 62 1 66 5 305 1 135 1 306 1 227 1 312 4 143 1 147 1 73 1 149 1 234 1 236 1 156 1 326 2 244 1 249 1 250 4 253 2 
86 2 4 2 258 2 167 2 8 1 12 1 16 1 20 1 265 2 95 2 175 1 29 1 103 1 31 1 191 1 108 4 285 1 114 2 194 1 116 1 289 1 45 2 292 1 203 1 298 2 206 4 208 4 58 1 212 1 213 1 214 1 62 1 66 4 305 1 306 1 227 1 143 1 312 2 147 1 73 1 234 1 236 1 156 1 326 2 244 1 250 2 253 2 
86 2 4 2 298 2 167 1 8 1 206 4 208 4 58 1 213 1 214 1 20 1 265 2 95 1 62 1 175 1 66 4 305 1 306 1 179 1 29 1 227 1 103 1 31 1 312 2 143 1 147 1 73 1 191 1 108 4 156 1 326 2 285 1 114 2 244 1 249 1 250 2 45 2 289 1 116 1 196 1 253 1 
86 2 4 2 8 1 167 2 12 1 16 1 20 1 265 2 95 2 175 1 179 1 29 1 103 1 31 1 191 1 108 4 285 1 114 2 194 1 196 1 116 1 289 1 45 2 203 1 298 2 206 4 208 4 58 1 212 1 213 1 214 1 62 1 305 1 66 4 306 1 227 1 143 1 312 2 147 1 73 1 234 1 236 1 156 1 326 2 244 1 249 1 250 2 253 2 
4 2 258 2 8 1 167 2 12 1 16 1 20 1 265 2 95 2 175 1 29 1 103 1 31 1 274 2 191 1 108 4 285 1 194 1 116 1 289 1 45 2 203 1 298 2 206 4 208 4 212 1 213 1 214 1 62 1 305 1 66 4 306 1 227 1 143 1 312 2 316 1 147 1 73 1 234 1 236 1 321 1 77 2 79 1 156 1 244 1 249 1 250 2 253 2 
86 2 4 2 8 1 167 2 12 1 16 1 20 1 265 3 95 2 175 1 179 1 29 1 103 1 31 1 191 1 108 5 285 1 193 1 114 2 194 1 196 1 116 1 289 1 45 2 203 1 298 2 206 5 208 4 58 1 212 1 213 1 214 1 62 1 66 4 305 1 306 1 227 1 312 3 143 1 147 1 73 1 234 1 236 1 156 1 326 2 244 1 249 1 250 3 253 2 
86 2 4 2 8 1 167 2 12 1 16 1 20 1 265 3 95 2 175 1 179 1 29 1 103 1 31 1 191 1 108 5 285 1 193 1 114 2 194 1 196 1 116 1 289 1 45 2 203 1 298 2 206 5 208 4 58 1 212 1 213 1 214 1 62 1 66 4 305 1 306 1 227 1 312 3 143 1 147 1 73 1 234 1 236 1 156 1 326 2 244 1 249 1 250 3 253 2 
4 1 258 2 167 1 8 1 20 1 265 1 95 1 175 1 29 1 103 1 31 1 274 2 191 1 108 2 285 1 116 1 289 1 45 2 292 1 298 2 206 3 208 3 213 1 214 1 62 1 66 3 305 1 306 1 227 1 143 1 312 1 147 1 73 1 321 1 77 1 156 1 244 1 250 1 253 1 
85 1 165 1 207 1 209 1 11 1 210 1 279 1 237 1 130 1 322 1 217 1 60 1 36 1 61 1 303 1 270 1 309 1 252 1 
163 1 202 1 146 1 89 1 34 1 170 1 279 1 237 1 130 1 322 1 110 1 217 1 61 1 113 1 309 1 67 1 252 1 
202 1 146 1 187 1 167 1 148 1 76 1 212 1 16 1 237 1 279 1 280 1 130 1 322 1 217 1 61 1 95 1 42 1 246 1 67 1 309 1 252 1 253 1 
202 2 2 1 120 1 164 1 165 1 167 1 262 1 127 1 16 1 212 1 173 1 130 2 217 2 61 1 95 2 268 1 223 1 27 1 309 2 67 2 314 1 146 1 187 1 72 1 150 1 190 1 75 1 153 1 279 2 237 2 280 1 322 2 110 1 282 1 111 1 113 1 242 1 41 1 246 1 161 1 251 1 253 2 252 2 
168 1 72 1 148 1 262 1 279 1 237 1 130 1 322 1 217 1 61 1 283 1 41 1 309 1 251 1 252 1 
0 1 203 1 314 1 165 1 146 1 167 1 16 1 212 1 173 1 279 1 237 1 130 1 322 1 155 1 217 1 61 1 95 1 309 1 253 1 252 1 
210 1 237 1 279 1 130 1 322 1 217 1 61 1 314 1 165 1 122 1 309 1 252 1 
202 2 207 1 90 1 11 1 210 1 279 1 237 1 130 1 322 1 110 1 217 1 113 1 218 1 23 1 161 1 309 1 67 2 252 1 
210 1 173 1 237 1 279 1 130 1 322 1 217 1 61 1 314 1 165 1 309 1 252 1 
237 1 279 1 130 1 322 1 217 1 61 1 314 1 165 1 122 1 168 1 309 1 252 1 
202 2 207 1 90 1 168 1 11 1 279 1 237 1 130 1 322 1 110 1 217 1 113 1 218 1 23 1 161 1 309 1 67 2 252 1 
173 1 237 1 279 1 130 1 322 1 217 1 61 1 314 1 165 1 168 1 309 1 252 1 
173 1 237 1 279 1 130 1 322 1 217 1 61 1 314 1 165 1 309 1 252 1 
202 1 120 1 164 1 262 1 130 1 217 1 61 1 95 1 27 1 309 1 67 1 318 1 72 1 148 1 150 1 190 1 75 1 153 1 279 1 237 1 322 1 282 1 242 1 41 1 246 1 251 1 253 1 252 1 
202 1 120 1 164 1 262 1 130 1 217 1 61 1 95 1 22 1 27 1 309 1 67 1 144 1 318 1 72 1 148 1 150 1 190 1 35 1 75 1 279 1 237 1 322 1 41 1 246 1 251 1 253 1 252 1 
173 1 237 1 279 1 130 1 322 1 217 1 61 1 314 1 165 1 146 1 309 1 252 1 
120 1 164 1 314 1 165 1 72 1 190 1 150 1 75 1 153 1 173 1 237 1 279 1 130 1 322 1 217 1 61 1 95 1 282 1 41 1 268 1 242 1 328 1 309 1 251 1 27 1 252 1 253 1 
0 1 203 1 314 1 165 1 146 1 167 1 320 1 16 1 212 1 173 1 279 1 237 1 130 1 322 1 217 1 61 1 95 1 309 1 253 1 252 1 
181 1 202 1 184 1 211 1 18 1 279 1 237 1 130 1 322 1 61 1 115 1 176 1 67 1 252 1 
181 1 202 1 184 1 211 1 18 1 279 1 237 1 130 1 322 1 61 1 115 1 176 1 67 1 252 1 
181 1 202 1 184 1 211 1 18 1 279 1 237 1 130 1 322 1 61 1 115 1 176 1 67 1 252 1 
181 1 202 1 184 1 211 1 18 1 279 1 237 1 130 1 322 1 61 1 115 1 176 1 67 1 252 1 
181 1 202 1 184 1 211 1 18 1 279 1 237 1 130 1 322 1 61 1 115 1 176 1 67 1 252 1 
129 1 199 1 107 1 238 1 226 1 166 1 56 1 126 1 286 1 233 1 
50 1 231 1 
199 1 238 1 7 1 38 1 166 1 56 1 126 1 233 1 128 1 
199 1 47 1 183 2 272 1 226 1 31 1 166 1 56 1 126 1 208 1 233 1 129 1 93 1 92 1 107 1 238 1 302 1 66 1 
199 1 47 1 183 2 272 1 226 1 31 1 166 1 56 1 126 1 208 1 233 1 129 1 93 1 92 1 107 1 238 1 302 1 66 1 
199 1 47 1 183 2 272 1 226 1 31 1 166 1 56 1 126 1 208 1 233 1 129 1 93 1 92 1 107 1 238 1 302 1 66 1 
112 1 221 1 331 1 
112 1 221 1 331 1 
99 1 273 1 
99 1 273 1 331 1 
254 1 301 1 
199 1 254 1 48 1 50 1 5 1 123 1 166 1 56 1 167 2 126 1 208 1 92 1 212 2 16 2 301 1 95 2 66 1 272 1 183 1 313 1 318 1 233 1 231 1 277 1 238 1 80 1 253 2 
112 1 221 1 
99 1 273 1 331 1 
101 1 51 1 146 1 167 2 148 1 237 1 279 1 130 1 322 1 217 1 61 1 95 2 283 1 197 1 309 1 252 1 224 1 253 2 
225 1 311 1 30 1 68 1 230 1 54 1 260 1 319 2 72 2 106 1 150 1 190 1 132 1 41 2 328 1 243 1 44 1 65 1 251 2 
225 1 311 1 30 1 68 1 54 1 315 1 260 1 319 2 72 1 106 1 190 1 150 1 132 1 41 1 44 1 65 1 251 1 
98 1 138 1 164 1 230 1 53 1 72 1 262 1 150 1 190 1 75 1 132 1 41 1 251 1 84 1 
225 1 311 1 30 1 68 1 230 1 54 1 260 1 319 2 72 1 106 1 150 1 190 1 132 1 41 1 243 1 44 1 65 1 251 1 
25 1 
20 1 31 1 60 1 62 1 158 1 290 1 191 1 
203 1 86 1 4 1 258 1 167 1 208 1 12 1 58 1 16 1 212 1 214 1 20 1 95 1 62 1 305 1 66 1 29 1 227 1 31 1 191 1 234 1 108 1 236 1 326 1 114 1 194 1 253 1 
86 3 2 1 164 4 4 1 256 1 165 1 258 6 90 1 262 1 91 1 14 1 17 1 172 3 173 1 20 4 23 1 27 1 100 2 29 2 31 3 190 1 108 2 284 1 41 1 117 1 293 1 208 2 214 2 62 3 133 1 305 2 66 2 307 1 227 2 314 1 317 1 72 1 150 2 75 1 239 3 156 1 323 1 251 1 
163 1 86 3 256 2 4 1 165 2 258 6 167 1 90 2 170 1 12 1 263 1 16 1 172 5 173 2 20 8 95 1 23 2 29 2 31 5 33 1 191 2 108 1 40 1 194 1 291 1 293 1 203 1 204 1 208 1 57 1 212 1 214 2 62 5 304 1 305 2 66 1 308 1 227 2 314 2 234 1 235 1 236 1 239 5 248 1 253 1 
203 1 256 2 165 1 167 1 208 1 209 1 12 1 212 1 16 1 214 1 20 2 303 1 95 1 62 1 23 1 270 1 305 1 66 1 179 1 29 1 227 1 71 1 234 1 236 1 194 1 253 1 
29 1 227 1 214 1 20 1 31 1 62 1 158 1 290 1 305 1 191 1 
86 5 2 1 256 2 31 5 314 2 165 2 258 10 90 2 33 1 172 5 173 2 239 5 20 5 62 5 23 2 
203 1 4 1 31 1 167 1 208 1 12 1 191 1 234 1 16 1 212 1 108 1 236 1 95 1 194 1 66 1 253 1 
293 1 227 1 29 1 228 1 4 1 72 2 125 1 208 1 262 2 108 2 214 1 264 1 20 1 62 1 41 2 248 1 66 1 305 1 251 2 
202 1 203 2 120 1 164 1 167 2 262 1 12 1 16 2 212 2 130 1 217 1 95 3 220 1 67 1 27 1 309 1 318 1 72 1 190 1 150 1 75 1 153 1 237 1 279 1 322 1 282 1 41 1 242 1 246 1 251 1 252 1 253 3 
293 1 86 2 227 1 29 1 31 4 258 4 261 1 191 2 172 2 214 1 239 2 20 1 62 2 248 1 305 1 
56 1 233 1 74 1 
254 1 226 1 56 1 233 1 310 1 
56 1 233 1 74 1 
56 1 233 1 74 1 
151 1 56 1 233 1 
151 1 56 1 233 1 
151 1 56 1 233 1 
56 1 233 1 
199 1 166 1 
85 1 237 2 279 2 130 2 322 2 36 1 240 1 241 1 207 1 270 1 209 1 11 1 252 2 
85 1 36 1 60 1 61 1 303 1 165 1 207 1 270 1 209 1 11 1 
173 1 237 1 279 1 130 1 322 1 61 1 314 1 165 1 252 1 275 1 
163 1 202 1 61 1 40 1 170 1 67 1 
163 1 202 1 61 1 170 1 34 1 67 1 
202 1 170 1 67 1 
163 1 61 1 
202 1 173 1 2 1 61 1 314 1 165 1 67 1 
163 1 202 1 237 1 279 1 204 1 130 1 322 1 61 1 40 1 170 1 176 1 67 1 252 1 
61 1 303 1 165 1 
85 1 202 1 207 1 105 1 209 1 11 1 279 1 237 1 130 1 322 1 36 1 240 1 241 1 270 1 67 1 252 1 
61 1 303 1 165 1 207 1 71 1 270 1 209 1 11 1 
237 1 279 1 130 1 322 1 61 1 314 1 165 1 176 1 252 1 
173 1 237 1 279 1 130 1 322 1 61 1 314 1 165 1 176 1 252 1 
145 1 207 1 209 1 11 1 279 2 237 2 130 2 322 2 241 1 176 1 270 1 252 2 
163 1 202 1 145 1 170 1 275 1 279 3 237 3 130 3 322 3 281 1 61 1 40 1 176 1 67 1 252 3 
163 1 202 1 237 1 279 1 204 1 130 1 322 1 61 1 40 1 170 1 176 1 67 1 252 1 
163 1 202 1 237 2 279 2 204 1 130 2 322 2 61 1 40 1 170 1 176 1 67 1 252 2 275 1 
163 1 202 1 237 1 279 1 204 1 130 1 322 1 61 1 40 1 170 1 176 1 67 1 252 1 
163 1 202 1 237 1 279 1 204 1 130 1 322 1 61 1 40 1 170 1 176 1 67 1 252 1 
163 1 202 1 237 1 279 1 204 1 130 1 322 1 61 1 40 1 170 1 176 1 67 1 252 1 
163 1 202 1 237 1 279 1 204 1 130 1 322 1 61 1 40 1 170 1 176 1 67 1 252 1 
163 1 202 1 237 2 279 2 204 1 130 2 322 2 61 1 40 1 170 1 176 1 67 1 275 1 252 2 
163 1 202 1 204 1 145 1 170 1 279 2 237 2 130 2 322 2 61 1 40 1 176 1 67 1 252 2 
85 1 36 1 241 1 207 1 270 1 209 1 11 1 
163 1 202 1 204 1 145 1 170 1 279 2 237 2 130 2 322 2 61 1 40 1 176 1 67 1 252 2 
139 1 95 1 257 1 318 1 167 1 244 1 253 1 
139 1 255 1 257 1 124 1 318 1 55 1 167 1 171 1 95 1 244 1 198 1 253 1 
75 1 164 1 60 1 53 1 41 1 72 1 262 1 150 1 190 1 84 1 251 1 
120 1 164 1 318 1 187 1 167 1 72 1 262 1 150 1 190 1 75 1 212 1 16 1 95 2 41 1 242 1 27 1 251 1 253 2 
120 1 164 2 6 1 167 2 16 2 212 1 216 1 95 2 27 2 103 2 143 1 187 1 318 1 188 1 72 1 73 1 190 1 150 1 75 2 242 1 41 1 251 1 253 2 
120 1 164 2 6 1 167 2 16 2 212 1 216 1 95 2 27 2 103 2 144 1 143 1 187 1 318 1 188 1 72 1 73 1 190 1 150 1 75 2 41 1 251 1 253 2 
201 1 203 1 164 3 6 1 167 1 208 2 12 1 16 1 212 1 17 1 216 1 95 1 66 2 27 1 100 1 31 1 72 1 190 1 150 1 191 1 234 1 75 1 108 1 236 1 156 1 41 1 194 1 288 1 251 1 253 1 
203 1 164 3 6 1 167 1 208 2 12 1 16 1 212 1 17 1 216 1 95 1 133 1 66 2 27 1 100 1 31 1 72 1 190 1 150 1 191 1 234 1 75 1 108 1 236 1 156 1 41 1 194 1 251 1 253 1 
13 1 41 1 72 1 150 1 190 1 251 1 
137 1 102 1 164 3 72 7 106 1 262 2 10 1 91 1 190 2 150 3 13 1 75 2 19 1 325 1 39 1 159 1 41 6 328 1 96 1 251 7 27 1 
85 1 120 1 164 1 165 1 207 1 167 1 209 1 11 1 16 1 212 1 130 2 217 2 61 1 303 1 95 2 268 1 270 1 27 1 309 2 101 1 146 1 187 1 72 1 150 1 190 1 75 1 153 1 279 2 237 2 322 2 36 1 111 1 282 1 41 1 242 1 328 1 251 1 253 2 252 2 
203 1 256 2 164 2 4 1 165 1 167 1 208 3 209 1 262 1 12 1 16 1 212 1 17 1 214 2 20 4 303 1 95 1 62 3 23 2 133 1 270 1 305 2 66 3 307 1 100 1 29 2 227 2 228 1 31 2 313 1 71 1 72 1 191 2 234 1 108 2 236 1 156 1 158 1 41 1 284 1 194 1 290 1 251 1 117 1 253 1 
164 2 317 1 72 2 91 1 190 1 150 2 13 1 75 1 17 1 41 2 328 1 251 2 27 1 
164 1 53 1 72 4 262 1 150 1 190 1 75 1 160 1 41 4 328 1 162 1 251 4 84 1 
137 1 140 1 296 1 164 1 6 1 72 2 190 1 150 2 75 1 157 1 325 1 41 2 251 2 27 1 
311 1 260 1 319 1 41 1 44 1 72 1 262 1 150 1 190 1 251 1 
164 1 297 1 72 2 106 1 190 1 150 1 75 1 19 1 41 2 328 1 251 2 
164 3 6 1 53 1 72 5 262 1 190 2 150 2 75 2 19 1 41 4 159 1 328 1 162 1 84 1 251 5 96 1 
164 3 6 1 53 1 72 5 262 1 190 2 150 2 75 2 19 1 41 4 328 1 82 1 162 1 84 1 251 5 96 1 
120 1 164 1 144 1 318 1 187 1 167 1 72 1 262 1 150 1 190 1 75 1 212 1 16 1 95 2 41 1 27 1 251 1 253 2 
137 1 164 1 6 1 72 1 10 1 91 1 190 1 150 2 75 1 325 1 41 1 251 1 27 1 
182 1 37 1 318 1 97 1 118 1 
182 2 103 1 141 1 31 1 143 1 313 1 318 1 73 1 208 2 191 1 300 1 37 2 156 1 324 1 175 1 66 2 118 1 28 1 97 2 
51 1 167 1 37 1 95 1 197 1 97 1 224 1 118 1 253 1 
141 1 28 1 118 1 
60 1 267 1 269 1 180 1 
109 1 78 1 59 1 
131 1 329 1 195 1 
109 1 78 1 59 1 229 1 
109 1 78 1 59 1 
109 1 78 1 59 1 229 1 
109 1 78 1 59 1 229 1 
109 1 78 1 59 1 229 1 
109 1 78 1 59 1 229 1 186 1 
109 1 78 1 59 1 229 1 
109 1 78 1 59 1 229 1 260 1 319 1 
109 1 78 1 59 1 229 1 
109 1 78 1 59 1 229 1 
136 1 109 1 78 1 59 2 94 1 195 1 
109 1 78 1 59 1 229 1 
109 1 78 1 59 1 229 1 
69 1 222 2 169 1 180 2 
109 1 78 1 59 1 229 1 
109 1 78 1 59 1 229 1 
219 1 
109 1 78 1 59 1 229 1 
109 1 78 1 59 1 229 1 
136 1 276 1 295 1 180 1 
269 1 180 1 

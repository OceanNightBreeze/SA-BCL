#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 265 104 188 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 265 104 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 265 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 265 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 265 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 265 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 265 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 265 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 265 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5209 | stmt -> ;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 2
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 4007 | return null
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 8735 | || -> &&
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | STATEMENT | 3734 | stmt -> ;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3635 | 1 -> 2
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | ASSIGN | 1600 | = null
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
336 1 210 1 39 3 79 1 175 1 7 1 42 2 256 2 140 3 272 1 118 1 130 2 12 1 
140 1 288 1 39 1 130 1 175 1 256 1 
140 1 288 1 39 1 130 1 175 1 256 1 
140 1 288 1 39 1 130 1 175 1 256 1 
140 1 288 1 39 1 130 1 175 1 256 1 
336 1 210 1 39 4 79 1 147 1 175 1 63 1 7 2 42 3 256 1 342 1 140 4 292 1 149 1 272 3 130 1 240 2 349 1 
52 1 336 1 210 1 337 1 39 2 15 1 175 1 63 1 42 1 290 1 256 1 140 2 31 1 130 1 349 1 12 1 
106 1 336 1 210 1 39 9 147 1 79 3 175 1 63 1 7 4 64 1 42 5 342 1 256 2 291 1 140 9 292 1 149 1 272 7 118 1 240 2 130 2 349 1 132 1 12 1 
106 1 336 1 210 1 39 9 147 1 79 3 175 1 63 1 7 4 64 1 42 5 342 1 256 2 291 1 140 9 292 1 149 1 272 7 118 1 240 2 130 2 349 1 132 1 12 1 
326 1 124 1 247 1 248 1 181 1 30 1 141 1 274 1 120 1 208 1 169 1 88 1 350 1 255 1 
167 1 
326 1 24 1 124 1 248 1 247 1 181 2 167 1 111 1 30 1 274 1 208 1 169 1 88 1 255 2 314 1 70 1 141 1 120 1 350 1 
326 1 75 1 244 2 107 5 24 2 4 2 124 2 247 1 248 1 181 5 225 1 8 1 110 1 30 1 111 2 167 2 32 4 274 1 169 1 208 1 88 1 153 2 334 1 255 5 59 1 314 1 173 2 93 1 138 2 211 1 176 1 212 1 141 1 304 1 120 1 72 2 196 1 350 1 
167 1 111 1 287 1 
235 1 167 1 252 2 
326 2 141 2 236 1 274 2 120 2 169 2 208 1 248 2 
145 1 326 2 51 1 22 1 201 2 2 1 327 1 248 3 27 1 182 1 274 2 169 2 208 1 89 1 333 1 254 1 13 1 277 1 236 1 156 1 94 1 186 1 340 1 115 1 343 1 257 1 66 1 141 2 161 2 101 1 119 1 216 2 46 1 120 3 143 1 179 2 218 2 
326 1 30 1 141 1 274 1 120 1 169 1 208 1 247 1 248 1 350 1 
77 1 248 1 181 1 44 1 69 1 167 1 111 1 30 1 282 1 305 1 120 1 169 1 285 1 255 1 
326 1 77 1 248 1 181 2 69 1 167 1 111 1 141 1 30 1 274 1 305 1 120 1 169 1 285 1 255 2 
24 1 174 1 124 1 181 1 255 1 
326 1 24 1 124 1 248 1 247 1 181 2 167 1 111 1 30 1 274 1 208 1 169 1 88 1 135 1 255 2 314 1 141 1 120 1 350 1 
24 1 181 1 255 1 
326 1 236 2 248 2 280 1 166 1 141 1 274 1 120 2 169 2 
204 1 68 1 98 1 
13 1 51 1 22 1 201 1 236 1 327 1 186 1 248 1 257 1 66 1 119 1 216 1 120 1 143 1 103 1 218 1 
13 1 326 1 22 1 51 1 201 1 327 1 221 1 186 1 248 2 300 1 98 1 257 1 66 1 141 1 119 1 216 1 143 1 120 2 169 1 218 1 
287 1 236 1 
326 4 236 1 221 2 16 1 248 5 237 1 300 1 44 1 166 1 160 1 141 4 274 1 120 5 169 5 
326 2 268 1 30 1 141 2 120 2 169 2 247 1 248 2 
326 3 141 3 236 1 274 1 221 1 120 3 169 3 248 3 
326 1 30 1 141 1 120 1 169 1 247 1 248 1 
326 1 280 1 166 1 30 1 141 1 274 1 120 1 169 1 248 1 
145 1 326 3 22 1 51 1 201 1 77 1 2 1 327 1 221 1 307 1 248 4 181 1 166 1 30 1 274 2 169 3 208 1 89 1 333 1 254 1 255 1 13 1 277 1 236 1 94 1 186 1 115 1 300 1 257 1 66 1 69 1 141 3 161 2 101 1 119 1 216 1 46 1 305 1 143 1 241 1 120 4 285 1 179 1 218 1 
326 1 160 1 141 1 236 1 221 1 120 2 169 2 248 2 44 1 
326 3 1 1 77 1 221 2 248 3 300 1 181 1 166 1 69 1 167 1 30 1 141 3 274 1 305 1 120 3 241 1 169 3 285 1 255 1 
326 2 221 1 248 2 98 1 68 1 166 1 141 2 274 1 120 2 169 2 
13 1 51 1 22 1 201 1 236 1 327 1 186 1 248 1 257 1 66 1 216 1 119 1 120 1 143 1 218 1 
13 1 51 1 22 1 201 1 200 1 236 1 327 1 186 1 248 1 216 1 119 1 120 1 311 1 143 1 218 1 
144 1 306 1 244 1 2 1 4 1 222 1 204 2 182 2 128 1 89 1 333 1 254 1 277 2 60 1 299 1 98 2 139 1 68 2 321 1 161 2 101 1 46 1 102 1 179 4 
326 1 268 1 30 1 77 1 141 1 120 1 169 1 248 1 
65 1 322 1 48 1 
219 1 346 1 322 2 109 1 116 1 48 2 
322 1 48 1 
322 1 48 1 
346 1 116 1 
346 1 116 1 
346 1 116 1 
322 1 195 1 48 1 
322 1 195 1 48 1 
322 1 195 1 48 1 
322 1 20 1 48 1 
322 1 20 1 48 1 
322 1 20 1 48 1 
261 1 322 1 83 1 265 1 188 1 48 1 104 1 181 1 255 1 
261 1 322 1 83 1 265 1 48 1 104 1 
347 1 15 1 147 1 63 2 330 2 
147 1 349 1 63 1 
15 1 349 1 63 1 
347 1 15 1 147 2 63 3 330 1 82 1 
347 1 15 1 147 1 63 2 330 1 99 1 
76 1 306 1 244 1 107 2 24 1 4 1 124 4 225 1 181 5 111 1 167 2 32 3 252 3 183 1 133 2 153 1 255 5 235 1 314 1 173 1 138 1 139 1 258 1 190 1 260 1 259 2 100 1 159 1 178 1 197 2 21 1 74 1 
0 1 326 1 24 1 124 2 247 1 248 1 181 2 30 1 111 1 167 1 274 1 208 1 169 1 88 1 255 2 174 1 157 1 319 1 141 1 120 1 350 1 
76 1 75 1 306 1 244 1 107 2 4 1 124 2 181 3 111 1 167 3 32 3 252 4 153 1 133 2 255 3 235 2 173 1 138 1 139 1 259 1 190 1 159 1 178 1 197 2 21 1 74 1 
75 1 76 1 306 2 244 2 107 4 4 2 124 3 181 4 111 1 167 4 32 5 86 1 252 7 133 4 153 1 255 4 114 1 235 3 173 1 138 1 139 2 259 2 190 2 159 1 178 1 192 1 197 4 21 1 74 2 
310 1 
287 1 119 1 284 1 
119 1 158 1 
13 1 119 1 186 1 
37 1 119 1 
119 1 186 1 
275 1 13 1 129 1 119 3 284 2 186 1 
277 3 244 1 338 1 4 1 93 1 108 1 299 2 318 1 301 1 125 1 176 1 8 1 182 4 308 1 112 1 162 2 102 3 179 7 
306 3 244 6 2 1 78 1 4 6 5 1 108 9 228 1 110 1 8 2 182 19 308 1 112 1 251 3 89 1 333 1 254 1 277 18 338 1 93 5 279 1 299 8 318 2 17 1 301 2 139 3 43 1 176 5 18 4 190 3 281 1 161 2 162 2 102 17 179 37 
14 1 277 4 244 1 2 2 4 1 93 1 108 1 299 3 318 1 301 1 43 1 176 1 8 1 182 5 308 1 112 1 161 4 162 2 150 1 102 4 89 2 179 9 333 2 254 2 
277 3 244 1 338 1 4 1 93 1 108 1 299 2 318 1 301 1 176 1 8 1 182 4 308 1 112 1 162 2 102 3 179 7 
277 3 244 1 338 1 4 1 93 1 108 1 299 2 318 1 301 1 176 1 8 1 182 4 308 1 112 1 162 2 102 3 179 7 
335 1 51 1 201 1 202 1 39 1 327 1 186 1 256 1 303 1 140 1 177 2 67 1 214 1 119 1 131 1 130 1 216 1 217 1 168 2 143 1 12 2 312 2 218 1 
51 1 201 1 147 1 26 1 82 1 250 1 130 1 168 1 293 1 12 1 312 1 39 1 15 1 297 1 175 1 63 2 341 1 256 1 140 1 177 1 45 1 216 1 349 1 283 1 143 1 218 1 
51 1 201 1 147 1 26 1 82 1 250 1 272 1 130 1 168 1 293 1 12 1 312 1 336 1 210 1 278 1 39 2 15 1 175 1 63 2 42 1 341 1 256 1 140 2 177 1 45 1 216 1 349 1 283 1 143 1 218 1 
51 1 201 1 147 1 26 1 82 1 250 1 272 2 130 1 168 1 12 1 35 1 312 1 336 1 210 1 39 3 15 1 297 1 63 2 42 1 341 1 256 1 140 3 177 1 45 1 216 1 349 1 283 1 217 1 143 1 218 1 
51 1 201 1 147 1 26 1 82 1 250 1 272 2 168 1 12 1 35 1 312 1 336 1 210 1 39 2 15 1 297 1 63 2 42 1 341 1 140 2 177 1 216 1 349 1 143 1 218 1 
242 1 
105 1 220 1 51 1 107 2 3 1 226 2 181 4 225 1 11 1 231 1 153 1 232 1 235 2 314 2 186 1 69 1 282 1 119 1 120 1 163 1 285 1 21 1 201 2 202 1 77 1 24 4 327 2 165 1 246 1 248 1 205 2 167 1 30 1 32 2 131 1 252 2 169 1 294 1 255 4 295 1 136 1 173 1 92 1 138 1 95 1 302 3 344 2 345 1 44 1 264 1 216 2 305 1 143 1 218 2 
136 1 77 1 24 1 95 1 248 1 302 2 181 2 345 1 44 1 69 1 30 1 264 1 282 1 305 1 163 1 120 1 169 1 294 1 285 1 255 2 
77 1 24 1 165 1 248 1 181 3 30 1 111 1 167 1 169 1 255 3 136 1 314 1 95 1 302 3 44 1 345 1 69 1 70 1 282 1 264 1 305 1 120 1 163 1 285 1 
136 1 77 1 24 1 95 1 248 1 302 2 181 2 345 1 44 1 69 1 30 1 264 1 282 1 305 1 163 1 120 1 169 1 294 1 231 1 285 1 255 2 
326 1 77 1 24 2 165 1 247 1 248 2 181 3 167 1 111 1 30 2 274 1 208 1 169 2 88 1 231 1 294 1 255 3 136 1 314 1 95 1 302 3 44 1 345 1 69 1 141 1 70 1 282 1 264 1 348 1 305 1 120 2 163 1 285 1 350 1 
220 1 107 1 181 3 225 1 226 2 111 1 11 1 231 1 153 1 232 1 235 2 314 1 69 1 282 1 163 1 120 1 285 1 77 1 24 2 165 1 248 1 205 2 30 1 167 2 32 1 252 2 169 1 294 1 255 3 295 1 136 1 173 1 138 1 95 1 302 3 44 1 345 1 344 2 264 1 305 1 
220 1 107 1 77 1 24 4 165 2 248 1 226 2 181 4 225 1 205 2 167 1 111 1 30 1 32 1 169 1 294 2 231 2 153 1 232 2 255 4 313 1 295 1 314 2 235 2 136 1 61 1 173 1 95 1 138 1 302 4 344 2 44 1 345 1 69 1 262 1 282 1 264 1 305 1 120 1 163 1 285 1 
220 1 107 1 225 1 181 4 226 2 111 1 274 1 231 2 153 1 232 2 313 1 235 2 314 2 61 1 69 1 282 1 163 1 120 2 285 1 326 1 77 1 24 4 165 2 247 1 248 2 205 2 30 2 167 1 32 1 208 1 169 2 88 1 294 2 255 4 295 1 136 1 173 1 138 1 95 1 302 4 345 1 44 1 344 2 141 1 262 1 264 1 305 1 350 1 
220 1 107 1 225 1 181 4 227 1 111 1 309 1 274 1 231 2 153 1 314 2 69 1 282 1 163 1 120 2 285 1 326 1 77 1 24 4 165 2 329 2 247 1 248 2 203 1 126 2 205 2 30 2 167 1 32 1 252 2 208 1 169 2 88 1 294 2 255 4 136 1 173 1 138 1 95 1 302 4 345 1 44 1 344 2 141 1 262 1 264 1 305 1 350 1 
220 1 107 1 181 4 225 1 226 2 111 1 274 1 231 3 153 1 232 2 313 1 235 2 314 2 61 1 69 1 282 1 163 1 120 2 285 1 326 1 77 1 24 5 165 2 247 1 248 2 332 1 205 2 30 2 167 1 32 1 208 1 169 2 88 1 294 3 255 4 295 1 136 1 173 1 95 1 138 1 302 4 345 1 44 1 344 2 141 1 262 1 264 1 305 1 350 1 
220 1 107 1 181 4 225 1 226 2 111 1 274 1 231 3 153 1 232 2 313 1 235 2 314 2 61 1 69 1 282 1 163 1 120 2 285 1 326 1 77 1 24 5 165 3 247 1 248 2 332 1 205 2 30 2 167 1 32 1 208 1 169 2 88 1 294 3 255 4 295 1 136 1 173 1 95 1 138 1 302 5 345 1 44 1 344 2 141 1 262 1 264 1 305 1 350 1 
220 1 107 1 181 4 225 1 111 1 274 1 11 1 231 2 153 1 314 2 69 1 282 1 163 1 120 2 285 1 326 1 77 1 24 4 165 2 329 2 247 1 248 2 203 1 126 2 205 2 30 2 167 1 32 1 252 2 208 1 169 2 88 1 294 2 255 4 136 1 173 1 138 1 95 1 302 4 44 1 345 1 344 2 141 1 264 1 305 1 350 1 
326 1 51 2 201 7 202 1 327 2 2 2 221 1 25 1 248 1 27 1 182 1 229 1 131 1 33 1 169 1 89 2 333 2 254 2 234 1 277 1 315 1 60 1 278 1 91 1 297 1 94 1 186 2 340 2 320 1 141 1 161 4 119 3 216 8 101 2 46 2 120 1 143 2 179 2 218 8 
326 1 306 1 244 1 2 1 328 1 4 1 248 1 204 1 182 1 166 1 274 1 169 1 89 1 333 1 113 1 254 1 277 2 299 1 98 1 139 1 190 1 68 1 141 1 161 2 101 1 46 1 102 1 120 1 179 3 
287 1 244 1 2 1 4 1 204 1 8 1 182 3 308 1 112 1 89 1 333 1 254 1 277 3 60 1 236 2 93 1 299 2 98 1 176 1 68 1 161 2 101 1 162 1 46 1 102 2 179 6 
2 1 161 2 101 1 46 1 152 1 89 1 333 1 113 1 254 1 
326 1 22 1 51 1 201 1 270 1 327 1 2 1 221 1 248 2 27 1 182 1 169 1 89 1 113 1 333 1 254 1 154 1 13 1 277 1 236 1 94 1 186 1 300 1 257 1 189 1 66 1 68 1 141 1 161 2 119 1 216 1 101 1 46 1 143 1 120 2 103 1 179 2 218 1 
51 2 306 2 2 3 4 3 221 1 223 2 108 4 8 1 182 10 308 1 112 1 58 2 113 1 13 2 277 10 236 2 62 1 186 2 115 2 190 2 66 2 68 7 161 6 162 1 119 2 120 3 326 1 22 2 201 3 199 2 244 3 327 1 80 2 248 3 27 1 204 7 34 1 169 1 89 3 333 3 254 3 171 1 297 1 93 1 94 1 299 4 300 1 257 2 98 7 139 2 176 1 141 1 216 3 101 3 46 3 143 2 102 8 179 20 218 3 
60 1 2 1 4 1 108 1 222 1 98 1 139 1 204 1 182 2 68 1 161 2 101 1 46 1 102 1 89 1 179 2 333 1 254 1 
306 1 277 2 60 1 244 1 2 1 299 1 98 1 204 1 68 1 128 1 161 2 101 1 46 1 102 1 89 1 179 2 333 1 254 1 
306 1 244 1 2 1 4 1 108 1 204 2 182 2 89 1 333 1 254 1 277 2 60 1 299 1 139 1 98 2 190 1 68 2 161 2 101 1 46 1 102 2 179 4 
2 1 4 1 108 1 222 1 98 1 320 1 139 1 204 1 182 2 68 1 161 2 101 1 46 1 102 1 89 1 179 2 333 1 254 1 
306 1 277 2 244 1 2 1 299 1 98 1 320 1 204 1 68 1 128 1 161 2 101 1 46 1 102 1 89 1 179 2 333 1 254 1 
306 1 244 1 2 1 4 1 108 1 204 2 182 2 89 1 333 1 254 1 277 2 299 1 139 1 320 1 98 2 190 1 68 2 161 2 101 1 46 1 102 2 179 4 
306 1 244 1 2 1 4 1 108 1 204 2 182 2 89 1 333 1 254 1 277 2 299 1 139 1 98 2 190 1 68 2 161 2 101 1 46 1 102 2 179 4 
22 1 51 1 201 1 327 1 2 1 248 1 27 1 182 1 89 1 333 1 254 1 13 1 277 1 236 1 94 1 186 1 115 1 257 1 66 1 161 2 216 1 119 1 101 1 46 1 143 1 120 1 179 2 218 1 
22 1 51 1 200 1 201 1 327 1 2 1 248 1 27 1 182 1 84 1 311 1 89 1 333 1 254 1 13 1 277 1 236 1 94 1 186 1 161 2 216 1 119 1 101 1 46 1 143 1 120 1 179 2 218 1 
306 1 244 1 2 1 4 1 108 1 204 2 182 2 89 1 333 1 113 1 254 1 277 2 299 1 139 1 98 2 190 1 68 2 161 2 101 1 46 1 102 2 179 4 
22 1 51 1 306 1 199 1 201 1 244 1 2 1 4 1 108 1 248 1 204 2 182 2 89 1 333 1 254 1 13 1 277 2 278 1 299 1 186 1 115 1 98 2 139 1 257 1 190 1 66 1 68 2 161 2 216 1 119 1 101 1 46 1 102 2 143 1 120 1 179 4 218 1 
326 1 306 1 244 1 2 1 4 1 108 1 248 1 204 1 182 2 166 1 274 1 169 1 89 1 333 1 113 1 254 1 277 1 172 1 139 1 98 1 190 1 68 1 141 1 161 2 101 1 46 1 102 1 120 1 179 3 
267 1 306 4 269 1 2 3 4 5 108 4 6 1 182 20 8 1 308 1 9 2 112 1 57 1 14 1 277 21 155 1 190 4 18 4 281 3 161 6 162 1 71 1 244 5 78 1 123 1 28 4 251 3 206 1 89 3 333 3 134 1 170 1 254 3 137 1 298 1 93 1 299 4 139 4 43 1 176 1 102 8 47 1 179 41 
267 1 306 3 269 1 244 4 2 4 78 1 4 5 123 1 6 1 108 3 8 1 182 20 308 1 28 4 112 1 9 2 251 3 206 1 57 1 89 4 333 4 170 1 134 1 254 4 14 1 277 18 155 1 137 1 93 1 298 1 299 4 43 2 139 4 176 1 18 4 190 4 281 3 161 8 162 1 71 1 102 7 47 1 179 38 
267 1 306 7 269 1 244 8 2 2 78 2 4 8 123 1 6 1 108 7 8 1 182 27 308 1 28 4 271 2 112 1 9 1 251 4 206 1 57 1 89 2 333 2 254 2 14 1 277 25 155 1 137 1 93 1 298 1 299 7 43 1 139 7 176 1 18 4 190 7 281 2 161 4 162 1 71 1 102 14 47 1 179 52 
306 3 121 1 244 3 2 2 78 1 4 3 123 1 108 3 182 9 28 2 9 1 251 1 89 2 333 2 134 1 254 2 14 1 277 10 155 1 137 1 298 1 299 3 139 3 18 2 190 3 281 1 161 4 71 2 102 6 179 19 
267 1 306 2 269 1 244 2 2 3 4 3 123 1 6 1 108 2 182 14 28 4 9 2 251 2 206 1 57 1 89 3 333 3 254 3 14 1 277 12 155 1 137 1 298 2 299 2 43 2 139 3 18 2 190 3 281 2 161 6 71 1 102 4 47 1 179 26 
266 1 180 1 51 1 146 1 201 2 2 1 248 2 27 1 182 1 229 1 169 2 89 1 113 1 333 1 254 1 184 1 277 1 91 1 94 1 186 1 340 2 191 1 161 2 119 1 216 2 101 1 46 1 143 1 120 2 179 2 218 2 
51 1 201 1 202 1 327 1 164 1 289 1 186 1 67 1 119 1 216 1 131 1 143 1 218 1 312 1 
51 1 201 1 15 1 147 1 297 1 164 1 63 2 26 1 82 1 250 1 216 1 215 1 239 1 349 1 283 1 143 1 218 1 312 1 
51 1 201 2 278 1 15 1 147 1 297 1 164 1 63 2 26 1 82 1 250 1 216 2 215 1 239 1 349 1 283 1 143 1 218 2 312 1 
51 1 201 1 209 1 15 1 147 1 297 1 63 2 26 1 82 1 250 1 216 1 239 1 349 1 283 1 143 1 218 1 312 1 
207 1 
59 1 107 1 173 1 138 1 225 1 111 1 167 1 32 1 196 1 153 1 
235 5 306 2 107 5 244 2 4 2 139 2 212 1 190 2 167 5 32 5 252 10 58 1 72 2 133 5 197 5 
326 1 314 1 24 1 247 1 248 1 181 1 30 1 141 1 111 1 167 1 274 1 120 1 169 1 208 1 88 1 350 1 255 1 
105 1 75 1 51 2 53 1 201 2 107 1 202 1 327 2 24 2 246 1 54 1 55 1 225 1 181 2 249 1 32 1 131 1 153 2 255 2 13 1 314 1 173 2 339 1 92 1 186 2 138 2 119 2 216 2 143 3 21 1 218 2 
59 1 167 1 111 1 107 1 287 1 32 1 196 1 
107 1 24 1 226 1 225 1 181 1 111 1 167 2 32 1 252 1 153 1 232 1 255 1 295 1 235 1 314 1 173 1 138 1 
51 1 306 1 107 3 4 1 225 2 181 2 58 1 153 2 13 1 314 1 235 3 186 1 158 2 190 1 119 4 284 1 285 1 72 1 73 1 197 3 21 1 201 1 244 1 327 1 24 2 331 1 129 1 167 3 32 4 252 6 253 1 133 3 255 2 296 1 173 2 138 2 41 1 139 1 142 1 216 1 143 2 49 1 218 1 
105 1 267 1 306 2 269 1 107 5 4 2 225 2 181 1 111 2 274 1 151 1 57 1 153 2 235 3 314 1 187 1 190 2 18 1 281 1 120 1 72 2 197 5 21 1 326 1 244 2 24 1 247 1 248 1 30 1 167 5 251 1 32 8 206 1 252 6 169 1 208 1 88 1 133 5 255 1 173 2 138 2 139 2 212 1 141 1 47 1 350 1 
326 1 107 2 244 1 4 2 247 1 248 1 225 1 181 1 110 1 8 1 30 1 32 2 274 1 208 1 169 1 88 1 153 1 255 1 313 1 173 1 93 1 138 1 176 1 212 1 141 1 120 1 72 2 350 1 
145 1 326 2 51 1 22 1 201 1 2 1 327 1 248 3 274 2 169 2 208 1 89 1 333 1 254 1 13 1 277 1 236 1 94 1 186 1 115 1 257 1 66 1 141 2 161 2 216 1 119 1 101 1 46 1 120 3 143 1 179 1 218 1 
105 1 235 2 107 2 173 1 138 1 225 1 111 2 167 4 32 1 162 1 252 4 133 2 197 2 153 1 21 1 
83 1 265 1 
83 1 265 1 
83 1 265 1 
83 1 265 1 
83 1 265 1 
83 1 265 1 
83 1 265 1 
83 1 265 1 
322 1 48 1 
269 1 244 1 2 1 4 1 182 4 8 1 308 1 251 1 112 1 89 1 333 1 254 1 14 1 277 4 93 1 299 2 176 1 18 1 281 1 161 2 162 1 102 2 179 8 
269 1 244 1 2 2 78 1 4 2 108 1 148 1 8 1 182 6 308 1 112 1 251 1 89 2 333 2 254 2 14 1 277 5 93 1 299 2 139 1 176 1 18 2 190 1 281 1 161 4 162 1 102 3 179 11 
267 1 306 2 269 1 244 3 2 3 4 3 108 1 148 1 8 1 182 9 308 1 112 1 251 1 206 1 89 3 57 1 333 3 254 3 14 1 277 10 93 1 299 3 139 2 43 1 176 1 18 1 190 2 281 1 161 6 162 1 102 4 47 1 179 19 
267 1 306 1 269 1 244 2 2 3 4 3 108 2 148 1 8 1 182 10 308 1 112 1 251 1 206 1 89 3 57 1 333 3 254 3 14 1 277 7 93 1 299 3 43 1 139 2 176 1 18 1 190 2 281 1 161 6 162 1 102 5 47 1 179 17 
269 1 244 1 2 1 4 1 182 4 8 1 308 1 251 1 112 1 89 1 333 1 254 1 14 1 277 4 93 1 299 2 176 1 18 1 281 1 161 2 162 1 102 2 179 8 
267 1 306 2 269 1 244 2 2 1 4 2 108 1 182 6 251 1 206 1 89 1 57 1 333 1 254 1 14 1 277 6 299 1 139 2 18 1 190 2 281 1 161 2 102 2 47 1 179 12 
267 1 306 1 269 1 244 2 2 4 4 3 108 2 148 1 8 1 182 10 308 1 112 1 251 1 206 1 57 1 89 4 333 4 254 4 14 1 277 8 93 1 299 3 139 2 43 2 176 1 18 1 190 2 281 1 161 8 162 1 102 5 47 1 179 18 
267 1 306 2 269 1 244 2 2 4 4 3 108 3 182 9 251 1 206 1 57 1 89 4 333 4 134 1 254 4 14 1 277 7 299 3 139 3 43 2 18 1 190 3 281 1 161 8 102 6 47 1 179 16 
277 4 244 1 4 1 93 3 108 3 299 3 176 3 8 1 182 3 308 2 112 1 102 6 179 7 
267 1 306 1 269 1 244 2 2 4 4 3 108 1 8 1 182 10 308 1 112 1 251 1 206 1 57 1 89 4 333 4 134 1 254 4 14 1 277 8 93 1 299 3 139 2 43 2 176 1 18 1 190 2 281 1 161 8 162 1 102 4 47 1 179 18 
14 1 277 5 244 2 2 1 4 2 93 2 108 2 299 3 176 2 110 1 182 5 8 1 161 2 102 5 89 1 333 1 179 10 254 1 
14 1 2 1 4 1 108 1 139 1 182 2 161 2 102 1 89 1 333 1 179 2 254 1 
14 1 277 2 306 1 244 1 2 1 4 1 108 1 299 1 139 1 190 1 182 2 161 2 102 2 89 1 333 1 179 4 254 1 
14 1 243 1 277 2 2 3 93 1 108 1 299 1 43 1 176 1 182 1 161 6 102 2 89 3 179 3 333 3 134 1 254 3 
306 3 244 4 2 4 78 1 4 4 5 1 108 5 148 1 228 1 8 1 182 13 308 1 112 1 251 3 89 4 333 4 134 1 254 4 14 1 277 14 93 2 299 5 17 1 43 1 139 3 176 2 18 4 190 3 281 1 161 8 162 1 102 10 179 27 
277 4 244 1 2 2 4 1 93 1 108 1 299 2 43 1 176 1 8 1 182 4 308 1 161 4 112 1 162 1 102 3 89 2 179 8 333 2 254 2 
277 3 287 1 244 1 4 1 93 1 299 2 176 1 8 1 182 3 308 1 112 1 162 1 102 2 179 6 
277 2 306 1 244 1 2 1 4 1 108 1 299 1 148 1 139 1 190 1 182 2 161 2 102 2 89 1 333 1 179 4 254 1 
306 1 277 4 244 1 78 1 4 1 108 1 299 1 139 1 18 2 190 1 182 3 281 1 251 1 102 2 179 7 
306 2 243 1 244 3 78 1 2 2 4 3 108 4 8 1 182 11 308 1 271 1 230 1 112 1 251 2 89 2 333 2 254 2 277 12 93 2 299 5 139 2 43 2 176 2 190 2 18 2 161 4 162 1 102 9 179 23 
18 1 277 1 179 1 
182 1 251 1 179 1 
277 3 306 1 244 1 2 1 4 1 108 1 299 2 148 1 139 1 190 1 182 3 161 2 102 3 89 1 58 1 333 1 179 6 254 1 
267 1 306 2 269 1 244 2 2 1 4 2 108 1 182 6 251 1 206 1 89 1 57 1 333 1 254 1 14 1 277 6 299 1 139 2 18 1 190 2 281 1 161 2 102 2 47 1 179 12 
277 3 244 1 4 1 93 1 108 1 299 1 176 1 8 1 182 3 102 2 179 6 
243 1 277 2 2 1 93 1 108 1 299 1 43 1 176 1 182 1 308 1 161 2 112 1 102 2 89 1 179 3 333 1 254 1 
160 1 236 1 120 1 324 1 169 1 248 1 44 1 
198 1 185 1 122 1 236 1 248 1 44 1 160 1 273 1 324 1 120 1 169 1 286 1 
51 1 201 4 38 1 278 1 202 1 327 1 186 1 85 1 216 4 131 1 119 1 143 1 218 4 
13 1 51 1 171 1 201 2 40 1 339 1 186 1 54 1 55 1 249 1 216 2 119 1 143 2 218 2 
51 1 201 1 15 1 327 1 216 1 349 1 63 1 143 1 26 1 218 1 
266 1 51 1 201 2 278 1 91 1 297 1 186 1 216 2 119 1 143 1 218 2 
51 2 201 4 234 1 38 1 202 1 278 1 327 1 91 1 40 1 186 2 131 1 216 5 119 3 143 2 33 1 218 5 
51 2 201 4 233 1 38 1 202 1 278 1 327 1 91 1 40 1 186 2 131 1 216 5 119 3 143 2 33 1 218 5 
51 1 201 1 202 1 287 1 327 1 119 1 131 1 216 1 143 1 186 1 218 1 
13 1 326 1 22 1 51 1 201 1 236 1 327 1 221 1 186 1 248 2 66 1 141 1 119 1 216 1 143 1 120 2 169 1 218 1 
13 2 326 2 22 1 51 1 201 1 37 1 77 1 236 1 40 1 221 1 186 2 248 2 66 1 117 1 30 1 141 1 119 3 216 1 305 1 143 1 120 2 169 2 218 1 
326 2 51 1 22 1 200 1 201 2 77 1 221 1 248 2 30 1 85 1 169 2 13 2 37 1 236 1 40 1 186 2 117 1 141 1 216 2 119 3 305 1 120 2 143 1 218 2 
326 1 51 1 201 1 24 1 81 1 247 1 248 1 181 2 30 1 111 1 167 1 274 1 169 1 208 1 88 1 255 2 276 1 13 1 37 1 40 1 186 1 158 1 117 1 141 1 119 4 216 1 284 1 120 1 143 1 285 1 350 1 218 1 
326 1 51 1 201 1 24 1 247 1 248 1 181 2 30 1 111 1 167 1 274 1 169 1 208 1 88 1 253 1 255 2 13 1 37 1 40 1 186 1 158 1 117 1 141 1 119 4 216 1 284 1 120 1 143 1 285 1 350 1 218 1 
51 1 201 1 216 1 143 1 25 1 218 1 
13 1 51 2 234 1 201 6 315 1 278 1 91 1 327 2 297 1 25 1 186 2 340 1 55 1 249 1 213 1 129 1 216 7 119 3 33 1 143 3 218 7 
326 1 22 1 51 1 201 1 199 1 244 1 2 2 4 1 221 1 80 1 248 2 204 1 182 3 8 1 308 1 112 1 169 1 89 2 113 1 333 2 254 2 13 1 277 3 278 1 236 2 93 1 299 2 186 1 115 1 98 1 257 1 176 1 191 1 66 1 68 1 141 1 161 4 162 1 119 1 101 2 216 1 46 2 102 2 143 1 120 2 179 6 218 1 
53 1 107 5 4 2 181 3 225 2 110 1 8 1 111 2 274 1 153 2 59 1 314 1 158 1 119 2 284 1 120 1 285 1 72 2 196 1 326 1 201 1 244 2 24 2 327 1 124 1 247 1 248 1 331 1 30 1 167 2 32 4 208 1 169 1 88 1 253 1 255 3 173 2 93 1 138 2 176 1 212 1 141 1 142 1 216 1 49 1 350 1 218 1 
13 1 51 1 201 2 278 1 25 1 186 1 41 1 129 1 216 2 119 2 284 1 143 2 218 2 
13 1 326 1 22 1 51 1 201 1 200 1 236 1 327 1 221 1 186 1 248 2 141 1 119 1 216 1 143 1 120 2 169 1 218 1 
13 1 51 1 201 1 40 1 186 1 55 1 249 1 213 1 129 1 216 1 119 1 143 2 218 1 
127 1 56 1 236 1 10 1 323 1 
77 1 236 1 124 1 181 2 238 1 127 2 56 2 69 1 167 1 111 1 30 1 323 1 10 2 305 1 193 1 241 1 285 1 50 1 255 2 
180 1 184 1 146 1 248 1 127 1 10 1 323 1 120 1 169 1 
238 1 323 1 50 1 
140 1 336 1 210 1 39 1 130 1 175 1 42 1 256 1 
36 1 336 2 210 2 39 4 79 1 317 1 7 1 42 3 256 1 140 4 272 2 31 1 130 1 325 1 
106 1 336 1 210 1 39 2 175 1 42 1 97 1 256 1 140 2 272 1 130 1 351 1 
140 3 36 2 336 1 29 1 210 1 31 2 39 3 130 1 175 1 42 1 256 1 325 1 
19 2 316 1 245 1 42 2 
140 1 39 1 130 1 175 1 87 1 256 1 
140 2 336 1 210 1 272 1 39 2 130 1 175 1 132 1 42 1 256 1 
90 1 
140 1 336 1 210 1 39 1 130 1 175 1 42 1 256 1 
336 1 210 1 287 1 42 1 
140 1 336 1 210 1 39 1 130 1 42 1 256 1 
140 1 168 1 12 1 
36 1 336 1 210 1 39 3 175 1 96 1 42 1 256 1 140 3 31 2 130 1 325 1 
140 2 336 1 210 1 272 1 39 2 240 1 130 1 42 1 256 1 
140 1 39 1 147 1 130 1 349 1 175 1 63 1 7 1 42 1 342 1 256 1 
140 1 210 1 39 1 130 1 175 1 42 1 256 1 
140 1 336 1 210 2 39 1 130 1 175 1 256 1 
140 2 23 1 210 1 39 2 130 2 175 1 224 1 194 1 42 1 256 2 
336 1 210 1 39 3 79 1 175 1 7 1 42 2 256 1 291 1 140 3 272 2 130 1 132 1 
336 1 210 1 15 1 39 2 147 1 175 1 63 2 42 1 256 1 82 1 140 2 272 1 263 1 130 1 349 1 
336 1 210 1 39 4 79 1 175 1 7 1 42 2 256 2 140 4 292 1 272 2 130 2 240 1 
336 1 210 1 39 3 175 1 42 1 256 1 140 3 272 1 31 1 130 1 132 1 
79 1 317 1 7 1 42 1 
210 1 42 1 

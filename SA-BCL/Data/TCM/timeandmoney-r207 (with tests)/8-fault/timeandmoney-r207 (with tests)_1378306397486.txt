#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (90,199) 310 (48,135) (48,135) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (90,199) 310 (48,135) (48,135) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (90,199) 310 (48,135) (48,135) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (90,199) 310 (48,135) (48,135) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 87 129 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 223 370 236 134 188 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 223 370 236 134 188 179 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 223 370 236 134 188 179 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 87 129 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 223 370 236 134 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 223 370 236 134 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 223 370 236 134 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 223 370 236 134 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1265 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 4001 | = null
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | CONSTANT | 1656 | 0 -> 1
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 8156 | return null
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> 0
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10099 | 0 -> 1
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 8735 | || -> &&
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7629 | return null
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
135 1 48 1 60 1 140 1 304 1 205 1 326 1 90 1 372 1 4 1 310 1 
135 1 48 1 60 1 140 1 304 1 205 1 326 1 90 1 372 1 4 1 310 1 
135 1 48 1 60 1 140 1 304 1 205 1 326 1 90 1 372 1 4 1 310 1 
135 1 48 1 60 1 140 1 304 1 205 1 326 1 90 1 372 1 4 1 310 1 
148 3 60 4 304 1 357 1 282 2 326 1 295 1 20 1 35 3 140 4 121 1 297 1 193 1 205 1 343 1 194 2 156 1 377 1 
60 2 337 1 304 1 326 1 295 1 4 1 372 1 20 1 35 1 71 1 203 1 140 2 121 1 205 1 211 1 377 1 
148 1 60 3 304 2 282 1 326 1 199 1 295 1 372 1 35 2 140 3 121 1 297 1 205 2 
148 7 357 1 199 1 295 1 35 5 237 1 297 3 365 1 205 2 343 1 156 1 60 9 304 2 282 4 326 1 372 1 328 1 20 1 374 1 140 9 121 1 193 1 194 2 377 1 
148 7 357 1 199 1 295 1 35 5 237 1 297 3 365 1 205 2 343 1 156 1 60 9 304 2 282 4 326 1 372 1 328 1 20 1 374 1 140 9 121 1 193 1 194 2 377 1 
130 1 281 1 273 1 
301 2 130 1 361 1 
168 2 198 2 124 2 154 2 344 1 279 2 190 2 224 1 
355 1 198 3 259 1 233 2 358 1 294 1 3 1 339 1 316 1 69 2 272 1 276 1 108 1 154 2 109 1 344 1 180 1 279 3 12 1 299 2 303 1 164 1 116 1 307 2 190 2 284 1 373 1 224 1 168 2 169 1 64 1 119 2 266 1 267 1 124 2 170 1 146 1 
168 1 198 1 124 1 154 1 371 1 279 1 229 1 190 1 58 1 224 1 
311 1 198 1 367 1 30 1 371 1 273 1 352 1 331 1 130 1 253 1 124 1 56 1 24 1 279 1 
198 1 367 1 30 1 371 1 190 1 273 1 331 2 168 1 130 1 253 1 124 1 154 1 56 1 24 2 279 1 
331 1 14 1 151 1 24 1 212 1 
331 2 130 1 14 1 24 2 273 1 191 1 212 1 139 1 
331 1 24 1 212 1 
198 1 14 1 371 1 190 1 224 1 331 1 168 1 22 1 124 1 154 1 24 1 279 1 229 1 58 1 
130 1 
331 2 130 1 14 1 234 1 24 2 273 1 191 1 212 1 
14 2 162 1 260 1 273 1 191 1 118 1 331 5 330 2 44 1 319 1 130 1 366 1 23 1 256 1 155 1 227 2 24 5 46 2 212 2 
355 1 198 2 233 1 358 1 339 1 138 1 284 1 69 1 317 1 168 1 169 1 119 1 124 1 170 1 109 1 154 1 180 1 146 1 279 2 263 1 
281 1 344 1 
198 2 190 1 168 1 124 2 153 1 132 1 154 1 344 2 279 2 
51 1 138 1 258 1 
355 1 198 1 233 1 358 1 114 1 339 1 69 1 284 1 169 1 119 1 170 1 109 1 344 1 180 1 279 1 146 1 
168 3 198 3 124 3 154 3 344 1 279 3 190 1 317 1 
168 1 198 1 124 1 154 1 371 1 279 1 229 1 
168 1 198 1 124 1 153 1 132 1 154 1 371 1 279 1 190 1 
355 1 198 4 259 1 358 1 233 1 30 1 294 1 339 1 316 1 69 1 317 1 132 1 109 1 154 3 344 1 180 1 56 1 279 4 12 1 263 1 299 2 303 1 367 1 116 1 307 1 371 1 284 1 190 2 373 1 224 1 168 3 331 1 169 1 64 1 119 1 266 1 253 1 267 1 124 3 170 1 24 1 146 1 290 1 196 1 
352 1 168 1 198 2 124 2 154 1 344 1 147 1 279 2 317 1 
68 1 198 3 367 1 30 1 371 1 190 1 317 2 331 1 168 3 130 1 253 1 124 3 132 1 154 3 24 1 56 1 279 3 263 1 196 1 
198 2 190 1 138 1 317 1 168 2 124 2 132 1 154 2 279 2 258 1 
355 1 198 1 233 1 358 1 339 1 69 1 284 1 169 1 119 1 170 1 109 1 344 1 180 1 279 1 146 1 
355 1 198 1 233 1 245 1 339 1 69 1 169 1 119 1 170 1 109 1 344 1 180 1 279 1 146 1 126 1 
51 2 316 1 70 1 239 1 10 1 12 2 299 2 159 1 115 1 164 2 116 1 307 4 138 2 373 1 223 1 64 1 266 1 65 1 267 1 225 1 257 1 171 1 127 1 258 2 
168 1 198 1 292 1 124 1 30 1 154 1 371 1 279 1 
198 5 189 1 190 1 317 2 352 1 168 4 124 5 132 1 154 4 344 1 147 1 279 5 263 1 325 1 
168 2 198 2 292 1 124 2 154 2 371 1 279 2 229 1 
220 1 362 1 
220 1 362 1 
250 1 163 1 
250 1 163 1 
250 1 163 1 
73 1 220 1 362 1 
122 1 220 1 362 1 
336 1 250 1 163 1 220 2 345 1 362 2 
73 1 220 1 362 1 
73 1 220 1 362 1 
66 1 220 1 362 1 
66 1 220 1 362 1 
66 1 220 1 362 1 
13 1 313 3 246 2 220 2 16 2 235 1 43 1 362 2 331 2 333 2 130 1 143 1 277 1 323 2 345 1 24 2 207 2 67 1 94 1 
128 1 198 2 313 1 246 1 220 1 16 1 283 1 327 1 43 1 351 1 362 1 331 1 168 2 333 1 275 1 122 1 124 2 154 2 344 1 24 1 279 2 207 1 347 1 173 1 
193 1 377 1 20 1 
337 1 377 1 20 1 
149 1 197 1 337 1 193 2 33 1 20 3 
149 1 197 1 337 1 41 1 193 1 20 2 
149 1 197 2 337 1 193 1 20 2 
27 2 50 1 260 2 361 1 273 1 296 1 275 1 322 1 130 2 239 1 155 1 241 1 212 1 301 3 14 4 162 3 137 2 306 1 370 1 327 1 191 1 223 1 330 1 331 5 88 1 375 2 225 1 227 1 46 1 24 5 127 1 173 1 
49 1 151 5 50 2 31 1 260 6 176 1 361 3 273 1 296 2 5 1 204 1 130 5 239 3 155 1 241 1 212 6 76 1 301 9 14 7 219 5 162 8 137 6 370 3 191 1 118 1 223 3 331 9 330 2 375 6 225 3 227 2 24 9 46 2 127 3 173 4 
27 1 50 1 260 2 273 1 361 2 296 1 130 3 322 1 239 1 301 4 14 2 162 3 306 1 137 2 370 1 118 1 223 1 330 1 331 3 375 2 227 1 225 1 46 1 24 3 127 1 173 1 
27 2 50 1 31 1 260 4 176 1 273 1 361 3 296 1 5 1 130 4 322 1 239 2 301 7 14 3 162 5 137 4 306 1 370 2 118 1 223 2 330 1 331 4 375 4 227 1 225 2 46 1 24 4 127 2 173 2 
355 1 281 1 247 1 
355 1 74 1 
265 1 
355 1 339 1 
355 3 300 1 320 1 170 1 247 2 339 1 
355 1 170 1 339 1 
355 1 86 1 
59 1 174 1 80 1 175 2 115 2 164 4 307 7 34 1 62 1 364 1 239 1 225 1 255 1 171 3 195 1 12 3 158 1 
59 1 174 1 80 1 175 2 115 2 164 4 307 7 34 1 62 1 364 1 239 1 225 1 255 1 171 3 195 1 12 3 158 1 
59 1 174 1 80 1 102 1 175 2 115 2 164 4 307 7 34 1 62 1 364 1 239 1 225 1 255 1 171 3 195 1 12 3 158 1 
174 2 175 3 34 2 316 2 318 3 364 1 341 1 239 2 346 3 158 1 12 11 59 2 299 4 80 1 136 1 218 1 115 3 164 14 370 2 307 25 85 1 373 2 223 2 62 1 167 1 64 2 267 2 334 1 225 3 255 3 195 2 171 6 127 1 376 2 
174 1 175 1 2 1 316 1 34 1 178 1 239 2 12 4 158 1 299 2 59 1 80 1 368 1 115 2 164 5 307 9 373 1 62 1 64 1 267 1 255 1 225 2 195 1 171 3 
148 1 337 1 233 1 295 1 69 1 33 1 35 1 152 1 106 1 205 1 109 1 184 1 60 2 304 1 42 1 113 1 326 1 372 1 350 1 20 2 119 1 140 2 121 1 193 1 89 1 91 1 228 1 146 1 289 1 377 1 
148 2 26 1 337 1 101 1 233 1 295 1 33 1 69 1 35 1 152 1 106 1 205 1 109 1 60 3 304 1 42 1 113 1 372 1 350 1 20 2 119 1 140 3 121 1 193 1 335 1 91 1 228 1 146 1 289 1 377 1 
148 2 26 1 337 1 101 1 233 1 295 1 69 1 33 1 35 1 109 1 60 2 42 1 113 1 372 1 350 1 20 2 119 1 140 2 121 1 193 1 91 1 228 1 146 1 289 1 377 1 
355 1 233 1 339 1 69 1 205 1 109 1 75 1 60 1 304 1 244 1 186 1 113 2 372 2 285 1 169 1 119 1 140 1 268 1 335 1 145 1 91 2 146 1 289 2 
60 1 337 1 304 1 101 1 42 1 233 1 326 1 113 1 33 1 372 1 69 1 20 2 350 1 106 1 152 1 119 1 140 1 193 1 205 1 109 1 89 1 91 1 146 1 228 1 289 1 377 1 
82 1 
162 1 233 1 69 1 296 1 331 1 330 1 169 1 129 1 87 1 119 1 155 1 227 1 24 1 46 1 212 1 
198 1 311 1 338 1 30 1 293 1 261 1 234 1 56 1 279 1 212 2 213 1 367 1 185 1 371 1 191 1 352 1 331 3 253 1 124 1 24 3 309 2 47 1 
213 1 338 1 311 1 198 1 367 1 185 1 30 1 234 1 261 1 293 1 371 1 191 1 273 1 331 3 352 1 130 1 253 1 141 1 124 1 56 1 24 3 279 1 309 3 212 1 
198 1 311 1 338 1 30 1 234 1 293 1 261 1 273 1 130 1 56 1 279 1 212 2 213 1 367 1 185 1 371 1 191 1 352 1 331 3 253 1 141 1 124 1 24 3 309 3 172 1 47 1 
98 2 232 2 311 1 338 1 198 1 312 1 30 1 260 1 293 1 234 1 261 1 361 2 273 5 7 2 130 5 8 1 238 1 155 1 206 1 56 1 279 1 212 7 213 1 305 1 367 1 15 2 162 1 185 1 371 1 221 1 191 3 330 1 352 1 331 5 253 1 141 4 124 1 227 1 46 1 24 5 309 6 95 1 172 4 47 4 
98 2 198 1 338 1 261 1 293 1 260 1 7 2 54 1 155 1 56 1 212 4 213 1 301 2 162 1 15 2 352 1 124 1 227 1 24 4 309 4 172 2 311 1 232 2 30 1 361 2 273 1 130 2 238 1 279 1 367 1 185 1 371 1 191 2 331 4 330 1 253 1 141 2 46 1 95 1 47 2 
98 2 232 2 198 1 311 1 338 1 30 1 260 1 293 1 261 1 273 1 361 2 7 2 130 1 8 1 238 1 155 1 56 1 279 1 212 4 213 1 305 1 367 1 15 2 162 1 185 1 371 1 221 1 191 2 352 1 331 4 330 1 253 1 141 2 124 1 227 1 46 1 24 4 309 4 95 1 47 2 172 2 
98 2 232 2 198 1 311 1 338 1 30 1 260 1 293 1 261 1 273 1 361 2 7 2 130 1 8 1 238 1 155 1 56 1 279 1 212 4 213 1 305 1 367 1 15 2 162 1 185 1 371 1 221 1 191 2 352 1 331 4 330 1 253 1 141 2 124 1 227 1 46 1 24 4 309 4 95 1 47 2 172 2 
232 2 198 1 311 1 338 1 30 1 271 1 260 1 293 1 261 1 273 1 201 2 7 2 130 1 238 1 155 1 56 1 279 1 11 1 212 4 213 1 301 2 305 1 367 1 162 1 185 1 371 1 191 2 352 1 331 4 330 1 253 1 141 2 124 1 354 2 227 1 46 1 24 4 287 1 309 4 47 2 172 2 
98 2 232 2 198 1 311 1 338 1 30 1 260 1 293 1 261 1 273 1 361 2 7 2 130 1 8 1 238 1 155 1 206 1 56 1 279 1 212 5 213 1 305 1 367 1 15 2 162 1 185 1 371 1 221 1 191 2 330 1 352 1 331 4 253 1 141 3 124 1 227 1 46 1 24 4 309 5 95 1 172 3 47 3 
98 2 232 2 198 1 311 1 338 1 30 1 260 1 293 1 261 1 273 1 361 2 7 2 130 1 8 1 238 1 155 1 206 1 56 1 279 1 212 5 213 1 305 1 367 1 15 2 162 1 185 1 371 1 221 1 191 2 330 1 352 1 331 4 253 1 141 3 124 1 227 1 46 1 24 4 309 5 95 1 172 3 47 3 
198 1 338 1 261 1 293 1 260 1 201 2 7 2 54 1 155 1 56 1 212 4 213 1 301 2 162 1 352 1 124 1 354 2 227 1 24 4 309 4 172 2 311 1 232 2 30 1 271 1 273 1 130 1 238 1 279 1 367 1 185 1 371 1 191 2 331 4 330 1 253 1 141 2 46 1 47 2 
175 1 51 1 316 1 239 1 344 2 158 1 12 3 59 1 299 2 159 1 80 1 281 1 115 2 116 1 164 3 307 6 138 1 373 1 62 1 64 1 266 1 267 1 225 1 195 1 171 2 258 1 
51 11 3 1 316 2 340 1 318 3 105 1 363 1 239 1 344 1 346 3 12 6 79 1 299 4 303 1 369 1 115 1 116 2 164 8 370 2 307 14 138 11 373 2 308 1 223 2 64 2 266 1 267 2 334 1 255 1 225 2 171 2 127 1 258 4 
355 1 198 2 358 1 233 1 339 1 3 1 69 1 316 1 317 1 363 1 107 1 109 1 154 1 344 1 180 1 279 2 263 1 12 1 299 2 303 1 61 1 114 1 116 1 164 1 307 2 284 1 373 1 117 1 168 1 169 1 119 1 64 1 266 1 267 1 124 1 170 1 146 1 258 1 
198 3 259 2 101 1 51 7 3 1 339 2 9 1 342 2 154 1 109 2 344 2 158 1 12 10 263 1 59 1 299 6 303 1 302 2 115 4 116 3 164 10 307 20 18 1 223 2 62 1 168 1 169 1 119 3 64 3 266 3 267 3 124 1 170 2 226 1 225 3 171 8 127 2 355 2 175 1 233 3 358 2 69 3 316 3 317 1 36 2 363 1 321 2 239 3 180 2 279 3 80 1 370 2 284 2 138 7 373 3 255 4 195 1 146 2 258 7 
355 3 291 1 198 1 101 1 233 8 359 1 52 1 3 1 339 2 69 7 316 2 317 1 276 2 154 1 109 2 279 1 210 1 348 1 12 1 38 1 184 1 159 1 299 4 303 1 244 1 116 2 164 1 307 2 373 2 168 1 169 2 332 1 119 8 64 2 266 2 267 2 124 1 268 1 146 2 
198 1 51 1 316 1 363 1 132 1 154 1 239 1 279 1 12 2 299 2 115 1 116 1 370 1 164 1 307 3 138 1 190 1 373 1 223 1 168 1 64 1 286 1 266 1 267 1 124 1 225 1 171 1 127 1 258 1 
159 1 299 2 51 1 116 1 164 2 307 2 138 1 316 1 373 1 223 1 64 1 266 1 65 1 267 1 255 1 225 1 171 1 258 1 
159 1 299 2 115 1 51 1 116 1 307 2 138 1 316 1 373 1 64 1 266 1 267 1 239 1 257 1 171 1 127 1 258 1 12 2 
51 2 316 1 239 1 12 2 299 2 159 1 115 1 164 2 370 1 116 1 307 4 138 2 373 1 223 1 64 1 266 1 267 1 225 1 255 1 171 2 127 1 258 2 
299 2 51 1 116 1 164 2 307 2 138 1 316 1 373 1 223 1 64 1 266 1 65 1 267 1 255 1 225 1 171 1 210 1 258 1 
299 2 115 1 51 1 116 1 307 2 138 1 316 1 373 1 64 1 266 1 267 1 239 1 257 1 171 1 210 1 127 1 258 1 12 2 
51 2 316 1 239 1 210 1 12 2 299 2 115 1 164 2 370 1 116 1 307 4 138 2 373 1 223 1 64 1 266 1 267 1 225 1 255 1 171 2 127 1 258 2 
51 2 316 1 239 1 12 2 299 2 115 1 164 2 370 1 116 1 307 4 138 2 373 1 223 1 64 1 266 1 267 1 225 1 255 1 171 2 127 1 258 2 
355 1 198 1 259 1 358 1 233 1 3 1 339 1 69 1 316 1 109 1 344 1 180 1 279 1 12 1 299 2 303 1 164 1 116 1 307 2 284 1 373 1 169 1 119 1 64 1 266 1 267 1 170 1 146 1 
355 1 198 1 233 1 3 1 339 1 69 1 316 1 109 1 344 1 180 1 279 1 12 1 299 2 303 1 245 1 164 1 116 1 307 2 373 1 169 1 119 1 64 1 266 1 267 1 170 1 125 1 146 1 126 1 
51 2 316 1 363 1 239 1 12 2 299 2 115 1 164 2 370 1 116 1 307 4 138 2 373 1 223 1 64 1 266 1 267 1 225 1 255 1 171 2 127 1 258 2 
355 1 198 1 259 1 358 1 233 1 51 2 339 1 69 1 316 1 342 1 239 1 109 1 180 1 279 1 12 2 184 1 299 2 115 1 164 2 116 1 370 1 307 4 138 2 284 1 373 1 223 1 119 1 64 1 266 1 267 1 170 1 255 1 225 1 171 2 146 1 127 1 258 2 
198 1 103 1 51 1 316 1 363 1 132 1 239 1 154 1 279 1 12 1 299 2 116 1 370 1 164 2 307 3 190 1 138 1 373 1 223 1 168 1 64 1 266 1 267 1 124 1 255 1 225 1 171 1 127 1 258 1 
231 1 175 1 360 1 316 4 200 1 236 1 202 1 318 2 177 1 239 4 133 4 179 1 346 2 134 1 158 1 12 17 59 1 299 8 81 2 80 1 216 1 368 1 349 1 115 4 188 1 164 20 370 4 307 37 373 4 222 1 223 4 62 1 64 4 353 1 267 4 334 2 255 5 225 5 195 1 171 9 127 3 376 2 
316 2 236 1 318 2 177 1 239 1 133 2 179 1 346 2 134 1 12 8 299 4 216 1 368 1 349 2 115 1 188 2 164 9 370 2 307 17 373 2 222 1 223 2 64 2 353 1 267 2 334 2 225 2 171 1 127 1 376 1 
231 1 175 2 360 1 316 4 200 1 236 1 318 3 177 1 239 5 133 4 179 1 346 3 134 1 158 2 12 21 59 2 299 8 81 1 80 2 216 1 368 1 349 2 115 4 188 1 164 23 370 3 307 44 373 4 222 1 223 3 62 2 63 1 64 4 353 1 267 4 334 3 255 5 225 5 195 2 171 9 127 3 376 2 
231 1 175 1 360 1 316 4 200 1 236 1 318 3 177 1 239 3 133 4 179 1 346 3 134 1 158 1 12 16 59 1 299 8 81 1 80 1 216 1 368 1 349 2 115 3 188 1 164 19 370 3 307 35 373 4 222 1 223 3 62 1 63 1 64 4 353 1 267 4 334 3 255 4 225 4 195 1 171 7 127 2 376 2 
175 1 316 1 236 1 318 2 177 1 239 2 133 2 179 1 346 2 134 1 158 1 12 9 59 1 299 2 80 1 216 1 368 1 349 1 115 2 188 1 164 12 370 2 307 21 373 1 222 1 223 2 62 1 64 1 353 1 267 1 334 2 225 3 195 1 171 2 127 1 
45 1 333 1 277 1 16 1 220 1 246 1 345 1 207 1 235 1 362 1 
128 1 122 1 
333 1 16 1 220 1 246 1 207 1 183 1 240 1 298 1 362 1 
313 2 246 1 220 1 16 1 235 1 43 1 362 1 331 1 333 1 130 1 143 1 277 1 323 1 345 1 24 1 207 1 67 1 94 1 
313 2 246 1 220 1 16 1 235 1 43 1 362 1 331 1 333 1 130 1 143 1 277 1 323 1 345 1 24 1 207 1 67 1 94 1 
313 2 246 1 220 1 16 1 235 1 43 1 362 1 331 1 333 1 130 1 143 1 277 1 323 1 345 1 24 1 207 1 67 1 94 1 
336 1 73 1 214 1 
336 1 73 1 214 1 
66 1 356 1 
336 1 66 1 356 1 
347 1 351 1 
128 1 198 2 313 1 362 1 275 1 154 2 344 1 323 1 279 2 207 1 347 1 14 1 16 1 220 1 246 1 283 1 327 1 351 1 331 1 168 2 333 1 122 1 124 2 24 1 67 1 92 1 173 1 
73 1 214 1 
336 1 66 1 356 1 
355 1 291 1 198 2 233 2 359 1 339 1 3 1 316 1 69 2 363 1 6 1 276 2 131 1 109 1 181 1 279 2 12 1 299 2 303 1 116 1 164 1 307 2 373 1 249 1 119 2 64 1 266 1 267 1 124 2 146 1 96 1 
184 1 215 1 337 1 40 1 101 1 233 2 42 1 17 1 33 1 69 2 20 2 119 2 106 1 193 1 109 1 91 1 146 1 228 1 377 1 
337 1 101 1 233 1 42 1 17 1 33 1 69 1 20 2 119 1 106 1 193 1 109 1 91 1 228 1 146 1 377 1 378 1 
355 1 40 1 244 1 233 1 339 1 69 1 169 1 72 1 119 1 268 1 109 1 91 1 146 1 75 1 
215 1 337 1 40 1 101 1 233 1 42 1 17 1 33 1 69 1 20 2 119 1 106 1 193 1 109 1 91 1 146 1 228 1 377 1 
99 1 
130 1 162 1 281 1 366 1 256 1 260 1 273 1 
98 1 260 1 361 1 273 1 130 2 155 1 212 1 301 1 162 1 15 1 191 1 330 1 331 1 227 1 46 1 24 1 95 1 
100 2 1 1 260 8 104 2 339 3 296 2 53 2 109 3 155 4 56 2 212 5 300 1 301 12 162 9 223 2 21 1 169 1 119 3 123 1 170 3 227 4 225 2 24 5 127 2 355 10 233 3 314 1 69 3 273 2 361 6 321 2 130 8 74 3 366 1 239 2 242 2 78 2 184 1 137 6 247 2 370 2 83 1 86 2 191 3 329 2 330 4 331 5 192 2 375 6 252 2 256 1 46 4 146 4 288 1 
104 1 260 5 361 3 273 2 296 1 236 1 318 1 130 5 177 1 155 2 239 2 346 1 209 1 134 1 157 1 212 1 301 6 216 1 162 8 137 5 370 2 191 1 223 2 329 2 331 1 330 2 375 5 353 1 123 1 334 1 227 2 225 2 24 1 46 2 127 2 
198 1 104 1 260 2 178 1 8 1 155 1 239 1 154 1 279 1 58 1 59 1 162 2 371 1 190 1 329 2 62 1 224 1 330 1 331 1 168 1 22 1 124 1 227 1 225 2 46 1 24 1 195 1 229 1 
162 1 260 1 273 1 330 1 130 1 366 1 155 1 227 1 256 1 46 1 
301 10 162 5 137 5 104 1 370 2 260 5 361 5 223 2 329 2 375 5 321 1 130 5 225 2 239 2 127 2 
331 1 130 1 24 1 273 1 191 1 212 1 
162 1 233 1 69 1 296 1 21 1 330 1 169 1 129 1 119 1 87 1 155 1 227 1 46 1 212 1 
355 1 198 3 259 1 233 1 358 1 294 1 339 1 316 1 69 1 154 2 109 1 344 1 180 1 279 3 12 1 299 2 303 1 116 1 307 1 190 2 284 1 373 1 224 1 168 2 169 1 64 1 119 1 266 1 267 1 124 2 170 1 146 1 
301 4 175 1 162 1 137 2 260 2 361 2 273 2 296 1 330 1 375 2 130 4 123 1 155 1 227 1 46 1 
333 1 16 1 278 1 
333 1 254 1 16 1 235 1 351 1 
333 1 16 1 278 1 
333 1 16 1 278 1 
333 1 16 1 25 1 
333 1 16 1 25 1 
333 1 16 1 25 1 
333 1 16 1 
220 1 362 1 
299 4 59 1 80 1 175 1 115 2 164 4 307 8 316 2 373 2 62 1 64 2 267 2 239 1 225 1 255 1 171 3 195 1 376 1 12 4 158 1 
59 1 80 1 175 1 281 1 115 2 164 3 307 6 62 1 225 1 239 1 195 1 171 2 12 3 158 1 
299 2 115 1 370 1 164 2 165 1 307 4 316 1 373 1 223 1 64 1 267 1 239 1 225 1 255 1 171 2 127 1 12 2 
318 1 334 1 164 1 346 1 307 2 12 1 
175 1 316 2 318 2 340 1 239 3 346 2 158 1 12 12 79 1 59 2 299 4 80 1 218 1 369 1 115 5 370 2 164 11 307 23 373 2 223 2 62 1 64 2 267 2 255 4 225 3 195 2 171 9 127 2 376 2 
318 1 307 1 12 1 
164 1 307 1 346 1 
299 2 115 2 370 1 164 3 165 1 307 6 316 1 373 1 223 1 64 1 321 1 267 1 225 1 255 1 239 1 171 3 127 1 12 3 
316 1 236 1 318 1 177 1 239 2 346 1 134 1 12 6 299 2 216 1 368 1 115 1 164 6 370 2 307 12 373 1 223 2 64 1 353 1 267 1 334 1 255 1 225 2 171 2 127 2 
59 1 115 1 164 3 307 6 62 1 225 1 239 1 255 1 195 1 171 2 12 3 
59 1 299 2 80 1 218 1 115 1 164 1 307 3 316 1 373 1 64 1 267 1 255 1 171 2 195 1 376 1 12 2 158 1 
299 2 59 2 368 1 115 3 164 5 307 10 316 1 373 1 62 1 64 1 267 1 178 1 255 2 225 2 239 2 195 2 171 5 12 5 
299 2 368 1 164 2 307 2 316 1 373 1 223 1 64 1 267 1 225 1 255 1 171 1 
299 2 368 1 115 1 370 1 164 2 307 4 316 1 373 1 223 1 64 1 267 1 239 1 225 1 255 1 171 2 127 1 12 2 
299 6 59 1 231 1 368 1 218 1 115 1 164 1 307 3 316 3 373 3 64 3 267 3 255 1 195 1 171 2 376 1 12 2 
231 1 175 1 316 5 318 3 341 1 239 3 346 3 158 1 12 14 59 3 299 10 80 1 136 1 368 1 218 1 115 4 164 15 370 2 165 1 307 29 85 1 373 5 223 2 62 2 64 5 267 5 334 1 225 4 255 4 195 3 171 8 127 1 376 2 
175 1 316 1 318 1 239 1 346 1 134 1 12 4 158 1 299 2 59 1 80 1 368 1 115 2 164 4 307 8 373 1 62 1 64 1 267 1 334 1 225 1 195 1 171 2 
299 4 216 1 368 1 115 1 370 2 164 6 165 1 307 10 316 2 373 2 223 2 236 1 318 1 64 2 353 1 177 1 267 2 334 1 239 1 225 2 171 1 346 1 127 1 134 1 12 4 
175 1 316 3 236 1 318 1 177 1 239 3 346 1 134 1 158 1 12 10 59 1 299 6 80 1 216 1 368 1 115 3 164 9 370 2 165 1 307 19 373 3 223 2 62 1 64 3 353 1 267 3 334 1 255 1 225 3 195 1 171 4 127 2 376 1 
299 2 216 1 368 1 115 1 370 2 164 6 307 10 316 1 373 1 223 2 236 1 318 1 64 1 353 1 177 1 267 1 334 1 239 1 225 2 171 1 346 1 127 1 134 1 12 4 
175 1 316 1 318 1 239 1 346 1 134 1 12 4 158 1 299 2 59 1 80 1 368 1 115 2 164 4 307 8 373 1 62 1 64 1 267 1 334 1 225 1 195 1 171 2 
316 1 236 1 318 1 177 1 239 2 346 1 134 1 12 6 299 2 216 1 368 1 115 1 164 6 370 2 307 12 373 1 223 2 64 1 353 1 267 1 334 1 255 1 225 2 171 2 127 2 
299 6 216 1 368 1 115 1 370 2 164 6 165 1 307 11 316 3 373 3 223 2 236 1 318 1 64 3 353 1 177 1 267 3 334 1 239 1 225 2 171 1 346 1 127 1 376 1 134 1 12 5 
231 1 316 4 236 1 318 1 177 1 239 2 346 1 134 1 12 7 299 8 216 1 368 1 115 3 164 9 370 3 307 16 373 4 223 3 64 4 353 1 267 4 334 1 255 3 225 3 171 6 127 2 376 2 
59 3 80 2 115 3 164 3 307 7 62 1 239 1 255 3 225 1 195 3 171 6 12 4 158 1 
299 6 231 1 216 1 368 1 115 1 370 2 164 6 307 11 316 3 373 3 223 2 236 1 318 1 64 3 353 1 177 1 267 3 334 1 239 1 225 2 171 1 346 1 127 1 376 1 134 1 12 5 
352 1 198 1 124 1 344 1 279 1 147 1 248 1 
352 1 269 1 198 1 217 1 243 1 124 1 344 1 315 1 324 1 279 1 147 1 248 1 
355 1 169 1 119 1 244 1 268 1 281 1 233 1 109 1 146 1 339 1 69 1 
355 1 198 2 233 1 339 1 69 1 284 1 317 1 168 1 169 1 119 1 124 1 170 1 154 1 109 1 344 1 180 1 146 1 279 2 
355 3 198 2 233 1 30 1 371 1 339 2 83 1 86 1 69 1 284 1 317 1 168 2 119 1 253 1 124 2 170 2 154 1 109 1 344 1 180 1 146 1 279 2 242 1 
355 3 198 2 233 2 30 1 339 2 69 2 317 1 109 1 154 1 344 1 180 1 279 2 242 1 264 1 83 1 371 1 86 1 168 2 119 2 253 1 124 2 170 2 146 1 126 1 
355 4 264 1 233 3 112 1 247 1 339 1 83 1 86 1 69 3 273 1 331 2 169 1 119 3 130 1 142 1 74 1 170 1 109 1 56 1 24 2 146 1 242 1 212 1 
355 4 264 1 233 3 247 1 339 1 83 1 86 1 69 3 273 1 331 2 169 1 53 1 119 3 130 1 74 1 170 1 109 1 56 1 24 2 146 1 242 1 212 1 
119 1 233 1 109 1 52 1 146 1 69 1 
38 1 355 3 184 1 300 1 101 1 233 7 359 1 52 1 339 2 69 6 169 2 332 1 119 7 276 1 170 1 109 2 144 1 208 1 146 3 230 1 348 1 
355 1 198 2 259 1 175 1 233 1 358 1 51 1 339 1 316 2 69 1 317 1 363 1 342 1 239 1 109 1 154 1 344 2 180 1 279 2 12 3 158 1 59 1 299 4 184 1 80 1 302 1 115 2 164 3 116 2 307 6 138 1 284 1 373 2 62 1 249 1 168 1 64 2 119 1 266 2 267 2 124 1 170 1 225 1 171 2 195 1 146 1 258 1 
355 2 100 1 233 1 260 1 69 1 273 1 53 1 130 1 74 1 366 1 155 2 56 1 78 1 212 2 14 1 162 1 247 1 191 1 330 2 21 1 331 3 169 1 119 1 252 1 256 1 227 2 46 2 24 3 
355 2 184 1 300 1 233 2 247 1 52 1 339 1 69 2 119 2 170 1 109 1 288 1 146 2 
355 1 184 1 264 1 161 1 244 1 233 4 339 1 69 4 169 1 119 4 268 1 109 1 146 1 
355 1 160 1 233 2 83 1 339 1 69 2 166 1 119 2 9 1 170 1 109 1 144 1 146 2 230 1 
169 1 119 1 337 1 233 1 109 1 146 1 228 1 69 1 377 1 20 1 
355 1 184 1 101 1 233 2 359 1 339 1 69 2 119 2 6 1 109 1 146 1 
355 3 38 1 184 1 161 1 244 1 233 5 359 1 83 1 339 2 69 4 169 1 119 5 268 1 109 2 146 2 348 1 
355 3 38 1 184 1 161 1 244 1 233 5 359 1 83 1 339 2 69 4 169 1 119 5 268 1 109 2 146 2 93 1 
355 1 198 2 233 1 339 1 69 1 317 1 168 1 169 1 119 1 124 1 170 1 154 1 109 1 344 1 180 1 146 1 279 2 126 1 
355 1 300 1 233 1 83 1 339 1 69 1 119 1 170 1 109 1 144 1 208 1 146 2 230 1 
97 1 270 1 262 1 251 1 344 1 
97 1 39 1 270 2 367 1 14 1 30 1 371 1 273 1 331 2 262 2 130 1 253 1 251 2 344 1 56 1 24 2 57 1 110 1 196 1 
97 1 270 1 198 1 262 1 124 1 131 1 181 1 279 1 96 1 
97 1 39 1 110 1 
121 1 281 1 295 1 35 1 
60 1 140 1 304 1 121 1 205 1 295 1 35 1 
140 1 113 1 372 1 
203 2 60 3 274 1 140 3 304 1 121 1 28 1 205 1 326 1 84 1 295 1 35 1 
148 1 60 2 140 2 304 1 121 1 205 1 194 1 295 1 35 1 
60 1 304 1 282 1 326 1 20 1 35 1 140 1 193 1 205 1 156 1 377 1 
60 1 140 1 304 1 121 1 205 1 326 1 35 1 
60 1 140 1 304 1 121 2 205 1 326 1 295 1 
60 2 0 1 140 2 304 2 121 1 29 1 55 1 205 2 326 1 35 1 
148 2 60 3 304 1 282 1 326 1 295 1 328 1 35 2 237 1 140 3 121 1 297 1 205 1 
111 1 148 1 60 2 337 1 304 1 326 1 295 1 33 1 20 2 35 1 140 2 121 1 193 1 205 1 377 1 
148 2 60 4 304 2 282 1 326 1 295 1 35 2 140 4 121 1 297 1 205 2 343 1 194 1 
60 1 140 1 304 1 121 1 205 1 326 1 295 1 35 1 
148 2 60 4 304 1 28 1 282 1 295 2 35 3 203 1 274 1 140 4 121 2 120 1 297 1 205 1 
148 1 60 2 304 1 326 1 295 1 19 1 35 1 374 1 140 2 121 1 205 1 37 1 
203 2 60 3 274 2 280 1 140 3 304 1 121 1 28 1 205 1 326 1 295 1 35 1 
150 1 187 1 35 2 77 2 
60 1 140 1 304 1 205 1 326 1 182 1 
148 1 237 1 60 2 140 2 304 1 121 1 205 1 326 1 295 1 35 1 
32 1 
60 1 140 1 304 1 121 1 205 1 326 1 295 1 35 1 
148 1 60 3 304 1 326 1 295 1 35 1 203 1 237 1 140 3 121 1 205 1 
120 1 297 1 282 1 35 1 
121 1 35 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 57 341 111 42 (24,299) (24,299) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 57 341 111 42 (24,299) (24,299) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 57 341 111 42 (24,299) (24,299) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 57 341 111 42 (24,299) (24,299) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 57 341 111 42 278 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 57 341 111 42 278 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.RuntimeException 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException 57 341 111 42 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 8735 | || -> &&
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4623 | == -> !=
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1506 | if (x) -> if (!x)
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String; | RETURN | 1613 | return null
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2522 | stmt -> ;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | STATEMENT | 3650 | stmt -> ;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money; | RETURN | 5040 | return null
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> %
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
188 1 111 1 57 2 6 3 341 1 320 2 332 1 208 1 218 1 281 1 306 3 347 2 362 1 
111 2 224 1 57 2 5 1 131 1 341 2 6 4 24 1 320 2 332 1 305 1 208 2 218 1 94 1 281 1 307 1 306 4 347 2 299 1 324 1 353 1 42 1 
111 2 224 1 57 2 5 1 131 1 341 2 6 4 24 1 320 2 332 1 305 1 208 2 218 1 94 1 281 1 307 1 306 4 347 2 299 1 324 1 353 1 42 1 
111 2 224 1 57 2 5 1 131 1 341 2 6 4 24 1 320 2 332 1 305 1 208 2 218 1 94 1 281 1 307 1 306 4 347 2 299 1 324 1 353 1 42 1 
111 2 224 1 57 2 5 1 131 1 341 2 6 4 24 1 320 2 332 1 305 1 208 2 218 1 94 1 281 1 307 1 306 4 347 2 299 1 324 1 353 1 42 1 
188 1 111 1 57 3 5 1 131 1 6 4 341 2 320 1 332 3 305 1 218 1 233 1 291 1 306 4 347 1 379 2 362 1 363 1 
188 1 57 1 192 1 5 1 131 1 6 2 320 1 344 1 208 1 218 1 94 1 307 1 306 2 347 1 136 1 362 1 
111 2 57 2 6 4 341 2 320 2 278 1 332 2 208 1 218 1 281 1 306 4 347 2 324 1 42 1 70 1 
111 2 57 2 6 4 341 2 320 2 278 1 332 2 208 1 218 1 281 1 306 4 347 2 324 1 42 1 70 1 
112 1 266 1 191 1 126 1 269 1 22 1 9 1 84 1 377 1 273 1 371 1 293 1 95 1 103 1 
242 1 
9 2 239 1 151 1 181 1 191 2 293 1 242 1 75 1 
239 2 46 1 364 1 155 1 191 5 329 1 242 1 113 1 75 1 247 1 183 1 9 5 260 2 148 1 151 1 14 1 346 2 293 2 124 2 
151 1 242 1 369 1 
242 1 372 1 257 2 
112 2 84 2 377 2 126 2 371 1 197 1 103 2 22 2 
110 1 112 3 241 1 4 1 170 1 277 1 193 1 248 2 297 1 11 1 13 1 371 1 67 1 197 1 348 1 249 1 152 2 325 1 39 1 354 1 177 1 72 2 45 1 253 1 126 3 226 1 99 1 22 2 270 2 133 2 82 1 84 2 377 2 162 1 103 2 105 1 310 1 
112 1 84 1 377 1 266 1 126 1 371 1 273 1 103 1 269 1 22 1 
112 1 225 1 126 1 266 1 191 1 328 1 242 1 340 1 23 1 9 1 151 1 84 1 235 1 352 1 
112 1 225 1 191 2 126 1 266 1 328 1 242 1 22 1 9 2 151 1 84 1 377 1 103 1 235 1 352 1 
9 1 239 1 191 1 90 1 293 1 
9 2 239 1 151 1 191 2 293 1 242 1 75 1 261 1 
9 1 239 1 191 1 
112 2 126 2 22 1 84 2 377 1 283 1 103 1 197 2 185 1 
182 1 32 1 246 1 
110 1 112 1 126 1 99 1 170 1 270 1 133 1 82 1 13 1 162 1 67 1 197 1 334 1 325 1 39 1 72 1 
110 1 112 2 32 1 126 2 99 1 170 1 270 1 118 1 82 1 133 1 84 1 13 1 377 1 162 1 67 1 103 1 39 1 325 1 176 1 72 1 
197 1 369 1 
112 5 126 5 255 1 22 1 23 1 118 2 84 5 377 4 103 4 283 1 197 1 323 1 38 1 176 1 
125 1 112 2 84 2 377 2 266 1 126 2 103 2 269 1 
118 1 112 3 84 3 377 3 126 3 197 1 103 3 22 1 
112 1 84 1 377 1 266 1 126 1 103 1 269 1 
112 1 84 1 377 1 266 1 126 1 103 1 283 1 22 1 185 1 
110 1 112 4 365 1 191 1 241 1 4 1 170 1 193 1 9 1 248 2 118 1 297 1 13 1 371 1 67 1 197 1 283 1 249 1 152 1 39 1 325 1 176 1 352 1 177 1 355 1 72 1 45 1 225 1 253 1 126 4 266 1 99 1 328 1 226 1 22 2 270 1 82 1 133 1 84 3 377 3 162 1 103 3 235 1 105 1 
118 1 112 2 84 2 377 1 126 2 197 1 103 1 255 1 23 1 
112 3 225 1 191 1 266 1 126 3 365 1 328 1 242 1 22 1 9 1 118 2 84 3 377 3 283 1 103 3 235 1 165 1 176 1 352 1 
112 2 126 2 32 1 246 1 22 1 118 1 84 2 377 2 283 1 103 2 
110 1 112 1 126 1 99 1 170 1 270 1 133 1 82 1 13 1 162 1 67 1 197 1 325 1 39 1 72 1 
110 1 112 1 126 1 170 1 270 1 318 1 133 1 13 1 162 1 378 1 67 1 197 1 325 1 39 1 72 1 
32 2 241 1 4 2 317 1 246 2 248 2 62 1 221 1 68 1 249 1 152 4 354 2 97 1 177 1 356 1 45 1 182 2 253 1 156 1 268 1 271 1 331 1 290 1 105 1 
125 1 112 1 84 1 377 1 266 1 126 1 235 1 103 1 
187 1 86 1 78 1 
187 2 121 1 54 1 86 2 71 1 199 1 
187 1 86 1 
187 1 86 1 
121 1 199 1 
121 1 199 1 
121 1 199 1 
187 1 86 1 7 1 
187 1 86 1 7 1 
187 1 86 1 7 1 
187 1 376 1 86 1 
187 1 376 1 86 1 
187 1 376 1 86 1 
187 1 141 1 112 2 191 1 114 1 146 1 116 1 171 1 9 1 345 1 197 1 153 1 74 1 252 1 126 2 201 1 49 1 78 1 83 1 84 2 377 2 103 2 164 1 86 1 
179 1 187 2 252 2 191 2 2 1 242 1 339 1 50 1 114 2 116 2 171 3 9 2 83 2 195 1 164 1 96 1 86 2 198 2 71 1 
305 1 282 1 136 1 85 2 131 2 
305 1 5 1 131 1 
136 1 5 1 131 1 
305 2 215 1 282 1 136 1 85 1 131 3 
305 1 167 1 282 1 136 1 85 1 131 2 
239 1 141 1 314 1 191 5 216 1 242 2 317 1 9 5 345 1 151 1 221 1 174 1 346 1 372 1 124 1 19 2 288 1 46 2 156 1 155 1 201 1 329 3 75 1 128 1 257 3 331 1 260 1 230 2 234 1 293 4 107 1 381 2 
0 1 239 6 190 1 314 3 191 9 33 1 90 5 242 5 317 3 9 9 150 1 151 1 14 1 221 3 174 2 346 2 372 3 124 2 19 6 288 2 46 6 327 5 156 3 201 4 155 1 329 8 75 1 127 1 257 9 331 3 260 2 293 7 137 1 107 1 381 6 
314 1 191 3 242 3 216 1 317 1 9 3 151 1 221 1 14 1 174 1 346 1 372 2 124 1 288 1 19 2 46 2 201 1 156 1 329 3 257 4 331 1 260 1 230 1 234 1 293 2 381 2 
0 1 314 2 191 4 242 4 216 1 317 2 9 4 151 1 150 1 221 2 14 1 174 1 346 1 372 3 124 1 19 4 288 1 46 4 201 2 156 2 329 5 127 1 257 7 331 2 260 1 230 2 234 1 293 3 381 4 
229 1 
67 1 369 1 18 1 
63 1 67 1 
110 1 67 1 170 1 
67 1 144 1 
110 1 67 1 
110 1 172 1 67 3 170 1 311 1 18 2 
154 1 87 1 313 1 58 1 100 1 4 3 317 1 92 1 149 1 221 1 163 1 68 2 212 1 211 2 152 7 97 3 373 1 354 4 
87 1 313 1 314 3 241 1 58 5 245 1 4 18 34 1 92 2 317 6 60 1 248 2 221 6 68 8 249 1 350 4 69 3 152 37 373 1 354 19 97 17 17 1 154 9 253 1 267 1 156 3 100 2 303 1 331 3 163 5 274 1 105 1 212 2 211 2 53 1 
313 1 241 2 58 1 4 4 317 1 92 1 147 1 248 4 280 1 221 1 68 3 249 2 152 9 354 5 97 4 373 1 154 1 253 2 100 1 274 1 163 1 105 2 211 2 212 1 
154 1 87 1 313 1 58 1 100 1 4 3 317 1 92 1 221 1 163 1 68 2 212 1 211 2 152 7 97 3 354 4 373 1 
154 1 87 1 313 1 58 1 100 1 4 3 317 1 92 1 221 1 163 1 68 2 212 1 211 2 152 7 97 3 354 4 373 1 
110 1 227 1 217 2 270 1 6 1 320 1 208 2 133 1 232 1 13 1 162 1 292 2 67 1 306 1 347 1 333 1 104 1 349 1 15 2 325 1 123 1 237 1 72 1 
215 1 217 1 5 1 6 1 320 1 218 1 13 1 37 1 196 1 347 1 15 1 325 1 72 1 289 1 21 1 270 1 131 2 330 1 305 1 133 1 208 1 292 1 306 1 136 1 166 1 108 1 
188 1 215 1 57 1 217 1 5 1 6 2 320 1 218 1 13 1 37 1 196 1 347 1 15 1 325 1 72 1 289 1 21 1 270 1 131 2 330 1 80 1 332 1 305 1 133 1 208 1 292 1 306 2 136 1 108 1 362 1 
188 1 215 1 57 1 217 1 5 1 6 3 320 1 13 1 196 1 347 1 15 1 325 1 72 1 289 1 21 1 270 1 131 2 330 1 332 2 305 1 133 1 208 1 360 1 292 1 306 3 136 1 104 1 166 1 108 1 362 1 
188 1 215 1 57 1 217 1 5 1 6 2 13 1 196 1 15 1 325 1 72 1 21 1 270 1 131 2 332 2 305 1 208 1 133 1 360 1 292 1 306 2 136 1 166 1 108 1 362 1 
370 1 
337 1 110 1 1 1 9 4 10 2 13 1 65 1 346 1 67 1 16 2 124 1 72 2 357 1 75 3 227 1 301 1 270 2 130 1 25 2 27 1 133 2 232 1 239 6 191 4 315 1 142 2 240 2 242 1 321 1 325 1 372 2 40 1 288 1 46 2 155 1 329 2 157 2 257 2 204 1 203 1 260 1 102 2 162 2 209 2 
9 2 239 2 357 1 181 1 240 1 191 2 75 1 301 1 203 1 204 1 40 1 
102 1 9 1 357 1 191 1 301 1 16 1 203 1 204 1 40 1 
239 2 357 1 181 1 191 2 240 1 75 1 301 1 204 1 203 1 9 2 10 1 102 1 16 1 40 1 
337 1 112 1 9 4 10 4 298 1 346 1 16 3 124 1 357 1 181 1 266 1 126 1 75 3 301 1 269 1 130 1 22 1 25 2 28 1 84 1 273 1 239 7 240 4 191 4 142 2 242 2 151 2 371 1 95 1 372 2 40 1 326 1 46 1 155 1 202 1 329 1 157 2 204 1 203 1 260 1 102 3 377 1 209 2 103 1 109 1 
337 1 239 4 240 2 191 3 142 2 242 2 10 2 9 3 151 1 346 1 16 2 124 1 372 2 40 1 46 1 357 1 155 1 329 1 75 2 157 2 301 1 130 1 257 2 203 1 204 1 25 2 27 1 102 2 260 1 209 2 
337 1 239 4 240 2 191 3 142 2 242 1 10 2 9 3 151 1 298 1 346 1 16 2 372 2 124 1 40 1 326 1 46 1 357 1 155 1 329 1 75 2 157 2 301 1 130 1 203 1 204 1 25 2 102 2 260 1 28 1 209 2 
337 1 239 4 240 2 191 3 142 2 242 1 10 2 9 3 151 1 298 1 346 1 16 2 372 2 124 1 40 1 326 1 46 1 357 1 155 1 329 1 75 2 157 2 301 1 130 1 203 1 204 1 25 2 102 2 260 1 28 1 209 2 
337 1 239 4 240 2 191 3 142 2 242 1 145 1 59 2 10 2 9 3 151 1 219 1 298 1 346 1 300 1 16 2 124 1 40 1 46 1 357 1 155 1 329 1 75 2 301 1 257 2 203 1 204 1 102 2 260 1 160 2 209 2 
337 1 239 5 142 2 240 3 191 3 242 1 10 3 9 3 151 1 298 1 346 1 16 3 372 2 124 1 40 1 326 1 46 1 357 1 155 1 329 1 75 2 157 2 301 1 130 1 203 1 204 1 25 2 102 3 260 1 28 1 209 2 109 1 
337 1 239 5 142 2 240 3 191 3 242 1 10 3 9 3 151 1 298 1 346 1 16 3 372 2 124 1 40 1 326 1 46 1 357 1 155 1 329 1 75 2 157 2 301 1 130 1 203 1 204 1 25 2 102 3 260 1 28 1 209 2 109 1 
337 1 239 4 240 2 191 3 142 2 242 1 59 2 10 2 9 3 151 1 219 1 346 1 16 2 124 1 40 1 46 1 357 1 155 1 329 1 75 2 301 1 257 2 203 1 204 1 27 1 102 2 260 1 160 2 209 2 
276 1 110 2 112 1 241 2 4 1 277 2 343 1 193 1 118 1 248 4 11 1 13 2 67 3 249 2 325 2 152 2 354 1 177 2 72 7 286 1 45 2 126 1 253 2 20 1 227 1 270 8 77 1 271 1 80 1 26 1 133 8 84 1 232 1 361 1 377 1 162 2 103 1 105 2 166 1 
112 1 314 1 32 1 241 1 4 2 246 1 317 1 248 2 221 1 68 1 283 1 249 1 122 1 152 3 97 1 354 1 177 1 45 1 182 1 253 1 126 1 156 1 22 1 331 1 84 1 377 1 275 1 103 1 105 1 
313 1 32 1 241 1 58 1 4 3 246 1 317 1 369 1 248 2 221 1 68 2 197 2 249 1 152 6 373 1 97 2 354 3 177 1 45 1 182 1 253 1 271 1 163 1 105 1 212 1 211 1 
314 2 32 11 241 2 4 6 317 2 246 4 60 1 193 1 248 4 11 1 221 1 66 1 197 1 68 1 249 2 350 3 285 1 152 14 69 3 97 2 354 8 177 2 154 1 45 1 182 11 253 2 267 1 156 2 331 1 29 1 275 1 105 2 138 1 
110 1 112 2 241 1 170 1 4 1 246 1 193 1 118 1 248 2 11 1 13 1 67 1 175 1 197 1 249 1 39 1 325 1 152 2 176 1 354 1 177 1 72 1 45 1 253 1 126 2 99 1 256 1 270 1 82 1 133 1 84 1 377 1 162 1 275 1 103 1 105 1 334 1 139 1 
110 2 112 3 58 1 4 7 170 2 118 1 297 2 11 1 13 2 221 2 67 2 68 3 176 1 354 7 177 3 72 1 182 4 126 3 270 1 133 1 82 2 84 1 275 1 313 1 314 1 32 4 241 3 244 1 246 4 317 2 193 1 248 6 197 2 249 3 152 14 325 2 39 2 373 1 97 3 45 3 48 1 253 3 47 2 374 1 156 1 99 2 205 1 331 1 377 1 162 1 163 1 103 1 105 3 211 1 212 1 213 2 
154 1 356 1 45 1 182 1 32 1 253 1 156 1 241 1 246 1 317 1 271 1 248 2 105 1 249 1 152 2 97 1 354 2 177 1 
45 1 182 1 32 1 253 1 241 1 268 1 4 2 246 1 271 1 331 1 248 2 221 1 68 1 105 1 249 1 152 2 97 1 177 1 
314 1 32 2 241 1 4 2 317 1 246 2 248 2 221 1 68 1 249 1 152 4 354 2 97 2 177 1 154 1 45 1 182 2 156 1 253 1 271 1 331 1 105 1 
154 1 356 1 45 1 182 1 32 1 253 1 156 1 241 1 246 1 317 1 26 1 248 2 105 1 249 1 152 2 97 1 354 2 177 1 
45 1 182 1 32 1 253 1 241 1 268 1 4 2 246 1 26 1 331 1 248 2 221 1 68 1 105 1 249 1 152 2 97 1 177 1 
314 1 32 2 241 1 4 2 317 1 246 2 248 2 221 1 68 1 249 1 152 4 354 2 97 2 177 1 154 1 45 1 182 2 156 1 253 1 26 1 331 1 105 1 
314 1 32 2 241 1 4 2 317 1 246 2 248 2 221 1 68 1 249 1 152 4 354 2 97 2 177 1 154 1 45 1 182 2 156 1 253 1 331 1 105 1 
110 1 112 1 241 1 170 1 4 1 193 1 248 2 297 1 11 1 13 1 67 1 197 1 249 1 152 2 39 1 325 1 354 1 177 1 72 1 45 1 126 1 253 1 99 1 270 1 82 1 133 1 162 1 105 1 
110 1 112 1 241 1 170 1 4 1 318 1 193 1 248 2 11 1 13 1 67 1 197 1 249 1 152 2 39 1 325 1 354 1 250 1 177 1 72 1 45 1 126 1 253 1 270 1 133 1 162 1 378 1 105 1 
314 1 32 2 241 1 4 2 317 1 246 2 248 2 221 1 68 1 249 1 152 4 354 2 97 2 177 1 154 1 45 1 182 2 156 1 253 1 331 1 275 1 105 1 
110 1 112 1 314 1 32 2 241 1 4 2 170 1 246 2 317 1 248 2 297 1 221 1 13 1 67 1 68 1 249 1 152 4 39 1 325 1 97 2 354 2 177 1 72 1 154 1 45 1 182 2 156 1 47 1 126 1 253 1 99 1 270 1 331 1 80 1 82 1 133 1 105 1 
112 1 314 1 32 1 241 1 4 1 317 1 246 1 248 2 221 1 283 1 120 1 249 1 152 3 97 1 354 2 177 1 154 1 45 1 182 1 253 1 126 1 156 1 22 1 331 1 84 1 377 1 275 1 103 1 105 1 
314 3 241 2 4 10 317 3 60 1 8 1 279 1 147 1 248 4 61 2 221 3 68 3 249 2 350 2 152 19 69 1 354 9 97 6 154 3 253 2 267 1 156 3 258 1 272 1 331 3 51 2 308 1 236 1 105 2 55 1 
88 1 314 3 241 3 243 1 4 12 317 3 60 2 147 1 248 6 61 1 221 2 68 2 249 3 350 2 152 26 69 2 97 4 354 14 73 1 154 2 253 3 156 3 302 1 258 1 272 1 206 1 331 2 184 1 274 2 51 4 308 1 236 2 105 3 55 2 
88 1 313 1 314 4 241 3 58 1 243 1 4 21 317 5 60 3 279 1 147 1 248 6 61 1 221 5 68 4 249 3 350 4 152 41 69 3 373 1 354 20 97 8 178 1 73 1 154 4 253 3 267 1 156 4 302 1 206 1 258 1 272 1 331 4 184 1 163 1 274 1 51 4 308 1 236 1 105 3 211 1 212 1 55 2 
88 1 313 1 314 4 241 4 58 1 243 1 4 18 317 5 60 3 279 1 147 1 248 8 61 1 221 4 68 4 249 4 350 4 152 38 69 3 373 1 354 20 97 7 178 1 73 1 154 3 253 4 267 1 156 4 302 1 206 1 258 1 272 1 331 3 184 1 163 1 274 2 51 4 308 1 236 1 105 4 211 1 212 1 55 2 
88 1 313 1 314 7 241 2 58 1 243 1 4 25 317 8 60 2 147 1 248 4 61 1 221 8 66 2 68 7 249 2 350 4 152 52 69 4 373 1 354 27 97 14 73 1 154 7 253 2 267 2 156 7 302 1 206 1 258 1 272 1 331 7 184 1 163 1 274 1 51 4 308 1 236 1 105 2 211 1 212 1 55 1 
187 1 83 1 195 1 252 1 2 1 114 1 86 1 116 1 71 1 238 1 
74 1 78 1 
187 1 189 1 161 1 83 1 252 1 114 1 86 1 116 1 35 1 
312 1 7 1 
54 1 376 1 222 1 
187 1 191 1 252 1 2 1 242 1 339 1 50 1 114 1 116 1 171 2 9 1 83 1 195 1 164 1 96 1 86 1 198 1 71 1 
187 1 191 1 252 1 2 1 242 1 339 1 50 1 114 1 116 1 171 2 9 1 83 1 195 1 164 1 96 1 86 1 198 1 71 1 
187 1 191 1 252 1 2 1 242 1 339 1 50 1 114 1 116 1 171 2 9 1 83 1 195 1 164 1 96 1 86 1 198 1 71 1 
312 1 54 1 7 1 
312 1 54 1 7 1 
376 1 222 1 
54 1 376 1 222 1 
49 1 153 1 
187 1 141 1 112 2 191 1 114 1 146 1 116 1 171 1 9 1 345 1 197 1 198 1 153 1 74 1 126 2 252 1 201 1 49 1 50 1 78 1 83 1 84 2 377 2 293 1 103 2 335 1 86 1 
110 1 140 1 112 2 241 1 4 1 277 2 295 1 193 1 119 1 194 1 248 2 11 1 13 1 67 1 249 1 325 1 152 2 354 1 177 1 72 2 286 1 45 1 126 2 253 1 270 2 77 1 133 2 84 2 275 1 105 1 186 1 
110 1 227 1 270 1 91 1 117 1 133 1 232 1 13 1 162 1 67 1 15 1 325 1 237 1 72 1 
215 1 5 1 21 1 131 2 270 1 91 1 319 1 330 1 305 1 133 1 220 1 13 1 136 1 15 1 166 1 325 1 108 1 72 1 
215 1 5 1 21 1 131 2 270 2 91 1 319 1 330 1 80 1 305 1 133 2 220 1 13 1 136 1 15 1 325 1 166 1 108 1 72 2 
215 1 5 1 21 1 131 2 270 1 319 1 330 1 207 1 305 1 133 1 13 1 136 1 15 1 166 1 325 1 108 1 72 1 
36 1 
364 1 46 1 155 1 329 1 113 1 242 1 260 1 151 1 346 1 124 1 
43 1 19 5 314 2 46 5 156 2 329 5 242 5 244 1 317 2 257 10 331 2 134 2 221 2 372 5 381 5 
9 1 239 1 151 1 191 1 242 1 75 1 
239 4 110 1 89 1 315 1 191 3 368 1 321 1 9 3 14 1 13 1 346 2 65 2 67 1 325 1 124 2 72 4 288 2 46 2 155 1 329 2 75 2 227 1 270 4 159 1 359 2 260 2 133 4 232 1 162 2 
151 1 46 1 364 1 329 1 242 1 113 1 369 1 
239 1 46 1 191 1 155 1 329 1 75 1 157 1 242 2 130 1 257 1 25 1 9 1 260 1 151 1 346 1 124 1 372 1 
110 1 113 1 168 2 170 1 9 5 172 1 63 3 13 2 221 2 65 1 346 4 67 6 124 4 72 2 18 2 19 6 223 2 75 3 270 2 80 1 133 2 134 2 309 2 239 5 364 1 314 2 191 5 316 2 242 8 143 1 244 2 317 2 151 2 325 1 372 6 43 2 288 2 98 2 46 8 155 4 156 2 254 1 329 9 328 2 257 12 159 1 331 2 260 4 162 1 106 1 381 6 
88 1 239 1 314 2 191 1 242 5 243 1 317 2 60 1 9 1 151 2 221 2 65 1 346 2 350 1 351 1 124 2 372 3 69 1 43 1 288 1 19 5 46 5 155 2 156 2 329 8 75 1 302 1 257 6 206 1 331 2 260 2 134 2 184 1 52 1 381 5 
112 1 191 1 58 1 245 1 317 2 9 1 221 1 346 1 371 1 95 1 124 1 43 1 326 1 46 2 266 1 126 1 155 1 329 2 269 1 22 1 260 1 134 2 84 1 377 1 273 1 163 1 103 1 212 1 
110 1 112 3 241 1 4 1 170 1 193 1 248 2 297 1 13 1 371 1 67 1 197 1 249 1 152 1 325 1 39 1 177 1 72 1 45 1 253 1 126 3 226 1 99 1 270 1 22 2 133 1 82 1 84 2 377 2 162 1 103 2 105 1 
19 2 288 1 46 2 155 1 329 1 242 4 257 4 260 1 151 2 346 1 65 1 211 1 372 2 124 1 381 2 
49 1 252 1 2 1 210 1 116 1 
251 1 252 1 116 1 
251 1 252 1 116 1 
251 1 252 1 116 1 
304 1 252 1 116 1 
304 1 252 1 116 1 
304 1 252 1 116 1 
252 1 116 1 
187 1 86 1 
154 2 253 1 241 1 58 2 245 1 4 5 317 2 147 1 248 2 221 2 163 2 68 3 105 1 249 1 212 1 152 10 97 5 354 5 
154 1 253 1 156 1 241 1 317 1 147 1 248 2 105 1 249 1 152 2 354 2 97 1 
154 1 314 1 253 1 156 1 241 1 4 2 317 1 331 1 147 1 248 2 221 1 68 1 105 1 249 1 152 4 97 2 354 2 
154 1 253 3 241 3 58 1 4 2 279 1 147 1 248 6 274 1 163 1 68 1 105 3 249 3 152 3 97 2 354 1 41 1 
313 1 314 3 338 1 241 4 58 2 4 14 34 1 317 4 60 1 279 1 147 1 248 8 221 4 68 5 249 4 350 4 152 27 69 3 373 1 354 13 97 10 17 1 154 5 253 4 267 1 156 3 331 3 163 2 274 1 105 4 211 1 212 1 53 1 
154 1 313 1 253 2 241 2 58 1 4 4 317 1 248 4 221 1 274 1 163 1 68 2 105 2 249 2 211 1 212 1 152 8 354 4 97 3 373 1 
313 1 58 1 4 3 317 1 369 1 221 1 163 1 68 2 211 1 212 1 152 6 373 1 97 2 354 3 
154 1 314 1 253 1 156 1 338 1 241 1 4 2 317 1 331 1 248 2 221 1 68 1 105 1 249 1 152 4 97 2 354 2 
154 1 314 1 267 1 156 1 4 4 317 1 60 1 331 1 221 1 68 1 350 2 152 7 69 1 354 3 97 2 
313 1 314 2 241 2 58 2 4 12 317 3 248 4 221 3 66 1 68 5 249 2 350 2 69 2 152 23 373 1 97 9 354 11 41 1 154 4 156 2 267 1 253 2 331 2 29 1 163 2 274 2 105 2 211 1 212 1 
4 1 350 1 152 1 
152 1 69 1 354 1 
154 1 314 1 253 1 156 1 241 1 338 1 244 1 4 3 317 1 331 1 248 2 221 1 68 2 105 1 249 1 152 6 354 3 97 3 
88 1 314 2 241 1 4 6 243 1 317 2 60 1 147 1 248 2 221 2 68 1 249 1 350 1 69 1 152 12 354 6 97 2 154 1 253 1 156 2 302 1 206 1 331 2 184 1 105 1 
154 1 58 1 4 3 317 1 221 1 163 1 68 1 212 1 152 6 354 3 97 2 
154 1 313 1 253 1 241 1 58 1 4 2 248 2 163 1 274 1 68 1 105 1 249 1 152 3 354 1 97 2 373 1 41 1 
313 1 241 1 58 1 4 4 317 1 60 1 147 1 248 2 221 1 68 2 249 1 350 1 69 1 152 8 354 4 373 1 97 2 253 1 206 1 163 1 105 1 211 1 212 1 
313 1 314 1 241 2 338 1 58 1 4 5 317 2 60 1 147 1 248 4 221 1 68 2 249 2 350 2 152 11 69 1 373 1 354 6 97 3 154 1 253 2 267 1 156 1 206 1 163 1 105 2 211 1 212 1 
88 1 313 1 314 2 338 1 241 3 58 1 243 1 4 10 317 3 60 1 147 1 248 6 221 3 68 3 249 3 350 1 69 1 152 19 373 1 354 9 97 4 154 1 253 3 156 2 302 1 206 1 331 2 184 1 163 1 274 1 105 3 211 1 212 1 
88 1 313 1 314 2 338 1 241 3 58 1 4 7 243 1 317 3 60 1 147 1 248 6 221 2 68 3 249 3 350 1 69 1 152 17 373 1 354 10 97 5 154 2 253 3 156 2 302 1 206 1 331 1 184 1 163 1 274 1 105 3 211 1 212 1 
313 1 241 1 58 1 4 4 317 1 60 1 147 1 248 2 221 1 68 2 249 1 350 1 69 1 152 8 354 4 373 1 97 2 253 1 206 1 163 1 105 1 211 1 212 1 
88 1 314 2 241 1 4 6 243 1 317 2 60 1 147 1 248 2 221 2 68 1 249 1 350 1 69 1 152 12 354 6 97 2 154 1 253 1 156 2 302 1 206 1 331 2 184 1 105 1 
88 1 313 1 314 2 338 1 241 4 58 1 243 1 4 8 317 3 60 1 147 1 248 8 221 2 68 3 249 4 350 1 152 18 69 1 373 1 354 10 97 5 154 2 253 4 156 2 302 1 206 1 331 1 184 1 163 1 274 2 105 4 211 1 212 1 
88 1 314 3 241 4 243 1 4 7 317 3 60 1 279 1 147 1 248 8 221 2 68 3 249 4 350 1 152 16 69 1 354 9 97 6 154 3 253 4 156 3 302 1 206 1 331 2 184 1 274 2 105 4 
154 3 313 1 58 3 4 4 317 1 221 1 163 3 68 3 212 1 152 7 373 2 97 6 354 3 
88 1 313 1 314 2 241 4 58 1 243 1 4 8 317 3 60 1 279 1 147 1 248 8 221 2 68 3 249 4 350 1 152 18 69 1 373 1 354 10 97 4 154 1 253 4 156 2 302 1 206 1 331 1 184 1 163 1 274 2 105 4 211 1 212 1 
112 1 84 1 126 1 197 1 255 1 76 1 23 1 
214 1 366 1 169 1 342 1 132 1 
110 1 3 1 227 1 270 4 80 1 133 4 232 1 13 1 162 1 67 1 325 1 380 1 72 4 
44 1 110 1 265 1 115 1 358 1 170 1 270 2 359 1 133 2 13 2 67 1 262 1 325 1 72 2 
133 1 13 1 162 1 136 1 5 1 21 1 131 1 270 1 325 1 72 1 
286 1 119 1 110 1 133 2 13 1 67 1 270 2 325 1 166 1 72 2 80 1 
276 1 286 1 110 2 227 1 270 5 80 1 343 1 359 1 133 5 232 1 13 2 162 1 67 3 325 2 380 1 72 4 
286 1 110 2 227 1 270 5 80 1 343 1 359 1 133 5 232 1 13 2 162 1 322 1 67 3 325 2 380 1 72 4 
110 1 133 1 232 1 13 1 162 1 67 1 227 1 270 1 325 1 369 1 72 1 
110 1 112 2 126 2 170 1 270 1 118 1 133 1 82 1 84 1 13 1 377 1 162 1 67 1 197 1 103 1 39 1 325 1 72 1 
110 2 112 2 170 2 144 1 118 1 13 1 67 3 197 1 325 1 39 1 352 1 72 1 126 2 266 1 375 1 270 1 359 1 82 1 133 1 84 2 377 1 103 2 235 1 
110 2 112 2 3 1 170 2 144 1 118 1 13 1 67 3 197 1 325 1 39 1 352 1 72 2 126 2 266 1 375 1 270 2 359 1 133 2 84 2 377 1 378 1 103 2 235 1 
239 1 110 1 191 2 3 1 242 1 170 1 144 1 9 2 151 1 63 1 13 1 67 4 325 1 18 1 72 3 264 1 328 1 375 1 270 3 228 1 359 1 133 3 162 1 
98 1 239 1 110 1 191 2 328 1 3 1 242 1 375 1 144 1 170 1 270 3 9 2 359 1 133 3 151 1 13 1 63 1 162 1 67 4 325 1 72 3 18 1 
133 1 13 1 20 1 270 1 325 1 72 1 
286 1 276 1 287 1 44 1 110 2 20 1 358 1 277 1 170 1 270 7 343 1 80 1 133 7 172 1 361 1 13 3 162 2 67 3 166 1 325 2 72 6 
110 1 112 2 58 1 170 1 4 3 118 1 297 1 13 1 221 1 67 1 68 2 354 3 177 2 72 1 182 1 126 2 270 1 80 1 82 1 133 1 84 1 275 1 140 1 313 1 32 1 241 2 246 1 317 1 248 4 197 2 249 2 325 1 39 1 152 6 373 1 97 2 45 2 47 1 253 2 99 1 377 1 163 1 103 1 105 2 212 1 211 1 213 1 
239 2 364 1 191 3 316 1 242 1 113 1 168 1 9 3 151 1 63 1 346 2 67 2 124 2 72 1 18 1 98 1 223 1 46 1 155 2 329 1 328 1 75 1 270 1 159 1 260 2 133 1 162 1 293 1 
110 1 20 1 170 1 270 1 229 1 133 1 172 1 13 2 67 2 106 1 325 1 18 1 72 1 
110 1 112 2 126 2 170 1 270 1 118 1 133 1 84 1 13 1 377 1 162 1 67 1 378 1 197 1 103 1 39 1 325 1 72 1 
287 1 44 1 110 1 358 1 170 1 270 1 359 1 133 1 172 1 13 2 67 1 325 1 72 1 
336 1 81 1 197 1 294 1 296 1 
336 2 225 1 266 1 191 2 365 1 328 1 242 1 296 1 158 1 101 1 9 2 81 2 151 1 293 1 197 1 235 1 352 1 294 2 31 1 
336 1 194 1 81 1 112 1 84 1 126 1 295 1 186 1 296 1 
296 1 101 1 31 1 
188 1 218 1 57 1 306 1 347 1 6 1 362 1 320 1 
188 2 111 1 200 1 57 3 6 4 341 1 320 1 332 2 93 1 307 1 306 4 347 1 284 1 362 2 
188 1 57 1 129 1 6 2 320 1 332 1 218 1 12 1 306 2 347 1 70 1 362 1 
188 1 218 1 200 1 57 1 307 2 306 3 347 1 284 2 263 1 6 3 362 1 320 1 
56 2 173 1 57 2 259 1 
218 1 306 1 347 1 367 1 6 1 320 1 
188 1 6 1 320 1 93 1 218 1 306 1 347 1 324 1 362 1 
135 1 
188 1 218 1 57 1 306 1 347 1 6 1 362 1 320 1 
188 1 57 1 369 1 362 1 
188 1 57 1 306 1 347 1 6 1 362 1 320 1 
208 1 306 1 217 1 
188 1 200 1 57 1 79 1 6 3 320 1 218 1 306 3 307 2 347 1 284 1 362 1 
188 1 332 1 57 1 306 2 347 1 379 1 6 2 362 1 320 1 
305 1 218 1 57 1 291 1 306 1 347 1 5 1 131 1 341 1 6 1 320 1 
218 1 57 1 306 1 347 1 6 1 362 1 320 1 
188 1 218 1 306 1 347 1 6 1 362 2 320 1 
180 1 57 1 6 2 320 2 231 1 218 1 306 2 347 2 30 1 362 1 
111 1 218 1 57 1 306 1 347 1 324 1 341 1 6 1 42 1 320 1 
188 1 215 1 57 1 5 1 131 2 6 2 320 1 332 1 305 1 218 1 64 1 306 2 136 1 347 1 362 1 
188 1 111 1 57 2 6 4 341 1 320 2 332 2 218 1 233 1 306 4 347 2 379 1 362 1 
188 1 218 1 57 1 307 1 306 2 347 1 324 1 6 2 362 1 320 1 
93 1 111 1 57 1 341 1 
57 1 362 1 

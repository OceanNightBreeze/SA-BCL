#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 183 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 321 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 183 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 244 73 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String; | RETURN | 2871 | return null
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | RETURN | 563 | return null
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> %
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z | CONDITION | 1270 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration; | RETURN | 1684 | return null
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6040 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4780 | stmt -> ;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
131 1 252 1 156 9 209 2 346 2 2 9 132 1 90 1 347 6 299 2 187 1 118 1 216 1 138 5 70 2 97 1 34 2 261 1 35 4 262 2 243 2 311 1 20 1 247 1 176 3 62 1 177 1 345 1 
131 1 252 1 156 9 209 2 346 2 2 9 132 1 90 1 347 6 299 2 187 1 118 1 216 1 138 5 70 2 97 1 34 2 261 1 35 4 262 2 243 2 311 1 20 1 247 1 176 3 62 1 177 1 345 1 
131 1 252 1 156 10 209 2 346 2 2 10 132 1 90 1 347 7 299 2 187 1 118 1 216 1 138 6 70 2 97 1 34 2 261 1 35 5 262 2 243 2 311 1 20 1 247 1 176 4 62 1 177 1 345 1 
131 1 252 1 156 7 209 2 346 1 2 7 132 1 90 1 347 4 299 2 118 1 216 1 138 4 70 2 97 1 34 2 261 1 35 3 262 2 243 2 311 1 20 1 247 1 176 2 62 1 177 1 345 1 
261 1 35 2 156 4 209 1 346 2 243 1 2 4 347 3 311 1 299 1 20 1 187 1 176 1 138 3 70 1 97 1 345 1 34 1 
261 1 206 1 131 1 156 2 262 1 2 2 243 1 132 1 173 1 299 1 162 1 138 1 70 1 97 1 345 1 34 1 
261 1 35 1 156 3 262 1 2 3 347 1 247 1 176 1 138 2 70 2 97 1 345 1 34 2 
156 9 209 1 346 2 2 9 347 7 299 1 118 1 187 1 216 1 138 5 70 2 97 1 34 2 261 1 35 4 262 1 243 1 122 1 311 1 20 1 247 1 176 3 345 1 226 1 
156 9 209 1 346 2 2 9 347 7 299 1 118 1 187 1 216 1 138 5 70 2 97 1 34 2 261 1 35 4 262 1 243 1 122 1 311 1 20 1 247 1 176 3 345 1 226 1 
205 1 77 1 183 1 
205 1 117 1 249 2 
212 2 197 2 14 2 224 2 47 2 127 1 192 1 6 2 
251 1 47 2 159 1 48 1 5 1 6 3 91 1 212 2 161 2 116 1 114 1 330 1 255 1 232 1 306 1 140 1 54 2 71 1 308 1 141 2 14 3 220 1 58 1 146 1 59 1 192 1 39 1 74 1 197 2 246 1 125 1 354 2 224 2 127 1 267 2 81 1 82 1 
212 1 197 1 14 1 224 1 47 1 64 1 192 1 4 1 6 1 283 1 
205 1 14 1 291 1 64 1 87 1 280 1 6 1 77 1 8 1 277 1 224 1 79 1 12 1 98 1 
205 1 14 1 291 1 47 1 64 1 280 2 6 1 77 1 212 1 8 1 197 1 224 1 79 1 98 2 12 1 
266 1 45 1 280 1 42 1 98 1 
205 1 77 1 45 1 199 1 280 2 42 1 332 1 98 2 
280 1 42 1 98 1 
45 1 14 1 47 1 64 1 280 1 4 1 192 1 6 1 283 1 212 1 197 1 224 1 258 1 98 1 
205 1 
205 1 77 1 45 1 22 1 280 2 42 1 332 1 98 2 
205 2 45 2 47 1 64 1 4 1 6 1 112 1 212 1 229 2 327 2 300 1 51 5 348 1 302 1 32 1 258 1 332 1 98 5 14 1 16 5 278 2 145 1 192 1 280 5 310 1 223 2 283 1 77 2 197 1 198 1 224 1 80 2 42 2 43 1 340 1 107 1 154 1 181 2 
14 5 182 1 47 1 240 1 222 2 6 5 212 4 211 1 197 4 277 1 224 5 230 1 127 1 189 1 
212 2 84 1 197 2 14 2 224 2 64 1 6 2 283 1 
308 1 71 1 251 1 141 1 14 2 220 1 58 1 159 1 222 1 74 1 6 2 212 1 197 1 246 1 230 1 224 1 163 1 232 1 267 1 54 1 
183 1 127 1 
212 1 211 1 197 1 14 2 224 2 47 1 158 1 127 2 6 2 
44 1 163 1 257 1 
71 1 308 1 141 1 251 1 14 1 142 1 220 1 58 1 159 1 6 1 74 1 246 1 232 1 127 1 267 1 54 1 
212 3 197 3 14 3 224 3 47 1 127 1 222 1 6 3 
212 1 197 1 14 1 224 1 64 1 6 1 283 1 
212 1 211 1 197 1 14 1 224 1 47 1 64 1 158 1 6 1 
251 1 291 1 47 2 64 1 159 1 48 1 296 1 5 1 6 4 91 1 211 1 212 3 8 1 161 2 116 1 230 1 255 1 232 1 306 1 140 1 54 1 12 1 98 1 308 1 71 1 170 1 141 1 14 4 220 1 58 1 280 1 192 1 222 1 39 1 74 1 197 3 246 1 125 1 354 1 224 3 79 1 127 1 267 1 82 1 
212 1 197 1 277 1 14 2 224 2 127 1 222 1 6 2 189 1 
205 1 130 1 14 3 291 1 47 1 64 1 280 1 222 2 296 1 6 3 211 1 8 1 212 3 197 3 230 1 224 3 79 1 98 1 12 1 
212 2 211 1 197 2 14 2 224 2 47 1 163 1 222 1 6 2 257 1 
71 1 308 1 141 1 251 1 14 1 220 1 58 1 159 1 6 1 74 1 246 1 232 1 127 1 267 1 54 1 
71 1 308 1 141 1 251 1 14 1 159 1 6 1 74 1 7 1 41 1 246 1 232 1 127 1 267 1 54 1 
44 2 157 1 5 2 133 1 229 1 161 2 116 1 329 1 255 1 163 2 140 1 257 2 37 1 146 2 39 1 194 1 314 1 125 1 284 1 353 1 354 4 80 1 82 1 204 1 
212 1 197 1 84 1 291 1 14 1 224 1 64 1 6 1 
186 1 190 1 
186 1 190 1 
355 1 273 1 
355 1 273 1 
355 1 273 1 
186 1 190 1 38 1 
186 1 190 1 15 1 
186 2 190 2 292 1 355 1 250 1 273 1 
186 1 190 1 38 1 
186 1 190 1 38 1 
186 1 190 1 78 1 
186 1 190 1 78 1 
186 1 190 1 78 1 
13 1 14 2 190 1 15 1 322 1 280 1 295 1 160 1 309 1 6 2 272 1 76 1 212 2 186 1 197 2 224 2 253 1 200 1 127 1 233 1 179 1 356 1 98 1 23 1 
1 1 47 1 64 1 322 1 4 1 160 2 6 1 212 1 186 2 115 1 66 1 253 2 233 2 258 1 98 2 99 1 14 1 190 2 280 2 192 1 40 1 265 1 283 1 197 1 224 1 179 2 180 1 339 1 23 2 
209 1 243 1 299 1 
206 1 243 1 299 1 
206 1 209 2 11 1 166 1 299 3 344 1 
206 1 209 1 166 1 313 1 299 2 344 1 
206 1 209 1 166 1 299 2 344 2 
63 1 205 2 45 4 184 2 272 1 135 1 229 1 327 1 51 2 117 1 329 1 32 1 188 1 217 1 332 1 98 5 169 1 13 1 16 3 278 1 280 5 282 2 223 1 314 1 149 1 77 1 200 1 249 3 80 1 268 1 152 2 42 1 
205 1 45 2 271 1 47 1 64 1 4 1 6 1 212 1 258 1 98 2 14 1 280 2 192 1 61 1 283 1 77 1 266 1 197 1 224 1 42 1 341 1 
205 3 45 2 272 1 184 2 135 1 229 1 327 1 51 2 117 2 329 1 348 1 188 1 217 1 98 3 16 3 278 1 280 3 282 2 223 1 314 1 149 1 77 1 249 4 152 1 268 1 80 1 
205 4 290 1 45 3 325 1 184 4 272 2 276 1 135 1 229 2 327 1 51 4 117 3 329 2 348 1 188 1 217 1 98 4 16 5 278 1 280 4 282 4 223 1 314 2 149 1 77 1 249 7 152 2 268 2 80 2 
251 1 232 1 74 1 
285 1 232 1 
124 1 183 1 232 1 
232 1 343 1 
46 1 
251 1 232 1 
124 2 251 1 28 1 232 3 74 1 75 1 
5 6 229 3 302 2 136 1 10 1 53 1 236 2 143 1 145 2 146 8 198 2 284 4 353 5 248 1 354 14 80 3 338 1 340 1 
5 6 229 3 302 2 136 1 10 1 53 1 236 2 143 3 145 2 146 8 198 2 284 4 353 7 248 1 354 14 80 3 338 1 340 1 
5 6 229 3 302 2 136 1 10 1 53 1 236 2 143 1 239 1 145 2 146 8 198 2 284 4 353 5 354 14 248 1 80 3 338 1 340 1 
270 4 293 1 5 19 26 1 161 2 229 6 116 1 329 3 255 1 302 3 303 1 136 2 10 1 53 1 305 1 140 1 236 3 331 1 143 7 145 2 146 21 102 1 314 3 198 3 353 14 284 7 248 1 354 40 268 3 80 6 82 1 340 1 203 3 338 2 269 1 
293 1 5 7 229 3 161 4 116 2 255 2 302 2 136 1 10 1 140 2 259 1 236 2 143 2 145 2 146 9 198 2 284 5 353 7 354 16 248 1 104 1 80 3 82 2 340 1 338 1 
206 1 156 2 209 1 159 1 3 1 2 2 347 1 299 2 50 1 138 1 31 1 95 1 234 1 11 1 70 1 54 1 97 1 34 1 261 1 141 1 121 1 262 1 243 1 279 1 246 1 175 1 126 1 267 1 153 1 345 1 
206 1 156 3 209 1 159 1 3 1 2 3 347 2 299 2 50 1 138 1 31 1 95 1 234 1 11 1 70 1 54 1 97 1 34 1 261 1 141 1 72 1 17 1 262 1 243 1 279 1 174 1 246 1 175 1 267 1 153 1 
206 1 156 2 209 1 159 1 3 1 2 2 347 2 299 2 50 1 138 1 31 1 234 1 11 1 54 1 97 1 261 1 141 1 72 1 262 1 243 1 279 1 174 1 246 1 267 1 153 1 
251 1 156 1 159 1 3 2 2 1 88 1 275 1 232 1 31 2 70 1 54 1 34 1 71 1 141 1 17 1 242 1 262 2 195 1 103 1 246 1 267 1 153 2 287 1 
206 1 156 1 209 1 159 1 3 1 2 1 299 2 50 1 31 1 95 1 234 1 11 1 70 1 54 1 34 1 141 1 72 1 262 1 243 1 279 1 246 1 175 1 126 1 267 1 153 1 345 1 
151 1 
251 1 291 1 64 1 159 1 87 1 6 1 89 1 88 1 274 1 113 1 8 1 327 1 277 1 51 1 232 1 30 1 32 1 54 2 332 1 55 1 12 1 98 3 71 2 141 2 14 1 238 1 16 1 278 1 280 3 147 1 281 1 101 2 223 1 149 1 103 1 246 1 79 1 224 1 267 2 42 2 
291 1 14 1 64 1 280 2 87 1 281 1 147 1 89 1 6 1 101 2 113 1 8 1 277 1 79 1 224 1 55 1 98 2 12 1 
291 1 14 1 64 1 280 2 87 1 281 1 147 1 89 1 6 1 101 2 113 1 8 1 277 1 79 1 224 1 55 1 98 2 12 1 
291 1 14 1 64 1 280 2 87 1 281 1 147 1 89 1 6 1 101 2 113 1 8 1 277 1 79 1 224 1 55 1 98 2 12 1 
291 1 14 1 64 1 280 3 87 1 281 1 147 1 6 1 89 1 101 2 113 1 8 1 277 1 79 1 224 1 22 1 42 1 332 1 55 1 12 1 98 3 
291 1 64 1 87 1 89 1 6 1 297 1 113 1 8 1 327 1 277 1 51 1 32 1 55 1 98 2 12 1 14 1 16 1 278 1 280 2 147 1 281 1 223 1 101 2 224 1 79 1 
291 1 14 1 64 1 280 2 87 1 281 1 147 1 89 1 6 1 101 2 113 1 8 1 277 1 79 1 224 1 55 1 98 2 12 1 
291 1 14 1 64 1 280 2 87 1 281 1 147 1 89 1 6 1 101 2 113 1 8 1 277 1 79 1 224 1 55 1 98 2 12 1 
291 1 14 1 64 1 280 2 87 1 281 1 147 1 89 1 6 1 101 2 113 1 8 1 277 1 79 1 224 1 55 1 98 2 12 1 
291 1 14 1 64 1 280 2 87 1 281 1 147 1 89 1 6 1 101 2 113 1 8 1 277 1 79 1 224 1 55 1 98 2 12 1 
291 1 14 1 64 1 280 2 87 1 281 1 147 1 89 1 6 1 101 2 113 1 8 1 277 1 79 1 224 1 55 1 98 2 12 1 
291 1 64 1 87 1 89 1 6 1 113 1 8 1 327 1 277 1 51 1 32 1 55 1 98 2 12 1 14 1 16 1 278 1 280 2 147 1 281 1 223 1 101 2 224 1 79 1 316 1 
183 1 145 1 146 3 5 2 39 1 229 1 198 1 161 2 116 1 353 2 284 2 125 1 354 5 248 1 255 1 302 1 127 2 80 1 10 1 82 1 236 1 204 1 140 1 
320 1 270 3 44 11 48 1 5 6 161 4 229 1 116 2 329 2 255 2 163 11 303 1 305 1 167 1 140 2 257 4 100 1 36 1 143 1 59 1 146 8 39 1 314 1 353 2 284 1 125 2 354 14 127 1 337 1 268 2 80 2 82 2 203 3 
319 1 251 1 159 1 48 1 6 2 5 1 134 1 212 1 161 2 116 1 230 1 255 1 232 1 54 1 257 1 140 1 308 1 71 1 100 1 141 1 142 1 14 2 220 1 58 1 59 1 146 1 222 1 74 1 39 1 315 1 197 1 246 1 125 1 224 1 354 2 127 1 267 1 82 1 
44 6 227 1 48 1 5 13 6 3 91 2 328 2 229 5 230 1 329 2 232 2 231 2 10 1 236 1 54 1 140 3 100 1 141 1 14 3 143 1 58 2 145 2 59 1 146 14 148 2 198 2 197 1 246 2 284 6 248 1 202 1 340 1 251 2 64 1 159 2 212 1 161 6 116 3 255 3 302 2 163 6 69 1 257 6 71 1 308 2 220 2 222 1 39 3 74 2 312 2 314 2 353 7 125 3 224 1 354 27 127 3 267 1 268 2 80 5 82 3 
207 1 251 2 159 2 25 1 48 1 6 1 5 1 88 1 212 1 161 4 116 2 330 2 9 1 255 2 232 3 52 1 54 8 140 2 71 2 141 8 72 1 121 1 14 1 59 1 146 1 123 1 222 1 244 1 39 2 197 1 103 1 246 2 125 2 224 1 354 2 201 1 267 7 82 2 204 1 
44 1 47 1 6 1 5 2 212 1 211 1 161 2 229 1 116 1 329 1 255 1 163 1 164 1 257 1 140 1 100 1 14 1 146 1 39 1 314 1 197 1 353 1 284 1 125 1 224 1 354 3 268 1 80 1 82 1 
44 1 143 1 37 1 146 2 39 1 161 2 116 1 353 1 125 1 354 2 329 1 255 1 163 1 80 1 82 1 257 1 204 1 140 1 
44 1 157 1 39 1 5 2 314 1 161 2 229 1 116 1 353 1 284 1 125 1 354 2 255 1 163 1 82 1 257 1 204 1 140 1 
44 2 143 1 146 2 5 2 39 1 314 1 229 1 161 2 116 1 284 1 353 2 125 1 354 4 329 1 255 1 163 2 268 1 80 1 82 1 257 2 204 1 140 1 
44 1 143 1 37 1 146 2 39 1 161 2 116 1 353 1 125 1 354 2 329 1 255 1 163 1 201 1 80 1 82 1 257 1 140 1 
44 1 157 1 39 1 5 2 314 1 161 2 229 1 116 1 353 1 284 1 125 1 354 2 255 1 163 1 201 1 82 1 257 1 140 1 
44 2 143 1 146 2 5 2 39 1 314 1 229 1 161 2 116 1 284 1 353 2 125 1 354 4 329 1 255 1 163 2 201 1 268 1 80 1 82 1 257 2 140 1 
44 2 143 1 146 2 5 2 39 1 314 1 229 1 161 2 116 1 284 1 353 2 125 1 329 1 354 4 255 1 163 2 268 1 80 1 82 1 257 2 140 1 
251 1 159 1 48 1 6 1 5 1 91 1 161 2 116 1 255 1 232 1 54 1 140 1 308 1 71 1 141 1 14 1 220 1 58 1 146 1 59 1 74 1 39 1 246 1 125 1 354 2 127 1 267 1 82 1 
251 1 159 1 48 1 6 1 5 1 7 1 210 1 161 2 116 1 255 1 232 1 54 1 140 1 308 1 71 1 141 1 14 1 146 1 59 1 74 1 39 1 41 1 246 1 125 1 354 2 127 1 267 1 82 1 
100 1 44 2 143 1 146 2 5 2 39 1 314 1 229 1 161 2 116 1 284 1 353 2 125 1 354 4 329 1 255 1 163 2 268 1 80 1 82 1 257 2 140 1 
44 2 251 1 159 1 5 2 6 1 91 1 229 1 161 2 116 1 329 1 255 1 163 2 232 1 257 2 54 1 140 1 308 1 141 1 121 1 14 1 220 1 143 1 58 1 146 2 74 1 39 1 312 1 314 1 246 1 284 1 353 2 125 1 354 4 80 1 267 1 268 1 82 1 
44 1 109 1 47 1 5 1 6 1 212 1 211 1 229 1 161 2 116 1 329 1 255 1 163 1 140 1 257 1 100 1 14 1 143 1 146 2 39 1 314 1 197 1 353 1 125 1 224 1 354 3 268 1 80 1 82 1 
129 1 270 4 85 1 86 1 5 21 229 5 329 4 10 1 140 3 236 1 143 4 145 1 146 20 60 1 333 1 335 4 198 1 284 4 248 1 203 3 24 1 289 1 293 1 294 1 161 6 116 3 255 3 302 1 303 3 256 1 305 1 259 1 218 1 171 2 172 1 314 4 353 8 354 41 80 5 268 4 317 1 82 3 83 1 
289 1 129 1 85 1 270 4 86 1 293 2 294 1 5 18 161 8 229 4 116 4 329 4 255 4 302 1 303 3 10 1 256 1 305 1 236 1 140 4 259 1 218 1 171 2 143 3 172 1 145 1 60 1 146 20 333 1 335 4 314 3 198 1 284 4 353 7 248 1 354 38 317 1 268 4 80 5 82 4 203 3 83 1 24 1 
289 1 129 1 85 1 320 2 270 4 86 1 293 1 5 25 161 4 229 8 116 2 329 7 255 2 302 1 303 2 10 1 256 1 305 2 236 1 140 2 259 1 218 1 171 1 143 7 145 1 60 1 146 27 333 1 335 4 314 7 198 1 284 7 353 14 248 1 354 52 317 1 268 7 80 8 82 2 203 4 83 1 24 1 
129 1 270 2 5 10 161 4 229 3 116 2 329 3 255 2 303 1 305 1 140 2 259 1 218 1 171 1 143 3 172 1 60 1 146 9 333 1 18 1 335 2 314 3 284 3 353 6 354 19 268 3 80 3 82 2 203 1 83 2 
129 2 289 1 85 1 270 2 86 1 293 2 5 12 229 2 161 6 116 3 329 3 255 3 303 2 256 1 140 3 259 1 218 1 171 2 143 2 60 1 146 14 333 1 335 4 314 2 353 4 284 2 354 26 317 1 268 3 80 3 82 3 203 2 83 1 24 1 
251 1 208 1 159 1 48 1 228 1 6 2 5 1 161 2 116 1 330 2 255 1 232 1 52 1 235 1 54 2 140 1 100 1 141 2 14 2 59 1 146 1 264 1 244 1 39 1 334 1 246 1 125 1 224 2 354 2 267 2 82 1 
206 1 0 1 141 2 72 1 121 1 209 1 159 1 243 1 279 1 299 2 246 1 215 1 267 2 137 1 31 1 95 1 234 1 11 1 54 2 
206 1 141 1 219 1 72 1 209 1 159 1 243 1 279 1 299 2 246 1 215 1 267 1 31 1 95 1 234 1 11 1 54 1 
71 1 0 1 251 1 141 1 159 1 88 1 275 1 103 1 246 1 232 1 93 1 267 1 31 1 54 1 
206 1 0 1 141 1 72 1 209 1 159 1 243 1 279 1 299 2 246 1 215 1 267 1 137 1 31 1 95 1 234 1 11 1 54 1 
307 1 
205 1 77 1 51 1 300 1 16 1 183 1 112 1 
168 1 205 2 16 1 278 1 280 1 297 1 351 1 223 1 77 1 327 1 51 1 117 1 249 1 32 1 42 1 332 1 98 1 
321 1 323 1 184 6 185 1 8 2 327 4 229 2 51 8 329 2 232 6 54 2 332 3 98 5 141 2 16 9 278 4 280 5 148 2 282 6 149 2 245 2 246 1 249 12 150 1 343 3 205 8 251 1 159 2 112 1 300 1 28 1 117 6 30 1 32 4 165 2 71 1 260 2 121 1 74 1 223 4 314 2 77 2 124 2 225 2 267 2 268 2 80 2 318 2 42 5 43 2 357 1 181 2 
289 1 205 5 85 1 270 1 184 5 327 2 229 2 214 1 51 5 117 3 329 2 303 1 30 1 256 1 32 2 332 1 98 1 16 8 278 2 280 1 282 5 223 2 149 1 314 2 352 1 77 2 249 6 317 1 268 2 80 2 42 1 43 1 203 1 24 1 181 2 
47 1 64 1 4 1 6 1 212 1 327 1 229 1 51 2 302 1 32 1 258 1 98 1 14 1 16 2 278 1 145 1 280 1 192 1 223 1 283 1 196 1 198 1 197 1 224 1 80 2 43 1 340 1 181 2 
205 1 16 1 278 1 112 1 223 1 77 1 327 1 300 1 51 1 32 1 
205 5 16 5 148 1 184 5 282 5 314 2 229 2 51 5 329 2 117 5 249 10 268 2 80 2 43 1 181 2 
205 1 77 1 280 1 42 1 332 1 98 1 
251 1 159 1 88 1 274 1 327 2 51 2 348 1 232 1 30 2 32 1 54 2 332 2 98 3 71 2 141 2 56 1 57 1 238 1 16 2 278 2 280 3 223 2 149 2 103 1 246 1 150 2 267 2 42 4 357 1 
251 1 47 2 159 1 48 1 5 1 6 3 91 1 212 2 161 2 116 1 255 1 232 1 306 1 140 1 54 1 71 1 308 1 141 1 14 3 220 1 58 1 192 1 74 1 39 1 197 2 246 1 125 1 354 1 224 2 127 1 267 1 82 1 
205 4 16 1 278 1 184 2 282 2 223 1 149 1 77 2 327 1 51 2 117 2 249 4 30 1 32 1 236 1 
253 1 179 1 108 1 
21 1 253 1 128 1 179 1 356 1 
253 1 179 1 108 1 
253 1 179 1 108 1 
253 1 304 1 179 1 
253 1 304 1 179 1 
253 1 304 1 179 1 
253 1 179 1 
186 1 190 1 
289 1 270 1 5 7 229 3 161 2 116 1 255 1 302 2 303 1 10 1 236 1 140 1 259 1 143 1 145 2 146 8 198 2 284 4 353 5 354 15 248 1 80 3 82 1 340 1 203 1 
289 1 288 1 270 2 5 8 229 3 161 4 116 2 329 1 255 2 302 2 303 1 10 1 305 1 236 1 259 1 140 2 143 2 145 2 146 10 198 2 284 4 353 6 248 1 354 18 268 1 80 4 82 2 340 1 203 1 
288 1 289 1 85 1 270 1 293 1 5 13 161 6 229 5 116 3 329 2 255 3 302 2 303 1 10 1 256 1 236 1 140 3 259 1 143 2 145 2 146 13 314 2 198 2 284 5 353 7 248 1 354 26 317 1 268 2 80 5 82 3 340 1 203 1 24 1 
288 1 289 1 270 1 85 1 293 1 5 10 161 6 229 4 116 3 329 2 255 3 302 2 303 1 10 1 256 1 236 1 140 3 259 1 143 4 145 2 146 14 314 1 198 2 284 5 353 9 248 1 354 24 317 1 268 2 80 5 82 3 340 1 203 1 24 1 
289 1 270 1 5 7 229 3 161 2 116 1 255 1 302 2 303 1 10 1 236 1 140 1 259 1 143 1 145 2 146 8 198 2 284 4 353 5 354 15 248 1 80 3 82 1 340 1 203 1 
289 1 270 1 85 1 5 6 161 2 229 2 116 1 329 2 255 1 303 1 256 1 140 1 259 1 143 1 146 6 314 2 284 1 353 2 354 12 317 1 268 2 80 2 82 1 203 1 24 1 
289 1 288 1 85 1 270 1 293 2 5 11 161 8 229 4 116 4 329 2 255 4 302 2 303 1 10 1 256 1 236 1 140 4 259 1 143 2 145 2 146 14 314 1 198 2 284 5 353 7 248 1 354 25 317 1 268 2 80 5 82 4 340 1 203 1 24 1 
289 1 85 1 270 1 293 2 5 7 161 8 229 2 116 4 329 3 255 4 303 1 256 1 259 1 140 4 143 3 172 1 146 9 314 2 284 3 353 6 354 16 317 1 268 3 80 3 82 4 203 1 24 1 
143 3 145 1 146 3 5 4 229 1 198 3 284 3 353 6 354 7 248 2 302 3 80 1 10 1 
289 1 85 1 270 1 293 2 5 11 161 8 229 4 116 4 329 2 255 4 302 2 303 1 10 1 256 1 236 1 259 1 140 4 143 2 172 1 145 2 146 14 314 1 198 2 284 5 353 7 248 1 354 25 317 1 268 2 80 5 82 4 340 1 203 1 24 1 
293 1 5 8 161 4 229 3 116 2 255 2 302 2 10 1 140 2 236 1 143 3 145 2 146 9 198 2 284 4 353 7 248 1 354 17 80 3 82 2 340 1 
183 1 145 1 146 3 5 2 198 1 229 1 284 2 353 2 248 1 354 5 302 1 80 1 10 1 236 1 
288 1 143 1 146 2 5 2 314 1 229 1 161 2 116 1 284 1 353 2 329 1 354 4 255 1 268 1 80 1 82 1 140 1 
270 2 143 1 146 3 5 4 314 1 229 1 284 1 353 2 354 7 329 1 303 1 268 1 80 1 305 1 203 1 
270 2 320 1 293 1 5 12 229 5 161 2 116 1 329 2 255 1 302 2 10 1 305 1 236 1 140 1 143 2 145 2 146 13 314 2 198 2 284 5 353 7 248 1 354 25 80 5 268 2 337 1 82 1 340 1 203 2 
270 1 354 1 5 1 
354 1 146 1 203 1 
288 1 143 1 146 3 148 1 5 3 314 1 161 2 229 1 116 1 353 3 284 2 354 6 329 1 255 1 268 1 80 1 82 1 140 1 
289 1 270 1 85 1 5 6 161 2 229 2 116 1 329 2 255 1 303 1 256 1 140 1 259 1 143 1 146 6 314 2 284 1 353 2 354 12 317 1 268 2 80 2 82 1 203 1 24 1 
143 1 145 1 146 3 5 3 229 1 198 1 284 1 353 2 354 6 302 1 80 1 
237 1 143 1 293 1 146 1 5 2 198 1 161 2 116 1 353 2 284 1 248 1 354 3 255 1 302 1 10 1 82 1 140 1 
143 2 145 1 146 5 5 5 161 2 198 2 229 2 116 1 284 3 353 5 354 10 255 1 302 2 80 2 82 1 340 1 140 1 259 1 
143 1 146 2 161 2 116 1 353 1 329 1 354 2 255 1 80 1 82 1 259 1 140 1 
143 1 146 2 5 2 314 1 229 1 161 2 116 1 284 1 353 2 329 1 354 4 255 1 268 1 80 1 82 1 259 1 140 1 
237 1 143 1 172 1 293 1 146 1 5 2 161 6 198 1 116 3 284 1 353 2 354 3 255 3 302 1 82 3 259 1 140 3 
288 1 270 3 293 1 5 15 26 1 161 8 229 5 116 4 329 2 255 4 302 2 303 1 10 1 236 1 140 4 259 1 331 1 143 4 172 1 145 2 146 16 314 2 198 2 284 5 353 9 248 1 354 31 268 2 80 5 82 4 340 1 203 3 269 1 
277 1 14 1 224 1 191 1 127 1 6 1 189 1 
14 1 191 1 221 1 324 1 193 1 6 1 277 1 92 1 224 1 286 1 127 1 189 1 
308 1 71 1 251 1 141 1 14 2 159 1 222 1 74 1 6 2 7 1 212 1 197 1 246 1 224 1 232 1 127 1 267 1 54 1 
150 1 
71 1 103 1 246 1 251 1 141 1 183 1 159 1 232 1 267 1 88 1 54 1 
308 1 71 1 251 1 141 1 14 2 58 1 159 1 222 1 74 1 6 2 212 1 197 1 246 1 224 1 232 1 127 1 267 1 54 1 
212 1 197 1 14 1 224 1 150 1 222 1 6 1 
212 1 197 1 14 1 224 1 150 1 222 1 6 1 
150 1 280 1 98 1 
150 1 280 1 98 1 
246 1 141 1 159 1 267 1 123 1 54 1 
71 2 207 1 141 7 251 2 72 1 121 1 159 3 25 1 123 1 244 1 74 1 213 1 19 1 246 2 28 1 330 1 9 1 232 3 267 6 33 1 54 7 
6 2 5 6 91 1 328 1 229 3 232 1 10 1 54 1 140 2 236 1 100 1 141 1 14 2 143 1 58 1 145 2 146 7 197 1 198 2 246 1 284 4 248 1 202 1 340 1 251 1 208 1 64 1 159 1 212 1 161 4 116 2 255 2 302 2 308 1 121 1 220 1 222 1 39 2 74 1 312 1 125 2 353 5 224 1 354 13 267 1 80 3 127 3 82 2 
205 1 45 1 112 1 8 1 327 2 51 1 300 1 232 2 32 2 165 1 54 1 332 1 98 3 71 1 260 1 141 1 16 1 278 2 280 3 223 2 77 1 124 1 245 1 225 1 267 1 42 2 343 1 357 1 
141 2 251 1 121 1 323 1 159 2 123 1 74 1 124 1 246 1 28 1 232 2 267 2 54 2 
71 1 141 4 251 1 121 1 159 1 88 1 298 1 103 1 246 1 67 1 232 1 267 4 54 4 
141 1 251 1 144 1 159 2 74 1 213 1 19 1 246 1 301 1 150 1 232 1 119 1 267 1 54 1 
206 1 71 1 246 1 141 1 159 1 243 1 267 1 279 1 299 1 54 1 
141 2 251 1 121 1 72 1 159 1 244 1 334 1 246 1 232 1 267 2 54 2 
71 1 207 1 141 4 251 2 121 1 159 2 88 1 244 1 103 1 246 2 67 1 9 1 150 1 232 3 267 3 54 4 
71 1 141 4 251 2 121 1 159 2 73 1 88 1 244 1 103 1 246 2 67 1 9 1 150 1 232 3 267 3 54 4 
155 1 254 1 68 1 127 1 349 1 
205 1 155 2 291 1 45 1 64 1 111 1 349 1 280 2 296 1 326 1 77 1 8 1 79 1 254 2 68 2 127 1 178 1 98 2 12 1 
155 1 14 1 349 1 228 1 264 1 6 1 224 1 68 1 235 1 
111 1 349 1 326 1 
261 1 183 1 138 1 97 1 
261 1 156 1 2 1 138 1 70 1 97 1 34 1 
262 1 3 1 2 1 
261 1 156 3 2 3 132 2 138 1 350 1 65 1 70 1 96 1 97 1 34 1 345 1 
261 1 156 2 346 1 2 2 138 1 347 1 70 1 97 1 34 1 
35 1 156 1 209 1 2 1 243 1 311 1 299 1 138 1 70 1 345 1 34 1 
261 1 156 1 2 1 138 1 70 1 34 1 345 1 
261 2 156 1 2 1 70 1 97 1 34 1 345 1 
261 1 156 2 2 2 94 1 138 1 70 2 27 1 342 1 34 2 345 1 
261 1 35 1 156 3 2 3 347 2 118 1 216 1 176 1 138 2 70 1 97 1 345 1 34 1 
261 1 206 1 156 2 209 1 2 2 243 1 263 1 347 1 299 2 138 1 11 1 70 1 97 1 345 1 34 1 
261 1 35 1 156 4 346 1 2 4 347 2 187 1 176 1 138 2 70 2 97 1 345 1 34 2 
261 1 156 1 2 1 138 1 70 1 97 1 34 1 345 1 
261 2 35 1 156 4 2 4 132 1 350 1 65 1 347 2 176 1 138 3 105 1 70 1 97 2 34 1 
261 1 156 2 241 1 2 2 138 1 139 1 347 1 70 1 97 1 34 1 345 1 226 1 
261 1 156 3 2 3 132 2 65 1 350 2 138 1 120 1 70 1 345 1 34 1 97 1 
110 1 29 2 336 1 138 2 
156 1 2 1 70 1 34 1 345 1 49 1 
261 1 156 2 216 1 2 2 138 1 347 1 70 1 97 1 34 1 345 1 
106 1 
261 1 156 1 2 1 138 1 70 1 97 1 34 1 345 1 
261 1 156 3 2 3 132 1 347 1 216 1 138 1 70 1 345 1 34 1 97 1 
35 1 176 1 138 1 105 1 
261 1 138 1 

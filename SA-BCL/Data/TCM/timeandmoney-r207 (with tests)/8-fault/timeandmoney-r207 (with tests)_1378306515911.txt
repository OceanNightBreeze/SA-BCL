#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 107 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 107 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1711 | stmt -> ;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1647 | return null
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9794 | == -> !=
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3701 | = null
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10499 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | == -> <=
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 866 | stmt -> ;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
324 2 274 1 0 2 104 4 1 2 79 1 153 1 300 1 356 1 109 2 329 1 282 1 9 5 216 1 217 1 64 9 287 2 36 2 235 9 200 1 313 1 202 1 315 1 241 1 319 1 20 2 187 6 320 3 
324 2 274 1 0 2 104 4 1 2 79 1 153 1 300 1 356 1 109 2 329 1 282 1 9 5 216 1 217 1 287 2 64 9 36 2 235 9 200 1 313 1 202 1 315 1 241 1 319 1 20 2 187 6 320 3 
324 2 274 1 0 2 104 5 1 2 79 1 153 1 300 1 356 1 109 2 329 1 282 1 9 6 216 1 217 1 287 2 64 10 36 2 235 10 200 1 313 1 202 1 315 1 241 1 319 1 20 2 187 7 320 4 
324 2 274 1 0 2 104 3 1 2 79 1 153 1 300 1 356 1 109 1 329 1 282 1 9 4 216 1 217 1 287 2 64 7 36 2 235 7 200 1 313 1 315 1 241 1 319 1 20 2 187 4 320 2 
324 1 216 1 64 4 287 1 104 2 1 1 36 1 235 4 356 1 200 1 109 2 313 1 202 1 329 1 20 1 187 3 320 1 9 3 
324 1 216 1 64 2 0 1 1 1 36 1 74 1 3 1 235 2 200 1 313 1 315 1 241 1 20 1 9 1 364 1 
324 2 216 1 64 3 0 1 104 1 36 2 235 3 300 1 200 1 313 1 187 1 320 1 9 2 
324 2 124 1 0 1 104 4 1 1 27 1 79 1 153 1 300 1 356 1 109 2 329 1 9 5 216 1 64 9 287 1 36 2 235 9 200 1 313 1 202 1 187 7 20 1 320 3 
324 2 124 1 0 1 104 4 1 1 27 1 79 1 153 1 300 1 356 1 109 2 329 1 9 5 216 1 64 9 287 1 36 2 235 9 200 1 313 1 202 1 187 7 20 1 320 3 
225 1 107 1 297 1 
289 1 263 2 297 1 
102 2 44 2 110 1 13 2 141 1 95 2 215 2 375 2 
145 1 246 1 102 2 24 1 125 1 127 1 128 1 7 1 299 1 231 1 8 2 250 1 302 1 110 1 255 1 215 3 11 2 260 2 234 1 180 1 13 2 141 1 142 1 366 1 368 1 95 3 310 1 237 1 45 1 44 2 18 1 344 1 373 2 19 2 375 2 322 1 21 1 
140 1 102 1 44 1 371 1 13 1 168 1 141 1 95 1 215 1 375 1 
102 1 225 1 196 1 95 1 297 1 28 1 301 1 46 1 254 1 99 1 168 1 178 1 215 1 100 1 
102 1 225 1 196 2 13 1 95 1 297 1 301 2 44 1 46 1 99 1 168 1 178 1 375 1 215 1 100 1 
301 1 196 1 317 1 249 1 10 1 
301 2 225 1 196 2 317 1 92 1 10 1 297 1 198 1 
301 1 196 1 317 1 
140 1 102 1 196 1 13 1 141 1 95 1 211 1 301 1 44 1 371 1 168 1 10 1 375 1 215 1 
297 1 
301 2 225 1 196 2 317 1 75 1 10 1 297 1 198 1 
32 1 158 2 34 2 225 1 352 1 196 5 105 1 182 1 297 1 198 1 29 1 301 5 203 1 134 1 135 2 317 2 269 1 111 1 10 2 
110 1 107 1 
102 2 273 1 103 1 13 1 95 2 44 1 110 2 215 2 375 1 
199 1 50 1 280 1 
260 1 125 1 127 1 366 1 95 1 8 1 18 1 250 1 344 1 47 1 110 1 19 1 255 1 215 1 322 1 21 1 
260 1 102 1 125 1 13 1 127 1 366 1 95 2 80 1 250 1 18 1 8 1 344 1 280 1 19 1 136 1 255 1 322 1 375 1 215 2 21 1 
80 1 102 3 44 1 110 1 13 3 95 3 215 3 375 3 
140 1 102 1 13 1 168 1 95 1 215 1 375 1 
102 1 273 1 44 1 103 1 13 1 168 1 95 1 215 1 375 1 
145 1 246 1 102 3 103 1 125 1 127 1 7 1 80 1 299 1 231 1 301 1 250 1 8 1 302 1 110 1 360 1 136 1 255 1 178 1 215 4 11 2 260 1 234 1 196 1 13 3 141 1 142 1 366 1 368 1 67 1 95 4 237 1 18 1 46 1 44 2 344 1 373 1 99 1 19 1 168 1 322 1 375 3 21 1 100 1 
80 1 102 2 110 1 254 1 13 1 172 1 95 2 215 2 375 1 
102 3 103 1 196 1 13 3 95 3 297 1 80 2 301 1 44 1 46 1 99 1 360 1 346 1 168 1 136 1 178 1 375 3 215 3 100 1 
199 1 80 1 102 2 44 1 103 1 280 1 13 2 95 2 215 2 375 2 
260 1 125 1 127 1 366 1 95 1 8 1 18 1 250 1 344 1 110 1 19 1 255 1 215 1 322 1 21 1 
260 1 294 1 209 1 125 1 127 1 366 1 95 1 8 1 18 1 250 1 344 1 110 1 19 1 215 1 21 1 
145 1 246 1 50 2 73 1 276 1 7 1 298 1 133 1 302 2 280 2 177 1 31 1 11 2 234 1 288 1 142 1 342 1 310 2 237 1 199 2 312 1 373 4 170 1 321 1 
102 1 143 1 13 1 168 1 178 1 95 1 215 1 375 1 
102 5 305 1 103 1 13 4 95 5 80 2 44 1 110 1 254 1 136 1 220 1 172 1 375 4 215 5 
140 1 102 2 143 1 13 2 168 1 95 2 215 2 375 2 
85 1 293 1 
85 1 293 1 
252 1 233 1 
252 1 233 1 
252 1 233 1 
83 1 85 1 293 1 
89 1 85 1 293 1 
290 1 252 1 85 2 233 1 374 1 293 2 
83 1 85 1 293 1 
83 1 85 1 293 1 
85 1 340 1 293 1 
85 1 340 1 293 1 
85 1 340 1 293 1 
60 2 196 2 226 2 338 1 160 1 367 2 66 3 130 1 297 1 185 2 212 1 132 2 301 2 85 2 281 1 374 1 191 1 214 1 293 2 
102 2 130 1 132 1 278 1 301 1 58 1 110 1 85 1 155 1 215 2 332 1 60 1 89 1 196 1 13 2 66 1 367 1 95 2 185 1 163 1 314 1 122 1 375 2 293 1 
287 1 1 1 20 1 
1 1 20 1 74 1 
287 2 159 1 351 1 20 3 74 1 26 1 
287 1 159 1 20 2 74 1 277 1 26 1 
287 1 159 1 20 2 74 1 26 2 
323 1 245 2 352 1 225 1 296 1 297 2 301 5 29 3 58 1 135 1 177 1 155 1 31 1 10 4 332 1 158 1 179 1 34 1 33 2 196 5 263 3 94 1 342 1 198 1 289 1 268 1 201 1 120 1 204 2 317 1 269 2 170 1 
245 6 70 1 225 1 352 1 296 2 249 5 297 5 301 9 29 8 58 4 135 2 177 3 31 3 10 7 283 1 286 1 179 1 158 2 34 2 90 5 196 9 182 1 263 9 94 3 342 3 266 1 198 1 289 3 268 2 97 1 204 6 317 6 269 6 170 3 223 1 
323 1 245 2 225 1 296 1 297 3 301 3 29 3 58 1 135 1 177 1 31 1 10 2 158 1 34 1 33 1 196 3 182 1 94 1 263 4 342 1 289 2 268 1 120 1 204 2 269 2 170 1 
323 1 245 4 225 1 296 1 297 4 301 4 29 5 58 2 135 1 177 2 31 2 10 3 158 1 34 1 33 2 196 4 182 1 263 7 94 2 342 2 266 1 289 3 268 1 97 1 120 1 204 4 269 4 170 2 223 1 
63 1 107 1 21 1 
230 1 21 1 
197 1 
366 1 21 1 
63 2 69 1 127 1 366 1 25 1 21 3 
127 1 366 1 21 1 
262 1 21 1 
146 1 208 1 5 2 133 5 84 1 302 7 330 2 31 3 257 1 112 1 68 1 236 2 310 8 312 4 373 15 205 2 170 3 347 1 
146 1 208 1 5 2 133 7 84 1 302 7 330 2 31 3 257 1 112 1 68 3 236 2 310 8 312 4 373 15 205 2 170 3 347 1 
146 1 208 1 5 2 133 5 84 1 302 7 330 2 31 3 257 1 112 1 68 1 236 2 310 8 312 4 373 15 205 2 242 1 170 3 347 1 
146 1 246 1 208 2 354 3 78 1 5 3 7 1 81 1 133 14 84 1 302 20 330 3 177 3 31 6 257 1 112 2 258 1 11 2 234 1 142 1 94 3 68 7 236 3 342 3 310 21 164 4 311 1 312 7 373 41 345 1 205 2 170 6 206 1 243 1 347 1 
246 1 174 1 208 1 5 1 7 1 133 3 84 1 302 4 330 1 31 2 112 1 257 1 11 2 234 1 142 1 68 1 236 1 41 1 310 5 312 2 373 9 205 1 170 2 347 1 
324 1 0 1 351 1 1 1 247 1 74 1 150 1 8 1 250 1 362 1 137 1 256 1 9 1 260 1 216 1 287 1 64 2 36 1 339 1 93 1 235 2 238 1 17 1 200 1 313 1 18 1 187 1 19 1 20 2 222 1 
324 1 0 1 351 1 1 1 247 1 74 1 4 1 150 1 8 1 250 1 359 1 362 1 137 1 9 1 260 1 216 1 287 1 64 3 36 1 339 1 93 1 37 1 235 3 17 1 200 1 18 1 19 1 187 2 20 2 222 1 
260 1 216 1 287 1 64 2 0 1 351 1 1 1 247 1 74 1 339 1 93 1 4 1 235 2 150 1 17 1 200 1 250 1 18 1 8 1 359 1 20 2 362 1 187 2 19 1 9 1 
324 1 349 1 0 2 247 2 229 1 150 2 250 1 8 1 87 1 260 1 64 1 115 1 35 1 36 1 366 1 37 1 235 1 96 1 17 2 18 1 344 1 19 1 21 1 
324 1 0 1 351 1 1 1 247 1 74 1 150 1 8 1 250 1 359 1 362 1 137 1 256 1 260 1 287 1 64 1 36 1 339 1 93 1 235 1 17 1 313 1 18 1 19 1 20 2 222 1 
194 1 
224 1 102 1 225 1 106 2 151 1 8 2 331 2 156 1 333 1 336 1 158 1 196 5 198 3 289 2 18 1 344 2 19 2 169 2 168 1 167 1 244 2 21 1 348 1 349 1 352 1 353 1 296 1 175 1 297 2 28 1 29 2 301 5 250 1 135 1 303 1 254 1 178 1 87 1 215 1 260 2 304 2 34 1 366 1 263 2 95 1 39 2 267 1 46 1 316 4 317 6 99 1 269 2 270 1 271 2 100 1 
348 1 224 1 102 1 75 1 175 1 28 1 301 3 254 1 178 1 215 1 156 1 196 3 95 1 198 1 46 1 316 2 99 1 317 2 168 1 169 1 270 1 100 1 
348 1 224 1 102 1 225 1 75 1 175 1 297 1 28 1 301 3 254 1 178 1 215 1 156 1 196 3 95 1 198 1 46 1 316 3 317 1 99 1 168 1 270 1 271 1 100 1 
348 1 224 1 102 1 225 1 75 1 175 1 297 1 28 1 301 3 254 1 178 1 215 1 156 1 304 1 196 3 95 1 198 1 46 1 316 3 99 1 317 2 168 1 169 1 270 1 271 1 100 1 
224 1 102 1 225 5 106 2 331 2 156 1 333 1 284 1 158 1 196 5 198 3 289 2 239 1 292 1 169 4 168 1 244 2 348 1 352 1 353 1 75 1 175 1 297 5 28 1 301 5 29 1 135 1 254 1 178 1 88 1 215 1 304 4 34 1 95 1 38 1 39 2 46 1 316 6 99 1 317 7 269 1 270 1 271 4 100 1 
348 1 224 1 102 1 225 1 352 1 106 2 353 1 175 1 297 2 28 1 29 1 301 4 135 1 303 1 254 1 178 1 331 2 215 1 156 1 333 1 158 1 304 2 34 1 196 4 263 2 95 1 39 2 198 2 289 2 46 1 316 4 317 4 99 1 269 1 169 2 168 1 270 1 271 2 244 2 100 1 
348 1 224 1 102 1 225 1 352 1 106 2 353 1 175 1 297 1 28 1 29 1 301 4 135 1 254 1 178 1 331 2 215 1 333 1 156 1 284 1 158 1 304 2 34 1 196 4 95 1 39 2 198 2 289 2 239 1 46 1 316 4 317 4 99 1 269 1 292 1 169 2 168 1 270 1 271 2 244 2 100 1 
348 1 224 1 102 1 225 1 352 1 106 2 353 1 175 1 297 1 28 1 29 1 301 4 135 1 254 1 178 1 331 2 215 1 333 1 156 1 284 1 158 1 304 2 34 1 196 4 95 1 39 2 198 2 289 2 239 1 46 1 316 4 317 4 99 1 269 1 292 1 169 2 168 1 270 1 271 2 244 2 100 1 
348 1 224 1 102 1 225 1 352 1 106 2 353 1 6 2 175 1 297 1 28 1 55 1 29 1 301 4 135 1 254 1 178 1 86 1 215 1 156 1 158 1 304 2 34 1 196 4 341 1 263 2 95 1 39 2 198 2 239 1 46 1 316 4 317 4 99 1 269 1 169 2 168 1 270 1 271 2 144 2 100 1 
348 1 224 1 102 1 225 1 352 1 106 2 353 1 175 1 297 1 28 1 29 1 301 4 135 1 254 1 178 1 331 2 215 1 333 1 156 1 284 1 158 1 304 3 34 1 196 4 95 1 38 1 39 2 198 2 289 2 239 1 46 1 316 5 99 1 317 5 269 1 292 1 168 1 169 3 270 1 271 3 244 2 100 1 
348 1 224 1 102 1 225 1 352 1 106 2 353 1 175 1 297 1 28 1 29 1 301 4 135 1 254 1 178 1 331 2 215 1 333 1 156 1 284 1 158 1 304 3 34 1 196 4 95 1 38 1 39 2 198 2 289 2 239 1 46 1 316 5 99 1 317 5 269 1 292 1 168 1 169 3 270 1 271 3 244 2 100 1 
348 1 224 1 102 1 225 1 352 1 106 2 353 1 6 2 175 1 297 1 28 1 29 1 301 4 135 1 303 1 254 1 178 1 215 1 156 1 158 1 304 2 34 1 196 4 341 1 263 2 95 1 39 2 198 2 46 1 316 4 317 4 99 1 269 1 169 2 168 1 270 1 271 2 144 2 100 1 
145 1 246 1 50 1 107 1 5 1 7 1 298 1 133 2 84 1 302 3 280 1 330 1 110 2 31 1 257 1 11 2 234 1 142 1 236 1 310 3 199 1 237 1 312 2 373 6 205 1 170 1 
145 1 246 2 50 3 51 1 354 1 149 1 7 2 231 1 57 1 302 3 280 3 110 1 11 4 234 2 142 2 310 1 237 2 164 1 240 1 372 1 373 4 168 1 190 1 
145 1 246 1 102 1 24 1 125 1 127 1 7 1 80 1 231 1 250 1 8 1 251 1 302 1 110 1 136 1 255 1 215 2 113 1 11 2 260 1 234 1 13 1 366 1 142 1 95 2 310 1 199 1 237 1 240 1 18 1 344 1 47 1 373 2 19 1 173 1 322 1 375 1 21 1 
145 3 102 1 50 6 51 1 5 1 7 3 328 2 231 1 8 1 110 1 330 1 279 2 280 6 11 6 335 1 285 2 234 3 13 1 68 1 342 2 237 3 199 6 240 1 18 2 344 1 205 1 19 1 168 1 170 4 347 1 21 2 246 3 24 1 125 2 127 2 80 1 133 5 250 2 176 2 84 1 302 11 136 1 177 2 255 2 31 4 257 1 215 3 260 1 142 3 368 2 366 2 95 3 94 2 184 1 310 11 312 4 373 22 375 1 322 2 
145 2 102 1 246 2 349 1 71 1 24 1 248 1 227 1 7 2 298 1 80 1 231 1 250 2 8 7 302 1 359 1 87 1 215 1 11 4 260 8 234 2 181 1 13 1 142 2 366 2 95 1 14 1 310 1 238 1 237 2 18 2 45 2 344 2 373 2 318 1 19 8 192 1 375 1 21 3 
145 1 246 1 102 1 50 1 103 1 7 1 133 1 302 2 280 1 177 1 31 1 215 1 11 2 234 1 13 1 142 1 95 1 94 1 342 1 310 1 199 1 237 1 240 1 312 1 44 1 373 3 170 1 375 1 101 1 
11 2 145 1 246 1 234 1 50 1 73 1 142 1 68 1 310 2 199 1 237 1 7 1 298 1 133 1 373 2 280 1 177 1 31 1 
11 2 145 1 246 1 234 1 50 1 288 1 142 1 342 1 199 1 237 1 7 1 298 1 133 1 312 1 373 2 302 2 280 1 170 1 
145 1 246 1 50 2 7 1 298 1 133 2 302 2 280 2 177 1 31 1 11 2 234 1 142 1 94 1 68 1 342 1 310 2 237 1 199 2 312 1 373 4 170 1 
11 2 145 1 246 1 234 1 50 1 73 1 142 1 68 1 310 2 199 1 237 1 7 1 133 1 373 2 280 1 318 1 177 1 31 1 
11 2 145 1 246 1 234 1 50 1 288 1 142 1 342 1 199 1 237 1 7 1 133 1 312 1 373 2 302 2 280 1 318 1 170 1 
145 1 246 1 50 2 7 1 133 2 302 2 280 2 177 1 31 1 11 2 234 1 142 1 94 1 68 1 342 1 310 2 237 1 199 2 312 1 373 4 318 1 170 1 
145 1 246 1 50 2 7 1 133 2 302 2 280 2 177 1 31 1 11 2 234 1 142 1 94 1 68 1 342 1 310 2 237 1 199 2 312 1 373 4 170 1 
145 1 246 1 24 1 125 1 127 1 7 1 231 1 250 1 8 1 302 1 110 1 255 1 215 1 11 2 260 1 234 1 366 1 368 1 142 1 95 1 310 1 237 1 18 1 344 1 373 2 19 1 322 1 21 1 
294 1 145 1 246 1 24 1 147 1 125 1 209 1 127 1 7 1 231 1 250 1 8 1 302 1 110 1 215 1 11 2 260 1 234 1 366 1 142 1 95 1 310 1 237 1 18 1 344 1 373 2 19 1 21 1 
145 1 246 1 50 2 7 1 133 2 302 2 280 2 177 1 31 1 11 2 234 1 142 1 94 1 68 1 342 1 310 2 237 1 199 2 240 1 312 1 373 4 170 1 
145 1 246 1 50 2 125 1 127 1 7 1 133 2 250 1 8 1 302 2 280 2 177 1 255 1 31 1 215 1 11 2 285 1 260 1 234 1 368 1 366 1 142 1 68 1 95 1 94 1 342 1 310 2 199 2 238 1 237 1 312 1 18 1 373 4 19 1 170 1 322 1 21 1 
145 1 246 1 102 1 50 1 103 1 7 1 56 1 133 1 302 1 280 1 177 1 31 1 215 1 11 2 234 1 13 1 142 1 68 1 95 1 94 1 342 1 310 2 237 1 199 1 240 1 44 1 373 3 170 1 375 1 
246 2 174 1 52 1 228 1 354 1 78 1 326 2 7 2 81 1 133 6 302 10 177 3 31 3 12 1 11 4 234 2 337 1 65 1 142 2 94 3 68 3 342 3 310 9 42 1 164 2 312 3 98 2 373 19 121 1 170 3 
246 3 174 1 52 1 354 2 78 2 326 4 7 3 133 4 357 1 358 1 302 12 177 3 31 3 258 2 12 1 11 6 234 3 261 1 65 2 142 3 68 2 94 3 116 1 342 2 265 1 310 14 42 1 164 2 312 2 291 1 98 1 373 26 121 2 170 2 
52 1 195 1 5 1 326 4 7 3 330 1 11 6 12 1 234 3 337 1 65 2 68 4 342 4 116 1 236 1 164 4 291 1 121 1 205 1 170 5 174 1 246 3 354 3 78 3 81 1 133 7 357 1 358 1 84 1 302 21 177 4 31 5 258 1 257 1 261 1 142 3 94 4 265 1 310 20 42 1 312 3 373 41 98 1 
52 1 195 1 5 1 326 4 7 4 330 1 11 8 12 1 234 4 337 1 65 2 68 3 342 3 116 1 236 1 164 4 291 1 121 1 205 1 170 4 174 1 246 4 354 3 78 3 81 1 133 7 357 1 358 1 84 1 302 18 177 4 31 5 258 2 257 1 261 1 142 4 94 4 265 1 310 20 42 1 312 4 373 38 98 1 
246 2 174 1 52 1 354 4 78 2 5 1 326 4 152 2 7 2 81 2 133 13 357 1 84 1 358 1 302 25 330 1 177 7 31 8 257 1 258 1 12 1 11 4 234 2 261 1 65 1 142 2 94 7 68 7 236 1 116 1 342 7 265 1 310 27 42 1 164 4 312 6 291 1 98 1 373 52 121 1 205 1 170 8 
145 1 102 2 246 1 24 1 53 1 126 1 131 1 7 1 231 1 250 1 8 2 302 1 215 2 11 2 260 2 234 1 181 1 366 1 142 1 95 2 14 1 310 1 237 1 240 1 43 1 18 1 45 2 48 1 373 2 19 2 21 1 
260 2 287 1 351 1 1 1 247 1 74 1 339 1 93 1 54 1 238 1 82 1 250 1 18 1 8 2 359 1 20 2 19 2 363 1 222 1 
260 1 287 1 351 1 1 1 247 1 74 1 339 1 93 1 8 1 18 1 250 1 359 1 166 1 20 2 19 1 363 1 222 1 
260 1 349 1 247 1 366 1 54 1 108 1 96 1 250 1 18 1 8 1 344 1 19 1 87 1 21 1 
260 1 287 1 351 1 1 1 247 1 74 1 339 1 93 1 54 1 82 1 250 1 8 1 18 1 359 1 20 2 19 1 363 1 222 1 
22 1 
29 1 225 1 134 1 105 1 269 1 107 1 297 1 
352 1 225 1 297 2 29 1 301 1 135 1 331 1 333 1 158 1 34 1 196 1 263 1 198 1 289 1 317 1 269 1 244 1 
275 1 225 2 325 1 105 1 2 2 151 1 328 2 230 3 8 3 157 1 158 4 63 2 114 2 196 5 342 2 117 2 198 3 238 1 289 6 18 3 344 1 204 6 19 3 170 2 21 10 245 6 352 4 210 1 127 3 296 2 25 1 297 8 29 9 301 5 250 4 134 1 135 4 361 2 177 2 31 2 138 2 260 3 34 4 262 2 218 2 366 3 264 2 263 12 94 2 309 1 40 2 317 5 99 2 269 8 
245 5 352 2 225 2 354 1 296 1 76 1 78 1 151 1 297 5 301 1 29 8 357 1 358 1 135 2 177 2 31 2 61 1 158 2 34 2 261 1 196 1 263 6 94 2 116 1 342 2 117 1 265 1 198 1 40 2 289 3 164 1 204 5 317 1 269 5 170 2 
102 1 352 1 5 1 211 1 301 1 29 2 135 1 330 1 31 2 215 1 284 1 140 1 158 1 34 1 196 1 13 1 141 1 95 1 117 1 40 2 44 1 371 1 205 1 269 2 168 1 170 1 375 1 347 1 
158 1 34 1 352 1 225 1 105 1 297 1 29 1 135 1 134 1 269 1 
245 5 94 2 263 10 342 2 117 1 40 2 297 5 289 5 328 1 29 5 204 5 269 5 177 2 170 2 31 2 
301 1 225 1 196 1 317 1 297 1 198 1 
349 1 275 2 352 1 210 1 77 1 296 2 151 2 29 2 301 3 250 1 8 4 135 2 87 1 260 4 336 1 158 2 34 2 196 3 182 1 366 1 161 1 267 1 198 2 18 1 344 2 317 4 19 4 269 2 21 1 
145 1 246 1 102 2 125 1 127 1 7 1 299 1 231 1 8 1 250 1 302 1 110 1 255 1 215 3 11 2 260 1 234 1 13 2 141 1 368 1 366 1 142 1 95 3 237 1 44 2 18 1 344 1 373 1 19 1 375 2 322 1 21 1 
245 2 158 1 34 1 352 1 225 2 296 1 263 4 236 1 151 1 297 4 289 2 29 1 204 2 135 1 269 2 
162 1 132 1 185 1 
334 1 132 1 163 1 160 1 185 1 
162 1 132 1 185 1 
162 1 132 1 185 1 
132 1 148 1 185 1 
132 1 148 1 185 1 
132 1 148 1 185 1 
132 1 185 1 
85 1 293 1 
246 2 5 2 7 2 133 7 84 1 302 9 330 2 31 3 257 1 258 1 11 4 234 2 142 2 68 3 236 1 310 9 312 4 373 18 205 2 170 3 347 1 
107 1 236 1 5 1 310 3 312 2 133 2 84 1 302 3 373 6 330 1 205 1 170 1 31 1 257 1 
11 2 246 1 234 1 142 1 94 1 68 1 342 1 310 2 7 1 312 1 133 2 302 2 373 4 170 1 177 1 31 1 259 1 
354 1 78 1 94 1 68 1 342 1 310 3 164 2 81 1 312 1 133 2 302 4 373 7 170 1 177 1 31 1 
246 1 354 1 5 2 7 1 57 1 133 6 84 1 302 8 330 2 31 2 258 1 257 1 11 2 234 1 142 1 68 3 310 7 164 1 312 3 373 15 205 1 170 2 190 1 347 1 
164 1 373 1 302 1 
373 1 354 1 310 1 
11 2 234 1 246 1 142 1 94 1 68 1 342 1 310 3 7 1 328 1 133 3 312 2 302 3 373 6 177 1 170 1 31 1 259 1 
246 1 174 1 354 1 78 1 7 1 133 2 357 1 358 1 302 6 177 2 31 2 11 2 234 1 261 1 142 1 68 1 94 2 116 1 342 2 265 1 310 6 164 1 312 1 373 12 170 2 
68 1 5 1 310 3 312 1 133 2 373 6 302 3 330 1 205 1 170 1 31 1 
11 2 246 1 234 1 142 1 68 1 5 1 310 1 7 1 133 2 312 1 57 1 84 1 302 2 373 3 330 1 258 1 257 1 
11 2 234 1 246 1 174 1 142 1 68 2 5 2 310 5 7 1 312 3 133 5 373 10 302 5 330 2 205 1 170 2 31 2 347 1 
11 2 174 1 246 1 234 1 142 1 68 1 310 2 7 1 133 1 373 2 177 1 31 1 
11 2 174 1 246 1 234 1 142 1 94 1 68 1 342 1 310 2 7 1 312 1 133 2 302 2 373 4 170 1 177 1 31 1 
11 6 174 1 246 3 234 3 337 1 142 3 68 1 5 1 310 1 7 3 57 1 312 1 133 2 302 2 373 3 330 1 258 1 
246 4 174 1 354 3 78 1 5 2 7 4 133 9 84 1 302 16 330 2 177 2 31 5 257 1 258 1 259 1 11 8 234 4 337 1 142 4 94 2 68 4 236 1 342 2 310 16 164 3 311 1 312 5 373 32 205 2 170 5 206 1 243 1 347 1 
246 1 174 1 354 1 78 1 5 2 7 1 133 5 84 1 302 8 330 2 31 3 257 1 11 2 234 1 142 1 68 1 236 1 116 1 310 8 164 1 312 4 373 16 205 2 170 3 347 1 
174 1 246 2 354 1 78 1 5 2 7 2 81 1 133 6 84 1 302 9 330 2 177 1 31 4 257 1 259 1 11 4 234 2 142 2 94 1 68 2 236 1 116 1 310 10 164 2 312 4 373 19 205 2 170 3 347 1 
246 3 174 1 354 1 78 1 5 2 7 3 133 7 357 1 84 1 358 1 302 14 330 2 177 2 31 5 257 1 258 1 259 1 11 6 234 3 261 1 142 3 68 2 94 2 236 1 116 1 342 2 265 1 310 13 164 1 312 5 373 27 205 2 170 5 347 1 
246 3 174 1 354 1 78 1 5 2 7 3 133 9 357 1 84 1 358 1 302 11 330 2 177 2 31 5 257 1 258 1 259 1 11 6 234 3 261 1 142 3 68 4 94 2 236 1 116 1 342 1 265 1 310 14 164 1 312 5 373 25 205 2 170 4 347 1 
246 1 174 1 354 1 78 1 5 2 7 1 133 5 84 1 302 8 330 2 31 3 257 1 11 2 234 1 142 1 68 1 236 1 116 1 310 8 164 1 312 4 373 16 205 2 170 3 347 1 
246 1 174 1 354 1 78 1 7 1 133 2 357 1 358 1 302 6 177 2 31 2 11 2 234 1 261 1 142 1 68 1 94 2 116 1 342 2 265 1 310 6 164 1 312 1 373 12 170 2 
246 4 174 1 354 1 78 1 5 2 7 4 133 7 357 1 84 1 358 1 302 12 330 2 177 2 31 5 257 1 258 2 259 1 11 8 234 4 261 1 142 4 68 2 94 2 236 1 116 1 342 1 265 1 310 14 164 1 312 5 373 26 205 2 170 4 347 1 
174 1 246 4 354 1 78 1 7 4 133 6 357 1 358 1 302 7 177 3 31 3 258 2 11 8 234 4 337 1 261 1 142 4 68 3 94 3 116 1 342 2 265 1 310 9 164 1 312 3 373 16 170 2 
68 3 5 3 310 3 312 3 133 6 84 2 302 4 373 7 330 3 205 1 170 1 31 1 257 1 
174 1 246 4 354 1 78 1 5 2 7 4 133 7 357 1 84 1 358 1 302 12 330 2 177 2 31 5 257 1 258 2 11 8 234 4 337 1 261 1 142 4 68 2 94 2 236 1 116 1 342 1 265 1 310 14 164 1 312 5 373 26 205 2 170 4 347 1 
102 1 110 1 254 1 95 1 172 1 49 1 215 1 
272 1 102 1 95 1 119 1 110 1 253 1 254 1 171 1 49 1 172 1 123 1 215 1 
260 1 349 1 250 1 18 1 8 1 344 1 107 1 19 1 366 1 87 1 21 1 
260 1 102 1 125 1 13 1 127 1 366 1 95 2 80 1 250 1 8 1 18 1 344 1 110 1 19 1 375 1 215 2 322 1 21 1 
260 1 102 2 275 1 262 1 125 1 218 1 13 1 127 2 366 2 95 2 80 1 250 1 8 1 18 1 110 1 19 1 168 1 178 1 375 2 215 2 322 1 100 1 21 3 
260 2 102 2 207 1 275 1 262 1 125 1 209 1 218 1 13 1 127 2 366 2 95 2 80 1 250 1 8 2 18 1 110 1 19 2 168 1 178 1 375 2 215 2 100 1 21 3 
207 1 295 1 275 1 225 1 127 1 297 1 230 1 301 2 8 3 250 1 260 3 63 1 196 2 262 1 218 1 366 1 219 1 18 1 344 1 317 1 99 1 19 3 21 4 
260 3 207 1 63 1 275 1 225 1 196 2 262 1 218 1 127 1 366 1 297 1 301 2 230 1 250 1 8 3 18 1 344 1 99 1 317 1 19 3 138 1 21 4 
260 1 250 1 18 1 8 1 19 1 227 1 
260 7 71 1 248 1 227 1 127 1 183 1 366 2 308 1 25 1 14 1 238 1 45 1 8 6 343 1 18 2 250 3 344 2 359 1 19 7 192 1 21 3 
145 2 102 1 50 1 51 1 5 2 7 2 8 1 279 1 330 2 110 3 280 1 11 4 285 1 234 2 13 1 68 1 236 1 199 1 238 1 237 2 240 1 18 1 19 1 205 2 168 1 170 3 347 1 21 1 246 2 125 1 127 1 80 1 133 5 250 1 84 1 302 7 255 1 31 3 257 1 215 2 260 1 368 1 142 2 366 1 95 2 310 7 312 4 48 1 373 14 322 1 375 1 
225 1 352 2 105 1 210 1 2 1 297 1 29 1 301 3 230 1 8 1 134 1 135 2 361 1 10 1 138 1 260 1 158 2 63 1 34 2 196 3 264 1 198 1 344 1 317 2 99 1 269 1 19 1 21 2 
157 1 260 2 63 1 227 1 127 1 366 1 25 1 238 1 8 2 18 1 250 2 19 2 21 2 
260 4 207 1 349 1 366 1 118 1 238 1 250 1 8 4 18 1 344 1 19 4 87 1 21 1 
260 2 350 1 275 1 127 1 366 1 308 1 370 1 8 2 343 1 18 1 250 2 19 2 213 1 21 1 
260 1 250 1 18 1 8 1 344 1 1 1 20 1 74 1 19 1 93 1 
238 1 260 2 250 1 18 1 8 2 359 1 126 1 19 2 366 1 14 1 21 1 
260 5 349 1 275 1 248 1 366 2 14 1 118 1 238 1 8 4 18 2 250 2 344 1 19 5 87 1 192 1 21 3 
260 5 349 1 275 1 193 1 366 2 14 1 118 1 238 1 8 4 18 2 250 2 344 1 19 5 87 1 192 1 21 3 
260 1 102 1 125 1 209 1 13 1 127 1 366 1 95 2 80 1 250 1 8 1 18 1 344 1 110 1 19 1 375 1 215 2 21 1 
260 1 275 1 127 1 183 1 366 1 308 1 25 1 8 1 343 1 18 1 250 2 19 1 21 1 
62 1 186 1 306 1 110 1 365 1 
23 1 62 2 225 1 306 1 196 2 365 2 355 1 307 1 297 1 301 2 186 2 46 1 110 1 99 1 360 1 168 1 178 1 10 1 100 1 
102 1 62 1 306 1 53 1 95 1 131 1 43 1 186 1 215 1 
23 1 306 1 307 1 
216 1 200 1 107 1 9 1 
324 1 216 1 200 1 64 1 36 1 9 1 235 1 
0 1 150 1 235 1 
324 1 216 1 64 3 36 1 15 1 235 3 369 1 30 1 200 1 313 1 315 2 9 1 
324 1 216 1 200 1 109 1 64 2 36 1 187 1 9 1 235 2 
324 1 64 1 287 1 104 1 1 1 36 1 235 1 313 1 329 1 20 1 9 1 
324 1 200 1 64 1 313 1 36 1 9 1 235 1 
324 1 216 1 200 2 64 1 313 1 36 1 235 1 
324 2 64 2 91 1 36 2 235 2 200 1 313 1 188 1 9 1 221 1 
324 1 216 1 64 3 104 1 36 1 235 3 79 1 153 1 200 1 313 1 187 2 320 1 9 2 
324 1 216 1 64 2 287 1 351 1 1 1 36 1 74 1 129 1 235 2 200 1 313 1 20 2 187 1 9 1 
324 2 216 1 64 4 104 1 36 2 235 4 200 1 109 1 313 1 202 1 187 2 320 1 9 2 
324 1 216 1 200 1 64 1 313 1 36 1 9 1 235 1 
324 1 216 2 64 4 104 1 36 1 369 1 235 4 30 1 200 2 315 1 189 1 187 2 320 1 9 3 
324 1 124 1 216 1 64 2 72 1 36 1 235 2 16 1 200 1 313 1 187 1 9 1 
324 1 216 1 64 3 36 1 369 1 235 3 30 2 200 1 313 1 232 1 315 2 9 1 
154 1 165 2 59 1 9 2 
327 1 324 1 64 1 313 1 36 1 235 1 
153 1 324 1 216 1 200 1 64 2 313 1 36 1 187 1 9 1 235 2 
139 1 
324 1 216 1 200 1 64 1 313 1 36 1 9 1 235 1 
153 1 324 1 216 1 200 1 64 3 313 1 315 1 36 1 187 1 9 1 235 3 
104 1 189 1 320 1 9 1 
200 1 9 1 

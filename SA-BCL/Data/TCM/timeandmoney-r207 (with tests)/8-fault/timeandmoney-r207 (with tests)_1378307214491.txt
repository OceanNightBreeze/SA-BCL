#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 117 (209,333) (209,333) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 117 (209,333) (209,333) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 117 (209,333) (209,333) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 117 (209,333) (209,333) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 211 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 211 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 211 197 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 39 23 321 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.IllegalArgumentException 39 200 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 249 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.IllegalArgumentException 39 23 321 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.IllegalArgumentException 39 200 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.IllegalArgumentException 39 23 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.IllegalArgumentException 39 232 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 899 | return null
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | RETURN | 4381 | return null
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V | CONDITION | 6304 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay; | RETURN | 495 | return null
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3022 | < -> !=
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | CONSTANT | 907 | 0 -> -1
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> -1
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> <=
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
203 1 133 1 117 1 209 1 162 1 103 1 269 1 333 1 105 1 2 1 291 1 
203 1 133 1 117 1 209 1 162 1 103 1 269 1 333 1 105 1 2 1 291 1 
203 1 133 1 117 1 209 1 162 1 103 1 269 1 333 1 105 1 2 1 291 1 
203 1 133 1 117 1 209 1 162 1 103 1 269 1 333 1 105 1 2 1 291 1 
110 1 24 3 41 3 160 1 216 1 103 1 2 4 105 4 199 1 175 1 233 1 145 2 336 1 203 1 148 1 368 1 269 1 38 2 
41 1 103 1 162 1 2 2 105 2 199 1 175 1 233 1 336 1 203 1 133 1 269 1 252 1 95 1 341 1 223 1 
41 2 24 1 160 1 103 2 162 1 2 3 105 3 175 1 145 1 336 1 5 1 203 2 269 1 
110 1 125 1 24 7 41 5 160 3 162 1 216 1 2 9 336 1 5 1 269 1 226 1 195 1 103 2 105 9 199 1 175 1 119 1 145 4 233 1 203 2 148 1 368 1 38 2 
110 1 125 1 24 7 41 5 160 3 162 1 216 1 2 9 336 1 5 1 269 1 226 1 195 1 103 2 105 9 199 1 175 1 119 1 145 4 233 1 203 2 148 1 368 1 38 2 
249 1 275 1 238 1 
107 2 275 1 171 1 
286 1 369 2 87 2 108 2 163 1 72 2 253 2 166 2 
124 1 242 1 350 1 87 2 187 1 163 1 246 1 165 1 72 3 265 1 166 2 8 2 283 1 253 2 286 1 137 1 115 2 174 1 56 1 194 1 32 2 312 1 141 1 196 1 290 1 60 1 292 1 369 3 294 1 108 2 20 2 262 1 263 1 372 1 37 1 375 1 66 2 
369 1 87 1 108 1 163 1 128 1 72 1 253 1 36 1 166 1 
28 1 102 1 300 1 72 1 304 1 218 1 359 1 369 1 81 1 49 1 275 1 75 1 238 1 253 1 
28 1 87 1 102 2 72 1 166 1 304 2 218 1 359 1 369 1 81 1 49 1 108 1 275 1 238 1 253 1 
310 1 221 1 102 1 306 1 304 1 
40 1 221 1 102 2 275 1 306 1 238 1 11 1 304 2 
221 1 102 1 304 1 
87 1 102 1 163 1 128 1 72 1 36 1 166 1 304 1 120 1 369 1 108 1 306 1 253 1 
275 1 
221 1 88 1 102 2 275 1 306 1 238 1 11 1 304 2 
278 1 158 2 212 4 87 1 163 1 128 1 72 1 166 1 131 1 304 5 221 2 250 1 306 2 253 1 11 1 136 1 225 1 139 1 30 1 31 2 59 1 102 5 314 1 35 4 363 1 231 1 36 1 120 1 369 1 108 1 275 1 153 2 238 1 22 1 155 1 
286 1 249 1 
324 1 286 2 87 1 217 1 72 2 166 1 369 2 108 1 253 2 
159 1 54 1 68 1 
124 1 242 1 286 1 137 1 115 1 174 1 32 1 187 1 141 1 246 1 72 1 369 1 20 1 262 1 375 1 376 1 
286 1 369 3 87 3 108 1 26 1 72 3 253 3 166 3 
369 1 87 1 72 1 253 1 36 1 166 1 
324 1 218 1 369 1 87 1 108 1 217 1 72 1 253 1 166 1 
124 1 324 1 242 1 87 3 187 1 163 1 246 1 72 4 265 1 166 3 304 1 218 1 359 1 49 1 26 1 8 2 283 1 253 3 28 1 286 1 137 1 115 1 174 1 56 1 102 1 32 1 312 1 141 1 196 1 290 1 60 1 292 1 369 4 81 1 295 1 108 2 20 1 235 1 236 1 262 1 372 1 37 1 375 1 66 1 
286 1 369 2 87 1 26 1 300 1 72 2 253 2 166 1 130 1 
324 1 28 1 87 3 102 1 245 1 72 3 166 3 304 1 218 1 359 1 369 3 81 1 295 1 49 1 108 1 26 2 275 1 235 1 253 3 
324 1 159 1 54 1 87 2 72 2 166 2 369 2 26 1 108 1 253 2 
124 1 242 1 286 1 137 1 115 1 174 1 32 1 187 1 141 1 246 1 72 1 369 1 20 1 262 1 375 1 
124 1 242 1 286 1 115 1 174 1 344 1 32 1 187 1 141 1 72 1 369 1 151 1 20 1 262 1 375 1 
158 1 159 2 327 1 68 2 165 2 335 1 8 2 283 1 94 1 271 1 97 1 360 1 54 2 31 1 312 1 313 1 290 1 60 1 18 1 292 1 276 1 372 1 37 2 66 4 
218 1 369 1 87 1 49 1 72 1 253 1 166 1 144 1 
124 1 159 1 242 1 137 1 115 1 174 1 87 1 32 1 187 1 141 1 246 1 72 2 166 1 369 2 26 1 20 1 235 1 262 1 253 1 375 1 
324 1 286 1 87 4 300 1 72 5 166 4 130 1 369 5 26 2 108 1 235 1 346 1 253 5 113 1 
369 1 87 1 72 1 253 1 36 1 166 1 
92 1 251 1 
92 1 251 1 
84 1 
84 1 
84 1 
92 1 190 1 251 1 
348 1 84 1 92 1 251 1 365 1 
92 1 251 1 298 1 
92 1 190 1 251 1 
92 1 190 1 251 1 
260 1 92 1 251 1 
260 1 92 1 251 1 
260 1 92 1 251 1 
14 1 184 1 85 2 102 2 89 1 188 1 281 2 304 2 106 3 167 1 132 2 47 1 92 2 305 1 73 1 275 1 251 2 191 2 285 2 
77 1 286 1 85 1 87 2 102 1 257 1 353 1 44 1 72 2 281 1 367 1 166 2 304 1 106 1 132 1 47 1 234 1 93 1 92 1 369 2 251 1 253 2 285 1 298 1 
233 1 148 1 199 1 
233 1 199 1 223 1 
282 1 148 2 256 1 199 3 223 1 82 1 
148 1 256 1 9 1 199 2 223 1 82 1 
148 1 256 2 199 2 223 1 82 1 
158 1 212 2 0 1 161 2 44 1 131 1 304 5 221 1 93 1 306 4 171 1 11 1 96 1 77 1 53 1 31 1 102 5 313 1 273 1 363 1 35 3 198 2 201 1 178 1 107 3 275 2 211 1 276 1 22 1 238 1 155 1 277 2 
158 1 212 2 161 2 304 7 131 1 221 4 27 3 306 5 7 1 171 1 11 1 96 1 77 2 53 1 310 3 116 1 30 1 31 1 102 7 313 1 363 1 35 3 198 2 201 1 107 3 150 1 275 3 211 1 276 1 238 1 22 1 155 1 
0 1 178 1 30 1 102 2 306 1 211 1 304 2 
0 1 178 1 30 1 102 1 211 1 197 1 304 1 
309 1 249 1 375 1 
375 1 16 1 
111 1 
187 1 375 1 
309 2 343 1 222 1 187 1 141 1 375 3 
187 1 141 1 375 1 
375 1 258 1 
278 1 158 1 327 3 139 1 31 1 354 1 165 4 335 2 62 1 338 1 337 2 79 1 250 1 37 3 374 1 156 1 66 7 
278 1 158 1 327 3 139 1 31 1 354 1 165 4 335 2 62 1 338 1 337 2 79 1 250 1 37 3 374 1 156 1 66 7 
278 1 158 1 327 3 139 1 31 1 354 1 1 1 165 4 335 2 62 1 338 1 79 1 337 2 250 1 37 3 374 1 156 1 66 7 
278 2 347 1 158 4 327 10 186 1 330 3 354 1 165 16 91 1 335 5 220 1 337 3 338 5 250 1 8 2 283 1 340 1 53 3 139 2 31 4 312 1 313 3 292 1 78 1 62 2 79 1 80 1 296 4 372 1 276 3 374 1 37 15 66 31 156 2 
278 1 158 1 327 4 139 1 31 1 186 1 312 2 165 5 335 3 292 2 62 1 79 1 338 1 337 2 250 1 283 2 8 4 112 1 372 2 374 1 37 4 76 1 156 1 66 9 
124 1 41 1 24 1 162 1 25 1 90 1 164 1 2 2 357 1 282 1 336 1 269 1 223 1 12 1 29 1 115 1 174 1 255 1 32 1 101 1 103 1 362 1 105 2 199 2 175 1 233 1 318 1 203 1 148 1 20 1 
124 1 243 1 41 1 24 2 42 1 162 1 25 1 90 1 2 3 282 1 336 1 223 1 51 1 12 1 29 1 115 1 174 1 255 1 32 1 101 1 103 1 362 1 105 3 199 2 175 1 233 1 318 1 203 1 148 1 20 1 
124 1 41 1 24 2 42 1 162 1 90 1 2 2 282 1 336 1 223 1 51 1 12 1 29 1 115 1 174 1 32 1 101 1 362 1 105 2 199 2 175 1 233 1 318 1 148 1 20 1 
124 1 308 1 12 2 29 2 243 1 115 1 174 1 32 1 187 1 162 2 103 1 90 2 2 1 105 1 168 1 259 1 203 1 20 1 262 1 154 1 339 1 375 1 10 1 
124 1 12 1 29 1 115 1 174 1 42 1 255 1 101 1 32 1 25 1 162 1 103 1 362 1 164 1 90 1 2 1 105 1 199 2 282 1 233 1 318 1 203 1 148 1 20 1 269 1 223 1 
261 1 
124 1 241 2 126 4 187 1 329 1 131 1 49 1 253 1 10 1 11 3 96 1 98 1 13 1 15 1 102 5 142 1 206 2 107 2 208 1 152 1 20 2 262 2 64 1 154 1 22 1 155 1 67 2 212 2 69 1 300 1 72 1 304 5 267 2 266 2 218 1 221 6 359 1 171 2 75 1 28 1 115 2 174 1 32 2 35 2 363 1 315 1 118 1 366 1 179 2 369 1 81 1 180 2 275 2 238 1 375 1 
67 1 28 1 13 1 126 2 88 1 102 3 69 1 300 1 315 1 118 1 366 1 72 1 304 3 218 1 221 2 359 1 81 1 369 1 49 1 75 1 253 1 11 1 
126 3 88 1 300 1 69 1 72 1 304 3 218 1 221 1 359 1 49 1 75 1 253 1 11 1 28 1 13 1 102 3 315 1 118 1 366 1 206 1 369 1 81 1 275 1 238 1 
67 1 126 3 88 1 300 1 69 1 72 1 304 3 218 1 359 1 221 2 49 1 75 1 253 1 11 1 28 1 13 1 102 3 315 1 118 1 366 1 206 1 369 1 81 1 180 1 275 1 238 1 
241 2 126 6 88 1 131 1 49 1 135 1 253 1 192 1 11 3 13 1 15 1 102 5 288 1 206 4 208 1 22 1 155 1 67 4 212 1 69 1 300 1 72 1 304 5 266 2 267 2 218 1 359 1 221 7 171 2 75 1 28 1 315 1 363 1 35 1 118 1 366 1 230 1 81 1 369 1 179 2 180 4 181 1 275 5 238 5 
241 2 126 4 131 1 49 1 253 1 11 2 13 1 15 1 102 4 206 2 107 2 208 1 64 1 22 1 155 1 67 2 212 1 300 1 69 1 72 1 304 4 266 2 267 2 218 1 359 1 221 4 171 2 75 1 28 1 363 1 315 1 35 1 118 1 366 1 81 1 369 1 179 2 180 2 275 2 238 1 
67 2 241 2 212 1 126 4 300 1 69 1 72 1 304 4 131 1 267 2 266 2 218 1 221 4 359 1 49 1 135 1 171 2 75 1 192 1 253 1 11 2 28 1 13 1 15 1 102 4 35 1 315 1 363 1 118 1 366 1 230 1 206 2 179 2 208 1 369 1 81 1 180 2 275 1 238 1 22 1 155 1 
67 2 241 2 212 1 126 4 300 1 69 1 72 1 304 4 131 1 267 2 266 2 218 1 221 4 359 1 49 1 135 1 171 2 75 1 192 1 253 1 11 2 28 1 13 1 15 1 102 4 35 1 315 1 363 1 118 1 366 1 230 1 206 2 179 2 208 1 369 1 81 1 180 2 275 1 238 1 22 1 155 1 
67 2 212 1 126 4 326 1 185 2 300 1 69 1 72 1 304 4 356 1 131 1 267 2 266 2 218 1 221 4 359 1 49 1 74 1 75 1 192 1 253 1 11 2 28 1 13 1 15 1 102 4 35 1 315 1 363 1 118 1 366 1 206 2 205 2 107 2 369 1 81 1 180 2 275 1 238 1 22 1 155 1 
67 3 241 2 212 1 126 5 300 1 69 1 72 1 131 1 304 4 267 2 266 2 218 1 359 1 221 5 49 1 135 1 171 2 75 1 192 1 253 1 11 2 28 1 13 1 15 1 102 4 35 1 363 1 315 1 118 1 230 1 366 1 206 3 179 2 208 1 369 1 81 1 180 3 181 1 275 1 238 1 22 1 155 1 
67 3 241 2 212 1 126 5 300 1 69 1 72 1 131 1 304 4 267 2 266 2 218 1 359 1 221 5 49 1 135 1 171 2 75 1 192 1 253 1 11 2 28 1 13 1 15 1 102 4 35 1 363 1 315 1 118 1 230 1 366 1 206 3 179 2 208 1 369 1 81 1 180 3 181 1 275 1 238 1 22 1 155 1 
67 2 212 1 126 4 185 2 69 1 300 1 72 1 131 1 304 4 267 2 266 2 218 1 221 4 359 1 49 1 74 1 75 1 253 1 11 2 28 1 13 1 15 1 102 4 35 1 315 1 363 1 118 1 366 1 206 2 205 2 107 2 369 1 81 1 180 2 275 1 64 1 238 1 22 1 155 1 
278 1 159 1 158 1 327 2 68 1 165 3 335 2 337 1 249 1 250 1 8 2 283 1 94 1 286 2 54 1 139 1 31 1 312 1 290 1 60 1 292 1 79 1 372 1 374 1 37 3 66 6 
159 11 158 1 327 2 68 11 350 1 330 3 302 1 165 8 265 1 129 1 335 1 48 1 338 1 8 4 283 2 340 1 286 1 53 2 54 4 31 2 312 2 313 2 143 1 274 1 290 2 60 1 292 2 80 1 296 3 372 2 276 1 37 6 66 14 
124 1 242 1 87 1 350 1 187 1 246 1 302 1 72 2 165 1 166 1 265 1 26 1 283 1 8 2 172 1 253 1 286 1 137 1 115 1 287 1 54 1 174 1 227 1 32 1 312 1 141 1 290 1 60 1 292 1 369 2 20 1 235 1 262 1 372 1 37 1 375 1 376 1 66 2 
278 1 124 2 242 2 327 8 42 1 87 1 187 2 246 2 335 4 337 1 338 4 250 1 8 6 283 3 253 1 193 2 286 2 137 2 53 2 54 7 139 1 196 2 141 2 290 3 60 3 17 2 292 3 20 3 262 1 66 20 158 3 159 7 68 7 350 1 70 1 302 1 303 1 72 3 165 10 265 1 166 1 358 1 26 1 272 2 115 3 174 2 31 3 32 3 312 3 313 2 79 1 369 3 235 1 237 2 372 3 276 2 374 1 37 10 375 2 
124 2 39 1 214 1 86 1 87 1 350 1 187 3 244 1 352 1 72 1 165 1 166 1 265 1 357 1 26 1 94 1 8 4 283 2 253 1 10 1 115 4 174 3 194 1 229 1 32 4 312 2 141 1 140 1 290 2 60 2 292 2 369 1 321 1 20 4 262 2 372 2 154 1 37 1 23 1 375 3 66 2 
324 1 159 1 158 1 327 1 68 1 87 1 302 1 72 1 165 1 166 1 335 1 8 2 283 1 173 1 253 1 53 1 54 1 31 1 312 1 313 1 290 1 60 1 292 1 369 1 108 1 372 1 276 1 37 2 66 3 
360 1 159 1 327 1 54 1 68 1 31 1 312 1 313 1 165 2 290 1 60 1 292 1 338 1 94 1 283 1 8 2 372 1 66 2 
159 1 158 1 327 1 54 1 68 1 312 1 290 1 60 1 335 1 292 1 94 1 283 1 8 2 372 1 276 1 37 2 271 1 66 2 
159 2 158 1 327 2 68 2 165 2 335 1 338 1 8 2 283 1 94 1 53 1 54 2 31 1 312 1 313 1 290 1 60 1 292 1 372 1 276 1 37 2 66 4 
360 1 159 1 327 1 54 1 68 1 31 1 312 1 244 1 313 1 165 2 290 1 60 1 292 1 338 1 283 1 8 2 372 1 66 2 
159 1 158 1 327 1 54 1 68 1 312 1 244 1 290 1 60 1 335 1 292 1 283 1 8 2 372 1 276 1 37 2 271 1 66 2 
159 2 158 1 327 2 68 2 244 1 165 2 335 1 338 1 8 2 283 1 53 1 54 2 31 1 312 1 313 1 290 1 60 1 292 1 372 1 276 1 37 2 66 4 
158 1 159 2 53 1 327 2 54 2 68 2 31 1 312 1 313 1 165 2 290 1 60 1 335 1 292 1 338 1 283 1 8 2 276 1 372 1 37 2 66 4 
124 1 242 1 350 1 187 1 246 1 165 1 72 1 265 1 283 1 8 2 286 1 137 1 115 1 174 1 32 1 312 1 141 1 196 1 290 1 60 1 292 1 369 1 20 1 262 1 372 1 37 1 375 1 66 2 
124 1 242 1 325 1 350 1 187 1 165 1 72 1 265 1 283 1 8 2 286 1 115 1 174 1 344 1 32 1 312 1 141 1 290 1 60 1 292 1 369 1 151 1 20 1 262 1 372 1 37 1 375 1 66 2 
159 2 158 1 327 2 68 2 302 1 165 2 335 1 338 1 8 2 283 1 53 1 54 2 31 1 312 1 313 1 290 1 60 1 292 1 372 1 276 1 37 2 66 4 
124 1 158 1 159 2 242 1 327 2 68 2 187 1 246 1 165 2 72 1 335 1 357 1 338 1 283 1 8 2 137 1 272 1 53 1 54 2 115 1 174 1 31 1 32 1 312 1 313 1 141 1 196 1 290 1 60 1 292 1 369 1 20 1 276 1 372 1 37 2 375 1 66 4 
324 1 158 1 159 1 327 1 68 1 87 1 302 1 72 1 165 2 166 1 338 1 8 2 283 1 253 1 53 1 54 1 31 1 312 1 313 1 290 1 60 1 292 1 345 1 369 1 108 1 276 1 372 1 37 1 66 3 
299 1 158 3 183 2 327 6 328 1 330 1 165 9 335 3 338 3 8 4 283 2 112 1 50 1 340 1 53 3 55 1 311 1 31 3 312 2 313 3 361 2 292 2 121 1 80 1 370 1 296 2 372 2 276 3 37 10 66 19 
158 2 327 4 183 4 279 1 186 2 328 1 330 2 280 1 165 14 335 2 338 2 8 6 283 3 112 1 50 1 99 1 53 3 55 2 311 1 31 3 312 3 313 3 361 1 292 3 176 1 80 2 370 2 371 1 296 2 372 3 276 2 37 12 109 1 66 26 
278 1 158 5 279 1 183 4 327 8 186 1 328 1 330 3 280 1 165 20 335 4 337 1 338 4 250 1 8 6 283 3 284 1 112 1 50 1 340 1 99 1 53 4 139 1 55 2 311 1 31 5 312 3 313 4 361 1 292 3 176 1 121 1 79 1 80 3 370 1 371 1 296 4 372 3 276 4 374 1 37 21 109 1 66 41 
278 1 158 4 279 1 183 4 327 7 186 2 328 1 330 3 280 1 165 20 335 4 337 1 338 3 250 1 8 8 283 4 284 1 112 1 50 1 340 1 99 1 53 4 139 1 55 2 311 1 31 5 312 4 313 4 361 1 292 4 176 1 121 1 79 1 80 3 370 1 371 1 296 4 372 4 276 3 374 1 37 18 109 1 66 38 
278 1 158 8 279 1 183 4 327 14 186 1 328 1 330 4 280 1 165 27 335 7 337 1 338 7 250 1 8 4 283 2 112 1 50 1 340 2 99 1 53 7 139 1 55 1 311 1 31 8 312 2 313 7 361 1 274 2 292 2 176 1 79 1 80 2 370 1 371 1 296 4 372 2 276 7 374 1 37 25 109 1 66 52 
132 1 85 1 92 1 305 1 134 1 89 1 188 1 251 1 281 1 285 1 
234 1 298 1 
132 1 4 1 85 1 92 1 320 1 215 1 251 1 281 1 285 1 
184 1 85 1 102 1 89 1 188 1 281 1 304 1 106 2 167 1 132 1 47 1 92 1 305 1 73 1 275 1 251 1 191 1 285 1 
184 1 85 1 102 1 89 1 188 1 281 1 304 1 106 2 167 1 132 1 47 1 92 1 305 1 73 1 275 1 251 1 191 1 285 1 
184 1 85 1 102 1 89 1 188 1 281 1 304 1 106 2 167 1 132 1 47 1 92 1 305 1 73 1 275 1 251 1 191 1 285 1 
348 1 190 1 254 1 
348 1 190 1 254 1 
61 1 260 1 
61 1 348 1 260 1 
257 1 367 1 
85 1 87 2 353 1 264 1 44 1 72 2 281 1 166 2 167 1 304 1 132 1 92 1 93 1 306 1 191 1 251 1 285 1 253 2 77 1 286 1 102 1 257 1 367 1 106 1 234 1 369 2 298 1 
190 1 254 1 
61 1 348 1 260 1 
124 1 39 1 214 1 86 1 350 1 187 2 352 1 302 1 72 2 165 1 265 1 283 1 8 2 253 2 115 2 174 2 57 1 194 2 229 1 32 2 58 1 312 1 141 1 140 1 290 1 200 1 60 1 292 1 19 1 369 2 20 2 372 1 323 1 37 1 375 2 66 2 
124 1 213 1 115 2 174 1 42 1 255 1 32 2 101 1 90 1 199 2 282 1 357 1 233 1 202 1 318 1 268 1 148 1 20 2 223 1 
124 1 115 1 42 1 174 1 255 1 32 1 101 1 90 1 199 2 247 1 282 1 233 1 318 1 268 1 148 1 20 1 223 1 
124 1 115 1 174 1 32 1 187 1 90 1 331 1 202 1 259 1 20 1 262 1 154 1 375 1 10 1 
124 1 213 1 115 1 174 1 42 1 255 1 32 1 101 1 90 1 199 2 282 1 233 1 202 1 318 1 268 1 148 1 20 1 223 1 
52 1 
249 1 
212 1 241 1 131 1 304 1 221 1 171 1 11 1 102 1 35 1 363 1 107 1 179 1 208 1 275 2 22 1 238 1 155 1 
124 1 187 1 131 3 46 2 6 1 96 2 11 3 53 2 102 5 141 1 198 6 16 3 17 2 147 1 107 12 152 1 20 1 262 1 22 3 155 3 157 2 212 7 158 2 349 2 161 6 304 5 221 5 359 2 222 1 171 6 307 2 309 2 115 1 174 2 31 2 32 1 313 2 35 8 363 3 322 1 275 7 276 2 238 1 122 2 375 6 
83 1 212 5 158 2 279 1 161 5 330 1 280 1 304 1 131 2 221 1 171 3 96 1 11 1 53 2 31 2 102 1 313 2 35 8 363 2 198 5 231 1 176 1 293 1 107 6 80 1 152 1 371 1 153 2 296 1 275 5 276 2 22 2 238 2 155 2 109 1 
278 1 212 2 158 1 87 1 163 1 128 1 72 1 166 1 131 1 304 1 250 1 253 1 139 1 31 2 102 1 314 1 363 1 35 2 230 1 231 1 36 1 120 1 369 1 108 1 153 2 22 1 155 1 
363 1 22 1 155 1 131 1 
221 1 102 1 275 1 238 1 304 1 11 1 
124 1 212 1 187 1 329 1 131 1 304 2 221 2 10 1 96 1 11 1 342 1 98 1 115 2 174 1 30 1 32 2 102 2 363 1 35 1 152 1 20 2 262 2 154 1 22 1 375 1 155 1 
124 1 242 1 87 2 187 1 163 1 246 1 72 3 265 1 166 2 8 2 283 1 253 2 286 1 137 1 115 1 174 1 56 1 32 1 312 1 196 1 141 1 290 1 60 1 292 1 369 3 20 1 108 2 262 1 372 1 37 1 375 1 66 1 
212 1 363 1 35 1 198 1 131 1 107 2 152 1 275 2 171 1 22 1 238 1 155 1 96 1 
85 1 34 1 281 1 
169 1 85 1 257 1 188 1 281 1 
85 1 34 1 281 1 
85 1 34 1 281 1 
85 1 281 1 114 1 
85 1 281 1 114 1 
85 1 281 1 114 1 
85 1 281 1 
92 1 251 1 
278 1 158 1 327 3 139 1 31 1 186 1 312 2 165 4 335 2 292 2 337 1 338 1 79 1 250 1 283 2 8 4 372 2 37 4 374 1 66 8 
278 1 158 1 327 2 139 1 31 1 165 3 335 2 337 1 79 1 249 1 250 1 37 3 374 1 66 6 
158 1 53 1 327 2 31 1 312 1 313 1 33 1 165 2 335 1 292 1 338 1 283 1 8 2 276 1 372 1 37 2 66 4 
158 1 53 1 327 2 31 1 330 1 313 1 165 3 335 1 338 1 80 1 296 2 276 1 37 4 340 1 66 7 
278 2 158 3 327 9 186 2 127 1 330 2 165 11 335 5 48 1 337 1 338 4 250 1 283 2 8 4 340 1 53 2 139 2 31 3 312 2 313 2 274 1 292 2 79 1 296 2 276 2 372 2 374 1 37 12 66 23 
296 1 37 1 66 1 
330 1 165 1 66 1 
158 1 53 1 327 3 31 1 312 1 313 1 33 1 165 3 17 1 292 1 335 2 338 1 8 2 283 1 372 1 276 1 37 3 66 6 
158 2 279 1 327 2 330 1 280 1 165 6 335 1 338 1 8 2 283 1 112 1 53 2 31 2 312 1 313 2 292 1 176 1 80 1 296 1 371 1 372 1 276 2 37 6 66 12 109 1 
278 1 158 1 327 2 139 1 31 1 165 3 335 1 338 1 250 1 37 3 66 6 
278 1 327 2 139 1 186 1 127 1 312 1 165 1 335 1 292 1 338 1 79 1 283 1 8 2 372 1 37 2 374 1 66 3 
278 2 158 2 327 5 139 2 31 2 312 1 314 1 165 5 292 1 335 3 338 2 250 1 8 2 283 1 112 1 372 1 37 5 66 10 
327 1 31 1 312 1 313 1 165 2 292 1 338 1 283 1 8 2 112 1 372 1 66 2 
158 1 53 1 327 2 31 1 312 1 313 1 165 2 335 1 292 1 338 1 283 1 8 2 112 1 276 1 372 1 37 2 66 4 
278 1 327 2 139 1 186 1 127 1 312 3 165 1 292 3 335 1 121 1 338 1 283 3 8 6 112 1 372 3 37 2 66 3 
278 3 347 1 158 5 327 12 186 2 127 1 330 3 165 16 335 7 220 1 337 1 338 5 250 2 8 10 283 5 112 1 340 1 53 3 139 3 31 5 312 5 313 3 33 1 78 1 292 5 121 1 79 1 80 1 296 4 372 5 276 3 374 1 37 18 66 34 
278 1 158 1 327 2 330 1 165 4 335 2 337 1 250 1 8 2 283 1 112 1 139 1 31 1 312 1 292 1 176 1 79 1 80 1 296 1 372 1 37 4 374 1 66 8 
278 1 158 1 327 3 330 1 165 6 335 2 337 1 338 1 250 1 8 4 283 2 112 1 340 1 53 1 139 1 31 2 312 2 313 1 33 1 292 2 176 1 79 1 80 1 296 2 372 2 374 1 37 5 66 11 
278 1 158 3 279 1 327 4 186 1 330 1 280 1 165 9 335 3 337 1 338 1 250 1 8 6 283 3 112 1 53 2 139 1 31 3 312 3 313 2 33 1 292 3 176 1 79 1 80 1 296 1 371 1 372 3 276 2 374 1 37 10 109 1 66 19 
278 1 158 2 279 1 327 5 186 1 330 1 280 1 165 10 335 3 337 1 338 2 250 1 8 6 283 3 112 1 53 2 139 1 31 3 312 3 313 2 33 1 292 3 176 1 79 1 80 1 296 1 371 1 372 3 276 1 374 1 37 7 66 17 109 1 
278 1 158 1 327 2 330 1 165 4 335 2 337 1 250 1 8 2 283 1 112 1 139 1 31 1 312 1 292 1 176 1 79 1 80 1 296 1 372 1 37 4 374 1 66 8 
158 2 279 1 327 2 330 1 280 1 165 6 335 1 338 1 8 2 283 1 112 1 53 2 31 2 312 1 313 2 292 1 176 1 80 1 296 1 371 1 372 1 276 2 37 6 66 12 109 1 
278 1 158 2 279 1 327 5 186 2 330 1 280 1 165 10 335 3 337 1 338 2 250 1 8 8 283 4 112 1 53 2 139 1 31 3 312 4 313 2 33 1 292 4 176 1 79 1 80 1 371 1 296 1 372 4 276 1 374 1 37 8 109 1 66 18 
158 2 279 1 327 6 186 2 330 1 280 1 165 9 335 3 338 3 8 8 283 4 112 1 53 3 31 3 312 4 313 3 292 4 176 1 121 1 80 1 371 1 296 1 372 4 276 2 37 7 109 1 66 16 
278 3 158 1 327 6 139 3 31 1 165 3 335 3 79 2 338 3 250 1 37 4 374 1 66 7 
278 1 158 2 279 1 327 4 186 2 330 1 280 1 165 10 335 3 337 1 338 1 250 1 8 8 283 4 112 1 53 2 139 1 31 3 312 4 313 2 292 4 176 1 121 1 79 1 80 1 371 1 296 1 372 4 276 1 374 1 37 8 109 1 66 18 
286 1 369 1 300 1 301 1 72 1 253 1 130 1 
286 1 301 1 300 1 72 1 3 1 130 1 219 1 177 1 149 1 369 1 253 1 224 1 
124 1 115 1 174 1 249 1 32 1 187 1 20 1 262 1 154 1 375 1 10 1 
124 1 242 1 286 1 137 1 115 1 174 1 87 1 32 1 187 1 141 1 72 2 166 1 369 2 26 1 20 1 262 1 253 1 375 1 
124 1 242 1 87 2 187 2 72 2 166 1 218 1 49 1 26 1 253 2 286 1 137 1 115 1 174 1 32 1 141 2 364 1 258 1 369 2 81 1 20 1 373 1 375 3 
124 1 242 1 87 2 187 2 72 2 166 1 218 1 49 1 26 1 253 2 286 1 115 2 174 1 344 1 32 2 141 2 364 1 258 1 369 2 81 1 20 2 373 1 297 1 375 3 
124 1 43 1 187 1 304 2 221 1 359 1 309 1 115 3 174 1 32 3 102 2 141 1 364 1 316 1 16 1 258 1 20 3 275 1 262 1 373 1 238 1 297 1 375 4 
124 1 157 1 309 1 115 3 174 1 102 2 32 3 187 1 141 1 364 1 258 1 16 1 304 2 359 1 221 1 20 3 275 1 262 1 238 1 373 1 297 1 375 4 
124 1 115 1 174 1 32 1 20 1 270 1 
124 2 39 1 115 3 214 1 174 4 86 2 229 2 32 3 187 3 140 1 141 2 45 1 357 1 222 1 321 1 20 3 262 2 23 1 375 3 
124 1 278 1 242 1 327 2 87 1 187 1 246 1 335 2 337 1 250 1 8 4 283 2 253 1 137 1 286 2 54 1 139 1 57 1 196 1 141 1 290 2 60 2 292 2 20 1 66 6 158 1 159 1 68 1 302 1 72 2 165 3 166 1 357 1 26 1 272 1 115 1 174 1 31 1 32 1 312 2 79 1 369 2 237 1 372 2 374 1 37 3 375 1 
212 1 157 1 349 1 355 1 131 2 304 3 46 1 221 2 359 1 306 1 11 1 342 1 309 1 115 1 102 3 32 1 35 1 363 2 317 1 16 1 20 1 275 1 262 1 238 1 22 2 155 2 122 1 375 2 
124 1 309 1 115 2 174 2 32 2 187 1 141 1 357 1 222 1 20 2 322 1 270 1 375 2 
124 1 115 4 174 1 32 4 187 1 334 1 357 1 20 4 262 1 154 1 297 1 10 1 375 1 
124 1 115 2 214 1 174 2 86 1 229 1 32 2 187 1 70 1 140 1 141 1 364 1 20 2 375 1 
124 1 233 1 115 1 174 1 101 1 32 1 20 1 262 1 199 1 223 1 
124 1 39 1 115 2 174 2 42 1 214 1 86 1 229 1 32 2 187 2 140 1 141 1 200 1 357 1 20 2 375 2 
124 1 39 1 115 2 174 2 214 1 86 1 229 1 32 2 187 2 140 1 141 1 357 1 20 2 262 1 23 1 375 2 
124 1 39 1 115 2 174 2 214 1 86 1 229 1 32 2 187 2 140 1 141 1 357 1 232 1 20 2 262 1 375 2 
124 1 242 1 286 1 115 1 174 1 87 1 344 1 32 1 187 1 141 1 72 2 166 1 369 2 26 1 20 1 262 1 253 1 375 1 
124 1 115 1 174 2 86 1 229 1 32 1 187 1 141 1 364 1 45 1 222 1 20 1 375 1 
240 1 58 1 72 1 19 1 207 1 369 1 182 1 323 1 253 1 
170 1 228 1 182 1 
240 1 286 1 207 1 182 1 239 1 
240 2 28 1 286 1 228 1 102 2 304 2 218 1 359 1 170 1 319 1 207 2 81 1 49 1 295 1 275 1 182 1 306 1 238 1 239 2 
336 1 41 1 249 1 175 1 
336 1 41 1 203 1 103 1 105 1 2 1 175 1 
29 1 162 1 105 1 
41 1 103 1 2 3 105 3 189 1 175 1 146 1 336 1 203 1 269 1 65 1 341 2 
336 1 41 1 24 1 203 1 103 1 105 2 2 2 38 1 175 1 
41 1 103 1 2 1 105 1 199 1 145 1 233 1 203 1 148 1 368 1 269 1 
336 1 41 1 203 1 103 1 269 1 105 1 2 1 
336 2 203 1 103 1 269 1 105 1 2 1 175 1 
41 1 100 1 103 2 2 2 105 2 336 1 203 2 204 1 248 1 269 1 
145 1 336 1 41 2 24 2 226 1 203 1 160 1 195 1 103 1 269 1 105 3 2 3 175 1 
41 1 24 1 103 1 2 2 105 2 199 2 175 1 282 1 233 1 336 1 203 1 148 1 269 1 223 1 123 1 
24 2 41 2 160 1 103 2 216 1 2 4 105 4 175 1 145 1 336 1 203 2 269 1 38 1 
336 1 41 1 203 1 103 1 269 1 105 1 2 1 175 1 
24 2 41 3 160 1 103 1 332 1 189 1 2 4 105 4 175 2 145 1 146 1 336 2 203 1 341 1 
125 1 41 1 24 1 103 1 104 1 2 2 105 2 175 1 336 1 203 1 269 1 21 1 
41 1 103 1 2 3 105 3 189 2 175 1 146 1 336 1 203 1 269 1 63 1 341 2 
41 2 210 2 289 1 71 1 
203 1 351 1 103 1 269 1 105 1 2 1 
336 1 41 1 24 1 226 1 203 1 103 1 269 1 105 2 2 2 175 1 
138 1 
336 1 41 1 203 1 103 1 269 1 105 1 2 1 175 1 
24 1 41 1 226 1 103 1 2 3 105 3 175 1 336 1 203 1 269 1 341 1 
145 1 41 1 160 1 332 1 
336 1 41 1 

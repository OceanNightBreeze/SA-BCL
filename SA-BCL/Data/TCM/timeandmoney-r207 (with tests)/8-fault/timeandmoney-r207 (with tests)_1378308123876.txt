#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException (93,133) 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 87 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (93,133) 310 3 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 112 101 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (93,133) 310 293 (68,336) (68,336) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1711 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1159 | 1 -> 0
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONDITION | 5650 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 2
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7744 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2932 | 1 -> 0
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3677 | stmt -> ;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2771 | return null
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
335 9 140 1 71 1 25 2 340 2 47 1 362 1 169 9 49 1 172 3 314 1 11 2 317 1 14 5 271 1 104 2 197 1 35 1 36 1 251 2 229 2 206 2 205 6 130 1 252 4 39 1 40 1 21 1 
335 9 140 1 71 1 25 2 340 2 47 1 362 1 169 9 49 1 172 3 314 1 11 2 317 1 14 5 271 1 104 2 197 1 35 1 36 1 251 2 229 2 206 2 205 6 130 1 252 4 39 1 40 1 21 1 
335 10 140 1 71 1 25 2 340 2 47 1 362 1 169 10 49 1 172 4 314 1 11 2 317 1 14 6 271 1 104 2 197 1 35 1 36 1 251 2 229 2 206 2 205 7 130 1 252 5 39 1 40 1 21 1 
335 7 140 1 71 1 25 1 340 2 47 1 362 1 169 7 49 1 172 2 314 1 11 2 14 4 271 1 104 2 197 1 35 1 36 1 251 2 229 2 206 2 205 4 130 1 252 3 39 1 40 1 21 1 
335 4 14 3 104 1 25 2 340 1 47 1 169 4 362 1 36 1 251 1 229 1 172 1 205 3 130 1 252 2 314 1 11 1 317 1 
14 1 335 2 271 1 197 1 104 1 340 1 47 1 169 2 36 1 251 1 229 1 206 1 129 1 314 1 86 1 366 1 
335 3 14 2 71 1 340 2 47 1 169 3 36 1 251 2 206 1 172 1 205 1 252 1 314 1 
335 9 71 1 25 2 340 2 47 1 169 9 362 1 172 3 314 1 11 1 317 1 14 5 104 1 16 1 35 1 182 1 36 1 251 2 229 1 206 1 205 7 130 1 252 4 39 1 
335 9 71 1 25 2 340 2 47 1 169 9 362 1 172 3 314 1 11 1 317 1 14 5 104 1 16 1 35 1 182 1 36 1 251 2 229 1 206 1 205 7 130 1 252 4 39 1 
304 1 201 1 286 1 
298 2 24 1 286 1 
179 2 225 1 316 2 263 2 181 2 356 2 83 2 79 1 
259 2 338 1 1 1 235 1 45 1 72 1 91 1 263 2 285 1 9 1 215 1 54 1 78 2 98 1 343 2 316 2 318 2 345 1 79 1 295 2 179 2 225 1 372 1 273 1 348 1 62 1 181 2 109 1 158 1 83 2 132 1 134 1 356 2 
179 1 55 1 66 1 132 1 316 1 263 1 181 1 356 1 83 1 79 1 
179 1 139 1 258 1 263 1 200 1 286 1 244 1 207 1 96 1 232 1 304 1 316 1 132 1 289 1 
179 1 139 1 258 2 263 1 181 1 286 1 83 1 207 1 96 2 232 1 304 1 316 1 132 1 289 1 356 1 
0 1 258 1 96 1 100 1 202 1 
258 2 96 2 308 1 214 1 304 1 100 1 202 1 286 1 
258 1 96 1 100 1 
258 1 179 1 60 1 263 1 181 1 202 1 83 1 55 1 96 1 66 1 132 1 316 1 356 1 79 1 
286 1 
258 2 96 2 214 1 304 1 100 1 374 1 202 1 286 1 
258 5 2 1 214 1 191 1 263 1 360 1 92 1 8 2 170 1 74 2 143 1 286 2 145 1 55 1 96 5 315 1 316 1 100 2 149 2 221 1 59 2 79 1 178 1 179 1 369 2 297 2 60 1 103 4 181 1 202 2 159 1 83 1 66 1 132 1 304 2 162 1 356 1 138 5 
225 1 201 1 
179 2 347 1 225 2 263 2 181 1 83 1 148 1 316 2 356 1 
133 1 87 1 310 1 
259 1 225 1 273 1 348 1 98 1 132 1 187 1 318 1 345 1 295 1 
259 1 179 1 19 1 98 1 316 1 133 1 348 1 263 1 318 1 356 1 195 1 345 1 295 1 83 1 
179 5 347 1 225 1 263 5 200 1 181 1 83 4 19 2 316 5 344 1 356 4 195 1 292 1 152 1 
179 2 55 1 132 1 316 2 263 2 42 1 356 2 83 2 
179 3 19 1 225 1 316 3 263 3 181 1 356 3 83 3 
179 1 55 1 132 1 316 1 263 1 356 1 83 1 
179 1 347 1 132 1 148 1 316 1 263 1 181 1 356 1 83 1 
165 1 139 1 258 1 259 1 235 1 45 1 72 1 91 1 263 3 192 1 9 1 215 1 54 1 78 1 96 1 98 1 343 2 316 3 289 1 318 1 195 1 345 1 79 1 295 1 179 3 347 1 225 1 62 1 348 1 181 2 158 1 83 3 207 1 19 1 232 1 132 1 134 1 356 3 
179 2 19 1 225 1 316 2 263 2 200 1 356 1 292 1 83 1 
165 1 258 1 179 3 139 1 347 1 263 3 181 1 286 1 83 3 207 1 96 1 19 2 232 1 132 1 316 3 289 1 195 1 356 3 33 1 
179 2 347 1 263 2 181 1 83 2 19 1 316 2 133 1 87 1 356 2 
259 1 225 1 273 1 348 1 98 1 132 1 318 1 345 1 295 1 
259 1 225 1 80 1 263 1 94 1 277 1 174 1 253 1 56 1 98 1 316 1 354 1 318 1 295 1 248 1 
235 1 45 1 72 1 325 1 62 1 215 1 9 1 93 1 54 1 78 1 112 1 343 2 149 1 368 1 
179 1 132 1 316 1 289 1 263 1 42 1 356 1 83 1 
350 1 330 1 
350 1 330 1 
230 1 284 1 
230 1 284 1 
230 1 284 1 
350 1 183 1 330 1 
22 1 350 1 330 1 
230 1 284 1 350 2 188 1 69 1 330 2 
350 1 183 1 330 1 
350 1 183 1 330 1 
361 1 350 1 330 1 
361 1 350 1 330 1 
361 1 350 1 330 1 
258 1 22 1 261 1 263 2 50 1 242 1 287 1 96 1 316 2 179 2 122 1 15 1 225 1 350 1 330 1 328 1 83 2 65 1 351 1 255 1 211 1 356 2 257 1 306 1 
44 2 258 2 224 1 155 1 350 2 239 1 330 2 50 2 286 1 65 2 287 2 242 2 96 2 255 1 186 1 135 1 188 1 32 1 257 3 
104 1 11 1 229 1 
129 1 104 1 229 1 
129 1 104 3 11 2 210 1 121 1 291 1 
129 1 104 2 11 1 254 1 121 1 291 1 
129 1 104 2 11 1 291 1 121 2 
258 5 358 1 2 1 24 1 214 1 359 1 8 1 363 1 267 1 286 2 193 1 96 5 100 1 149 1 101 1 367 1 59 1 15 1 369 1 298 2 297 1 103 2 198 1 126 1 328 1 202 4 204 1 351 1 112 1 304 1 208 2 138 2 
0 5 337 1 258 9 212 1 2 1 24 3 214 1 191 1 359 3 8 2 267 2 118 1 286 5 193 3 96 9 100 6 149 3 101 3 196 1 59 2 369 2 298 6 297 3 103 5 198 3 126 2 202 7 275 1 204 1 351 4 352 1 112 3 304 1 138 6 375 5 
258 3 358 1 24 1 191 1 359 1 263 1 8 1 267 1 286 2 193 1 55 1 96 3 316 1 149 1 367 1 101 1 59 1 79 1 179 1 369 1 297 1 298 2 60 1 103 2 198 1 181 1 126 1 202 2 83 1 351 1 66 1 112 1 132 1 304 1 208 1 356 1 138 2 
337 1 191 1 8 1 286 3 193 2 55 1 96 4 149 2 101 2 196 1 59 1 297 2 298 4 103 3 60 1 198 2 202 3 351 2 66 1 112 2 304 1 208 2 356 1 258 4 358 1 24 2 359 2 263 1 267 1 118 1 316 1 367 1 79 1 179 1 369 1 181 1 126 1 83 1 132 1 138 4 
323 1 80 1 201 1 
111 1 80 1 
20 1 
174 1 80 1 248 1 
281 1 80 1 
174 1 80 1 
268 1 174 1 323 2 80 3 17 1 248 1 
336 1 1 4 235 3 297 1 124 1 228 3 143 1 78 7 278 1 315 1 68 1 85 1 333 2 149 1 13 1 221 1 293 2 
336 1 1 4 235 3 297 1 124 1 228 3 143 1 78 7 278 1 315 1 68 1 85 1 333 2 149 1 13 1 221 1 293 2 
336 1 1 4 235 3 297 1 124 1 228 3 143 1 173 1 78 7 278 1 315 1 68 1 85 1 333 2 149 1 13 1 221 1 293 2 
280 1 1 3 235 3 72 1 9 1 143 1 243 1 54 1 146 1 78 6 315 1 343 2 176 1 219 1 13 1 293 1 124 2 62 1 228 2 276 1 278 1 333 1 85 1 137 1 
336 1 1 5 235 4 72 2 9 2 143 1 171 1 54 2 78 9 315 1 343 4 219 1 149 1 13 1 221 1 293 2 370 1 297 1 124 1 62 2 228 4 68 1 333 3 85 1 
335 2 357 1 259 1 340 1 47 1 169 2 240 1 94 1 77 1 314 1 11 1 313 1 318 1 295 1 270 1 14 1 299 1 104 2 326 1 81 1 36 1 250 1 251 1 229 1 205 1 206 1 277 1 129 1 334 1 210 1 
335 3 357 1 259 1 23 1 340 1 47 1 169 3 240 1 94 1 77 1 314 1 11 1 313 1 318 1 295 1 14 1 104 2 125 1 326 1 81 1 250 1 251 1 229 1 160 1 206 1 205 2 277 1 129 1 334 1 210 1 
335 2 357 1 259 1 47 1 169 2 240 1 94 1 77 1 314 1 313 1 11 1 318 1 295 1 14 1 104 2 125 1 326 1 81 1 229 1 160 1 206 1 205 2 277 1 129 1 210 1 
335 1 259 1 357 2 339 1 23 1 80 1 272 1 340 1 169 1 326 2 142 1 251 1 94 1 206 2 277 1 174 1 98 1 313 2 318 1 151 1 220 1 290 1 295 1 
335 1 357 1 259 1 340 1 169 1 240 1 94 1 77 1 11 1 313 1 318 1 295 1 299 1 104 2 326 1 81 1 36 1 250 1 251 1 229 1 160 1 206 1 277 1 129 1 334 1 210 1 
190 1 
139 1 189 1 234 2 2 1 8 1 142 1 286 2 94 1 244 1 96 5 97 1 98 2 342 1 147 1 99 2 100 6 289 1 59 1 295 2 294 1 102 2 298 2 103 2 200 1 207 1 304 1 307 1 258 5 259 2 24 2 214 3 263 1 267 1 27 2 174 1 218 4 316 1 318 2 30 1 31 2 179 1 369 1 272 1 80 1 180 2 327 1 277 1 128 1 231 1 279 2 232 1 132 1 136 1 138 2 43 1 
258 3 179 1 139 1 234 1 214 1 263 1 200 1 327 1 374 1 128 1 207 1 244 1 96 3 231 1 218 2 232 1 342 1 132 1 316 1 100 2 289 1 30 1 
139 1 258 3 214 1 263 1 286 1 244 1 96 3 342 1 218 3 316 1 100 1 289 1 30 1 31 1 179 1 200 1 327 1 374 1 128 1 207 1 231 1 232 1 132 1 304 1 
258 3 179 1 139 1 234 1 102 1 214 1 263 1 200 1 327 1 374 1 286 1 128 1 207 1 244 1 96 3 231 1 218 3 232 1 342 1 304 1 132 1 316 1 100 2 289 1 30 1 31 1 
88 1 307 1 258 5 139 1 234 4 2 1 24 2 214 3 5 1 264 1 263 1 8 1 286 5 10 1 27 2 244 1 96 5 119 1 342 1 218 6 316 1 99 2 100 7 289 1 30 1 31 4 59 1 179 1 369 1 102 4 103 1 180 2 200 1 327 1 374 1 128 1 207 1 231 1 279 2 232 1 304 5 132 1 136 1 138 1 
139 1 234 2 2 1 8 1 286 2 244 1 96 4 342 1 99 2 289 1 100 4 59 1 102 2 298 2 103 1 200 1 207 1 304 1 258 4 307 1 24 2 214 2 263 1 27 2 218 4 316 1 30 1 31 2 179 1 369 1 180 2 327 1 128 1 231 1 279 2 232 1 132 1 136 1 138 1 43 1 
88 1 307 1 139 1 258 4 234 2 2 1 214 2 24 2 263 1 264 1 8 1 286 1 10 1 27 2 244 1 96 4 342 1 218 4 316 1 99 2 100 4 289 1 30 1 31 2 59 1 179 1 102 2 369 1 103 1 180 2 200 1 327 1 128 1 207 1 231 1 279 2 232 1 304 1 132 1 136 1 138 1 
88 1 307 1 139 1 258 4 234 2 2 1 214 2 24 2 263 1 264 1 8 1 286 1 10 1 27 2 244 1 96 4 342 1 218 4 316 1 99 2 100 4 289 1 30 1 31 2 59 1 179 1 102 2 369 1 103 1 180 2 200 1 327 1 128 1 207 1 231 1 279 2 232 1 304 1 132 1 136 1 138 1 
88 1 307 1 139 1 258 4 234 2 2 1 214 2 90 2 263 1 8 1 286 1 244 1 96 4 342 1 218 4 316 1 269 1 99 2 29 1 100 4 289 1 30 1 31 2 59 1 179 1 102 2 369 1 298 2 103 1 180 2 200 1 327 1 82 1 127 2 128 1 207 1 231 1 232 1 304 1 132 1 138 1 
88 1 307 1 139 1 258 4 234 3 2 1 214 2 24 2 5 1 264 1 263 1 8 1 286 1 10 1 27 2 244 1 96 4 342 1 218 5 316 1 99 2 289 1 100 5 30 1 31 3 59 1 179 1 369 1 102 3 103 1 180 2 200 1 327 1 128 1 207 1 231 1 279 2 232 1 304 1 132 1 136 1 138 1 
88 1 307 1 139 1 258 4 234 3 2 1 214 2 24 2 5 1 264 1 263 1 8 1 286 1 10 1 27 2 244 1 96 4 342 1 218 5 316 1 99 2 289 1 100 5 30 1 31 3 59 1 179 1 369 1 102 3 103 1 180 2 200 1 327 1 128 1 207 1 231 1 279 2 232 1 304 1 132 1 136 1 138 1 
307 1 258 4 139 1 234 2 2 1 214 2 90 2 263 1 8 1 286 1 244 1 96 4 342 1 218 4 316 1 99 2 29 1 100 4 289 1 30 1 31 2 59 1 179 1 102 2 369 1 298 2 103 1 180 2 200 1 327 1 127 2 128 1 207 1 231 1 232 1 304 1 132 1 138 1 43 1 
336 1 1 3 45 1 235 3 72 1 9 1 215 1 143 1 310 1 54 1 78 6 315 1 343 2 149 1 221 1 293 1 297 1 225 2 62 1 325 1 228 2 201 1 133 1 68 1 333 2 87 1 
117 1 1 7 235 4 45 2 72 2 9 2 215 1 310 7 54 2 78 11 120 1 343 4 176 2 149 1 101 2 346 1 297 2 322 1 225 1 273 1 198 2 62 2 109 1 276 2 203 1 112 1 132 1 133 7 134 1 87 1 164 1 
259 1 1 1 45 1 235 1 72 1 263 1 215 1 9 1 76 1 54 1 95 1 78 2 98 1 316 1 343 2 318 1 195 1 345 1 295 1 179 1 322 1 225 1 348 1 62 1 329 1 109 1 83 1 19 1 187 1 134 1 87 1 356 1 
259 1 1 3 45 2 235 3 3 1 72 2 263 1 51 1 215 2 9 2 310 2 54 2 78 6 98 1 316 1 343 4 149 1 318 1 101 1 195 1 345 1 153 1 295 1 179 1 297 1 371 1 322 1 198 1 348 1 62 2 158 1 83 1 19 1 112 1 113 1 133 2 134 1 87 2 356 1 
259 7 338 2 1 1 45 2 235 1 72 2 141 1 73 1 263 1 48 1 142 1 9 2 215 2 94 2 54 2 174 2 78 2 175 1 98 2 316 1 343 4 365 1 318 8 270 1 295 8 179 1 80 3 272 1 325 1 62 2 107 1 109 1 83 1 160 1 277 2 19 1 134 1 305 1 356 1 
1 1 45 1 235 1 72 1 263 1 9 1 215 1 54 1 78 2 343 2 316 1 149 1 101 1 150 1 179 1 347 1 297 1 322 1 198 1 62 1 181 1 83 1 112 1 356 1 
1 2 45 1 297 1 72 1 198 1 325 1 62 1 228 1 215 1 9 1 310 1 54 1 78 2 343 2 133 1 85 1 163 1 87 1 
45 1 235 1 72 1 325 1 62 1 215 1 9 1 54 1 78 1 112 1 343 2 149 1 368 1 
1 2 235 1 45 1 297 1 72 1 198 1 325 1 62 1 215 1 9 1 310 1 54 1 78 3 112 1 343 2 133 1 149 1 87 1 101 1 
1 2 45 1 297 1 72 1 198 1 62 1 228 1 48 1 215 1 9 1 310 1 54 1 78 2 343 2 133 1 85 1 163 1 87 1 
45 1 235 1 72 1 62 1 48 1 215 1 9 1 54 1 78 1 112 1 343 2 149 1 368 1 
1 2 235 1 45 1 297 1 72 1 198 1 62 1 48 1 215 1 9 1 310 1 54 1 78 3 112 1 343 2 133 1 149 1 87 1 101 1 
1 2 235 1 45 1 297 1 72 1 198 1 62 1 215 1 9 1 310 1 54 1 78 3 112 1 343 2 133 1 149 1 87 1 101 1 
259 1 1 1 45 1 235 1 72 1 215 1 9 1 54 1 78 2 98 1 343 2 318 1 345 1 295 1 225 1 273 1 62 1 348 1 109 1 158 1 132 1 134 1 
259 1 1 1 45 1 235 1 72 1 263 1 215 1 9 1 94 1 54 1 174 1 78 2 56 1 98 1 316 1 343 2 318 1 248 1 295 1 225 1 80 1 62 1 109 1 277 1 253 1 131 1 354 1 134 1 
1 2 235 1 45 1 297 1 322 1 72 1 198 1 62 1 215 1 9 1 310 1 54 1 78 3 112 1 343 2 133 1 149 1 87 1 101 1 
259 1 1 1 235 1 297 1 45 1 72 1 198 1 348 1 62 1 158 1 9 1 215 1 54 1 78 2 112 1 343 2 113 1 149 1 318 1 101 1 345 1 270 1 295 1 
1 2 235 2 45 1 72 1 263 1 6 1 9 1 215 1 310 1 54 1 78 4 343 2 316 1 149 1 101 1 179 1 347 1 297 1 322 1 198 1 62 1 181 1 83 1 112 1 133 1 87 1 356 1 
336 1 213 1 89 3 1 17 235 12 72 3 283 1 265 1 143 1 9 3 241 1 171 1 54 3 288 1 78 29 315 1 343 6 219 1 176 2 149 4 101 3 221 1 293 1 321 1 297 4 156 1 198 3 62 3 228 4 331 1 276 2 38 1 84 1 161 1 112 3 41 1 68 1 333 1 85 3 137 2 114 1 
89 4 1 14 235 9 237 1 72 2 283 1 265 1 9 2 241 2 171 1 54 2 288 1 78 23 343 4 219 1 176 2 149 2 101 3 321 2 297 3 156 1 198 3 62 2 228 1 331 1 276 2 38 1 84 1 112 2 41 1 85 1 114 1 137 2 
336 1 89 4 1 19 235 14 237 1 283 1 238 1 9 3 143 1 241 1 288 1 54 3 343 6 149 4 101 3 293 1 297 4 156 1 198 3 62 3 161 1 112 3 68 1 114 1 72 3 265 1 171 1 78 33 315 1 176 3 219 1 221 1 321 2 228 5 331 1 276 3 38 1 84 1 41 1 85 4 333 1 137 3 
336 1 89 4 1 18 235 13 237 1 72 3 283 1 265 1 143 1 9 3 241 1 171 1 54 3 288 1 78 31 315 1 343 6 219 1 176 2 149 4 101 3 221 1 293 1 321 1 297 4 156 1 198 3 62 3 228 4 331 1 276 2 38 1 84 1 161 1 112 3 41 1 68 1 333 1 85 3 137 2 114 1 
89 4 1 14 235 10 237 1 72 2 283 1 265 1 9 2 241 1 171 1 54 2 288 1 78 24 343 4 219 1 176 2 149 3 101 3 321 1 297 3 156 1 198 3 62 2 228 2 331 1 276 2 38 1 84 1 112 3 41 1 85 2 137 2 114 1 
242 1 287 1 186 1 209 1 350 1 188 1 32 1 330 1 50 1 65 1 
22 1 261 1 
242 1 287 1 34 1 301 1 350 1 7 1 330 1 50 1 65 1 
249 1 183 1 
166 1 361 1 69 1 
44 1 258 1 224 1 155 1 350 1 330 1 50 1 286 1 65 1 287 1 242 1 96 1 255 1 186 1 135 1 188 1 32 1 257 2 
44 1 258 1 224 1 155 1 350 1 330 1 50 1 286 1 65 1 287 1 242 1 96 1 255 1 186 1 135 1 188 1 32 1 257 2 
44 1 258 1 224 1 155 1 350 1 330 1 50 1 286 1 65 1 287 1 242 1 96 1 255 1 186 1 135 1 188 1 32 1 257 2 
249 1 69 1 183 1 
249 1 69 1 183 1 
166 1 361 1 
166 1 361 1 69 1 
122 1 306 1 
44 1 70 1 258 1 22 1 261 1 263 2 50 1 242 1 287 1 96 1 316 2 122 1 179 2 15 1 225 1 350 1 202 1 330 1 328 1 65 1 83 2 351 1 135 1 211 1 356 2 257 1 306 1 
259 2 338 2 1 1 45 1 235 1 72 1 263 2 215 1 9 1 94 1 54 1 174 1 78 2 316 2 343 2 365 1 318 2 223 1 295 2 179 2 154 1 322 1 80 1 62 1 274 1 107 1 109 1 18 1 277 1 134 1 256 1 
259 2 104 2 326 1 108 1 240 1 52 1 229 1 94 1 160 1 129 1 277 1 77 1 11 1 67 1 334 1 210 1 318 2 295 2 270 1 
259 1 104 2 326 1 108 1 240 1 229 1 160 1 94 1 129 1 77 1 277 1 11 1 334 1 210 1 318 1 222 1 295 1 
259 1 80 1 272 1 326 1 142 1 52 1 144 1 94 1 277 1 174 1 98 1 318 1 151 1 295 1 
259 1 104 2 326 1 108 1 240 1 52 1 229 1 160 1 94 1 129 1 277 1 77 1 11 1 67 1 334 1 210 1 318 1 295 1 
4 1 
145 1 103 1 304 1 201 1 138 1 159 1 286 1 
258 1 2 1 24 1 214 1 8 1 286 2 27 1 96 1 100 1 59 1 369 1 298 1 103 1 279 1 304 1 136 1 138 1 
281 2 2 4 282 1 3 2 8 4 286 6 94 3 193 4 145 1 341 1 96 5 98 1 147 1 100 5 58 1 149 2 101 2 59 4 248 3 295 3 298 8 297 2 103 7 61 2 198 2 106 2 64 1 17 1 159 1 110 2 111 3 353 2 112 2 304 2 259 3 258 5 260 2 214 3 24 4 359 4 267 2 266 1 174 3 318 3 270 1 178 2 369 4 323 2 80 10 277 4 232 2 233 2 138 8 
2 1 24 3 283 1 359 4 8 1 286 3 193 4 288 1 120 1 176 2 149 4 101 4 59 1 369 1 298 6 297 4 103 7 198 4 331 1 276 2 38 1 84 1 112 4 137 1 138 7 164 1 
258 1 2 1 263 1 360 1 264 1 8 1 74 2 143 1 55 1 96 1 315 1 316 1 149 1 59 1 221 1 79 1 178 1 179 1 369 1 297 2 103 2 60 1 181 1 83 1 66 1 132 1 356 1 138 2 
369 1 2 1 103 1 8 1 159 1 286 1 145 1 304 1 59 1 138 1 
297 1 298 2 103 1 24 1 198 1 359 1 286 1 193 1 112 1 149 1 101 1 138 2 
258 1 96 1 214 1 304 1 100 1 286 1 
259 4 258 3 189 1 2 1 214 2 191 1 8 2 267 2 142 1 94 1 174 1 96 3 98 2 57 1 147 2 100 4 58 1 318 4 59 2 294 1 295 4 369 2 103 2 80 1 272 1 226 1 64 2 277 1 138 2 
179 2 259 1 235 1 45 1 72 1 225 1 62 1 348 1 91 1 263 2 181 2 158 1 9 1 215 1 83 2 54 1 78 1 98 1 343 2 316 2 134 1 318 1 356 2 345 1 79 1 295 1 
369 1 298 4 2 1 103 1 24 2 359 2 8 1 267 1 286 4 193 2 304 2 147 1 138 2 59 1 293 1 
262 1 50 1 65 1 
122 1 303 1 32 1 50 1 65 1 
262 1 50 1 65 1 
262 1 50 1 65 1 
177 1 50 1 65 1 
177 1 50 1 65 1 
177 1 50 1 65 1 
50 1 65 1 
350 1 330 1 
336 1 1 4 297 1 235 4 72 2 62 2 228 3 9 2 143 1 54 2 78 8 315 1 343 4 68 1 85 1 333 2 219 1 149 1 221 1 293 1 
336 1 1 3 235 3 297 1 228 2 201 1 143 1 78 6 315 1 68 1 333 2 149 1 221 1 293 1 
1 2 235 1 297 1 72 1 198 1 62 1 9 1 54 1 78 3 28 1 112 1 343 2 149 1 101 1 
1 1 78 2 235 1 176 1 137 1 276 1 
336 1 1 13 235 11 72 1 360 1 143 2 9 1 54 1 78 24 120 1 315 2 343 2 176 2 219 1 149 5 101 2 221 2 293 1 297 5 198 2 62 1 228 6 276 2 203 1 112 2 68 1 333 4 85 2 164 1 
78 1 235 1 276 1 
1 1 78 1 176 1 
1 3 297 1 78 5 235 2 112 1 3 1 198 1 85 1 149 1 228 1 101 1 
1 6 235 4 72 1 283 1 9 1 171 1 288 1 54 1 78 10 343 2 176 1 149 2 101 2 297 2 198 2 62 1 228 1 331 1 276 1 38 1 84 1 112 2 85 1 137 1 
1 3 297 1 235 3 228 2 143 1 78 6 315 1 333 1 85 1 149 1 221 1 
336 1 280 1 1 1 235 2 72 1 62 1 228 2 143 1 9 1 54 1 78 3 315 1 343 2 68 1 85 1 333 1 219 1 
1 5 235 5 297 2 72 1 62 1 360 1 228 5 9 1 143 2 171 1 54 1 78 10 315 2 343 2 333 3 85 2 149 2 221 1 
1 2 297 1 72 1 198 1 62 1 228 1 9 1 171 1 54 1 78 2 343 2 85 1 
1 2 235 1 297 1 72 1 198 1 62 1 228 1 9 1 171 1 54 1 78 3 112 1 343 2 85 1 149 1 101 1 
280 1 1 1 235 2 72 3 62 3 228 2 9 3 143 1 171 1 161 1 54 3 78 3 315 1 343 6 219 1 333 1 85 1 
280 1 336 1 1 7 235 8 72 4 360 1 9 4 143 2 171 1 54 4 146 1 78 15 28 1 315 2 343 8 176 1 219 1 149 2 221 1 297 2 62 4 228 6 276 1 161 1 68 1 85 3 333 3 137 1 
336 1 1 14 235 9 72 2 283 1 360 1 143 2 9 2 171 1 288 1 54 2 78 23 315 2 343 4 219 1 176 1 149 4 101 2 221 2 293 1 297 5 198 2 62 2 228 8 331 1 276 1 38 1 84 1 112 1 68 1 333 4 85 4 137 1 
336 1 1 10 235 6 72 3 283 1 143 1 9 3 171 1 288 1 54 3 78 16 315 1 28 1 343 6 219 1 176 1 149 2 101 2 221 1 293 1 297 3 198 2 62 3 228 3 331 1 276 1 38 1 84 1 112 1 68 1 333 2 85 1 137 1 
1 6 235 4 72 2 283 1 9 2 171 1 288 1 54 2 78 10 28 1 343 4 176 1 149 2 101 2 297 2 198 2 62 2 228 1 331 1 276 1 38 1 84 1 112 2 85 1 137 1 
336 1 1 10 235 6 72 3 283 1 143 1 9 3 171 1 288 1 54 3 78 16 315 1 28 1 343 6 219 1 176 1 149 2 101 2 221 1 293 1 297 3 198 2 62 3 228 4 331 1 276 1 38 1 84 1 112 1 68 1 333 2 85 2 137 1 
336 1 1 14 235 9 72 2 283 1 360 1 143 2 9 2 171 1 288 1 54 2 78 23 315 2 343 4 219 1 176 1 149 4 101 2 221 2 293 1 297 5 198 2 62 2 228 8 331 1 276 1 38 1 84 1 112 1 68 1 333 4 85 4 137 1 
1 6 235 4 72 1 283 1 9 1 171 1 288 1 54 1 78 10 343 2 176 1 149 2 101 2 297 2 198 2 62 1 228 1 331 1 276 1 38 1 84 1 112 2 85 1 137 1 
1 7 235 3 72 3 283 1 9 3 171 1 288 1 54 3 78 10 28 1 343 6 219 1 176 1 149 1 101 2 297 2 198 2 62 3 228 1 331 1 276 1 38 1 84 1 112 1 85 1 137 1 
1 7 235 3 72 3 283 1 9 3 171 1 288 1 54 3 78 10 343 6 219 1 176 1 149 1 101 2 297 2 198 2 62 3 228 2 331 1 276 1 38 1 84 1 161 1 112 1 85 2 137 1 
336 2 1 3 235 4 297 1 228 6 143 3 78 7 315 3 68 1 333 3 85 3 149 1 221 1 
1 7 235 3 72 3 283 1 9 3 171 1 288 1 54 3 78 10 343 6 219 1 176 1 149 1 101 2 297 2 198 2 62 3 228 1 331 1 276 1 38 1 84 1 161 1 112 1 85 1 137 1 
75 1 179 1 225 1 316 1 263 1 200 1 292 1 
179 1 296 1 225 1 263 1 200 1 75 1 185 1 245 1 316 1 246 1 115 1 292 1 
94 1 259 1 277 1 174 1 98 1 80 1 272 1 318 1 201 1 142 1 295 1 
179 1 259 1 225 1 273 1 348 1 263 1 83 1 19 1 98 1 132 1 316 1 318 1 356 1 295 1 
179 1 259 1 225 1 273 1 348 1 263 1 64 1 83 1 19 1 132 1 316 1 318 1 356 1 295 1 
259 2 281 1 263 2 94 1 174 2 56 1 316 2 289 1 318 2 295 2 248 2 179 2 225 1 80 3 324 1 64 1 83 2 277 1 207 1 253 1 19 1 132 1 233 1 356 1 
259 1 258 2 263 1 286 1 55 1 96 2 316 1 100 1 318 1 319 1 295 1 79 1 179 1 60 1 323 1 80 2 181 1 64 1 83 1 111 1 66 1 232 1 132 1 304 1 356 1 
258 2 259 3 281 1 323 1 80 4 324 1 64 1 286 1 94 1 277 1 110 1 174 1 96 2 111 1 98 1 232 1 304 1 100 1 318 3 233 1 248 1 295 3 
94 1 259 1 277 1 175 1 318 1 295 1 
259 6 338 1 80 3 168 1 141 1 73 1 107 1 17 1 160 1 94 2 277 3 174 2 175 1 12 1 98 2 318 7 305 1 320 1 270 1 295 7 248 1 
336 1 259 1 1 3 235 2 45 2 72 2 263 1 143 1 215 2 9 2 51 1 310 1 54 2 78 5 315 1 316 1 343 4 149 1 318 1 221 1 345 1 293 1 270 1 295 1 179 1 297 1 322 1 225 2 62 2 348 1 228 1 158 1 18 1 83 1 19 1 113 1 133 1 68 1 333 1 356 1 
259 1 258 3 260 1 2 2 214 1 8 2 286 1 145 1 96 3 98 1 100 2 58 1 318 1 59 2 295 1 369 2 103 1 323 1 80 2 106 1 202 1 159 1 110 1 111 1 353 1 232 1 304 1 138 1 
259 2 323 1 80 2 17 1 94 1 277 2 174 1 341 1 175 1 318 2 270 1 295 2 248 1 
259 4 272 1 80 1 324 1 63 1 142 1 94 1 277 1 174 1 98 1 318 4 295 4 270 1 
259 2 80 1 199 1 168 1 349 1 64 1 373 1 94 1 277 2 174 1 12 1 318 2 295 2 248 1 
94 1 259 1 129 1 277 1 104 1 98 1 318 1 240 1 229 1 295 1 
94 1 160 1 259 2 277 1 174 1 80 1 107 1 318 2 223 1 295 2 270 1 
259 4 272 1 80 3 63 1 73 1 141 1 107 1 64 1 142 1 94 2 277 2 174 2 98 1 318 5 295 5 270 1 
259 4 272 1 80 3 63 1 141 1 107 1 64 1 142 1 94 2 277 2 174 2 98 1 318 5 355 1 295 5 270 1 
179 1 259 1 225 1 80 1 263 2 83 1 94 1 277 1 174 1 253 1 56 1 19 1 98 1 316 2 318 1 356 1 248 1 295 1 
259 1 80 1 168 1 64 1 17 1 94 1 277 2 174 1 12 1 318 1 320 1 295 1 248 1 
154 1 179 1 105 1 157 1 274 1 263 1 217 1 316 1 256 1 
311 1 157 1 247 1 
217 1 332 1 225 1 105 1 157 1 
165 1 258 2 139 1 225 1 105 2 157 1 309 1 202 1 286 1 311 1 217 2 332 2 207 1 96 2 232 1 304 1 132 1 289 1 247 1 
14 1 314 1 47 1 201 1 
14 1 335 1 314 1 340 1 47 1 169 1 251 1 
206 1 357 1 169 1 
14 1 335 3 236 1 197 2 46 1 340 1 169 3 47 1 36 1 251 1 194 1 314 1 
14 1 335 2 205 1 314 1 25 1 340 1 47 1 169 2 251 1 
335 1 14 1 104 1 340 1 169 1 362 1 36 1 251 1 229 1 252 1 11 1 
14 1 335 1 340 1 47 1 169 1 36 1 251 1 
335 1 314 1 340 1 47 2 169 1 36 1 251 1 
14 1 335 2 340 2 47 1 169 2 227 1 36 1 26 1 251 2 312 1 
335 3 14 2 340 1 47 1 169 3 35 1 36 1 251 1 205 2 172 1 252 1 39 1 314 1 
14 1 335 2 104 2 300 1 340 1 47 1 169 2 36 1 251 1 229 1 205 1 129 1 314 1 11 1 210 1 
335 4 14 2 25 1 340 2 47 1 169 4 36 1 251 2 205 2 172 1 252 1 314 1 317 1 
14 1 335 1 314 1 340 1 47 1 169 1 36 1 251 1 
335 4 14 3 236 1 197 1 167 1 340 1 47 2 169 4 251 1 205 2 172 1 252 1 194 1 314 2 
14 1 335 2 123 1 340 1 16 1 47 1 169 2 36 1 251 1 184 1 205 1 314 1 
14 1 335 3 236 2 197 2 340 1 169 3 47 1 36 1 251 1 194 1 314 1 116 1 
14 2 37 2 53 1 302 1 
335 1 340 1 169 1 36 1 364 1 251 1 
14 1 335 2 205 1 314 1 340 1 47 1 169 2 35 1 36 1 251 1 
216 1 
14 1 335 1 314 1 340 1 47 1 169 1 36 1 251 1 
14 1 335 3 205 1 197 1 314 1 340 1 47 1 169 3 35 1 36 1 251 1 
14 1 172 1 252 1 167 1 
14 1 47 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 248 279 296 322 (327,349) (327,349) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 248 279 296 322 (327,349) (327,349) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 248 279 296 322 (327,349) (327,349) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 248 279 296 322 (327,349) (327,349) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 248 279 296 322 152 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 248 279 296 322 152 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (232,277) (181,234) (181,234) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 290 301 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 260 345 51 180 45 324 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (281,326,351) (132,147,222) (132,147,222) (132,147,222) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (27,102) 142 260 345 51 211 64 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 116 320 225 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 286 (198,202) (198,202) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 260 345 51 180 57 170 161 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 260 345 51 180 57 170 161 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 260 345 51 180 57 170 161 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 260 345 51 180 57 170 161 
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (232,277) (232,277) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 290 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 201 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (232,277) (181,234) (181,234) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (232,277) (181,234) (181,234) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (232,277) (181,234) (181,234) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 233 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 233 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 75 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 75 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 290 301 259 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 233 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 75 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (281,326,351) (281,326,351) (281,326,351) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 190 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 260 345 51 180 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 260 345 51 211 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 260 345 51 180 45 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 260 345 51 180 227 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 116 320 225 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 116 44 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException 248 279 296 322 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8289 | = null
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money; | RETURN | 5040 | return null
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration; | RETURN | 900 | return null
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> <
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | OPERATOR | 11448 | != -> ==
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval; | CONSTANT | 5642 | 1 -> 0
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 3
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
317 1 306 1 327 1 275 2 82 1 83 2 309 1 138 1 322 1 252 1 162 4 279 2 362 2 97 1 209 4 248 2 296 2 145 1 357 1 334 1 79 1 349 1 
317 1 306 1 327 1 275 2 82 1 83 2 309 1 138 1 322 1 162 4 252 1 279 2 362 2 97 1 209 4 248 2 296 2 145 1 357 1 334 1 79 1 349 1 
317 1 306 1 327 1 275 2 82 1 83 2 309 1 138 1 322 1 162 4 252 1 279 2 362 2 97 1 209 4 248 2 296 2 145 1 357 1 334 1 79 1 349 1 
317 1 306 1 327 1 275 2 82 1 83 2 309 1 138 1 322 1 162 4 252 1 279 2 362 2 97 1 209 4 248 2 296 2 145 1 357 1 334 1 79 1 349 1 
131 1 1 2 306 3 134 1 275 1 82 1 182 1 162 4 252 1 8 1 362 1 279 2 97 1 209 4 31 1 296 1 248 3 334 1 
325 1 60 1 275 1 82 1 83 1 138 1 162 2 8 1 354 1 362 1 209 2 97 1 248 1 31 1 145 1 334 1 
306 1 275 2 83 1 162 3 8 1 362 2 279 1 209 3 31 1 296 1 248 2 334 1 357 1 
306 2 275 2 83 1 322 1 152 1 162 4 311 1 362 2 279 2 209 4 248 2 296 2 334 1 357 1 79 1 
306 2 275 2 83 1 322 1 152 1 162 4 311 1 362 2 279 2 209 4 248 2 296 2 334 1 357 1 79 1 
220 1 159 1 323 1 
323 1 108 1 270 2 
96 2 344 2 34 1 332 2 348 2 328 2 340 2 95 1 
115 2 308 1 328 2 95 1 52 1 192 2 96 3 29 1 123 1 215 1 255 1 314 2 332 2 10 1 173 1 76 1 258 1 12 1 286 1 80 1 101 1 130 1 236 1 34 1 202 1 160 1 339 1 238 1 243 2 340 3 344 2 294 1 163 1 348 2 210 1 299 1 42 1 300 2 146 1 
96 1 344 1 332 1 348 1 173 1 67 1 328 1 340 1 95 1 251 1 
200 1 0 1 328 1 329 1 244 1 340 1 220 1 96 1 323 1 221 1 254 1 297 1 173 1 285 1 
200 1 0 2 328 1 329 1 340 1 220 1 344 1 96 1 323 1 221 1 348 1 332 1 297 1 173 1 285 2 
0 1 319 1 204 1 11 1 285 1 
220 1 217 1 323 1 153 1 0 2 204 1 11 1 285 2 
0 1 204 1 285 1 
0 1 14 1 328 1 95 1 340 1 251 1 344 1 96 1 348 1 332 1 11 1 173 1 67 1 285 1 
323 1 
220 1 217 1 323 1 0 2 204 1 11 1 285 2 37 1 
217 1 0 5 204 2 49 1 15 1 106 1 119 2 179 1 91 1 6 1 140 2 220 1 323 1 11 2 216 1 285 5 166 2 224 1 288 1 
159 1 34 1 
34 2 328 2 340 2 96 2 344 1 348 1 332 1 298 1 165 1 
9 1 142 1 27 1 
34 1 62 1 308 1 243 1 340 1 192 1 96 1 29 1 123 1 314 1 10 1 210 1 258 1 286 1 146 1 130 1 
308 1 27 1 328 1 243 1 340 2 192 1 96 2 123 1 29 1 314 1 348 1 332 1 10 1 154 1 210 1 258 1 146 1 58 1 286 1 130 1 
344 1 96 3 34 1 332 3 348 3 328 3 58 1 340 3 
96 1 332 1 348 1 173 1 67 1 328 1 340 1 
96 1 344 1 332 1 348 1 173 1 298 1 165 1 328 1 340 1 
115 1 88 1 0 1 308 1 329 1 328 3 95 1 192 1 96 4 123 1 29 1 255 1 314 1 332 3 10 1 154 1 76 1 258 1 173 1 12 1 285 1 286 1 58 1 101 1 130 1 236 1 200 1 34 1 202 1 160 1 243 1 340 4 344 2 221 1 294 1 141 1 348 3 210 1 297 1 299 1 42 1 300 2 165 1 146 1 
96 2 34 1 254 1 24 1 332 1 348 1 328 2 340 2 58 1 
200 1 0 1 328 3 329 1 340 3 228 1 344 1 96 3 323 1 221 1 141 1 348 3 332 3 154 1 297 1 173 1 165 1 285 1 58 2 
328 2 27 1 340 2 344 1 96 2 9 1 348 2 332 2 165 1 58 1 
34 1 308 1 243 1 340 1 192 1 96 1 29 1 123 1 314 1 10 1 210 1 258 1 286 1 146 1 130 1 
34 1 308 1 243 1 340 1 192 1 139 1 96 1 29 1 123 1 314 1 10 1 229 1 258 1 146 1 130 1 
115 4 25 1 4 1 27 2 255 1 9 2 76 1 12 2 99 1 32 1 101 1 236 1 102 1 160 1 260 1 35 1 206 1 142 2 163 2 41 1 264 1 265 1 42 1 300 2 
96 1 221 1 332 1 348 1 173 1 328 1 127 1 340 1 
34 1 24 1 185 1 328 5 340 5 361 1 96 5 344 1 254 1 348 4 332 4 154 1 165 1 58 2 
96 2 332 2 348 2 173 1 67 1 127 1 328 2 340 2 
68 1 
68 1 
43 1 21 1 
43 1 21 1 
43 1 21 1 
68 1 
68 1 
68 1 
43 1 21 1 68 2 
68 1 
68 1 
68 1 
68 1 
0 2 289 1 118 2 71 1 90 2 181 1 323 1 85 2 346 1 333 2 232 1 128 2 285 2 234 1 68 2 
0 1 290 1 214 1 118 1 90 1 240 1 328 1 340 1 96 1 208 1 85 1 346 1 348 1 332 1 333 1 301 1 285 1 128 1 68 1 
97 1 82 1 252 1 
325 1 97 1 82 1 
325 1 358 1 82 3 17 1 267 1 252 2 
325 1 358 1 249 1 82 2 267 1 252 1 
325 1 358 2 82 2 252 1 267 1 
270 3 0 5 350 1 25 1 214 1 187 1 119 1 53 2 11 4 285 5 288 2 217 1 204 1 61 1 133 1 260 1 205 1 106 3 35 1 240 1 140 1 84 2 345 1 220 1 208 1 108 1 38 1 323 2 265 1 166 1 224 1 114 2 
270 9 0 9 25 3 89 1 119 2 6 1 53 6 278 1 313 1 11 7 282 1 285 9 288 6 217 1 318 1 319 5 204 6 133 2 260 3 205 2 106 8 35 3 207 1 240 4 140 2 84 6 345 3 220 1 108 3 323 5 38 1 109 5 265 3 166 2 224 1 
270 4 0 3 25 1 187 1 119 1 6 1 53 2 11 2 285 3 288 2 61 1 133 1 205 1 260 1 106 3 35 1 240 1 140 1 220 1 345 1 84 2 323 3 108 2 265 1 166 1 114 1 
270 7 0 4 25 2 89 1 187 1 119 1 53 4 6 1 313 1 11 3 285 4 288 4 318 1 61 1 133 1 205 1 260 2 106 5 35 2 240 2 140 1 220 1 84 4 345 2 323 4 108 3 265 2 166 1 114 2 
159 1 258 1 310 1 
258 1 196 1 
113 1 
258 1 130 1 
23 1 144 1 258 3 308 1 310 2 130 1 
258 1 308 1 130 1 
258 1 66 1 
115 7 25 1 169 1 104 1 291 1 330 1 125 1 163 4 56 1 263 1 264 2 223 1 174 1 12 3 265 1 99 3 316 2 
115 7 25 1 169 1 104 1 291 1 330 1 125 1 163 4 56 1 263 1 264 2 223 1 174 1 12 3 265 1 99 3 316 2 
115 7 25 1 169 1 104 1 291 1 330 1 183 1 125 1 163 4 56 1 263 1 264 2 223 1 174 1 12 3 265 1 99 3 316 2 
324 1 45 1 115 5 260 1 291 2 180 1 51 1 345 1 163 4 223 1 265 1 12 1 316 1 158 1 100 1 
115 9 25 1 169 1 50 1 330 1 255 2 125 1 257 1 56 1 12 4 99 4 316 2 101 2 203 1 160 2 104 1 291 1 163 5 263 1 223 1 264 3 265 1 42 2 300 4 
147 1 132 1 177 1 275 1 351 1 83 1 63 1 162 1 222 1 124 1 362 1 295 1 209 1 302 1 334 1 
325 1 147 1 306 2 275 1 189 1 351 1 252 1 192 1 29 1 8 1 124 1 314 1 97 1 31 1 78 1 219 1 83 1 82 2 243 1 63 1 17 1 162 3 222 1 295 1 362 1 40 1 209 3 248 1 302 1 146 1 
325 1 306 2 189 1 351 1 192 1 252 1 29 1 8 1 124 1 314 1 97 1 31 1 78 1 219 1 83 1 82 2 243 1 63 1 17 1 162 2 222 1 295 1 209 2 248 1 146 1 
275 1 83 2 242 1 243 1 73 1 63 2 162 1 192 1 29 1 124 2 314 1 295 2 40 1 362 1 10 1 209 1 230 1 315 1 155 1 258 1 146 1 130 1 235 1 
325 1 147 1 275 1 351 1 252 1 192 1 29 1 124 1 314 1 97 1 334 1 78 1 132 1 219 1 83 1 82 2 243 1 63 1 17 1 162 1 222 1 295 1 362 1 209 1 302 1 146 1 
93 1 
269 1 270 2 0 5 2 1 5 1 149 1 328 1 329 1 192 2 96 1 10 2 230 1 285 5 287 1 288 2 200 1 59 2 204 6 105 1 106 2 243 2 244 1 340 1 108 2 212 1 297 1 213 2 166 1 303 2 117 2 119 1 120 1 74 1 29 1 355 2 314 2 254 1 315 1 258 1 173 1 130 1 217 3 133 1 135 4 81 1 36 2 262 1 140 1 220 1 323 2 221 1 87 2 86 1 224 1 146 1 
0 3 2 1 329 1 328 1 96 1 74 1 254 1 173 1 285 3 200 1 217 1 204 2 135 2 81 1 262 1 36 1 340 1 244 1 37 1 221 1 212 1 297 1 
0 3 2 1 329 1 328 1 96 1 74 1 254 1 173 1 285 3 200 1 217 1 204 1 135 3 81 1 262 1 340 1 244 1 37 1 220 1 221 1 323 1 87 1 212 1 297 1 
0 3 2 1 329 1 328 1 96 1 74 1 355 1 254 1 173 1 285 3 217 1 200 1 204 2 135 3 81 1 262 1 36 1 37 1 340 1 244 1 220 1 221 1 323 1 87 1 212 1 297 1 
269 1 0 5 2 1 117 2 273 1 119 1 149 1 328 1 329 1 96 1 74 1 193 1 355 4 254 1 173 1 285 5 288 1 217 3 200 1 59 2 204 7 135 6 239 1 81 1 106 1 16 1 262 1 36 4 244 1 37 1 340 1 140 1 220 5 108 2 323 5 221 1 87 4 212 1 297 1 365 1 213 2 166 1 224 1 303 2 
269 1 270 2 0 4 2 1 149 1 329 1 328 1 96 1 285 4 287 1 288 1 200 1 59 2 204 4 106 1 340 1 244 1 108 2 212 1 297 1 213 2 166 1 303 2 117 2 119 1 74 1 355 2 254 1 173 1 217 2 135 4 81 1 262 1 36 2 140 1 220 1 221 1 323 2 87 2 224 1 
269 1 0 4 2 1 117 2 273 1 119 1 149 1 329 1 328 1 96 1 74 1 355 2 254 1 173 1 285 4 288 1 217 2 200 1 59 2 204 4 135 4 81 1 106 1 36 2 262 1 16 1 340 1 244 1 140 1 220 1 323 1 108 2 221 1 87 2 212 1 297 1 365 1 213 2 166 1 224 1 303 2 
269 1 0 4 2 1 117 2 273 1 119 1 149 1 329 1 328 1 96 1 74 1 355 2 254 1 173 1 285 4 288 1 217 2 200 1 59 2 204 4 135 4 81 1 106 1 36 2 262 1 16 1 340 1 244 1 140 1 220 1 323 1 108 2 221 1 87 2 212 1 297 1 365 1 213 2 166 1 224 1 303 2 
270 2 0 4 2 1 273 1 119 1 149 1 28 2 329 1 328 1 96 1 74 1 331 1 355 2 254 1 195 2 173 1 285 4 288 1 217 2 200 1 204 4 135 4 81 1 136 1 106 1 36 2 262 1 340 1 244 1 140 1 220 1 323 1 221 1 87 2 247 1 212 1 297 1 213 2 166 1 224 1 303 2 
269 1 0 4 2 1 117 2 273 1 119 1 149 1 329 1 328 1 96 1 74 1 355 3 254 1 173 1 285 4 288 1 217 2 200 1 59 2 204 5 135 5 81 1 239 1 106 1 262 1 36 3 16 1 340 1 244 1 140 1 220 1 323 1 108 2 221 1 87 3 212 1 297 1 365 1 213 2 166 1 224 1 303 2 
269 1 0 4 2 1 117 2 273 1 119 1 149 1 329 1 328 1 96 1 74 1 355 3 254 1 173 1 285 4 288 1 217 2 200 1 59 2 204 5 135 5 81 1 239 1 106 1 262 1 36 3 16 1 340 1 244 1 140 1 220 1 323 1 108 2 221 1 87 3 212 1 297 1 365 1 213 2 166 1 224 1 303 2 
270 2 0 4 2 1 149 1 329 1 328 1 96 1 195 2 285 4 287 1 288 1 200 1 204 4 106 1 340 1 244 1 247 1 212 1 297 1 213 2 166 1 303 2 119 1 28 2 74 1 355 2 254 1 173 1 217 2 135 4 81 1 262 1 36 2 140 1 220 1 221 1 323 1 87 2 224 1 
115 6 169 1 25 1 27 1 9 1 125 1 255 1 56 1 76 1 12 3 99 2 32 1 316 1 101 1 159 1 236 1 34 2 160 1 104 1 142 1 163 3 263 1 264 2 42 1 265 1 300 2 
236 1 115 4 160 1 260 1 27 4 51 1 253 1 345 1 142 4 255 1 163 3 211 1 64 1 76 1 265 1 42 1 12 1 300 2 158 1 100 1 101 1 
115 2 70 1 308 1 328 1 192 1 253 1 96 2 123 1 29 1 314 1 9 1 255 1 10 1 332 1 154 1 258 1 76 1 12 1 356 1 286 1 58 1 130 1 101 1 80 1 236 1 218 1 34 1 160 1 62 1 243 1 340 2 348 1 163 1 210 1 299 1 42 1 300 2 146 1 
276 1 328 1 330 4 192 3 96 3 9 7 56 1 10 1 332 1 154 1 12 10 99 8 198 2 58 1 286 2 101 3 236 3 336 2 202 2 160 3 104 1 243 3 340 3 293 2 345 2 348 1 163 10 210 2 299 1 300 6 115 20 169 1 25 3 308 2 27 7 253 1 29 2 123 2 125 1 314 3 255 3 76 3 258 2 316 1 80 1 130 2 34 2 260 2 219 1 35 2 321 1 143 1 142 7 263 1 364 2 264 4 42 3 265 3 146 2 
116 1 115 2 188 1 328 1 192 3 96 1 29 1 314 3 255 2 332 1 10 2 315 1 230 1 258 1 76 2 12 1 32 1 58 1 101 2 80 1 130 1 236 2 177 1 160 2 339 1 320 1 243 3 340 1 343 1 348 1 163 1 299 1 42 2 300 4 225 1 146 1 
115 3 25 1 3 1 27 1 328 1 253 1 96 1 9 1 255 1 332 1 76 1 12 2 99 1 101 1 236 1 160 1 260 1 35 1 340 1 344 1 345 1 142 1 348 1 163 1 264 1 42 1 265 1 300 2 165 1 
236 1 115 2 160 1 260 1 4 1 27 1 330 1 9 1 142 1 255 1 163 2 76 1 42 1 265 1 99 1 300 2 32 1 101 1 
236 1 115 2 160 1 25 1 206 1 35 1 27 1 9 1 142 1 255 1 264 1 76 1 42 1 12 2 99 1 300 2 32 1 101 1 
115 4 25 1 27 2 330 1 255 1 9 2 76 1 12 2 99 2 32 1 101 1 236 1 160 1 260 1 35 1 345 1 142 2 163 2 264 1 265 1 42 1 300 2 
236 1 115 2 160 1 260 1 188 1 4 1 27 1 330 1 9 1 142 1 255 1 163 2 76 1 42 1 265 1 99 1 300 2 101 1 
236 1 115 2 160 1 25 1 188 1 206 1 35 1 27 1 9 1 142 1 255 1 264 1 76 1 42 1 12 2 99 1 300 2 101 1 
115 4 25 1 188 1 27 2 330 1 255 1 9 2 76 1 12 2 99 2 101 1 236 1 160 1 260 1 35 1 345 1 142 2 163 2 264 1 265 1 42 1 300 2 
236 1 115 4 160 1 25 1 260 1 35 1 27 2 330 1 345 1 9 2 142 2 255 1 163 2 264 1 76 1 12 2 42 1 265 1 99 2 300 2 101 1 
115 2 308 1 192 1 96 1 123 1 29 1 314 1 255 1 10 1 258 1 76 1 12 1 286 1 80 1 130 1 101 1 236 1 34 1 202 1 160 1 243 1 340 1 163 1 210 1 299 1 42 1 300 2 146 1 
115 2 308 1 192 1 55 1 96 1 123 1 29 1 314 1 255 1 10 1 229 1 258 1 76 1 12 1 80 1 130 1 101 1 236 1 34 1 160 1 243 1 340 1 139 1 163 1 299 1 42 1 300 2 146 1 
236 1 115 4 160 1 25 1 260 1 35 1 27 2 330 1 253 1 345 1 9 2 142 2 255 1 163 2 264 1 76 1 12 2 42 1 265 1 99 2 300 2 101 1 
202 1 177 1 198 1 286 1 
115 3 25 1 328 1 27 1 330 1 150 1 253 1 96 1 255 1 9 1 332 1 76 1 12 1 99 1 101 1 236 1 160 1 260 1 35 1 340 1 344 1 345 1 142 1 348 1 163 2 42 1 265 1 300 2 165 1 
115 6 160 2 48 1 260 1 161 1 180 1 50 1 360 1 51 1 345 1 170 1 255 2 163 4 30 1 57 1 265 1 12 2 42 2 300 4 158 1 100 1 101 2 
115 24 25 2 227 1 50 1 330 1 170 2 255 3 257 2 30 1 98 1 57 2 12 11 77 1 99 2 197 1 284 1 158 2 101 3 100 2 33 1 160 3 161 1 260 3 180 2 35 2 261 1 360 3 345 3 163 13 110 1 264 1 42 3 265 3 300 6 
115 6 160 2 48 1 260 1 161 1 180 1 50 1 360 1 51 1 345 1 170 1 255 2 163 4 30 1 57 1 265 1 12 2 42 2 300 4 158 1 100 1 101 2 
115 6 160 2 48 1 260 1 161 1 180 1 50 1 360 1 51 1 345 1 170 1 255 2 163 4 30 1 57 1 265 1 12 2 42 2 300 4 158 1 100 1 101 2 
115 11 25 1 169 1 50 1 51 1 170 1 255 1 125 1 56 1 30 1 57 1 12 4 99 1 316 1 158 1 101 1 100 1 160 1 104 1 161 1 260 1 180 1 360 1 345 1 163 7 263 1 264 1 42 1 265 2 300 2 
85 1 333 1 118 1 232 1 128 1 68 1 277 1 
290 1 
85 1 201 1 333 1 118 1 128 1 68 1 
0 1 289 1 118 1 71 1 90 2 181 1 323 1 85 1 346 1 333 1 232 1 285 1 128 1 234 1 68 1 
0 1 289 1 118 1 71 1 90 2 181 1 323 1 85 1 346 1 333 1 232 1 285 1 128 1 234 1 68 1 
0 1 289 1 118 1 71 1 90 2 181 1 323 1 85 1 346 1 333 1 232 1 285 1 128 1 234 1 68 1 
233 1 
233 1 
75 1 
75 1 
20 1 342 1 
0 1 289 1 259 1 290 1 214 1 118 1 71 1 90 1 240 1 208 1 85 1 11 1 333 1 301 1 128 1 285 1 68 1 
233 1 
75 1 
116 1 115 2 328 2 122 1 192 2 253 1 96 2 29 1 255 1 314 2 172 1 258 1 76 1 231 1 12 1 130 1 101 1 80 1 236 1 160 1 339 2 243 2 340 2 245 1 343 1 163 1 299 1 250 1 42 1 300 2 146 1 
326 1 177 1 314 1 295 1 219 1 281 1 351 1 302 1 243 1 304 1 192 1 
325 1 326 1 219 1 351 1 82 2 243 1 17 1 252 1 192 1 194 1 29 1 314 1 295 1 97 1 302 1 78 1 146 1 
305 1 243 1 242 1 192 1 29 1 314 1 10 1 295 1 315 1 230 1 258 1 146 1 130 1 304 1 
325 1 326 1 219 1 351 1 82 2 243 1 17 1 252 1 192 1 29 1 314 1 295 1 97 1 281 1 302 1 78 1 146 1 304 1 
352 1 
220 1 159 1 323 1 49 1 216 1 106 1 288 1 
269 1 270 1 0 1 117 1 119 1 285 1 288 1 217 1 59 1 204 1 106 1 140 1 220 1 108 1 323 2 166 1 224 1 
270 12 0 5 47 1 186 1 49 1 190 1 53 6 54 2 192 1 10 1 280 2 283 2 196 3 157 2 285 5 288 8 199 2 336 2 338 2 204 5 105 1 106 9 243 1 341 2 345 2 108 6 297 2 22 1 166 4 25 2 119 4 308 1 310 2 29 1 314 1 216 1 258 6 130 1 217 3 177 1 133 2 260 2 35 2 140 4 220 2 84 6 323 8 144 1 265 2 146 2 224 4 
270 6 0 1 25 2 119 2 227 1 53 5 280 1 77 1 13 1 197 1 284 1 285 1 158 1 288 4 100 1 217 1 204 1 260 2 106 7 180 1 35 2 140 2 84 5 345 2 220 1 108 3 323 4 110 1 265 2 166 2 224 2 
0 1 169 1 25 1 72 1 119 1 328 1 95 1 251 1 96 1 332 1 280 2 173 1 285 1 288 2 199 1 14 1 104 1 106 2 340 1 140 1 344 1 348 1 263 1 365 1 265 2 67 1 166 1 224 1 
49 1 119 1 106 1 140 1 220 1 323 1 216 1 166 1 224 1 288 1 
336 1 270 10 25 2 260 2 106 5 35 2 53 5 345 2 84 5 108 5 323 5 280 2 265 2 288 5 199 1 
220 1 217 1 323 1 0 1 204 1 285 1 
0 3 186 1 119 2 120 1 92 2 6 1 192 4 29 1 314 4 10 2 315 1 230 1 258 1 285 3 288 2 130 1 217 2 133 2 204 4 105 2 178 1 106 2 359 1 243 4 140 2 86 1 166 2 146 1 224 1 
115 1 308 1 328 2 95 1 192 1 96 3 29 1 123 1 255 1 314 1 10 1 332 2 258 1 76 1 12 1 286 1 130 1 101 1 236 1 34 1 202 1 160 1 243 1 340 3 344 2 294 1 348 2 210 1 299 1 42 1 300 2 146 1 
270 4 133 1 105 1 119 1 106 1 53 2 140 1 84 2 220 2 108 2 323 4 166 1 316 1 224 1 288 2 
333 1 241 1 128 1 
333 1 241 1 128 1 
246 1 19 1 333 1 20 1 128 1 
333 1 241 1 128 1 
107 1 333 1 128 1 
107 1 333 1 128 1 
107 1 333 1 128 1 
333 1 128 1 
68 1 
115 8 160 2 25 1 169 1 104 1 330 1 255 2 125 1 163 4 257 1 56 1 263 1 264 2 265 1 12 4 42 2 99 3 300 4 316 1 101 2 
159 1 115 6 169 1 25 1 104 1 125 1 56 1 163 3 263 1 264 2 12 3 265 1 99 2 316 1 
115 4 160 1 25 1 260 1 137 1 35 1 330 1 345 1 255 1 163 2 264 1 12 2 42 1 265 1 99 2 300 2 101 1 
345 1 115 4 163 3 260 1 265 1 12 1 180 1 51 1 158 1 100 1 
345 1 115 4 163 3 260 1 211 1 265 1 12 1 51 1 158 1 100 1 
115 1 12 1 158 1 
115 1 163 1 100 1 
336 1 115 6 160 1 25 1 260 1 137 1 35 1 330 1 345 1 255 1 163 3 264 2 42 1 12 3 265 1 300 2 99 3 101 1 
115 12 25 2 227 1 50 1 330 1 255 1 12 6 77 1 197 1 99 2 284 1 158 1 100 1 101 1 160 1 260 2 180 1 35 2 345 2 163 6 110 1 264 1 42 1 265 2 300 2 
115 6 25 1 169 1 104 1 330 1 163 3 263 1 264 1 265 1 12 3 99 2 
115 3 160 1 169 1 330 1 353 1 125 1 255 1 163 1 257 1 56 1 263 1 264 1 12 2 42 1 99 2 300 2 101 1 
115 10 160 1 169 2 25 2 104 1 72 1 50 1 330 2 255 1 163 5 263 2 264 3 42 1 12 5 265 2 300 2 99 5 101 1 
115 2 160 1 260 1 50 1 330 1 255 1 163 2 42 1 265 1 300 2 99 1 101 1 
115 4 160 1 25 1 260 1 35 1 50 1 330 1 345 1 255 1 163 2 264 1 12 2 42 1 265 1 99 2 300 2 101 1 
115 3 160 3 48 1 169 1 50 1 330 1 353 1 255 3 257 1 163 1 263 1 264 1 12 2 42 3 300 6 99 2 101 3 
45 1 115 24 169 1 48 1 25 3 50 1 51 1 151 1 330 2 125 1 312 1 255 4 56 1 257 1 12 11 99 5 316 1 158 3 101 4 100 3 160 4 104 1 260 3 137 1 180 1 35 2 345 3 163 13 263 1 264 3 42 4 265 4 300 8 
115 8 25 1 169 1 227 1 50 1 255 1 125 1 56 1 12 4 99 2 316 1 158 1 100 1 101 1 160 1 104 1 180 1 163 4 263 1 264 2 265 1 42 1 300 2 
115 4 160 2 260 1 137 1 227 1 180 1 50 1 51 1 345 1 255 2 163 3 265 1 42 2 12 1 300 4 158 1 100 1 101 2 
115 13 25 2 227 1 50 1 330 1 255 3 257 1 12 7 77 1 197 1 99 2 284 1 158 1 100 1 101 3 160 3 260 2 137 1 180 1 35 2 345 2 163 6 110 1 264 1 42 3 265 2 300 6 
115 11 25 1 227 1 50 1 330 1 255 3 257 1 12 4 77 1 197 1 99 2 284 1 158 1 100 1 101 3 160 3 260 2 137 1 180 1 35 1 345 2 163 7 110 1 264 1 42 3 265 2 300 6 
115 8 25 1 169 1 227 1 50 1 255 1 125 1 56 1 12 4 99 2 316 1 158 1 100 1 101 1 160 1 104 1 180 1 163 4 263 1 264 2 265 1 42 1 300 2 
115 12 25 2 227 1 50 1 330 1 255 1 12 6 77 1 197 1 99 2 284 1 158 1 100 1 101 1 160 1 260 2 180 1 35 2 345 2 163 6 110 1 264 1 42 1 265 2 300 2 
115 12 25 1 227 1 50 1 330 1 255 4 257 2 12 5 77 1 197 1 99 2 284 1 158 1 101 4 100 1 160 4 260 2 137 1 180 1 35 1 345 2 163 7 110 1 264 1 42 4 265 2 300 8 
115 12 48 1 25 1 227 1 50 1 330 2 255 4 257 2 12 5 77 1 197 1 99 4 284 1 158 1 101 4 100 1 160 4 260 2 180 1 35 1 345 2 163 7 110 1 264 2 42 4 265 2 300 8 
115 7 25 1 169 3 104 1 330 3 125 2 56 1 163 3 263 3 264 3 12 4 265 1 99 6 
115 12 48 1 25 1 227 1 50 1 330 1 255 4 257 2 12 5 77 1 197 1 99 2 284 1 158 1 101 4 100 1 160 4 260 2 180 1 35 1 345 2 163 7 110 1 264 1 42 4 265 2 300 8 
96 1 34 1 103 1 254 1 24 1 328 1 340 1 
34 1 103 1 24 1 307 1 328 1 340 1 96 1 254 1 18 1 176 1 184 1 129 1 
159 1 29 1 314 1 10 1 230 1 315 1 258 1 243 1 146 1 130 1 192 1 
34 1 308 1 328 1 243 1 340 2 192 1 96 2 123 1 29 1 314 1 348 1 332 1 10 1 210 1 258 1 146 1 58 1 130 1 
200 1 34 1 308 2 92 1 328 2 243 1 340 2 192 1 96 2 221 1 123 1 29 1 314 1 256 1 348 1 332 2 210 1 173 1 258 3 66 1 146 1 58 1 130 2 
200 1 34 1 308 2 92 1 328 2 243 2 340 2 192 2 96 2 221 1 123 1 29 1 314 2 256 1 348 1 332 2 229 1 164 1 173 1 258 3 66 1 146 1 58 1 130 2 
0 2 92 1 308 1 310 1 191 1 192 3 29 1 314 3 256 1 10 1 258 4 196 1 285 2 130 1 204 1 243 3 220 1 323 1 39 1 164 1 297 1 66 1 146 1 
0 2 204 1 308 1 92 1 243 3 310 1 192 3 220 1 323 1 29 1 314 3 10 1 256 1 164 1 297 1 258 4 66 1 196 1 285 2 157 1 146 1 130 1 
29 1 314 1 243 1 146 1 168 1 192 1 
46 1 116 1 177 1 320 1 308 1 243 2 7 1 192 2 29 1 314 2 144 1 10 2 258 1 225 1 335 1 146 2 130 1 
236 1 177 1 160 1 328 1 340 1 245 1 253 1 96 1 255 1 348 1 332 1 76 1 42 1 300 2 58 1 101 1 
0 3 186 1 49 1 119 2 310 1 192 1 54 1 314 1 10 1 11 1 216 1 258 2 283 1 196 1 285 3 157 1 288 1 217 1 338 1 204 2 106 1 243 1 140 2 220 1 323 1 297 1 166 2 224 2 
177 1 47 1 308 1 243 1 310 1 192 1 29 1 314 1 144 1 258 2 168 1 146 2 130 1 
46 1 177 1 308 1 243 1 7 1 121 1 192 1 29 1 314 1 10 1 315 1 258 1 112 1 146 2 130 1 
46 1 92 1 276 1 308 1 243 2 121 1 7 1 192 2 29 1 314 2 258 1 112 1 146 2 130 1 
325 1 29 1 314 1 10 1 97 1 82 1 78 1 243 1 146 1 192 1 
314 1 177 1 219 1 243 1 192 1 
177 1 314 1 10 1 243 1 192 1 
44 1 116 1 177 1 314 1 10 1 243 1 192 1 
34 1 308 1 328 1 243 1 340 2 192 1 96 2 123 1 29 1 314 1 348 1 332 1 10 1 229 1 258 1 146 1 58 1 130 1 
46 1 92 1 308 1 243 1 7 1 192 1 29 1 314 1 144 1 258 1 335 1 146 2 130 1 
34 1 271 1 274 1 366 1 94 1 
200 1 34 1 337 1 271 2 0 2 274 2 148 1 26 1 329 1 94 1 220 1 323 1 221 1 141 1 11 1 297 1 173 1 285 2 366 2 
271 1 328 1 94 1 340 1 122 1 96 1 231 1 250 1 366 1 
148 1 26 1 94 1 
159 1 8 1 248 1 31 1 
8 1 362 1 209 1 248 1 31 1 275 1 162 1 
124 1 209 1 83 1 
69 1 226 1 275 1 138 2 162 3 8 1 362 1 171 1 209 3 248 1 31 1 334 1 
8 1 306 1 1 1 362 1 209 2 248 1 31 1 275 1 162 2 
131 1 279 1 362 1 97 1 209 1 248 1 275 1 82 1 334 1 252 1 162 1 
362 1 209 1 248 1 31 1 275 1 334 1 162 1 
8 1 362 1 209 1 31 2 275 1 334 1 162 1 
275 2 162 2 362 2 209 2 248 1 31 1 156 1 334 1 167 1 268 1 
279 1 362 1 209 1 248 1 296 1 275 1 334 1 79 1 322 1 162 1 
325 1 237 1 306 1 275 1 82 2 17 1 162 2 252 1 8 1 362 1 209 2 97 1 248 1 31 1 334 1 
1 1 306 2 275 2 182 1 162 4 8 1 362 2 279 1 209 4 31 1 296 1 248 2 334 1 
8 1 362 1 209 1 248 1 31 1 275 1 334 1 162 1 
306 2 226 1 275 1 138 1 162 4 8 2 171 1 362 1 279 1 209 4 31 2 296 1 248 3 111 1 
306 1 272 1 275 1 162 2 311 1 8 1 362 1 209 2 248 1 31 1 65 1 334 1 
226 2 275 1 292 1 138 2 162 3 8 1 171 1 362 1 209 3 248 1 31 1 334 1 
347 2 363 1 248 2 266 1 
362 1 209 1 275 1 126 1 334 1 162 1 
275 1 162 1 8 1 362 1 209 1 31 1 111 1 334 1 79 1 
175 1 
8 1 362 1 209 1 248 1 31 1 275 1 334 1 162 1 
8 1 362 1 209 2 248 1 31 1 275 1 334 1 138 1 79 1 162 2 
279 1 248 1 296 1 111 1 
248 1 31 1 

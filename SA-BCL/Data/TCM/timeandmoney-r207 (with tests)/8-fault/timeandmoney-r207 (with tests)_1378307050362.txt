#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (5,29,82,169) (5,29,82,169) (177,207,256) (177,207,256) (177,207,256) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (5,29,82,169) (5,29,82,169) (177,207,256) (177,207,256) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (5,29,82,169) (5,29,82,169) (177,207,256) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (5,29,82,169) (5,29,82,169) (177,207,256) (177,207,256) (177,207,256) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 196 113 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 196 113 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 196 113 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 196 113 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 196 113 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 196 113 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 196 113 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 196 113 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 196 113 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 196 113 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 196 113 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 196 113 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal; | RETURN | 998 | return null
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 1130 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | STATEMENT | 3650 | stmt -> ;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10082 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set; | RETURN | 511 | return null
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12227 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1647 | return null
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1356 | return null
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
101 1 206 1 297 1 102 1 345 1 82 2 234 4 147 3 255 1 275 1 5 7 85 1 169 9 132 1 28 9 29 2 59 1 30 1 92 1 14 1 97 1 263 2 182 1 316 5 
101 1 206 1 297 1 102 1 345 1 234 4 82 2 147 3 255 1 275 1 5 7 85 1 169 9 132 1 28 9 29 2 59 1 30 1 92 1 14 1 97 1 263 2 182 1 316 5 
206 1 101 1 297 1 345 2 102 1 346 1 82 2 234 4 147 3 255 1 275 1 349 1 5 6 169 9 132 1 28 9 29 2 59 2 197 1 30 1 92 2 286 1 94 1 14 2 65 1 263 2 182 1 316 5 
206 1 101 1 297 1 345 2 102 1 346 1 82 2 234 4 147 3 255 1 275 1 349 1 5 6 169 9 132 1 28 9 29 2 59 2 197 1 30 1 92 2 286 1 94 1 14 2 65 1 263 2 182 1 316 5 
206 1 101 1 297 1 345 2 102 1 346 1 82 2 234 5 147 4 255 1 275 1 349 1 5 7 169 10 132 1 28 10 29 2 59 2 197 1 30 1 92 2 286 1 94 1 14 2 65 1 263 2 182 1 316 6 
101 1 297 1 345 2 102 1 346 1 82 2 234 3 147 2 255 1 275 1 349 1 5 4 169 7 132 1 28 7 29 2 59 2 197 1 30 1 92 2 286 1 94 1 14 2 65 1 263 1 182 1 316 4 
29 1 28 4 206 1 101 1 30 1 297 1 345 1 92 1 82 1 234 2 147 1 14 1 275 1 263 2 5 3 182 1 316 3 169 4 
29 1 28 2 59 1 197 1 30 1 123 1 199 1 345 1 92 1 346 1 82 1 275 1 316 1 182 1 169 2 238 1 
132 1 29 2 28 3 59 1 30 1 82 2 234 1 147 1 275 1 5 1 182 1 316 2 169 3 
105 1 253 1 148 1 
105 1 287 1 237 2 
212 2 64 2 276 2 157 1 303 2 50 1 292 2 20 2 
77 1 247 1 232 1 163 1 209 1 298 1 50 1 191 2 273 1 348 1 20 3 235 1 212 2 276 3 322 1 129 1 107 1 303 2 194 1 307 1 112 1 180 2 155 1 64 2 38 1 18 1 157 1 289 1 205 1 42 1 338 1 70 2 44 2 184 1 292 2 342 1 72 2 
212 1 64 1 276 1 157 1 303 1 150 1 292 1 114 1 20 1 352 1 
0 1 164 1 60 1 114 1 20 1 359 1 105 1 253 1 212 1 276 1 143 1 291 1 293 1 327 1 
0 1 60 2 114 1 20 1 359 1 105 1 253 1 212 1 64 1 276 1 303 1 291 2 292 1 293 1 327 1 
128 1 319 1 80 1 291 1 60 1 
105 1 253 1 217 1 128 1 319 1 165 1 291 2 60 2 
128 1 291 1 60 1 
319 1 60 1 114 1 313 1 20 1 212 1 64 1 276 1 157 1 291 1 303 1 150 1 292 1 352 1 
105 1 
105 1 253 1 128 1 319 1 165 1 291 2 60 2 35 1 
100 1 134 1 122 1 319 2 310 1 165 1 91 1 60 5 34 1 105 1 253 1 128 2 168 1 324 1 291 5 8 2 326 2 98 1 228 2 
307 1 296 1 232 1 298 1 273 1 191 1 285 1 20 2 180 1 235 1 212 1 38 1 276 2 322 1 107 1 303 1 338 1 292 1 26 1 72 1 
148 1 50 1 
146 1 50 2 20 2 212 2 64 1 276 2 303 1 292 1 119 1 
76 1 335 1 285 1 
307 1 232 1 298 1 50 1 191 1 273 1 20 1 180 1 235 1 38 1 276 1 322 1 107 1 338 1 170 1 72 1 
296 2 243 1 50 1 251 1 20 5 212 5 64 1 276 5 143 1 264 1 303 4 292 4 119 1 26 1 
212 2 276 2 303 2 150 1 292 2 193 1 114 1 20 2 
212 3 64 1 296 1 276 3 303 3 50 1 292 3 20 3 
212 1 276 1 303 1 150 1 292 1 114 1 20 1 
212 1 146 1 64 1 276 1 303 1 292 1 119 1 114 1 20 1 
0 1 296 1 77 1 232 1 247 1 163 1 209 1 298 1 50 1 273 1 191 1 348 1 20 4 235 1 212 3 106 1 276 4 322 1 129 1 107 1 109 1 303 3 26 1 327 1 307 1 60 1 114 1 359 1 180 1 155 1 64 2 38 1 18 1 157 1 289 1 205 1 291 1 338 1 70 1 44 2 293 1 292 3 119 1 72 1 
212 2 296 1 276 2 143 1 303 1 50 1 292 1 251 1 20 2 
0 1 296 2 60 1 271 1 114 1 20 3 359 1 105 1 212 3 64 1 106 1 276 3 291 1 303 3 292 3 293 1 119 1 26 1 327 1 
296 1 76 1 285 1 20 2 212 2 64 1 276 2 303 2 292 2 119 1 
307 1 232 1 298 1 50 1 191 1 273 1 20 1 180 1 235 1 38 1 276 1 322 1 107 1 338 1 72 1 
307 1 232 1 298 1 50 1 191 1 273 1 20 1 180 1 300 1 235 1 4 1 38 1 276 1 338 1 72 1 
76 2 163 1 209 1 348 1 21 1 129 1 131 1 58 1 111 1 241 1 335 2 285 2 222 1 155 1 204 1 18 2 183 1 205 1 118 1 44 2 70 4 45 1 342 2 71 1 
212 1 276 1 303 1 292 1 114 1 193 1 359 1 20 1 
110 1 341 1 
110 1 341 1 
223 1 260 1 
223 1 260 1 
223 1 260 1 
110 1 341 1 265 1 
110 1 341 1 152 1 
223 1 336 1 110 2 260 1 10 1 341 2 
110 1 341 1 265 1 
110 1 341 1 265 1 
53 1 110 1 341 1 
53 1 110 1 341 1 
53 1 110 1 341 1 
317 1 144 1 50 1 272 1 126 1 20 2 211 1 212 2 213 1 276 2 303 2 214 1 110 1 172 1 333 1 284 1 60 1 221 1 152 1 291 1 292 2 340 1 341 1 295 1 
317 1 47 1 110 2 144 2 318 2 330 1 284 2 60 2 103 1 178 1 126 2 221 3 115 1 105 1 86 1 291 2 10 1 341 2 295 2 
14 1 345 1 92 1 
123 1 345 1 92 1 
266 1 14 2 277 1 219 1 123 1 345 3 
266 1 14 1 127 1 277 1 123 1 345 2 
14 1 266 2 277 1 123 1 345 2 
267 1 100 1 122 2 319 4 165 1 272 1 105 2 253 1 254 1 128 1 323 1 237 3 131 1 326 1 8 1 58 1 88 1 172 1 111 1 332 1 333 1 93 2 91 3 60 5 138 2 356 2 287 1 291 5 246 1 228 1 362 1 71 1 
100 1 231 1 189 1 122 6 319 7 80 5 165 1 272 4 84 1 1 1 105 5 253 1 254 2 6 1 128 6 237 9 131 3 8 2 326 2 58 3 111 3 332 3 93 6 91 8 60 9 138 6 202 5 287 3 291 9 227 1 246 2 98 1 228 2 362 1 71 3 
267 1 122 2 319 2 272 1 105 3 253 1 254 1 237 4 131 1 326 1 8 1 58 1 88 1 111 1 332 1 91 3 93 2 60 3 138 2 356 1 287 2 291 3 246 1 228 1 98 1 71 1 
267 1 231 1 189 1 122 4 319 3 272 2 105 4 1 1 253 1 254 1 237 7 131 2 326 1 8 1 58 2 88 1 111 2 332 2 93 4 91 5 60 4 138 4 356 2 287 3 291 4 246 1 228 1 98 1 71 2 
307 1 148 1 347 1 
307 1 361 1 
23 1 
307 1 235 1 38 1 
307 1 274 1 
307 1 38 1 
307 3 235 1 38 1 331 1 124 1 347 2 
120 1 111 1 188 1 175 1 31 1 309 1 250 1 179 1 210 2 18 3 325 1 118 2 45 3 70 7 58 1 342 4 306 1 
120 1 111 1 188 1 175 1 31 1 309 1 250 1 179 1 210 2 18 3 325 1 118 2 45 3 70 7 58 1 342 4 306 1 
120 1 111 1 188 1 175 1 31 1 309 1 250 1 179 1 210 2 16 1 18 3 325 1 118 2 45 3 70 7 58 1 342 4 306 1 
120 3 188 1 78 1 162 1 209 1 250 1 348 1 210 2 129 1 325 4 281 1 58 2 216 1 306 1 111 2 175 1 31 2 136 1 309 2 179 3 36 1 201 1 155 1 18 9 118 4 70 19 44 2 45 8 342 10 160 1 
120 1 188 1 209 1 250 1 348 1 210 1 129 1 325 1 58 2 111 2 175 1 31 1 136 1 309 1 179 1 358 1 155 1 315 1 18 4 118 2 44 2 70 9 45 3 342 5 
161 1 29 1 28 1 59 1 30 1 207 1 49 1 177 1 191 1 244 1 82 1 180 1 256 1 5 1 245 1 169 2 339 1 11 1 72 1 
161 1 29 1 28 2 133 1 59 1 207 1 49 1 177 1 191 1 244 1 82 1 180 1 360 1 5 2 7 1 245 1 169 3 11 1 72 1 
28 1 133 1 59 1 49 1 177 1 191 1 244 1 180 1 5 2 7 1 245 1 169 2 11 1 72 1 
307 1 29 1 28 1 59 2 232 1 248 1 49 2 298 1 311 1 273 1 244 2 191 1 82 1 180 1 38 1 360 1 55 1 130 1 226 1 245 2 169 1 57 1 72 1 
161 1 29 1 28 1 59 1 30 1 207 1 49 1 177 1 191 1 244 1 82 1 180 1 256 1 5 1 7 1 245 1 169 2 11 1 72 1 
95 1 
353 1 0 1 196 1 208 1 164 1 233 1 60 2 114 1 113 1 359 1 20 1 212 1 276 1 40 1 143 1 291 2 293 1 327 1 
353 1 0 1 196 1 208 1 164 1 233 1 60 2 114 1 113 1 359 1 20 1 212 1 276 1 40 1 143 1 291 2 293 1 327 1 
353 1 0 1 196 1 100 1 208 1 164 1 233 1 60 2 114 1 113 1 359 1 20 1 212 1 276 1 143 1 40 1 291 2 8 1 326 1 293 1 228 1 327 1 
0 1 100 1 121 1 232 1 122 1 208 1 164 1 298 2 165 1 233 1 273 1 191 2 20 1 212 1 276 1 55 1 128 2 130 1 326 1 8 1 327 1 353 1 307 1 196 1 13 1 91 1 60 3 114 1 113 1 359 1 180 2 38 1 143 1 40 1 291 3 246 1 293 1 46 1 228 1 72 2 
353 1 0 1 196 1 208 1 164 1 233 1 60 2 114 1 113 1 359 1 20 1 212 1 276 1 40 1 143 1 291 2 293 1 327 1 
353 1 0 1 196 1 208 1 164 1 233 1 60 2 114 1 113 1 359 1 20 1 212 1 276 1 40 1 143 1 291 2 293 1 327 1 
353 1 0 1 196 1 208 1 164 1 233 1 60 2 114 1 113 1 359 1 20 1 212 1 276 1 40 1 143 1 291 2 293 1 327 1 
353 1 0 1 196 1 208 1 164 1 165 1 233 1 60 3 114 1 113 1 359 1 20 1 35 1 212 1 276 1 128 1 40 1 143 1 291 3 293 1 327 1 
353 1 0 1 196 1 100 1 208 1 164 1 233 1 60 2 114 1 113 1 359 1 20 1 212 1 276 1 143 1 40 1 291 2 8 1 326 1 293 1 228 1 327 1 
353 1 0 1 196 1 208 1 164 1 233 1 60 2 114 1 113 1 359 1 20 1 212 1 276 1 40 1 143 1 291 2 293 1 327 1 
353 1 0 1 196 1 208 1 164 1 233 1 60 2 114 1 113 1 359 1 20 1 212 1 276 1 40 1 143 1 291 2 293 1 327 1 
353 1 0 1 196 1 208 1 164 1 233 1 60 2 114 1 113 1 359 1 20 1 212 1 276 1 40 1 143 1 291 2 293 1 327 1 
120 1 188 1 76 1 163 1 209 1 50 2 250 1 348 1 210 1 148 1 129 1 58 1 111 1 175 1 335 1 285 1 179 1 222 1 155 1 18 3 205 1 118 2 44 2 45 2 70 6 342 3 
77 1 76 6 162 1 163 2 209 2 50 1 348 2 167 2 129 2 325 2 131 4 281 4 56 1 58 2 173 1 174 2 111 4 332 4 335 16 112 1 220 1 285 16 155 2 18 9 66 1 118 2 205 1 45 4 44 4 70 22 342 13 71 2 160 4 
296 1 232 1 76 1 77 1 163 1 209 1 298 1 50 1 273 1 191 1 20 2 348 1 235 1 212 1 276 2 322 1 129 1 107 1 303 1 170 1 26 1 27 1 307 1 354 1 112 1 220 1 180 1 155 1 38 1 18 1 205 1 338 1 292 1 44 2 70 2 229 1 72 1 342 1 
99 2 188 1 232 2 50 2 191 1 273 2 235 2 276 3 322 2 107 2 58 2 242 1 111 2 332 1 335 4 112 1 285 4 155 3 18 7 205 3 118 3 338 2 292 1 70 14 69 2 72 1 342 7 71 1 120 1 296 1 77 1 247 2 76 4 163 3 209 3 298 1 250 1 125 1 348 3 20 3 210 1 212 1 129 3 131 1 303 1 26 1 307 2 175 1 220 1 179 1 139 1 180 1 38 2 43 1 45 3 44 6 
75 1 296 1 232 2 77 1 163 2 209 2 298 2 273 2 191 8 20 1 348 2 212 1 276 1 55 1 7 1 129 2 130 1 303 1 87 1 307 3 198 1 176 1 112 1 140 1 180 7 222 1 155 2 38 2 18 1 290 1 205 2 339 1 158 1 292 1 44 4 70 2 184 2 72 8 342 1 
76 1 163 1 209 1 348 1 20 1 212 1 276 1 129 1 131 1 303 1 58 1 111 1 332 1 335 1 285 1 220 1 155 1 64 1 18 2 39 1 118 1 205 1 45 1 292 1 44 2 70 3 119 1 342 1 71 1 
111 1 76 1 163 1 335 1 209 1 285 1 348 1 222 1 155 1 129 1 325 1 183 1 131 1 205 1 45 1 70 2 44 2 342 2 
76 1 163 1 335 1 209 1 285 1 348 1 222 1 155 1 204 1 18 2 129 1 118 1 205 1 45 1 70 2 44 2 71 1 58 1 
76 2 163 1 209 1 348 1 129 1 131 1 325 1 58 1 111 1 332 1 335 2 285 2 222 1 155 1 18 2 205 1 118 1 44 2 70 4 45 2 342 2 71 1 
111 1 76 1 198 1 163 1 335 1 209 1 285 1 348 1 155 1 129 1 325 1 183 1 131 1 205 1 45 1 70 2 44 2 342 2 
76 1 198 1 163 1 335 1 209 1 285 1 348 1 155 1 204 1 18 2 129 1 118 1 205 1 45 1 70 2 44 2 71 1 58 1 
76 2 163 1 209 1 348 1 129 1 131 1 325 1 58 1 111 1 332 1 198 1 335 2 285 2 155 1 18 2 205 1 118 1 44 2 70 4 45 2 342 2 71 1 
76 2 163 1 209 1 348 1 129 1 131 1 325 1 58 1 111 1 332 1 335 2 285 2 155 1 18 2 205 1 118 1 70 4 44 2 45 2 342 2 71 1 
232 1 247 1 77 1 163 1 209 1 298 1 50 1 273 1 191 1 20 1 348 1 235 1 276 1 322 1 129 1 107 1 307 1 112 1 180 1 155 1 38 1 18 1 205 1 338 1 70 2 44 2 342 1 72 1 
307 1 343 1 232 1 298 1 191 1 273 1 20 1 180 1 300 1 235 1 4 1 38 1 276 1 338 1 72 1 
76 2 163 1 209 1 348 1 129 1 131 1 325 1 58 1 111 1 332 1 335 2 220 1 285 2 155 1 18 2 205 1 118 1 44 2 70 4 45 2 342 2 71 1 
76 2 232 1 247 1 163 1 209 1 273 1 191 1 20 1 348 1 235 1 276 1 322 1 129 1 325 1 131 1 107 1 58 1 307 1 111 1 332 1 335 2 285 2 180 1 155 1 38 1 18 2 118 1 205 1 338 1 339 1 45 2 70 4 69 1 44 2 71 1 342 2 72 1 
76 1 163 1 209 1 348 1 20 1 212 1 276 1 129 1 325 1 131 1 303 1 58 1 111 1 332 1 335 1 220 1 285 1 155 1 224 1 64 1 18 1 205 1 45 1 292 1 44 2 70 3 119 1 71 1 342 2 
73 1 74 1 230 1 162 2 209 3 249 1 51 1 348 3 129 3 325 1 351 1 131 3 281 2 9 1 25 3 58 3 240 1 12 1 111 3 332 3 283 1 358 1 201 1 63 1 155 3 262 1 18 13 118 2 68 1 45 3 44 6 70 26 342 13 71 3 160 2 
73 1 230 1 162 2 79 1 209 2 249 1 51 1 348 2 167 2 129 2 351 1 325 3 131 7 281 4 25 4 240 1 58 6 12 2 174 2 111 7 332 7 283 1 358 1 201 1 63 2 155 2 262 1 18 22 68 1 118 3 45 6 44 4 70 46 342 24 71 6 160 4 
73 1 230 1 162 3 79 1 209 3 249 1 51 1 348 3 167 2 129 3 351 1 325 4 131 7 281 5 9 1 25 4 240 1 58 5 12 1 174 2 111 7 332 7 283 1 358 1 201 1 63 2 155 3 262 1 18 21 68 1 118 3 44 6 70 46 45 7 159 1 342 25 71 5 160 5 
73 1 230 1 162 2 79 1 209 3 249 1 51 1 348 3 129 3 325 1 351 1 131 3 281 2 9 1 25 4 58 3 240 1 12 1 111 3 332 3 283 1 358 1 201 1 63 1 155 3 262 1 18 14 118 1 68 1 45 2 44 6 70 28 342 14 71 3 160 2 
73 1 120 1 230 1 188 1 162 2 79 1 209 2 249 1 250 1 51 1 348 2 210 1 167 1 129 2 351 1 325 2 131 5 281 3 25 4 240 1 58 5 12 1 174 1 111 6 175 1 332 5 283 1 179 1 358 1 201 1 63 1 155 2 262 1 18 20 68 1 118 5 44 4 70 42 45 7 342 22 71 4 160 3 
115 1 110 1 144 1 284 1 178 1 10 1 305 1 341 1 126 1 295 1 
214 1 152 1 
110 1 144 1 218 1 355 1 284 1 341 1 52 1 126 1 295 1 
151 1 265 1 
53 1 336 1 156 1 
317 1 47 1 110 1 144 1 318 1 330 1 284 1 60 1 178 1 126 1 221 2 115 1 105 1 86 1 291 1 10 1 341 1 295 1 
317 1 47 1 110 1 144 1 318 1 330 1 284 1 60 1 178 1 126 1 221 2 115 1 105 1 86 1 291 1 10 1 341 1 295 1 
317 1 47 1 110 1 144 1 318 1 330 1 284 1 60 1 178 1 126 1 221 2 115 1 105 1 86 1 291 1 10 1 341 1 295 1 
336 1 151 1 265 1 
336 1 151 1 265 1 
53 1 156 1 
53 1 336 1 156 1 
211 1 213 1 
47 1 318 1 144 1 319 1 50 1 272 1 126 1 20 2 211 1 212 2 213 1 276 2 303 2 214 1 195 1 110 1 172 1 333 1 284 1 60 1 221 1 152 1 291 1 340 1 292 2 341 1 295 1 
232 1 344 1 77 1 163 1 209 1 273 1 191 2 252 1 20 2 348 1 212 2 276 2 129 1 87 1 307 1 89 1 112 1 220 1 180 2 154 1 155 1 225 1 38 1 18 1 205 1 158 1 44 2 70 2 184 2 72 2 342 1 
161 1 259 1 191 2 312 1 244 1 180 2 2 1 7 1 339 1 72 2 11 1 
161 1 2 1 3 1 7 1 244 1 191 1 11 1 72 1 180 1 
307 1 232 1 282 1 298 1 273 1 191 1 312 1 244 1 180 1 38 1 55 1 130 1 72 1 57 1 
161 1 2 1 259 1 7 1 244 1 312 1 191 1 11 1 72 1 180 1 
261 1 
77 1 247 1 232 1 163 1 209 1 298 1 50 1 191 1 273 1 348 1 20 3 235 1 212 2 276 3 322 1 129 1 107 1 303 2 307 1 180 1 155 1 64 2 38 1 18 1 157 1 289 1 205 1 338 1 70 1 44 2 292 2 72 1 
100 1 121 1 122 2 93 2 91 1 138 2 210 1 105 4 253 2 287 2 237 4 8 1 326 1 246 1 228 1 
105 1 253 1 148 1 134 1 122 1 168 1 91 1 
100 1 145 1 122 1 165 1 105 2 253 1 350 1 128 1 237 1 326 1 8 1 334 1 91 1 60 1 287 1 291 1 228 1 
187 2 100 4 232 4 273 3 191 3 105 8 321 2 235 3 274 2 236 1 192 2 149 1 237 12 279 1 8 4 326 4 327 2 58 2 328 2 242 2 111 2 332 2 60 5 203 2 287 6 291 5 339 1 246 2 72 3 71 2 121 1 122 8 124 1 298 1 165 3 81 2 347 2 253 2 301 1 128 5 168 1 131 2 307 10 134 1 32 1 308 2 91 9 93 6 138 6 180 3 38 3 181 2 361 3 228 4 
100 2 121 1 122 8 162 1 249 1 165 1 104 1 320 1 51 1 105 7 253 2 321 3 192 1 167 1 128 1 237 10 351 1 131 4 326 2 8 2 281 2 58 4 174 1 111 4 332 4 93 8 91 13 60 1 138 8 262 1 287 5 291 1 68 1 246 1 228 2 71 4 160 2 
120 1 100 1 188 1 122 2 270 1 20 1 321 2 212 1 192 1 276 1 326 1 8 1 303 1 150 1 58 1 352 1 111 2 136 1 91 2 60 1 114 1 179 1 313 1 64 1 157 1 291 1 228 1 292 1 
100 1 134 1 122 1 91 1 105 1 253 1 168 1 8 1 326 1 228 1 
242 1 111 2 332 2 122 5 93 5 91 5 138 5 105 5 321 2 287 5 192 1 237 10 131 2 71 2 58 2 
105 1 253 1 128 1 165 1 291 1 60 1 
48 1 100 1 121 2 232 1 122 2 298 2 165 2 273 1 191 4 236 2 55 1 128 4 130 1 326 2 8 2 307 1 13 1 32 1 91 2 60 3 180 4 37 1 38 1 291 3 246 2 98 1 46 1 228 2 72 4 
144 1 284 1 83 1 
211 1 144 1 284 1 178 1 239 1 
144 1 284 1 83 1 
144 1 284 1 83 1 
144 1 284 1 171 1 
144 1 284 1 171 1 
144 1 284 1 171 1 
144 1 284 1 
110 1 341 1 
120 1 111 1 188 1 175 1 209 2 250 1 179 1 348 2 210 1 201 1 155 2 18 4 129 2 325 1 118 2 70 8 45 3 44 4 58 1 342 4 
210 1 120 1 148 1 111 1 188 1 175 1 18 3 118 2 70 6 45 2 250 1 58 1 342 3 179 1 
111 1 332 1 209 1 62 1 348 1 155 1 18 2 129 1 131 1 325 1 118 1 45 2 44 2 70 4 58 1 71 1 342 2 
174 1 111 2 332 2 162 1 167 1 18 6 325 1 131 2 118 1 281 2 45 2 70 12 342 6 71 2 58 2 160 2 
120 2 188 1 209 2 250 1 348 2 210 1 167 1 129 2 325 4 131 2 281 2 58 3 174 1 111 3 175 1 332 2 179 2 201 2 36 1 155 2 18 12 66 1 118 5 45 9 70 23 44 4 342 11 71 2 160 2 
18 1 70 1 160 1 
281 1 70 1 342 1 
242 1 111 1 332 1 209 1 62 1 348 1 155 1 18 3 129 1 131 1 325 1 118 2 44 2 70 6 45 3 342 3 71 1 58 1 
162 1 209 1 249 1 51 1 348 1 167 1 129 1 351 1 131 4 325 2 281 2 58 4 174 1 111 4 332 4 358 1 155 1 262 1 18 11 68 1 118 2 70 22 44 2 45 4 342 11 71 4 160 2 
120 1 188 1 111 1 179 1 18 3 325 1 118 1 70 6 45 2 342 3 58 1 
120 1 175 1 209 1 250 1 179 1 348 1 36 1 201 1 155 1 18 2 129 1 325 1 118 1 45 2 70 3 44 2 342 1 
120 2 188 1 111 2 136 1 209 1 179 2 348 1 358 1 155 1 18 5 129 1 325 2 118 3 44 2 45 5 70 10 342 5 58 2 
111 1 209 1 358 1 348 1 155 1 129 1 131 1 325 1 44 2 70 2 45 1 342 2 
111 1 332 1 209 1 358 1 348 1 155 1 18 2 129 1 131 1 325 1 118 1 45 2 44 2 70 4 58 1 71 1 342 2 
120 1 209 3 179 1 358 1 348 3 201 1 36 1 155 3 18 2 129 3 325 1 118 1 70 3 44 6 45 2 9 1 342 1 
120 2 188 1 162 1 209 4 250 1 348 4 129 4 325 3 281 1 9 1 58 2 216 1 111 2 175 1 136 1 62 1 179 2 358 1 36 1 201 1 155 4 18 8 118 3 45 6 44 8 70 15 342 7 160 1 
162 1 209 1 249 1 51 1 348 1 129 1 131 2 351 1 281 1 58 1 111 2 332 2 358 1 155 1 262 1 18 4 68 1 118 1 70 11 44 2 45 1 342 7 71 1 160 1 
162 1 209 2 249 1 51 1 348 2 129 2 351 1 131 2 281 1 58 1 111 2 332 2 62 1 358 1 155 2 262 1 18 4 68 1 118 1 70 11 44 4 45 1 342 7 71 1 160 1 
120 1 188 1 162 1 209 3 249 1 250 1 51 1 348 3 210 1 167 1 129 3 351 1 131 4 325 2 281 2 58 5 174 1 111 5 175 1 332 4 62 1 179 1 358 1 201 1 155 3 262 1 18 15 68 1 118 4 70 29 44 6 45 6 342 14 71 4 160 2 
162 1 209 2 249 1 51 1 348 2 167 1 129 2 351 1 131 4 325 1 281 2 58 3 174 1 111 4 332 4 62 1 358 1 155 2 262 1 18 9 68 1 118 2 70 21 44 4 45 3 342 12 71 3 160 2 
162 1 209 1 249 1 51 1 348 1 129 1 131 2 351 1 281 1 58 1 111 2 332 2 358 1 155 1 262 1 18 4 68 1 118 1 70 11 44 2 45 1 342 7 71 1 160 1 
162 1 209 1 249 1 51 1 348 1 167 1 129 1 351 1 131 4 325 2 281 2 58 4 174 1 111 4 332 4 358 1 155 1 262 1 18 11 68 1 118 2 70 22 44 2 45 4 342 11 71 4 160 2 
162 1 209 3 249 1 51 1 348 3 167 1 129 3 351 1 131 4 325 1 281 2 58 3 174 1 111 4 332 4 62 1 358 1 201 1 155 3 262 1 18 10 68 1 118 2 70 22 44 6 45 3 342 12 71 3 160 2 
162 1 209 2 348 2 129 2 131 1 281 1 9 1 58 1 174 1 111 1 332 1 358 1 155 2 18 4 68 1 118 1 70 7 44 4 45 1 342 3 71 1 160 2 
120 3 188 1 111 1 175 1 250 2 179 3 18 4 325 3 118 3 70 7 45 6 58 1 342 3 
162 1 209 2 348 2 129 2 131 1 281 1 9 1 58 1 174 1 111 1 332 1 358 1 155 2 18 4 68 1 118 1 70 7 44 4 45 1 342 3 71 1 160 2 
212 1 276 1 143 1 67 1 50 1 251 1 20 1 
186 1 135 1 90 1 50 1 251 1 20 1 212 1 276 1 143 1 67 1 304 1 294 1 
307 1 148 1 232 1 38 1 55 1 130 1 298 1 273 1 191 1 72 1 180 1 
307 1 296 1 232 1 298 1 50 1 191 1 273 1 20 2 180 1 235 1 212 1 38 1 276 2 322 1 303 1 338 1 292 1 72 1 
328 1 0 1 307 3 296 1 232 1 50 1 191 1 273 1 114 1 359 1 20 2 180 1 274 1 235 2 212 2 236 1 38 2 276 2 322 1 303 2 338 1 292 1 72 1 
0 1 296 1 232 1 50 1 273 1 191 2 20 2 235 2 274 1 212 2 236 1 4 1 276 2 303 2 328 1 307 3 114 1 180 2 359 1 117 1 38 2 338 1 292 1 72 2 
232 1 298 1 273 1 347 1 191 3 105 1 235 1 274 1 253 1 236 1 128 1 327 1 328 1 307 4 60 2 200 1 180 3 117 1 141 1 38 1 361 1 291 2 72 3 
328 1 307 4 232 1 298 1 60 2 191 3 347 1 273 1 180 3 105 1 253 1 274 1 235 1 236 1 117 1 38 1 181 1 128 1 361 1 291 2 327 1 72 3 
232 1 273 1 191 1 72 1 180 1 140 1 
307 3 75 1 232 3 124 1 298 2 176 1 191 7 273 2 140 1 180 6 235 1 17 1 38 2 7 1 290 1 337 1 339 1 184 1 158 1 72 7 258 1 
99 1 188 1 232 1 50 2 191 1 273 1 235 1 276 2 322 1 107 1 58 1 111 1 335 1 285 1 155 2 18 3 205 2 118 2 339 1 338 1 69 1 292 1 70 6 72 1 342 3 120 1 296 1 76 1 247 1 344 1 163 2 209 2 250 1 348 2 20 2 210 1 212 1 129 2 303 1 307 1 175 1 220 1 179 1 180 1 38 1 44 4 45 2 
100 2 187 1 122 1 319 1 298 1 165 1 191 1 347 1 105 1 253 1 128 2 168 1 326 2 8 2 327 1 307 2 134 1 32 1 308 1 91 1 60 3 180 1 203 1 181 1 361 1 291 3 228 2 72 1 
307 2 232 2 124 1 347 1 191 2 273 1 140 1 180 2 235 1 38 1 149 1 339 1 72 2 
307 1 232 1 298 1 191 4 273 1 180 4 116 1 117 1 38 1 55 1 130 1 339 1 72 4 
307 1 19 1 329 1 232 2 191 2 273 1 180 2 235 1 236 1 17 1 38 1 288 1 337 1 72 2 
302 1 232 1 123 1 345 1 298 1 92 1 273 1 191 1 72 1 180 1 
307 1 232 1 191 2 273 1 180 2 154 1 38 1 7 1 339 1 158 1 72 2 
307 3 75 1 232 2 298 1 191 5 273 2 180 4 116 1 236 1 38 2 55 1 130 1 290 1 339 1 158 1 72 5 
307 3 75 1 232 2 298 1 191 5 273 2 357 1 180 4 116 1 236 1 38 2 55 1 130 1 339 1 158 1 72 5 
307 1 296 1 232 1 298 1 50 1 191 1 273 1 20 2 180 1 235 1 212 1 4 1 38 1 276 2 303 1 338 1 292 1 72 1 
307 1 232 2 124 1 191 1 273 1 180 1 235 1 236 1 17 1 38 1 337 1 72 1 258 1 
269 1 108 1 41 1 50 1 22 1 
0 1 319 1 269 2 50 1 60 2 299 1 114 1 359 1 105 1 253 1 166 1 106 1 142 1 41 1 108 2 291 2 22 2 293 1 327 1 
212 1 89 1 225 1 276 1 41 1 108 1 22 1 252 1 20 1 
166 1 41 1 299 1 
28 3 29 1 275 1 197 1 30 1 5 1 316 1 182 1 102 1 169 3 82 1 
147 1 15 1 316 1 234 1 
275 1 316 1 
148 1 275 1 316 1 182 1 
28 1 29 1 275 1 316 1 182 1 169 1 82 1 
28 1 59 1 49 1 
29 1 28 3 197 2 30 1 137 1 33 1 82 1 275 1 316 1 182 1 169 3 24 1 
28 2 29 1 275 1 5 1 263 1 316 1 182 1 169 2 82 1 
29 1 28 1 101 1 30 1 345 1 92 1 82 1 234 1 14 1 316 1 169 1 
28 1 29 1 275 1 30 1 316 1 169 1 82 1 
28 1 29 1 275 2 30 1 182 1 169 1 82 1 
29 2 28 2 268 1 30 1 82 2 275 1 54 1 316 1 169 2 257 1 
29 1 28 3 30 1 102 1 82 1 234 1 147 1 255 1 275 1 5 2 182 1 316 2 169 3 
29 1 28 2 30 1 123 1 219 1 345 2 92 1 82 1 14 1 275 1 96 1 5 1 316 1 182 1 169 2 
29 2 28 4 206 1 30 1 82 2 234 1 147 1 275 1 263 1 5 2 182 1 316 2 169 4 
28 1 29 1 275 1 30 1 316 1 182 1 169 1 82 1 
28 4 29 1 197 1 33 1 82 1 234 1 147 1 15 1 275 2 5 2 182 2 316 3 169 4 24 1 
29 1 28 2 30 1 82 1 314 1 275 1 5 1 85 1 316 1 182 1 169 2 280 1 
29 1 28 3 197 2 30 1 33 1 82 1 275 1 316 1 182 1 169 3 24 2 215 1 
185 1 316 2 278 2 190 1 
153 1 28 1 29 1 30 1 169 1 82 1 
28 2 29 1 275 1 30 1 5 1 316 1 182 1 102 1 169 2 82 1 
61 1 
28 1 29 1 275 1 30 1 316 1 182 1 169 1 82 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 108 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 228 343 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 228 24 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 198 259 217 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 228 44 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 108 4 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 228 209 333 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 39 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 39 16 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 228 24 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 228 145 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 228 145 122 60 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 228 145 122 60 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 228 145 122 182 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 39 16 25 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 39 16 25 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 228 145 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 208 211 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 228 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 228 233 (90,210) 318 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 208 211 11 77 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 287 320 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V ERROR java.lang.NullPointerException 228 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 228 209 333 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 116 63 (30,269) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 228 233 (90,210) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 0
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3035 | if (x) -> if (!x)
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 772 | 0 -> -1
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | RETURN | 5491 | return null
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6199 | = null
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7182 | if (x) -> if (!x)
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | RETURN | 3180 | return null
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z | OPERATOR | 2861 | != -> ==
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
286 1 72 2 351 1 140 1 120 2 262 1 146 2 238 2 356 4 194 6 80 1 299 1 272 9 339 4 275 1 54 1 304 1 306 9 96 3 310 1 159 2 326 2 114 1 327 2 312 1 21 1 
286 1 72 2 351 1 140 1 120 2 262 1 146 2 238 2 356 4 194 6 80 1 299 1 272 9 339 4 275 1 54 1 304 1 306 9 96 3 310 1 159 2 326 2 327 2 114 1 312 1 21 1 
286 1 72 2 351 1 140 1 120 2 262 1 146 2 238 2 356 4 194 6 80 1 299 1 272 9 339 4 275 1 54 1 304 1 306 9 96 3 310 1 159 2 326 2 327 2 114 1 312 1 21 1 
72 1 351 1 140 1 120 2 262 1 146 2 238 2 356 3 194 4 80 1 299 1 272 7 339 3 275 1 54 1 304 1 306 7 96 2 310 1 159 2 326 2 327 2 114 1 312 1 21 1 
286 1 299 1 272 4 72 2 339 2 54 1 306 4 96 1 146 1 159 1 326 1 238 1 327 1 356 2 194 3 80 1 
70 1 272 2 290 1 339 1 54 1 120 1 74 1 181 1 306 2 146 1 159 1 326 1 115 1 238 1 312 1 21 1 
70 1 272 3 339 2 140 1 54 1 120 1 306 3 146 2 96 1 115 1 238 2 356 1 194 1 
286 1 299 1 155 1 272 9 72 2 339 4 140 1 54 1 340 1 120 1 262 1 304 1 306 9 146 2 96 3 159 1 326 1 327 1 238 2 356 4 194 7 80 1 
286 1 299 1 155 1 272 9 72 2 339 4 140 1 54 1 340 1 120 1 262 1 304 1 306 9 146 2 96 3 159 1 326 1 327 1 238 2 356 4 194 7 80 1 
53 1 18 1 341 1 
305 2 53 1 197 1 
85 2 61 2 71 1 291 2 109 2 261 2 227 1 313 2 
1 1 136 1 71 1 73 2 316 1 291 2 261 2 46 1 105 2 123 1 106 1 213 1 265 1 31 1 85 3 89 1 199 1 274 1 109 2 37 1 12 1 278 1 58 1 279 1 281 2 61 2 95 1 250 1 113 1 201 2 224 1 345 1 17 1 202 1 311 2 227 1 313 3 
85 1 162 1 109 1 291 1 261 1 61 1 15 1 227 1 346 1 313 1 
85 2 66 1 162 1 53 1 363 1 109 1 291 2 261 1 157 1 61 1 15 1 236 1 41 1 124 1 18 1 227 1 204 1 298 1 346 2 313 2 127 1 
85 2 66 1 162 1 53 1 109 2 291 2 157 2 261 2 61 2 15 1 41 1 124 2 18 1 227 1 204 1 298 1 346 2 313 2 127 1 
266 1 133 1 108 1 124 1 157 1 
266 1 133 1 124 1 157 1 343 1 228 1 
133 1 124 1 157 1 
85 1 162 1 109 1 291 1 157 1 261 1 61 1 15 1 266 1 124 1 204 1 227 1 346 1 313 1 
53 1 
266 1 133 1 124 1 157 1 228 1 24 1 
217 1 198 1 361 1 266 2 133 1 147 1 259 1 292 1 166 1 124 3 157 3 
71 1 341 1 
85 2 71 1 291 2 109 1 261 1 121 1 61 1 225 1 346 1 215 1 313 2 
188 1 101 1 141 1 
85 1 89 1 136 1 71 1 199 1 58 1 105 1 106 1 213 1 201 1 113 1 345 1 267 1 17 1 311 1 313 1 
85 2 89 1 136 1 199 1 291 1 261 1 141 1 58 1 38 1 213 1 106 1 61 1 105 1 113 1 201 1 345 1 17 1 311 1 242 1 313 2 
85 3 71 1 109 1 291 3 261 3 38 1 61 3 346 1 215 1 313 3 
85 1 61 1 162 1 291 1 261 1 346 1 313 1 
85 1 109 1 291 1 261 1 121 1 61 1 225 1 346 1 313 1 
1 1 136 1 291 3 46 1 105 1 106 1 298 1 242 1 199 1 109 2 157 1 12 1 58 1 61 3 201 1 113 1 250 1 345 1 17 1 202 1 311 1 346 2 313 4 66 1 71 1 73 2 261 3 169 1 123 1 213 1 124 1 31 1 215 1 127 1 33 1 85 4 89 1 37 1 38 1 281 1 95 1 41 1 225 1 224 1 227 1 
38 1 85 2 61 1 71 1 363 1 291 2 261 1 195 1 313 2 
85 3 66 1 53 1 109 1 291 3 157 1 261 3 169 1 38 2 61 3 41 1 225 1 124 1 43 1 346 1 298 1 242 1 313 3 127 1 
85 2 188 1 109 1 291 2 261 2 141 1 38 1 61 2 225 1 313 2 
85 1 136 1 89 1 71 1 199 1 58 1 105 1 106 1 213 1 201 1 113 1 345 1 17 1 311 1 313 1 
85 1 136 1 89 1 71 1 199 1 105 1 106 1 213 1 201 1 113 1 345 1 311 1 240 1 269 1 313 1 
101 1 188 1 1 1 208 1 73 2 167 1 141 1 46 1 171 1 334 1 31 1 243 1 271 1 128 1 37 1 91 1 111 1 279 1 281 3 250 1 224 1 226 1 202 2 20 1 
85 1 216 1 61 1 291 1 261 1 346 1 127 1 313 1 
85 2 71 1 291 2 109 1 261 2 38 1 61 2 225 1 346 1 215 1 313 2 
216 1 85 2 61 2 162 1 291 2 261 2 346 1 313 2 
35 1 164 1 
35 1 164 1 
187 1 100 1 
187 1 100 1 
187 1 100 1 
35 1 164 1 260 1 
67 1 35 1 164 1 
187 1 100 1 237 1 35 2 164 2 294 1 
35 1 164 1 260 1 
35 1 164 1 260 1 
161 1 35 1 164 1 
161 1 35 1 164 1 
161 1 35 1 164 1 
218 1 53 1 321 2 35 2 2 1 164 2 190 1 56 2 157 2 45 2 237 1 223 3 62 1 51 1 134 2 124 2 336 1 347 2 84 1 
67 1 71 1 164 1 190 1 291 2 261 2 168 1 7 1 124 1 78 1 85 2 35 1 321 1 87 1 246 1 56 1 157 1 61 2 223 1 249 1 184 1 134 1 347 1 313 2 
159 1 326 1 327 1 
159 1 290 1 326 1 
22 1 290 1 326 3 327 2 247 1 149 1 
22 1 283 1 290 1 326 2 327 1 247 1 
22 1 290 1 326 2 327 1 247 2 
266 1 133 1 124 1 157 1 44 1 228 1 
266 2 133 1 108 1 124 2 157 2 4 1 19 1 47 1 
160 1 102 3 208 1 350 1 292 1 166 1 211 1 75 1 6 1 171 1 334 1 266 2 147 1 124 3 214 1 244 1 53 2 197 1 361 1 157 3 91 1 93 1 301 1 305 2 249 1 18 1 
160 1 102 5 208 2 350 2 292 1 166 1 211 2 75 2 6 1 171 2 334 2 266 3 147 1 124 4 214 2 244 1 53 2 197 1 361 1 219 1 179 1 157 4 91 2 93 2 301 1 305 3 249 2 18 1 42 1 
89 1 119 1 341 1 
230 1 89 1 
331 1 
89 1 345 1 
89 3 113 1 345 1 119 2 148 1 192 1 
89 1 113 1 345 1 
89 1 183 1 
287 1 207 2 332 1 352 1 293 1 111 2 48 1 279 3 295 1 281 4 334 1 28 1 308 1 226 3 202 1 81 1 
287 1 207 2 332 1 352 1 293 1 111 2 48 1 279 3 295 1 281 4 334 1 28 1 308 1 226 3 202 1 81 1 
287 1 207 2 332 1 352 1 293 1 111 2 48 1 279 3 295 1 281 4 334 1 28 1 308 1 226 3 202 1 203 1 81 1 
287 1 99 3 207 3 208 3 73 2 332 1 211 3 293 1 352 2 46 1 48 2 295 2 171 3 28 2 334 4 357 1 81 2 241 1 31 1 8 1 129 1 37 1 91 3 111 4 344 1 302 4 279 12 281 25 307 1 308 1 325 1 224 1 226 6 202 13 
287 1 207 2 103 1 73 4 352 1 293 1 46 2 48 1 295 1 334 1 28 1 31 2 81 1 241 1 83 1 37 2 111 3 279 4 281 6 308 1 224 2 226 4 202 2 
329 1 70 1 290 1 165 1 317 1 120 1 105 1 106 1 213 1 353 1 146 1 238 1 194 1 126 1 149 1 151 1 9 1 272 2 339 1 54 1 13 1 94 1 306 2 159 1 201 1 326 2 115 1 327 1 311 1 254 1 
314 1 117 1 329 1 70 1 290 1 165 1 317 1 120 1 105 1 106 1 213 1 353 1 146 1 238 1 194 2 126 1 149 1 151 1 9 1 272 3 339 1 13 1 323 1 306 3 159 1 201 1 326 2 115 1 327 1 311 1 
314 1 329 1 70 1 290 1 165 1 120 1 317 1 105 1 106 1 213 1 194 2 126 1 149 1 151 1 9 1 272 2 339 1 323 1 306 2 201 1 159 1 326 2 115 1 327 1 311 1 
349 1 117 1 329 2 136 1 317 2 120 2 213 1 105 1 172 1 104 1 106 1 146 1 29 1 238 1 9 2 89 1 272 1 59 1 306 1 201 1 345 1 311 1 367 1 
314 1 329 1 290 1 165 1 317 1 120 1 105 1 106 1 213 1 353 1 146 1 238 1 126 1 149 1 151 1 9 1 272 1 54 1 13 1 94 1 306 1 159 1 201 1 326 2 327 1 311 1 
98 1 
160 1 270 1 102 1 209 1 361 1 136 1 350 1 232 1 166 1 292 1 157 1 333 1 105 1 201 1 133 2 124 1 311 1 228 1 
85 1 66 1 53 2 363 1 291 1 55 2 157 2 193 1 264 1 112 1 39 1 236 1 41 1 132 1 133 1 124 2 18 2 82 1 346 1 298 1 127 1 313 1 
85 1 66 1 289 1 53 2 363 1 291 1 55 3 157 2 193 1 264 1 112 1 236 1 41 1 132 1 124 2 18 2 82 1 346 1 298 1 127 1 313 1 
85 1 66 1 53 2 363 1 291 1 55 2 157 2 193 1 264 1 112 1 39 1 236 1 41 1 132 1 133 1 16 1 124 2 18 2 82 1 346 1 298 1 127 1 313 1 
133 1 124 1 157 1 228 1 24 1 
66 1 102 1 350 1 292 1 166 1 291 1 193 1 143 1 264 1 236 1 145 1 124 2 82 1 298 1 127 1 85 1 270 1 197 1 53 2 361 1 10 1 36 1 363 1 364 1 157 2 55 2 305 1 112 1 132 1 41 1 133 1 252 1 18 2 346 1 228 1 313 1 
66 1 102 1 350 1 292 1 291 1 166 1 122 1 193 1 143 1 264 1 236 1 145 1 124 2 82 1 298 1 32 1 127 1 85 1 270 1 197 1 53 2 361 1 10 1 36 1 363 1 364 1 157 2 55 2 60 1 112 1 132 1 41 1 133 1 252 1 18 2 346 1 228 1 313 1 
66 1 102 1 350 1 292 1 291 1 166 1 122 1 193 1 143 1 264 1 236 1 145 1 124 2 82 1 298 1 32 1 127 1 85 1 270 1 197 1 53 2 361 1 10 1 36 1 363 1 364 1 157 2 55 2 60 1 112 1 132 1 41 1 133 1 252 1 18 2 346 1 228 1 313 1 
66 1 102 1 350 1 292 1 291 1 166 1 122 1 193 1 264 1 236 1 145 1 124 2 82 1 298 1 127 1 85 1 153 1 270 1 53 2 361 1 273 1 363 1 364 1 157 2 55 2 221 1 182 1 305 1 112 1 200 1 132 1 41 1 133 1 252 1 18 2 346 1 228 1 313 1 
85 1 66 1 53 2 363 1 291 1 55 2 157 2 25 1 193 1 264 1 112 1 39 1 236 1 41 1 132 1 133 1 16 1 124 2 18 2 82 1 346 1 298 1 127 1 313 1 
85 1 66 1 53 2 363 1 291 1 55 2 157 2 25 1 193 1 264 1 112 1 39 1 236 1 41 1 132 1 133 1 16 1 124 2 18 2 82 1 346 1 298 1 127 1 313 1 
66 1 102 1 350 1 292 1 166 1 291 1 193 1 264 1 236 1 145 1 124 2 82 1 298 1 127 1 85 1 153 1 270 1 53 2 361 1 273 1 363 1 364 1 157 2 55 2 221 1 305 1 112 1 132 1 41 1 133 1 252 1 18 2 346 1 228 1 313 1 
287 1 188 1 101 1 207 1 1 1 71 1 73 2 141 1 293 1 46 1 48 1 295 1 334 1 31 1 271 1 341 1 37 1 111 2 279 2 281 3 308 1 250 1 224 1 226 2 202 1 
99 3 101 10 188 2 1 1 163 1 208 2 71 1 73 4 211 2 141 10 46 2 212 1 171 2 334 2 31 2 8 1 88 1 129 1 37 2 12 1 91 2 111 1 278 1 302 3 279 6 248 1 281 14 222 1 250 2 224 2 226 1 202 8 
188 1 1 1 256 1 136 1 71 1 73 2 291 1 261 1 46 1 212 1 213 1 106 1 105 1 267 1 31 1 242 1 85 2 338 1 89 1 199 1 37 1 12 1 58 1 278 1 38 1 279 1 281 2 61 1 113 1 201 1 250 1 345 1 224 1 17 1 202 1 311 1 255 1 313 2 
287 1 288 2 101 5 188 5 0 1 1 3 136 1 291 1 141 5 293 1 46 3 48 1 295 1 49 1 105 1 106 2 334 3 242 1 199 2 12 1 111 4 58 2 61 1 308 1 201 1 250 3 113 2 345 2 17 2 202 8 311 1 313 3 207 1 68 2 210 2 208 2 71 1 73 6 261 1 211 2 212 1 123 2 213 2 171 2 31 3 85 3 89 2 37 3 91 2 278 1 38 1 279 7 281 15 224 3 226 4 135 2 
229 1 314 1 349 1 1 2 118 1 136 2 138 1 73 4 316 2 291 1 3 1 261 1 46 2 213 2 106 2 105 8 104 1 27 1 31 2 85 1 271 1 89 3 362 1 37 2 12 1 278 1 38 1 279 1 281 2 61 1 40 1 201 7 250 2 224 2 345 2 202 1 311 8 254 1 313 1 
85 1 1 1 208 1 73 2 291 1 109 1 37 1 261 1 211 1 46 1 279 2 212 1 281 2 61 1 334 1 175 1 250 1 224 1 225 1 31 1 313 1 
1 1 271 1 208 1 73 2 37 1 167 1 46 1 279 1 281 1 334 1 250 1 224 1 31 1 
188 1 101 1 1 1 271 1 73 2 37 1 141 1 91 1 111 1 46 1 281 2 171 1 250 1 224 1 226 1 202 2 20 1 31 1 
101 1 188 1 1 1 208 1 73 2 211 1 141 1 46 1 171 1 334 1 31 1 271 1 37 1 91 1 111 1 279 1 281 3 250 1 224 1 226 1 202 2 
1 1 208 1 138 1 73 2 37 1 167 1 46 1 279 1 281 1 334 1 250 1 224 1 31 1 
188 1 101 1 1 1 138 1 73 2 37 1 141 1 91 1 111 1 46 1 281 2 171 1 250 1 224 1 226 1 202 2 20 1 31 1 
101 1 188 1 1 1 208 1 138 1 73 2 211 1 141 1 46 1 171 1 334 1 31 1 37 1 91 1 111 1 279 1 281 3 250 1 224 1 226 1 202 2 
101 1 188 1 1 1 208 1 73 2 211 1 141 1 46 1 171 1 334 1 31 1 37 1 91 1 111 1 279 1 281 3 250 1 224 1 226 1 202 2 
1 1 136 1 71 1 73 2 46 1 213 1 106 1 123 1 105 1 31 1 85 1 89 1 199 1 37 1 12 1 278 1 58 1 279 1 281 2 113 1 201 1 250 1 345 1 224 1 17 1 202 1 311 1 313 1 
85 1 1 1 89 1 136 1 71 1 199 1 73 2 37 1 12 1 46 1 278 1 279 1 281 2 105 1 106 1 213 1 250 1 201 1 113 1 224 1 345 1 202 1 311 1 125 1 240 1 31 1 269 1 313 1 
101 1 188 1 1 1 208 1 73 2 211 1 141 1 46 1 212 1 171 1 334 1 31 1 37 1 91 1 111 1 279 1 281 3 250 1 224 1 226 1 202 2 
188 1 101 1 288 1 1 1 208 1 73 2 211 1 141 1 46 1 171 1 213 1 106 1 123 1 105 1 334 1 31 1 85 1 89 1 199 1 37 1 91 1 111 1 58 1 279 1 281 3 113 1 201 1 250 1 345 1 224 1 226 1 17 1 202 2 311 1 254 1 313 1 
1 1 208 1 73 2 291 1 261 1 211 1 46 1 212 1 263 1 171 1 334 1 31 1 85 1 109 1 37 1 91 1 279 1 281 2 61 1 250 1 225 1 224 1 202 1 313 1 
99 1 315 1 208 2 73 4 211 2 46 2 171 2 334 2 50 1 31 2 8 1 83 1 150 1 360 1 156 1 129 1 37 2 91 2 111 2 302 2 280 1 279 4 281 11 158 1 224 2 226 2 202 7 205 1 
348 1 99 2 315 1 208 3 330 1 73 4 211 3 46 2 26 1 171 3 334 3 50 4 77 1 241 1 31 2 83 1 8 2 150 2 360 1 37 2 57 1 11 1 91 3 111 1 302 2 280 1 279 10 281 24 158 2 224 2 226 1 202 14 328 1 
99 1 315 1 208 2 73 4 211 2 46 2 171 2 334 2 50 2 31 2 8 1 83 1 150 1 360 1 156 1 129 1 37 2 57 1 91 2 111 1 302 2 280 1 279 5 281 13 158 1 224 2 226 1 202 8 
99 1 315 1 208 2 73 4 211 2 46 2 171 2 334 2 50 2 31 2 8 1 83 1 150 1 360 1 156 1 129 1 37 2 57 1 91 2 111 1 302 2 280 1 279 5 281 13 158 1 224 2 226 1 202 8 
348 1 287 1 99 4 315 1 207 1 208 7 330 1 73 2 211 7 293 1 46 1 48 1 26 1 295 1 171 7 334 8 50 3 77 1 31 1 8 2 83 1 150 1 360 1 129 2 37 1 57 1 11 1 91 7 111 6 302 4 280 1 279 17 281 39 222 2 158 1 308 1 224 1 226 6 202 22 328 1 
218 1 237 1 62 1 35 1 321 1 164 1 335 1 134 1 56 1 347 1 
67 1 168 1 
170 1 35 1 321 1 309 1 257 1 164 1 134 1 56 1 347 1 
218 1 53 1 321 1 35 1 164 1 190 1 157 1 56 1 45 1 237 1 223 2 62 1 51 1 134 1 124 1 336 1 347 1 84 1 
218 1 53 1 321 1 35 1 164 1 190 1 157 1 56 1 45 1 237 1 223 2 62 1 51 1 134 1 124 1 336 1 347 1 84 1 
218 1 53 1 321 1 35 1 164 1 190 1 157 1 56 1 45 1 237 1 223 2 62 1 51 1 134 1 124 1 336 1 347 1 84 1 
260 1 297 1 294 1 
260 1 297 1 294 1 
161 1 239 1 
161 1 239 1 294 1 
7 1 246 1 
67 1 71 1 164 1 291 2 261 2 45 1 168 1 7 1 266 1 124 1 78 1 84 1 107 1 85 2 35 1 321 1 87 1 246 1 157 1 56 1 61 2 223 1 249 1 184 1 134 1 347 1 313 2 
260 1 297 1 
161 1 239 1 294 1 
1 1 258 1 73 2 316 2 291 2 46 1 212 1 235 1 213 1 106 1 105 2 27 1 31 1 85 2 89 1 362 1 37 1 12 1 278 1 279 1 281 2 250 1 201 2 345 1 224 1 64 1 202 1 311 2 285 1 65 1 313 2 
314 1 151 1 9 1 290 1 231 1 322 1 23 1 13 1 213 1 106 1 105 2 159 1 201 2 326 2 327 1 311 2 254 1 126 1 149 1 
314 1 151 1 359 1 9 1 290 1 322 1 13 1 105 1 106 1 213 1 159 1 201 1 326 2 327 1 311 1 126 1 149 1 
9 1 349 1 89 1 136 1 231 1 213 1 106 1 105 1 172 1 104 1 201 1 345 1 311 1 185 1 
314 1 151 1 9 1 290 1 231 1 322 1 23 1 13 1 213 1 105 1 106 1 159 1 201 1 326 2 327 1 311 1 126 1 149 1 
178 1 
53 1 173 1 324 1 102 1 350 1 18 1 341 1 
270 1 197 1 361 1 102 1 10 1 36 1 350 1 166 1 292 1 143 1 305 1 133 1 228 1 
160 1 69 1 230 2 136 1 102 1 292 1 166 1 233 1 105 1 106 1 213 2 318 1 148 1 270 1 361 1 89 3 90 1 201 1 113 1 133 1 345 1 97 1 253 1 311 1 228 1 
99 1 270 1 53 2 197 2 208 1 361 1 102 2 350 3 166 1 292 1 211 1 11 1 93 3 302 1 305 4 334 1 77 1 8 1 214 3 328 1 
176 1 287 1 320 1 270 1 102 2 361 1 350 2 166 1 292 1 157 1 91 1 48 1 295 1 334 1 124 1 32 1 
270 1 53 1 361 1 102 1 350 1 166 1 292 1 324 1 173 1 18 1 
176 1 197 1 53 1 208 1 102 2 350 1 211 1 91 1 93 1 171 1 305 2 334 1 214 1 
133 1 228 1 
160 1 206 1 270 1 102 1 136 1 361 1 209 1 350 1 232 1 166 1 292 1 333 1 105 1 201 1 133 2 311 1 228 1 
1 1 136 1 71 1 73 2 291 2 261 2 46 1 105 1 123 1 106 1 213 1 31 1 85 3 89 1 199 1 109 2 37 1 12 1 58 1 281 1 61 2 95 1 201 1 113 1 250 1 224 1 345 1 17 1 202 1 311 1 227 1 313 3 
160 1 207 1 270 1 197 2 53 4 361 1 102 1 350 2 232 1 166 1 292 1 93 2 305 4 18 2 214 2 
134 1 268 1 347 1 
7 1 62 1 134 1 276 1 347 1 
134 1 268 1 347 1 
134 1 268 1 347 1 
134 1 300 1 347 1 
134 1 300 1 347 1 
134 1 300 1 347 1 
134 1 347 1 
35 1 164 1 
287 1 207 1 73 4 37 2 352 1 293 1 111 2 46 2 279 3 48 1 281 5 295 1 334 1 308 1 224 2 226 3 202 2 31 2 241 1 
287 1 207 1 341 1 293 1 111 2 48 1 279 2 295 1 281 3 334 1 308 1 226 2 202 1 
208 1 73 2 37 1 211 1 91 1 111 1 46 1 279 1 144 1 281 3 171 1 334 1 224 1 226 1 202 2 31 1 
99 1 208 1 129 1 211 1 91 1 111 1 302 2 279 2 281 6 171 1 334 1 226 1 202 4 8 1 
287 1 99 2 207 1 208 2 163 1 73 4 211 2 352 2 293 1 46 2 48 2 295 2 171 2 334 3 241 2 31 2 129 1 37 2 91 2 111 5 302 2 279 8 281 18 222 1 308 1 251 1 224 2 226 7 202 10 
281 1 202 1 302 1 
279 1 281 1 99 1 
68 1 208 1 73 2 37 1 211 1 91 1 46 1 111 2 279 2 144 1 281 5 171 1 334 1 224 1 226 2 202 3 31 1 
348 1 99 1 208 2 330 1 73 2 211 2 46 1 171 2 334 2 77 1 31 1 8 1 83 1 37 1 11 1 91 2 111 1 302 1 279 4 281 10 224 1 226 1 202 6 328 1 
279 1 281 1 287 1 334 1 
73 2 37 1 352 1 293 1 111 1 46 1 279 1 48 1 295 1 281 3 308 1 251 1 224 1 226 2 202 2 241 1 31 1 
320 1 287 1 91 1 352 1 111 2 48 1 279 2 295 1 281 4 334 2 226 3 202 2 
208 1 73 2 37 1 46 1 279 1 281 1 334 1 224 1 31 1 83 1 
208 1 73 2 37 1 211 1 91 1 111 1 46 1 279 1 281 3 171 1 334 1 224 1 226 1 202 2 31 1 83 1 
73 6 156 1 37 3 352 1 46 3 111 1 48 1 279 1 281 3 295 1 251 1 224 3 226 2 202 2 241 1 31 3 83 1 
287 2 99 3 207 1 208 3 73 10 211 3 352 2 293 1 46 5 48 2 295 2 144 1 171 3 334 5 241 2 357 1 31 5 8 1 83 1 156 1 129 1 37 5 91 3 111 4 344 1 302 4 279 11 281 25 307 1 308 1 251 1 224 5 226 6 202 14 
287 1 99 1 207 1 73 2 37 1 293 1 111 2 46 1 302 1 48 1 279 3 295 1 281 5 334 1 308 1 224 1 77 1 226 2 202 2 31 1 83 1 8 1 
348 1 99 2 208 4 330 1 73 4 211 4 46 2 144 1 171 4 334 4 77 1 31 2 8 1 83 1 129 1 37 2 11 1 91 4 111 3 302 2 279 7 281 18 222 1 224 2 226 3 202 11 328 1 
348 1 287 1 99 1 207 1 208 2 330 1 73 6 211 2 293 1 46 3 48 1 295 1 144 1 171 2 334 3 77 1 31 3 241 1 8 1 83 1 37 3 11 1 91 2 111 3 302 1 279 6 281 14 308 1 224 3 226 3 202 8 328 1 
348 1 99 1 208 2 330 1 73 4 211 2 46 2 144 1 171 2 334 2 77 1 31 2 8 1 83 1 37 2 11 1 91 2 111 1 302 1 279 4 281 10 224 2 226 1 202 6 328 1 
287 1 99 1 207 1 73 2 37 1 293 1 111 2 46 1 302 1 48 1 279 3 295 1 281 5 334 1 308 1 224 1 77 1 226 2 202 2 31 1 83 1 8 1 
348 1 99 1 208 2 330 1 73 2 211 2 46 1 171 2 334 2 77 1 31 1 8 1 83 1 37 1 11 1 91 2 111 1 302 1 279 4 281 10 224 1 226 1 202 6 328 1 
348 1 99 1 208 2 330 1 73 6 211 2 46 3 144 1 171 2 334 2 77 1 31 3 241 1 8 1 83 1 37 3 11 1 91 2 111 1 302 1 279 4 281 11 224 3 226 1 202 7 328 1 
348 1 99 1 208 2 330 1 73 6 211 2 46 3 171 2 334 2 77 1 31 3 241 1 8 1 83 1 156 1 37 3 11 1 91 2 111 2 302 1 279 4 281 11 224 3 226 2 202 7 328 1 
320 1 287 2 207 1 91 1 293 1 352 3 111 4 48 2 279 4 281 6 295 2 334 3 308 1 226 7 202 2 
348 1 99 1 208 2 330 1 73 6 211 2 46 3 171 2 334 2 77 1 31 3 241 1 8 1 83 1 156 1 37 3 11 1 91 2 111 1 302 1 279 4 281 11 224 3 226 1 202 7 328 1 
85 1 154 1 71 1 363 1 291 1 195 1 313 1 
186 1 177 1 85 1 154 1 71 1 363 1 291 1 303 1 76 1 174 1 195 1 313 1 
213 1 106 1 104 1 349 1 105 1 89 1 136 1 201 1 345 1 341 1 311 1 
85 2 89 1 136 1 71 1 199 1 291 1 261 1 38 1 213 1 61 1 105 1 106 1 113 1 201 1 345 1 17 1 311 1 313 2 
66 1 116 1 71 1 291 2 261 1 106 1 105 1 213 1 127 1 85 2 89 3 199 1 14 1 38 1 61 2 183 1 201 1 113 2 345 2 17 1 311 1 346 1 313 2 
66 1 116 1 71 1 291 2 261 1 106 1 105 2 213 1 319 1 269 1 127 1 85 2 89 3 199 1 14 1 38 1 61 2 183 1 201 2 113 2 345 2 311 2 346 1 313 2 
116 1 230 1 89 4 119 1 157 1 14 1 213 1 105 1 106 1 183 1 113 1 201 1 345 1 133 1 124 1 30 1 63 1 311 1 
162 1 230 1 69 1 291 1 261 1 105 1 124 1 85 1 53 1 89 1 109 1 157 1 14 1 61 1 15 1 201 1 18 1 311 1 204 1 227 1 346 1 313 1 
229 1 213 1 106 1 105 1 201 1 311 1 
86 1 136 1 89 1 105 1 106 1 213 2 201 1 113 1 345 1 148 1 284 1 311 1 358 1 
287 1 188 1 101 1 288 1 207 1 1 2 210 1 71 1 258 1 73 4 291 1 261 1 141 1 293 1 46 2 48 1 212 1 295 1 213 1 106 1 105 1 123 1 334 1 31 2 85 2 89 1 199 1 37 2 111 2 58 1 279 2 38 1 281 3 61 1 308 1 113 1 250 2 201 1 345 1 224 2 226 2 17 1 202 1 311 1 254 1 313 2 
206 1 270 1 230 1 69 1 89 1 361 1 136 1 90 1 166 1 292 1 157 1 233 1 105 1 266 1 201 1 133 1 124 1 253 1 311 1 228 1 
229 1 89 2 119 1 105 2 106 1 213 2 201 2 113 1 345 1 97 1 148 1 311 2 254 1 
349 1 136 1 89 1 277 1 213 1 105 4 104 1 106 1 201 4 345 1 319 1 311 4 254 1 
337 1 196 1 86 1 89 1 105 1 106 1 213 2 201 1 113 1 345 1 284 1 311 1 79 1 
151 1 213 1 106 1 105 1 136 1 159 1 290 1 201 1 326 1 311 1 
314 1 89 1 362 1 235 1 105 2 106 1 213 1 201 2 345 1 311 2 254 1 
349 1 136 1 89 3 118 1 362 1 3 1 277 1 14 1 104 1 105 5 106 2 213 2 201 4 345 2 311 5 254 1 
349 1 136 1 89 3 118 1 362 1 139 1 277 1 14 1 104 1 105 5 106 2 213 2 201 4 345 2 311 5 254 1 
85 2 89 1 136 1 71 1 199 1 291 1 261 1 38 1 213 1 61 1 105 1 106 1 113 1 201 1 345 1 311 1 269 1 313 2 
86 1 89 1 14 1 105 1 106 1 213 2 201 1 113 1 345 1 148 1 284 1 311 1 358 1 
71 1 220 1 365 1 110 1 191 1 
66 1 162 1 137 1 291 1 261 1 191 1 169 1 266 1 124 2 298 1 127 1 85 1 152 1 53 1 220 1 109 1 365 1 157 2 110 1 61 1 131 1 15 1 41 1 18 1 227 1 204 1 346 2 313 1 
85 1 291 1 64 1 365 1 285 1 191 1 110 1 313 1 65 1 
131 1 137 1 191 1 
70 1 339 1 115 1 341 1 
306 1 70 1 146 1 272 1 339 1 115 1 238 1 
306 1 120 1 317 1 
234 1 52 1 306 3 70 1 146 1 272 3 339 1 189 1 115 1 238 1 54 1 21 2 
306 2 70 1 146 1 272 2 339 1 72 1 115 1 238 1 194 1 
272 1 339 1 54 1 306 1 146 1 159 1 326 1 238 1 327 1 356 1 80 1 
306 1 70 1 146 1 272 1 339 1 238 1 54 1 
306 1 70 2 146 1 272 1 115 1 238 1 54 1 
70 1 272 2 339 1 54 1 342 1 92 1 306 2 366 1 146 2 238 2 
70 1 272 3 339 2 54 1 262 1 304 1 306 3 146 1 96 1 115 1 238 1 356 1 194 2 
70 1 290 1 272 2 339 1 54 1 5 1 306 2 146 1 159 1 326 2 115 1 238 1 327 1 194 1 149 1 
286 1 70 1 272 4 72 1 339 2 54 1 306 4 146 2 96 1 115 1 238 2 356 1 194 2 
306 1 70 1 146 1 272 1 339 1 115 1 238 1 54 1 
52 1 70 2 272 4 339 3 180 1 234 1 306 4 146 1 96 1 115 2 238 1 356 1 194 2 21 1 
70 1 155 1 272 2 339 1 54 1 142 1 306 2 146 1 355 1 238 1 115 1 194 1 
52 1 245 1 70 1 272 3 339 1 54 1 234 2 306 3 146 1 238 1 115 1 21 2 
130 1 296 2 354 1 339 2 
34 1 306 1 146 1 272 1 238 1 54 1 
304 1 306 2 70 1 146 1 272 2 339 1 115 1 238 1 54 1 194 1 
282 1 
306 1 70 1 146 1 272 1 339 1 115 1 238 1 54 1 
304 1 306 3 70 1 146 1 272 3 339 1 115 1 238 1 54 1 194 1 21 1 
96 1 339 1 180 1 356 1 
70 1 339 1 

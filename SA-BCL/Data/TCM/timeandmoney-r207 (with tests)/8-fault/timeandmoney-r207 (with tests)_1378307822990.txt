#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (150,266,309,314,333) (335,362) (335,362) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (150,266,309,314,333) (335,362) (335,362) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (150,266,309,314,333) (335,362) (335,362) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (150,266,309,314,333) (335,362) (335,362) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 255 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (82,104,137,223) (82,104,137,223) 97 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10137 | stmt -> ;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money; | ASSIGN | 6447 | = null
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3669 | - -> >>
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | RETURN | 1328 | return null
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | STATEMENT | 4739 | stmt -> ;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2116 | = null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | OPERATOR | 2465 | - -> <<
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint; | RETURN | 620 | return null
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
242 1 104 1 223 1 98 1 248 1 212 1 362 1 137 1 333 1 9 1 335 1 10 1 228 1 380 1 
242 1 104 1 223 1 98 1 212 1 362 1 248 1 137 1 333 1 9 1 335 1 10 1 228 1 380 1 
242 1 104 1 223 1 98 1 212 1 362 1 248 1 137 1 333 1 9 1 335 1 10 1 228 1 380 1 
242 1 104 1 223 1 98 1 212 1 362 1 248 1 137 1 333 1 9 1 335 1 10 1 228 1 380 1 
237 1 82 3 288 2 15 1 46 2 104 4 223 1 18 1 212 1 248 1 121 1 137 1 88 1 374 1 227 1 43 3 228 1 380 4 
14 1 191 1 104 2 223 1 98 1 18 1 212 1 137 1 333 1 374 1 10 1 377 1 227 1 43 1 380 2 228 1 
286 1 82 1 46 1 104 3 223 2 98 1 212 1 137 2 88 1 374 1 227 1 43 2 380 3 
237 1 286 1 82 7 15 1 288 2 46 4 300 1 104 9 223 2 98 1 18 1 248 1 212 1 121 1 137 2 198 1 88 3 374 1 42 1 227 1 43 5 144 1 228 1 380 9 
237 1 286 1 82 7 15 1 288 2 46 4 300 1 104 9 223 2 98 1 18 1 248 1 212 1 121 1 137 2 198 1 88 3 374 1 42 1 227 1 43 5 144 1 228 1 380 9 
269 1 145 1 254 1 
269 1 375 1 148 2 
308 2 215 2 168 2 322 1 83 1 37 2 235 2 247 2 
220 1 308 3 117 2 26 1 168 2 120 2 263 1 68 1 48 1 225 1 6 1 291 1 334 2 226 1 320 1 53 1 32 1 33 1 157 1 205 1 178 1 179 1 322 1 83 1 37 2 323 1 135 1 247 2 161 1 215 3 277 1 61 2 250 1 252 1 163 1 329 2 235 2 
59 1 213 1 308 1 215 1 168 1 322 1 37 1 267 1 235 1 247 1 
295 1 59 1 236 1 269 1 308 1 44 1 358 1 181 1 84 1 363 1 215 1 254 1 201 1 235 1 
295 1 59 1 269 1 308 1 44 2 168 1 358 1 37 1 84 1 247 1 363 2 215 1 254 1 201 1 235 1 
363 1 44 1 229 1 313 1 184 1 
269 1 129 1 363 2 44 2 229 1 313 1 254 1 166 1 
363 1 44 1 229 1 
59 1 308 1 44 1 168 1 322 1 313 1 37 1 246 1 247 1 213 1 363 1 215 1 267 1 235 1 
269 1 
60 1 269 1 363 2 44 2 229 1 313 1 254 1 166 1 
269 1 44 5 229 2 272 1 313 2 182 1 153 2 4 1 363 5 140 2 199 1 351 1 254 1 352 1 217 1 34 2 338 1 218 1 166 1 
205 1 308 2 26 1 117 1 207 1 323 1 37 1 68 1 135 1 247 1 161 1 225 1 275 1 215 2 334 1 61 1 252 1 32 1 31 1 235 1 
145 1 83 1 
308 2 168 1 239 1 83 2 299 1 37 1 247 1 215 2 235 2 
204 1 321 1 
205 1 308 1 117 1 26 1 83 1 323 1 68 1 135 1 161 1 225 1 215 1 334 1 61 1 124 1 252 1 32 1 
308 3 215 3 168 1 83 1 37 3 31 1 235 3 247 3 
59 1 308 1 215 1 37 1 267 1 235 1 247 1 
59 1 308 1 215 1 168 1 239 1 37 1 299 1 235 1 247 1 
308 4 26 1 117 1 44 1 358 1 168 2 120 2 68 1 48 1 225 1 6 1 291 1 363 1 334 1 226 1 320 1 32 1 31 1 201 1 33 1 157 1 205 1 295 1 59 1 322 1 83 1 323 1 299 1 37 3 84 1 301 1 135 1 247 3 161 1 215 4 275 1 277 1 61 1 250 1 110 1 252 1 163 1 329 1 235 3 
308 2 215 2 83 1 181 1 37 1 27 1 31 1 235 2 247 1 
59 1 295 1 269 1 308 3 44 1 168 1 358 1 299 1 37 3 84 1 247 3 363 1 275 1 215 3 276 1 110 1 31 2 201 1 235 3 
204 1 308 2 168 1 207 1 299 1 37 2 247 2 215 2 31 1 235 2 
205 1 308 1 117 1 26 1 83 1 323 1 68 1 135 1 161 1 225 1 215 1 334 1 61 1 252 1 32 1 
308 1 117 1 26 1 83 1 68 1 135 1 317 1 161 1 225 1 215 1 334 1 61 1 252 1 64 1 32 1 
310 1 120 2 169 1 99 1 48 1 28 1 6 2 226 1 172 1 320 1 33 1 126 1 157 1 204 2 321 2 368 1 179 2 274 1 347 1 348 1 163 1 164 1 329 4 
59 1 345 1 308 1 215 1 84 1 37 1 235 1 247 1 
308 5 168 1 83 1 181 1 37 4 299 1 27 1 39 1 247 4 108 1 215 5 275 1 31 2 235 5 
345 1 59 1 308 2 215 2 37 2 267 1 235 2 247 2 
154 1 243 1 
154 1 243 1 
3 1 24 1 
3 1 24 1 
3 1 24 1 
109 1 154 1 243 1 
109 1 154 1 243 1 
158 1 154 1 243 1 
3 1 24 1 154 2 89 1 243 2 187 1 
109 1 154 1 243 1 
369 1 154 1 243 1 
369 1 154 1 243 1 
369 1 154 1 243 1 
269 1 357 1 238 2 44 2 261 3 95 1 36 1 133 1 243 2 302 2 363 2 154 2 55 2 141 1 113 2 187 1 77 1 353 1 284 2 
93 1 308 2 261 1 238 1 44 1 95 1 331 1 363 1 154 1 55 1 125 1 158 1 203 1 83 1 37 2 243 1 244 1 247 2 215 2 21 1 111 1 113 1 284 1 235 2 
248 1 18 1 228 1 
377 1 18 1 228 1 
248 2 118 1 340 1 377 1 85 1 228 3 
248 1 118 1 262 1 377 1 85 1 228 2 
248 1 118 1 377 1 85 2 228 2 
44 5 45 1 192 1 310 1 313 4 331 1 148 3 224 1 153 1 363 5 29 1 126 1 34 1 268 2 269 2 368 1 229 1 244 1 325 1 87 2 372 1 348 1 111 1 375 1 140 1 279 1 254 1 351 3 352 2 217 1 379 2 166 1 
44 9 45 2 310 3 313 7 331 4 148 9 193 1 153 2 170 1 363 9 29 2 319 1 126 3 34 2 268 6 298 1 269 5 368 3 229 6 160 5 325 3 182 1 87 6 214 1 348 3 375 3 140 2 279 1 65 1 184 5 254 1 351 8 352 6 217 1 166 1 
44 3 45 1 310 1 313 2 331 1 148 4 224 1 153 1 363 3 29 1 126 1 34 1 268 2 269 3 368 1 325 1 182 1 372 1 87 2 348 1 375 2 140 1 254 1 351 3 352 2 379 1 
44 4 45 1 310 2 313 3 331 2 148 7 224 1 153 1 363 4 29 1 319 1 126 2 34 1 268 4 298 1 269 4 368 2 325 2 182 1 87 4 372 1 348 2 375 3 140 1 65 1 254 1 351 5 352 4 379 2 
145 1 155 1 135 1 
337 1 135 1 
360 1 
161 1 135 1 
161 1 167 1 155 2 32 1 231 1 135 3 
161 1 32 1 135 1 
296 1 135 1 
219 1 179 4 132 1 38 1 290 1 103 1 2 1 99 2 197 1 6 3 348 1 347 3 249 1 23 2 329 7 126 1 92 1 
219 1 179 4 132 1 38 1 290 1 103 1 2 1 99 2 197 1 6 3 348 1 347 3 249 1 23 2 329 7 126 1 92 1 
219 1 179 4 132 1 38 1 290 1 341 1 103 1 2 1 99 2 197 1 6 3 348 1 347 3 249 1 23 2 329 7 126 1 92 1 
219 1 310 3 120 2 290 5 2 2 99 5 48 1 197 1 71 1 6 15 226 1 320 1 76 1 126 4 79 4 157 1 81 1 368 3 179 16 131 3 271 1 132 2 38 2 103 1 134 1 325 3 249 2 348 4 347 10 138 1 23 3 283 1 329 31 92 1 
120 4 290 1 2 1 99 3 48 2 197 1 6 4 226 2 320 2 126 1 157 2 179 5 132 1 38 1 342 1 103 1 348 1 249 1 347 4 183 1 23 2 283 1 329 9 92 1 
117 1 68 1 223 1 98 1 72 1 334 1 227 1 336 1 78 1 228 2 13 1 159 1 82 1 340 1 104 2 105 1 18 1 248 1 212 1 137 1 61 1 374 1 139 1 252 1 377 1 90 1 328 1 43 1 143 1 380 2 
117 1 68 1 223 1 98 1 72 1 334 1 227 1 336 1 78 1 202 1 228 2 159 1 340 1 82 2 104 3 105 1 18 1 248 1 346 1 137 1 61 1 374 1 304 1 252 1 377 1 90 1 328 1 43 1 143 1 380 3 
117 1 68 1 98 1 72 1 334 1 227 1 336 1 78 1 228 2 159 1 82 2 340 1 104 2 105 1 18 1 346 1 248 1 61 1 374 1 304 1 252 1 377 1 43 1 143 1 380 2 
12 1 159 2 117 1 146 1 359 1 104 1 68 1 135 1 98 2 223 1 161 1 273 1 137 1 225 1 334 1 61 1 252 1 280 1 56 1 78 2 143 2 202 1 380 1 
117 1 68 1 223 1 98 1 72 1 334 1 336 1 78 1 228 2 13 1 159 1 340 1 104 1 105 1 18 1 248 1 212 1 137 1 61 1 304 1 252 1 377 1 90 1 328 1 143 1 380 1 
278 1 
188 1 236 1 190 2 189 1 45 1 44 5 148 2 194 1 153 1 51 2 334 2 56 1 201 1 293 2 295 1 59 1 102 1 343 1 161 1 61 2 215 1 63 1 252 1 254 1 351 2 162 2 352 2 114 1 217 1 166 3 116 2 308 1 117 2 358 1 311 1 68 1 225 2 122 2 363 5 34 1 269 2 35 1 229 6 181 1 84 1 135 1 326 1 273 1 375 2 140 1 327 1 281 1 142 4 233 2 235 1 
59 1 295 1 102 1 236 1 308 1 35 1 44 3 358 1 229 2 84 1 181 1 343 1 60 1 363 3 215 1 63 1 327 1 142 2 201 1 233 1 166 1 235 1 
59 1 295 1 102 1 236 1 269 1 308 1 35 1 44 3 358 1 229 1 84 1 181 1 343 1 60 1 363 3 215 1 63 1 327 1 254 1 162 1 142 3 201 1 166 1 235 1 
236 1 308 1 44 3 358 1 51 1 363 3 201 1 295 1 59 1 102 1 269 1 35 1 229 2 181 1 84 1 343 1 60 1 215 1 327 1 63 1 254 1 142 3 162 1 233 1 166 1 235 1 
116 2 188 1 236 1 190 2 308 1 44 5 358 1 149 1 153 1 51 4 122 2 363 5 30 1 201 1 293 2 34 1 295 1 59 1 102 1 269 5 35 1 229 7 16 1 181 1 84 1 343 1 136 1 60 1 215 1 375 2 140 1 327 1 63 1 251 1 351 1 281 1 254 5 352 1 162 4 142 6 233 4 217 1 235 1 166 3 
188 1 236 1 190 2 44 4 148 2 153 1 51 2 201 1 293 2 59 1 295 1 102 1 343 1 215 1 63 1 351 1 254 1 352 1 162 2 217 1 166 2 116 2 308 1 358 1 363 4 122 2 34 1 269 2 35 1 229 4 84 1 181 1 326 1 140 1 327 1 375 2 281 1 142 4 233 2 235 1 
116 2 188 1 236 1 190 2 308 1 44 4 358 1 153 1 51 2 122 2 363 4 201 1 293 2 34 1 295 1 59 1 102 1 269 1 35 1 229 4 16 1 181 1 84 1 343 1 136 1 215 1 375 2 140 1 327 1 63 1 251 1 254 1 351 1 281 1 162 2 352 1 142 4 233 2 217 1 166 2 235 1 
116 2 188 1 236 1 190 2 308 1 44 4 358 1 153 1 51 2 122 2 363 4 201 1 293 2 34 1 295 1 59 1 102 1 269 1 35 1 229 4 16 1 181 1 84 1 343 1 136 1 215 1 375 2 140 1 327 1 63 1 251 1 254 1 351 1 281 1 162 2 352 1 142 4 233 2 217 1 166 2 235 1 
188 1 236 1 355 1 308 1 44 4 358 1 148 2 153 1 51 2 122 2 363 4 75 1 201 1 293 2 34 1 295 1 59 1 102 1 269 1 206 2 35 1 229 4 181 1 84 1 343 1 215 1 140 1 327 1 63 1 251 1 22 1 254 1 216 2 351 1 162 2 352 1 142 4 233 2 217 1 166 2 235 1 
116 2 188 1 236 1 190 2 308 1 44 4 358 1 153 1 51 3 122 2 363 4 30 1 201 1 293 2 34 1 295 1 59 1 102 1 269 1 35 1 229 5 16 1 181 1 84 1 343 1 136 1 215 1 375 2 140 1 327 1 63 1 251 1 254 1 351 1 281 1 352 1 142 5 162 3 233 3 217 1 166 2 235 1 
116 2 188 1 236 1 190 2 308 1 44 4 358 1 153 1 51 3 122 2 363 4 30 1 201 1 293 2 34 1 295 1 59 1 102 1 269 1 35 1 229 5 16 1 181 1 84 1 343 1 136 1 215 1 375 2 140 1 327 1 63 1 251 1 254 1 351 1 281 1 352 1 142 5 162 3 233 3 217 1 166 2 235 1 
188 1 236 1 44 4 148 2 153 1 51 2 201 1 293 2 59 1 295 1 102 1 206 2 343 1 215 1 63 1 351 1 216 2 254 1 352 1 162 2 217 1 166 2 355 1 308 1 358 1 363 4 122 2 34 1 269 1 35 1 229 4 84 1 181 1 326 1 140 1 327 1 142 4 233 2 235 1 
204 1 321 1 179 3 145 1 83 2 120 2 132 1 38 1 169 1 103 1 99 2 48 1 197 1 6 3 348 1 347 2 226 1 320 1 23 1 163 1 329 6 33 1 126 1 157 1 92 1 
94 1 310 2 120 4 290 1 99 1 48 2 6 5 123 1 226 2 320 2 292 1 33 1 126 1 79 2 157 2 59 1 204 8 321 8 368 1 179 6 131 2 83 1 134 1 325 2 347 2 348 2 250 1 163 2 115 1 66 1 329 11 307 1 
220 1 308 2 26 1 117 1 120 2 68 1 48 1 196 1 225 1 6 1 334 1 226 1 54 1 320 1 124 1 32 1 31 1 33 1 157 1 205 1 204 1 179 1 83 1 323 1 37 1 86 1 135 1 247 1 161 1 61 1 215 2 275 1 250 1 252 1 163 1 66 1 329 2 235 1 
289 2 290 2 99 4 48 3 197 1 6 10 291 2 8 1 334 1 58 2 157 3 205 2 204 7 103 1 247 1 161 2 19 2 348 3 347 6 61 1 215 3 250 1 252 2 23 1 163 3 66 1 220 1 308 3 117 1 26 2 310 2 120 6 68 2 316 2 225 1 226 3 320 3 31 1 32 2 33 3 126 3 321 7 368 2 179 10 83 2 132 1 38 1 37 1 323 2 325 2 135 2 275 1 91 1 329 20 92 1 235 1 
220 1 308 1 117 8 312 1 120 4 147 1 169 1 68 2 48 2 225 2 6 1 334 7 226 2 320 2 31 1 101 1 56 1 33 2 156 1 157 2 178 2 179 1 37 1 135 3 247 1 161 2 273 1 215 1 61 8 139 1 250 1 304 1 252 2 163 2 234 1 329 2 258 1 306 1 235 1 
308 1 168 1 310 1 120 2 99 1 48 1 6 2 226 1 320 1 33 1 126 1 157 1 204 1 321 1 368 1 179 1 299 1 37 1 325 1 247 1 347 1 348 1 215 1 378 1 163 1 66 1 329 3 235 1 
204 1 321 1 179 2 310 1 120 2 290 1 169 1 48 1 347 1 348 1 226 1 320 1 163 1 164 1 329 2 33 1 157 1 
204 1 321 1 368 1 120 2 169 1 99 1 48 1 347 1 6 2 226 1 320 1 172 1 163 1 329 2 33 1 126 1 157 1 
310 1 120 2 290 1 169 1 99 1 48 1 6 2 226 1 320 1 33 1 126 1 157 1 204 2 321 2 368 1 179 2 325 1 348 1 347 2 163 1 329 4 
204 1 321 1 179 2 310 1 120 2 290 1 48 1 347 1 348 1 226 1 320 1 163 1 164 1 329 2 33 1 156 1 157 1 
204 1 321 1 368 1 120 2 99 1 48 1 347 1 6 2 226 1 320 1 172 1 163 1 329 2 33 1 156 1 126 1 157 1 
204 2 321 2 368 1 179 2 310 1 120 2 325 1 99 1 48 1 347 1 6 2 348 1 226 1 320 1 163 1 329 4 33 1 126 1 156 1 157 1 
204 2 321 2 368 1 179 2 310 1 120 2 290 1 325 1 99 1 48 1 6 2 347 2 348 1 226 1 320 1 163 1 33 1 329 4 126 1 157 1 
220 1 308 1 26 1 117 1 120 2 68 1 48 1 225 1 291 1 6 1 334 1 226 1 320 1 32 1 33 1 157 1 205 1 179 1 83 1 323 1 135 1 161 1 61 1 215 1 250 1 252 1 163 1 329 2 
220 1 308 1 26 1 117 1 120 2 68 1 48 1 317 1 225 1 6 1 334 1 226 1 320 1 32 1 33 1 157 1 179 1 83 1 135 1 161 1 61 1 215 1 250 1 252 1 64 1 253 1 163 1 329 2 
204 2 321 2 368 1 179 2 310 1 120 2 290 1 325 1 99 1 48 1 6 2 347 2 348 1 226 1 320 1 163 1 66 1 329 4 33 1 126 1 157 1 
308 1 26 1 117 1 310 1 120 2 289 1 290 1 68 1 99 1 48 1 6 2 291 1 334 1 226 1 320 1 32 1 33 1 126 1 157 1 204 2 205 1 321 2 368 1 179 2 323 1 325 1 135 1 161 1 347 2 348 1 61 1 215 1 139 1 252 1 163 1 329 4 
308 1 168 1 310 1 120 2 290 1 48 1 6 1 226 1 320 1 365 1 33 1 126 1 157 1 204 1 321 1 368 1 179 2 299 1 37 1 325 1 247 1 347 1 348 1 215 1 163 1 66 1 329 3 235 1 
310 3 120 4 290 3 67 1 99 3 48 2 6 10 364 1 226 2 320 2 173 1 76 1 174 1 126 3 79 2 157 2 176 1 368 3 130 1 179 9 131 1 230 2 342 1 134 1 325 3 348 3 347 6 373 2 62 1 329 19 
310 3 120 6 290 2 67 1 99 2 48 3 171 1 6 12 364 1 226 3 320 3 173 1 76 2 174 2 126 2 157 3 79 2 368 2 130 2 179 14 131 2 230 4 324 1 209 1 342 1 325 3 344 1 347 4 348 3 373 1 376 1 185 1 283 2 329 26 
310 5 120 6 290 4 67 1 99 4 48 3 197 1 171 1 6 22 364 1 226 3 320 3 173 1 76 3 174 1 126 5 79 5 157 3 176 1 368 4 130 2 179 22 131 3 230 4 132 1 38 1 324 1 209 1 103 1 342 1 134 2 325 5 41 1 344 1 348 6 347 8 373 1 376 1 23 1 185 1 283 1 329 44 92 1 
310 5 120 8 290 3 67 1 99 5 48 4 197 1 171 1 6 21 364 1 226 4 320 4 173 1 76 3 174 1 126 5 79 5 157 4 176 1 368 4 130 2 179 22 131 3 230 4 132 1 38 1 324 1 209 1 103 1 342 1 134 2 325 5 41 1 344 1 348 6 347 8 373 1 376 1 23 1 185 1 283 2 329 43 92 1 
310 7 120 4 290 7 67 1 99 7 48 2 197 1 171 1 6 25 364 1 226 2 320 2 173 1 76 2 174 1 126 8 79 4 157 2 368 7 130 1 179 27 131 4 230 4 132 1 38 1 324 1 209 1 103 1 342 1 134 2 325 7 344 1 348 8 347 14 373 1 376 1 23 1 185 1 283 1 115 2 329 52 92 1 
357 1 154 1 238 1 349 1 55 1 243 1 113 1 187 1 353 1 284 1 
158 1 125 1 
294 1 318 1 154 1 238 1 55 1 243 1 113 1 366 1 284 1 
269 1 357 1 44 1 238 1 261 2 95 1 36 1 243 1 302 1 363 1 154 1 55 1 141 1 113 1 187 1 77 1 353 1 284 1 
269 1 357 1 44 1 238 1 261 2 95 1 36 1 243 1 302 1 363 1 154 1 55 1 141 1 113 1 187 1 77 1 353 1 284 1 
269 1 357 1 44 1 238 1 261 2 95 1 36 1 243 1 302 1 363 1 154 1 55 1 141 1 113 1 187 1 77 1 353 1 284 1 
109 1 89 1 241 1 
109 1 89 1 241 1 
128 1 369 1 
128 1 369 1 89 1 
93 1 203 1 
93 1 308 2 44 1 238 1 261 1 313 1 331 1 363 1 154 1 55 1 125 1 158 1 203 1 36 1 83 1 37 2 302 1 243 1 244 1 247 2 215 2 21 1 111 1 232 1 113 1 284 1 235 2 
109 1 241 1 
128 1 369 1 89 1 
308 1 215 1 315 1 57 1 361 1 235 1 
159 1 117 2 340 1 105 1 68 1 18 1 264 1 248 1 72 1 334 2 61 2 139 1 240 1 112 1 377 1 252 1 304 1 328 1 228 2 
159 1 117 1 340 1 105 1 68 1 18 1 70 1 248 1 72 1 334 1 61 1 112 1 377 1 304 1 252 1 328 1 228 2 
12 1 159 1 117 1 68 1 135 1 264 1 161 1 225 1 273 1 334 1 61 1 252 1 74 1 56 1 
159 1 117 1 340 1 105 1 68 1 18 1 264 1 248 1 72 1 334 1 61 1 240 1 112 1 377 1 304 1 252 1 328 1 228 2 
245 1 
269 1 145 1 272 1 351 1 254 1 352 1 218 1 
116 1 190 1 44 1 148 1 153 1 363 1 34 1 269 2 229 1 375 1 140 1 351 1 281 1 254 1 352 1 217 1 166 1 
117 1 167 1 68 2 210 1 135 2 153 1 161 1 225 1 334 1 61 1 140 1 252 1 32 1 255 1 337 1 217 1 34 1 
45 1 0 1 44 1 311 1 310 2 148 6 96 1 153 2 171 1 363 1 76 1 34 2 126 2 79 1 268 5 269 5 368 2 131 1 229 1 324 1 209 1 370 2 325 2 344 1 87 5 348 2 140 2 375 3 376 1 303 1 351 8 254 2 352 5 217 2 166 1 
308 1 44 1 168 1 96 1 153 1 197 1 363 1 34 1 126 1 267 1 59 1 322 1 132 1 38 1 37 1 370 2 136 1 246 1 247 1 213 1 348 2 215 1 140 1 305 1 351 2 352 2 217 1 235 1 
269 1 272 1 153 1 140 1 254 1 351 1 352 1 217 1 34 1 218 1 
268 5 269 5 368 2 310 2 370 2 148 10 325 2 96 1 19 1 87 5 348 2 375 5 351 5 352 5 126 2 
269 1 363 1 44 1 229 1 254 1 166 1 
117 4 119 1 45 2 44 3 330 1 311 2 194 1 68 3 332 1 153 2 50 2 225 2 7 1 363 3 334 4 32 1 56 1 34 2 177 1 339 1 229 4 106 1 135 2 182 1 161 2 273 1 61 4 140 2 252 2 351 2 114 1 352 2 217 1 166 2 
308 3 117 1 26 1 168 2 120 2 68 1 48 1 225 1 6 1 291 1 334 1 226 1 320 1 32 1 33 1 157 1 205 1 322 1 83 1 37 2 323 1 135 1 247 2 161 1 61 1 215 3 277 1 250 1 252 1 163 1 329 1 235 2 
268 2 269 4 45 1 311 1 148 4 153 1 87 2 375 2 140 1 23 1 351 1 254 2 352 2 217 1 34 1 
356 1 55 1 284 1 
356 1 55 1 284 1 
93 1 357 1 100 1 55 1 284 1 
356 1 55 1 284 1 
287 1 55 1 284 1 
287 1 55 1 284 1 
287 1 55 1 284 1 
55 1 284 1 
154 1 243 1 
179 4 120 4 132 1 38 1 290 1 103 1 99 2 48 2 197 1 348 1 6 4 347 3 226 2 320 2 23 1 283 1 329 8 126 1 157 2 92 1 
145 1 179 3 132 1 38 1 103 1 99 2 197 1 6 3 347 2 348 1 23 1 329 6 126 1 92 1 
368 1 179 2 310 1 120 2 290 1 325 1 99 1 48 1 195 1 6 2 347 2 348 1 226 1 320 1 329 4 126 1 157 1 
368 1 179 3 131 1 310 1 290 1 134 1 325 1 99 1 6 4 348 1 347 2 76 1 329 7 126 1 79 2 
310 2 120 4 290 4 99 5 48 2 197 1 6 12 123 1 226 2 320 2 126 3 79 2 157 2 368 2 179 11 131 2 132 2 38 2 103 1 325 2 134 1 347 9 348 3 23 1 282 1 115 1 283 2 329 23 92 1 
6 1 329 1 79 1 
179 1 131 1 329 1 
368 1 179 3 310 1 120 2 290 1 325 1 99 2 48 1 195 1 19 1 6 3 348 1 347 3 226 1 320 1 329 6 126 1 157 1 
310 2 120 2 290 1 99 1 48 1 6 6 171 1 226 1 320 1 76 1 126 2 79 1 157 1 368 2 179 6 131 1 324 1 209 1 342 1 325 2 344 1 348 2 347 2 376 1 329 12 
179 3 132 1 38 1 290 1 99 1 197 1 348 1 6 3 347 2 329 6 126 1 
179 1 132 1 120 2 38 1 290 1 103 1 99 1 48 1 347 2 6 2 226 1 320 1 282 1 283 1 329 3 157 1 92 1 
179 5 120 2 132 2 38 2 290 2 342 1 99 3 48 1 197 1 347 5 6 5 348 2 226 1 320 1 305 1 329 10 126 2 157 1 
179 2 310 1 120 2 290 1 342 1 48 1 348 1 347 1 226 1 320 1 329 2 157 1 
368 1 179 2 310 1 120 2 290 1 342 1 325 1 99 1 48 1 6 2 347 2 348 1 226 1 320 1 329 4 126 1 157 1 
176 1 179 1 120 6 132 1 38 1 290 1 342 1 99 1 48 3 6 2 347 2 226 3 320 3 282 1 283 1 329 3 157 3 
310 3 120 10 290 5 99 7 48 5 195 1 197 2 71 1 6 18 226 5 320 5 76 1 126 5 79 4 157 5 81 1 176 1 368 3 179 16 271 1 131 3 132 3 38 3 103 1 342 1 134 1 325 3 348 5 347 12 23 1 282 1 283 2 329 34 92 1 
310 1 120 2 99 2 48 1 197 1 6 5 226 1 320 1 76 1 126 1 79 2 157 1 179 6 131 1 132 1 38 1 324 1 342 1 103 1 134 1 325 1 347 2 348 2 23 1 329 11 92 1 
310 1 120 4 290 1 99 2 48 2 195 1 197 1 6 5 226 2 320 2 76 1 126 1 79 2 157 2 179 6 131 1 132 1 38 1 324 1 103 1 342 1 134 1 325 1 348 2 347 3 23 1 329 11 92 1 
310 2 120 6 290 1 99 3 48 3 195 1 197 1 171 1 6 10 226 3 320 3 76 1 126 3 79 1 157 3 368 2 179 9 131 1 132 1 38 1 324 1 209 1 103 1 342 1 325 2 344 1 348 3 347 4 376 1 23 1 283 1 329 19 92 1 
310 2 120 6 290 2 99 3 48 3 195 1 197 1 6 7 171 1 226 3 320 3 76 1 126 2 79 1 157 3 368 1 179 10 131 1 132 1 38 1 324 1 209 1 103 1 342 1 325 2 344 1 348 3 347 5 376 1 23 1 283 1 329 17 92 1 
310 1 120 2 99 2 48 1 197 1 6 5 226 1 320 1 76 1 126 1 79 2 157 1 179 6 131 1 132 1 38 1 324 1 342 1 103 1 134 1 325 1 347 2 348 2 23 1 329 11 92 1 
310 2 120 2 290 1 99 1 48 1 6 6 171 1 226 1 320 1 76 1 126 2 79 1 157 1 368 2 179 6 131 1 324 1 209 1 342 1 325 2 344 1 348 2 347 2 376 1 329 12 
310 2 120 8 290 2 99 3 48 4 195 1 197 1 171 1 6 8 226 4 320 4 76 1 126 2 79 1 157 4 368 1 179 10 131 1 132 1 38 1 324 1 209 1 103 1 342 1 325 2 344 1 348 3 347 5 376 1 23 1 283 2 329 18 92 1 
310 3 120 8 290 3 99 3 48 4 171 1 6 7 226 4 320 4 76 1 126 2 79 1 157 4 176 1 368 2 179 9 131 1 324 1 209 1 342 1 325 3 344 1 348 3 347 6 376 1 283 2 329 16 
179 3 132 3 38 3 290 3 103 2 99 3 197 1 6 4 347 6 348 1 329 7 126 1 92 1 
310 2 120 8 290 1 99 3 48 4 197 1 171 1 6 8 226 4 320 4 76 1 126 2 79 1 157 4 176 1 368 1 179 10 131 1 132 1 38 1 324 1 209 1 103 1 342 1 325 2 344 1 348 3 347 4 376 1 23 1 283 2 329 18 92 1 
308 1 215 1 83 1 181 1 27 1 350 1 235 1 
59 1 1 1 83 1 208 1 47 1 292 1 200 1 11 1 
161 1 273 1 225 1 117 1 145 1 61 1 334 1 252 1 56 1 68 1 135 1 
308 2 26 1 117 1 83 1 37 1 323 1 68 1 135 1 247 1 161 1 225 1 215 2 334 1 61 1 252 1 32 1 31 1 235 1 
308 2 117 1 26 1 68 1 69 1 50 1 334 1 31 1 32 2 295 1 59 1 296 1 83 1 323 1 37 2 84 1 135 3 247 1 161 2 61 1 215 2 252 1 235 2 
308 2 117 2 26 1 68 1 69 1 317 1 50 1 334 2 31 1 32 2 295 1 59 1 296 1 83 1 37 2 84 1 40 1 135 3 247 1 161 2 61 2 215 2 252 1 235 2 
296 1 269 1 367 1 117 3 44 2 229 1 40 1 68 1 135 4 69 1 161 1 50 1 225 1 5 1 363 2 334 3 61 3 155 1 252 1 254 1 32 1 201 1 337 1 
296 1 269 1 117 3 44 2 229 1 40 1 68 1 135 4 69 1 161 1 50 1 225 1 363 2 334 3 61 3 155 1 252 1 254 1 32 1 201 1 337 1 259 1 
117 1 61 1 334 1 312 1 252 1 68 1 
339 1 178 1 117 7 167 1 330 1 312 1 147 1 68 3 135 3 161 2 225 2 334 6 61 7 139 1 304 1 252 2 32 1 101 1 257 1 258 1 306 1 
308 2 26 1 117 1 120 4 289 1 68 1 222 1 99 2 48 2 316 1 197 1 6 3 291 1 334 1 226 2 320 2 32 1 31 1 33 2 126 1 157 2 204 1 205 1 321 1 179 3 83 2 132 1 38 1 37 1 323 1 103 1 135 1 247 1 161 1 348 1 347 2 215 2 61 1 139 1 252 1 23 1 163 2 66 1 329 6 92 1 235 1 
117 1 44 3 221 1 313 1 152 1 332 1 153 2 225 1 363 3 334 1 155 1 201 1 337 1 34 2 269 1 229 2 272 1 135 2 61 1 140 2 351 1 254 1 352 1 256 1 217 2 218 1 259 1 166 1 
117 2 167 1 312 1 210 1 68 2 135 2 161 1 334 2 61 2 139 1 155 1 252 1 32 1 
175 1 117 4 40 1 68 1 135 1 161 1 225 1 273 1 334 4 61 4 139 1 252 1 56 1 
339 1 117 2 330 1 371 1 68 2 106 1 135 1 50 1 161 1 7 1 334 2 61 2 252 1 32 1 
225 1 117 1 61 1 334 1 377 1 252 1 105 1 68 1 18 1 228 1 
161 1 117 2 61 2 334 2 180 1 139 1 252 1 304 1 101 1 68 1 135 1 
175 1 117 5 147 1 68 2 135 3 50 1 161 2 273 1 225 1 334 4 61 5 139 1 252 2 56 1 101 1 258 1 
175 1 117 5 68 2 135 3 50 1 107 1 161 2 273 1 225 1 334 4 61 5 139 1 252 2 56 1 101 1 258 1 
308 2 26 1 117 1 83 1 37 1 68 1 135 1 247 1 161 1 317 1 225 1 215 2 334 1 61 1 252 1 32 1 31 1 235 1 
339 1 117 1 167 1 330 1 68 2 135 1 50 1 161 1 334 1 61 1 252 1 32 1 257 1 
315 1 186 1 57 1 17 1 361 1 127 1 
260 1 186 1 151 1 
20 1 83 1 186 1 17 1 127 1 
59 1 295 1 260 1 269 1 44 2 358 1 83 1 313 1 84 1 17 2 151 1 363 2 265 1 20 2 110 1 254 1 201 1 186 1 127 2 
145 1 374 1 227 1 43 1 
137 1 374 1 227 1 104 1 43 1 223 1 380 1 
143 1 98 1 380 1 
309 1 314 1 104 3 223 1 212 1 137 1 333 2 374 1 266 1 227 1 43 1 380 3 
137 1 374 1 82 1 288 1 227 1 104 2 43 1 223 1 380 2 
15 1 46 1 104 1 223 1 18 1 212 1 248 1 137 1 43 1 380 1 228 1 
212 1 137 1 227 1 104 1 43 1 223 1 380 1 
212 1 137 1 374 1 227 2 104 1 223 1 380 1 
80 1 212 1 137 2 227 1 104 2 43 1 165 1 223 2 211 1 380 2 
82 2 46 1 300 1 104 3 223 1 212 1 137 1 198 1 88 1 374 1 227 1 43 2 380 3 
212 1 137 1 82 1 377 1 104 2 97 1 223 1 380 1 228 1 
82 2 288 1 46 1 104 4 223 2 212 1 137 2 121 1 88 1 374 1 227 1 43 2 380 4 
212 1 137 1 374 1 227 1 104 1 43 1 223 1 380 1 
285 1 309 1 82 2 46 1 104 4 223 1 137 1 333 1 88 1 374 2 266 1 227 2 43 3 380 4 
297 1 82 1 104 2 223 1 49 1 212 1 137 1 374 1 227 1 43 1 144 1 380 2 
309 2 104 3 150 1 223 1 212 1 137 1 333 2 374 1 266 1 227 1 43 1 380 3 
354 1 25 2 270 1 43 2 
212 1 73 1 137 1 104 1 223 1 380 1 
212 1 137 1 198 1 374 1 82 1 227 1 104 2 43 1 223 1 380 2 
52 1 
212 1 137 1 374 1 227 1 104 1 43 1 223 1 380 1 
82 1 104 3 223 1 212 1 137 1 333 1 198 1 374 1 227 1 43 1 380 3 
285 1 88 1 46 1 43 1 
227 1 43 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException 209 353 (128,367) (117,178) (117,178) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException 209 353 (128,367) (117,178) (117,178) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException 209 353 (128,367) (117,178) (117,178) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException 209 353 (128,367) (117,178) (117,178) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 209 (25,157,202,286) 203 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException 209 353 (128,367) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException 209 353 (128,367) 172 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException 209 353 (128,367) 172 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 259 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 209 (25,157,202,286) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 209 353 115 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 209 353 260 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 209 353 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3635 | 1 -> 2
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String; | RETURN | 2871 | return null
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 0
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | STATEMENT | 647 | stmt -> ;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1846 | while (x) -> while (!x)
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2944 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 0
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
336 1 294 1 209 1 117 1 188 1 229 1 81 3 31 1 128 1 178 1 257 1 367 1 353 1 33 2 14 1 371 1 305 3 195 2 282 2 65 1 
336 1 294 1 209 1 117 1 188 1 229 1 81 3 31 1 128 1 178 1 257 1 367 1 353 1 33 2 14 1 371 1 305 3 195 2 282 2 65 1 
336 1 294 1 209 1 117 1 188 1 229 1 81 3 31 1 128 1 178 1 257 1 367 1 353 1 33 2 14 1 371 1 305 3 195 2 282 2 65 1 
336 1 294 1 209 1 117 1 188 1 229 1 81 3 31 1 128 1 178 1 257 1 367 1 353 1 33 2 14 1 371 1 305 3 195 2 282 2 65 1 
202 1 152 1 203 1 209 1 14 1 188 1 229 1 81 2 305 2 276 1 195 1 282 1 
336 1 229 1 81 2 31 1 242 1 44 1 217 1 164 1 33 1 14 1 371 1 305 2 195 1 169 1 282 1 65 1 
209 1 353 1 33 1 14 1 188 1 229 1 81 2 305 2 195 2 282 2 128 1 
172 1 209 1 188 1 229 1 81 3 276 1 128 1 25 1 33 1 353 1 14 1 305 3 195 2 282 2 
172 1 209 1 188 1 229 1 81 3 276 1 128 1 25 1 33 1 353 1 14 1 305 3 195 2 282 2 
173 1 121 1 327 1 
173 1 7 1 281 2 
24 2 156 1 78 1 225 2 17 2 111 2 293 2 215 2 
78 1 94 1 53 2 2 1 118 1 212 1 215 2 143 2 60 1 166 1 13 1 85 1 35 2 246 2 293 3 356 1 248 1 88 1 66 1 360 1 225 2 17 3 101 1 89 1 364 1 309 1 311 1 73 2 24 2 156 1 107 1 313 1 181 1 111 2 316 1 92 1 136 1 
24 1 156 1 225 1 146 1 17 1 19 1 55 1 111 1 293 1 215 1 
0 1 263 1 55 2 329 1 215 1 288 1 146 1 293 2 121 1 225 2 17 2 173 1 19 1 277 1 71 1 365 1 156 1 24 1 77 1 238 1 111 1 
263 1 225 2 173 1 17 2 19 1 55 2 277 2 71 2 215 2 329 1 156 1 24 2 288 1 365 1 146 1 77 1 111 2 121 1 293 2 
191 1 204 1 277 1 71 1 239 1 
191 1 173 1 70 1 153 1 121 1 277 2 71 2 239 1 
277 1 71 1 239 1 
263 1 225 1 17 1 19 1 55 1 71 1 277 1 215 1 191 1 156 1 24 1 146 1 111 1 293 1 
173 1 
191 1 167 1 173 1 153 1 121 1 277 2 71 2 239 1 
4 1 173 1 228 1 213 1 189 1 153 1 71 5 277 5 342 1 330 1 268 2 191 2 22 1 76 1 333 1 158 2 121 1 16 2 239 2 
78 1 327 1 
225 2 78 2 307 1 17 2 215 1 21 1 24 1 111 1 293 2 
12 1 120 1 63 1 
88 1 66 1 78 1 2 1 17 1 101 1 141 1 118 1 212 1 143 1 181 1 35 1 85 1 246 1 293 1 136 1 
66 1 88 1 225 1 2 1 101 1 17 2 118 1 212 1 143 1 343 1 24 1 181 1 32 1 85 1 35 1 63 1 111 1 246 1 293 2 136 1 
0 1 225 5 78 1 17 5 308 1 215 1 343 2 24 4 21 1 74 1 32 1 111 4 159 1 293 5 
24 2 225 2 17 2 19 1 55 1 111 2 206 1 293 2 
343 1 24 3 78 1 225 3 17 3 111 3 293 3 215 1 
24 1 225 1 17 1 19 1 55 1 111 1 293 1 
24 1 21 1 225 1 307 1 17 1 55 1 111 1 293 1 215 1 
53 2 2 1 322 1 55 2 143 1 329 1 288 1 60 1 246 1 293 4 66 1 248 1 17 4 101 1 71 1 156 1 343 1 24 3 21 1 73 1 107 1 77 1 111 3 78 1 118 1 212 1 28 1 215 2 303 1 166 1 32 1 35 1 85 1 356 1 88 1 225 3 360 1 89 1 277 1 309 1 365 1 181 1 316 1 92 1 136 1 
0 1 24 1 343 1 78 1 225 2 17 2 308 1 111 1 293 2 
225 3 173 1 17 3 55 1 277 1 71 1 28 1 215 1 329 1 21 1 343 2 24 3 288 1 365 1 83 1 32 1 77 1 111 3 293 3 
225 2 17 2 215 1 343 1 21 1 24 2 12 1 111 2 63 1 293 2 
88 1 66 1 78 1 2 1 17 1 101 1 118 1 212 1 143 1 181 1 35 1 85 1 246 1 293 1 136 1 
88 1 78 1 2 1 17 1 101 1 118 1 212 1 267 1 143 1 181 1 35 1 334 1 85 1 246 1 293 1 
264 1 319 1 53 2 350 1 60 1 12 2 166 1 13 2 120 2 63 2 247 1 248 1 89 1 42 1 309 1 73 4 107 1 26 1 345 1 50 1 261 1 279 1 92 2 317 1 
365 1 24 1 225 1 17 1 55 1 111 1 293 1 206 1 
171 1 15 1 
171 1 15 1 
332 1 112 1 
332 1 112 1 
332 1 112 1 
171 1 68 1 15 1 
262 1 318 1 171 2 332 1 15 2 112 1 
171 1 116 1 15 1 
171 1 116 1 15 1 
171 1 116 1 15 1 
171 1 15 1 230 1 
171 1 15 1 230 1 
171 1 15 1 230 1 
78 1 322 1 55 1 8 1 56 1 15 1 220 1 292 1 293 2 171 1 225 2 68 1 340 1 17 2 275 1 18 1 277 1 71 1 154 1 24 2 344 1 179 1 132 1 134 1 369 1 111 2 
262 1 171 2 297 2 363 1 173 1 340 2 8 2 56 1 71 2 277 2 179 2 168 1 134 2 369 3 15 2 237 1 183 1 221 1 36 1 
336 1 294 1 371 1 
44 1 336 1 371 1 
44 1 294 2 252 1 102 1 371 3 57 1 
44 1 294 1 252 1 371 2 103 1 57 1 
44 1 294 1 252 1 371 2 57 2 
319 1 55 1 7 2 328 2 330 1 191 4 146 1 333 3 290 2 293 1 16 1 247 1 337 1 17 1 19 1 153 1 71 5 104 1 156 1 24 1 296 1 158 1 111 1 113 1 263 1 264 1 213 2 215 1 268 1 301 2 121 1 225 1 173 1 126 1 275 1 277 5 235 1 48 1 51 1 279 1 281 4 239 1 
319 1 55 1 7 2 330 1 191 4 146 1 333 3 290 2 293 1 16 1 247 1 337 1 17 1 19 1 153 1 71 5 104 1 24 1 156 1 204 2 106 2 296 1 158 1 111 1 263 1 264 1 163 1 213 2 215 1 268 1 301 2 121 1 225 1 126 1 173 1 275 1 277 5 234 1 235 1 48 1 279 1 281 4 239 3 
263 1 264 1 55 1 213 2 215 1 328 1 268 1 301 1 191 2 146 1 333 1 290 1 293 1 121 1 16 1 225 1 337 1 17 1 173 1 228 1 19 1 275 1 277 3 71 3 104 1 24 1 156 1 48 1 51 1 158 1 111 1 279 1 281 1 113 1 
264 1 213 2 328 1 301 1 268 1 191 1 333 1 290 1 16 1 337 1 228 1 275 1 277 2 71 2 104 1 259 1 48 1 51 1 158 1 279 1 281 1 113 1 
80 1 212 1 327 1 
210 1 212 1 
38 1 
2 1 212 1 85 1 
61 1 212 1 
212 1 85 1 
2 1 80 2 323 1 212 3 85 1 142 1 
198 1 347 1 1 1 264 1 199 1 362 1 251 1 350 2 295 1 73 7 47 2 13 4 289 1 50 3 244 1 92 3 247 1 
198 1 347 1 1 1 264 1 199 1 362 1 251 1 350 2 295 1 73 7 47 2 13 4 289 1 50 3 244 1 92 3 247 1 
198 1 347 1 1 1 264 1 199 1 362 1 251 1 350 2 295 1 73 7 47 2 13 4 289 1 50 3 244 1 92 3 123 1 247 1 
347 2 1 2 53 2 264 4 319 3 54 4 350 5 214 1 60 1 11 1 13 16 289 2 150 1 244 5 247 4 198 1 248 1 337 3 226 1 199 1 362 1 251 2 227 3 295 1 309 1 73 31 107 1 312 1 47 3 236 1 50 10 279 3 92 15 207 1 
1 1 347 1 264 1 53 4 350 3 60 2 13 5 289 1 354 1 244 1 247 1 248 2 226 1 362 1 199 1 251 1 295 1 309 2 130 1 73 9 107 2 47 2 50 4 92 4 
5 1 118 1 162 1 81 2 143 1 242 1 217 1 33 1 14 1 35 1 305 2 245 1 246 1 195 1 170 1 335 1 336 1 99 1 294 1 101 1 102 1 127 1 229 1 276 1 44 1 105 1 371 2 186 1 282 1 284 1 
5 1 118 1 162 1 9 1 81 3 143 1 242 1 217 1 33 1 35 1 305 3 245 1 246 1 195 1 196 1 335 1 336 1 99 1 294 1 174 1 101 1 102 1 229 1 276 2 44 1 105 1 371 2 186 1 282 1 284 1 
118 1 162 1 9 1 81 2 143 1 242 1 217 1 33 1 35 1 305 2 245 1 246 1 335 1 336 1 99 1 294 1 174 1 101 1 102 1 229 1 276 2 44 1 371 2 186 1 284 1 
88 1 101 1 118 1 212 1 81 1 255 1 143 1 177 1 82 1 192 1 33 2 355 1 85 1 305 1 35 1 245 2 222 1 186 2 195 1 246 1 196 1 282 1 284 2 
336 1 99 1 294 1 101 1 5 1 118 1 102 1 162 1 81 1 9 1 143 1 44 1 105 1 33 1 14 1 371 2 305 1 35 1 245 1 195 1 246 1 186 1 335 1 170 1 282 1 284 1 
187 1 
52 1 93 1 0 1 7 2 55 1 143 2 329 1 330 1 288 1 145 1 192 1 333 2 291 2 246 2 64 1 293 1 16 1 250 2 101 1 17 1 253 4 153 3 71 5 104 1 201 1 108 1 158 1 110 1 77 1 346 1 300 1 118 1 348 2 212 1 213 2 82 1 268 1 269 1 34 1 85 1 35 2 86 2 122 2 121 3 224 2 88 2 37 1 225 1 173 4 277 5 365 1 238 1 281 2 283 2 239 6 
0 1 93 1 346 1 55 1 329 1 288 1 167 1 291 1 293 1 64 1 121 2 225 1 17 1 253 2 173 2 153 1 277 3 71 3 365 1 108 1 110 1 77 1 238 1 239 2 
346 1 93 1 0 1 225 1 173 2 253 3 17 1 55 1 71 2 277 2 329 1 365 1 288 1 108 1 77 1 110 1 238 1 86 1 121 2 64 1 293 1 
0 1 93 1 346 1 55 1 348 1 329 1 288 1 167 1 291 1 293 1 64 1 121 3 86 1 225 1 17 1 253 3 173 3 153 1 277 3 71 3 365 1 108 1 110 1 77 1 238 1 239 2 
93 1 0 1 55 2 7 2 329 1 330 1 288 1 146 1 333 1 194 1 291 4 293 2 64 1 16 1 250 2 253 5 17 2 19 1 153 3 71 5 256 1 24 1 156 1 258 1 108 1 77 1 110 1 158 1 111 1 346 1 263 1 300 1 348 4 213 1 215 1 268 1 167 1 218 1 121 4 86 3 122 2 224 2 225 2 37 1 361 1 173 4 277 5 365 1 238 1 239 7 283 2 
0 1 93 1 55 1 7 2 329 1 330 1 288 1 145 1 333 1 291 2 293 1 64 1 16 1 250 2 253 4 17 1 153 2 71 4 108 1 77 1 158 1 110 1 346 1 300 1 348 2 213 1 268 1 121 3 122 2 86 2 224 2 225 1 37 1 173 4 277 4 365 1 238 1 281 2 283 2 239 4 
0 1 93 1 346 1 300 1 348 2 7 2 55 1 213 1 329 1 268 1 330 1 288 1 218 1 333 1 291 2 86 2 122 2 293 1 64 1 121 3 16 1 224 2 37 1 225 1 361 1 250 2 17 1 253 4 173 3 153 2 277 4 71 4 256 1 365 1 108 1 158 1 110 1 77 1 238 1 239 4 283 2 
0 1 93 1 346 1 300 1 348 2 7 2 55 1 213 1 329 1 268 1 330 1 288 1 218 1 333 1 291 2 86 2 122 2 293 1 64 1 121 3 16 1 224 2 37 1 225 1 361 1 250 2 17 1 253 4 173 3 153 2 277 4 71 4 256 1 365 1 108 1 158 1 110 1 77 1 238 1 239 4 283 2 
0 1 93 1 346 1 320 1 348 2 55 1 213 1 329 1 268 1 330 1 288 1 218 1 333 1 291 2 86 2 293 1 64 1 121 3 16 1 358 1 224 2 37 1 225 1 250 2 339 2 17 1 253 4 173 3 153 2 277 4 71 4 231 1 129 2 365 1 108 1 158 1 110 1 77 1 238 1 281 2 239 4 
0 1 93 1 346 1 300 1 7 2 55 1 348 3 213 1 329 1 268 1 330 1 288 1 218 1 333 1 194 1 291 3 122 2 86 3 293 1 64 1 121 3 16 1 224 2 37 1 225 1 361 1 250 2 17 1 253 5 173 3 153 2 277 4 71 4 256 1 365 1 108 1 158 1 110 1 77 1 238 1 283 2 239 5 
0 1 93 1 346 1 300 1 7 2 55 1 348 3 213 1 329 1 268 1 330 1 288 1 218 1 333 1 194 1 291 3 122 2 86 3 293 1 64 1 121 3 16 1 224 2 37 1 225 1 361 1 250 2 17 1 253 5 173 3 153 2 277 4 71 4 256 1 365 1 108 1 158 1 110 1 77 1 238 1 283 2 239 5 
0 1 93 1 55 1 329 1 330 1 288 1 145 1 333 1 291 2 293 1 64 1 16 1 250 2 253 4 17 1 339 2 153 2 71 4 108 1 77 1 158 1 110 1 346 1 348 2 213 1 268 1 121 3 86 2 358 1 224 2 225 1 37 1 173 3 277 4 129 2 365 1 238 1 281 2 239 4 
347 1 78 2 53 2 264 1 327 1 350 2 12 1 60 1 166 1 13 3 120 1 63 1 247 1 248 1 362 1 199 1 251 1 89 1 295 1 309 1 73 6 107 1 47 1 345 1 50 2 92 3 
78 1 53 4 264 2 319 1 287 1 54 3 350 1 60 2 12 4 166 2 304 1 13 8 120 11 84 1 150 1 244 1 63 11 247 1 248 2 360 1 337 2 227 3 125 1 89 1 309 2 311 1 73 14 366 1 107 2 312 1 50 2 279 2 92 6 
285 1 78 1 53 2 2 1 118 1 141 1 212 1 349 1 143 1 12 1 60 1 302 1 166 1 32 1 13 1 85 1 35 1 246 1 293 2 66 1 88 1 248 1 225 1 360 1 101 1 17 2 89 1 309 1 24 1 343 1 73 2 311 1 366 1 107 1 181 1 111 1 92 1 136 1 
53 6 319 2 2 2 9 1 96 2 143 3 60 3 12 7 13 10 149 2 244 4 63 7 246 3 293 3 247 3 67 1 248 3 66 2 337 2 199 1 251 1 17 3 101 2 295 1 343 1 24 1 73 20 107 3 111 1 78 2 347 1 264 3 118 2 212 2 350 4 166 3 32 1 219 1 120 7 35 3 85 2 271 2 88 1 360 1 225 1 362 1 89 3 309 3 311 1 366 1 47 1 181 2 182 1 50 8 370 2 316 2 279 2 92 10 136 2 
53 4 140 1 118 2 9 1 212 3 143 7 82 1 60 2 166 2 192 1 13 1 35 8 85 2 246 8 293 1 306 1 88 2 248 2 225 1 360 1 274 1 17 1 101 2 254 1 127 1 89 2 176 1 309 2 24 1 343 1 311 1 73 2 131 1 91 1 107 2 313 2 345 1 111 1 92 1 
53 2 264 1 319 1 240 1 350 1 215 1 12 1 60 1 166 1 13 1 120 1 63 1 293 1 247 1 248 1 225 1 337 1 17 1 89 1 309 1 21 1 24 1 73 3 366 1 107 1 50 1 111 1 279 1 92 2 
248 1 53 2 264 1 89 1 309 1 73 2 12 1 60 1 166 1 107 1 345 1 13 2 120 1 50 1 244 1 63 1 261 1 279 1 
248 1 53 2 319 1 89 1 350 1 309 1 73 2 12 1 60 1 166 1 107 1 345 1 26 1 120 1 50 1 63 1 92 2 247 1 
264 1 53 2 319 1 350 1 60 1 12 2 166 1 13 2 120 2 244 1 63 2 247 1 248 1 337 1 89 1 309 1 73 4 107 1 345 1 50 2 279 1 92 2 
248 1 53 2 264 1 89 1 176 1 309 1 73 2 12 1 60 1 166 1 107 1 13 2 120 1 50 1 244 1 63 1 261 1 279 1 
248 1 53 2 319 1 89 1 350 1 176 1 309 1 73 2 12 1 60 1 166 1 107 1 26 1 120 1 50 1 63 1 92 2 247 1 
264 1 53 2 319 1 350 1 60 1 12 2 166 1 13 2 120 2 244 1 63 2 247 1 248 1 337 1 89 1 176 1 309 1 73 4 107 1 50 2 279 1 92 2 
248 1 337 1 319 1 53 2 264 1 89 1 350 1 309 1 73 4 12 2 60 1 166 1 107 1 13 2 120 2 50 2 244 1 63 2 279 1 92 2 247 1 
78 1 53 2 2 1 118 1 212 1 143 1 60 1 166 1 13 1 85 1 35 1 246 1 293 1 66 1 88 1 248 1 360 1 101 1 17 1 89 1 309 1 311 1 73 2 107 1 181 1 316 1 92 1 136 1 
78 1 53 2 2 1 118 1 212 1 267 1 143 1 60 1 166 1 13 1 85 1 334 1 35 1 246 1 293 1 88 1 248 1 360 1 101 1 17 1 89 1 232 1 309 1 311 1 73 2 107 1 181 1 92 1 
264 1 53 2 319 1 350 1 60 1 12 2 166 1 13 2 120 2 244 1 63 2 247 1 248 1 337 1 89 1 309 1 73 4 366 1 107 1 50 2 279 1 92 2 
319 1 264 1 53 2 2 1 118 1 96 1 212 1 350 1 143 1 12 2 60 1 166 1 13 2 120 2 244 1 35 1 85 1 63 2 246 1 293 1 247 1 66 1 248 1 337 1 101 1 17 1 127 1 89 1 309 1 73 4 107 1 181 1 50 2 279 1 316 1 92 2 136 1 
319 1 53 2 264 1 215 1 59 1 60 1 12 1 166 1 13 2 120 1 244 1 63 1 293 1 247 1 248 1 225 1 337 1 17 1 89 1 309 1 21 1 24 1 73 3 366 1 107 1 50 1 111 1 279 1 92 1 
53 4 264 1 319 1 79 1 241 1 54 2 350 1 216 1 60 2 147 1 97 1 13 4 354 1 150 1 244 1 87 1 247 1 248 2 337 1 227 1 309 2 233 1 73 9 180 1 107 2 312 1 50 2 279 1 92 5 
208 1 53 6 264 2 319 1 79 3 241 1 54 2 325 1 350 1 216 1 60 3 13 11 354 1 244 1 150 2 87 2 247 1 248 3 337 2 226 2 227 2 200 1 40 1 309 3 43 1 23 1 233 2 73 20 133 1 180 1 107 3 50 2 279 2 92 9 
53 4 264 1 319 1 79 1 241 1 54 2 350 1 216 1 60 2 97 1 13 4 354 1 150 1 244 1 87 1 247 1 248 2 337 1 227 1 200 1 309 2 233 1 73 9 180 1 107 2 312 1 50 2 279 1 92 5 
53 4 264 1 319 1 79 1 241 1 54 2 350 1 216 1 60 2 97 1 13 4 354 1 150 1 244 1 87 1 247 1 248 2 337 1 227 1 200 1 309 2 233 1 73 9 180 1 107 2 312 1 50 2 279 1 92 5 
347 1 208 1 53 4 264 7 319 6 79 3 241 1 54 4 325 1 350 6 216 1 60 2 304 2 13 24 354 1 150 2 244 6 87 1 247 7 248 2 337 6 226 1 199 1 362 1 251 1 227 4 200 1 40 1 295 1 43 1 309 2 23 1 233 1 73 46 133 1 180 1 107 2 312 2 47 1 50 12 279 6 92 22 
262 1 171 1 179 1 168 1 340 1 134 1 8 1 15 1 183 1 151 1 
68 1 132 1 
359 1 171 1 179 1 46 1 340 1 134 1 8 1 15 1 315 1 
321 1 116 1 
318 1 249 1 230 1 
262 1 171 1 297 1 173 1 340 1 8 1 56 1 71 1 277 1 179 1 168 1 134 1 369 2 15 1 237 1 183 1 221 1 36 1 
262 1 171 1 297 1 173 1 340 1 8 1 56 1 71 1 277 1 179 1 168 1 134 1 369 2 15 1 237 1 183 1 221 1 36 1 
262 1 171 1 297 1 173 1 340 1 8 1 56 1 71 1 277 1 179 1 168 1 134 1 369 2 15 1 237 1 183 1 221 1 36 1 
318 1 321 1 116 1 
318 1 321 1 116 1 
249 1 230 1 
318 1 249 1 230 1 
292 1 154 1 
78 1 297 1 322 1 55 1 8 1 191 1 15 1 220 1 221 1 292 1 293 2 171 1 68 1 225 2 17 2 340 1 275 1 18 1 277 1 71 1 154 1 24 2 344 1 179 1 132 1 134 1 369 1 111 2 373 1 
53 2 299 1 118 1 212 1 143 2 60 1 166 1 165 1 13 1 85 1 35 2 246 2 293 2 357 1 248 1 225 2 360 1 101 1 17 2 254 1 89 1 341 1 309 1 311 1 73 2 91 1 366 1 107 1 313 2 184 1 92 1 
336 1 294 1 101 1 118 1 102 1 127 1 162 1 9 1 143 2 310 1 44 1 155 1 105 1 371 2 35 2 246 2 186 1 335 1 223 1 
336 1 294 1 101 1 118 1 102 1 162 1 9 1 143 1 44 1 351 1 105 1 371 2 35 1 246 1 186 1 335 1 223 1 
88 1 101 1 118 1 212 1 211 1 143 1 310 1 255 1 82 1 192 1 85 1 35 1 246 1 186 1 
336 1 294 1 101 1 118 1 102 1 162 1 9 1 143 1 310 1 44 1 155 1 105 1 371 2 35 1 246 1 186 1 335 1 223 1 
41 1 
4 1 76 1 173 1 333 1 213 1 121 1 327 1 
300 1 173 2 7 1 213 1 153 1 277 1 71 1 330 1 268 1 333 1 158 1 121 1 122 1 281 1 16 1 239 1 283 1 
264 1 265 1 2 1 80 1 118 1 323 1 210 2 212 4 213 3 119 1 329 1 143 1 301 2 268 2 330 2 352 1 333 2 290 2 35 1 85 1 271 1 246 1 16 2 88 1 337 1 101 2 153 1 277 2 71 2 72 1 104 1 75 1 45 1 278 1 158 2 279 1 281 2 239 2 
264 2 319 2 208 1 54 1 325 1 213 4 301 5 268 1 330 1 333 6 290 5 150 1 16 1 247 2 337 2 227 1 40 1 43 1 133 1 158 1 279 2 281 3 
347 1 263 1 264 2 55 1 213 2 215 1 268 1 330 1 146 1 333 2 293 1 197 1 16 1 247 1 225 1 199 1 251 1 126 1 17 1 19 1 277 1 71 1 256 1 156 1 24 1 296 2 158 1 111 1 
4 1 173 1 213 1 330 1 268 1 76 1 333 1 158 1 121 1 16 1 
337 1 264 1 290 1 213 2 279 1 281 1 301 1 
173 1 153 1 121 1 277 1 71 1 239 1 
137 1 52 2 266 1 2 1 161 1 118 2 324 1 212 2 326 1 213 2 143 4 268 2 330 1 82 1 269 1 192 1 34 1 333 2 85 2 35 4 246 4 16 2 88 2 124 1 228 1 101 3 153 2 71 3 277 3 104 2 90 2 205 1 158 2 239 4 
78 1 53 2 2 1 118 1 212 1 143 1 215 2 60 1 166 1 35 1 85 1 246 1 293 3 356 1 248 1 88 1 66 1 360 1 225 2 17 3 101 1 89 1 309 1 73 1 24 2 156 1 107 1 181 1 111 2 316 1 92 1 136 1 
52 1 173 1 213 1 330 1 268 1 104 1 333 1 290 1 158 1 121 1 281 1 16 1 
134 1 8 1 292 1 
134 1 8 1 20 1 
134 1 8 1 20 1 
134 1 8 1 20 1 
134 1 148 1 8 1 
134 1 148 1 8 1 
134 1 148 1 8 1 
134 1 8 1 
171 1 15 1 
248 2 347 1 264 1 53 4 226 1 199 1 362 1 251 1 350 2 295 1 309 2 73 8 60 2 107 2 47 1 13 4 50 3 244 1 92 4 247 1 
73 6 347 1 264 1 199 1 362 1 251 1 47 1 13 3 50 2 350 2 295 1 327 1 92 3 247 1 
248 1 337 1 319 1 53 2 264 1 350 1 309 1 73 4 60 1 107 1 13 2 50 2 244 1 185 1 279 1 92 2 247 1 
337 1 319 1 264 1 227 1 54 2 350 1 73 7 312 1 13 3 50 2 150 1 244 1 279 1 92 4 247 1 
347 2 264 3 319 2 53 4 54 2 350 5 60 2 13 11 304 1 84 1 244 4 272 1 247 3 248 2 337 2 226 2 199 1 362 1 251 2 227 2 295 1 309 2 73 23 312 1 107 2 47 1 50 9 279 2 92 12 
73 1 54 1 92 1 
73 1 227 1 13 1 
248 1 337 1 53 2 264 1 319 1 350 2 309 1 73 6 60 1 107 1 13 3 50 3 244 1 271 1 185 1 279 1 92 3 247 1 
53 2 264 2 319 2 208 1 54 1 325 1 350 1 60 1 13 6 354 1 244 1 150 1 247 2 248 1 337 2 227 1 40 1 43 1 309 1 73 12 133 1 107 1 50 2 279 2 92 6 
347 1 264 1 199 1 251 1 350 1 73 6 13 3 50 2 244 1 92 3 247 1 
248 1 347 1 226 1 53 2 362 1 251 1 350 1 295 1 309 1 73 3 60 1 107 1 13 1 50 2 244 1 272 1 92 2 
248 1 347 2 53 2 264 2 199 1 251 2 350 3 309 1 73 10 60 1 107 1 13 5 50 5 354 1 244 2 197 1 92 5 247 2 
248 1 53 2 264 1 309 1 73 2 60 1 107 1 13 2 50 1 354 1 244 1 279 1 
248 1 337 1 319 1 53 2 264 1 350 1 309 1 73 4 60 1 107 1 13 2 50 2 354 1 244 1 279 1 92 2 247 1 
248 3 347 1 226 1 53 6 251 1 350 1 309 3 73 3 60 3 107 3 97 1 13 1 50 2 354 1 244 1 272 1 92 2 
347 3 53 10 264 5 319 3 54 4 350 7 214 1 11 1 60 5 97 1 13 16 354 1 150 1 244 5 272 1 247 5 248 5 337 3 226 2 199 2 362 1 251 3 227 3 295 1 309 5 73 34 107 5 312 1 47 1 50 12 185 1 279 3 92 18 207 1 
347 1 264 1 53 2 54 1 350 2 60 1 13 4 354 1 150 1 247 1 248 1 362 1 199 1 227 1 251 1 295 1 43 1 309 1 73 8 107 1 47 1 50 2 92 4 
347 1 53 4 264 2 54 2 350 2 60 2 13 6 354 1 150 1 244 1 247 1 248 2 337 1 199 1 362 1 251 1 227 1 295 1 43 1 309 2 73 11 107 2 312 1 47 1 50 3 185 1 279 1 92 5 
347 1 53 6 264 3 319 2 208 1 54 1 325 1 350 3 60 3 13 9 354 1 244 1 150 1 247 3 248 3 337 2 226 1 199 1 362 1 251 1 227 1 40 1 295 1 43 1 309 3 73 19 133 1 107 3 47 1 50 4 185 1 279 2 92 10 
347 1 53 6 264 3 319 1 208 1 54 1 325 1 350 3 60 3 13 10 354 1 244 2 150 1 247 2 248 3 337 2 226 1 199 1 362 1 251 1 227 1 40 1 295 1 43 1 309 3 73 17 133 1 107 3 47 1 50 5 185 1 279 2 92 7 
347 1 264 1 53 2 54 1 350 2 60 1 13 4 354 1 150 1 247 1 248 1 362 1 199 1 227 1 251 1 295 1 43 1 309 1 73 8 107 1 47 1 50 2 92 4 
53 2 264 2 319 2 208 1 54 1 325 1 350 1 60 1 13 6 354 1 244 1 150 1 247 2 248 1 337 2 227 1 40 1 43 1 309 1 73 12 133 1 107 1 50 2 279 2 92 6 
347 1 208 1 53 8 264 3 319 1 54 1 325 1 350 3 60 4 13 10 354 1 244 2 150 1 247 2 248 4 337 2 226 2 199 1 362 1 251 1 227 1 40 1 295 1 43 1 309 4 73 18 133 1 107 4 47 1 50 5 185 1 279 2 92 8 
208 1 53 8 264 3 319 2 54 1 325 1 350 3 60 4 97 1 13 9 354 1 244 3 150 1 247 2 248 4 337 3 226 2 227 1 40 1 43 1 309 4 73 16 133 1 107 4 50 6 279 3 92 7 
347 3 264 1 362 2 199 1 251 3 295 1 350 3 73 7 13 3 50 6 244 3 92 4 247 1 
347 1 208 1 53 8 264 3 319 1 54 1 325 1 350 3 60 4 97 1 13 10 354 1 244 1 150 1 247 2 248 4 337 2 226 2 199 1 362 1 251 1 227 1 40 1 295 1 43 1 309 4 73 18 133 1 107 4 47 1 50 4 279 2 92 8 
0 1 78 1 225 1 17 1 308 1 293 1 29 1 
0 1 78 1 225 1 114 1 338 1 3 1 17 1 308 1 29 1 314 1 368 1 293 1 
88 1 192 1 101 1 118 1 212 1 85 1 35 1 246 1 327 1 143 1 82 1 
88 1 66 1 78 1 225 1 2 1 101 1 17 2 118 1 212 1 143 1 343 1 24 1 181 1 85 1 35 1 111 1 246 1 293 2 
78 1 2 2 118 1 55 1 212 3 143 1 61 1 35 1 85 2 270 1 246 1 293 2 66 1 225 2 17 2 101 1 24 2 343 1 365 1 90 1 181 1 77 1 111 1 
78 1 2 2 118 1 55 1 212 3 143 2 61 1 334 1 35 2 85 2 270 1 246 2 293 2 225 2 39 1 17 2 101 1 24 2 343 1 365 1 90 1 181 1 77 1 111 1 
263 1 2 1 80 1 27 1 118 1 210 1 55 1 212 4 215 1 143 1 329 1 10 1 61 1 146 1 35 1 85 1 270 1 246 1 293 1 121 1 225 1 17 1 101 1 173 1 19 1 277 2 71 2 24 1 156 1 90 1 111 1 239 1 
263 1 2 1 80 1 118 1 210 1 55 1 212 4 215 1 143 1 329 1 61 1 146 1 35 1 85 1 270 1 246 1 293 1 121 1 225 1 17 1 101 1 173 1 19 1 277 2 71 2 72 1 24 1 156 1 90 1 111 1 239 1 
101 1 118 1 140 1 35 1 246 1 143 1 
306 1 137 1 88 2 2 1 161 1 274 1 101 3 140 1 118 2 323 1 127 1 9 1 212 3 143 6 131 1 91 1 313 1 49 1 35 7 85 2 246 7 
53 4 2 1 96 1 143 1 12 1 60 2 13 3 63 1 246 1 293 2 247 1 66 1 248 2 199 1 251 1 17 2 101 1 341 1 295 1 343 1 24 1 73 6 107 2 111 1 347 1 78 2 264 1 118 1 212 1 350 2 166 2 120 1 35 1 85 1 225 1 362 1 127 1 89 2 309 2 366 1 181 1 47 1 50 2 370 1 316 1 92 3 136 1 
4 1 55 1 326 1 329 1 143 1 330 2 191 1 146 1 333 4 246 1 197 1 293 1 16 2 247 2 199 1 251 1 17 1 19 1 153 1 71 3 72 1 156 1 24 1 76 1 296 2 158 2 111 1 347 1 263 1 265 1 264 2 80 1 210 1 212 2 213 5 215 1 268 2 352 1 35 1 121 2 88 1 225 1 126 1 173 2 277 3 278 1 239 2 
2 1 80 1 101 2 140 1 118 1 323 1 127 1 212 2 143 2 45 1 35 2 85 1 246 2 
88 1 160 1 39 1 101 1 118 1 127 1 212 1 143 4 82 1 192 1 35 4 85 1 246 4 
137 1 2 1 161 1 101 2 118 1 324 1 212 1 143 2 90 1 205 1 219 1 35 2 85 1 246 2 
44 1 88 1 336 1 101 1 118 1 371 1 35 1 246 1 335 1 143 1 
91 1 101 1 118 1 127 1 212 1 85 1 9 1 35 2 184 1 246 2 143 2 
88 1 306 1 160 1 101 2 118 2 127 1 212 3 143 4 82 1 90 1 131 1 91 1 192 1 35 5 85 2 246 5 
88 1 160 1 101 2 118 2 127 1 212 3 143 4 82 1 90 1 131 1 91 1 192 1 109 1 35 5 85 2 246 5 
88 1 78 1 225 1 2 1 101 1 17 2 118 1 212 1 143 1 343 1 24 1 181 1 85 1 35 1 334 1 111 1 246 1 293 2 
137 1 2 1 161 1 101 2 118 1 323 1 212 1 143 1 90 1 49 1 35 1 85 1 246 1 
78 1 69 1 62 1 6 1 175 1 
263 1 6 1 55 2 28 1 190 1 215 1 329 1 288 1 191 1 146 1 62 1 243 1 293 1 121 1 225 1 69 1 17 1 173 1 19 1 175 1 277 2 71 2 24 1 156 1 365 1 372 1 77 1 111 1 
225 1 299 1 17 1 6 1 175 1 165 1 62 1 293 1 357 1 
372 1 175 1 190 1 
217 1 229 1 327 1 242 1 
217 1 229 1 81 1 305 1 195 1 282 1 242 1 
33 1 81 1 284 1 
298 1 229 1 81 3 58 1 31 2 242 1 217 1 144 1 14 1 305 3 195 1 282 1 
217 1 152 1 229 1 81 2 305 2 276 1 195 1 282 1 242 1 
202 1 209 1 14 1 188 1 229 1 81 1 305 1 195 1 282 1 
14 1 229 1 81 1 305 1 195 1 282 1 242 1 
217 1 14 1 81 1 305 1 195 1 282 1 242 2 
100 1 229 1 81 2 30 1 242 1 331 1 14 1 305 2 195 2 282 2 
115 1 209 1 353 1 14 1 188 1 229 1 81 2 305 2 276 1 195 1 280 1 282 1 
336 1 95 1 294 1 102 1 229 1 81 2 276 1 242 1 44 1 217 1 14 1 371 2 305 2 195 1 282 1 
152 1 209 1 353 1 260 1 14 1 188 1 229 1 81 2 305 2 276 1 195 1 282 1 
217 1 14 1 229 1 81 1 305 1 195 1 282 1 242 1 
209 1 353 1 188 2 229 1 81 2 305 2 276 1 195 1 282 1 
286 1 229 1 81 2 276 1 242 1 25 1 217 1 157 1 14 1 305 2 195 1 282 1 
138 1 229 1 81 3 58 2 31 2 242 1 217 1 144 1 14 1 305 3 195 1 282 1 
139 1 135 1 229 2 98 2 
193 1 14 1 81 1 305 1 195 1 282 1 
217 1 14 1 229 1 81 2 305 2 276 1 195 1 280 1 282 1 242 1 
273 1 
217 1 14 1 229 1 81 1 305 1 195 1 282 1 242 1 
217 1 14 1 229 1 81 3 305 3 276 1 195 1 280 1 31 1 282 1 242 1 
209 1 353 1 81 1 305 1 229 1 276 1 
229 1 242 1 

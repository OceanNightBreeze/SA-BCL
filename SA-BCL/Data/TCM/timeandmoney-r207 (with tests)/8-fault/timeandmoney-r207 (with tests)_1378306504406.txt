#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (7,14,250,268) (7,14,250,268) (7,14,250,268) 201 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (7,14,250,268) (7,14,250,268) (7,14,250,268) 201 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (7,14,250,268) (7,14,250,268) (7,14,250,268) 201 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (7,14,250,268) (7,14,250,268) (7,14,250,268) 201 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (7,14,250,268) (7,14,250,268) (7,14,250,268) 201 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (7,14,250,268) (7,14,250,268) (7,14,250,268) 201 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (7,14,250,268) (7,14,250,268) (7,14,250,268) 201 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (7,14,250,268) (7,14,250,268) (7,14,250,268) 201 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (7,14,250,268) (7,14,250,268) (7,14,250,268) 201 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (56,117) (56,117) (58,72,165) (58,72,165) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (56,117) (56,117) (58,72,165) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (56,117) (56,117) (58,72,165) 24 302 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (56,117) (56,117) (58,72,165) 24 92 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException (56,117) 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 265 107 13 195 32 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (7,14,250,268) (7,14,250,268) (7,14,250,268) (3,100) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (7,14,250,268) (7,14,250,268) (7,14,250,268) 201 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (7,14,250,268) (7,14,250,268) (7,14,250,268) 201 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (7,14,250,268) (7,14,250,268) (7,14,250,268) (3,100) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (7,14,250,268) (7,14,250,268) (3,100) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (56,117) (56,117) (58,72,165) (58,72,165) 174 119 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (56,117) (56,117) (58,72,165) (58,72,165) 174 119 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (56,117) (56,117) (58,72,165) (58,72,165) 174 119 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (56,117) (56,117) (58,72,165) (58,72,165) 174 119 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (56,117) (56,117) (58,72,165) (58,72,165) 174 119 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (56,117) (56,117) (58,72,165) (58,72,165) 174 119 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (56,117) (56,117) (58,72,165) (58,72,165) 174 119 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (56,117) (56,117) (58,72,165) (58,72,165) 174 119 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (56,117) (56,117) (58,72,165) (58,72,165) 174 119 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (56,117) (56,117) (58,72,165) (58,72,165) 174 119 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (56,117) (56,117) (58,72,165) (58,72,165) 174 119 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (56,117) (56,117) (58,72,165) (58,72,165) 174 119 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 265 107 13 195 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException (56,117) (56,117) 77 (8,242) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException (56,117) (56,117) 77 (20,22) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (56,117) (56,117) (58,72,165) 24 211 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8690 | = null
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | STATEMENT | 3220 | stmt -> ;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 2411 | < -> ==
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | ASSIGN | 5073 | = null
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 0
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
14 1 7 1 201 1 268 1 135 1 
14 1 7 1 201 1 268 1 135 1 
14 1 7 1 201 1 268 1 135 1 
14 1 7 1 201 1 268 1 135 1 
14 1 7 1 201 1 268 1 135 1 
14 1 7 1 201 1 268 1 135 1 
14 1 7 1 201 1 268 1 135 1 
14 1 7 1 201 1 268 1 135 1 
14 1 7 1 201 1 268 1 135 1 
60 1 61 1 227 1 189 1 45 1 105 1 196 1 309 1 294 1 198 1 71 1 179 1 72 1 263 1 
267 1 
266 1 227 2 312 1 240 1 72 2 267 1 261 1 45 1 
98 1 266 1 186 2 143 1 227 5 26 1 10 1 267 1 45 2 30 1 49 2 255 1 217 1 35 2 115 1 312 1 72 5 261 2 202 1 
266 1 25 1 267 1 
43 1 
60 2 196 1 198 2 294 2 79 1 61 2 71 2 105 2 
76 1 281 1 77 1 78 1 79 1 248 1 124 1 88 2 293 1 294 2 130 1 18 1 52 1 219 1 133 1 21 2 138 1 140 1 183 1 60 2 223 2 61 3 231 1 104 1 105 2 269 1 192 1 106 1 236 2 305 1 197 1 196 1 198 3 111 2 71 2 75 1 242 1 
60 1 196 1 198 1 294 1 309 1 61 1 71 1 189 1 179 1 105 1 
56 1 58 1 198 1 294 1 61 1 165 1 189 1 117 1 11 1 
56 1 58 1 60 1 198 1 294 1 61 1 71 1 189 1 105 1 117 1 
311 1 227 1 72 1 261 1 45 1 
12 1 266 1 227 2 312 1 72 2 267 1 261 1 45 1 
227 1 72 1 261 1 
60 1 79 2 61 2 85 1 105 1 294 2 198 2 155 1 71 1 
238 1 63 1 149 1 
76 1 21 1 77 1 138 1 223 1 79 1 61 1 248 1 124 1 231 1 106 1 236 1 198 1 75 1 94 1 242 1 
79 1 25 1 
76 1 21 1 77 1 138 1 60 1 223 1 61 2 248 1 231 1 124 1 103 1 106 1 236 1 294 1 198 2 238 1 71 1 200 1 75 1 242 1 
60 3 198 3 294 3 79 1 61 3 71 3 103 1 105 1 
60 1 198 1 294 1 61 1 71 1 189 1 179 1 
60 1 198 1 294 1 155 1 61 1 71 1 189 1 85 1 105 1 
56 1 58 1 60 2 198 2 294 2 61 2 71 2 24 1 302 1 200 1 189 1 85 1 103 1 105 1 117 1 
60 1 198 2 294 2 79 1 61 2 71 1 218 1 103 1 11 1 
56 1 58 1 60 1 198 1 294 1 61 1 71 1 24 1 92 1 200 1 189 1 103 1 117 1 
60 2 61 2 149 1 103 1 85 1 105 1 294 2 198 2 71 2 238 1 
21 1 76 1 77 1 138 1 223 1 79 1 61 1 248 1 124 1 231 1 106 1 236 1 198 1 75 1 242 1 
21 1 20 1 76 1 77 1 138 1 223 1 79 1 61 1 66 1 124 1 231 1 106 1 236 1 198 1 75 1 
81 1 82 1 86 1 126 1 90 1 88 4 293 1 129 1 133 1 140 2 183 1 265 1 101 1 63 2 147 1 188 1 149 2 104 1 192 1 194 1 305 2 197 1 111 2 238 2 
205 1 60 1 198 1 294 1 61 1 71 1 189 1 117 1 
60 4 5 1 79 1 61 5 103 2 85 1 105 1 11 1 193 1 294 5 198 5 71 4 200 1 218 1 
205 1 60 2 198 2 294 2 61 2 71 2 189 1 179 1 
243 1 301 1 42 1 
120 1 59 1 122 1 301 2 42 2 160 1 
301 1 42 1 
301 1 42 1 
59 1 122 1 
59 1 122 1 
59 1 122 1 
284 1 301 1 42 1 
284 1 301 1 42 1 
284 1 301 1 42 1 
68 1 301 1 42 1 
68 1 301 1 42 1 
68 1 301 1 42 1 
204 1 1 2 184 2 42 2 301 2 227 2 102 1 9 3 267 1 87 1 172 1 304 2 289 2 72 2 157 1 134 1 160 1 279 2 54 1 
1 1 243 1 79 1 42 1 168 1 9 1 87 1 294 2 19 1 137 1 60 2 184 1 141 1 301 1 61 2 227 1 304 1 198 2 154 1 71 2 72 1 156 1 279 1 313 1 
47 2 70 2 118 1 220 1 40 1 
139 1 70 1 220 1 
139 1 70 1 118 1 
47 1 70 3 6 1 118 1 220 2 40 1 
47 1 254 1 70 2 118 1 220 1 40 1 
206 1 4 1 244 2 43 3 83 2 10 1 209 1 86 1 45 4 49 1 261 1 137 1 298 1 141 1 265 1 266 1 98 3 186 1 101 1 227 5 188 1 65 2 267 2 30 2 107 1 110 1 35 1 312 1 38 1 116 1 72 5 313 1 
43 9 83 6 166 5 10 1 209 2 86 3 45 7 251 1 290 1 49 2 93 1 261 6 137 4 298 2 265 3 266 1 98 8 186 2 143 1 101 3 227 9 188 3 230 1 65 6 267 5 30 6 31 1 107 3 271 1 311 5 35 2 38 1 312 1 116 3 72 9 
206 1 244 1 83 2 43 4 209 1 86 1 45 2 49 1 137 1 298 1 265 1 266 1 98 3 186 1 143 1 101 1 227 3 188 1 65 2 267 3 30 2 107 1 110 1 35 1 116 2 72 3 
206 1 244 2 43 7 83 4 209 1 86 2 45 3 251 1 49 1 137 2 298 1 265 2 266 1 98 5 186 1 143 1 101 2 227 4 188 2 230 1 65 4 267 4 30 4 31 1 107 2 110 1 35 1 116 3 72 4 
308 1 
76 1 258 1 25 1 
76 1 237 1 
76 1 231 1 
76 3 258 2 231 1 297 1 190 1 75 1 
76 1 231 1 75 1 
76 1 158 1 
203 1 121 2 140 4 300 1 147 2 188 1 86 1 249 1 235 1 175 1 305 3 153 1 88 7 129 3 276 1 241 1 296 1 55 1 
203 2 121 1 140 10 41 1 265 3 147 1 101 2 188 3 27 3 86 2 107 3 195 1 13 1 32 1 305 7 153 2 88 17 129 3 274 1 296 1 37 1 53 3 
203 1 121 2 208 1 123 1 86 1 249 1 175 1 88 9 293 2 129 4 296 1 222 1 183 2 140 5 300 1 147 3 188 1 104 2 192 2 305 4 153 1 111 4 241 1 276 1 
203 1 121 2 140 4 300 1 147 2 188 1 86 1 249 1 235 1 175 1 305 3 153 1 88 7 129 3 276 1 296 1 241 1 
203 1 121 2 140 4 300 1 147 2 188 1 86 1 249 1 235 1 175 1 305 3 153 1 88 7 129 3 276 1 296 1 241 1 
14 1 100 1 7 1 268 1 135 1 
14 1 7 1 201 1 268 1 135 1 
14 1 7 1 201 1 268 1 135 1 
14 1 100 1 7 1 268 1 135 1 
3 1 250 1 268 1 135 1 
34 1 
76 1 165 1 44 1 10 1 209 1 124 1 11 1 174 1 49 1 294 1 132 1 261 2 56 1 21 2 58 1 138 1 223 2 98 1 186 1 61 1 227 2 189 1 231 1 30 1 106 2 236 2 108 1 67 1 198 1 69 1 272 1 35 1 312 1 72 2 277 1 117 1 119 1 
56 1 58 1 61 1 227 1 165 1 189 1 11 1 174 1 69 1 294 1 198 1 72 1 277 1 117 1 119 1 
56 1 58 1 61 1 227 1 165 1 189 1 11 1 174 1 69 1 294 1 198 1 72 1 277 1 117 1 119 1 
56 1 58 1 61 1 227 1 165 1 189 1 11 1 174 1 69 1 294 1 198 1 72 1 277 1 117 1 119 1 
56 1 58 1 61 1 227 2 165 1 189 1 11 1 174 1 198 1 69 1 294 1 240 1 312 1 72 2 261 1 277 1 117 1 119 1 
56 1 58 1 186 1 61 1 227 1 165 1 189 1 10 1 11 1 174 1 49 1 198 1 294 1 69 1 35 1 72 1 277 1 117 1 119 1 
56 1 58 1 61 1 227 1 165 1 189 1 11 1 174 1 69 1 294 1 198 1 72 1 277 1 117 1 119 1 
56 1 58 1 61 1 227 1 165 1 189 1 11 1 174 1 69 1 294 1 198 1 72 1 277 1 117 1 119 1 
56 1 58 1 61 1 227 1 165 1 189 1 11 1 174 1 69 1 294 1 198 1 72 1 277 1 117 1 119 1 
56 1 58 1 61 1 227 1 165 1 189 1 11 1 174 1 69 1 294 1 198 1 72 1 277 1 117 1 119 1 
56 1 58 1 61 1 227 1 165 1 189 1 11 1 174 1 69 1 294 1 198 1 72 1 277 1 117 1 119 1 
56 1 58 1 186 1 61 1 227 1 165 1 189 1 10 1 11 1 174 1 49 1 198 1 294 1 69 1 35 1 72 1 277 1 117 1 119 1 
76 3 163 1 164 1 78 2 44 1 124 2 46 1 213 1 176 1 90 1 88 2 294 1 293 2 52 1 133 2 21 8 138 2 60 1 183 2 140 1 223 7 61 1 148 1 103 1 231 2 104 2 106 2 192 2 269 1 236 8 270 1 305 1 67 1 197 2 33 1 198 1 71 1 111 4 39 1 
85 1 86 1 88 3 129 1 293 1 294 1 133 1 183 1 60 1 140 1 265 1 61 1 147 1 63 1 226 1 101 1 188 1 149 1 232 1 105 1 104 1 192 1 107 1 305 2 197 1 198 1 238 1 71 1 111 2 
121 1 79 2 249 1 86 1 175 1 90 1 88 6 293 1 129 2 133 1 183 1 140 3 300 1 25 1 147 2 63 1 188 1 149 1 104 1 192 1 305 3 197 1 238 1 111 2 241 1 276 1 
41 1 79 1 86 1 288 1 173 1 88 14 129 2 293 2 52 1 53 3 133 2 183 2 140 8 185 1 265 2 147 1 226 1 63 11 101 1 27 3 188 2 149 4 104 2 269 1 150 1 192 2 107 2 305 6 197 1 153 1 111 4 238 11 37 1 
79 1 88 2 294 1 293 1 17 1 52 1 133 1 57 1 183 1 60 1 140 1 61 1 226 1 189 1 28 1 149 1 103 1 104 1 192 1 269 1 305 1 197 1 198 1 71 1 111 2 200 1 239 1 
76 2 77 2 2 1 79 2 248 2 249 1 86 3 175 1 88 20 256 2 21 3 183 3 265 2 101 2 188 3 103 1 104 3 269 1 106 1 192 3 107 2 197 3 198 3 273 1 111 6 276 1 200 1 114 2 281 2 121 1 124 2 215 2 293 3 294 1 129 8 295 2 52 1 133 3 138 2 60 1 140 10 300 1 223 3 61 3 147 4 226 1 63 7 148 1 149 7 231 2 236 3 305 10 153 4 71 1 238 7 241 1 75 2 162 1 242 2 
183 1 140 2 265 1 63 1 188 1 149 1 104 1 126 1 192 1 197 1 153 1 88 2 90 1 129 1 293 1 238 1 111 2 133 1 
183 1 147 1 63 1 81 1 101 1 149 1 86 1 104 1 192 1 305 2 197 1 88 2 90 1 129 1 293 1 238 1 111 2 133 1 
86 1 90 1 88 4 293 1 129 2 133 1 140 2 183 1 265 1 63 2 101 1 147 1 188 1 149 2 104 1 192 1 107 1 305 2 197 1 153 1 111 2 238 2 
163 1 183 1 140 2 265 1 63 1 188 1 149 1 104 1 126 1 192 1 197 1 153 1 88 2 129 1 293 1 238 1 111 2 133 1 
163 1 183 1 147 1 63 1 81 1 101 1 149 1 86 1 104 1 192 1 305 2 197 1 88 2 129 1 293 1 238 1 111 2 133 1 
163 1 86 1 88 4 293 1 129 2 133 1 140 2 183 1 265 1 63 2 101 1 147 1 188 1 149 2 104 1 192 1 107 1 305 2 197 1 153 1 111 2 238 2 
183 1 140 2 265 1 147 1 101 1 63 2 188 1 149 2 86 1 104 1 192 1 107 1 305 2 197 1 153 1 88 4 129 2 293 1 238 2 111 2 133 1 
281 1 76 1 77 1 79 1 248 1 124 1 88 2 293 1 52 1 133 1 21 1 138 1 140 1 183 1 223 1 61 1 231 1 104 1 106 1 192 1 269 1 236 1 305 1 197 1 198 1 111 2 75 1 242 1 
76 1 77 1 79 1 124 1 88 2 293 1 52 1 133 1 20 1 21 1 138 1 140 1 183 1 223 1 61 1 231 1 66 1 104 1 106 1 192 1 269 1 236 1 305 1 197 1 198 1 111 2 278 1 75 1 
86 1 88 4 293 1 129 2 133 1 140 2 183 1 265 1 226 1 63 2 101 1 147 1 188 1 149 2 104 1 192 1 107 1 305 2 197 1 153 1 111 2 238 2 
281 1 76 1 77 1 248 1 86 1 124 1 46 1 88 4 129 2 293 1 295 1 133 1 21 1 138 1 140 2 183 1 265 1 223 1 61 1 147 1 101 1 63 2 188 1 149 2 231 1 104 1 192 1 236 1 107 1 305 2 197 1 153 1 198 1 238 2 111 2 75 1 242 1 
86 1 85 1 88 3 129 1 293 1 294 1 133 1 183 1 60 1 140 2 265 1 61 1 101 1 226 1 63 1 188 1 149 1 105 1 104 1 192 1 107 1 305 1 197 1 153 1 198 1 71 1 111 2 238 1 159 1 
283 1 41 1 208 1 86 3 48 1 88 19 257 2 293 2 129 6 91 1 53 1 299 2 183 2 140 9 265 3 147 3 62 1 101 3 27 2 188 3 104 2 192 2 107 3 303 1 306 1 305 10 153 3 111 4 37 1 161 1 
283 2 246 1 208 1 123 2 170 1 86 2 48 2 88 26 257 1 129 4 293 3 260 1 53 2 299 4 183 3 140 14 265 3 147 2 62 1 101 2 27 2 188 3 104 3 192 3 107 3 303 1 305 12 306 1 151 1 153 2 111 6 113 1 37 2 280 1 
283 2 121 1 41 1 246 1 208 1 123 1 249 1 170 1 86 5 175 1 48 1 88 41 257 1 293 3 129 8 91 1 260 1 53 3 299 4 183 3 140 20 300 1 265 4 147 4 62 1 101 4 27 4 188 5 104 3 192 3 107 4 303 1 151 1 306 1 305 21 153 4 310 1 111 6 113 1 276 1 241 1 37 3 280 1 
283 2 121 1 41 1 246 1 208 1 123 2 249 1 170 1 86 4 175 1 48 1 88 38 257 1 293 4 129 7 91 1 260 1 53 3 299 4 183 4 140 20 300 1 265 4 147 4 62 1 101 3 27 4 188 5 104 4 192 4 107 4 303 1 151 1 306 1 305 18 153 3 310 1 111 8 113 1 276 1 241 1 37 3 280 1 
283 1 121 1 41 2 246 1 208 1 123 1 249 1 170 1 86 8 175 1 48 1 88 52 257 1 293 2 129 14 260 1 53 4 299 4 183 2 140 27 300 1 265 7 147 7 62 1 101 7 27 4 188 8 104 2 150 2 192 2 107 7 303 1 151 1 306 1 305 25 153 7 111 4 113 1 276 1 241 1 37 2 280 1 
304 1 184 1 1 1 301 1 42 1 51 1 160 1 279 1 54 1 172 1 
243 1 168 1 
304 1 184 1 1 1 301 1 42 1 247 1 275 1 131 1 279 1 
204 1 1 1 184 1 42 1 301 1 227 1 102 1 9 2 267 1 87 1 172 1 304 1 289 1 72 1 157 1 160 1 279 1 54 1 
204 1 1 1 184 1 42 1 301 1 227 1 102 1 9 2 267 1 87 1 172 1 304 1 289 1 72 1 157 1 160 1 279 1 54 1 
204 1 1 1 184 1 42 1 301 1 227 1 102 1 9 2 267 1 87 1 172 1 304 1 289 1 72 1 157 1 160 1 279 1 54 1 
120 1 95 1 284 1 
120 1 95 1 284 1 
68 1 145 1 
120 1 68 1 145 1 
154 1 19 1 
204 1 1 1 243 1 79 1 42 1 168 1 9 1 45 1 289 1 294 2 19 1 262 1 137 1 184 1 60 2 141 1 301 1 61 2 227 1 304 1 198 2 154 1 71 2 72 1 156 1 279 1 313 1 
95 1 284 1 
120 1 68 1 145 1 
78 2 285 1 124 1 88 2 216 1 294 2 293 1 52 1 133 1 21 2 138 1 183 1 140 1 223 2 61 2 226 1 233 1 104 1 192 1 269 1 236 2 270 1 305 1 197 1 198 2 111 2 112 1 74 1 
76 1 21 1 138 1 223 1 224 1 23 1 144 1 44 1 169 1 124 1 231 1 106 1 236 1 67 1 
21 1 138 1 139 1 223 1 224 1 207 1 187 1 6 1 148 1 169 1 124 1 236 1 212 1 109 1 89 1 70 2 118 1 220 1 
21 2 138 1 139 1 223 2 224 1 207 1 187 1 6 1 148 1 169 1 124 1 236 2 46 1 212 1 109 1 89 1 70 2 118 1 220 1 
21 1 0 1 138 1 139 1 223 1 207 1 6 1 148 1 169 1 124 1 236 1 212 1 109 1 89 1 70 2 118 1 220 1 
291 1 
266 1 98 1 186 1 10 1 267 1 30 1 49 1 217 1 35 1 115 1 
265 1 98 2 83 2 43 4 101 1 188 1 65 2 267 2 86 1 30 2 107 1 116 2 
266 1 227 1 312 1 72 1 267 1 261 1 
76 1 44 1 10 1 209 2 124 1 287 1 171 2 127 1 49 2 177 1 132 2 261 4 21 4 138 1 223 4 98 2 186 2 143 1 227 3 231 1 30 2 106 2 236 4 108 1 67 1 272 1 35 2 312 2 72 3 
98 1 266 1 217 1 25 1 115 1 267 1 30 1 
43 1 10 1 49 1 261 1 99 1 98 1 266 1 186 1 227 1 64 1 267 1 30 1 191 1 35 1 312 1 116 1 72 1 
76 4 80 1 83 3 8 1 167 1 10 2 86 1 258 1 261 2 21 1 182 1 97 1 265 1 98 4 186 2 101 1 188 1 267 3 30 3 106 1 107 1 35 2 199 1 116 3 43 6 209 1 124 1 125 1 128 1 49 2 215 1 297 1 138 2 223 1 227 2 65 3 231 1 236 1 237 2 312 1 72 2 75 1 
43 3 83 5 10 1 86 2 170 1 49 1 260 1 53 1 265 2 98 6 186 1 101 2 27 1 188 2 65 5 30 4 107 2 151 1 113 1 35 1 37 1 280 1 
10 1 249 1 86 1 49 1 294 1 16 1 179 1 221 1 136 1 263 1 181 2 60 1 300 1 98 2 186 1 61 1 227 1 188 2 189 1 105 1 30 2 196 1 198 1 309 1 71 1 35 1 276 1 72 1 
281 1 76 1 77 1 79 1 248 1 124 1 88 1 293 1 294 2 18 1 133 1 21 1 138 1 183 1 60 2 223 1 61 3 231 1 104 1 105 2 269 1 106 1 192 1 236 1 305 1 196 1 197 1 198 3 111 2 71 2 75 1 242 1 
98 1 266 1 186 1 43 1 65 1 10 1 209 1 267 1 30 1 49 1 35 1 132 1 
184 1 19 1 180 1 279 1 172 1 
184 1 228 1 279 1 
184 1 228 1 279 1 
184 1 228 1 279 1 
184 1 142 1 279 1 
184 1 142 1 279 1 
184 1 142 1 279 1 
184 1 279 1 
301 1 42 1 
183 1 140 5 300 2 208 1 147 3 188 2 249 1 86 2 104 1 192 1 305 5 153 2 88 10 293 1 129 5 111 2 276 2 221 1 
183 1 140 2 265 1 208 1 188 1 104 1 192 1 88 2 153 1 293 1 129 1 111 2 
183 1 140 2 265 1 208 1 147 1 101 1 188 1 86 1 104 1 192 1 107 1 305 2 88 4 153 1 129 2 293 1 111 2 
183 3 140 1 300 1 245 1 208 1 147 1 123 1 104 3 192 3 305 2 88 3 153 1 293 3 129 2 91 1 111 6 276 1 
140 7 183 3 265 2 208 1 101 1 188 2 27 2 86 1 104 3 192 3 107 2 234 1 195 1 13 1 305 4 153 1 88 11 129 1 293 3 274 1 111 6 91 1 37 1 53 3 
121 1 140 4 183 2 300 1 147 2 188 1 123 1 86 1 249 1 104 2 192 2 175 1 305 4 88 8 153 1 129 3 293 2 111 4 241 1 276 1 
121 1 140 3 300 1 25 1 147 2 188 1 249 1 86 1 175 1 305 3 88 6 129 2 241 1 276 1 
183 1 140 2 265 1 147 1 101 1 188 1 86 1 104 1 192 1 234 1 107 1 305 2 88 4 153 1 129 2 293 1 111 2 
140 3 41 1 265 1 147 1 101 1 27 2 188 1 86 1 107 1 305 4 88 7 153 1 129 2 37 1 53 1 
121 1 41 1 245 1 123 2 249 1 86 3 175 1 88 23 129 9 293 2 53 2 140 11 183 2 300 2 265 2 185 1 101 2 147 5 188 3 27 2 104 2 150 1 192 2 107 2 305 12 153 4 111 4 276 2 241 1 
305 1 88 1 27 1 
140 1 88 1 53 1 
183 1 140 3 265 1 101 1 147 2 188 1 86 1 104 1 192 1 234 1 107 1 305 3 215 1 88 6 153 1 293 1 129 3 111 2 
208 1 86 2 170 1 88 12 293 1 129 2 260 1 53 1 183 1 140 6 265 2 101 2 147 1 27 1 188 2 104 1 192 1 107 2 305 6 151 1 153 1 111 2 113 1 37 1 280 1 
140 3 300 1 147 1 188 1 249 1 86 1 305 3 88 6 153 1 129 2 276 1 
140 1 183 1 300 1 245 1 147 1 123 1 104 1 192 1 175 1 305 2 153 1 88 3 129 2 293 1 111 2 276 1 241 1 
121 1 208 1 86 1 249 1 175 1 88 8 293 1 129 2 53 1 183 1 140 4 300 1 147 2 188 1 27 1 104 1 192 1 305 4 111 2 113 1 37 1 241 1 276 1 
121 1 41 1 208 1 86 1 249 1 175 1 88 11 293 2 129 3 53 1 183 2 140 6 300 1 265 1 147 2 27 2 188 2 104 2 192 2 234 1 107 1 305 5 153 1 111 4 113 1 276 1 241 1 37 1 
121 1 208 1 123 1 249 1 170 1 86 3 175 1 88 19 293 3 129 4 260 1 53 1 183 3 140 9 300 1 265 2 101 2 147 3 27 1 188 3 104 3 192 3 234 1 107 2 305 10 151 1 153 1 111 6 113 1 276 1 241 1 37 1 280 1 
121 1 208 1 123 1 249 1 86 2 170 1 175 1 88 17 293 3 129 5 260 1 53 1 183 3 140 10 300 1 265 2 101 1 147 3 27 1 188 3 104 3 192 3 234 1 107 2 305 7 151 1 153 2 111 6 113 1 276 1 241 1 37 1 280 1 
121 1 208 1 86 1 249 1 175 1 88 8 293 1 129 2 53 1 183 1 140 4 300 1 147 2 188 1 27 1 104 1 192 1 305 4 111 2 113 1 37 1 241 1 276 1 
208 1 86 2 170 1 88 12 293 1 129 2 260 1 53 1 183 1 140 6 265 2 101 2 147 1 27 1 188 2 104 1 192 1 107 2 305 6 151 1 153 1 111 2 113 1 37 1 280 1 
121 1 208 1 123 2 249 1 170 1 86 2 175 1 88 18 293 4 129 5 260 1 53 1 183 4 140 10 300 1 265 2 101 1 147 3 27 1 188 3 104 4 192 4 234 1 107 2 305 8 151 1 153 2 111 8 113 1 276 1 241 1 37 1 280 1 
208 1 123 2 170 1 86 2 88 16 293 4 129 6 91 1 260 1 53 1 183 4 140 9 265 3 101 2 147 3 27 1 188 3 104 4 192 4 107 3 305 7 151 1 153 3 111 8 113 1 37 1 280 1 
140 3 300 3 147 3 188 1 86 1 249 1 175 1 305 4 88 7 153 3 129 6 241 2 276 3 
121 1 208 1 123 2 249 1 170 1 86 2 175 1 88 18 293 4 129 4 91 1 260 1 53 1 183 4 140 10 300 1 265 2 101 1 147 3 27 1 188 3 104 4 192 4 107 2 305 8 151 1 153 1 111 8 113 1 276 1 241 1 37 1 280 1 
307 1 198 1 294 1 79 1 61 1 218 1 11 1 
96 1 79 1 61 1 146 1 84 1 11 1 152 1 307 1 294 1 198 1 218 1 73 1 
21 4 76 1 138 1 223 4 225 1 44 1 231 1 124 1 106 1 236 4 46 1 67 1 178 1 
21 2 76 1 138 2 223 2 231 1 210 1 124 1 171 1 29 1 236 2 253 1 273 1 259 1 75 1 
21 1 236 1 138 1 139 1 223 1 207 1 70 1 124 1 118 1 106 1 
21 2 236 2 46 1 138 1 223 2 285 1 148 1 124 1 
21 5 76 3 138 2 223 4 44 1 231 2 124 2 171 1 106 1 236 5 46 1 67 1 176 1 33 1 178 1 39 1 
21 5 76 3 138 2 223 4 44 1 231 2 124 2 171 1 106 1 236 5 46 1 67 1 292 1 33 1 178 1 39 1 
76 1 21 1 236 1 138 1 67 1 223 1 44 1 25 1 124 1 231 1 106 1 
76 1 21 1 77 1 138 1 60 1 223 1 79 1 61 2 231 1 103 1 124 1 106 1 236 1 294 1 198 2 71 1 75 1 242 1 
56 1 76 1 21 1 77 1 138 1 60 1 223 1 61 1 189 1 231 1 103 1 124 1 171 1 236 1 294 1 198 1 71 1 117 1 75 1 242 1 
56 1 76 1 21 1 20 1 77 1 138 1 60 1 223 1 61 1 189 1 231 1 103 1 124 1 171 1 236 1 294 1 198 1 71 1 117 1 75 1 
76 4 282 1 167 1 124 1 171 1 15 1 294 1 258 1 179 1 261 1 263 1 21 1 22 1 138 1 60 1 223 1 266 1 61 1 227 2 189 1 231 1 267 1 105 1 236 1 196 1 198 1 309 1 237 1 71 1 72 2 158 1 75 1 
76 4 282 1 8 1 167 1 124 1 171 1 294 1 258 1 179 1 261 1 263 1 21 1 138 1 60 1 223 1 266 1 61 1 227 2 189 1 231 1 267 1 105 1 236 1 196 1 198 1 309 1 237 1 71 1 72 2 158 1 75 1 
21 1 236 1 213 1 138 1 223 1 124 1 
21 7 76 3 164 1 138 3 78 1 223 6 148 1 286 1 231 2 210 1 124 2 106 2 46 1 236 7 213 1 253 1 176 1 33 1 297 1 39 1 75 1 
76 1 281 1 77 1 121 1 79 2 248 1 86 1 249 1 124 1 175 1 46 1 88 6 129 2 294 1 293 2 295 1 133 2 21 1 138 1 140 3 183 2 60 1 300 1 223 1 61 2 63 1 147 2 226 1 188 1 149 1 231 1 233 1 103 1 104 2 192 2 236 1 305 3 197 2 198 2 238 1 71 1 111 4 276 1 241 1 114 1 75 1 242 1 
76 2 80 1 167 1 8 1 10 2 249 1 86 2 258 1 179 1 261 2 263 1 21 1 181 2 182 1 266 2 98 4 186 2 188 2 189 1 267 2 105 1 30 5 106 1 196 1 198 1 35 2 115 1 276 1 287 1 125 1 45 1 49 2 217 1 294 1 221 1 136 1 60 1 300 1 223 1 61 1 227 3 236 1 309 1 237 1 71 1 312 1 72 3 
21 2 76 2 138 2 223 2 231 1 124 1 46 1 236 2 213 1 258 1 199 1 297 1 75 1 
76 1 21 1 20 1 77 1 138 1 60 1 223 1 79 1 61 2 231 1 103 1 124 1 106 1 236 1 294 1 198 2 71 1 75 1 
21 1 76 1 138 2 223 1 286 1 231 1 210 1 124 1 171 1 236 1 253 1 297 1 75 1 
214 1 79 1 50 1 229 1 252 1 
56 1 58 1 264 1 227 1 24 1 229 1 189 1 45 1 211 1 252 1 214 1 50 1 36 1 72 1 117 1 
214 1 198 1 294 1 216 1 61 1 50 1 112 1 74 1 252 1 
50 1 36 1 211 1 

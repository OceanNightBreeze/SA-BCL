#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 73 175 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 379 165 124 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 379 165 124 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 379 165 124 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 379 165 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 25
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | STATEMENT | 5650 | stmt -> ;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1870 | -= -> >>=
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 11341 | stmt -> ;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3831 | 1 -> -1
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 2
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V | ASSIGN | 1238 | = null
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
313 1 102 1 315 1 109 1 83 1 338 1 61 1 340 9 292 1 225 2 192 9 143 2 32 2 144 2 88 2 369 1 200 1 149 1 326 1 327 1 68 2 94 4 375 5 179 6 137 3 212 1 257 2 381 1 
313 1 102 1 315 1 109 1 83 1 338 1 61 1 340 9 292 1 143 2 192 9 225 2 32 2 144 2 88 2 369 1 200 1 149 1 326 1 327 1 68 2 94 4 375 5 179 6 137 3 212 1 257 2 381 1 
313 1 102 1 315 1 109 1 83 1 338 1 61 1 340 10 292 1 143 2 192 10 225 2 32 2 144 2 88 2 369 1 200 1 149 1 326 1 327 1 68 2 94 5 375 6 179 7 137 4 212 1 257 2 381 1 
313 1 102 1 315 1 109 1 83 1 338 1 340 7 292 1 143 2 192 7 225 1 32 2 144 2 88 2 369 1 200 1 149 1 326 1 327 1 68 2 94 3 375 4 179 4 137 2 212 1 257 2 381 1 
313 1 315 1 68 1 94 2 179 3 375 3 338 1 137 1 61 1 340 4 212 1 192 4 225 2 143 1 32 1 144 1 88 1 369 1 
313 1 186 1 315 1 109 1 68 1 375 1 180 1 340 2 62 1 192 2 32 1 257 1 144 1 381 1 88 1 369 1 
313 1 315 1 94 1 375 2 179 1 83 1 137 1 340 3 192 3 32 2 257 1 144 2 369 1 
313 1 356 1 315 1 83 1 338 1 340 9 61 1 192 9 225 2 143 1 32 2 144 2 88 1 369 1 114 1 200 1 326 1 68 1 94 4 179 7 375 5 137 3 212 1 257 1 
313 1 356 1 315 1 83 1 338 1 340 9 61 1 192 9 225 2 143 1 32 2 144 2 88 1 369 1 114 1 200 1 326 1 68 1 94 4 179 7 375 5 137 3 212 1 257 1 
213 1 34 1 323 1 
183 1 284 2 323 1 
207 2 122 2 43 2 47 2 279 2 288 1 273 2 370 1 
140 1 78 1 122 2 107 1 188 1 108 1 242 1 288 1 80 1 361 2 319 1 320 2 245 1 265 1 169 1 342 1 322 1 370 1 174 1 324 1 344 1 115 1 346 1 148 2 134 2 348 1 273 2 207 3 16 1 43 2 47 3 279 2 255 1 215 1 120 2 217 1 354 1 
207 1 343 1 122 1 43 1 191 1 47 1 279 1 172 1 273 1 370 1 
116 1 127 1 336 1 374 1 53 1 207 1 155 1 378 1 47 1 279 1 213 1 7 1 172 1 323 1 
122 1 127 1 336 1 273 1 374 1 53 2 207 1 43 1 155 1 378 2 47 1 279 1 213 1 172 1 323 1 
378 1 351 1 193 1 221 1 53 1 
378 2 213 1 351 1 295 1 222 1 221 1 323 1 53 2 
378 1 351 1 53 1 
343 1 122 1 221 1 273 1 53 1 207 1 191 1 43 1 378 1 264 1 47 1 279 1 172 1 370 1 
323 1 
122 1 221 1 53 2 191 1 264 1 295 1 172 1 323 1 266 1 370 1 343 1 273 1 207 1 43 1 378 2 47 1 279 1 213 1 351 1 
249 2 187 1 359 2 272 1 250 2 221 2 81 1 360 1 53 5 263 1 208 1 153 1 339 1 378 5 213 1 351 2 295 1 89 1 323 1 
34 1 288 1 
371 1 122 1 273 1 288 2 205 1 207 2 43 1 47 2 279 2 
158 1 111 1 93 1 
115 1 25 1 346 1 242 1 288 1 207 1 361 1 320 1 47 1 245 1 255 1 342 1 322 1 215 1 120 1 354 1 
115 1 303 1 122 1 346 1 242 1 273 1 93 1 207 2 361 1 168 1 320 1 245 1 47 2 342 1 279 1 255 1 322 1 215 1 120 1 354 1 
9 1 303 1 122 4 273 4 288 1 205 1 207 4 43 1 168 2 47 4 279 4 113 1 33 1 172 1 
207 2 343 1 122 2 47 2 279 2 6 1 172 1 273 2 
207 3 122 3 43 1 168 1 47 3 279 3 288 1 273 3 
207 1 343 1 122 1 47 1 279 1 172 1 273 1 
207 1 371 1 122 1 43 1 47 1 279 1 172 1 273 1 205 1 
78 1 122 3 108 1 127 1 242 1 336 1 288 1 53 1 361 1 319 1 168 1 320 1 245 1 265 1 342 1 169 1 322 1 172 1 370 1 174 1 324 1 344 1 115 1 303 1 346 1 148 2 134 1 273 3 374 1 206 1 205 1 207 4 16 1 43 2 155 1 17 1 378 1 47 4 279 3 255 1 215 1 120 1 217 1 354 1 
207 2 247 1 122 1 168 1 47 2 279 2 7 1 288 1 273 1 
303 1 122 3 127 1 336 1 273 3 374 1 205 1 206 1 53 1 207 3 43 1 378 1 168 2 155 1 47 3 279 3 172 1 22 1 323 1 
122 2 111 1 273 2 205 1 93 1 207 2 43 1 168 1 47 2 279 2 
115 1 346 1 242 1 288 1 207 1 361 1 320 1 47 1 245 1 255 1 342 1 322 1 215 1 120 1 354 1 
115 1 288 1 207 1 361 1 320 1 211 1 47 1 245 1 255 1 342 1 322 1 215 1 120 1 246 1 354 1 
158 2 159 1 78 1 123 1 26 1 260 1 188 2 108 1 162 1 111 2 319 1 60 1 265 1 302 1 344 1 148 2 134 3 93 2 275 1 16 1 73 1 278 1 217 1 
207 1 122 1 47 1 279 1 6 1 127 1 172 1 273 1 
166 1 251 1 
166 1 251 1 
308 1 21 1 
308 1 21 1 
308 1 21 1 
166 1 98 1 251 1 
166 1 98 1 251 1 
318 1 166 1 251 1 
308 1 166 2 160 1 21 1 163 1 251 2 
166 1 98 1 251 1 
35 1 166 1 251 1 
35 1 166 1 251 1 
35 1 166 1 251 1 
355 1 122 2 51 1 1 1 288 1 289 1 53 1 318 1 84 1 166 1 112 1 5 1 372 1 251 1 273 2 177 1 207 2 378 1 47 2 279 2 49 1 353 1 235 1 23 1 
312 1 333 1 0 1 306 1 163 1 1 2 251 2 177 1 53 2 289 3 72 1 210 2 31 1 166 2 112 2 378 2 353 2 323 1 23 2 
143 1 68 1 88 1 
180 1 68 1 88 1 
41 1 57 1 180 1 59 1 143 2 88 3 
267 1 41 1 180 1 59 1 143 1 88 2 
41 1 180 1 59 2 143 1 88 2 
183 1 236 1 162 1 241 1 359 1 220 1 221 4 53 5 81 2 295 1 365 1 227 2 89 2 323 2 66 2 372 1 249 1 175 1 349 2 250 1 275 1 208 1 254 1 73 1 378 5 213 1 351 1 49 1 282 1 235 1 284 3 
183 3 314 1 236 1 162 3 241 2 359 2 221 7 53 9 81 5 193 5 297 1 296 1 295 1 227 6 89 6 198 1 323 5 249 2 175 3 133 1 150 5 272 1 349 6 250 2 275 3 208 1 73 3 378 9 213 1 280 1 351 6 282 2 235 4 284 9 
183 2 241 1 162 1 359 1 221 2 220 1 53 3 81 2 89 2 227 2 323 3 66 1 249 1 175 1 250 1 272 1 349 2 275 1 254 1 73 1 378 3 213 1 282 1 235 1 284 4 
183 3 314 1 241 1 162 2 359 1 220 1 221 3 53 4 81 3 297 1 227 4 89 4 323 4 66 2 249 1 175 2 349 4 250 1 272 1 275 2 254 1 73 2 378 4 213 1 280 1 282 1 235 2 284 7 
147 1 34 1 354 1 
178 1 354 1 
11 1 
115 1 245 1 354 1 
65 1 354 1 
115 1 354 1 
115 1 147 2 10 1 11 1 223 1 245 1 354 3 
146 1 123 3 26 2 188 4 240 1 134 7 275 1 14 1 164 1 56 1 55 2 16 3 377 1 181 1 299 1 311 1 77 1 
146 1 123 3 26 2 188 4 240 1 134 7 275 1 14 1 164 1 56 1 55 2 16 3 377 1 181 1 299 1 311 1 77 1 
146 1 123 3 26 2 188 4 240 1 134 7 316 1 275 1 14 1 164 1 56 1 55 2 16 3 377 1 181 1 299 1 311 1 77 1 
103 1 78 1 106 1 123 10 26 5 188 16 108 1 240 2 189 4 162 3 244 1 164 1 55 3 56 5 291 1 265 1 299 2 90 1 146 1 344 1 132 1 148 2 175 3 176 1 134 28 275 4 14 2 276 3 16 12 377 2 73 3 181 1 311 1 77 1 
146 1 344 2 91 1 132 1 78 2 123 4 26 3 148 4 188 5 108 2 240 1 134 9 275 1 14 1 56 1 55 2 16 4 377 1 265 2 332 1 181 1 311 1 299 1 77 1 
313 1 185 1 315 1 361 1 57 1 320 1 340 2 341 1 342 1 143 1 192 2 32 1 322 1 144 1 88 2 64 1 367 1 369 1 230 1 68 1 375 1 179 1 135 1 97 1 180 1 331 1 257 1 281 1 120 1 216 1 
185 1 315 1 361 1 57 1 320 1 340 3 341 1 342 1 143 1 192 3 87 1 32 1 322 1 144 1 88 2 369 1 230 1 68 1 328 1 375 1 179 2 135 1 97 1 180 1 331 1 350 1 257 1 281 1 120 1 216 1 
185 1 315 1 361 1 57 1 320 1 340 2 341 1 342 1 192 2 143 1 322 1 88 2 369 1 68 1 328 1 375 1 179 2 135 1 97 1 180 1 331 1 350 1 257 1 281 1 120 1 
185 2 2 1 141 1 361 1 320 1 58 1 340 1 342 1 192 1 87 1 32 1 322 1 144 1 115 1 38 1 269 1 39 1 331 2 255 1 257 2 281 2 120 1 354 1 
313 1 185 1 361 1 57 1 320 1 340 1 341 1 342 1 143 1 192 1 32 1 322 1 144 1 88 2 367 1 230 1 68 1 328 1 135 1 97 1 180 1 331 1 257 1 281 1 120 1 216 1 
329 1 
183 2 239 2 287 2 2 1 53 4 54 1 342 1 295 3 8 1 195 1 115 1 249 1 250 1 208 1 118 1 74 1 309 2 255 2 351 6 256 1 214 2 20 1 352 2 120 2 310 2 76 1 75 2 354 1 261 1 359 1 81 2 361 2 320 2 322 1 89 2 368 1 323 1 36 1 39 1 330 1 378 4 138 2 282 1 284 2 
53 2 54 1 378 2 74 1 309 1 351 2 295 1 20 1 76 1 368 1 266 1 
54 1 74 1 378 1 214 1 20 1 352 1 76 1 368 1 53 1 
239 1 53 2 54 1 378 2 74 1 309 1 351 2 214 1 295 1 20 1 352 1 76 1 368 1 266 1 
183 2 239 4 287 2 53 4 4 1 54 1 191 1 295 3 145 1 195 1 199 1 343 1 249 1 250 1 207 1 208 1 118 1 74 1 309 4 119 1 213 1 351 7 214 2 20 1 310 2 352 2 76 1 75 2 122 1 359 1 81 1 317 1 264 1 172 1 89 1 368 1 266 1 323 1 370 1 273 1 43 1 378 4 47 1 279 1 138 2 
183 2 239 2 287 2 359 1 53 3 81 1 54 1 295 2 8 1 195 1 89 1 368 1 323 2 249 1 250 1 208 1 118 1 74 1 378 3 309 2 213 1 214 2 351 4 138 2 20 1 352 2 310 2 76 1 75 2 284 2 
183 2 239 2 287 2 359 1 53 3 81 1 4 1 54 1 295 2 145 1 195 1 89 1 368 1 323 1 249 1 250 1 208 1 118 1 74 1 378 3 309 2 119 1 213 1 214 2 351 4 138 2 20 1 352 2 310 2 76 1 75 2 
183 2 239 2 287 2 359 1 53 3 81 1 4 1 54 1 295 2 145 1 195 1 89 1 368 1 323 1 249 1 250 1 208 1 118 1 74 1 378 3 309 2 119 1 213 1 214 2 351 4 138 2 20 1 352 2 310 2 76 1 75 2 
334 1 239 2 359 1 29 1 53 3 81 1 54 1 295 2 131 1 89 1 196 2 368 1 323 1 249 1 373 2 250 1 208 1 118 1 74 1 378 3 309 2 119 1 213 1 214 2 351 4 138 2 20 1 352 2 76 1 75 2 284 2 
183 2 239 3 287 2 359 1 53 3 81 1 4 1 54 1 295 2 145 1 195 1 89 1 368 1 323 1 199 1 249 1 250 1 208 1 118 1 74 1 378 3 119 1 309 3 213 1 138 2 214 3 351 5 20 1 310 2 352 3 75 2 76 1 
183 2 239 3 287 2 359 1 53 3 81 1 4 1 54 1 295 2 145 1 195 1 89 1 368 1 323 1 199 1 249 1 250 1 208 1 118 1 74 1 378 3 119 1 309 3 213 1 138 2 214 3 351 5 20 1 310 2 352 3 75 2 76 1 
239 2 359 1 53 3 81 1 54 1 295 2 131 1 8 1 89 1 368 1 196 2 323 1 249 1 373 2 250 1 208 1 118 1 74 1 378 3 309 2 213 1 214 2 351 4 138 2 20 1 352 2 76 1 75 2 284 2 
158 1 78 1 123 2 26 2 108 1 188 3 240 1 111 1 288 2 55 1 319 1 265 1 34 1 146 1 344 1 148 2 134 6 93 1 275 1 14 1 16 3 278 1 181 1 217 1 311 1 77 1 
158 11 140 1 78 2 106 1 123 2 26 1 108 2 188 8 189 3 162 2 288 1 111 4 56 1 319 1 86 1 265 2 174 1 344 2 305 1 148 4 175 2 176 1 69 1 134 13 252 1 274 1 93 11 275 2 16 5 276 3 73 1 217 2 
140 1 78 1 122 1 25 1 108 1 262 1 188 1 242 1 288 1 111 1 361 1 85 1 319 1 320 1 168 1 245 1 342 1 265 1 322 1 174 1 344 1 115 1 303 1 346 1 148 2 134 2 273 1 274 1 207 2 154 1 16 1 47 2 255 1 279 1 215 1 120 1 217 1 354 1 
140 1 335 2 108 3 188 10 240 1 242 2 288 2 111 7 55 1 56 4 245 2 342 2 298 2 146 1 344 3 303 1 115 2 346 2 148 6 203 2 207 3 14 1 16 8 73 2 255 1 215 2 120 3 121 2 217 3 311 1 354 2 77 1 158 7 122 1 78 3 123 8 258 1 26 4 162 2 361 3 319 3 320 3 168 1 265 3 169 2 322 2 174 1 175 2 134 18 273 1 95 1 274 1 93 7 328 1 275 3 233 1 47 3 279 1 181 1 
184 1 140 1 122 1 78 2 238 1 108 2 188 1 126 1 80 2 2 1 361 8 319 2 168 1 320 7 342 2 265 2 322 2 64 1 174 1 344 2 115 2 37 1 148 4 134 2 13 1 71 1 39 1 273 1 328 1 207 1 16 1 47 1 278 1 279 1 255 2 48 1 120 8 217 2 354 3 
158 1 122 1 78 1 123 1 26 1 108 1 188 1 162 1 27 1 111 1 319 1 265 1 344 1 148 2 175 1 134 2 273 1 93 1 205 1 274 1 275 1 207 1 16 1 43 1 73 1 47 1 279 1 217 1 
158 1 344 1 78 1 123 1 148 2 108 1 188 2 134 2 162 1 111 1 93 1 275 1 56 1 319 1 60 1 278 1 265 1 217 1 
158 1 344 1 302 1 78 1 123 1 26 1 148 2 108 1 134 1 111 1 93 1 16 1 319 1 73 1 278 1 265 1 217 1 
158 2 344 1 78 1 123 2 26 1 148 2 175 1 108 1 188 2 134 3 162 1 111 2 93 2 275 1 56 1 16 1 319 1 73 1 278 1 265 1 217 1 
158 1 344 1 78 1 123 1 148 2 108 1 188 2 134 2 162 1 111 1 93 1 275 1 56 1 319 1 60 1 48 1 265 1 217 1 
158 1 344 1 302 1 78 1 123 1 26 1 148 2 108 1 134 1 111 1 93 1 16 1 319 1 73 1 48 1 265 1 217 1 
158 2 344 1 78 1 123 2 26 1 148 2 175 1 108 1 188 2 134 3 162 1 111 2 93 2 275 1 56 1 16 1 319 1 73 1 48 1 265 1 217 1 
158 2 344 1 78 1 123 2 26 1 148 2 175 1 108 1 188 2 162 1 134 3 111 2 93 2 275 1 56 1 16 1 319 1 73 1 265 1 217 1 
140 1 78 1 188 1 108 1 242 1 288 1 361 1 319 1 320 1 245 1 342 1 169 1 265 1 322 1 174 1 344 1 115 1 346 1 148 2 134 2 207 1 16 1 47 1 255 1 215 1 120 1 217 1 354 1 
140 1 24 1 78 1 188 1 108 1 288 1 361 1 319 1 320 1 245 1 342 1 265 1 322 1 246 1 174 1 344 1 115 1 148 2 134 2 207 1 16 1 211 1 47 1 255 1 215 1 120 1 217 1 354 1 
158 2 344 1 78 1 123 2 26 1 148 2 175 1 108 1 188 2 134 3 162 1 111 2 93 2 274 1 275 1 56 1 16 1 319 1 73 1 265 1 217 1 
158 2 78 1 123 2 26 1 188 2 108 1 162 1 242 1 111 2 56 1 361 1 319 1 320 1 245 1 342 1 169 1 265 1 322 1 298 1 64 1 344 1 115 1 346 1 148 2 175 1 134 3 93 2 275 1 207 1 16 1 73 1 47 1 215 1 120 1 217 1 354 1 
158 1 122 1 78 1 108 1 188 2 162 1 111 1 319 1 265 1 344 1 148 2 175 1 134 3 273 1 205 1 274 1 93 1 275 1 207 1 16 1 43 1 73 1 46 1 47 1 279 1 217 1 
78 3 106 3 123 5 26 2 125 1 124 1 108 3 188 15 286 3 189 4 162 4 3 1 165 1 56 3 362 1 265 3 170 2 301 1 344 3 132 1 304 1 148 6 175 4 347 1 176 1 134 28 275 4 152 1 209 1 16 13 276 3 234 1 73 4 379 1 332 1 382 1 
78 4 106 3 123 6 26 3 125 1 124 1 108 4 188 16 286 3 189 4 162 4 3 1 165 1 56 3 362 1 265 4 170 2 301 1 344 4 132 2 304 1 148 8 175 4 347 1 176 1 134 28 275 4 152 1 209 1 16 12 276 3 234 1 73 3 379 1 332 1 382 1 
78 2 106 2 123 11 26 6 124 1 108 2 188 23 240 1 286 2 189 4 162 6 3 1 55 1 165 1 56 5 265 2 170 1 146 1 344 2 132 1 304 1 148 4 175 6 347 1 176 2 69 2 134 37 275 7 14 1 152 1 16 14 276 4 234 1 73 5 379 1 332 1 181 1 382 1 311 1 77 1 
78 2 106 1 123 6 26 3 125 1 124 1 108 2 188 9 286 2 189 2 162 3 165 1 56 3 130 1 265 2 170 1 301 2 344 2 148 4 175 3 176 1 134 16 275 3 209 1 16 7 276 1 73 3 332 1 382 1 
78 3 123 2 106 2 26 1 124 1 108 3 188 10 286 2 189 2 162 2 3 1 56 1 165 2 265 3 170 2 344 3 132 2 304 1 148 6 175 2 347 1 134 17 275 2 152 1 16 7 276 2 234 1 73 1 379 1 332 1 382 1 
333 1 42 1 166 1 112 1 0 1 163 1 353 1 251 1 1 1 23 1 
355 1 318 1 
376 1 166 1 112 1 294 1 28 1 353 1 251 1 1 1 23 1 
363 1 98 1 
35 1 129 1 160 1 
312 1 333 1 0 1 306 1 163 1 1 1 251 1 177 1 53 1 289 2 210 1 31 1 166 1 378 1 112 1 353 1 323 1 23 1 
312 1 333 1 0 1 306 1 163 1 1 1 251 1 177 1 53 1 289 2 210 1 31 1 166 1 378 1 112 1 353 1 323 1 23 1 
312 1 333 1 0 1 306 1 163 1 1 1 251 1 177 1 53 1 289 2 210 1 31 1 166 1 378 1 112 1 353 1 323 1 23 1 
363 1 160 1 98 1 
363 1 160 1 98 1 
35 1 129 1 
35 1 129 1 160 1 
51 1 84 1 
355 1 51 1 122 2 219 1 1 1 288 1 221 1 53 1 289 1 318 1 84 1 166 1 112 1 5 1 372 1 306 1 251 1 273 2 207 2 210 1 378 1 47 2 279 2 49 1 353 1 235 1 23 1 
140 1 78 1 105 1 238 1 108 1 188 1 80 2 82 1 361 2 319 1 320 2 342 1 265 1 322 1 63 1 174 1 344 1 115 1 270 1 148 2 134 2 71 1 274 1 207 2 16 1 47 2 279 2 120 2 217 1 354 1 157 1 
68 1 232 1 328 1 361 2 97 1 57 1 180 1 320 2 341 1 342 1 143 1 322 1 226 1 281 1 120 2 216 1 88 2 139 1 64 1 
68 1 232 1 307 1 328 1 361 1 97 1 57 1 180 1 320 1 341 1 342 1 143 1 322 1 281 1 120 1 216 1 88 2 
115 1 269 1 285 1 39 1 2 1 361 1 320 1 342 1 255 1 322 1 281 1 120 1 139 1 354 1 
68 1 232 1 328 1 361 1 97 1 57 1 180 1 320 1 341 1 342 1 143 1 322 1 226 1 281 1 120 1 216 1 88 2 139 1 
19 1 
213 1 187 1 34 1 89 1 81 1 323 1 360 1 
183 1 249 1 287 1 359 1 250 1 53 1 81 1 208 1 378 1 213 1 351 1 295 1 195 1 310 1 89 1 284 1 323 2 
183 6 237 1 187 1 190 1 336 2 53 5 142 2 245 3 342 3 293 2 295 3 64 1 115 3 65 2 147 2 345 2 10 1 249 4 203 2 204 2 250 4 349 6 208 4 253 1 73 2 255 1 213 2 351 5 120 3 354 10 218 1 261 1 162 2 359 4 360 1 81 7 361 3 30 2 320 3 322 4 171 1 227 6 89 8 323 8 175 2 40 2 275 2 178 3 378 5 380 2 282 2 50 2 284 12 
183 3 106 1 261 1 189 1 162 2 359 2 110 1 53 1 81 6 3 1 142 1 295 1 227 5 89 5 323 5 304 1 248 1 249 2 175 2 347 1 204 2 349 5 250 2 275 2 152 1 208 2 276 1 234 1 378 1 73 2 213 2 351 1 282 1 284 6 
122 1 259 1 240 1 359 1 53 1 81 2 191 1 142 1 264 1 145 1 172 1 89 2 370 1 343 1 146 1 249 1 204 2 250 1 273 1 275 2 207 1 14 1 208 1 43 1 378 1 47 1 279 1 181 1 
249 1 187 1 359 1 250 1 360 1 81 1 208 1 213 1 89 1 323 1 
183 5 175 2 203 1 162 2 204 2 349 5 275 2 81 3 142 1 73 2 89 5 227 5 284 10 323 5 
378 1 213 1 351 1 295 1 323 1 53 1 
261 2 190 2 359 2 2 1 81 2 53 3 361 4 320 4 342 1 322 1 295 2 171 1 89 2 36 1 115 1 249 2 70 1 272 1 250 2 39 1 208 1 330 1 378 3 255 2 351 4 182 1 120 4 282 2 354 1 
122 2 78 1 108 1 242 1 288 1 361 1 319 1 320 1 245 1 265 1 169 1 342 1 322 1 370 1 174 1 324 1 344 1 115 1 346 1 148 2 134 1 273 2 207 3 16 1 43 2 47 3 255 1 279 2 215 1 120 1 217 1 354 1 
183 2 249 1 261 1 359 1 349 2 250 1 81 1 208 1 55 1 213 2 282 1 227 2 89 2 284 4 323 4 
112 1 366 1 353 1 
112 1 366 1 353 1 
333 1 51 1 112 1 321 1 353 1 
112 1 366 1 353 1 
112 1 67 1 353 1 
112 1 67 1 353 1 
112 1 67 1 353 1 
112 1 353 1 
166 1 251 1 
78 2 106 1 123 2 26 1 108 2 188 7 189 1 162 2 3 1 56 1 265 2 344 2 132 1 304 1 148 4 175 2 347 1 134 10 275 2 152 1 276 1 16 3 234 1 73 1 332 1 
78 3 106 1 123 3 26 1 108 3 188 9 189 2 162 3 3 1 56 2 265 3 229 1 344 3 132 1 304 1 148 6 175 3 347 1 176 1 134 13 275 3 152 1 16 4 276 1 234 1 73 1 332 1 
78 3 106 1 123 4 26 3 108 3 188 9 240 1 189 1 162 2 3 1 55 1 56 1 265 3 229 1 146 1 344 3 132 1 304 1 148 6 175 2 347 1 134 17 275 3 14 1 152 1 276 1 16 8 234 1 73 2 332 1 181 1 311 1 77 1 
78 3 106 1 123 5 26 3 108 3 188 10 240 1 189 1 162 2 3 1 55 1 56 2 265 3 229 1 146 1 344 3 132 1 304 1 148 6 175 2 347 1 134 16 275 3 14 1 152 1 276 1 16 6 234 1 73 1 332 1 181 1 311 1 77 1 
78 2 106 1 123 2 26 1 108 2 188 7 189 1 162 2 3 1 56 1 265 2 344 2 132 1 304 1 148 4 175 2 347 1 134 10 275 2 152 1 276 1 16 3 234 1 73 1 332 1 
78 1 106 1 123 2 26 1 108 1 188 6 189 1 162 2 3 1 56 1 265 1 344 1 304 1 148 2 175 2 347 1 134 10 275 2 152 1 276 1 16 4 234 1 73 2 332 1 
78 4 106 1 123 5 26 3 108 4 188 10 240 1 189 1 162 2 3 1 55 1 56 2 265 4 229 1 146 1 344 4 132 2 304 1 148 8 175 2 347 1 134 17 275 3 14 1 152 1 16 7 276 1 234 1 73 1 332 1 181 1 311 1 77 1 
78 4 106 1 123 6 26 3 108 4 188 9 189 1 162 3 3 1 56 3 265 4 344 4 132 2 304 1 148 8 175 3 347 1 134 14 275 3 152 1 209 1 16 5 276 1 234 1 73 2 332 1 
146 1 123 6 26 3 188 3 240 3 134 7 275 1 14 3 56 3 16 4 181 1 311 1 77 2 
78 4 106 1 123 4 26 3 108 4 188 10 240 1 189 1 162 2 3 1 55 1 56 1 265 4 146 1 344 4 132 2 304 1 148 8 175 2 347 1 134 17 275 3 14 1 152 1 209 1 16 7 276 1 234 1 73 1 332 1 181 1 311 1 77 1 
146 1 344 2 78 2 132 1 123 3 26 2 148 4 188 4 108 2 240 1 134 8 275 1 14 1 55 1 56 1 16 4 265 2 181 1 311 1 77 1 
146 1 14 1 55 1 16 3 123 2 26 2 188 3 240 1 181 1 134 6 34 1 311 1 275 1 77 1 
344 1 78 1 123 2 26 1 148 2 175 1 108 1 188 2 162 1 134 3 275 1 56 1 16 1 73 1 265 1 229 1 
106 1 123 2 26 1 175 1 188 3 189 2 176 1 134 6 162 1 275 1 56 1 16 3 276 1 73 1 
78 2 123 9 26 5 188 11 108 2 240 2 189 2 162 2 55 1 56 4 167 1 265 2 146 1 344 2 132 2 305 1 175 2 148 4 176 1 134 21 69 1 275 3 14 2 276 2 16 10 73 2 181 1 311 1 77 1 
16 1 189 1 134 1 
276 1 188 1 134 1 
344 1 78 1 123 3 26 2 148 2 175 1 108 1 188 3 203 1 134 5 162 1 275 1 56 1 16 2 73 1 265 1 229 1 
78 1 106 1 123 2 26 1 108 1 188 6 189 1 162 2 3 1 56 1 265 1 344 1 304 1 148 2 175 2 347 1 134 10 275 2 152 1 276 1 16 4 234 1 73 2 332 1 
146 1 123 2 26 1 188 3 240 1 134 6 275 1 14 1 56 1 16 3 181 1 
344 1 132 1 78 1 123 2 26 1 148 2 188 1 108 1 240 1 134 3 14 1 56 1 16 2 167 1 265 1 311 1 77 1 
146 1 344 1 78 1 123 5 26 3 148 2 259 1 108 1 188 5 240 2 134 10 275 2 14 2 56 2 16 5 265 1 332 1 181 2 
344 1 78 1 123 1 148 2 108 1 188 2 162 1 134 2 275 1 56 1 265 1 332 1 
344 1 78 1 123 2 26 1 148 2 175 1 108 1 188 2 162 1 134 3 275 1 56 1 16 1 73 1 265 1 332 1 
344 3 132 1 78 3 123 2 26 1 148 6 108 3 188 1 240 1 134 3 14 1 209 1 56 1 16 2 167 1 265 3 332 1 
103 1 78 5 106 1 123 12 26 7 108 5 188 16 240 3 189 4 162 3 244 1 55 1 56 5 167 1 265 5 229 1 90 1 146 2 344 5 132 2 148 10 175 3 176 1 134 31 275 5 14 3 209 1 16 15 276 3 73 3 332 1 181 2 311 1 77 1 
207 1 247 1 47 1 279 1 12 1 7 1 288 1 
247 1 325 1 12 1 288 1 207 1 136 1 15 1 45 1 47 1 279 1 156 1 7 1 
361 1 115 1 320 1 342 1 255 1 322 1 39 1 34 1 120 1 354 1 2 1 
115 1 122 1 242 1 288 1 273 1 207 2 361 1 168 1 320 1 245 1 47 2 279 1 255 1 342 1 322 1 215 1 120 1 354 1 
122 1 190 1 127 1 242 1 288 1 361 1 320 1 168 1 245 2 342 1 322 1 172 1 115 2 65 1 345 1 273 2 374 1 207 2 47 2 279 2 215 1 120 1 354 3 
122 1 190 1 127 1 288 1 361 2 320 2 168 1 245 2 342 1 322 1 172 1 231 1 115 2 65 1 345 1 273 2 374 1 207 2 211 1 47 2 279 2 215 1 120 2 354 3 
231 1 65 1 115 1 345 1 147 1 190 1 52 1 336 1 53 2 178 1 361 3 224 1 378 2 320 3 245 1 255 1 342 1 213 1 351 1 322 1 120 3 354 4 323 1 
231 1 65 1 115 1 345 1 147 1 190 1 336 1 53 2 178 1 361 3 378 2 320 3 245 1 255 1 342 1 213 1 293 1 351 1 322 1 120 3 354 4 323 1 
361 1 37 1 320 1 342 1 322 1 120 1 
173 1 184 1 115 2 37 1 10 1 126 1 13 1 71 1 243 1 80 1 328 1 361 7 117 1 320 6 245 1 255 2 342 2 322 3 120 7 64 1 354 3 
335 1 108 2 188 3 240 1 242 1 111 1 288 2 55 1 245 1 342 1 298 1 64 1 146 1 344 2 115 1 346 1 148 4 207 2 14 1 16 3 215 1 120 1 217 2 354 1 311 1 77 1 158 1 122 1 78 2 123 2 26 2 361 1 319 2 320 1 168 1 169 1 265 2 322 1 270 1 134 6 273 1 274 1 93 1 275 1 47 2 279 1 181 1 
187 1 359 2 336 1 221 1 81 1 360 1 53 3 361 1 30 1 320 1 293 1 295 1 171 1 89 1 323 1 147 1 249 2 250 2 40 1 178 1 208 2 378 3 255 1 380 1 213 1 351 2 120 1 354 2 
115 1 147 1 37 1 237 1 10 1 361 2 320 2 245 1 342 1 322 2 120 2 64 1 354 2 
231 1 115 1 39 1 2 1 361 4 320 4 255 1 342 1 194 1 322 1 120 4 64 1 354 1 
173 1 115 1 92 1 190 1 243 1 361 2 233 1 320 2 277 1 245 1 342 1 322 2 120 2 354 1 
361 1 97 1 180 1 320 1 342 1 255 1 68 1 322 1 120 1 88 1 
361 2 115 1 320 2 342 1 322 1 63 1 71 1 120 2 354 1 64 1 328 1 
115 2 190 1 126 1 13 1 39 1 71 1 2 1 361 5 320 4 255 1 342 2 194 1 322 2 120 5 64 1 354 3 
104 1 115 2 190 1 13 1 39 1 71 1 2 1 361 5 320 4 255 1 342 2 194 1 322 2 120 5 64 1 354 3 
115 1 122 1 288 1 273 1 207 2 361 1 168 1 320 1 211 1 245 1 47 2 279 1 255 1 342 1 322 1 215 1 120 1 354 1 
173 1 115 1 10 1 190 1 243 1 361 1 117 1 320 1 245 1 342 1 322 2 120 1 354 1 
271 1 288 1 101 1 197 1 128 1 
201 1 161 1 127 1 271 2 336 1 288 1 374 1 221 1 206 1 53 2 128 2 337 1 378 2 155 1 213 1 172 1 101 2 197 1 323 1 
207 1 82 1 105 1 47 1 279 1 101 1 197 1 157 1 128 1 
337 1 201 1 197 1 
375 1 315 1 34 1 369 1 
375 1 340 1 192 1 32 1 315 1 144 1 369 1 
340 1 331 1 257 1 
375 1 151 1 313 1 44 1 340 3 192 3 32 1 315 1 109 2 144 1 300 1 369 1 
375 1 179 1 340 2 225 1 192 2 32 1 315 1 144 1 369 1 
313 1 68 1 94 1 375 1 338 1 340 1 192 1 143 1 32 1 144 1 88 1 
375 1 313 1 340 1 192 1 32 1 315 1 144 1 
313 1 340 1 192 1 32 1 315 2 144 1 369 1 
313 1 315 1 375 1 340 2 192 2 32 2 99 1 144 2 283 1 228 1 
313 1 200 1 326 1 315 1 94 1 179 2 375 2 137 1 340 3 192 3 32 1 144 1 369 1 
313 1 315 1 68 1 79 1 375 1 179 1 57 1 180 1 340 2 192 2 143 1 32 1 144 1 88 2 369 1 
375 2 179 2 313 1 137 1 61 1 340 4 225 1 192 4 32 2 315 1 144 2 94 1 369 1 
375 1 313 1 340 1 192 1 32 1 315 1 144 1 369 1 
109 1 315 2 358 1 94 1 179 2 375 3 151 1 44 1 137 1 340 4 192 4 32 1 144 1 369 2 
313 1 202 1 315 1 375 1 179 1 96 1 340 2 192 2 32 1 144 1 114 1 369 1 
375 1 151 2 313 1 44 1 340 3 357 1 192 3 32 1 315 1 109 2 144 1 369 1 
375 2 290 1 364 2 100 1 
313 1 18 1 340 1 192 1 32 1 144 1 
375 1 179 1 313 1 200 1 340 2 192 2 32 1 315 1 144 1 369 1 
268 1 
375 1 313 1 340 1 192 1 32 1 315 1 144 1 369 1 
313 1 200 1 109 1 315 1 179 1 375 1 340 3 192 3 32 1 144 1 369 1 
375 1 137 1 358 1 94 1 
375 1 315 1 

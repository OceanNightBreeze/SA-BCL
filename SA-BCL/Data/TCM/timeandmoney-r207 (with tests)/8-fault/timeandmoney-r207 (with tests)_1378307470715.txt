#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 2 (4,158,239) (4,158,239) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 2 (4,158,239) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (223,316) (75,305,308) (4,158,239) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (35,343) (87,281) (87,281) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 2 (4,158,239) (4,158,239) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 284 194 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 344 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 344 16 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 102 145 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 212 102 145 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 212 102 244 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 102 145 110 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 102 145 110 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 2 (75,305,308) (75,305,308) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 2 (75,305,308) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (35,343) (35,343) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException 2 (75,305,308) (75,305,308) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 284 194 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4918 | > -> <
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z | OPERATOR | 1616 | != -> ==
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 568 | = null
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 4578 | return null
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 642 | stmt -> ;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 5921 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2944 | stmt -> ;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5678 | return null
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
332 1 99 2 123 1 138 9 77 3 139 5 306 1 53 1 5 4 261 1 335 2 210 2 82 9 235 1 236 2 83 6 84 2 11 2 12 1 320 1 346 1 300 1 171 2 154 1 277 1 173 1 353 1 116 1 
332 1 99 2 123 1 138 9 77 3 139 5 306 1 53 1 5 4 261 1 210 2 335 2 82 9 235 1 236 2 83 6 84 2 11 2 12 1 320 1 346 1 300 1 171 2 154 1 277 1 173 1 353 1 116 1 
332 1 99 2 123 1 138 10 77 4 139 6 306 1 53 1 5 5 261 1 210 2 335 2 82 10 235 1 236 2 83 7 84 2 11 2 12 1 320 1 346 1 300 1 171 2 154 1 277 1 173 1 353 1 116 1 
332 1 99 2 123 1 138 7 77 2 139 4 306 1 5 3 261 1 210 2 335 1 82 7 235 1 236 2 83 4 84 2 11 2 12 1 320 1 346 1 300 1 171 2 154 1 277 1 173 1 353 1 116 1 
99 1 123 1 138 4 77 1 306 1 139 3 53 1 346 1 5 2 210 1 335 2 171 1 82 4 235 1 236 1 277 1 83 3 84 1 
11 1 99 1 62 1 138 2 139 1 346 1 210 1 79 1 248 1 171 1 82 2 235 1 236 1 277 1 173 1 116 1 
11 1 138 3 77 1 139 2 346 1 5 1 210 2 300 1 171 2 82 3 235 1 277 1 83 1 
332 1 257 1 99 1 123 1 138 9 77 3 139 5 306 1 5 4 53 1 210 2 335 2 82 9 235 1 236 1 83 7 84 1 11 1 89 1 346 1 300 1 171 2 154 1 277 1 
332 1 257 1 99 1 123 1 138 9 77 3 139 5 306 1 5 4 53 1 210 2 335 2 82 9 235 1 236 1 83 7 84 1 11 1 89 1 346 1 300 1 171 2 154 1 277 1 
111 1 252 1 342 1 
252 1 293 2 318 1 
348 2 256 2 27 2 107 2 33 1 131 2 57 1 209 2 
358 1 119 1 256 2 25 1 27 2 74 1 229 1 50 1 363 2 364 1 209 3 186 1 162 1 33 1 57 1 164 1 339 1 238 2 266 1 240 1 107 2 88 1 37 2 131 2 373 2 319 1 40 1 64 1 218 1 325 1 348 3 135 1 47 1 275 1 278 1 174 2 356 1 
78 1 348 1 256 1 27 1 107 1 375 1 33 1 131 1 195 1 209 1 
252 1 27 1 96 1 226 1 61 1 1 1 334 1 15 1 3 1 209 1 111 1 348 1 327 1 195 1 
252 1 256 1 27 1 96 2 107 1 226 1 61 2 1 1 131 1 15 1 209 1 111 1 348 1 327 1 195 1 
120 1 96 1 61 1 361 1 345 1 
252 1 120 1 256 1 27 1 96 1 209 1 126 1 78 1 307 1 33 1 195 1 107 1 61 1 317 1 131 1 345 1 111 1 348 1 375 1 
120 1 96 1 61 1 
256 1 27 1 96 1 107 1 61 1 131 1 345 1 209 1 78 1 348 1 307 1 375 1 33 1 195 1 
252 1 
252 1 120 1 256 1 27 1 96 1 209 1 126 1 6 1 78 1 307 1 33 1 195 1 107 1 61 1 131 1 345 1 111 1 348 1 375 1 
252 2 256 1 120 2 27 1 70 5 96 4 0 1 360 1 282 1 209 1 161 1 78 1 126 1 233 1 307 1 264 2 33 1 195 1 85 2 86 1 60 2 107 1 61 4 150 1 38 1 131 1 345 2 152 2 42 1 111 2 348 1 90 1 113 2 375 1 328 4 114 1 354 1 331 2 
342 1 57 1 
68 1 256 1 27 2 107 1 131 1 209 2 348 2 265 1 57 2 
17 1 81 1 172 1 
25 1 266 1 240 1 74 1 37 1 229 1 50 1 363 1 40 1 209 1 348 1 57 1 164 1 174 1 355 1 339 1 
256 1 25 1 266 1 27 1 240 1 74 1 227 1 229 1 37 1 50 1 131 1 363 1 40 1 209 2 348 2 81 1 351 1 164 1 174 1 339 1 
256 4 27 5 107 1 165 1 227 1 334 1 131 4 209 5 169 1 348 5 310 1 351 2 265 1 57 1 
348 2 256 2 27 2 299 1 375 1 131 2 195 1 209 2 
348 3 256 3 27 3 107 1 351 1 131 3 57 1 209 3 
348 1 256 1 27 1 375 1 131 1 195 1 209 1 
68 1 348 1 256 1 27 1 107 1 265 1 131 1 195 1 209 1 
358 1 256 3 25 1 27 3 96 1 74 1 226 1 227 1 1 1 229 1 50 1 363 1 364 1 209 4 186 1 265 1 33 1 57 1 164 1 195 1 339 1 238 1 266 1 240 1 107 2 61 1 268 1 37 1 131 3 373 2 15 1 40 1 64 1 133 1 325 1 348 4 135 1 47 1 327 1 275 1 351 1 278 1 174 1 356 1 
169 1 348 2 256 1 27 2 351 1 334 1 131 1 57 1 209 2 
252 1 156 1 256 3 27 3 96 1 107 1 61 1 226 1 268 1 227 1 1 1 131 3 15 1 209 3 348 3 327 1 265 1 351 2 195 1 
256 2 27 2 107 1 131 2 209 2 17 1 348 2 81 1 351 1 265 1 
25 1 266 1 240 1 74 1 37 1 229 1 50 1 363 1 40 1 209 1 348 1 57 1 164 1 174 1 339 1 
25 1 254 1 37 1 363 1 365 1 57 1 174 1 195 1 
358 2 119 2 255 1 69 1 180 1 124 1 364 1 186 1 285 1 81 2 188 1 85 1 238 4 373 2 64 1 152 1 200 1 325 1 17 2 350 1 47 1 172 2 301 1 278 1 
348 1 256 1 27 1 299 1 1 1 131 1 195 1 209 1 
324 1 176 1 
324 1 176 1 
370 1 273 1 
370 1 273 1 
370 1 273 1 
292 1 324 1 176 1 
160 1 324 1 176 1 
370 1 340 1 324 2 273 1 20 1 176 2 
292 1 324 1 176 1 
292 1 324 1 176 1 
324 1 108 1 176 1 
324 1 108 1 176 1 
324 1 108 1 176 1 
256 2 27 2 96 1 225 1 98 1 259 1 333 1 140 1 209 2 160 1 191 1 338 1 57 1 291 1 61 1 14 1 131 2 199 1 347 1 324 1 348 2 155 1 302 1 176 1 
252 1 340 1 96 2 242 1 61 2 259 3 14 2 182 1 333 2 65 1 324 2 103 1 48 1 234 2 163 1 191 2 338 1 176 2 291 2 
99 1 236 1 84 1 
248 1 99 1 236 1 
248 1 170 1 99 3 223 1 230 1 84 2 
248 1 170 1 316 1 99 2 230 1 84 1 
248 1 170 2 99 2 230 1 84 1 
252 1 256 1 206 1 120 1 70 1 27 1 96 3 280 1 282 1 209 1 126 1 78 1 307 1 264 1 33 1 106 1 195 1 34 1 85 1 147 1 60 1 107 1 61 3 131 1 345 3 152 1 322 1 111 1 348 1 297 1 350 1 328 2 375 1 301 1 276 1 331 1 
252 1 120 2 256 1 70 1 359 1 27 1 96 3 280 1 361 1 282 1 209 1 126 1 78 1 307 1 264 1 33 1 106 1 195 1 85 1 147 1 60 1 107 1 61 3 131 1 345 3 167 1 152 1 66 1 111 1 348 1 297 1 350 1 328 2 375 1 301 1 276 1 331 1 
252 2 256 1 206 1 27 1 70 2 96 3 280 2 360 1 304 1 209 1 78 1 307 1 264 1 33 1 106 1 195 1 34 1 147 1 85 1 293 2 60 1 107 1 61 3 131 1 318 2 345 2 347 1 152 1 111 1 322 1 348 1 113 1 350 1 375 1 328 3 301 1 276 2 331 1 
252 3 206 1 70 4 96 4 280 4 360 1 304 1 289 1 264 1 106 1 213 1 34 1 147 2 85 2 293 4 60 1 61 4 318 4 345 3 347 2 152 2 111 1 322 2 113 2 67 1 350 2 328 5 301 2 276 4 354 1 331 1 
266 1 342 1 198 1 
266 1 55 1 
7 1 
266 1 240 1 74 1 
266 1 21 1 
266 1 74 1 
266 3 240 1 74 1 109 1 36 1 198 2 
85 1 178 1 358 2 313 1 119 4 69 2 238 6 243 2 150 1 166 1 159 1 152 1 42 1 202 1 285 3 90 1 272 1 
85 1 178 1 313 1 358 3 119 4 69 2 238 7 243 2 150 1 166 1 159 1 152 1 42 1 202 1 285 3 90 1 272 1 
85 1 178 1 358 2 313 1 119 4 69 2 238 6 243 2 150 1 166 1 159 1 152 1 42 1 202 1 285 3 90 1 272 1 290 1 
178 5 253 1 358 19 69 8 119 19 121 3 137 1 362 1 159 2 364 1 233 1 285 13 80 3 263 1 147 2 85 5 313 1 238 38 129 1 243 3 150 3 166 1 373 2 64 1 152 5 42 3 325 1 202 2 90 2 272 1 350 2 352 1 301 2 278 1 
178 1 358 5 69 4 119 5 73 1 362 1 159 1 364 2 285 5 85 1 313 1 238 10 243 2 150 1 373 4 166 1 64 2 152 1 151 1 42 1 325 2 202 1 90 1 278 2 
11 1 37 1 158 1 138 1 363 1 2 1 232 1 4 1 346 1 321 1 32 1 210 1 286 1 171 1 82 1 174 1 
312 1 11 1 37 1 138 2 363 1 2 1 232 1 4 1 321 1 270 1 32 1 210 1 204 1 171 1 82 2 83 1 174 1 
312 1 239 1 11 1 99 1 229 1 37 1 138 1 363 1 232 1 168 1 321 1 32 1 308 1 248 1 204 1 223 1 82 1 83 1 174 1 339 1 
25 1 87 1 11 2 281 1 314 1 343 1 37 1 138 1 363 1 232 2 321 2 270 1 32 2 210 1 171 1 82 1 174 1 
312 1 11 1 37 1 158 1 138 1 363 1 2 1 232 1 4 1 346 1 321 1 32 1 210 1 171 1 82 1 174 1 
112 1 
120 2 25 1 70 1 96 1 60 1 61 1 304 1 37 1 282 1 363 1 126 1 284 1 328 1 264 1 194 1 174 1 23 1 331 1 
120 2 27 1 72 1 96 2 226 1 1 1 334 1 3 1 209 1 126 1 6 1 195 1 341 1 61 2 15 1 344 1 217 1 348 1 249 1 327 1 91 1 250 2 
252 1 120 1 27 1 72 1 96 2 226 1 1 1 334 1 3 1 209 1 6 1 126 1 193 1 195 1 341 1 61 2 15 1 217 1 111 1 348 1 249 1 327 1 91 1 250 3 
120 2 27 1 72 1 96 2 226 1 1 1 334 1 3 1 209 1 126 1 6 1 193 1 195 1 341 1 61 2 15 1 344 1 217 1 16 1 348 1 249 1 327 1 91 1 250 3 
126 1 6 1 120 1 96 1 61 1 
120 2 70 1 27 1 72 1 96 2 226 1 1 1 282 1 334 1 3 1 183 1 209 1 126 1 100 1 142 1 287 2 264 1 193 1 212 1 195 1 293 1 60 1 341 1 61 2 344 1 318 1 15 1 16 1 217 1 221 2 348 1 45 2 249 1 328 1 327 1 91 1 250 3 331 1 
120 2 70 1 27 1 72 1 96 2 226 1 1 1 334 1 282 1 183 1 3 1 209 1 126 1 100 1 102 1 287 2 264 1 193 1 212 1 195 1 9 1 145 1 60 1 341 1 61 2 344 1 318 1 15 1 16 1 217 1 221 2 348 1 45 2 249 1 328 1 327 1 91 1 250 3 331 1 
120 2 70 1 27 1 72 1 96 2 226 1 1 1 334 1 282 1 183 1 3 1 209 1 126 1 100 1 102 1 287 1 264 1 212 1 195 1 9 1 145 1 60 1 341 1 61 2 344 1 318 1 15 1 16 1 217 1 221 1 348 1 45 1 249 1 328 1 327 1 91 1 250 2 331 1 
120 2 70 1 27 1 72 1 96 2 226 1 29 1 1 1 334 1 282 1 3 1 31 1 209 1 126 1 102 1 287 1 336 1 264 1 212 1 195 1 293 1 60 1 341 1 315 1 61 2 244 1 344 1 15 1 16 1 217 1 221 1 348 1 249 1 328 1 327 1 91 1 250 2 331 1 
120 3 70 1 27 1 72 1 96 2 226 1 1 1 282 1 334 1 183 1 3 1 209 1 126 1 100 1 102 1 287 2 264 1 193 2 212 1 195 1 9 1 145 1 60 1 341 1 110 1 61 2 318 1 15 1 344 2 217 1 16 2 221 2 348 1 45 2 249 1 328 1 327 1 91 1 250 4 331 1 
120 3 70 1 27 1 72 1 96 2 226 1 1 1 282 1 334 1 183 1 3 1 209 1 126 1 100 1 102 1 287 2 264 1 193 2 212 1 195 1 9 1 145 1 60 1 341 1 110 1 61 2 318 1 15 1 344 2 217 1 16 2 221 2 348 1 45 2 249 1 328 1 327 1 91 1 250 4 331 1 
120 2 70 1 27 1 72 1 96 2 226 1 29 1 1 1 282 1 334 1 3 1 209 1 31 1 126 1 142 1 287 2 336 2 264 1 193 1 212 1 195 1 293 1 60 1 341 1 61 2 344 1 15 1 16 1 217 1 221 2 348 1 249 1 328 1 327 1 91 1 250 3 331 1 
358 2 255 1 69 1 119 3 364 1 186 1 285 1 81 1 57 2 85 1 313 1 238 5 243 1 342 1 150 1 166 1 373 2 64 1 152 1 42 1 17 1 325 1 90 1 47 1 172 1 278 1 
178 1 358 6 69 1 119 8 207 1 121 3 28 1 364 2 285 2 186 2 80 3 81 11 263 1 57 1 10 1 147 2 85 2 238 14 88 1 13 1 373 4 64 2 152 1 295 1 325 2 17 4 350 1 47 1 172 11 275 1 274 1 301 2 278 2 
358 1 25 1 256 1 119 1 27 1 207 1 74 1 227 1 229 1 50 1 363 1 364 1 209 2 186 1 190 1 57 1 164 1 339 1 266 1 238 2 240 1 267 1 88 1 37 1 131 1 373 2 40 1 64 1 17 1 348 2 325 1 46 1 47 1 351 1 275 1 174 1 278 1 355 1 
136 1 178 4 227 1 229 2 50 2 231 2 186 3 285 7 54 2 57 2 339 2 147 2 238 19 240 2 243 1 150 1 64 3 152 3 348 3 17 7 350 2 351 1 301 2 356 2 358 9 69 3 25 1 256 1 119 10 27 1 207 1 74 2 363 3 364 3 209 3 81 7 368 1 164 2 312 1 85 3 313 1 372 2 266 2 88 1 37 3 131 1 166 1 373 6 40 2 42 1 323 1 325 3 90 1 47 3 172 7 275 1 174 3 278 3 224 2 
358 1 255 1 256 1 25 2 119 1 27 1 74 2 157 1 229 2 51 1 363 7 52 1 364 2 209 1 186 2 286 1 339 2 312 1 266 3 238 2 88 1 37 8 216 1 131 1 373 4 319 2 39 1 245 1 64 2 348 1 325 2 203 1 47 2 351 1 275 1 174 8 278 2 115 1 24 1 
358 2 69 1 256 1 119 1 71 1 27 1 207 1 364 1 209 1 285 1 186 1 81 1 265 1 147 1 85 1 238 3 107 1 131 1 373 2 64 1 152 1 17 1 325 1 348 1 350 1 47 1 172 1 301 1 278 1 
178 1 85 1 255 1 119 2 238 2 180 1 373 2 364 1 64 1 17 1 325 1 285 1 186 1 81 1 47 1 172 1 301 1 278 1 
358 2 69 1 255 1 238 2 124 1 373 2 364 1 64 1 152 1 17 1 325 1 285 1 186 1 81 1 350 1 47 1 172 1 278 1 
178 1 147 1 85 1 358 2 69 1 255 1 119 2 238 4 373 2 364 1 64 1 152 1 17 2 325 1 285 2 186 1 350 1 81 2 47 1 172 2 301 1 278 1 
178 1 85 1 119 2 238 2 180 1 373 2 39 1 364 1 64 1 17 1 325 1 285 1 186 1 81 1 47 1 172 1 301 1 278 1 
358 2 69 1 238 2 124 1 373 2 39 1 364 1 64 1 152 1 17 1 325 1 285 1 186 1 81 1 350 1 47 1 172 1 278 1 
178 1 147 1 85 1 358 2 69 1 119 2 238 4 373 2 39 1 364 1 64 1 152 1 17 2 325 1 285 2 186 1 350 1 81 2 47 1 172 2 301 1 278 1 
178 1 147 1 85 1 358 2 69 1 119 2 238 4 373 2 364 1 64 1 152 1 17 2 325 1 285 2 186 1 350 1 81 2 47 1 172 2 301 1 278 1 
358 1 119 1 25 1 74 1 229 1 50 1 363 1 364 1 209 1 186 1 57 1 164 1 339 1 238 2 266 1 240 1 88 1 37 1 373 2 40 1 64 1 348 1 325 1 47 1 275 1 174 1 278 1 356 1 
358 1 254 1 25 1 238 1 37 1 363 1 373 2 64 1 364 1 219 1 325 1 365 1 186 1 47 1 275 1 57 1 195 1 174 1 278 1 
178 1 147 1 85 1 358 2 69 1 119 2 238 4 207 1 373 2 364 1 64 1 152 1 17 2 325 1 285 2 186 1 350 1 81 2 47 1 172 2 301 1 278 1 
178 1 358 2 69 1 119 2 74 1 229 1 50 1 363 1 364 1 209 1 285 2 186 1 286 1 81 2 164 1 339 1 85 1 147 1 238 4 266 1 240 1 37 1 373 2 40 1 64 1 152 1 17 2 348 1 325 1 350 1 47 1 172 2 301 1 224 1 174 1 278 1 356 1 
178 1 358 1 256 1 119 2 27 1 207 1 364 1 209 1 285 1 186 1 81 1 265 1 147 1 85 1 238 3 107 1 131 1 373 2 64 1 152 1 325 1 348 1 17 1 350 1 47 1 172 1 301 1 92 1 278 1 
178 1 358 7 69 1 119 6 121 1 122 1 364 2 285 2 262 1 80 2 263 1 146 1 371 1 147 2 85 2 238 13 13 1 196 1 269 1 373 4 64 2 151 1 152 2 134 1 325 2 44 1 350 2 301 2 278 2 
178 2 358 12 69 2 119 14 121 2 362 2 283 1 364 3 141 1 285 4 262 4 80 2 263 2 146 2 371 2 147 3 85 3 238 26 241 1 196 1 269 1 373 6 63 1 64 3 152 2 151 1 153 1 134 1 201 1 325 3 350 2 301 3 278 3 205 1 
178 4 358 21 69 5 119 20 121 3 122 1 362 1 283 1 364 3 141 1 285 9 262 4 80 4 263 3 369 1 146 1 371 2 147 4 85 5 313 1 238 41 241 1 243 1 13 1 196 1 150 1 269 1 166 1 63 1 373 6 64 3 153 1 151 1 152 5 42 1 134 1 201 1 325 3 90 1 350 4 301 4 278 3 205 1 
178 3 358 19 69 5 119 20 121 3 122 1 362 2 283 1 364 4 141 1 285 8 262 4 80 4 263 3 369 1 146 1 371 2 147 4 85 5 313 1 238 39 241 1 243 1 13 1 196 1 150 1 269 1 166 1 63 1 373 8 64 4 153 1 151 1 152 4 42 1 134 1 201 1 325 4 90 1 350 3 301 4 278 4 205 1 
178 7 358 26 69 8 119 27 121 4 362 1 283 1 364 2 141 1 285 15 262 4 80 4 263 2 146 1 371 1 147 7 85 8 313 1 238 53 241 1 243 1 13 2 196 1 150 1 269 1 166 1 63 1 373 4 64 2 153 1 151 1 152 8 42 1 295 2 134 1 201 1 325 2 90 1 350 7 301 7 278 2 205 1 
340 1 324 1 242 1 14 1 163 1 191 1 333 1 374 1 291 1 176 1 
160 1 199 1 
59 1 296 1 324 1 330 1 14 1 191 1 333 1 291 1 176 1 
292 1 49 1 
108 1 20 1 144 1 
252 1 340 1 96 1 242 1 61 1 259 2 14 1 333 1 65 1 324 1 103 1 48 1 234 1 163 1 191 1 338 1 176 1 291 1 
252 1 340 1 96 1 242 1 61 1 259 2 14 1 333 1 65 1 324 1 103 1 48 1 234 1 163 1 191 1 338 1 176 1 291 1 
252 1 340 1 96 1 242 1 61 1 259 2 14 1 333 1 65 1 324 1 103 1 48 1 234 1 163 1 191 1 338 1 176 1 291 1 
292 1 49 1 20 1 
292 1 49 1 20 1 
108 1 144 1 
108 1 20 1 144 1 
98 1 140 1 
256 2 95 1 27 2 96 1 225 1 98 1 259 1 333 1 140 1 209 2 160 1 234 1 191 1 57 1 291 1 61 1 14 1 131 2 345 1 65 1 199 1 347 1 348 2 324 1 155 1 302 1 176 1 
358 1 119 1 27 2 207 1 74 1 229 1 363 2 76 1 364 1 209 2 186 1 8 1 339 1 266 1 238 2 88 1 37 2 373 2 319 2 245 1 64 1 132 1 348 2 271 1 325 1 203 1 47 1 275 1 251 1 174 2 278 1 
41 1 312 1 286 1 75 1 37 2 305 1 363 2 2 1 232 1 174 2 
312 1 349 1 37 1 305 1 363 1 2 1 232 1 174 1 
41 1 25 1 35 1 343 1 37 1 363 1 232 1 174 1 
41 1 312 1 75 1 37 1 305 1 363 1 2 1 232 1 174 1 
18 1 
111 1 86 1 252 1 70 1 328 1 342 1 114 1 
252 1 120 1 293 1 70 1 60 1 282 1 318 1 183 1 111 1 126 1 100 1 45 1 328 1 264 1 331 1 
96 1 280 3 229 1 282 2 231 1 187 1 189 1 104 1 55 2 339 2 147 1 293 3 240 1 60 2 109 1 61 1 197 1 198 1 152 1 247 1 113 1 350 1 19 1 301 1 252 3 25 1 120 2 70 3 74 1 304 1 363 1 126 1 264 2 85 1 266 4 37 1 318 3 220 1 328 4 327 1 276 3 174 1 331 2 
280 5 282 2 283 1 192 1 195 1 147 2 293 3 60 2 107 1 241 1 63 1 152 2 153 1 111 2 348 1 201 1 113 2 350 2 301 2 23 1 354 1 252 5 120 1 256 1 70 5 27 1 121 1 304 1 209 1 126 1 78 1 80 1 307 1 309 1 264 2 263 1 33 1 85 2 131 1 318 3 375 1 328 8 276 5 331 2 
256 1 70 2 27 1 96 1 282 1 209 1 78 1 233 1 307 1 264 1 33 1 195 1 9 1 85 2 60 1 107 1 61 1 150 1 131 1 152 1 42 1 348 1 113 2 90 1 375 1 328 2 354 1 331 1 
86 1 252 1 70 1 60 1 282 1 111 1 328 1 264 1 114 1 331 1 
147 1 85 1 252 2 70 2 293 2 280 2 318 2 152 1 113 1 350 1 328 2 301 1 276 2 354 1 
252 1 256 1 120 1 27 1 107 1 131 1 209 1 111 1 126 1 78 1 348 1 307 1 375 1 33 1 195 1 
120 2 25 1 70 1 60 1 304 1 37 1 282 1 363 1 184 1 126 1 284 1 328 1 264 1 194 1 174 1 23 1 331 1 
358 1 25 1 256 2 27 2 74 1 229 1 50 1 363 1 364 1 209 3 186 1 33 1 57 1 164 1 339 1 238 1 266 1 240 1 107 2 37 1 131 2 373 2 40 1 64 1 325 1 348 3 135 1 47 1 275 1 174 1 278 1 356 1 
252 4 70 2 280 2 304 1 282 1 264 1 293 2 60 1 243 1 318 2 111 2 113 1 328 2 276 2 23 1 331 1 
94 1 333 1 291 1 
242 1 222 1 333 1 140 1 291 1 
94 1 333 1 291 1 
94 1 333 1 291 1 
228 1 333 1 291 1 
228 1 333 1 291 1 
228 1 333 1 291 1 
333 1 291 1 
324 1 176 1 
85 1 178 1 358 3 313 1 119 4 69 1 238 7 243 1 150 1 362 1 373 4 166 1 364 2 64 2 152 1 42 1 325 2 285 2 90 1 278 2 
85 1 358 2 313 1 69 1 119 3 238 5 243 1 342 1 150 1 166 1 152 1 42 1 285 1 90 1 
148 1 147 1 85 1 178 1 358 2 69 1 119 2 238 4 373 2 364 1 64 1 152 1 325 1 285 2 350 1 301 1 278 1 
147 1 85 1 178 1 358 4 69 1 119 3 238 7 121 1 13 1 152 1 285 2 80 2 350 1 263 1 301 1 
178 4 358 11 119 11 69 4 121 2 28 1 362 2 364 2 185 1 285 8 80 2 85 3 147 2 313 1 238 22 243 1 13 1 150 2 166 1 373 4 64 2 152 3 42 2 295 1 325 2 90 1 350 2 301 2 278 2 
358 1 238 1 80 1 
119 1 238 1 121 1 
148 1 147 1 85 1 178 1 358 3 119 3 69 2 238 6 373 2 231 1 64 1 364 1 152 1 325 1 285 3 350 1 301 1 278 1 
178 1 358 6 119 6 69 1 121 1 283 1 364 1 285 2 80 1 263 1 147 2 85 2 238 12 241 1 63 1 373 2 64 1 151 1 153 1 152 2 325 1 201 1 350 2 301 2 278 1 
85 1 178 1 358 3 119 3 69 1 238 6 150 1 152 1 42 1 285 2 90 1 
178 1 313 1 358 2 119 1 69 1 238 3 150 1 362 1 373 2 166 1 364 1 64 1 42 1 185 1 325 1 285 2 278 1 
178 2 85 2 358 5 69 3 119 5 238 10 150 2 373 2 64 1 364 1 151 1 152 2 42 2 325 1 233 1 285 5 90 1 278 1 
85 1 178 1 119 2 238 2 373 2 364 1 64 1 151 1 325 1 285 1 301 1 278 1 
147 1 85 1 178 1 358 2 69 1 119 2 238 4 373 2 364 1 64 1 152 1 151 1 325 1 285 2 350 1 301 1 278 1 
178 1 358 2 69 1 119 1 238 3 122 1 150 1 362 1 373 6 364 3 64 3 151 1 185 1 42 1 325 3 285 2 278 3 
178 5 358 17 119 16 69 6 121 3 137 1 122 1 362 2 364 5 185 1 285 11 80 4 263 1 148 1 147 3 85 5 313 1 238 33 129 1 243 1 13 1 150 3 166 1 373 10 64 5 151 1 152 5 42 3 325 5 90 2 350 3 352 1 301 3 278 5 
358 3 119 4 69 1 121 1 364 1 285 1 80 1 263 1 85 1 313 1 238 7 243 1 150 1 63 1 373 2 166 1 64 1 152 1 151 1 42 1 325 1 90 1 278 1 
178 1 358 4 69 1 119 6 121 1 364 2 285 2 80 2 263 1 148 1 147 1 85 2 313 1 238 10 243 1 13 1 150 1 166 1 63 1 373 4 64 2 152 1 151 1 42 1 325 2 90 1 301 1 278 2 
178 1 358 9 119 9 69 2 121 1 362 1 283 1 364 3 285 3 80 1 263 1 148 1 147 2 85 3 313 1 238 18 241 1 243 1 150 1 166 1 63 1 373 6 64 3 151 1 153 1 152 3 42 1 201 1 325 3 90 1 350 2 301 2 278 3 
178 2 358 6 119 10 69 2 121 1 362 1 283 1 364 3 285 4 80 1 263 1 148 1 147 2 85 3 313 1 238 16 241 1 243 1 150 1 166 1 63 1 373 6 64 3 151 1 153 1 152 2 42 1 325 3 201 1 90 1 350 1 301 2 278 3 
358 3 119 4 69 1 121 1 364 1 285 1 80 1 263 1 85 1 313 1 238 7 243 1 150 1 63 1 373 2 166 1 64 1 152 1 151 1 42 1 325 1 90 1 278 1 
178 1 358 6 119 6 69 1 121 1 283 1 364 1 285 2 80 1 263 1 147 2 85 2 238 12 241 1 63 1 373 2 64 1 151 1 153 1 152 2 325 1 201 1 350 2 301 2 278 1 
178 2 358 7 119 10 69 2 121 1 362 2 283 1 364 4 285 4 80 1 263 1 148 1 147 2 85 3 313 1 238 17 241 1 243 1 150 1 166 1 63 1 373 8 64 4 151 1 153 1 152 2 42 1 201 1 325 4 90 1 350 1 301 2 278 4 
178 3 358 7 119 9 69 3 121 1 122 1 362 2 283 1 364 4 285 6 80 1 263 1 147 3 85 3 238 16 241 1 63 1 373 8 64 4 151 1 153 1 152 2 201 1 325 4 350 2 301 3 278 4 
178 3 85 1 358 4 313 2 69 3 119 3 238 7 150 3 166 1 152 1 42 3 285 6 90 1 
178 1 358 7 119 10 69 2 121 1 122 1 362 2 283 1 364 4 285 3 80 1 263 1 147 2 85 3 313 1 238 17 241 1 243 1 150 1 166 1 63 1 373 8 64 4 151 1 153 1 152 2 42 1 201 1 325 4 90 1 350 1 301 2 278 4 
169 1 348 1 27 1 334 1 57 1 127 1 209 1 
27 1 294 1 334 1 209 1 169 1 348 1 43 1 366 1 298 1 57 1 22 1 127 1 
25 1 266 1 74 1 342 1 229 1 216 1 37 1 363 1 174 1 115 1 339 1 
256 1 25 1 266 1 27 1 240 1 74 1 37 1 229 1 131 1 50 1 363 1 209 2 348 2 351 1 57 1 164 1 174 1 339 1 
118 1 256 2 27 2 74 2 226 1 97 1 1 1 229 1 50 1 363 1 209 2 57 1 164 1 195 1 339 1 266 3 240 2 37 1 131 1 348 2 351 1 21 1 174 1 
118 1 256 2 27 2 74 2 226 1 97 1 1 1 229 1 363 2 209 2 260 1 57 1 164 1 195 1 143 1 339 1 266 3 240 2 37 2 131 1 348 2 351 1 21 1 174 2 
118 1 252 1 25 1 120 1 266 4 240 1 96 2 74 1 61 2 97 1 37 3 229 1 363 3 198 1 111 1 260 1 327 1 21 1 237 1 55 1 211 1 174 3 339 1 
118 1 252 1 25 1 120 1 266 4 240 1 96 2 74 1 61 2 97 1 37 3 229 1 363 3 198 1 111 1 220 1 260 1 327 1 21 1 55 1 174 3 339 1 
229 1 37 1 363 1 174 1 52 1 339 1 
312 1 25 2 266 3 149 1 240 1 109 1 74 2 157 1 37 7 229 2 51 1 319 1 363 6 52 1 245 1 286 1 288 1 105 1 174 7 24 1 339 3 
229 1 50 1 186 2 285 1 286 1 57 2 339 1 238 5 240 1 243 1 150 1 64 2 152 1 17 1 348 2 351 1 251 1 356 1 358 2 256 1 69 1 119 3 27 1 207 1 74 1 363 1 364 2 209 2 81 1 164 1 85 1 313 1 372 1 266 1 37 1 131 1 373 4 166 1 40 1 42 1 325 2 90 1 47 2 172 1 224 1 174 1 278 2 
96 2 282 2 184 1 233 1 104 1 55 1 195 1 60 2 107 1 61 2 197 1 150 1 198 1 345 1 152 2 111 2 348 1 113 2 19 1 114 1 354 1 252 2 120 2 25 1 256 1 70 5 27 1 363 1 209 1 126 1 78 1 307 1 264 2 33 1 86 1 85 2 266 2 37 1 131 1 220 1 42 1 90 1 375 1 327 1 328 4 174 1 331 2 
266 2 240 1 109 1 74 1 37 2 229 1 198 1 363 2 52 1 247 1 286 1 174 2 339 2 
25 1 266 1 74 1 37 4 216 1 229 1 363 4 260 1 286 1 174 4 115 1 117 1 339 1 
118 1 214 1 266 1 149 1 240 1 74 1 37 2 229 1 363 2 323 1 288 1 174 2 175 1 339 2 
25 1 248 1 99 1 229 1 37 1 236 1 363 1 174 1 339 1 168 1 
312 1 266 1 74 1 37 2 229 1 363 2 245 1 286 1 8 1 174 2 339 1 
118 1 25 1 266 3 74 2 157 1 216 1 37 5 229 2 363 4 245 1 286 1 174 5 115 1 117 1 24 1 339 2 
118 1 25 1 266 3 74 2 157 1 216 1 37 5 229 2 363 4 245 1 101 1 286 1 174 5 115 1 117 1 339 2 
256 1 25 1 266 1 27 1 240 1 74 1 37 1 229 1 131 1 363 1 209 2 348 2 351 1 57 1 164 1 174 1 143 1 339 1 
118 1 266 1 149 1 240 1 109 1 74 1 37 1 229 1 363 1 288 1 105 1 174 1 339 2 
132 1 177 1 348 1 271 1 27 1 26 1 181 1 76 1 209 1 
26 1 329 1 130 1 
177 1 26 1 181 1 57 1 30 1 
279 1 177 2 252 1 26 1 96 2 226 1 61 2 268 1 1 1 181 2 130 1 15 1 345 1 30 2 111 1 327 1 329 1 57 1 195 1 
342 1 235 1 277 1 139 1 
210 1 171 1 82 1 235 1 138 1 277 1 139 1 
11 1 82 1 321 1 
215 1 138 3 139 1 346 1 210 1 171 1 337 1 82 3 235 1 277 1 58 1 116 2 
335 1 210 1 171 1 82 2 235 1 138 2 277 1 83 1 139 1 
99 1 123 1 138 1 139 1 346 1 5 1 210 1 171 1 82 1 236 1 84 1 
210 1 171 1 82 1 138 1 277 1 139 1 346 1 
210 1 171 1 82 1 235 1 138 1 277 2 346 1 
179 1 93 1 128 1 138 2 139 1 346 1 210 2 171 2 82 2 277 1 
332 1 138 3 77 1 139 2 346 1 5 1 210 1 171 1 154 1 82 3 235 1 277 1 83 2 
303 1 99 2 138 2 139 1 346 1 210 1 248 1 171 1 223 1 82 2 235 1 236 1 277 1 83 1 84 1 
138 4 77 1 139 2 346 1 53 1 5 1 210 2 335 1 171 2 82 4 235 1 277 1 83 2 
210 1 171 1 82 1 235 1 138 1 277 1 139 1 346 1 
215 1 138 4 77 1 139 3 5 1 125 1 210 1 171 1 82 4 235 2 277 2 83 2 58 1 116 1 
257 1 138 2 139 1 346 1 246 1 210 1 367 1 171 1 82 2 235 1 277 1 83 1 
215 2 138 3 139 1 346 1 210 1 171 1 82 3 56 1 235 1 277 1 58 1 116 2 
258 1 208 2 311 1 139 2 
210 1 171 1 82 1 138 1 357 1 346 1 
210 1 154 1 171 1 82 2 235 1 138 2 277 1 83 1 139 1 346 1 
326 1 
210 1 171 1 82 1 235 1 138 1 277 1 139 1 346 1 
138 3 139 1 346 1 210 1 171 1 154 1 82 3 235 1 83 1 277 1 116 1 
125 1 139 1 77 1 5 1 
277 1 139 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 88 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 314 66 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 314 66 312 225 303 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 258 14 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 8 (94,376) (94,376) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | && -> ||
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3022 | < -> !=
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10082 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1400 | 1 -> 0
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2636 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z | OPERATOR | 2861 | != -> ==
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | CONDITION | 1071 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4739 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 9 362 1 279 2 194 2 117 2 165 1 89 6 56 2 67 1 224 1 47 1 75 1 59 4 183 1 8 4 288 9 210 3 246 2 289 1 94 1 125 1 232 1 96 1 20 1 129 1 376 1 115 2 130 2 
0 9 362 1 279 2 194 2 117 2 165 1 89 6 56 2 67 1 224 1 47 1 75 1 59 4 183 1 8 4 288 9 210 3 289 1 246 2 94 1 125 1 232 1 96 1 20 1 129 1 376 1 115 2 130 2 
0 10 362 1 279 2 194 2 117 2 165 1 89 7 56 2 67 1 224 1 47 1 75 1 59 5 183 1 8 5 288 10 210 4 289 1 246 2 94 1 125 1 232 1 96 1 20 1 129 1 376 1 115 2 130 2 
0 7 362 1 279 2 194 2 117 2 165 1 89 4 56 2 67 1 224 1 47 1 75 1 59 3 183 1 8 3 288 7 210 2 289 1 246 2 94 1 125 1 232 1 96 1 20 1 376 1 115 2 130 1 
0 4 362 1 279 1 194 1 117 1 89 3 56 1 59 2 288 4 8 2 210 1 289 1 246 1 94 1 96 1 129 1 376 1 130 2 
0 2 279 1 194 1 117 1 56 1 224 1 47 1 195 1 37 1 288 2 289 1 94 1 293 1 376 1 115 1 
0 3 279 2 194 2 89 1 75 1 59 1 288 3 8 1 289 1 210 1 94 1 376 1 115 1 
0 9 362 1 54 1 279 2 194 2 117 1 165 1 89 7 56 1 75 1 59 4 29 1 183 1 8 4 288 9 246 1 289 1 210 3 94 1 96 1 129 1 376 1 115 1 130 2 
0 9 362 1 54 1 279 2 194 2 117 1 165 1 89 7 56 1 75 1 59 4 29 1 183 1 8 4 288 9 246 1 289 1 210 3 94 1 96 1 129 1 376 1 115 1 130 2 
88 1 377 1 227 1 
31 2 347 1 377 1 
351 2 40 1 367 2 211 2 333 2 283 2 301 2 199 1 
236 1 351 2 23 1 141 1 333 2 283 2 28 1 217 1 145 2 261 1 242 1 198 1 199 1 98 1 264 1 178 2 55 1 180 1 102 1 367 3 243 1 369 1 300 2 301 2 343 1 344 1 371 1 40 1 60 1 269 1 271 1 211 3 19 2 273 1 61 1 111 1 64 2 
228 1 124 1 351 1 40 1 367 1 211 1 333 1 283 1 301 1 49 1 
204 1 366 1 367 1 2 1 91 1 301 1 227 1 208 1 186 1 124 1 211 1 233 1 377 1 173 1 
204 1 351 1 366 1 367 1 2 2 283 1 333 1 91 2 301 1 227 1 124 1 211 1 233 1 377 1 173 1 
122 1 185 1 2 1 91 1 310 1 
122 1 185 1 146 1 2 2 91 2 58 1 377 1 227 1 
185 1 2 1 91 1 
351 1 367 1 2 1 283 1 333 1 91 1 301 1 49 1 122 1 105 1 228 1 124 1 40 1 211 1 
377 1 
122 1 185 1 2 2 91 2 189 1 58 1 377 1 227 1 
2 5 74 1 299 2 92 1 91 5 58 1 50 1 227 1 122 2 287 1 38 1 184 2 185 2 7 1 231 1 262 1 248 2 263 1 377 1 
88 1 199 1 
328 1 351 1 367 2 283 1 333 1 301 2 211 2 212 1 199 2 
296 1 363 1 336 1 
178 1 55 1 367 1 141 1 243 1 369 1 28 1 344 1 269 1 211 1 19 1 273 1 111 1 276 1 199 1 64 1 
178 1 55 1 367 2 141 1 283 1 333 1 243 1 369 1 301 1 28 1 344 1 373 1 269 1 138 1 211 2 273 1 19 1 111 1 336 1 64 1 
351 1 367 5 283 4 333 4 301 5 208 1 197 1 373 2 211 5 138 1 212 1 191 1 199 1 150 1 
124 1 367 2 211 2 333 2 283 2 301 2 49 1 250 1 
351 1 373 1 367 3 211 3 333 3 283 3 301 3 199 1 
124 1 367 1 211 1 333 1 283 1 301 1 49 1 
328 1 124 1 351 1 367 1 211 1 212 1 333 1 283 1 301 1 
351 2 2 1 141 1 333 3 283 3 91 1 28 1 217 1 145 2 261 1 124 1 241 1 242 1 199 1 98 1 173 1 264 1 178 1 55 1 204 1 366 1 102 1 101 1 367 4 369 1 243 1 300 1 301 3 343 1 344 1 371 1 373 1 40 1 60 1 269 1 211 4 138 1 212 1 273 1 19 1 61 1 111 1 233 1 64 1 
373 1 367 2 211 2 333 1 283 1 301 2 199 1 208 1 150 1 
204 1 351 1 366 1 367 3 2 1 283 3 333 3 91 1 301 3 124 1 373 2 138 1 211 3 212 1 241 1 220 1 233 1 377 1 173 1 
296 1 351 1 367 2 283 2 333 2 301 2 373 1 211 2 212 1 336 1 
178 1 55 1 367 1 141 1 243 1 369 1 28 1 344 1 269 1 211 1 19 1 273 1 111 1 199 1 64 1 
178 1 367 1 141 1 243 1 28 1 344 1 269 1 211 1 19 1 42 1 273 1 294 1 111 1 199 1 64 1 
264 2 363 1 102 1 3 1 309 1 240 1 300 2 343 1 371 1 355 1 261 1 145 2 60 1 61 1 234 1 336 1 
124 1 366 1 367 1 211 1 333 1 283 1 301 1 250 1 
320 1 167 1 
320 1 167 1 
306 1 321 1 
306 1 321 1 
306 1 321 1 
331 1 320 1 167 1 
372 1 320 1 167 1 
45 1 306 1 320 2 321 1 44 1 167 2 
331 1 320 1 167 1 
331 1 320 1 167 1 
206 1 320 1 167 1 
206 1 320 1 167 1 
206 1 320 1 167 1 
159 1 193 1 2 1 333 2 283 2 91 1 167 1 292 1 52 1 199 1 176 1 319 1 367 2 320 1 301 2 322 1 342 1 209 1 157 1 372 1 83 1 82 1 187 1 211 2 
351 1 2 2 283 1 333 1 216 1 91 2 49 1 167 2 311 1 357 1 124 1 292 2 52 2 360 1 337 1 367 1 320 2 301 1 342 2 154 1 105 1 228 1 157 2 40 1 83 1 211 1 187 2 375 1 
246 1 117 1 56 1 
117 1 56 1 195 1 
246 2 205 1 81 1 140 1 56 3 195 1 
246 1 205 1 140 1 56 2 346 1 195 1 
246 1 205 2 140 1 56 2 195 1 
159 1 214 1 66 1 2 5 309 1 92 1 354 1 91 5 254 1 50 1 122 4 31 1 290 1 172 1 315 1 314 1 149 2 299 1 322 1 58 1 227 1 209 1 184 1 185 1 229 1 231 3 274 1 85 1 234 1 248 1 377 1 
87 5 214 2 66 3 24 1 2 9 309 3 92 3 354 3 91 9 310 5 50 1 122 7 31 3 290 3 172 3 314 3 263 1 266 1 299 2 58 1 227 1 304 1 209 4 185 6 184 2 79 1 156 1 229 1 231 8 272 1 274 2 234 3 248 2 377 2 
214 1 66 1 2 3 309 1 91 3 354 1 92 1 254 1 122 2 31 2 290 1 172 1 149 1 314 1 263 1 299 1 227 1 209 1 184 1 231 3 274 1 85 1 248 1 234 1 347 1 377 2 
214 1 66 2 24 1 2 4 309 2 91 4 354 2 92 2 254 1 122 3 31 3 290 2 172 2 149 2 314 2 263 1 266 1 299 1 227 1 209 2 184 1 231 5 272 1 274 1 85 1 234 2 248 1 347 1 377 2 
88 1 134 1 111 1 
111 1 249 1 
13 1 
269 1 111 1 344 1 
308 1 111 1 
111 1 344 1 
174 1 86 1 269 1 134 2 111 3 344 1 
99 2 264 1 152 3 23 3 103 1 354 1 334 1 284 1 26 2 300 4 285 1 71 1 77 1 258 1 43 1 275 1 
99 2 264 1 152 3 23 3 103 1 354 1 334 1 284 1 26 2 300 4 285 1 71 1 77 1 258 1 43 1 275 1 
99 2 264 1 152 3 23 3 103 1 354 1 334 1 284 1 26 2 300 4 285 1 71 1 77 1 258 1 43 1 275 1 348 1 
23 3 26 1 284 1 334 1 71 1 261 1 145 2 51 1 95 1 10 1 99 1 264 3 73 1 152 2 103 1 225 1 300 6 343 1 371 1 41 1 60 1 43 2 275 1 114 1 
23 4 354 1 26 2 284 1 334 1 285 1 71 1 258 1 145 4 261 2 99 3 264 2 152 4 364 1 300 6 343 2 77 1 15 1 371 2 60 2 43 1 275 1 114 1 
237 1 0 2 279 1 194 1 117 1 89 1 141 1 195 1 255 1 288 2 123 1 256 1 289 1 94 1 313 1 178 1 11 1 35 1 56 2 244 1 136 1 230 1 246 1 81 1 19 1 273 1 376 1 115 1 64 1 
237 1 0 3 279 1 194 1 117 1 89 2 252 1 141 1 195 1 255 1 288 3 123 1 256 1 94 1 313 1 178 1 35 1 56 2 244 1 153 1 104 1 136 1 246 1 81 1 19 1 273 1 376 1 115 1 64 1 
237 1 0 2 117 1 89 2 252 1 141 1 195 1 255 1 288 2 256 1 94 1 313 1 178 1 35 1 56 2 104 1 136 1 246 1 81 1 19 1 273 1 376 1 115 1 64 1 
237 2 0 1 279 1 194 1 141 1 282 1 119 1 288 1 178 1 265 1 35 2 243 1 153 1 78 1 344 1 268 1 136 2 19 1 273 1 277 1 111 1 115 2 64 1 
237 1 0 1 279 1 194 1 117 1 252 1 141 1 195 1 255 1 288 1 123 1 256 1 289 1 313 1 178 1 11 1 35 1 56 2 244 1 136 1 246 1 81 1 19 1 273 1 115 1 64 1 
109 1 
330 1 281 2 2 5 280 1 141 1 332 4 92 2 91 5 335 1 93 1 50 1 204 1 100 1 299 1 243 2 301 1 58 3 344 1 208 1 345 1 108 2 211 1 19 2 248 1 111 1 110 1 347 2 64 2 119 1 70 2 169 1 356 1 124 1 31 2 171 2 358 2 359 2 173 1 178 2 366 1 367 1 227 1 185 6 184 1 370 1 323 1 186 1 137 1 231 2 325 2 274 1 273 1 277 1 233 1 377 2 
330 1 280 1 2 3 332 2 91 3 169 1 124 1 359 1 173 1 204 1 366 1 367 1 301 1 58 1 208 1 185 2 186 1 323 1 211 1 110 1 233 1 189 1 
330 1 280 1 2 3 332 3 91 3 169 1 124 1 173 1 204 1 366 1 367 1 301 1 58 1 208 1 227 1 185 1 186 1 323 1 108 1 211 1 110 1 233 1 189 1 377 1 
330 1 280 1 2 3 332 3 91 3 169 1 124 1 358 1 359 1 173 1 204 1 366 1 367 1 301 1 58 1 208 1 227 1 185 2 186 1 323 1 108 1 211 1 189 1 110 1 233 1 377 1 
330 1 2 5 280 1 281 2 332 6 91 5 92 1 50 1 196 1 204 1 299 1 301 1 58 3 208 1 108 4 211 1 110 1 113 1 248 1 347 2 215 1 70 2 169 1 124 1 356 1 171 2 358 4 359 4 173 1 366 1 367 1 34 1 227 5 185 7 184 1 370 1 323 1 186 1 231 1 325 2 233 1 189 1 190 1 377 5 
330 1 2 4 280 1 281 2 332 4 91 4 92 1 93 1 50 1 204 1 299 1 301 1 58 2 208 1 108 2 211 1 248 1 110 1 347 2 70 2 169 1 124 1 356 1 171 2 31 2 358 2 359 2 173 1 366 1 367 1 227 1 184 1 185 4 370 1 323 1 186 1 231 1 325 2 233 1 377 2 
330 1 281 2 280 1 2 4 332 4 92 1 91 4 70 2 50 1 196 1 169 1 356 1 124 1 171 2 358 2 359 2 173 1 204 1 366 1 367 1 34 1 299 1 301 1 58 2 227 1 208 1 185 4 184 1 370 1 186 1 323 1 231 1 108 2 211 1 325 2 110 1 233 1 190 1 248 1 347 2 377 1 
330 1 281 2 280 1 2 4 332 4 92 1 91 4 70 2 50 1 196 1 169 1 356 1 124 1 171 2 358 2 359 2 173 1 204 1 366 1 367 1 34 1 299 1 301 1 58 2 227 1 208 1 185 4 184 1 370 1 186 1 323 1 231 1 108 2 211 1 325 2 110 1 233 1 190 1 248 1 347 2 377 1 
330 1 280 1 2 4 332 4 92 1 91 4 70 2 50 1 196 1 257 1 169 1 356 1 124 1 147 1 31 2 171 2 358 2 359 2 173 1 318 2 204 1 366 1 367 1 299 1 301 1 58 2 227 1 208 1 185 4 184 1 106 2 186 1 323 1 231 1 108 2 211 1 110 1 233 1 248 1 63 1 377 1 
330 1 281 2 280 1 2 4 332 5 92 1 91 4 70 2 50 1 196 1 169 1 356 1 124 1 171 2 358 3 359 3 173 1 204 1 366 1 367 1 34 1 299 1 301 1 58 2 227 1 208 1 184 1 185 5 370 1 186 1 323 1 231 1 108 3 211 1 325 2 248 1 110 1 233 1 113 1 190 1 347 2 377 1 
330 1 281 2 280 1 2 4 332 5 92 1 91 4 70 2 50 1 196 1 169 1 356 1 124 1 171 2 358 3 359 3 173 1 204 1 366 1 367 1 34 1 299 1 301 1 58 2 227 1 208 1 184 1 185 5 370 1 186 1 323 1 231 1 108 3 211 1 325 2 248 1 110 1 233 1 113 1 190 1 347 2 377 1 
330 1 2 4 280 1 332 4 91 4 92 1 93 1 50 1 147 1 204 1 299 1 301 1 58 2 208 1 106 2 108 2 211 1 248 1 110 1 70 2 169 1 124 1 356 1 171 2 31 2 358 2 359 2 173 1 318 2 366 1 367 1 227 1 184 1 185 4 323 1 186 1 231 1 233 1 377 1 
99 2 264 1 152 2 363 1 88 1 23 2 102 1 3 1 26 1 354 1 300 3 285 1 71 1 343 1 77 1 258 1 371 1 261 1 145 2 60 1 61 1 275 1 199 1 336 1 
251 1 66 2 23 4 309 2 354 2 168 1 124 1 145 4 261 2 242 1 10 2 312 1 199 1 314 2 336 7 99 1 264 7 152 1 296 6 363 7 102 2 135 1 300 11 343 2 371 2 305 1 41 2 60 2 188 1 61 1 234 2 192 1 
23 1 141 1 333 1 283 1 28 1 168 1 261 1 145 2 127 1 242 1 199 1 178 1 264 1 55 1 296 1 179 1 102 1 367 2 369 1 243 1 301 1 300 2 344 1 343 1 371 1 373 1 269 1 60 1 211 2 138 1 271 1 84 1 273 1 19 1 61 1 111 1 276 1 64 1 
141 2 4 1 283 1 333 1 5 2 334 1 285 1 145 6 242 1 199 1 98 2 336 5 295 2 99 6 152 7 55 2 296 2 102 3 243 1 301 1 300 19 341 1 14 1 343 3 344 2 60 3 211 3 19 1 61 3 111 2 64 1 251 1 350 2 66 2 23 9 309 2 26 1 354 5 28 2 71 2 168 1 258 2 124 1 261 3 314 2 264 10 178 1 132 2 363 5 367 3 369 2 77 1 371 3 373 1 269 2 271 1 138 1 273 2 275 2 234 3 
23 1 3 1 252 1 353 1 141 2 333 1 283 1 27 1 69 1 119 1 145 4 261 2 128 1 242 1 178 7 264 1 180 2 207 1 367 1 102 2 243 2 301 1 300 2 343 2 344 2 230 1 371 2 373 1 60 2 211 1 17 1 271 1 326 1 273 2 19 8 61 2 111 3 277 1 64 8 
65 1 66 1 351 1 23 2 367 1 102 1 333 1 283 1 354 1 300 2 301 1 343 1 168 1 371 1 261 1 145 2 60 1 211 1 212 1 61 1 314 1 
102 1 23 1 3 1 354 1 300 1 143 1 343 1 371 1 261 1 145 2 60 1 61 1 314 1 
264 2 363 1 102 1 3 1 309 1 240 1 300 2 343 1 371 1 261 1 145 2 60 1 61 1 234 1 336 1 
264 2 363 1 66 1 102 1 23 1 3 1 309 1 354 1 300 3 343 1 371 1 261 1 145 2 60 1 61 1 234 1 314 1 336 1 
102 1 23 1 354 1 300 1 143 1 343 1 371 1 261 1 145 2 60 1 128 1 61 1 314 1 
264 2 363 1 102 1 309 1 240 1 300 2 343 1 371 1 261 1 145 2 60 1 128 1 61 1 234 1 336 1 
264 2 363 1 66 1 102 1 23 1 309 1 354 1 300 3 343 1 371 1 261 1 145 2 60 1 128 1 61 1 234 1 314 1 336 1 
264 2 363 1 66 1 102 1 23 1 309 1 354 1 300 3 343 1 371 1 261 1 145 2 60 1 61 1 234 1 314 1 336 1 
23 1 141 1 28 1 261 1 145 2 242 1 199 1 98 1 178 1 264 1 55 1 367 1 102 1 369 1 243 1 300 2 344 1 343 1 371 1 269 1 60 1 271 1 211 1 273 1 19 1 61 1 111 1 64 1 
23 1 141 1 28 1 261 1 145 2 294 1 242 1 199 1 178 1 264 1 367 1 102 1 243 1 36 1 300 2 344 1 343 1 371 1 269 1 60 1 271 1 211 1 273 1 42 1 19 1 61 1 111 1 64 1 
264 2 363 1 66 1 102 1 23 1 309 1 354 1 300 3 343 1 168 1 371 1 261 1 145 2 60 1 61 1 234 1 314 1 336 1 
350 1 66 1 23 1 309 1 141 1 354 1 28 1 261 1 145 2 314 1 98 1 336 1 264 2 178 1 55 1 363 1 367 1 102 1 369 1 300 3 344 1 343 1 230 1 371 1 269 1 60 1 211 1 273 1 19 1 61 1 234 1 111 1 64 1 
351 1 66 1 23 1 309 1 283 1 333 1 354 1 168 1 259 1 145 2 261 1 314 1 264 1 102 1 367 1 301 1 300 2 343 1 371 1 60 1 211 1 212 1 61 1 234 1 
278 1 329 3 66 3 23 9 309 3 354 3 166 1 286 1 30 1 219 1 144 1 145 6 261 3 10 2 314 3 99 2 72 1 264 13 152 2 364 1 365 1 339 1 225 2 300 22 343 3 303 1 371 3 80 1 324 1 41 2 60 3 234 3 112 1 114 1 
278 1 329 4 66 7 23 16 309 7 354 7 166 1 30 1 144 2 145 4 261 2 10 4 312 2 314 7 99 3 264 24 72 2 152 3 364 1 365 1 339 1 133 1 225 2 300 40 303 1 343 2 371 2 80 1 324 1 41 4 60 2 188 2 112 1 234 7 114 1 
278 1 329 4 66 3 23 10 309 3 354 3 166 1 30 1 219 1 144 1 145 6 261 3 10 2 314 3 99 1 72 1 264 14 152 1 364 1 365 1 339 1 133 1 225 2 300 24 343 3 303 1 371 3 80 1 324 1 41 2 60 3 234 3 112 1 114 1 
278 1 329 4 66 3 23 10 309 3 354 3 166 1 30 1 219 1 144 1 145 6 261 3 10 2 314 3 99 1 72 1 264 14 152 1 364 1 365 1 339 1 133 1 225 2 300 24 343 3 303 1 371 3 80 1 324 1 41 2 60 3 234 3 112 1 114 1 
278 1 329 4 66 7 23 16 309 7 354 7 166 1 30 1 144 1 145 4 261 2 10 4 312 2 314 7 99 4 72 1 264 24 152 4 364 1 365 1 339 1 133 1 225 2 300 40 303 1 343 2 371 2 80 1 324 1 41 4 60 2 188 2 112 1 234 7 114 1 
260 1 157 1 368 1 320 1 187 1 352 1 292 1 52 1 44 1 167 1 
176 1 372 1 
157 1 9 1 320 1 187 1 292 1 52 1 226 1 62 1 167 1 
331 1 68 1 
45 1 206 1 200 1 
351 1 2 1 283 1 333 1 216 1 91 1 49 1 167 1 311 1 357 1 124 1 292 1 52 1 360 1 337 1 367 1 320 1 301 1 342 2 154 1 105 1 228 1 157 1 40 1 83 1 211 1 187 1 375 1 
351 1 2 1 283 1 333 1 216 1 91 1 49 1 167 1 311 1 357 1 124 1 292 1 52 1 360 1 337 1 367 1 320 1 301 1 342 2 154 1 105 1 228 1 157 1 40 1 83 1 211 1 187 1 375 1 
351 1 2 1 283 1 333 1 216 1 91 1 49 1 167 1 311 1 357 1 124 1 292 1 52 1 360 1 337 1 367 1 320 1 301 1 342 2 154 1 105 1 228 1 157 1 40 1 83 1 211 1 187 1 375 1 
45 1 331 1 68 1 
45 1 331 1 68 1 
206 1 200 1 
45 1 206 1 200 1 
319 1 82 1 
159 1 193 1 2 1 283 2 333 2 91 1 167 1 311 1 122 1 292 1 52 1 199 1 337 1 176 1 319 1 367 2 320 1 322 1 301 2 302 1 342 1 209 1 157 1 372 1 82 1 211 2 187 1 
23 1 141 1 90 1 142 1 168 1 261 1 145 2 242 1 264 1 178 2 267 1 180 2 102 1 367 2 301 2 300 2 344 1 343 1 371 1 60 1 307 1 211 2 17 1 271 1 326 1 247 1 273 1 19 2 61 1 111 1 64 2 
178 2 46 1 117 1 298 1 56 2 141 1 252 1 195 1 123 1 256 1 136 1 230 1 246 1 81 1 273 1 19 2 32 1 313 1 64 2 
178 1 46 1 117 1 56 2 252 1 141 1 195 1 123 1 256 1 136 1 246 1 81 1 19 1 273 1 313 1 64 1 33 1 
178 1 298 1 141 1 243 1 119 1 344 1 78 1 155 1 136 1 273 1 19 1 111 1 277 1 64 1 
178 1 46 1 117 1 298 1 56 2 141 1 252 1 195 1 123 1 256 1 136 1 246 1 81 1 19 1 273 1 32 1 313 1 64 1 
126 1 
38 1 7 1 88 1 231 1 92 1 377 1 227 1 
281 1 2 1 92 1 91 1 50 1 31 1 299 1 58 1 227 1 184 1 185 1 370 1 231 1 325 1 248 1 347 1 377 2 
327 1 1 2 2 5 141 2 91 5 92 5 50 3 290 4 201 2 299 3 243 1 58 3 344 1 345 1 18 2 19 1 111 6 248 3 347 4 249 3 64 1 349 1 66 2 118 1 309 2 354 2 31 8 172 4 314 2 316 2 174 1 178 1 132 2 134 2 227 1 184 3 185 5 39 2 231 8 269 1 274 2 273 1 233 2 234 2 235 2 377 5 
66 1 299 1 354 1 92 3 225 1 50 1 303 1 184 1 41 2 231 2 31 4 290 3 172 3 10 1 312 1 248 1 314 1 347 2 377 2 
2 1 34 1 299 1 92 2 354 1 91 1 50 1 71 1 14 1 184 1 258 1 39 1 231 2 234 1 248 1 275 1 
299 1 92 1 50 1 227 1 38 1 184 1 7 1 231 1 248 1 377 1 
66 1 309 1 354 1 92 1 39 1 231 2 31 2 290 1 172 1 234 1 314 1 347 1 377 1 
185 1 2 1 91 1 58 1 377 1 227 1 
25 1 2 3 141 1 335 1 92 2 91 3 119 1 50 1 263 1 317 1 178 4 53 2 100 1 299 2 243 2 12 1 58 2 344 1 184 2 185 4 345 2 231 2 273 1 19 4 274 2 111 1 248 2 277 1 64 4 
351 2 141 1 333 2 283 2 28 1 217 1 145 2 261 1 242 1 199 1 98 1 264 1 178 1 55 1 367 3 102 1 243 1 369 1 300 1 301 2 344 1 343 1 371 1 40 1 60 1 269 1 211 3 19 1 273 1 61 1 111 1 64 1 
299 1 26 1 92 2 50 1 227 2 184 1 345 1 231 1 31 4 290 2 172 2 274 1 248 1 347 2 377 4 
374 1 292 1 52 1 
260 1 162 1 319 1 292 1 52 1 
374 1 292 1 52 1 
374 1 292 1 52 1 
297 1 292 1 52 1 
297 1 292 1 52 1 
297 1 292 1 52 1 
292 1 52 1 
320 1 167 1 
99 2 264 2 152 3 23 3 26 1 354 1 334 1 300 5 285 1 71 1 343 2 77 1 258 1 371 2 261 2 145 4 60 2 275 1 114 1 
99 2 264 1 258 1 152 2 88 1 23 2 26 1 354 1 300 3 275 1 285 1 71 1 77 1 
99 1 264 2 160 1 152 1 66 1 23 1 309 1 354 1 300 3 343 1 371 1 261 1 145 2 60 1 234 1 314 1 
99 1 264 6 152 1 66 2 23 4 309 2 225 1 354 2 300 10 41 2 188 1 10 2 312 1 234 2 314 2 
66 2 23 8 309 2 26 1 334 2 354 3 285 1 71 2 258 1 261 2 145 4 51 1 10 2 312 1 314 2 99 5 264 10 152 7 300 18 77 1 343 2 371 2 41 2 60 2 188 1 275 2 234 2 114 2 192 1 
264 1 41 1 300 1 
23 1 10 1 300 1 
99 2 160 1 264 3 132 1 152 2 66 1 23 2 309 1 354 1 300 5 343 1 371 1 145 2 261 1 60 1 234 1 314 1 
66 4 23 7 309 4 354 4 145 2 261 1 10 2 312 1 314 4 99 2 264 11 152 2 364 1 339 1 225 1 300 18 303 1 343 1 371 1 80 1 324 1 41 2 60 1 188 1 234 4 112 1 
258 1 23 1 354 1 300 1 
99 1 264 2 152 2 23 1 334 1 300 3 285 1 71 1 343 1 77 1 371 1 261 1 145 2 60 1 51 1 275 1 114 1 
99 2 264 2 152 3 23 2 354 2 334 1 300 4 71 1 14 1 258 1 275 1 234 1 
364 1 23 1 354 1 300 1 343 1 371 1 261 1 145 2 60 1 314 1 
99 1 264 2 152 1 364 1 66 1 23 1 309 1 354 1 300 3 343 1 371 1 261 1 145 2 60 1 234 1 314 1 
99 1 264 2 152 2 364 1 23 1 334 1 300 3 71 1 343 3 219 1 371 3 261 3 145 6 60 3 51 1 275 1 114 1 
160 1 23 5 354 2 334 3 285 1 71 2 219 1 258 1 145 8 261 4 51 1 10 1 99 3 264 6 73 1 152 6 364 1 225 1 300 11 14 1 343 4 77 1 371 4 41 1 60 4 234 1 275 2 114 1 
66 2 23 4 309 2 354 2 145 2 261 1 10 1 314 2 99 1 264 6 152 1 364 1 339 1 225 1 300 10 303 1 343 1 371 1 80 1 324 1 41 1 60 1 112 1 234 2 
160 1 66 2 23 4 309 2 354 2 145 4 261 2 10 1 314 2 99 1 264 6 152 1 364 1 339 1 225 1 300 10 303 1 343 2 371 2 80 1 324 1 41 1 60 2 112 1 234 2 
160 1 66 4 23 9 309 4 26 1 354 5 285 1 71 1 258 1 145 6 261 3 10 2 312 1 314 4 99 4 264 13 152 4 364 1 339 1 225 1 300 22 77 1 303 1 343 3 371 3 80 1 324 1 41 2 60 3 188 1 275 1 234 4 112 1 114 1 
160 1 66 4 23 7 309 4 354 4 145 4 261 2 10 2 312 1 314 4 99 2 264 11 152 2 364 1 339 1 225 1 300 18 303 1 343 2 371 2 80 1 324 1 41 2 60 2 188 1 234 4 112 1 
66 2 23 4 309 2 354 2 145 2 261 1 10 1 314 2 99 1 264 6 152 1 364 1 339 1 225 1 300 10 303 1 343 1 371 1 80 1 324 1 41 1 60 1 112 1 234 2 
66 4 23 7 309 4 354 4 145 2 261 1 10 2 312 1 314 4 99 2 264 11 152 2 364 1 339 1 225 1 300 18 303 1 343 1 371 1 80 1 324 1 41 2 60 1 188 1 234 4 112 1 
160 1 66 4 23 7 309 4 354 4 145 6 261 3 10 2 312 1 314 4 99 2 264 12 152 2 364 1 339 1 225 1 300 19 303 1 343 3 371 3 80 1 324 1 41 2 60 3 188 1 234 4 112 1 114 1 
66 1 23 2 309 1 354 1 219 1 145 4 261 2 10 1 312 1 314 1 99 1 264 4 152 1 364 1 225 1 300 6 303 1 343 2 371 2 41 2 60 2 234 1 
99 4 264 2 152 7 23 4 26 1 334 3 354 3 300 6 285 1 71 2 14 1 77 1 258 2 234 1 275 2 
66 1 23 2 309 1 354 1 219 1 145 4 261 2 10 1 312 1 314 1 99 1 264 4 152 1 364 1 225 1 300 6 303 1 343 2 371 2 41 2 60 2 234 1 
21 1 367 1 211 1 301 1 199 1 208 1 150 1 
177 1 21 1 213 1 222 1 367 1 181 1 301 1 208 1 170 1 211 1 199 1 150 1 
178 1 88 1 141 1 273 1 19 1 243 1 119 1 111 1 277 1 344 1 64 1 
178 1 55 1 367 2 141 1 283 1 333 1 243 1 301 1 28 1 344 1 373 1 269 1 211 2 19 1 273 1 111 1 199 1 64 1 
251 1 308 1 141 1 333 2 283 1 28 1 124 2 199 1 178 1 53 1 55 1 204 1 366 1 367 2 301 2 344 2 373 1 269 2 270 1 211 2 273 1 19 1 111 3 64 1 
251 1 308 1 141 1 333 2 283 1 28 1 124 2 294 1 199 1 178 1 53 1 204 1 366 1 367 2 301 2 344 2 373 1 269 2 270 1 211 2 273 1 19 1 111 3 64 1 
308 1 351 1 2 2 141 1 333 1 283 1 91 2 49 1 124 1 291 1 131 1 178 1 53 1 367 1 134 1 301 1 344 1 227 1 228 1 105 1 185 1 40 1 270 1 269 1 211 1 273 1 19 1 111 4 233 1 249 1 64 1 377 1 
308 1 351 1 2 2 141 1 333 1 283 1 91 2 49 1 124 1 178 1 53 1 367 1 134 1 301 1 344 1 227 1 228 1 105 1 185 1 40 1 270 1 269 1 211 1 273 1 19 1 111 4 233 1 235 1 249 1 64 1 377 1 
178 1 141 1 273 1 19 1 27 1 64 1 
174 1 178 6 202 1 180 1 223 1 207 1 239 1 252 1 353 1 141 3 243 2 27 1 69 1 344 2 230 1 269 1 326 1 19 7 273 2 111 3 64 7 
90 1 141 1 283 1 333 1 334 1 285 1 145 4 199 1 98 1 336 1 295 1 99 4 55 1 152 5 102 2 301 1 300 7 14 1 343 2 344 1 60 2 211 2 19 1 61 2 111 1 64 1 251 1 350 1 23 4 354 3 26 1 28 1 71 2 168 1 258 2 124 1 261 2 178 1 264 3 363 1 367 2 369 1 77 1 230 1 371 2 373 1 269 1 273 1 234 1 275 2 
1 1 2 3 92 1 91 3 50 2 122 1 7 1 178 1 201 1 299 2 243 1 134 1 12 1 58 1 227 1 38 1 184 2 185 2 231 1 18 1 19 1 248 2 111 2 233 1 235 1 249 1 377 1 64 1 
174 1 178 2 327 1 141 2 134 1 27 1 344 1 230 1 269 1 19 2 273 1 111 2 64 2 
178 4 141 1 243 1 119 1 121 1 182 1 344 1 230 1 19 4 273 1 277 1 111 1 64 4 
178 2 53 1 361 1 203 1 202 1 223 1 141 2 344 1 16 1 269 1 19 2 273 1 111 1 64 2 
178 1 256 1 117 1 56 1 141 1 273 1 19 1 243 1 195 1 64 1 
178 2 252 1 141 1 344 1 230 1 307 1 326 1 19 2 273 1 111 1 64 2 
178 4 53 1 141 2 353 1 243 1 119 1 69 1 121 1 344 2 230 1 326 1 19 5 273 2 277 1 111 3 64 5 
178 4 53 1 141 2 353 1 243 1 119 1 121 1 344 2 230 1 158 1 326 1 19 5 273 2 277 1 111 3 64 5 
178 1 367 2 141 1 283 1 333 1 243 1 301 1 28 1 344 1 373 1 269 1 211 2 19 1 273 1 294 1 111 1 199 1 64 1 
174 1 178 1 53 1 202 1 223 1 239 1 141 2 344 1 269 1 19 1 273 1 111 1 64 1 
151 1 164 1 139 1 57 1 199 1 
151 2 238 1 204 1 164 2 366 1 2 2 91 2 57 1 245 1 227 1 122 1 124 1 139 2 241 1 233 1 97 1 199 1 377 1 173 1 
151 1 164 1 267 1 367 1 142 1 57 1 301 1 211 1 247 1 
97 1 57 1 245 1 
88 1 94 1 376 1 
0 1 288 1 279 1 94 1 194 1 376 1 
237 1 0 1 115 1 
116 1 0 3 161 1 279 1 163 1 194 1 47 2 288 3 289 1 94 1 376 1 
0 2 288 2 279 1 94 1 194 1 89 1 376 1 130 1 
0 1 362 1 279 1 194 1 117 1 56 1 59 1 288 1 8 1 289 1 246 1 
0 1 288 1 279 1 289 1 94 1 194 1 
0 1 8 1 288 1 279 1 289 1 94 1 194 1 376 1 
175 1 0 2 279 2 194 2 48 1 76 1 288 2 289 1 94 1 
0 3 279 1 194 1 165 1 89 2 59 1 183 1 288 3 8 1 289 1 210 1 94 1 376 1 
0 2 279 1 194 1 117 1 89 1 56 2 195 1 288 2 218 1 289 1 246 1 94 1 81 1 376 1 
0 4 279 2 194 2 89 2 59 1 288 4 8 1 289 1 210 1 94 1 129 1 376 1 130 1 
0 1 288 1 279 1 289 1 94 1 194 1 376 1 
116 1 0 4 163 1 279 1 22 1 194 1 89 2 47 1 59 1 288 4 8 1 210 1 94 2 376 2 
0 2 338 1 54 1 279 1 194 1 89 1 288 2 289 1 94 1 107 1 376 1 
116 2 0 3 163 1 279 1 194 1 120 1 47 2 288 3 289 1 94 1 376 1 
6 2 8 2 340 1 221 1 
0 1 288 1 279 1 289 1 194 1 148 1 
0 2 288 2 279 1 289 1 94 1 194 1 165 1 89 1 376 1 
253 1 
0 1 288 1 279 1 289 1 94 1 194 1 376 1 
0 3 288 3 279 1 289 1 94 1 194 1 165 1 89 1 376 1 47 1 
8 1 210 1 22 1 59 1 
94 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 214 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 175 76 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 214 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 214 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 214 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 214 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 214 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 214 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 214 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z | OPERATOR | 5298 | && -> ||
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1394 | 1 -> -1
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | CONSTANT | 4016 | 1 -> -1
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1058 | = null
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 1370 | = null
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1037 | 12 -> -1
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
2 1 3 9 354 1 332 1 80 3 51 5 126 2 266 1 293 1 217 1 11 2 268 1 129 1 86 2 15 2 65 4 179 9 342 1 318 2 181 2 367 2 92 1 138 6 327 1 141 1 75 1 42 1 167 1 
2 1 3 9 354 1 332 1 80 3 51 5 126 2 266 1 293 1 217 1 268 1 11 2 129 1 15 2 86 2 65 4 179 9 342 1 318 2 181 2 367 2 92 1 138 6 327 1 141 1 75 1 42 1 167 1 
2 1 3 10 354 1 332 1 80 4 51 6 126 2 266 1 293 1 217 1 268 1 11 2 129 1 15 2 86 2 65 5 179 10 342 1 318 2 181 2 367 2 92 1 138 7 327 1 141 1 75 1 42 1 167 1 
2 1 3 7 354 1 332 1 80 2 51 4 126 2 266 1 293 1 217 1 268 1 11 1 129 1 15 2 86 2 65 3 179 7 342 1 318 2 181 2 367 2 92 1 138 4 327 1 141 1 75 1 42 1 
3 4 342 1 181 1 332 1 80 1 367 1 51 3 126 1 138 3 11 2 141 1 86 1 15 1 75 1 42 1 167 1 65 2 179 4 
3 2 354 1 342 1 181 1 318 1 51 1 367 1 92 1 126 1 370 1 141 1 86 1 32 1 42 1 22 1 179 2 
3 3 342 1 318 1 367 2 80 1 51 2 138 1 217 1 141 1 86 2 42 1 65 1 179 3 
3 9 342 1 181 1 318 1 332 1 51 5 367 2 69 1 80 3 325 1 126 1 138 7 293 1 217 1 11 2 141 1 129 1 15 1 86 2 75 1 42 1 167 1 65 4 179 9 
3 9 342 1 181 1 318 1 332 1 51 5 367 2 69 1 80 3 325 1 126 1 138 7 293 1 217 1 11 2 141 1 129 1 15 1 86 2 75 1 42 1 167 1 65 4 179 9 
214 1 337 1 286 1 
347 1 337 1 184 2 
70 2 230 2 72 1 320 2 239 2 120 2 132 2 102 1 
1 1 169 1 239 2 291 1 262 1 102 1 9 1 312 1 202 1 267 1 218 1 220 1 152 1 62 1 132 2 133 1 223 1 319 1 206 1 320 3 89 1 39 2 207 1 324 1 252 1 93 1 137 1 278 2 70 2 230 2 72 1 191 1 236 2 238 2 120 3 119 2 259 1 
70 1 230 1 198 1 72 1 320 1 239 1 120 1 132 1 221 1 229 1 
275 1 320 1 200 1 292 1 30 1 346 1 229 1 70 1 371 1 233 1 337 1 166 1 286 1 120 1 
275 1 239 1 320 1 200 2 30 1 229 1 70 1 230 1 371 1 233 2 337 1 166 1 286 1 132 1 120 1 
233 1 200 1 183 1 111 1 63 1 
40 1 233 2 337 1 200 2 286 1 183 1 111 1 125 1 
233 1 200 1 111 1 
198 1 239 1 320 1 200 1 183 1 229 1 70 1 230 1 72 1 233 1 57 1 132 1 120 1 221 1 
337 1 
40 1 233 2 337 1 200 2 286 1 183 1 111 1 193 1 
209 1 233 2 360 1 200 2 183 1 307 1 150 1 175 1 76 1 
214 1 102 1 
320 2 239 1 90 1 102 2 70 2 230 1 120 2 132 1 288 1 
162 1 77 1 349 1 
36 1 206 1 320 1 39 1 291 1 262 1 93 1 137 1 102 1 202 1 267 1 236 1 62 1 120 1 259 1 119 1 
206 1 239 1 320 2 39 1 262 1 291 1 116 1 137 1 93 1 70 1 162 1 56 1 230 1 202 1 267 1 236 1 62 1 120 2 259 1 119 1 
70 3 230 3 320 3 239 3 116 1 132 1 120 3 102 1 
70 1 230 1 198 1 320 1 239 1 120 1 229 1 
70 1 230 1 320 1 239 1 90 1 120 1 132 1 229 1 288 1 
1 1 169 1 239 3 200 1 262 1 291 1 30 1 333 1 102 1 312 1 202 1 56 1 267 1 218 1 152 1 62 1 132 2 133 1 275 1 319 1 206 1 320 4 89 1 39 1 207 1 90 1 116 1 137 1 93 1 278 2 229 1 70 3 230 3 371 1 348 1 72 1 233 1 166 1 191 1 236 1 238 1 120 4 259 1 119 1 
70 2 230 1 317 1 320 2 239 1 116 1 120 2 102 1 346 1 
275 1 239 3 320 3 200 1 90 1 116 2 30 1 333 1 229 1 70 3 56 1 230 3 371 1 233 1 337 1 166 1 257 1 132 1 120 3 
239 2 320 2 116 1 90 1 70 2 230 2 162 1 349 1 132 1 120 2 
206 1 320 1 39 1 291 1 262 1 93 1 137 1 102 1 202 1 267 1 236 1 62 1 120 1 259 1 119 1 
206 1 320 1 39 1 291 1 262 1 137 1 102 1 267 1 296 1 236 1 62 1 120 1 259 1 119 1 194 1 
0 1 1 1 77 2 196 1 169 1 199 1 123 1 290 1 28 1 264 1 6 1 312 1 220 2 133 2 319 1 157 1 89 1 207 1 20 1 278 2 162 2 232 1 349 2 238 4 
70 1 230 1 320 1 239 1 166 1 120 1 229 1 185 1 
317 1 239 4 320 5 116 2 90 1 346 1 102 1 70 5 230 4 56 1 187 1 120 5 132 1 35 1 
70 2 230 2 198 1 320 2 239 2 120 2 185 1 229 1 
351 1 222 1 
351 1 222 1 
276 1 112 1 
276 1 112 1 
276 1 112 1 
59 1 351 1 222 1 
59 1 351 1 222 1 
211 1 351 1 222 1 
298 1 71 1 276 1 112 1 351 2 117 1 222 2 
59 1 351 1 222 1 
155 1 351 1 222 1 
155 1 351 1 222 1 
155 1 351 1 222 1 
298 1 224 2 331 2 200 2 228 1 127 1 139 2 233 2 73 2 284 2 336 1 337 1 270 3 177 1 351 2 145 1 64 1 17 1 222 2 
331 1 239 2 48 1 200 1 102 1 10 1 106 1 270 1 108 1 14 1 222 1 224 1 320 2 225 1 160 1 228 1 70 2 230 2 233 1 284 1 73 1 351 1 211 1 120 2 
181 1 15 1 126 1 
181 1 32 1 126 1 
37 1 181 3 190 1 15 2 32 1 363 1 
181 2 190 1 15 1 32 1 363 1 376 1 
181 2 190 2 15 1 32 1 363 1 
198 1 356 1 239 1 200 5 27 1 101 1 28 1 150 1 82 1 57 1 58 2 337 1 108 1 360 1 339 1 111 1 132 1 221 1 180 2 320 1 182 1 157 1 183 4 184 1 229 1 186 1 70 1 230 1 40 1 161 1 95 1 72 1 209 1 233 5 286 1 352 1 120 1 
198 1 239 1 200 5 357 1 27 1 101 1 28 1 150 1 82 1 57 1 58 2 337 1 108 1 360 1 339 1 361 1 111 3 63 2 33 2 132 1 221 1 320 1 182 1 157 1 183 4 184 1 229 1 186 1 70 1 40 1 230 1 95 1 209 1 72 1 233 5 286 1 352 1 120 1 
356 1 199 1 200 3 27 1 307 1 28 1 264 1 150 1 337 3 58 2 360 1 108 1 339 3 180 1 182 2 157 1 183 2 184 4 186 2 347 2 161 1 209 1 95 1 233 3 286 1 352 1 
356 1 199 2 49 1 200 4 27 1 307 1 28 2 264 2 150 1 269 1 337 4 58 4 360 1 108 2 339 5 180 2 182 4 157 2 183 3 184 7 186 4 347 3 161 1 209 1 95 1 233 4 235 1 286 1 352 2 
214 1 297 1 
171 1 62 1 
25 1 
206 1 62 1 
267 1 206 1 62 3 297 2 8 1 104 1 
267 1 206 1 62 1 
283 1 62 1 
133 3 43 1 196 2 199 1 47 1 157 1 251 2 227 2 309 1 53 1 6 4 282 1 105 1 359 1 220 3 61 2 238 6 
133 3 43 1 196 2 199 1 47 1 157 1 251 2 227 2 309 1 53 1 6 4 282 1 105 1 359 1 220 3 61 2 238 6 
133 3 43 1 196 2 199 1 47 1 157 1 251 2 227 2 309 1 53 1 6 4 282 1 105 1 359 1 220 3 61 2 238 6 260 1 
43 2 196 5 47 1 147 3 199 4 50 1 243 4 28 3 29 1 309 1 264 3 53 1 6 11 312 1 105 2 220 16 359 2 338 1 60 1 247 1 61 3 133 16 319 1 89 1 157 4 251 3 207 1 227 6 278 2 282 1 143 1 238 32 352 3 329 1 
43 1 196 3 199 1 47 1 50 1 6 4 53 1 7 1 312 2 105 1 220 4 359 1 61 2 133 4 319 2 157 1 89 2 251 2 207 2 227 1 91 1 278 4 282 1 238 8 
3 2 330 1 305 1 291 1 51 1 31 1 126 1 313 1 314 1 107 1 15 1 86 1 32 1 66 1 179 2 37 1 342 1 318 1 181 2 39 1 367 1 136 1 137 1 138 1 141 1 234 1 118 1 236 1 42 1 119 1 
3 3 330 1 305 1 291 1 51 1 174 1 31 1 126 1 313 1 314 1 15 1 86 1 32 1 316 1 66 1 179 3 37 1 342 1 318 1 181 2 19 1 39 1 367 1 136 1 137 1 138 2 234 1 236 1 42 1 119 1 
3 2 330 1 305 1 291 1 51 1 31 1 126 1 313 1 15 1 32 1 316 1 66 1 179 2 37 1 342 1 318 1 181 2 19 1 39 1 137 1 138 2 234 1 236 1 42 1 119 1 
3 1 355 1 305 2 291 1 173 1 174 1 31 2 313 2 85 1 86 1 62 1 179 1 249 1 318 2 206 1 39 1 367 1 300 1 137 1 236 1 374 1 119 1 259 1 
3 1 330 1 305 1 291 1 31 1 126 1 313 1 314 1 15 1 86 1 32 1 66 1 179 1 37 1 318 1 181 2 19 1 39 1 367 1 136 1 137 1 141 1 234 1 118 1 236 1 119 1 
289 1 
79 1 200 2 291 2 27 1 150 1 82 1 335 1 267 1 58 1 360 1 85 1 339 1 111 2 62 2 67 1 87 1 249 1 206 2 39 2 137 3 40 1 209 1 233 2 256 1 164 1 165 1 236 2 119 2 259 2 
100 1 358 1 200 3 292 1 30 1 245 1 315 2 111 2 275 1 341 1 320 1 346 1 229 1 70 1 40 1 94 1 371 1 233 3 166 1 193 1 120 1 24 1 
358 1 200 3 292 1 30 1 245 1 315 3 337 1 111 1 275 1 341 1 320 1 344 1 346 1 229 1 70 1 94 1 40 1 371 1 233 3 166 1 286 1 193 1 120 1 24 1 
100 1 358 1 200 3 292 1 30 1 245 1 315 3 337 1 111 2 275 1 341 1 320 1 344 1 346 1 229 1 70 1 40 1 94 1 371 1 254 1 233 3 166 1 286 1 193 1 120 1 24 1 
44 1 100 4 200 5 4 1 292 1 150 1 245 1 337 5 58 1 13 2 339 1 111 7 341 1 344 4 345 1 346 1 70 1 347 2 209 1 254 4 166 1 350 2 258 1 120 1 24 1 26 1 124 2 358 1 30 1 310 1 82 1 265 1 315 6 360 1 275 1 320 1 229 1 40 3 94 1 371 1 233 5 286 5 237 2 193 1 
100 2 200 4 4 1 292 1 150 1 245 1 203 1 58 1 337 2 13 2 339 1 111 4 341 1 344 2 345 1 346 1 70 1 347 2 209 1 254 2 166 1 350 2 120 1 24 1 124 2 358 1 30 1 82 1 315 4 360 1 275 1 320 1 184 2 229 1 94 1 40 2 371 1 233 4 286 1 237 2 
44 1 100 2 124 2 4 1 358 1 200 4 292 1 30 1 310 1 150 1 82 1 245 1 337 1 58 1 315 4 13 2 360 1 339 1 111 4 275 1 341 1 320 1 344 2 345 1 346 1 229 1 70 1 40 2 347 2 94 1 209 1 371 1 254 2 233 4 166 1 286 1 350 2 237 2 258 1 120 1 24 1 
44 1 100 2 124 2 4 1 358 1 200 4 292 1 30 1 310 1 150 1 82 1 245 1 337 1 58 1 315 4 13 2 360 1 339 1 111 4 275 1 341 1 320 1 344 2 345 1 346 1 229 1 70 1 40 2 347 2 94 1 209 1 371 1 254 2 233 4 166 1 286 1 350 2 237 2 258 1 120 1 24 1 
353 1 100 2 240 1 124 2 4 1 358 1 200 4 292 1 30 1 150 1 82 1 245 1 337 1 58 1 315 4 360 1 339 1 111 4 153 1 275 1 299 2 341 1 320 1 38 2 344 2 184 2 346 1 229 1 70 1 40 2 94 1 209 1 371 1 254 2 233 4 166 1 286 1 237 2 258 1 120 1 24 1 
44 1 26 1 100 3 124 2 4 1 358 1 200 4 292 1 150 1 30 1 310 1 82 1 245 1 337 1 58 1 315 5 13 2 360 1 339 1 111 5 275 1 341 1 320 1 344 3 345 1 346 1 229 1 70 1 40 2 347 2 94 1 209 1 371 1 254 3 233 4 166 1 286 1 350 2 237 2 258 1 120 1 24 1 
44 1 26 1 100 3 124 2 4 1 358 1 200 4 292 1 150 1 30 1 310 1 82 1 245 1 337 1 58 1 315 5 13 2 360 1 339 1 111 5 275 1 341 1 320 1 344 3 345 1 346 1 229 1 70 1 40 2 347 2 94 1 209 1 371 1 254 3 233 4 166 1 286 1 350 2 237 2 258 1 120 1 24 1 
100 2 124 2 4 1 358 1 200 4 292 1 150 1 30 1 82 1 245 1 203 1 337 1 58 1 315 4 360 1 339 1 111 4 153 1 275 1 299 2 341 1 320 1 38 2 344 2 184 2 346 1 229 1 70 1 40 2 94 1 209 1 371 1 254 2 233 4 166 1 286 1 237 2 120 1 24 1 
1 1 282 1 312 1 169 1 214 1 319 1 47 1 123 1 89 1 207 1 278 2 
1 1 196 1 77 11 169 2 147 3 199 1 243 3 148 1 28 2 29 1 264 1 6 2 102 1 9 1 312 2 220 8 271 1 152 1 60 1 133 6 319 2 89 2 157 2 207 2 227 1 278 4 369 1 162 11 210 1 349 4 238 14 352 2 146 1 
1 1 169 1 239 1 262 1 291 1 102 1 9 1 202 1 312 1 56 1 267 1 220 1 152 1 62 1 36 1 133 1 206 1 319 1 320 2 39 1 89 1 207 1 116 1 137 1 93 1 278 2 369 1 70 1 230 1 255 1 163 1 189 1 349 1 236 1 119 1 259 1 120 2 238 2 
1 3 197 1 196 4 47 1 199 3 239 1 291 2 149 2 53 1 6 8 102 2 9 1 56 1 202 2 152 1 61 2 62 2 206 2 156 2 19 1 68 1 157 3 251 2 207 3 116 1 70 1 162 6 349 6 119 3 259 1 120 3 352 2 77 6 169 3 262 2 28 2 264 2 312 3 218 2 267 2 220 9 34 2 133 10 319 3 320 3 39 3 89 3 227 4 93 2 137 2 278 6 280 1 369 1 282 1 230 1 236 3 96 2 238 19 
1 2 169 2 123 1 239 1 291 2 244 1 9 1 312 2 84 1 107 1 220 1 85 1 152 1 204 1 62 3 249 1 133 1 319 2 206 2 19 1 320 1 39 8 89 2 207 2 208 1 116 1 253 1 137 2 252 2 278 4 70 1 230 1 140 1 236 8 120 1 119 7 259 2 238 2 195 1 
1 1 196 1 77 1 169 1 239 1 199 1 28 1 264 1 6 1 312 1 220 1 132 1 133 2 319 1 320 1 89 1 157 1 207 1 90 1 278 2 369 1 70 1 162 1 230 1 349 1 373 1 120 1 352 1 238 3 
1 1 77 1 169 1 319 1 123 1 89 1 157 1 207 1 20 1 28 1 227 1 6 1 278 2 162 1 312 1 349 1 220 2 238 2 
1 1 0 1 133 2 196 1 77 1 169 1 319 1 123 1 199 1 89 1 207 1 264 1 6 1 278 2 162 1 312 1 349 1 238 2 
1 1 77 2 196 1 169 1 123 1 199 1 28 1 264 1 6 2 312 1 220 2 133 2 319 1 157 1 89 1 207 1 227 1 278 2 162 2 349 2 352 1 238 4 
1 1 77 1 169 1 319 1 89 1 157 1 207 1 20 1 28 1 227 1 6 1 278 2 162 1 312 1 349 1 220 2 204 1 238 2 
1 1 0 1 133 2 196 1 77 1 169 1 319 1 199 1 89 1 207 1 264 1 6 1 278 2 162 1 312 1 349 1 204 1 238 2 
1 1 77 2 196 1 169 1 199 1 28 1 264 1 6 2 312 1 220 2 204 1 133 2 319 1 157 1 89 1 207 1 227 1 278 2 162 2 349 2 352 1 238 4 
1 1 77 2 196 1 169 1 199 1 28 1 264 1 6 2 312 1 220 2 133 2 319 1 157 1 89 1 207 1 227 1 278 2 162 2 349 2 238 4 352 1 
1 1 169 1 262 1 291 1 102 1 9 1 202 1 312 1 267 1 218 1 220 1 152 1 62 1 133 1 206 1 319 1 320 1 39 1 89 1 207 1 137 1 93 1 278 2 236 1 238 2 119 1 259 1 120 1 
1 1 169 1 262 1 291 1 102 1 9 1 312 1 267 1 220 1 296 1 152 1 62 1 133 1 206 1 319 1 320 1 39 1 89 1 207 1 137 1 278 2 236 1 238 2 194 1 119 1 259 1 120 1 168 1 
1 1 77 2 196 1 169 1 199 1 28 1 264 1 6 2 312 1 220 2 133 2 319 1 157 1 89 1 207 1 227 1 278 2 369 1 162 2 349 2 352 1 238 4 
1 1 196 1 77 2 169 1 199 1 262 1 291 1 28 1 149 1 264 1 6 2 202 1 312 1 267 1 218 1 220 2 107 1 62 1 133 2 206 1 319 1 320 1 157 1 39 1 89 1 207 1 227 1 137 1 93 1 278 2 162 2 349 2 236 1 238 4 119 1 120 1 352 1 
1 1 77 1 169 1 199 1 239 1 28 1 264 1 6 1 103 1 312 1 220 2 132 1 133 1 319 1 320 1 89 1 157 1 207 1 227 1 90 1 278 2 369 1 70 1 230 1 162 1 349 1 120 1 352 1 238 3 
196 3 147 1 199 3 241 1 306 1 52 2 243 2 28 3 29 1 264 3 6 6 55 1 312 2 220 9 273 1 60 1 133 10 88 2 319 2 89 2 157 3 207 2 227 3 91 1 326 1 278 4 301 1 368 1 238 19 352 3 
196 2 199 2 147 2 241 2 306 1 50 2 52 1 243 2 28 3 264 2 6 4 312 3 220 14 60 2 362 1 133 12 18 1 88 4 319 3 89 3 157 3 207 3 227 2 91 1 326 1 278 6 301 2 368 1 281 1 21 1 188 1 144 1 238 26 352 3 
196 5 47 1 147 3 199 5 241 2 306 1 50 1 52 1 243 4 28 4 29 1 264 4 53 1 6 10 312 3 220 20 273 1 60 3 61 2 362 1 133 23 18 1 88 4 319 3 89 3 157 5 251 2 207 3 227 5 91 1 326 1 278 6 301 1 368 1 282 1 281 1 21 1 188 1 144 1 238 43 352 4 213 1 
196 5 47 1 147 3 199 4 241 2 306 1 50 2 52 1 243 4 28 4 29 1 264 3 53 1 6 8 312 4 220 19 273 1 60 3 61 2 362 1 133 19 18 1 88 4 319 4 89 4 157 5 251 2 207 4 227 3 91 1 326 1 278 8 301 1 368 1 282 1 281 1 21 1 188 1 144 1 238 38 352 4 213 1 
196 8 47 1 147 4 199 8 241 1 306 1 50 1 52 1 243 4 28 7 29 2 264 7 53 1 6 15 312 2 220 26 60 2 61 2 362 1 133 26 18 1 88 4 319 2 89 2 157 8 251 2 207 2 227 7 91 1 326 1 278 4 301 1 368 1 282 1 281 1 21 1 188 1 144 1 238 52 352 7 146 2 
298 1 114 1 224 1 331 1 284 1 73 1 336 1 351 1 145 1 222 1 
211 1 160 1 
170 1 224 1 331 1 284 1 73 1 12 1 272 1 351 1 222 1 
298 1 224 1 331 1 200 1 228 1 127 1 139 1 233 1 73 1 284 1 336 1 337 1 270 2 351 1 145 1 64 1 17 1 222 1 
298 1 224 1 331 1 200 1 228 1 127 1 139 1 233 1 73 1 284 1 336 1 337 1 270 2 351 1 145 1 64 1 17 1 222 1 
298 1 224 1 331 1 200 1 228 1 127 1 139 1 233 1 73 1 284 1 336 1 337 1 270 2 351 1 145 1 64 1 17 1 222 1 
59 1 246 1 117 1 
59 1 246 1 117 1 
155 1 375 1 
155 1 375 1 117 1 
106 1 14 1 
331 1 239 2 48 1 200 1 102 1 10 1 106 1 270 1 108 1 14 1 64 1 222 1 224 1 320 2 225 1 183 1 160 1 70 2 230 2 139 1 233 1 41 1 284 1 73 1 351 1 211 1 120 2 
59 1 246 1 
155 1 375 1 117 1 
1 1 169 1 291 1 9 1 312 1 84 1 220 1 131 1 152 1 62 1 154 1 133 1 135 1 206 1 319 1 320 2 343 1 39 2 89 1 207 1 137 1 253 1 252 2 278 2 369 1 70 2 74 1 236 2 120 2 238 2 119 2 
37 1 330 1 181 2 19 1 39 2 321 1 291 1 137 1 126 1 83 1 176 1 313 1 314 1 234 1 107 1 15 1 32 1 236 2 119 2 
37 1 330 1 181 2 19 1 39 1 321 1 291 1 137 1 126 1 372 1 313 1 314 1 234 1 15 1 32 1 236 1 119 1 
206 1 39 1 291 1 201 1 173 1 137 1 176 1 313 1 85 1 236 1 62 1 259 1 119 1 249 1 
37 1 330 1 181 2 19 1 39 1 321 1 291 1 137 1 126 1 83 1 176 1 313 1 314 1 234 1 15 1 32 1 236 1 119 1 
340 1 
214 1 304 1 285 1 
200 1 150 1 82 1 58 1 337 2 360 1 13 1 339 1 111 1 184 1 345 1 347 1 40 1 209 1 233 1 286 1 350 1 
199 2 200 5 291 3 150 4 8 1 107 1 337 8 58 8 109 1 151 2 339 9 110 1 111 5 248 2 62 10 297 2 205 2 206 3 250 2 156 2 157 2 115 1 302 2 347 6 209 4 304 1 259 1 119 3 352 2 212 2 261 2 171 3 27 2 308 1 28 2 30 2 264 2 82 4 267 3 360 4 87 1 364 2 182 6 39 3 184 12 137 4 186 6 231 1 283 2 40 3 233 5 285 1 286 2 236 3 
147 1 199 2 200 1 27 1 243 1 28 2 150 2 264 2 82 2 54 1 337 5 58 5 360 2 339 8 111 1 60 1 248 2 362 1 87 1 18 1 205 1 182 5 157 2 184 6 186 5 281 1 40 1 347 3 209 2 21 1 233 1 142 1 188 1 286 2 352 2 
44 1 198 1 199 1 239 1 200 1 150 1 82 1 53 1 57 1 58 2 360 1 339 2 248 2 61 1 132 1 221 1 205 1 320 1 157 2 251 1 229 1 70 1 230 1 209 1 72 1 233 1 120 1 97 1 
150 1 82 1 209 1 304 1 58 1 337 1 360 1 285 1 286 1 339 1 
205 1 156 1 199 2 182 5 157 2 28 2 184 10 264 2 186 5 347 5 58 5 337 5 339 5 248 2 352 2 
40 1 233 1 337 1 200 1 286 1 111 1 
79 1 200 1 291 2 27 1 150 1 82 1 335 1 267 1 58 1 360 1 109 1 85 1 339 1 111 2 62 2 67 1 87 1 249 1 206 2 39 2 137 3 40 1 209 1 233 1 256 1 164 1 165 1 236 2 119 2 259 2 
1 1 169 1 239 2 291 1 262 1 102 1 202 1 312 1 218 1 267 1 152 1 62 1 132 2 133 1 319 1 206 1 320 3 89 1 39 1 207 1 93 1 137 1 278 2 70 2 230 2 72 1 191 1 236 1 238 1 119 1 259 1 120 3 
182 2 27 1 184 4 150 1 82 1 186 2 347 2 209 1 359 1 58 2 337 4 360 1 339 1 286 2 87 1 
98 1 224 1 284 1 
98 1 224 1 284 1 
224 1 46 1 106 1 284 1 145 1 
98 1 224 1 284 1 
121 1 224 1 284 1 
121 1 224 1 284 1 
121 1 224 1 284 1 
224 1 284 1 
351 1 222 1 
133 5 196 2 319 2 199 1 47 1 157 1 89 2 50 1 251 2 207 2 227 2 53 1 6 4 278 4 312 2 282 1 220 4 61 2 238 9 
282 1 214 1 47 1 
133 2 196 1 319 1 199 1 89 1 157 1 207 1 28 1 227 1 264 1 81 1 6 2 278 2 312 1 220 2 352 1 238 4 
133 4 196 1 199 1 147 1 157 1 243 2 28 1 29 1 227 1 264 1 6 2 220 3 60 1 238 7 352 1 
196 5 47 1 147 2 199 3 50 2 28 2 243 2 29 1 264 2 53 1 6 9 312 2 220 10 271 1 61 3 133 12 134 1 319 2 157 3 89 2 251 3 207 2 227 4 278 4 282 1 352 2 238 22 146 1 
133 1 243 1 238 1 
147 1 220 1 238 1 
133 3 196 2 319 1 156 1 199 1 89 1 157 1 207 1 28 1 227 1 81 1 264 1 6 3 278 2 312 1 220 3 238 6 352 1 
133 6 196 1 18 1 319 1 199 2 147 1 157 2 89 1 28 2 207 1 243 1 227 1 264 2 91 1 6 2 278 2 281 1 312 1 21 1 188 1 220 6 60 1 362 1 352 2 238 12 
133 2 196 1 199 1 157 1 251 1 53 1 6 1 220 2 61 1 238 4 
133 2 196 1 134 1 319 1 47 1 50 1 89 1 251 1 207 1 227 1 6 2 278 2 312 1 282 1 220 1 61 1 238 3 
133 3 196 2 199 1 157 1 251 2 6 2 53 1 220 2 61 2 238 5 97 1 
319 1 89 1 157 1 207 1 28 1 227 1 91 1 6 1 278 2 312 1 220 2 238 2 
133 2 196 1 319 1 199 1 89 1 157 1 207 1 28 1 227 1 264 1 91 1 6 2 278 2 312 1 220 2 352 1 238 4 
133 2 196 1 134 1 319 3 50 1 89 3 251 1 207 3 227 1 91 1 6 2 278 6 312 3 220 1 273 1 61 1 238 3 
196 6 47 1 147 3 199 5 50 2 243 4 28 3 29 1 81 1 264 3 53 2 6 12 312 5 220 16 247 1 60 1 273 1 61 3 133 19 134 1 319 5 89 5 157 5 251 3 207 5 227 6 91 1 278 10 282 1 143 1 238 35 352 3 329 1 
196 2 199 1 147 1 47 1 243 1 6 2 53 1 312 1 220 3 60 1 61 2 133 4 18 1 319 1 157 1 89 1 251 2 207 1 91 1 278 2 282 1 238 7 
196 2 199 1 47 1 147 1 243 2 28 1 29 1 81 1 53 1 6 3 312 2 220 5 60 1 61 2 133 5 18 1 319 2 89 2 157 2 251 2 207 2 227 1 91 1 278 4 282 1 238 10 352 1 
196 3 47 1 147 1 199 3 50 1 243 1 28 2 81 1 264 2 53 1 6 4 312 3 220 8 60 1 61 2 362 1 133 10 18 1 319 3 89 3 157 3 251 2 207 3 227 1 91 1 278 6 282 1 281 1 21 1 188 1 238 18 352 2 
196 3 47 1 147 1 199 2 50 1 243 1 28 2 81 1 264 1 53 1 6 6 312 3 220 9 60 1 61 2 362 1 133 7 18 1 319 3 89 3 157 3 251 2 207 3 227 3 91 1 278 6 282 1 281 1 21 1 188 1 238 16 352 2 
196 2 199 1 147 1 47 1 243 1 6 2 53 1 312 1 220 3 60 1 61 2 133 4 18 1 319 1 157 1 89 1 251 2 207 1 91 1 278 2 282 1 238 7 
133 6 196 1 18 1 319 1 199 2 147 1 157 2 89 1 28 2 207 1 243 1 227 1 264 2 91 1 6 2 278 2 281 1 312 1 21 1 188 1 220 6 60 1 362 1 352 2 238 12 
196 3 47 1 147 1 199 2 50 2 243 1 28 2 81 1 264 1 53 1 6 6 312 4 220 9 60 1 61 2 362 1 133 8 18 1 319 4 89 4 157 3 251 2 207 4 227 3 91 1 278 8 282 1 281 1 21 1 188 1 238 17 352 2 
196 3 147 1 199 2 50 2 243 1 28 3 264 2 6 6 312 4 220 9 60 1 273 1 362 1 133 7 18 1 319 4 89 4 157 3 207 4 227 3 91 1 278 8 281 1 21 1 188 1 238 16 352 3 
133 4 196 2 199 1 47 2 157 1 251 2 227 2 6 4 53 1 282 1 220 3 61 2 238 7 
196 3 47 1 147 1 199 2 50 2 243 1 28 2 264 1 53 1 6 4 312 4 220 9 60 1 273 1 61 2 362 1 133 8 18 1 319 4 89 4 157 3 251 2 207 4 227 1 91 1 278 8 282 1 281 1 21 1 188 1 238 17 352 2 
70 1 317 1 320 1 366 1 120 1 102 1 346 1 
317 1 320 1 365 1 366 1 159 1 102 1 346 1 70 1 130 1 295 1 120 1 328 1 
214 1 39 1 236 1 119 1 259 1 249 1 
206 1 239 1 320 2 39 1 262 1 291 1 116 1 137 1 93 1 102 1 70 1 230 1 267 1 236 1 62 1 120 2 259 1 119 1 
275 1 364 1 206 2 239 2 320 2 39 1 262 1 291 1 116 1 137 1 93 1 102 1 229 1 70 2 283 1 230 1 267 2 166 1 110 1 236 1 62 3 120 2 119 1 
239 2 291 1 262 1 263 1 102 1 267 2 110 1 62 3 275 1 364 1 206 2 320 2 39 2 116 1 137 1 229 1 70 2 230 1 283 1 166 1 236 2 194 1 119 2 120 2 
364 1 206 1 99 1 171 1 200 2 39 3 291 1 263 1 30 1 137 1 283 1 267 1 233 2 337 1 286 1 110 1 236 3 111 1 62 4 259 1 119 3 297 1 16 1 
364 1 206 1 171 1 200 2 39 3 291 1 263 1 30 1 137 1 283 1 302 1 267 1 233 2 337 1 286 1 110 1 236 3 111 1 62 4 259 1 119 3 297 1 
39 1 291 1 236 1 137 1 119 1 244 1 
79 1 206 2 19 1 39 7 291 2 215 1 208 1 252 1 244 1 253 1 137 3 8 1 267 1 335 1 140 1 107 1 236 7 62 3 259 2 119 6 195 1 
1 2 196 2 169 2 199 1 47 1 239 1 262 1 291 1 149 1 53 1 6 2 102 2 312 2 202 1 267 1 218 1 220 2 107 1 61 2 62 1 133 3 206 1 319 2 320 2 343 1 157 1 89 2 39 1 251 2 207 2 116 1 137 1 93 1 278 4 369 1 70 1 282 1 230 1 236 1 96 1 238 5 120 2 119 1 
261 1 171 1 200 3 150 2 30 1 82 2 337 1 58 1 360 2 109 1 151 1 339 1 111 2 62 2 297 1 39 1 183 1 302 1 40 1 209 2 233 3 304 1 286 1 285 1 236 1 119 1 259 1 212 1 
206 1 39 2 291 1 115 1 244 1 137 2 8 1 267 1 107 1 236 2 62 2 119 2 297 1 
206 1 39 4 291 1 263 1 137 1 279 1 107 1 85 1 236 4 62 1 259 1 119 4 249 1 
197 1 79 1 206 1 39 2 291 1 137 2 267 1 335 1 256 1 110 1 236 2 62 1 119 2 67 1 
330 1 181 1 39 1 291 1 32 1 236 1 137 1 119 1 259 1 126 1 
135 1 206 1 19 1 39 2 291 1 253 1 137 1 107 1 236 2 62 1 119 2 
206 2 39 5 291 2 208 1 253 1 137 2 279 1 107 1 85 1 110 1 236 5 62 3 259 1 119 4 249 1 195 1 
206 2 39 5 291 2 242 1 208 1 253 1 137 2 279 1 107 1 85 1 110 1 236 5 62 3 259 1 119 4 249 1 
206 1 239 1 320 2 39 1 262 1 291 1 116 1 137 1 102 1 70 1 230 1 267 1 236 1 62 1 120 2 259 1 119 1 194 1 
79 1 206 1 39 1 291 1 215 1 137 2 8 1 267 1 335 1 110 1 236 1 62 1 119 1 
70 1 219 1 320 1 131 1 74 1 158 1 287 1 120 1 154 1 
219 1 192 1 23 1 
219 1 158 1 287 1 102 1 274 1 
275 1 200 2 323 1 183 1 158 2 30 1 333 1 102 1 229 1 371 1 219 1 233 2 337 1 166 1 192 1 286 1 287 2 23 1 274 2 
342 1 214 1 42 1 
3 1 342 1 86 1 51 1 367 1 42 1 179 1 
318 1 31 1 179 1 
3 3 45 1 354 2 342 1 322 1 51 1 367 1 141 1 294 1 86 1 42 1 179 3 
3 2 11 1 342 1 86 1 51 1 367 1 42 1 138 1 179 2 
3 1 141 1 181 1 15 1 86 1 51 1 367 1 75 1 126 1 65 1 179 1 
3 1 141 1 86 1 51 1 367 1 42 1 179 1 
3 1 342 1 141 1 86 1 367 1 42 2 179 1 
3 2 51 1 367 2 216 1 311 1 128 1 141 1 86 2 42 1 179 2 
3 3 342 1 367 1 80 1 51 2 138 2 293 1 141 1 129 1 86 1 42 1 65 1 179 3 
3 2 37 1 113 1 342 1 181 2 51 1 367 1 126 1 138 1 141 1 86 1 15 1 32 1 42 1 179 2 
3 4 342 1 367 2 80 1 51 2 138 2 11 1 141 1 86 2 42 1 167 1 65 1 179 4 
3 1 342 1 141 1 86 1 51 1 367 1 42 1 179 1 
3 4 354 1 342 2 322 1 367 1 80 1 51 3 138 2 294 1 303 1 86 1 42 2 65 1 179 4 
3 2 342 1 51 1 367 1 325 1 5 1 138 1 141 1 86 1 42 1 178 1 179 2 
3 3 354 2 342 1 277 1 322 2 51 1 367 1 294 1 141 1 86 1 42 1 179 3 
334 1 122 1 51 2 172 2 
3 1 78 1 141 1 86 1 367 1 179 1 
293 1 3 2 342 1 141 1 86 1 51 1 367 1 42 1 138 1 179 2 
226 1 
3 1 342 1 141 1 86 1 51 1 367 1 42 1 179 1 
3 3 354 1 342 1 367 1 51 1 138 1 293 1 141 1 86 1 42 1 179 3 
303 1 51 1 80 1 65 1 
51 1 42 1 

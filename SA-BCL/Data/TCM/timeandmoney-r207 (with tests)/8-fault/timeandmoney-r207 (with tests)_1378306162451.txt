#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (63,92) (63,92) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (63,92) (63,92) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (63,92) (63,92) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (63,92) (63,92) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (199,217) (199,217) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 146 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (113,220,250) (28,137,259) (28,137,259) (28,137,259) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (113,220,250) (28,137,259) (28,137,259) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (113,220,250) (28,137,259) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (113,220,250) (28,137,259) (28,137,259) (28,137,259) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 256 325 331 15 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 243 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 165 19 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 165 19 303 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 165 19 303 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 165 19 303 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (113,220,250) (113,220,250) (113,220,250) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (113,220,250) (113,220,250) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (113,220,250) (113,220,250) (113,220,250) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 243 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 306 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 0
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 1908 | = null
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9231 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1007 | = null
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | STATEMENT | 2497 | stmt -> ;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V | ASSIGN | 1238 | = null
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2279 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
104 1 63 1 208 1 209 1 330 1 210 1 20 1 279 1 92 1 238 1 66 2 132 1 100 1 67 1 353 2 
104 1 63 1 208 1 209 1 330 1 210 1 20 1 279 1 92 1 238 1 66 2 132 1 100 1 67 1 353 2 
104 1 63 1 208 1 209 1 330 1 210 1 20 1 279 1 92 1 238 1 66 2 132 1 100 1 67 1 353 2 
104 1 63 1 208 1 209 1 330 1 210 1 20 1 279 1 92 1 238 1 66 2 132 1 100 1 67 1 353 2 
143 1 1 2 42 1 69 3 209 1 210 1 279 1 224 1 238 1 202 2 66 4 132 1 188 1 99 1 100 1 271 1 76 3 353 4 
217 1 66 1 208 1 100 1 199 1 330 1 236 1 210 1 279 1 353 1 
42 1 69 2 330 1 210 2 279 1 226 1 202 1 66 3 99 1 100 2 271 1 76 1 353 3 
143 1 1 2 69 5 209 1 130 1 210 2 182 1 238 1 132 1 188 1 99 1 100 2 271 1 76 7 353 9 246 1 42 3 330 1 279 1 224 1 226 1 202 4 335 1 66 9 
143 1 1 2 69 5 209 1 130 1 210 2 182 1 238 1 132 1 188 1 99 1 100 2 271 1 76 7 353 9 246 1 42 3 330 1 279 1 224 1 226 1 202 4 335 1 66 9 
160 1 243 1 30 1 
256 1 
321 2 345 2 233 2 284 2 278 1 214 2 184 1 253 2 
111 1 233 2 315 1 57 2 263 1 91 1 184 1 93 1 321 2 345 2 268 1 323 2 244 1 214 3 38 1 11 1 168 1 216 1 40 1 79 2 119 1 247 1 249 1 80 1 248 1 136 1 278 1 44 2 253 3 280 1 365 2 125 1 334 1 366 1 282 1 284 2 230 1 
239 1 321 1 345 1 233 1 284 1 278 1 141 1 214 1 253 1 332 1 
128 1 324 1 275 1 204 1 56 1 30 1 253 1 332 1 160 1 364 1 321 1 283 1 192 1 214 1 
275 2 324 1 204 1 233 1 30 1 253 1 332 1 160 1 364 2 345 1 321 1 283 1 284 1 192 1 214 1 
275 1 364 1 356 1 36 1 134 1 
310 1 275 2 160 1 162 1 364 2 356 1 30 1 134 1 
275 1 364 1 134 1 
195 1 275 1 356 1 233 1 278 1 253 1 332 1 239 1 364 1 345 1 321 1 284 1 141 1 214 1 
160 1 
275 2 160 1 162 1 364 2 356 1 298 1 30 1 134 1 
24 1 275 5 162 1 356 2 17 1 29 1 112 1 30 1 342 1 72 1 264 1 160 1 320 1 364 5 8 2 9 1 109 2 134 2 51 2 
243 1 184 1 
345 1 321 2 302 1 233 1 284 1 96 1 214 2 184 2 253 2 
218 1 164 1 148 1 
79 1 119 1 247 1 80 1 248 1 136 1 82 1 44 1 184 1 253 1 366 1 323 1 214 1 11 1 168 1 230 1 
232 1 79 1 119 1 247 1 233 1 164 1 80 1 248 1 136 1 44 1 253 2 281 1 366 1 321 1 284 1 323 1 214 2 168 1 11 1 230 1 
232 2 312 1 233 4 166 1 56 1 252 1 253 5 184 1 281 1 321 5 345 1 284 4 96 1 214 5 
239 1 321 2 233 2 284 2 31 1 214 2 253 2 332 1 
232 1 345 1 321 3 233 3 284 3 214 3 184 1 253 3 
239 1 321 1 233 1 284 1 214 1 253 1 332 1 
302 1 321 1 345 1 233 1 284 1 96 1 214 1 253 1 332 1 
232 1 204 1 233 3 57 2 263 1 184 1 93 1 345 2 321 3 96 1 192 1 323 1 244 1 214 4 38 1 168 1 11 1 152 1 324 1 275 1 40 1 79 1 119 1 247 1 249 1 80 1 248 1 136 1 278 1 44 1 253 4 280 1 332 1 281 1 365 1 364 1 125 1 334 1 366 1 282 1 283 1 284 3 107 1 230 1 
232 1 321 2 233 1 284 1 166 1 56 1 214 2 184 1 253 2 
232 2 275 1 152 1 324 1 204 1 233 3 357 1 253 3 332 1 281 1 160 1 364 1 345 1 321 3 283 1 96 1 284 3 192 1 214 3 
232 1 321 2 345 1 233 2 164 1 284 2 96 1 148 1 214 2 253 2 
79 1 119 1 247 1 248 1 80 1 136 1 44 1 184 1 253 1 366 1 323 1 214 1 11 1 168 1 230 1 
79 1 119 1 247 1 248 1 80 1 136 1 44 1 184 1 253 1 336 1 98 1 323 1 214 1 168 1 230 1 
292 1 164 2 57 2 91 2 266 1 6 1 148 2 322 1 244 1 38 2 78 1 62 1 218 2 40 1 41 1 249 1 45 1 280 1 365 4 334 1 282 1 369 1 288 1 54 1 
324 1 321 1 233 1 284 1 214 1 31 1 253 1 332 1 
293 1 193 1 
293 1 193 1 
327 1 90 1 
327 1 90 1 
327 1 90 1 
203 1 293 1 193 1 
265 1 293 1 193 1 
13 1 176 1 327 1 293 2 90 1 193 2 
203 1 293 1 193 1 
203 1 293 1 193 1 
293 1 193 1 351 1 
293 1 193 1 351 1 
293 1 193 1 351 1 
26 1 233 2 235 1 293 1 184 1 265 1 321 2 269 1 270 1 347 1 117 1 193 1 214 2 275 1 103 1 105 1 123 1 64 1 253 2 364 1 368 1 284 2 257 1 49 1 
275 2 355 1 26 2 314 1 129 1 105 2 123 1 293 2 86 1 160 1 364 2 74 1 368 2 176 1 269 2 299 1 33 2 117 3 193 2 
238 1 132 1 209 1 
236 1 
236 1 
236 1 
236 1 
162 1 321 1 6 1 7 1 8 1 322 1 134 1 214 1 275 5 103 1 17 3 278 1 332 1 333 2 284 1 287 1 141 1 109 1 142 1 180 2 24 2 233 1 292 1 29 1 30 1 237 1 239 1 345 1 240 1 75 2 37 2 195 1 356 4 158 1 253 1 160 3 364 5 256 4 369 1 51 1 
162 1 131 1 213 1 321 1 6 1 7 1 8 1 322 1 134 3 214 1 275 5 103 1 17 3 278 1 332 1 227 2 333 2 284 1 141 1 109 1 180 2 24 2 292 1 233 1 29 1 30 1 237 1 239 1 345 1 240 1 75 2 36 2 195 1 356 4 158 1 253 1 160 3 364 5 256 4 369 1 51 1 
24 2 233 1 292 1 30 1 342 1 239 1 321 1 345 1 6 1 7 1 240 1 8 1 322 1 75 2 214 1 37 1 195 1 275 3 103 1 356 2 17 3 278 1 158 1 253 1 332 1 160 3 333 2 364 3 256 4 284 1 287 1 369 1 141 1 142 1 109 1 51 1 180 2 
24 2 292 1 146 1 342 1 6 1 7 1 240 1 8 1 322 1 75 2 37 1 275 2 103 1 356 1 17 3 158 1 160 2 333 2 364 2 256 4 287 1 369 1 109 1 142 1 51 1 180 2 
301 1 80 1 243 1 
154 1 80 1 
58 1 
119 1 80 1 136 1 
80 1 178 1 
80 1 136 1 
301 2 119 1 80 3 136 1 88 1 94 1 
291 1 181 1 4 1 317 1 5 1 91 5 295 1 319 1 266 2 6 2 322 2 38 4 328 1 363 1 365 9 106 1 52 1 54 3 
291 2 181 1 4 1 317 1 5 1 91 5 295 1 319 1 266 2 6 2 322 2 38 4 328 1 363 1 365 9 106 1 52 1 54 4 
291 1 181 1 4 1 317 1 5 1 91 5 295 1 319 1 266 2 6 2 322 2 10 1 38 4 328 1 363 1 365 9 106 1 52 1 54 3 
261 1 291 6 292 3 181 1 4 1 317 2 57 2 5 1 91 17 295 2 319 2 266 5 6 5 322 5 244 1 38 16 153 1 40 1 219 1 249 1 328 1 277 1 158 3 83 3 362 1 363 2 280 1 365 33 106 1 255 4 308 1 369 3 372 1 52 2 54 11 
291 2 181 1 4 1 317 1 57 4 294 1 91 6 295 1 319 1 266 3 6 2 322 2 244 2 38 5 40 2 249 2 328 1 277 1 223 1 363 1 280 2 365 11 106 1 52 1 54 5 
79 1 28 1 247 1 205 1 250 1 236 1 330 1 210 1 44 1 279 1 137 1 185 1 126 1 66 1 186 1 100 1 323 1 102 1 230 1 259 1 353 1 68 1 
79 1 247 1 250 1 236 1 330 1 358 1 210 1 44 1 137 1 185 1 267 1 126 1 66 2 186 1 100 1 76 1 48 1 323 1 102 1 230 1 259 1 353 2 68 1 
79 1 247 1 250 1 236 1 330 1 44 1 137 1 185 1 267 1 126 1 66 1 186 1 76 1 48 1 323 1 230 1 353 1 68 1 
27 1 316 1 210 1 185 2 186 2 100 1 323 1 353 1 194 1 354 1 79 1 276 1 247 1 248 1 80 1 136 1 358 1 330 2 44 1 66 1 230 1 373 1 68 2 
79 1 28 1 247 1 250 1 236 1 330 1 210 1 44 1 279 1 137 1 185 1 126 1 66 1 186 1 100 1 48 1 323 1 102 1 230 1 259 1 353 1 68 1 
200 1 
128 1 162 1 204 1 313 1 56 1 316 1 321 1 8 1 323 2 134 2 214 1 275 3 324 1 325 1 17 2 136 1 332 1 333 1 283 1 285 1 109 1 230 1 24 2 338 1 25 1 29 1 115 1 297 1 240 1 349 1 350 1 192 1 242 2 35 1 197 1 79 2 247 1 248 2 80 1 121 1 44 2 361 1 253 1 307 1 160 1 364 3 256 1 370 1 51 1 373 1 
324 1 275 3 128 1 162 1 197 1 204 1 313 1 56 1 361 1 253 1 332 1 364 3 283 1 321 1 298 1 285 1 286 1 370 1 242 2 192 1 134 2 214 1 
128 1 162 1 204 1 313 1 56 1 30 1 321 1 298 1 192 1 242 3 134 1 214 1 275 3 324 1 197 1 253 1 361 1 332 1 364 3 160 1 283 1 285 1 370 1 179 1 
128 1 162 1 204 1 313 1 56 1 30 1 321 1 298 1 192 1 242 3 214 1 134 2 150 1 275 3 324 1 197 1 253 1 361 1 332 1 364 3 160 1 283 1 285 1 370 1 286 1 179 1 
128 1 162 3 204 1 313 1 56 1 321 1 8 1 214 1 134 7 12 1 274 2 324 1 275 5 325 1 17 1 331 1 332 1 333 2 283 1 285 1 286 4 109 1 179 4 24 1 29 1 30 5 296 1 115 2 297 2 298 1 349 1 242 6 192 1 350 2 150 4 245 1 197 1 85 1 253 1 361 1 364 5 160 5 370 1 51 1 
24 1 128 1 204 1 313 1 29 1 56 1 115 1 297 1 321 1 8 1 349 1 350 1 192 1 242 2 214 1 275 2 324 1 197 1 325 1 17 1 121 1 361 1 253 1 332 1 160 1 333 1 364 2 256 1 283 1 285 1 370 1 109 1 51 1 
24 1 128 1 162 2 204 1 313 1 29 1 56 1 30 1 115 2 296 1 297 2 321 1 8 1 349 1 350 2 192 1 242 4 134 4 214 1 150 2 274 2 245 1 275 4 324 1 197 1 325 1 17 1 331 1 253 1 361 1 332 1 160 1 333 2 364 4 283 1 285 1 286 2 370 1 109 1 51 1 179 2 
24 1 128 1 162 2 204 1 313 1 29 1 56 1 30 1 115 2 296 1 297 2 321 1 8 1 349 1 350 2 192 1 242 4 134 4 214 1 150 2 274 2 245 1 275 4 324 1 197 1 325 1 17 1 331 1 253 1 361 1 332 1 160 1 333 2 364 4 283 1 285 1 286 2 370 1 109 1 51 1 179 2 
24 1 128 1 204 1 313 1 29 1 56 1 115 1 297 1 321 1 8 1 60 1 77 1 192 1 242 2 214 1 275 2 324 1 197 1 325 1 15 1 17 1 331 1 360 1 253 1 361 1 332 1 364 2 256 1 283 1 285 1 370 1 109 1 51 1 
24 1 128 1 162 2 204 1 313 1 29 1 56 1 30 1 115 2 296 1 297 2 321 1 8 1 349 1 350 2 192 1 242 5 214 1 134 5 150 3 12 1 274 2 245 1 275 4 324 1 197 1 325 1 17 1 331 1 253 1 361 1 332 1 160 1 333 2 364 4 283 1 285 1 370 1 286 3 109 1 51 1 179 3 
24 1 128 1 162 2 204 1 313 1 29 1 56 1 30 1 115 2 296 1 297 2 321 1 8 1 349 1 350 2 192 1 242 5 214 1 134 5 150 3 12 1 274 2 245 1 275 4 324 1 197 1 325 1 17 1 331 1 253 1 361 1 332 1 160 1 333 2 364 4 283 1 285 1 370 1 286 3 109 1 51 1 179 3 
128 1 162 2 204 1 313 1 56 1 321 1 8 1 60 2 214 1 134 4 324 1 275 4 325 1 17 1 332 1 283 1 140 2 285 1 286 2 109 1 179 2 24 1 29 1 30 1 115 2 297 2 77 1 242 4 192 1 150 2 197 1 121 1 253 1 361 1 364 4 160 1 256 2 370 1 51 1 
106 1 40 1 334 1 282 1 41 1 249 1 181 1 243 1 57 2 244 1 280 1 
291 1 292 1 164 11 57 4 318 1 91 8 184 1 73 1 266 1 6 2 268 1 148 4 322 1 244 2 38 6 153 1 218 11 40 2 249 2 81 1 158 2 83 3 280 2 124 1 365 14 125 1 255 3 334 2 282 1 369 2 372 1 54 2 22 1 
232 1 233 1 318 1 57 2 91 1 184 1 321 1 268 1 148 1 323 1 244 1 214 2 168 1 11 1 38 1 352 1 79 1 40 1 119 1 247 1 80 1 248 1 249 1 136 1 82 1 222 1 44 1 253 2 280 1 281 1 365 2 366 1 334 1 125 1 282 1 284 1 127 1 230 1 
0 2 89 1 164 6 4 1 317 1 57 6 318 1 91 11 93 2 266 4 321 1 6 4 268 1 322 4 101 1 323 1 214 3 11 2 168 2 218 6 328 1 136 2 221 1 332 1 280 3 281 1 106 1 334 3 228 2 282 3 284 1 230 2 232 1 291 1 233 1 292 2 181 1 184 1 148 6 191 2 244 3 38 11 79 1 40 3 119 2 247 2 248 1 249 3 80 2 158 2 44 1 253 3 363 1 365 22 125 1 366 2 369 2 53 2 54 5 
232 1 163 1 55 1 233 1 205 1 316 1 57 4 91 1 344 1 95 1 321 1 268 1 149 1 323 8 214 1 244 2 38 1 216 2 151 1 79 8 40 2 41 1 247 2 80 3 248 2 249 2 136 2 44 7 253 1 280 2 365 2 334 2 125 1 282 2 161 1 284 1 48 1 230 2 373 1 
233 1 292 1 164 1 57 2 318 1 91 1 266 1 345 1 321 1 6 1 96 1 148 1 322 1 244 1 214 1 38 2 218 1 40 1 249 1 158 1 253 1 280 1 159 1 365 3 334 1 282 1 284 1 369 1 54 1 
62 1 218 1 40 1 291 1 41 1 164 1 249 1 57 2 91 2 280 1 365 2 334 1 282 1 6 1 148 1 369 1 244 1 54 1 
218 1 40 1 41 1 292 1 164 1 249 1 57 2 280 1 266 1 365 2 334 1 282 1 148 1 322 1 288 1 244 1 38 2 54 1 
291 1 292 1 164 2 57 2 91 2 266 1 6 1 148 2 322 1 244 1 38 2 218 2 40 1 41 1 249 1 158 1 280 1 365 4 334 1 282 1 369 1 54 2 
62 1 218 1 40 1 291 1 164 1 249 1 57 2 91 2 280 1 365 2 334 1 282 1 6 1 148 1 149 1 369 1 244 1 54 1 
218 1 40 1 292 1 164 1 249 1 57 2 280 1 266 1 365 2 334 1 282 1 148 1 322 1 149 1 288 1 244 1 38 2 54 1 
291 1 292 1 164 2 57 2 91 2 266 1 6 1 148 2 322 1 149 1 244 1 38 2 218 2 40 1 249 1 158 1 280 1 365 4 334 1 282 1 369 1 54 2 
218 2 40 1 291 1 292 1 164 2 249 1 158 1 57 2 91 2 280 1 266 1 365 4 334 1 282 1 6 1 148 2 322 1 369 1 244 1 38 2 54 2 
57 2 91 1 184 1 93 1 268 1 323 1 214 1 244 1 168 1 11 1 38 1 79 1 40 1 119 1 247 1 248 1 80 1 249 1 136 1 44 1 253 1 280 1 365 2 366 1 334 1 125 1 282 1 230 1 
57 2 91 1 184 1 268 1 98 1 323 1 214 1 244 1 168 1 38 1 215 1 79 1 40 1 119 1 247 1 248 1 80 1 249 1 136 1 44 1 253 1 280 1 365 2 334 1 125 1 282 1 336 1 230 1 
291 1 292 1 164 2 57 2 318 1 91 2 266 1 6 1 148 2 322 1 244 1 38 2 218 2 40 1 249 1 158 1 280 1 365 4 334 1 282 1 369 1 54 2 
291 1 292 1 164 2 205 1 57 2 91 2 93 1 266 1 6 1 148 2 322 1 191 1 323 1 214 1 244 1 38 2 168 1 11 1 218 2 79 1 40 1 119 1 247 1 80 1 249 1 136 1 158 1 44 1 253 1 280 1 365 4 366 1 334 1 282 1 369 1 230 1 54 2 
291 1 292 1 233 1 164 1 57 2 318 1 91 2 345 1 321 1 6 1 96 1 148 1 322 1 244 1 214 1 38 1 218 1 40 1 249 1 170 1 158 1 253 1 280 1 365 3 334 1 282 1 284 1 369 1 54 1 
291 3 292 3 57 4 343 1 91 9 266 3 6 3 348 1 322 3 190 1 244 2 38 10 153 1 40 2 303 1 249 2 305 1 120 2 158 3 19 1 83 1 223 1 280 2 365 19 255 2 369 3 21 1 309 2 372 1 54 6 
291 1 292 1 165 1 57 6 343 1 91 10 266 1 6 2 322 1 190 2 244 3 38 8 153 2 300 1 40 3 303 1 249 3 277 2 329 1 120 2 158 2 19 2 83 2 172 1 173 1 223 1 280 3 365 18 255 2 369 2 231 1 54 2 
291 3 292 4 165 1 57 6 343 1 91 15 266 2 6 4 322 4 190 2 244 3 38 17 153 3 300 1 40 3 303 1 249 3 277 1 305 1 329 1 120 3 158 4 19 1 83 3 172 1 173 1 223 1 280 3 225 1 365 32 255 4 369 4 309 1 21 1 372 1 231 1 54 5 
291 3 292 3 165 1 57 8 343 1 91 16 266 3 6 4 322 3 190 2 244 4 38 15 153 3 300 1 40 4 303 1 249 4 277 2 305 1 329 1 120 3 158 4 19 1 83 3 172 1 173 1 223 1 280 4 225 1 365 31 255 4 369 4 309 1 21 1 372 1 231 1 54 6 
291 5 292 5 181 1 165 1 57 4 343 1 91 20 73 2 266 5 6 6 322 5 190 1 244 2 38 17 153 2 300 1 40 2 303 1 249 2 277 1 329 1 120 2 158 6 19 1 83 4 172 1 173 1 223 1 280 2 365 37 106 1 255 4 369 6 372 2 231 1 54 10 
355 1 26 1 368 1 176 1 269 1 129 1 346 1 105 1 293 1 193 1 
265 1 64 1 
26 1 368 1 339 1 304 1 269 1 71 1 105 1 293 1 193 1 
260 1 203 1 
13 1 133 1 351 1 
275 1 355 1 26 1 314 1 129 1 105 1 123 1 293 1 86 1 160 1 364 1 368 1 176 1 269 1 299 1 33 1 117 2 193 1 
275 1 355 1 26 1 314 1 129 1 105 1 123 1 293 1 86 1 160 1 364 1 368 1 176 1 269 1 299 1 33 1 117 2 193 1 
275 1 355 1 26 1 314 1 129 1 105 1 123 1 293 1 86 1 160 1 364 1 368 1 176 1 269 1 299 1 33 1 117 2 193 1 
13 1 260 1 203 1 
13 1 260 1 203 1 
133 1 351 1 
13 1 133 1 351 1 
270 1 347 1 
26 1 314 1 233 2 235 1 293 1 184 1 265 1 321 2 269 1 270 1 347 1 33 1 117 1 214 2 193 1 275 1 103 1 356 1 105 1 64 1 253 2 364 1 368 1 284 2 257 1 229 1 49 1 
262 1 318 1 57 2 211 1 91 1 344 1 95 1 321 2 268 1 323 2 244 1 214 2 273 1 38 1 216 2 79 2 40 1 247 1 80 1 16 1 249 1 136 1 122 1 44 2 253 2 280 1 365 2 334 1 125 1 282 1 230 1 
79 2 247 1 234 1 205 1 250 1 220 1 113 1 236 1 44 2 185 1 126 1 48 1 323 2 102 1 230 1 
79 1 247 1 250 1 113 1 236 1 44 1 84 1 185 1 126 1 48 1 323 1 102 1 230 1 
79 1 276 1 247 1 80 1 248 1 234 1 136 1 316 1 44 1 185 1 337 1 323 1 230 1 373 1 
79 1 247 1 234 1 250 1 220 1 113 1 236 1 44 1 185 1 126 1 48 1 323 1 102 1 230 1 
155 1 
24 1 160 1 320 1 17 1 112 1 243 1 30 1 
24 1 29 1 17 1 160 1 333 1 256 1 8 1 349 1 350 1 109 1 51 1 
162 3 204 2 311 1 2 2 212 2 6 2 8 3 97 2 322 2 323 1 134 5 275 5 17 8 136 1 333 6 109 3 230 2 180 6 338 1 24 7 144 2 292 2 29 3 145 1 30 1 240 2 75 6 154 3 301 2 79 1 119 1 156 2 247 1 80 6 248 1 158 2 44 1 359 2 364 5 160 7 256 12 47 1 88 1 369 2 51 3 53 2 
338 1 24 5 162 1 292 2 29 2 341 1 30 2 212 2 6 2 240 1 8 2 75 5 322 2 272 1 134 1 275 1 153 1 300 1 17 8 329 1 43 1 158 2 83 1 172 1 173 1 364 1 333 3 160 5 256 6 255 1 369 2 109 2 51 2 231 1 180 5 
24 2 233 1 29 1 4 1 317 1 212 2 239 1 6 2 345 1 321 1 8 1 322 1 272 1 214 1 245 1 195 1 275 1 17 2 328 1 278 1 253 1 332 1 363 1 364 1 284 1 109 1 141 1 51 1 
24 1 29 1 17 1 112 1 30 1 320 1 160 1 8 1 109 1 51 1 
24 2 292 1 17 2 158 1 212 1 333 2 160 2 256 4 6 1 75 2 322 1 369 1 180 2 
275 1 160 1 364 1 162 1 30 1 134 1 
338 2 24 2 162 2 25 1 70 1 29 1 316 1 342 1 116 2 240 2 8 2 189 1 323 4 134 4 275 3 79 4 247 1 80 1 248 2 17 2 198 1 136 1 44 4 307 1 364 3 109 2 51 2 230 1 373 1 
233 2 57 2 263 1 184 1 93 1 321 2 345 2 323 1 214 3 244 1 38 1 11 1 168 1 40 1 79 1 119 1 247 1 249 1 248 1 80 1 136 1 278 1 44 1 253 3 280 1 365 1 125 1 366 1 334 1 282 1 284 2 230 1 
24 2 338 1 29 1 17 1 30 2 295 1 333 2 160 4 256 4 240 1 8 1 75 2 109 1 51 1 180 2 
201 1 26 1 269 1 
355 1 26 1 270 1 269 1 254 1 
201 1 26 1 269 1 
201 1 26 1 269 1 
290 1 26 1 269 1 
290 1 26 1 269 1 
290 1 26 1 269 1 
26 1 269 1 
293 1 193 1 
291 2 181 1 4 1 57 4 317 1 91 5 266 2 6 2 322 2 244 2 38 5 40 2 249 2 277 1 328 1 280 2 363 1 365 10 106 1 54 4 
106 1 181 1 243 1 
40 1 291 1 292 1 249 1 158 1 18 1 57 2 91 2 280 1 266 1 365 4 6 1 322 1 369 1 244 1 38 2 54 2 
153 1 291 1 292 1 158 1 83 1 91 3 266 1 365 7 255 2 6 1 322 1 369 1 38 4 372 1 54 2 
291 2 292 2 181 1 4 1 317 1 57 2 91 10 73 1 266 3 6 4 322 4 244 1 38 10 40 1 249 1 328 1 277 1 81 1 158 2 83 2 363 1 280 1 365 20 106 1 255 2 369 2 372 1 54 5 
365 1 255 1 38 1 
365 1 83 1 91 1 
40 1 291 1 292 1 249 1 158 1 57 2 18 1 91 3 280 1 365 6 266 2 6 1 322 1 369 1 244 1 38 3 53 1 54 3 
291 1 292 2 57 2 91 6 266 1 6 2 322 2 244 1 38 6 153 1 300 1 40 1 249 1 329 1 158 2 83 1 173 1 172 1 223 1 280 1 365 12 255 1 369 2 231 1 54 2 
291 1 328 1 317 1 91 3 363 1 365 6 266 1 6 1 322 1 38 3 54 2 
40 1 291 1 249 1 181 1 277 1 4 1 317 1 57 2 91 1 65 1 363 1 280 1 266 1 365 3 106 1 244 1 38 2 54 2 
40 1 291 2 249 1 328 1 4 1 57 2 317 2 91 5 223 1 280 1 363 2 266 3 365 10 6 2 322 2 244 1 38 5 54 5 
40 1 291 1 249 1 57 2 91 2 223 1 280 1 365 2 6 1 369 1 244 1 54 1 
40 1 291 1 292 1 249 1 158 1 57 2 91 2 223 1 280 1 266 1 365 4 6 1 322 1 369 1 244 1 38 2 54 2 
40 3 291 1 249 3 277 1 305 1 57 6 317 1 65 1 91 1 223 1 280 3 363 1 365 3 266 1 244 3 38 2 54 2 
291 3 292 2 181 1 4 1 317 1 57 8 91 12 266 3 6 4 322 4 244 4 38 12 153 1 40 4 219 1 249 4 328 1 277 1 305 1 158 2 18 1 83 3 223 1 362 1 363 1 280 4 365 24 106 1 255 3 308 1 369 2 54 6 
291 1 181 1 4 1 57 2 317 1 91 5 266 2 6 2 322 2 244 1 38 5 153 1 40 1 249 1 328 1 83 1 223 1 280 1 363 1 365 10 255 1 106 1 231 1 54 3 
291 2 181 1 4 1 317 1 57 4 91 7 266 2 6 3 322 2 244 2 38 6 153 1 40 2 249 2 328 1 158 1 18 1 83 1 223 1 363 1 280 2 365 13 106 1 255 2 369 1 372 1 231 1 54 4 
291 2 292 2 181 1 4 1 317 1 57 6 91 10 266 3 6 4 322 4 244 3 38 11 153 1 300 1 40 3 249 3 328 1 277 1 329 1 158 2 18 1 83 1 172 1 173 1 223 1 363 1 280 3 365 21 106 1 255 1 369 2 231 1 54 5 
291 3 292 1 181 1 4 1 317 1 57 6 91 11 266 3 6 4 322 3 244 3 38 8 153 1 300 1 40 3 249 3 328 1 277 1 329 1 158 2 18 1 83 1 173 1 172 1 223 1 363 1 280 3 365 19 106 1 255 1 369 2 231 1 54 6 
291 1 181 1 4 1 57 2 317 1 91 5 266 2 6 2 322 2 244 1 38 5 153 1 40 1 249 1 328 1 83 1 223 1 280 1 363 1 365 10 255 1 106 1 231 1 54 3 
291 1 292 2 57 2 91 6 266 1 6 2 322 2 244 1 38 6 153 1 300 1 40 1 249 1 329 1 158 2 83 1 173 1 172 1 223 1 280 1 365 12 255 1 369 2 231 1 54 2 
291 2 292 1 181 1 4 1 317 1 57 8 91 11 266 3 6 4 322 3 244 4 38 9 153 1 300 1 40 4 249 4 328 1 277 2 329 1 158 2 18 1 83 1 172 1 173 1 223 1 363 1 280 4 365 20 106 1 255 1 369 2 231 1 54 5 
291 3 292 2 57 8 91 9 266 3 6 3 322 2 244 4 38 7 153 1 300 1 40 4 249 4 277 2 329 1 305 1 158 3 83 1 172 1 173 1 223 1 280 4 365 16 255 1 369 3 231 1 54 6 
291 2 181 1 328 1 4 1 317 2 91 2 363 2 365 5 266 2 106 1 6 1 322 1 38 3 54 4 
291 2 292 1 181 1 4 1 317 1 57 8 91 11 266 3 6 4 322 3 244 4 38 9 153 1 300 1 40 4 249 4 328 1 277 2 329 1 305 1 158 2 83 1 172 1 173 1 223 1 363 1 280 4 365 20 106 1 255 1 369 2 231 1 54 5 
175 1 321 1 166 1 56 1 214 1 184 1 253 1 
251 1 166 1 56 1 171 1 114 1 184 1 253 1 175 1 321 1 177 1 34 1 214 1 
79 1 247 1 80 1 248 1 136 1 316 1 243 1 323 1 44 1 230 1 373 1 
232 1 79 1 119 1 233 1 247 1 80 1 248 1 136 1 44 1 184 1 253 2 321 1 284 1 323 1 214 2 168 1 11 1 230 1 
232 1 233 1 184 1 116 1 321 2 323 1 214 2 11 1 168 1 324 1 79 1 119 2 247 1 80 3 136 2 44 1 253 2 332 1 283 1 284 2 178 1 371 1 230 1 
232 1 233 1 184 1 116 1 321 2 241 1 98 1 323 2 214 2 168 1 324 1 79 2 119 2 247 1 80 3 136 2 44 2 253 2 332 1 283 1 284 2 178 1 371 1 230 1 
233 1 30 1 239 1 116 1 345 1 321 1 323 1 214 1 195 1 275 1 154 1 79 1 80 1 278 1 44 1 253 1 332 1 364 1 160 1 284 1 141 1 110 1 
233 1 30 1 239 1 116 1 345 1 321 1 323 1 214 1 195 1 275 1 154 1 79 1 156 1 80 1 278 1 44 1 253 1 332 1 364 1 160 1 284 1 141 1 
79 1 55 1 247 1 323 1 44 1 230 1 
216 1 151 1 163 1 79 7 55 1 119 1 247 2 205 1 248 2 326 1 80 3 136 2 44 6 344 1 367 1 161 1 88 1 48 1 323 7 118 1 230 3 
0 1 262 1 205 1 4 1 57 4 318 1 317 1 91 4 93 1 266 2 321 1 6 2 322 2 101 1 323 1 214 2 11 1 168 1 136 1 328 1 332 1 280 2 334 2 106 1 282 2 284 1 230 1 232 1 291 1 233 1 181 1 184 1 191 1 244 2 38 4 79 1 40 2 119 1 247 1 249 2 80 1 44 1 253 2 363 1 365 8 366 1 54 3 
24 1 162 1 204 1 144 1 2 1 29 2 112 1 30 1 320 1 8 2 189 1 323 1 134 2 275 3 154 1 301 1 356 1 79 1 156 1 248 1 80 2 17 1 44 1 359 1 160 1 364 3 109 2 51 2 
301 1 79 2 55 1 311 1 119 1 247 1 205 1 80 2 136 1 44 2 88 1 323 2 230 2 
169 1 79 4 247 1 248 1 205 1 80 1 136 1 316 1 44 4 241 1 323 4 230 1 373 1 
79 2 119 1 247 1 80 1 207 1 136 1 44 2 167 1 87 1 367 1 116 1 323 2 118 1 230 2 
79 1 247 1 126 1 248 1 236 1 323 1 44 1 230 1 
79 2 247 1 205 1 80 1 136 1 44 2 344 1 48 1 323 2 273 1 230 1 
151 1 169 1 79 5 247 2 248 1 205 1 80 3 136 2 316 1 44 4 344 1 116 1 161 1 323 5 373 1 230 2 
151 1 169 1 196 1 79 5 247 2 248 1 205 1 80 3 136 2 316 1 44 4 344 1 116 1 323 5 373 1 230 2 
232 1 79 1 119 1 233 1 247 1 80 1 248 1 136 1 44 1 184 1 253 2 321 1 284 1 98 1 323 1 214 2 168 1 230 1 
79 1 119 1 247 1 326 1 80 1 136 1 44 1 367 1 116 1 88 1 323 1 118 1 230 2 
135 1 340 1 108 1 184 1 61 1 
324 1 275 2 152 1 204 1 356 1 340 1 135 2 206 1 30 1 183 1 184 1 332 1 160 1 364 2 283 1 258 1 192 1 108 2 61 2 
135 1 340 1 16 1 122 1 211 1 253 1 321 1 214 1 61 1 
340 1 258 1 183 1 
69 1 99 1 271 1 243 1 
69 1 66 1 99 1 100 1 271 1 210 1 353 1 
66 1 186 1 330 1 
69 1 157 1 210 1 279 1 20 2 66 3 100 1 99 1 50 1 271 1 353 3 39 1 
1 1 69 1 66 2 99 1 100 1 271 1 76 1 210 1 353 2 
238 1 202 1 69 1 66 1 132 1 209 1 100 1 210 1 279 1 224 1 353 1 
69 1 66 1 100 1 271 1 210 1 279 1 353 1 
66 1 99 1 100 1 271 2 210 1 279 1 353 1 
69 1 210 2 279 1 46 1 66 2 59 1 100 2 271 1 289 1 353 2 
42 1 69 2 130 1 210 1 279 1 182 1 202 1 66 3 99 1 100 1 271 1 76 2 353 3 
66 1 100 1 236 1 210 1 279 1 306 1 353 1 
1 1 42 1 69 2 210 2 279 1 202 1 66 4 188 1 99 1 100 2 271 1 76 2 353 4 
69 1 66 1 99 1 100 1 271 1 210 1 279 1 353 1 
42 1 69 3 157 1 210 1 20 1 139 1 202 1 66 4 99 2 100 1 271 2 76 2 39 1 353 4 
246 1 69 1 210 1 279 1 147 1 66 2 100 1 99 1 271 1 76 1 353 2 23 1 
69 1 157 2 210 1 279 1 20 2 138 1 66 3 100 1 99 1 271 1 39 1 353 3 
69 2 32 2 3 1 187 1 
66 1 100 1 210 1 174 1 279 1 353 1 
69 1 66 2 99 1 100 1 271 1 76 1 130 1 210 1 279 1 353 2 
14 1 
69 1 66 1 99 1 100 1 271 1 210 1 279 1 353 1 
69 1 130 1 210 1 279 1 20 1 66 3 100 1 99 1 76 1 271 1 353 3 
139 1 202 1 69 1 42 1 
69 1 271 1 

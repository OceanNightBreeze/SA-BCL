#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (0,117) (0,117) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (0,117) (0,117) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (0,117) (0,117) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (0,117) (0,117) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 93 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (74,111,261,295) (74,111,261,295) 161 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2022 | = null
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I | OPERATOR | 1301 | ^ -> |
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1740 | if (x) -> if (!x)
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money; | ASSIGN | 6447 | = null
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 6040 | stmt -> ;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2944 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> -1
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 568 | = null
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 261 1 262 1 321 1 326 1 117 1 111 1 113 1 74 1 
0 1 261 1 262 1 321 1 326 1 117 1 111 1 113 1 74 1 
0 1 261 1 262 1 321 1 326 1 117 1 111 1 113 1 74 1 
0 1 261 1 262 1 321 1 326 1 117 1 111 1 113 1 74 1 
304 1 77 1 261 1 100 2 41 1 326 1 263 2 111 4 125 1 295 3 26 1 36 1 321 4 96 1 369 3 227 1 11 1 74 1 
39 1 77 1 261 1 262 1 326 1 111 2 113 1 36 1 321 2 369 1 368 1 96 1 285 1 51 1 11 1 74 1 
76 1 77 1 261 2 262 1 326 1 263 1 111 3 295 1 26 1 321 3 369 2 11 1 74 2 
261 2 262 1 41 1 263 4 326 1 111 9 295 7 26 3 96 1 227 1 11 1 74 2 76 1 203 1 304 1 77 1 100 2 33 1 125 1 36 1 321 9 369 5 156 1 61 1 
261 2 262 1 41 1 263 4 326 1 111 9 295 7 26 3 96 1 227 1 11 1 74 2 76 1 203 1 304 1 77 1 100 2 33 1 125 1 36 1 321 9 369 5 156 1 61 1 
361 1 237 1 309 1 
361 1 225 2 267 1 
166 1 345 2 198 2 327 2 63 2 249 1 252 2 189 2 
215 1 351 1 327 2 136 1 63 2 217 1 166 1 90 1 196 1 198 3 7 1 224 1 245 2 228 2 72 1 98 1 229 1 278 1 230 2 120 1 204 1 316 2 205 1 317 2 32 1 249 1 252 3 103 1 345 2 128 1 86 1 129 1 105 1 60 1 370 1 188 1 189 2 
276 1 166 1 345 1 198 1 339 1 322 1 327 1 63 1 252 1 189 1 
276 1 361 1 78 1 233 1 327 1 23 1 252 1 308 1 177 1 198 1 246 1 300 1 237 1 333 1 
276 1 361 1 78 1 233 1 327 1 63 1 23 1 252 1 308 2 345 1 198 1 300 2 237 1 333 1 189 1 
308 1 57 1 174 1 306 1 300 1 
335 1 308 2 361 1 57 1 306 1 300 2 251 1 237 1 
308 1 57 1 300 1 
276 1 306 1 339 1 327 1 63 1 252 1 166 1 308 1 345 1 297 1 198 1 322 1 300 1 189 1 
361 1 
335 1 308 2 361 1 57 1 306 1 122 1 300 2 237 1 
335 1 361 1 147 1 170 1 194 2 306 2 241 1 135 2 308 5 167 1 124 2 85 1 255 1 57 2 298 1 70 1 144 1 300 5 237 1 
249 1 309 1 
327 2 63 1 249 2 252 2 270 1 345 1 69 1 198 2 189 1 
190 1 266 1 310 1 
278 1 215 1 230 1 351 1 120 1 317 1 249 1 252 1 34 1 90 1 128 1 198 1 245 1 60 1 72 1 188 1 
190 1 278 1 302 1 215 1 230 1 351 1 120 1 62 1 327 1 317 1 63 1 252 2 90 1 128 1 198 2 245 1 60 1 188 1 72 1 189 1 
302 1 345 1 198 3 327 3 63 3 249 1 252 3 189 3 
276 1 198 1 322 1 327 1 63 1 252 1 189 1 
276 1 270 1 345 1 69 1 198 1 327 1 63 1 252 1 189 1 
215 1 351 1 62 1 327 3 136 1 63 3 23 1 90 1 166 1 196 1 69 1 198 4 71 1 245 1 300 1 228 2 72 1 98 1 333 1 229 1 276 1 278 1 302 1 230 1 78 1 120 1 204 1 233 1 316 1 81 1 205 1 317 1 32 1 249 1 252 4 103 1 308 1 345 2 128 1 86 1 105 1 60 1 188 1 189 3 
302 1 220 1 198 2 327 2 246 1 63 1 249 1 252 2 189 1 
276 1 302 2 361 1 78 1 62 1 233 1 81 1 327 3 163 1 63 3 23 1 252 3 308 1 345 1 69 1 198 3 300 1 333 1 189 3 
190 1 302 1 327 2 63 2 266 1 252 2 345 1 69 1 198 2 189 2 
278 1 215 1 230 1 351 1 120 1 317 1 249 1 252 1 90 1 128 1 198 1 245 1 60 1 72 1 188 1 
99 1 278 1 215 1 230 1 351 1 120 1 133 1 317 1 249 1 252 1 198 1 245 1 60 1 72 1 188 1 
190 2 130 1 108 1 136 1 312 1 266 2 24 1 115 1 116 1 331 1 7 2 228 2 229 1 303 1 149 1 204 1 316 4 205 1 32 1 86 2 105 1 155 1 310 2 348 1 
276 1 233 1 198 1 327 1 353 1 63 1 252 1 189 1 
302 2 62 1 280 1 327 5 63 4 328 1 249 1 252 5 220 1 345 1 69 1 198 5 246 1 189 4 
276 1 198 2 322 1 353 1 327 2 63 2 252 2 189 2 
318 1 330 1 
318 1 330 1 
340 1 134 1 
340 1 134 1 
340 1 134 1 
318 1 191 1 330 1 
318 1 330 1 180 1 
28 1 201 1 318 2 330 2 340 1 134 1 
318 1 191 1 330 1 
318 1 191 1 330 1 
1 1 318 1 330 1 
1 1 318 1 330 1 
1 1 318 1 330 1 
28 1 361 1 53 2 207 1 318 2 308 2 330 2 140 2 367 2 244 1 8 1 274 2 184 1 9 1 301 1 300 2 38 3 73 1 286 2 
80 1 327 2 53 1 355 1 63 2 249 1 252 2 195 1 318 1 91 1 308 1 330 1 180 1 198 2 367 1 59 1 274 1 300 1 38 1 169 1 73 1 349 1 286 1 189 2 
36 1 96 1 227 1 
39 1 36 1 96 1 
39 1 152 1 96 3 284 1 227 2 211 1 
39 1 152 1 29 1 96 2 284 1 227 1 
39 1 152 2 96 2 284 1 227 1 
130 1 2 1 194 1 43 2 135 1 327 1 243 1 297 1 198 1 300 5 144 3 248 1 335 1 149 1 339 1 306 4 252 1 308 5 255 1 57 1 345 1 347 1 212 2 348 1 109 1 216 2 22 1 63 1 267 2 165 1 166 1 25 1 116 1 70 2 225 4 169 1 276 1 361 1 124 1 322 1 237 1 189 1 
130 1 2 1 194 1 327 1 135 1 243 1 297 1 198 1 144 3 300 5 248 1 335 1 149 1 339 1 306 4 252 1 206 2 308 5 255 1 345 1 57 3 347 1 212 2 348 1 109 1 216 2 22 1 63 1 112 1 267 2 166 1 116 1 70 2 225 4 169 1 276 1 361 1 31 1 174 2 124 1 322 1 237 1 189 1 
2 1 194 1 43 1 109 1 216 1 327 1 135 1 63 1 166 1 165 1 167 1 25 1 297 1 198 1 70 2 225 1 300 3 144 1 169 1 276 1 361 1 149 1 339 1 306 2 252 1 124 1 308 3 345 1 347 1 322 1 212 1 237 1 189 1 348 1 
2 1 194 1 43 1 109 1 216 1 135 1 165 1 167 1 93 1 25 1 70 2 225 1 300 2 144 1 169 1 149 1 306 1 124 1 308 2 347 1 212 1 348 1 
173 1 60 1 309 1 
296 1 60 1 
371 1 
60 1 188 1 
278 1 173 2 60 3 356 1 188 1 123 1 
278 1 60 1 188 1 
154 1 60 1 
350 1 108 3 12 1 193 1 148 1 149 1 316 7 138 1 176 1 115 2 116 1 178 2 346 1 5 1 86 3 299 1 7 4 
350 1 108 3 12 1 193 1 148 1 149 1 316 7 138 1 176 1 115 2 116 1 178 2 346 1 5 1 86 3 299 1 7 4 
350 1 108 3 12 1 193 1 148 1 149 1 316 7 138 1 176 1 115 2 116 1 178 2 141 1 346 1 5 1 86 3 299 1 7 4 
130 3 350 5 108 10 193 2 109 3 136 1 293 1 137 1 138 2 115 5 116 4 271 1 142 1 5 1 357 4 299 1 7 16 10 1 228 2 12 2 148 1 172 3 232 1 305 1 204 1 149 4 316 31 32 1 176 2 178 3 346 1 86 15 105 1 348 3 
350 1 108 4 193 1 42 1 136 2 138 1 115 3 116 1 142 1 5 1 7 5 299 1 143 1 228 4 12 1 148 1 149 1 204 2 316 9 32 2 176 1 178 2 86 4 105 2 
39 1 215 1 261 1 351 1 262 1 291 1 326 1 354 1 111 2 92 1 295 1 6 1 96 2 245 1 227 1 50 1 11 1 74 1 334 1 77 1 230 1 317 1 56 1 179 1 36 1 321 2 369 1 323 1 185 1 211 1 
39 1 215 1 261 1 351 1 262 1 291 1 354 1 111 3 92 1 295 2 272 1 6 1 96 2 245 1 227 1 50 1 199 1 11 1 74 1 77 1 230 1 317 1 56 1 282 1 179 1 36 1 321 3 369 1 323 1 211 1 
39 1 215 1 351 1 262 1 291 1 111 2 92 1 295 2 272 1 6 1 96 2 245 1 50 1 227 1 11 1 77 1 230 1 317 1 56 1 282 1 36 1 321 2 369 1 323 1 211 1 
215 1 261 1 351 1 131 1 262 2 111 1 92 2 273 1 245 1 50 2 199 1 74 1 27 1 230 1 120 1 317 1 307 1 321 1 153 1 323 2 60 1 157 1 188 1 
39 1 215 1 261 1 351 1 262 1 291 1 326 1 354 1 111 1 92 1 6 1 96 2 245 1 227 1 50 1 74 1 334 1 230 1 317 1 56 1 282 1 179 1 36 1 321 1 323 1 211 1 
342 1 
287 1 288 1 290 1 289 1 131 1 2 1 194 1 135 1 327 1 4 2 198 1 245 2 144 2 300 5 246 1 145 1 333 1 335 3 151 4 252 1 13 2 308 5 255 1 209 2 57 6 256 1 60 1 157 1 158 2 215 1 351 1 264 1 23 1 267 2 65 1 70 2 225 2 276 1 361 2 230 2 78 1 120 2 362 1 233 1 121 1 82 2 317 2 124 1 177 1 365 2 181 1 183 2 188 1 237 1 88 1 
288 1 327 1 23 1 65 1 198 1 246 1 300 3 145 1 333 1 276 1 335 1 78 1 362 1 233 1 82 1 151 2 122 1 252 1 308 3 57 2 177 1 88 1 
288 1 327 1 23 1 65 1 198 1 246 1 300 3 145 1 333 1 276 1 335 1 361 1 78 1 362 1 233 1 151 3 122 1 252 1 308 3 57 1 177 1 88 1 158 1 237 1 
288 1 327 1 23 1 65 1 4 1 198 1 246 1 300 3 145 1 333 1 276 1 335 1 361 1 78 1 362 1 233 1 82 1 122 1 151 3 252 1 308 3 57 2 177 1 88 1 158 1 237 1 
288 1 194 1 327 1 135 1 4 4 198 1 300 5 246 1 144 1 145 1 333 1 335 3 151 6 252 1 308 5 13 2 255 1 57 7 209 2 158 4 264 1 23 1 267 2 65 1 222 1 70 1 276 1 361 5 78 1 171 1 362 1 233 1 79 1 121 1 82 4 122 1 124 1 177 1 365 2 283 1 183 2 236 1 88 1 237 5 
287 1 288 1 194 1 264 1 135 1 327 1 23 1 267 2 4 2 65 1 198 1 70 1 225 2 144 1 300 4 246 1 145 1 333 1 276 1 335 2 361 2 78 1 362 1 233 1 121 1 82 2 151 4 252 1 13 2 124 1 308 4 255 1 57 4 209 2 177 1 365 2 183 2 237 1 158 2 88 1 
288 1 194 1 264 1 135 1 327 1 23 1 267 2 4 2 65 1 198 1 70 1 144 1 246 1 300 4 145 1 333 1 276 1 335 2 361 1 171 1 78 1 362 1 233 1 121 1 82 2 151 4 252 1 13 2 308 4 124 1 255 1 57 4 209 2 177 1 365 2 283 1 183 2 236 1 237 1 158 2 88 1 
288 1 194 1 264 1 135 1 327 1 23 1 267 2 4 2 65 1 198 1 70 1 144 1 246 1 300 4 145 1 333 1 276 1 335 2 361 1 171 1 78 1 362 1 233 1 121 1 82 2 151 4 252 1 13 2 308 4 124 1 255 1 57 4 209 2 177 1 365 2 283 1 183 2 236 1 237 1 158 2 88 1 
288 1 194 1 135 1 327 1 23 1 4 2 65 1 46 1 198 1 70 1 225 2 275 2 144 1 246 1 300 4 145 1 333 1 276 1 335 2 336 1 361 1 171 1 78 1 362 1 233 1 121 1 82 2 151 4 252 1 253 1 308 4 124 1 255 1 57 4 126 2 209 2 177 1 365 2 237 1 158 2 88 1 
288 1 194 1 264 1 135 1 327 1 23 1 267 2 65 1 4 3 198 1 70 1 144 1 246 1 300 4 145 1 333 1 276 1 335 2 361 1 171 1 78 1 362 1 233 1 79 1 121 1 82 3 151 5 252 1 13 2 124 1 308 4 255 1 209 2 57 5 177 1 365 2 283 1 183 2 236 1 237 1 88 1 158 3 
288 1 194 1 264 1 135 1 327 1 23 1 267 2 65 1 4 3 198 1 70 1 144 1 246 1 300 4 145 1 333 1 276 1 335 2 361 1 171 1 78 1 362 1 233 1 79 1 121 1 82 3 151 5 252 1 13 2 124 1 308 4 255 1 209 2 57 5 177 1 365 2 283 1 183 2 236 1 237 1 88 1 158 3 
287 1 288 1 194 1 135 1 327 1 23 1 4 2 65 1 46 1 198 1 70 1 225 2 275 2 144 1 300 4 246 1 145 1 333 1 276 1 335 2 361 1 78 1 362 1 233 1 121 1 82 2 151 4 252 1 124 1 308 4 255 1 57 4 126 2 209 2 177 1 365 2 237 1 158 2 88 1 
190 1 108 2 193 1 136 1 312 1 266 1 138 1 115 2 116 1 5 1 299 1 7 3 228 2 229 1 148 1 204 1 149 1 316 6 205 1 32 1 249 2 178 1 86 3 105 1 309 1 310 1 
190 11 130 1 350 1 108 2 240 1 109 2 136 2 21 1 137 1 266 4 67 1 115 1 116 1 271 1 357 3 7 8 228 4 98 1 229 1 172 3 204 2 149 2 316 14 205 2 32 2 249 1 14 1 86 6 105 2 370 1 106 1 310 11 348 2 
215 1 351 1 62 1 327 1 136 1 63 1 266 1 90 1 67 1 68 1 198 2 7 1 245 1 72 1 228 2 98 1 229 1 278 1 302 1 230 1 120 1 204 1 316 2 317 1 205 1 32 1 249 1 34 1 252 2 208 1 235 1 128 1 86 1 60 1 105 1 188 1 370 1 189 1 
190 7 130 2 193 1 327 1 136 3 138 1 90 2 196 2 242 2 198 3 5 1 299 1 7 10 245 3 98 1 247 1 302 1 148 1 204 3 149 3 205 3 249 2 344 1 252 3 58 2 105 3 60 2 310 7 348 2 215 2 350 4 351 2 108 8 62 1 109 2 162 2 63 1 266 7 67 1 115 4 116 3 228 6 72 2 229 3 278 2 230 3 120 1 316 20 317 3 32 3 178 1 282 1 128 2 86 10 186 2 187 1 370 1 188 2 189 1 
159 1 215 2 351 2 131 1 192 1 327 1 136 2 312 1 63 1 198 1 223 1 7 1 245 8 146 1 228 4 98 1 229 2 302 1 230 7 120 2 52 1 204 2 30 1 316 2 317 8 205 2 32 2 252 1 55 1 282 1 86 1 185 1 129 2 60 3 105 2 370 1 157 1 188 2 189 1 
190 1 130 1 108 1 109 1 327 1 136 1 63 1 266 1 67 1 115 1 116 1 69 1 198 1 7 1 228 2 229 1 204 1 149 1 316 3 205 1 32 1 252 1 345 1 104 1 86 2 105 1 310 1 189 1 348 1 
190 1 229 1 350 1 303 1 108 1 204 1 149 1 316 2 205 1 32 1 136 1 312 1 266 1 7 2 105 1 228 2 310 1 348 1 
190 1 229 1 130 1 108 1 204 1 316 2 205 1 32 1 136 1 312 1 266 1 115 1 331 1 116 1 86 2 105 1 228 2 310 1 
190 2 130 1 350 1 108 2 109 1 136 1 312 1 266 2 115 1 116 1 7 2 228 2 229 1 149 1 204 1 316 4 205 1 32 1 86 2 105 1 348 1 310 2 
190 1 229 1 350 1 303 1 108 1 204 1 149 1 316 2 205 1 32 1 136 1 266 1 55 1 7 2 105 1 228 2 310 1 348 1 
190 1 229 1 130 1 108 1 204 1 316 2 205 1 32 1 136 1 266 1 55 1 115 1 331 1 116 1 86 2 105 1 228 2 310 1 
190 2 130 1 350 1 108 2 109 1 136 1 266 2 115 1 116 1 7 2 228 2 229 1 149 1 204 1 316 4 205 1 32 1 55 1 86 2 105 1 348 1 310 2 
190 2 229 1 130 1 350 1 108 2 204 1 149 1 316 4 109 1 205 1 32 1 136 1 266 2 115 1 116 1 86 2 7 2 105 1 228 2 310 2 348 1 
215 1 351 1 136 1 90 1 196 1 198 1 7 1 245 1 72 1 228 2 98 1 229 1 278 1 230 1 120 1 204 1 316 2 317 1 205 1 32 1 249 1 252 1 128 1 86 1 60 1 105 1 370 1 188 1 
215 1 351 1 133 1 136 1 198 1 7 1 245 1 72 1 228 2 98 1 99 1 118 1 229 1 278 1 230 1 120 1 204 1 316 2 317 1 205 1 32 1 249 1 252 1 86 1 60 1 105 1 370 1 188 1 
190 2 130 1 350 1 108 2 109 1 136 1 266 2 67 1 115 1 116 1 7 2 228 2 229 1 149 1 204 1 316 4 205 1 32 1 86 2 105 1 348 1 310 2 
190 2 130 1 350 1 215 1 108 2 351 1 109 1 136 1 266 2 90 1 196 1 115 1 116 1 198 1 7 2 245 1 72 1 228 2 229 1 278 1 230 1 149 1 204 1 316 4 317 1 205 1 32 1 252 1 58 1 128 1 86 2 185 1 60 1 105 1 188 1 310 2 348 1 
190 1 130 1 350 1 108 1 109 1 327 1 136 1 63 1 266 1 67 1 116 1 69 1 198 1 7 2 228 2 229 1 202 1 204 1 149 1 316 3 205 1 32 1 252 1 345 1 86 1 105 1 189 1 348 1 310 1 
40 1 130 1 350 1 108 2 3 1 42 1 132 1 19 1 109 1 110 1 136 2 137 1 64 1 115 1 116 1 271 1 357 2 7 4 332 1 228 4 172 1 338 1 204 2 149 1 316 9 32 2 86 5 105 2 348 1 
40 1 325 1 130 1 350 1 108 2 3 3 42 1 132 1 44 1 109 2 110 2 136 3 64 1 137 2 115 1 116 1 142 2 357 2 7 11 332 2 228 6 360 1 119 1 172 2 204 3 149 2 316 20 32 3 175 1 182 1 86 9 210 1 105 3 348 2 
40 1 325 1 130 1 350 1 108 2 3 1 42 1 132 1 109 1 110 1 136 2 137 1 64 1 115 1 116 1 271 1 357 2 7 4 332 1 228 4 172 1 338 1 204 2 149 1 316 9 32 2 86 5 105 2 348 1 
40 1 325 1 130 1 350 1 108 2 3 1 42 1 132 1 109 1 110 1 136 2 137 1 64 1 115 1 116 1 271 1 357 2 7 4 332 1 228 4 172 1 338 1 204 2 149 1 316 9 32 2 86 5 105 2 348 1 
40 1 325 1 130 6 350 6 108 12 193 1 3 3 42 1 132 1 44 1 109 6 110 1 136 2 21 2 137 2 64 1 138 1 115 6 116 7 142 1 271 2 5 1 357 4 299 1 7 24 332 1 228 4 360 1 119 1 148 1 172 4 204 2 149 7 316 46 32 2 175 1 178 1 182 1 86 22 210 1 105 2 348 6 
207 1 28 1 318 1 84 1 330 1 367 1 8 1 274 1 53 1 286 1 
195 1 180 1 
318 1 330 1 366 1 367 1 15 1 274 1 53 1 97 1 286 1 
28 1 361 1 53 1 207 1 318 1 308 1 330 1 140 1 367 1 244 1 8 1 274 1 184 1 9 1 300 1 38 2 73 1 286 1 
28 1 361 1 53 1 207 1 318 1 308 1 330 1 140 1 367 1 244 1 8 1 274 1 184 1 9 1 300 1 38 2 73 1 286 1 
28 1 361 1 53 1 207 1 318 1 308 1 330 1 140 1 367 1 244 1 8 1 274 1 184 1 9 1 300 1 38 2 73 1 286 1 
201 1 239 1 191 1 
201 1 239 1 191 1 
1 1 18 1 
201 1 1 1 18 1 
80 1 59 1 
327 2 355 1 63 2 195 1 91 1 330 1 140 1 47 1 198 2 244 1 274 1 300 1 169 1 80 1 306 1 53 1 249 1 252 2 318 1 308 1 180 1 367 1 59 1 38 1 286 1 349 1 189 2 
239 1 191 1 
201 1 1 1 18 1 
215 1 351 1 292 1 327 2 265 1 136 1 313 1 67 1 95 1 198 2 223 1 7 1 245 2 228 2 98 1 229 1 230 2 204 1 30 1 316 2 317 2 205 1 32 1 102 1 252 2 86 1 129 2 60 1 105 1 188 1 370 1 
39 1 200 1 215 1 230 2 351 1 317 2 354 1 92 1 56 1 282 1 319 1 36 1 96 2 6 1 245 2 185 1 227 1 211 1 87 1 
39 1 215 1 230 1 351 1 317 1 354 1 92 1 56 1 282 1 315 1 36 1 96 2 6 1 245 1 227 1 211 1 87 1 
200 1 215 1 230 1 351 1 131 1 120 1 317 1 294 1 92 1 245 1 60 1 188 1 157 1 27 1 
39 1 200 1 215 1 230 1 351 1 317 1 354 1 92 1 56 1 282 1 319 1 36 1 96 2 6 1 245 1 227 1 211 1 87 1 
168 1 
361 1 147 1 85 1 70 1 144 1 237 1 309 1 
335 1 361 2 194 1 264 1 135 1 267 1 308 1 124 1 13 1 255 1 57 1 183 1 70 1 225 1 300 1 144 1 237 1 
260 1 215 1 351 2 2 1 194 2 109 1 216 2 162 1 135 2 356 1 114 1 66 1 296 2 70 3 225 2 245 1 300 2 144 2 335 1 278 1 230 1 78 1 120 1 149 1 173 1 317 1 250 1 308 2 124 2 255 2 57 2 257 1 60 4 37 1 212 2 188 1 348 1 258 1 
130 2 194 1 109 2 216 5 135 1 137 1 116 2 357 1 70 4 225 3 144 6 360 1 119 1 172 1 149 2 175 1 124 1 255 1 182 1 210 1 212 5 348 2 
193 1 194 1 45 1 135 1 327 1 22 2 63 1 138 1 166 1 243 1 116 1 297 1 198 1 299 1 70 2 300 1 144 2 276 1 149 2 339 1 252 1 124 1 308 1 255 1 345 1 322 1 236 1 189 1 
147 1 361 1 194 1 135 1 124 1 85 1 255 1 70 1 144 1 237 1 
149 1 109 1 216 1 70 2 225 1 212 1 348 1 
308 1 335 1 361 1 57 1 300 1 237 1 
215 1 289 1 290 2 351 1 2 2 131 1 194 2 135 2 167 1 94 1 70 2 245 4 144 2 300 3 335 2 230 4 279 1 231 2 120 2 317 4 364 1 124 2 308 3 255 1 57 4 181 1 60 1 188 1 157 1 
215 1 351 1 327 2 136 1 63 2 166 1 90 1 196 1 198 3 245 1 228 2 72 1 98 1 229 1 278 1 230 1 120 1 204 1 316 1 317 1 205 1 32 1 249 1 252 3 103 1 345 2 128 1 86 1 105 1 60 1 188 1 189 2 
361 1 290 1 2 1 194 1 216 1 135 1 124 1 255 1 70 1 225 1 144 1 237 1 
16 1 53 1 286 1 
207 1 17 1 80 1 53 1 286 1 
16 1 53 1 286 1 
16 1 53 1 286 1 
89 1 53 1 286 1 
89 1 53 1 286 1 
89 1 53 1 286 1 
53 1 286 1 
318 1 330 1 
350 1 108 3 148 1 193 1 149 1 204 2 316 8 32 2 136 2 138 1 115 2 178 1 116 1 142 1 5 1 299 1 86 4 7 4 105 2 228 4 
108 2 148 1 193 1 149 1 316 6 138 1 115 2 178 1 116 1 5 1 86 3 299 1 7 3 309 1 
75 1 130 1 350 1 108 2 204 1 149 1 316 4 109 1 32 1 136 1 115 1 116 1 86 2 7 2 105 1 228 2 348 1 
130 1 350 1 108 2 172 1 149 1 316 7 109 1 137 1 115 1 116 1 271 1 357 2 86 4 7 3 348 1 
130 2 350 4 108 9 193 2 109 2 136 2 21 1 138 2 115 5 116 3 271 1 142 2 5 1 357 2 299 1 7 11 228 4 148 1 172 2 149 3 204 2 316 23 281 1 32 2 178 1 14 1 86 12 105 2 348 2 
316 1 357 1 86 1 
172 1 316 1 7 1 
75 1 130 1 350 1 108 3 204 1 149 1 316 6 109 1 162 1 136 1 32 1 115 2 116 1 86 3 7 3 105 1 228 2 348 1 
130 2 350 1 108 2 42 1 109 2 136 1 137 1 115 1 116 2 357 1 7 6 228 2 360 1 119 1 172 1 204 1 149 2 316 12 32 1 175 1 182 1 86 6 105 1 210 1 348 2 
350 1 108 2 193 1 149 1 316 6 138 1 115 1 116 1 299 1 7 3 86 3 
350 1 108 2 193 1 148 1 204 1 316 3 281 1 32 1 136 1 138 1 115 1 142 1 5 1 7 1 86 2 105 1 228 2 
350 2 108 5 193 2 204 1 42 1 149 2 316 10 45 1 136 1 32 1 138 2 115 3 116 2 7 5 86 5 299 1 105 1 228 2 
350 1 108 1 42 1 204 1 149 1 316 2 32 1 136 1 7 2 105 1 228 2 348 1 
130 1 350 1 108 2 42 1 204 1 149 1 316 4 109 1 32 1 136 1 115 1 116 1 86 2 7 2 105 1 228 2 348 1 
350 1 108 2 193 1 338 1 42 1 204 3 316 3 281 1 32 3 136 3 138 1 115 1 142 1 86 2 7 1 105 3 228 6 
130 3 350 5 108 12 193 3 42 1 109 3 136 5 293 1 137 1 138 3 115 7 116 5 142 2 271 1 5 1 357 4 299 2 7 16 10 1 228 10 75 1 148 1 305 1 172 3 338 1 204 5 149 5 316 34 281 1 32 5 178 1 86 18 105 5 348 3 
108 2 193 1 42 1 136 1 137 1 138 1 115 2 116 1 357 1 5 1 7 4 299 1 228 2 172 1 148 1 149 1 204 1 316 8 32 1 175 1 178 1 86 4 105 1 
350 1 108 3 193 1 42 1 109 1 136 2 137 1 138 1 115 2 116 1 271 1 5 1 357 2 299 1 7 6 228 4 75 1 148 1 172 1 204 2 149 2 316 11 32 2 175 1 178 1 86 5 105 2 348 1 
130 2 350 1 108 4 193 1 42 1 109 2 136 3 137 1 138 1 115 3 116 3 142 1 5 1 357 1 299 1 7 9 228 6 75 1 360 1 119 1 148 1 172 1 204 3 149 3 316 19 32 3 175 1 178 1 182 1 86 10 210 1 105 3 348 2 
130 1 350 2 108 5 193 1 42 1 109 2 136 3 137 1 138 1 115 3 116 2 142 1 5 1 357 1 299 1 7 10 228 6 75 1 360 1 119 1 148 1 172 1 204 3 149 3 316 17 32 3 175 1 178 1 182 1 86 7 105 3 210 1 348 2 
108 2 193 1 42 1 136 1 137 1 138 1 115 2 116 1 357 1 5 1 7 4 299 1 228 2 172 1 148 1 149 1 204 1 316 8 32 1 175 1 178 1 86 4 105 1 
130 2 350 1 108 2 42 1 109 2 136 1 137 1 115 1 116 2 357 1 7 6 228 2 360 1 119 1 172 1 204 1 149 2 316 12 32 1 175 1 182 1 86 6 105 1 210 1 348 2 
130 1 350 2 108 5 193 1 42 1 109 2 136 4 137 1 138 1 115 3 116 2 142 2 5 1 357 1 299 1 7 10 228 8 75 1 360 1 119 1 148 1 172 1 204 4 149 3 316 18 32 4 175 1 178 1 182 1 86 8 210 1 105 4 348 2 
130 2 350 3 108 6 42 1 109 3 136 4 137 1 115 3 116 2 142 2 357 1 7 9 228 8 360 1 119 1 172 1 204 4 338 1 149 3 316 16 32 4 175 1 182 1 86 7 210 1 105 4 348 3 
350 3 108 6 148 1 193 3 149 1 316 7 138 3 115 3 116 1 5 2 86 4 299 1 7 3 
130 1 350 1 108 4 193 1 42 1 109 2 136 4 137 1 138 1 115 3 116 2 142 2 5 1 357 1 299 1 7 10 228 8 360 1 119 1 148 1 172 1 204 4 338 1 149 3 316 18 32 4 175 1 178 1 182 1 86 8 210 1 105 4 348 2 
220 1 198 1 327 1 246 1 226 1 249 1 252 1 
259 1 101 1 327 1 164 1 249 1 314 1 329 1 252 1 220 1 198 1 226 1 246 1 
215 1 230 1 351 1 131 1 120 1 245 1 317 1 60 1 188 1 157 1 309 1 
278 1 302 1 215 1 230 1 351 1 120 1 327 1 317 1 63 1 249 1 252 2 90 1 198 2 245 1 60 1 188 1 72 1 189 1 
276 1 278 2 302 1 215 1 230 1 351 1 231 1 233 1 327 2 317 1 63 1 249 1 83 1 252 2 90 1 198 2 154 1 245 1 60 3 188 2 72 1 333 1 189 2 
238 1 215 1 351 1 133 1 327 2 63 1 198 2 245 2 72 1 333 1 276 1 302 1 278 2 230 2 231 1 233 1 317 2 249 1 252 2 83 1 154 1 60 3 188 2 189 2 
238 1 278 1 361 1 215 1 230 3 78 1 351 1 231 1 120 1 173 1 317 3 363 1 83 1 308 2 57 1 296 1 154 1 245 3 300 2 60 4 188 1 237 1 324 1 
238 1 278 1 260 1 361 1 215 1 230 3 78 1 351 1 231 1 120 1 173 1 317 3 83 1 308 2 57 1 296 1 154 1 245 3 300 2 60 4 188 1 237 1 
215 1 230 1 351 1 192 1 245 1 317 1 
159 1 278 1 215 2 230 6 351 3 192 1 120 2 52 1 317 7 356 1 269 1 221 1 139 1 282 1 223 1 129 1 185 1 245 7 60 3 146 1 188 2 
190 1 215 1 108 2 351 1 193 1 327 1 136 2 63 1 266 1 138 1 90 1 196 1 67 1 115 2 116 1 198 2 5 1 7 3 299 1 245 1 72 1 228 4 229 2 278 1 302 1 230 1 148 1 149 1 204 2 316 6 205 2 317 1 32 2 102 1 249 2 252 2 178 1 58 1 128 1 86 3 185 1 60 1 105 2 186 1 188 1 310 1 189 1 
260 1 194 2 135 2 66 1 296 1 70 1 245 1 144 1 300 3 335 1 361 1 147 1 230 1 78 1 120 1 173 1 306 1 317 1 364 1 250 1 124 2 308 3 85 1 255 2 57 2 60 2 37 1 237 1 
278 1 215 1 230 2 351 2 192 1 173 1 317 2 356 1 114 1 185 1 245 2 60 2 188 1 
238 1 215 1 230 4 351 1 131 1 120 1 341 1 317 4 245 4 185 1 60 1 157 1 188 1 
278 1 215 1 230 2 231 1 351 2 352 1 317 2 221 1 197 1 139 1 245 2 60 1 187 1 188 1 
39 1 56 1 215 1 230 1 351 1 120 1 36 1 96 1 245 1 317 1 
215 1 230 2 351 1 317 2 265 1 282 1 223 1 185 1 245 2 60 1 188 1 
215 2 230 4 231 1 131 1 351 2 120 1 52 1 341 1 317 5 223 1 245 5 185 1 60 3 157 1 188 2 146 1 
215 2 230 4 231 1 131 1 351 2 120 1 341 1 317 5 48 1 223 1 245 5 185 1 60 3 157 1 188 2 146 1 
278 1 302 1 215 1 230 1 351 1 120 1 133 1 327 1 317 1 63 1 249 1 252 2 198 2 245 1 60 1 188 1 72 1 189 1 
278 1 215 1 230 1 231 1 351 2 317 1 356 1 269 1 221 1 139 1 245 1 60 1 188 1 
160 1 292 1 327 1 343 1 313 1 35 1 252 1 95 1 198 1 
107 1 359 1 343 1 
160 1 127 1 343 1 249 1 35 1 
276 1 359 1 107 1 361 1 78 1 160 2 233 1 306 1 81 1 343 1 249 1 23 1 35 2 308 2 219 1 127 2 300 2 237 1 333 1 
77 1 369 1 11 1 309 1 
77 1 261 1 321 1 369 1 111 1 11 1 74 1 
262 1 321 1 323 1 
277 1 77 1 261 1 320 1 321 3 326 1 369 1 285 2 111 3 11 1 74 1 218 1 
77 1 295 1 100 1 261 1 321 2 369 1 111 2 11 1 74 1 
261 1 326 1 263 1 111 1 125 1 36 1 321 1 369 1 96 1 227 1 74 1 
77 1 261 1 321 1 326 1 369 1 111 1 74 1 
77 2 261 1 321 1 326 1 111 1 11 1 74 1 
214 1 77 1 261 2 326 1 111 2 20 1 268 1 321 2 369 1 74 2 
203 1 77 1 261 1 326 1 263 1 111 3 295 2 26 1 321 3 369 2 156 1 11 1 74 1 
39 1 295 1 261 1 161 1 321 1 326 1 96 1 111 2 74 1 
304 1 77 1 261 2 100 1 326 1 263 1 111 4 295 2 26 1 321 4 369 2 11 1 74 2 
77 1 261 1 321 1 326 1 369 1 111 1 11 1 74 1 
277 1 77 2 261 1 263 1 111 4 218 1 254 1 295 2 26 1 321 4 369 3 285 1 11 2 74 1 
337 1 77 1 261 1 326 1 111 2 295 1 321 2 369 1 358 1 61 1 74 1 11 1 
277 1 77 1 261 1 321 3 326 1 49 1 369 1 285 2 111 3 11 1 74 1 218 2 
369 2 311 2 234 1 213 1 
261 1 321 1 326 1 111 1 54 1 74 1 
203 1 77 1 295 1 261 1 321 2 326 1 369 1 111 2 11 1 74 1 
150 1 
77 1 261 1 321 1 326 1 369 1 111 1 11 1 74 1 
203 1 261 1 77 1 326 1 111 3 295 1 321 3 369 1 285 1 74 1 11 1 
254 1 26 1 263 1 369 1 
77 1 369 1 

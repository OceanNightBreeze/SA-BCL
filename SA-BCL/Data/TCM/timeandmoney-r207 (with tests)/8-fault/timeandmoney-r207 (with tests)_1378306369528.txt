#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (40,41,115,127) (40,41,115,127) (40,41,115,127) 297 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (40,41,115,127) (40,41,115,127) (40,41,115,127) 297 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (40,41,115,127) (40,41,115,127) (40,41,115,127) 297 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (40,41,115,127) (40,41,115,127) (40,41,115,127) 297 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (40,41,115,127) (40,41,115,127) (40,41,115,127) 297 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (40,41,115,127) (40,41,115,127) (40,41,115,127) 297 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (40,41,115,127) (40,41,115,127) (40,41,115,127) 297 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (40,41,115,127) (40,41,115,127) (40,41,115,127) 297 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (40,41,115,127) (40,41,115,127) (40,41,115,127) 297 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 59 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 59 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 59 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (40,41,115,127) (40,41,115,127) (40,41,115,127) 297 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (40,41,115,127) (40,41,115,127) (40,41,115,127) (53,174) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (40,41,115,127) (40,41,115,127) (53,174) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (40,41,115,127) (40,41,115,127) (40,41,115,127) (53,174) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (40,41,115,127) (40,41,115,127) (40,41,115,127) 297 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 194 303 275 28 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 194 303 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 194 303 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 194 67 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 194 303 275 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 194 303 275 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 59 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 59 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 59 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 59 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1369 | = null
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | STATEMENT | 997 | stmt -> ;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 0
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1213 | stmt -> ;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 817 | stmt -> ;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> -1
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3404 | = null
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
297 1 191 1 115 1 40 1 41 1 
297 1 191 1 115 1 40 1 41 1 
297 1 191 1 115 1 40 1 41 1 
297 1 191 1 115 1 40 1 41 1 
297 1 191 1 115 1 40 1 41 1 
297 1 191 1 115 1 40 1 41 1 
297 1 191 1 115 1 40 1 41 1 
297 1 191 1 115 1 40 1 41 1 
297 1 191 1 115 1 40 1 41 1 
59 1 
57 1 285 1 160 2 
153 2 295 2 38 2 3 2 215 2 286 2 181 1 54 1 
46 2 295 2 47 1 220 1 3 2 145 2 101 1 102 1 147 1 181 1 54 1 55 1 152 1 153 3 186 2 304 1 22 1 309 1 313 1 314 1 277 1 316 2 233 1 281 1 72 1 286 2 243 1 82 1 130 1 169 1 38 3 251 1 92 1 215 2 177 1 178 2 179 1 
153 1 295 1 279 1 38 1 3 1 252 1 215 1 286 1 74 1 54 1 
136 1 315 1 203 1 285 1 208 1 153 1 224 1 38 1 249 1 175 1 252 1 215 1 117 1 135 1 
136 1 315 2 295 1 203 1 3 1 285 1 286 1 153 1 224 2 38 1 249 1 252 1 215 1 117 1 135 1 
224 1 1 1 315 1 212 1 30 1 
136 1 224 2 1 1 315 2 276 1 285 1 104 1 30 1 
224 1 1 1 315 1 
315 1 295 1 279 1 3 1 239 1 286 1 74 1 30 1 54 1 224 1 153 1 38 1 252 1 215 1 
285 1 
136 1 224 2 1 1 315 2 12 1 285 1 104 1 30 1 
136 1 315 5 1 2 231 2 204 1 235 1 259 2 222 1 285 1 104 1 30 2 288 1 224 5 108 1 7 1 172 1 328 2 329 1 198 1 
59 1 
295 1 49 1 3 1 286 1 181 1 153 2 38 2 252 1 215 2 216 1 294 1 
163 1 39 1 250 1 
277 1 122 1 316 1 233 1 47 1 72 1 101 1 181 1 152 1 153 1 186 1 304 1 169 1 38 1 251 1 178 1 
153 3 295 1 38 3 3 3 215 3 286 3 181 1 162 1 
153 1 38 1 3 1 252 1 215 1 286 1 74 1 
295 1 49 1 3 1 286 1 153 1 38 1 252 1 215 1 216 1 
46 1 295 2 47 1 48 1 220 1 3 3 145 2 101 1 147 1 181 1 54 1 55 1 152 1 153 4 224 1 186 1 304 1 8 1 189 1 22 1 117 1 162 1 313 1 315 1 314 1 203 1 277 1 316 1 233 1 281 1 72 1 286 3 243 1 82 1 169 1 38 4 249 1 251 1 252 1 215 3 216 1 178 1 179 1 135 1 
153 2 38 2 3 1 175 1 17 1 215 2 286 1 181 1 162 1 
315 1 295 1 203 1 48 1 3 3 285 1 286 3 224 1 153 3 109 1 8 1 38 3 249 1 252 1 215 3 216 1 117 1 162 2 135 1 
163 1 295 1 3 2 286 2 153 2 38 2 250 1 215 2 216 1 162 1 
277 1 316 1 233 1 47 1 72 1 101 1 181 1 152 1 153 1 186 1 304 1 169 1 38 1 251 1 178 1 
255 1 277 1 316 1 47 1 283 1 72 1 101 1 181 1 152 1 153 1 186 1 169 1 38 1 251 1 178 1 
46 4 139 1 299 1 145 2 223 1 55 1 150 1 185 1 267 1 195 1 22 1 313 1 163 2 274 1 281 1 243 2 82 1 36 1 246 1 39 2 250 2 214 1 177 2 179 1 
153 1 38 1 3 1 252 1 215 1 286 1 117 1 333 1 
277 1 316 1 47 1 233 1 48 1 3 1 101 1 72 1 286 1 152 1 153 2 186 1 304 1 169 1 38 2 250 1 251 1 215 1 162 1 178 1 
295 1 48 1 234 1 3 4 286 4 181 1 153 5 38 5 158 1 175 1 17 1 215 5 216 1 162 2 
153 2 38 2 3 2 252 1 215 2 286 2 74 1 333 1 
33 1 321 1 
33 1 321 1 
33 1 81 1 159 1 321 1 
33 1 81 1 159 1 321 1 
81 1 159 1 
33 1 112 1 321 1 
33 1 112 1 321 1 
33 1 112 1 321 1 
45 1 33 1 321 1 
80 1 81 1 33 2 98 1 159 1 321 2 
33 1 52 1 321 1 
33 1 52 1 321 1 
33 1 52 1 321 1 
315 2 143 1 260 2 236 2 285 1 105 2 321 2 224 2 210 3 324 1 80 1 33 2 37 1 13 1 14 2 15 2 217 1 197 1 200 1 
45 1 140 1 3 2 143 1 298 1 260 1 181 1 105 1 224 1 153 2 58 1 14 1 18 1 315 1 121 1 236 1 286 2 321 1 210 1 323 1 33 1 38 2 213 1 215 2 
128 1 113 1 87 1 
128 1 113 1 134 1 
128 3 184 1 232 1 87 2 61 1 134 1 
128 2 184 1 87 1 207 1 61 1 134 1 
128 2 184 1 87 1 61 2 134 1 
136 1 259 1 299 1 223 1 224 4 58 1 7 3 267 1 305 1 160 1 19 1 18 1 228 1 315 4 231 1 121 1 235 1 238 1 285 1 125 1 30 4 289 1 32 1 36 1 131 2 328 1 172 1 95 1 334 1 
136 1 1 1 295 1 3 1 148 1 54 1 153 1 224 2 315 2 279 1 285 1 239 1 286 1 74 1 30 2 78 1 212 1 38 1 173 1 252 1 215 1 
136 1 259 1 299 1 222 1 223 1 224 3 57 2 7 3 267 1 305 1 160 4 18 1 315 3 231 1 235 2 285 3 238 1 125 1 30 2 289 2 32 1 131 1 36 1 328 1 95 2 334 1 
136 1 259 1 299 2 222 1 223 2 224 4 57 3 7 5 267 2 305 1 160 7 18 2 199 1 315 4 231 1 235 4 285 4 238 1 125 2 30 3 289 4 32 1 247 1 131 2 36 2 328 1 89 1 95 4 334 1 
59 1 
268 1 152 1 
157 1 
169 1 152 1 
110 1 169 1 266 2 101 1 152 3 119 1 
169 1 101 1 152 1 
84 1 152 1 
46 7 25 1 138 1 50 1 73 1 243 3 150 2 77 1 36 1 267 1 171 2 306 1 195 3 270 1 227 1 177 4 311 1 
46 7 25 1 138 1 50 1 73 1 243 3 150 2 77 1 36 1 267 1 171 2 306 1 195 3 270 1 227 1 177 4 311 1 
46 7 25 1 138 1 50 1 73 1 243 3 150 2 77 1 36 1 267 1 171 2 306 1 195 3 270 1 227 1 177 4 273 1 311 1 
43 1 46 31 138 2 50 2 299 3 145 2 223 3 150 5 267 4 306 2 193 1 195 10 270 1 227 1 22 1 64 1 311 2 313 1 229 1 201 1 25 1 164 3 73 1 281 1 284 1 125 3 320 1 243 15 77 5 82 1 36 4 171 3 90 4 177 16 
43 1 46 9 138 1 50 1 145 4 150 3 267 1 306 1 195 4 22 2 227 1 272 1 311 1 313 2 230 1 25 1 281 2 73 1 243 4 77 1 82 2 36 1 171 2 177 5 
297 1 191 1 115 1 40 1 41 1 
191 1 115 1 53 1 40 1 41 1 
191 1 174 1 115 1 127 1 
191 1 115 1 53 1 40 1 41 1 
297 1 191 1 115 1 40 1 41 1 
69 1 
0 1 1 6 259 1 103 2 104 3 186 2 7 2 114 2 117 1 120 2 277 2 203 1 206 1 282 1 285 2 124 4 208 1 211 2 32 1 34 1 38 1 215 1 292 1 135 1 136 1 47 1 51 1 152 1 224 5 153 1 57 2 154 1 160 2 310 1 315 5 231 1 316 2 235 2 70 2 167 1 319 1 72 1 241 1 322 1 79 1 325 1 169 1 172 1 328 1 88 2 249 1 175 1 252 1 176 2 178 2 
1 2 315 3 203 1 51 1 104 1 124 2 208 1 224 3 153 1 211 1 154 1 34 1 12 1 38 1 249 1 252 1 175 1 215 1 117 1 292 1 310 1 135 1 
136 1 1 1 51 1 104 1 153 1 224 3 154 1 12 1 117 1 310 1 315 3 203 1 124 3 285 1 208 1 34 1 38 1 249 1 175 1 252 1 215 1 176 1 292 1 135 1 
136 1 1 2 51 1 104 1 153 1 224 3 154 1 12 1 117 1 310 1 315 3 120 1 203 1 124 3 285 1 208 1 211 1 34 1 38 1 249 1 175 1 252 1 215 1 176 1 292 1 135 1 
0 1 1 3 259 1 51 1 104 1 224 3 153 1 303 1 7 1 154 1 12 1 194 1 117 1 310 1 65 1 275 1 315 3 120 2 231 1 203 1 28 1 235 1 124 2 208 1 211 2 34 1 38 1 328 1 172 1 249 1 175 1 252 1 215 1 292 1 135 1 
0 1 1 4 259 1 103 2 104 2 7 1 114 2 117 1 120 2 203 1 124 4 285 2 208 1 211 2 34 1 38 1 215 1 292 1 135 1 136 1 51 1 153 1 224 4 57 2 154 1 160 2 310 1 315 4 231 1 235 1 70 2 79 1 325 1 172 1 328 1 249 1 88 2 252 1 175 1 176 2 
0 1 51 1 259 1 153 1 224 2 303 1 7 1 154 1 194 1 117 1 310 1 65 1 315 2 231 1 203 1 235 1 124 2 208 1 34 1 38 1 172 1 328 1 249 1 175 1 252 1 215 1 292 1 135 1 
0 1 51 1 259 1 153 1 224 2 303 1 7 1 154 1 194 1 117 1 310 1 65 1 315 2 231 1 203 1 235 1 124 2 208 1 34 1 38 1 172 1 328 1 249 1 175 1 252 1 215 1 292 1 135 1 
51 1 259 1 153 1 224 2 7 1 154 1 194 1 117 1 310 1 23 1 315 2 67 1 231 1 203 1 235 1 124 2 208 1 34 1 38 1 172 1 328 1 249 1 175 1 252 1 215 1 330 1 292 1 135 1 
0 1 1 1 259 1 51 1 153 1 224 2 303 1 7 1 154 1 194 1 117 1 310 1 65 1 315 2 275 1 120 1 231 1 203 1 235 1 124 3 208 1 211 1 34 1 38 1 328 1 172 1 249 1 175 1 252 1 215 1 176 1 292 1 135 1 
0 1 1 1 259 1 51 1 153 1 224 2 303 1 7 1 154 1 194 1 117 1 310 1 65 1 315 2 275 1 120 1 231 1 203 1 235 1 124 3 208 1 211 1 34 1 38 1 328 1 172 1 249 1 175 1 252 1 215 1 176 1 292 1 135 1 
1 4 259 1 103 2 104 2 7 1 188 2 114 2 117 1 23 1 120 2 203 1 124 4 285 1 208 1 211 2 34 1 38 1 215 1 292 1 135 1 136 1 51 1 153 1 224 4 154 1 308 2 160 2 310 1 315 4 231 1 235 1 79 1 325 1 172 1 328 1 249 1 252 1 175 1 176 2 
313 1 185 1 82 1 59 1 281 1 145 2 22 1 179 1 55 1 
137 1 258 1 46 14 142 1 220 1 299 1 145 4 223 2 181 1 262 1 150 1 55 1 267 1 195 2 22 2 64 1 313 2 163 4 164 3 281 2 125 2 320 1 240 1 243 6 77 1 82 2 36 2 39 11 250 11 90 3 92 1 177 8 179 2 
46 2 47 1 48 1 3 1 220 1 101 1 145 2 181 1 262 1 55 1 152 1 153 2 186 1 304 1 20 1 22 1 162 1 313 1 163 1 277 1 316 1 122 1 233 1 318 1 72 1 281 1 286 1 243 1 82 1 169 1 38 2 251 1 215 1 92 1 177 1 178 1 179 1 218 1 
3 1 101 2 181 2 262 1 183 2 186 3 267 3 195 8 22 3 24 2 25 1 277 1 281 3 286 1 125 2 126 1 36 3 38 3 39 7 215 1 219 2 46 20 48 1 47 2 50 1 220 1 299 2 145 6 147 2 223 2 150 4 55 3 152 2 153 3 304 2 306 1 226 1 161 1 227 1 162 1 313 3 163 7 316 3 233 2 73 1 72 2 75 1 243 10 77 4 82 3 169 2 171 1 251 2 250 7 92 1 177 10 178 3 254 2 179 3 
46 2 47 2 3 1 220 1 261 1 145 4 55 2 152 3 153 1 185 1 186 8 111 1 22 2 309 2 162 1 313 2 277 2 316 7 165 1 166 1 167 1 206 1 72 2 281 2 286 1 126 1 243 1 82 2 169 2 38 1 248 1 86 1 91 1 133 1 215 1 92 1 177 1 178 8 179 2 
295 1 46 3 3 1 299 1 145 2 223 1 262 1 150 1 55 1 153 1 267 1 195 1 22 1 313 1 163 1 281 1 286 1 125 1 243 2 82 1 36 1 39 1 38 1 250 1 215 1 216 1 177 1 179 1 96 1 
313 1 163 1 46 2 145 2 281 1 223 1 55 1 77 1 185 1 82 1 246 1 36 1 39 1 250 1 195 1 22 1 177 2 179 1 
313 1 163 1 46 2 139 1 299 1 145 2 281 1 150 1 55 1 243 2 185 1 82 1 39 1 267 1 250 1 195 1 22 1 179 1 
46 4 299 1 145 2 223 1 55 1 150 1 185 1 267 1 195 2 22 1 313 1 163 2 281 1 125 1 243 2 77 1 82 1 36 1 39 2 250 2 177 2 179 1 
313 1 163 1 46 2 166 1 145 2 281 1 223 1 55 1 77 1 82 1 246 1 36 1 39 1 250 1 195 1 22 1 177 2 179 1 
313 1 163 1 46 2 139 1 166 1 299 1 145 2 281 1 150 1 55 1 243 2 82 1 39 1 267 1 250 1 195 1 22 1 179 1 
313 1 163 2 46 4 299 1 166 1 145 2 281 1 223 1 125 1 150 1 243 2 55 1 77 1 82 1 36 1 39 2 267 1 250 2 195 2 22 1 177 2 179 1 
313 1 163 2 46 4 299 1 145 2 281 1 223 1 125 1 150 1 243 2 55 1 77 1 82 1 36 1 39 2 267 1 250 2 195 2 22 1 177 2 179 1 
46 2 47 1 220 1 101 1 145 2 147 1 181 1 55 1 152 1 153 1 186 1 304 1 22 1 313 1 277 1 316 1 233 1 72 1 281 1 243 1 82 1 169 1 38 1 251 1 92 1 177 1 178 1 179 1 
255 1 46 2 47 1 220 1 101 1 145 2 181 1 55 1 152 1 153 1 186 1 22 1 313 1 277 1 316 1 72 1 283 1 281 1 243 1 82 1 169 1 85 1 38 1 251 1 92 1 177 1 178 1 179 1 
313 1 163 2 46 4 299 1 145 2 281 1 223 1 125 1 262 1 150 1 243 2 55 1 77 1 82 1 36 1 39 2 267 1 250 2 195 2 22 1 177 2 179 1 
46 4 47 1 299 1 101 1 145 2 223 1 147 1 150 1 55 1 152 1 153 1 186 1 304 1 111 1 267 1 195 2 22 1 24 1 313 1 163 2 316 1 233 1 72 1 281 1 125 1 243 2 77 1 82 1 36 1 169 1 39 2 38 1 250 2 251 1 177 2 178 1 179 1 
295 1 46 3 3 1 299 1 145 2 223 1 262 1 55 1 153 1 267 1 269 1 195 1 22 1 313 1 163 1 281 1 286 1 125 1 243 1 77 1 82 1 36 1 38 1 39 1 250 1 215 1 216 1 177 2 179 1 
46 19 299 3 145 4 223 3 150 3 9 1 267 3 195 6 116 1 196 2 22 2 64 1 313 2 230 1 164 1 278 1 27 1 317 1 281 2 287 1 125 3 242 2 320 1 243 10 77 3 82 2 36 3 90 2 94 1 177 9 
43 2 46 26 221 1 299 2 145 6 223 3 149 1 150 2 267 2 195 4 196 4 22 3 313 3 230 1 164 2 68 1 278 2 27 1 317 1 281 3 287 1 125 3 242 1 320 2 243 12 77 2 31 1 82 3 327 1 36 3 90 2 94 2 177 14 93 1 
180 1 267 5 195 8 116 1 22 3 196 4 25 1 27 1 278 2 281 3 125 4 287 1 31 1 36 5 43 1 46 41 50 1 221 1 299 4 145 6 223 4 149 1 150 4 306 1 227 1 64 1 313 3 164 3 230 1 68 1 317 1 73 1 320 3 242 1 243 21 77 4 82 3 327 1 171 1 90 4 177 20 94 1 93 1 
43 2 46 38 50 1 221 1 299 3 145 8 180 1 223 4 149 1 150 4 267 4 306 1 195 7 116 1 227 1 196 4 22 4 64 1 313 4 25 1 230 1 164 3 68 1 278 2 27 1 317 1 73 1 281 4 287 1 125 4 242 1 320 3 243 18 77 3 31 1 82 4 327 1 36 5 171 1 90 4 93 1 94 1 177 20 
43 1 46 52 50 1 221 1 299 7 145 4 223 7 149 1 150 7 267 8 306 1 195 14 227 1 196 4 22 2 64 2 313 2 25 1 230 1 164 4 68 1 278 1 27 1 317 1 73 1 281 2 287 1 125 7 242 1 240 2 320 2 243 25 77 7 31 1 82 2 327 1 36 8 171 1 90 4 93 1 94 1 177 27 
80 1 33 1 35 1 13 1 14 1 260 1 236 1 105 1 321 1 200 1 
45 1 213 1 
290 1 33 1 168 1 14 1 4 1 260 1 236 1 105 1 321 1 
315 1 143 1 260 1 236 1 285 1 105 1 321 1 224 1 210 2 80 1 33 1 37 1 13 1 14 1 15 1 217 1 197 1 200 1 
315 1 143 1 260 1 236 1 285 1 105 1 321 1 224 1 210 2 80 1 33 1 37 1 13 1 14 1 15 1 217 1 197 1 200 1 
315 1 143 1 260 1 236 1 285 1 105 1 321 1 224 1 210 2 80 1 33 1 37 1 13 1 14 1 15 1 217 1 197 1 200 1 
98 1 112 1 60 1 
98 1 112 1 60 1 
264 1 52 1 
264 1 98 1 52 1 
140 1 298 1 
45 1 140 1 298 1 3 2 260 1 181 1 105 1 153 2 224 1 58 1 14 1 15 1 18 1 315 1 121 1 236 1 286 2 30 1 321 1 76 1 210 1 323 1 33 1 37 1 38 2 213 1 215 2 
112 1 60 1 
264 1 98 1 52 1 
256 1 44 1 46 2 47 1 220 1 145 2 262 1 55 1 152 1 153 2 186 2 190 1 22 1 309 2 313 1 316 2 165 1 123 1 72 1 281 1 243 1 82 1 169 1 326 1 38 2 86 1 215 2 92 1 177 1 178 2 179 1 
257 1 232 1 316 2 47 1 72 1 146 1 126 1 128 2 244 1 186 2 187 1 245 1 225 1 111 1 113 1 87 1 331 1 178 2 134 1 
257 1 232 1 316 1 47 1 100 1 72 1 126 1 128 2 244 1 186 1 187 1 245 1 225 1 113 1 87 1 178 1 134 1 
277 1 316 1 47 1 167 1 206 1 72 1 146 1 152 1 56 1 186 1 187 1 83 1 169 1 178 1 
257 1 232 1 316 1 47 1 72 1 146 1 126 1 128 2 244 1 186 1 187 1 245 1 225 1 113 1 87 1 331 1 178 1 134 1 
182 1 
59 1 
0 1 136 1 1 1 259 1 104 1 224 1 57 1 7 1 160 1 315 1 231 1 235 1 70 1 285 2 328 1 172 1 88 1 
2 1 1 5 259 4 101 3 6 2 104 3 107 2 183 2 186 3 7 9 110 1 111 1 266 2 267 2 268 3 198 1 118 2 26 2 277 1 285 8 125 2 289 6 129 1 32 2 36 2 136 2 47 3 141 2 144 2 299 2 223 2 152 10 302 1 301 2 224 5 57 6 155 2 160 12 315 5 231 4 316 3 235 8 71 1 72 4 241 1 169 3 84 2 172 4 328 4 329 1 249 2 178 3 95 6 97 1 
136 2 1 1 141 1 259 2 221 1 299 2 104 1 223 2 149 1 224 1 265 1 57 3 7 8 267 2 160 6 315 1 231 2 164 1 26 2 235 5 285 5 125 2 241 1 320 1 289 5 31 1 32 1 327 1 36 2 328 2 172 2 291 1 90 1 93 1 95 5 
295 1 141 1 50 1 259 1 3 1 54 1 153 1 224 1 7 2 156 1 267 1 306 1 227 1 65 1 315 1 231 1 26 2 279 1 235 2 239 1 286 1 74 1 36 2 38 1 328 1 172 1 252 1 215 1 
136 1 231 1 259 1 235 1 285 1 7 1 172 1 328 1 329 1 198 1 
26 2 141 1 235 5 299 2 285 5 223 2 125 2 289 5 183 1 57 5 7 5 36 2 267 2 160 10 95 5 
136 1 224 1 315 1 1 1 285 1 104 1 
1 4 296 1 47 1 259 2 222 1 104 2 152 1 224 3 186 4 7 2 315 3 231 2 277 2 316 4 235 2 167 1 206 1 72 1 282 1 319 1 241 2 129 1 32 2 170 1 169 1 328 2 172 1 178 4 97 2 
46 1 295 2 47 1 220 1 3 2 145 2 101 1 147 1 181 1 54 1 55 1 152 1 153 3 186 1 304 1 22 1 313 1 314 1 277 1 316 1 233 1 281 1 72 1 286 2 243 1 82 1 169 1 38 3 251 1 215 2 178 1 179 1 
136 2 231 1 235 2 259 1 285 4 241 1 289 2 57 2 32 1 7 1 171 1 172 1 328 1 160 4 95 2 
236 1 307 1 105 1 
236 1 307 1 105 1 
236 1 307 1 105 1 
10 1 140 1 236 1 105 1 200 1 
280 1 236 1 105 1 
280 1 236 1 105 1 
280 1 236 1 105 1 
236 1 105 1 
33 1 321 1 
313 2 43 1 46 8 25 1 50 1 145 4 281 2 73 1 243 4 150 2 77 1 82 2 36 1 171 1 267 1 306 1 195 3 227 1 177 4 22 2 
59 1 
313 1 46 4 299 1 145 2 281 1 223 1 125 1 150 1 243 2 300 1 77 1 82 1 36 1 267 1 195 2 22 1 177 2 
46 7 164 1 299 1 223 1 125 1 320 1 150 1 243 4 77 1 36 1 267 1 90 2 195 2 177 3 64 1 
137 1 43 2 46 23 50 2 299 2 145 4 223 2 150 5 267 3 306 2 195 9 227 1 22 2 64 1 313 2 25 1 164 2 202 1 73 1 281 2 125 2 240 1 243 12 77 4 82 2 36 3 171 1 90 2 177 11 
46 1 90 1 243 1 
46 1 164 1 177 1 
313 1 46 6 299 1 281 1 145 2 223 1 125 1 300 1 243 3 150 2 183 1 77 1 82 1 36 1 267 1 195 3 22 1 177 3 
46 12 221 1 299 2 145 2 223 2 149 1 150 1 267 2 195 2 22 1 313 1 164 1 230 1 281 1 125 2 320 1 243 6 77 1 31 1 82 1 36 2 327 1 90 1 177 6 93 1 
46 6 50 1 243 3 150 1 77 1 36 1 267 1 306 1 195 2 227 1 177 3 
313 1 43 1 46 3 25 1 202 1 50 1 73 1 145 2 281 1 150 1 243 2 77 1 82 1 306 1 195 2 177 1 22 1 
313 1 230 1 46 10 50 2 281 1 145 2 150 3 243 5 77 2 82 1 156 1 36 2 267 2 306 2 195 5 22 1 177 5 227 1 
313 1 230 1 46 2 145 2 281 1 223 1 77 1 82 1 36 1 195 1 22 1 177 2 
313 1 230 1 46 4 299 1 145 2 281 1 223 1 125 1 150 1 243 2 77 1 82 1 36 1 267 1 195 2 22 1 177 2 
313 3 43 1 46 3 230 1 202 1 50 1 145 6 281 3 243 2 150 1 77 1 82 3 306 1 195 2 116 1 22 3 177 1 
43 2 46 34 50 3 299 3 145 10 223 3 300 1 150 7 267 5 306 3 193 1 195 12 116 1 227 2 22 5 64 1 201 1 313 5 25 1 230 1 164 3 202 1 73 1 281 5 284 1 125 3 320 1 243 18 77 5 82 5 36 5 171 1 90 4 177 16 
46 8 50 1 221 1 145 2 150 2 267 1 306 1 195 2 22 1 227 1 313 1 164 1 230 1 25 1 281 1 73 1 320 1 243 4 82 1 36 1 171 1 90 1 177 4 
46 11 50 1 221 1 145 4 223 1 150 2 300 1 267 1 306 1 195 3 227 1 22 2 64 1 313 2 25 1 230 1 164 1 73 1 281 2 125 1 320 1 243 5 77 1 82 2 36 2 171 1 90 2 177 6 
43 1 46 19 50 1 221 1 299 2 145 6 223 2 149 1 300 1 150 3 267 3 306 1 195 4 227 1 22 3 313 3 25 1 164 1 230 1 73 1 281 3 125 2 320 1 243 10 77 1 31 1 82 3 36 3 327 1 171 1 90 1 177 9 93 1 
43 1 46 17 50 1 221 1 299 1 145 6 223 2 149 1 300 1 150 3 267 2 306 1 195 5 227 1 22 3 313 3 25 1 164 1 230 1 73 1 281 3 125 2 320 1 243 7 77 2 31 1 82 3 36 3 327 1 171 1 90 1 177 10 93 1 
46 8 50 1 221 1 145 2 150 2 267 1 306 1 195 2 22 1 227 1 313 1 164 1 230 1 25 1 281 1 73 1 320 1 243 4 82 1 36 1 171 1 90 1 177 4 
46 12 221 1 299 2 145 2 223 2 149 1 150 1 267 2 195 2 22 1 313 1 164 1 230 1 281 1 125 2 320 1 243 6 77 1 31 1 82 1 36 2 327 1 90 1 177 6 93 1 
43 2 46 18 50 1 221 1 299 1 145 8 223 2 149 1 300 1 150 3 267 2 306 1 195 5 227 1 22 4 313 4 25 1 230 1 164 1 73 1 281 4 125 2 320 1 243 8 77 2 31 1 82 4 327 1 36 3 171 1 90 1 177 10 93 1 
43 2 46 16 221 1 299 2 145 8 223 3 149 1 150 3 267 2 195 6 116 1 22 4 313 4 230 1 164 1 281 4 125 3 320 1 243 7 77 3 31 1 82 4 327 1 36 3 90 1 177 9 93 1 
46 7 25 1 50 3 73 2 243 4 150 3 77 3 36 1 267 1 306 3 195 6 227 1 177 3 
43 2 46 18 50 1 221 1 299 1 145 8 223 2 149 1 150 3 267 2 306 1 195 4 116 1 227 1 22 4 313 4 25 1 230 1 164 1 73 1 281 4 125 2 320 1 243 8 77 1 31 1 82 4 327 1 36 3 171 1 90 1 177 10 93 1 
153 1 38 1 175 1 17 1 215 1 181 1 332 1 
99 1 181 1 209 1 153 1 38 1 192 1 175 1 17 1 253 1 215 1 332 1 293 1 
186 1 277 1 316 1 59 1 178 1 
277 1 316 1 233 1 47 1 3 1 101 1 72 1 286 1 181 1 152 1 153 2 186 1 169 1 38 2 251 1 215 1 162 1 178 1 
316 1 233 1 47 1 3 1 101 2 72 1 6 1 286 2 181 1 152 3 153 2 186 1 84 1 169 2 38 2 252 1 251 1 215 2 117 1 162 1 178 1 135 1 97 1 
42 1 255 1 47 1 3 1 101 2 6 1 181 1 152 3 153 2 186 2 117 1 162 1 316 2 72 1 286 2 169 2 84 1 38 2 251 1 252 1 215 2 178 2 135 1 97 1 
42 1 136 1 1 1 47 1 101 1 6 1 152 4 224 2 186 3 266 1 268 1 16 1 315 2 277 1 316 3 72 1 237 1 285 1 169 1 84 1 249 1 178 3 97 1 
42 1 136 1 315 2 1 1 277 1 316 3 47 1 101 1 72 1 285 1 6 1 107 1 152 4 224 2 186 3 84 1 169 1 266 1 249 1 268 1 178 3 97 1 
186 1 316 1 47 1 72 1 91 1 178 1 
66 1 277 2 316 6 47 2 165 1 261 1 101 1 72 3 126 1 151 1 152 3 186 7 110 1 111 1 169 2 132 1 248 1 91 1 133 1 309 1 178 7 
46 6 47 1 50 1 3 1 101 1 145 4 147 1 181 2 262 1 150 2 55 2 152 1 153 2 186 1 304 1 111 1 267 1 306 1 195 2 227 1 22 2 162 1 24 1 313 2 163 1 25 1 316 1 233 1 123 1 73 1 72 1 281 2 286 1 243 3 82 2 36 1 169 1 39 1 38 2 171 1 250 1 251 1 215 1 177 3 178 1 254 1 179 2 
136 1 1 2 259 2 144 1 104 1 107 1 152 2 224 3 186 1 7 1 155 1 266 1 268 1 198 1 118 1 315 3 231 2 277 1 316 1 235 1 285 1 30 1 129 1 328 2 172 2 329 1 249 1 178 1 
2 1 316 2 47 1 101 1 72 2 152 2 186 2 110 1 111 1 169 1 266 1 91 1 178 2 
42 1 186 4 277 1 316 4 47 1 169 1 111 1 206 1 167 1 72 1 5 1 178 4 152 1 
66 1 316 2 47 1 101 1 72 2 29 1 152 1 186 2 11 1 169 1 132 1 161 1 178 2 97 1 
128 1 186 1 277 1 225 1 316 1 47 1 113 1 72 1 178 1 134 1 
316 2 47 1 165 1 72 1 126 1 152 1 186 2 111 1 169 1 190 1 178 2 
277 1 316 4 47 2 165 1 206 1 167 1 72 2 5 1 152 3 186 5 111 1 169 2 248 1 133 1 178 5 97 1 
277 1 316 4 47 2 205 1 165 1 206 1 167 1 72 2 5 1 152 3 186 5 111 1 169 2 248 1 178 5 97 1 
255 1 277 1 316 1 47 1 3 1 101 1 72 1 286 1 181 1 152 1 153 2 186 1 169 1 38 2 251 1 215 1 162 1 178 1 
66 1 316 1 47 1 101 1 72 2 151 1 152 1 186 1 110 1 169 1 132 1 178 1 97 1 
256 1 44 1 153 1 263 1 326 1 38 1 62 1 215 1 63 1 
263 1 106 1 312 1 
263 1 271 1 62 1 181 1 63 1 
136 1 315 2 203 1 285 1 181 1 30 1 106 1 224 2 263 1 8 1 249 1 252 1 62 2 271 2 117 1 21 1 63 2 135 1 312 1 

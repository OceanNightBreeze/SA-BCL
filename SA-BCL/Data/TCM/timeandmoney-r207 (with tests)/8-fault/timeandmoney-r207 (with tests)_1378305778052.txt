#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (114,121,228,239) (114,121,228,239) (114,121,228,239) 142 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (114,121,228,239) (114,121,228,239) (114,121,228,239) 142 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (114,121,228,239) (114,121,228,239) (114,121,228,239) 142 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (114,121,228,239) (114,121,228,239) (114,121,228,239) 142 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (114,121,228,239) (114,121,228,239) (114,121,228,239) 142 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (114,121,228,239) (114,121,228,239) (114,121,228,239) 142 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (114,121,228,239) (114,121,228,239) (114,121,228,239) 142 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (114,121,228,239) (114,121,228,239) (114,121,228,239) 142 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (114,121,228,239) (114,121,228,239) (114,121,228,239) 142 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (114,121,228,239) (114,121,228,239) (114,121,228,239) 142 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (114,121,228,239) (114,121,228,239) (114,121,228,239) (225,321) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (114,121,228,239) (114,121,228,239) (225,321) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (114,121,228,239) (114,121,228,239) (114,121,228,239) (225,321) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (114,121,228,239) (114,121,228,239) (114,121,228,239) 142 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 207 132 138 213 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 207 132 138 213 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 207 287 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 207 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 207 132 138 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 207 132 138 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 184 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 161 65 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | RETURN | 5414 | return null
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1894 | return null
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5144 | if (x) -> if (!x)
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1449 | == -> >
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4739 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 1823 | = null
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> /
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
114 1 234 1 228 1 142 1 239 1 
114 1 234 1 228 1 142 1 239 1 
114 1 234 1 228 1 142 1 239 1 
114 1 234 1 228 1 142 1 239 1 
114 1 234 1 228 1 142 1 239 1 
114 1 234 1 228 1 142 1 239 1 
114 1 234 1 228 1 142 1 239 1 
114 1 234 1 228 1 142 1 239 1 
114 1 234 1 228 1 142 1 239 1 
184 1 80 1 128 1 
185 2 80 1 126 1 
0 2 115 2 280 2 61 2 100 1 91 1 299 2 155 2 
0 3 217 1 176 2 250 1 178 1 130 1 91 1 49 1 256 1 299 2 133 1 258 1 14 2 15 1 16 1 61 3 100 1 191 1 265 1 150 1 106 2 153 1 201 1 67 2 276 1 274 2 155 2 159 1 115 2 280 2 243 1 209 1 326 1 285 1 327 1 172 1 173 1 
0 1 115 1 175 1 35 1 280 1 61 1 91 1 71 1 299 1 155 1 
0 2 175 1 294 1 91 1 299 1 61 2 230 1 271 1 109 1 71 2 72 1 240 1 155 1 320 1 115 1 35 1 280 2 325 1 80 1 128 1 330 1 
0 2 175 1 294 2 91 1 299 2 61 2 230 1 271 1 109 1 71 2 72 1 240 2 155 2 320 1 115 2 35 1 280 2 80 1 128 1 
4 1 313 1 202 1 294 1 240 1 
55 1 4 1 80 1 202 1 294 2 128 1 210 1 240 2 
202 1 294 1 240 1 
0 1 175 1 4 1 294 1 91 1 71 1 299 1 240 1 155 1 115 1 35 1 280 1 61 1 230 1 
80 1 
55 1 4 1 80 1 60 1 202 1 294 2 128 1 240 2 
24 1 4 2 311 1 294 5 222 1 202 2 27 1 240 5 322 2 302 1 55 1 80 1 79 2 262 1 189 1 102 1 128 1 169 2 232 1 
291 1 0 2 217 1 178 1 150 1 7 1 106 1 253 1 153 1 201 1 67 1 274 1 299 1 155 1 133 1 280 1 61 2 327 1 191 1 172 1 
184 1 100 1 
0 2 224 1 299 1 155 1 319 1 115 1 280 2 61 2 100 2 
177 1 253 1 167 1 
0 1 217 1 150 1 178 1 106 1 153 1 201 1 67 1 274 1 133 1 61 1 187 1 100 1 327 1 191 1 172 1 
0 3 115 1 7 1 280 3 61 3 100 1 299 3 155 3 
0 1 35 1 280 1 61 1 71 1 299 1 155 1 
0 1 115 1 280 1 61 1 71 1 224 1 299 1 155 1 319 1 
0 4 250 1 176 1 178 1 7 1 91 1 256 1 14 2 15 1 16 1 100 1 191 1 106 1 271 1 109 1 201 1 274 1 276 1 115 2 208 1 280 3 283 1 285 1 291 1 217 1 130 1 294 1 49 1 299 3 133 1 61 4 307 1 150 1 153 1 67 1 71 2 72 1 240 1 155 3 319 1 320 1 243 1 327 1 172 1 173 1 
0 2 303 1 280 2 7 1 61 2 100 1 299 1 155 1 330 1 
291 1 0 3 7 2 294 1 271 1 109 1 71 1 72 1 299 3 240 1 155 3 319 1 320 1 115 1 80 1 280 3 281 1 61 3 283 1 
0 2 7 1 253 1 299 2 155 2 319 1 115 1 280 2 61 2 167 1 
0 1 217 1 150 1 178 1 106 1 153 1 67 1 201 1 274 1 133 1 61 1 100 1 327 1 191 1 172 1 
0 1 217 1 150 1 178 1 106 1 67 1 201 1 274 1 133 1 61 1 100 1 327 1 172 1 146 1 288 1 
290 1 176 2 250 1 177 1 130 1 253 1 276 1 273 1 256 1 301 1 14 2 15 1 305 1 16 2 143 1 285 1 
0 1 261 1 280 1 61 1 109 1 71 1 299 1 155 1 
0 5 291 1 148 1 7 2 299 4 155 4 319 1 303 1 115 1 323 1 280 5 61 5 100 1 330 1 
0 2 261 1 35 1 280 2 61 2 71 1 299 2 155 2 
1 1 277 1 
1 1 277 1 
73 1 96 1 
73 1 96 1 
73 1 96 1 
1 1 260 1 277 1 
1 1 260 1 277 1 
1 1 277 1 157 1 
1 2 9 1 328 1 73 1 277 2 96 1 
1 1 260 1 277 1 
1 1 277 1 317 1 
1 1 277 1 317 1 
1 1 277 1 317 1 
194 1 1 2 216 2 5 1 48 1 200 2 294 2 154 1 203 2 92 1 93 2 277 2 240 2 205 1 259 2 117 3 80 1 63 1 328 1 
1 1 0 2 216 1 5 1 294 1 93 1 299 2 182 1 259 1 136 1 186 1 61 2 100 1 17 1 200 1 277 1 112 1 155 2 240 1 157 1 31 1 117 1 280 2 40 1 
293 1 66 1 69 1 
293 1 221 1 69 1 
44 1 235 1 293 3 221 1 66 2 181 1 
56 1 235 1 293 2 221 1 66 1 181 1 
235 2 293 2 221 1 66 1 181 1 
4 4 88 2 294 5 180 1 94 1 182 1 52 1 301 1 55 1 302 3 185 3 262 1 17 1 189 2 190 2 308 1 314 1 202 1 273 1 275 1 30 1 240 5 76 1 322 1 79 1 80 2 39 1 126 1 40 1 169 1 128 1 174 2 
4 7 88 6 294 9 94 3 182 4 183 1 301 3 55 1 302 8 185 9 262 1 189 6 101 1 263 1 308 2 233 1 24 1 313 5 26 5 314 2 202 6 273 3 275 3 29 1 240 9 76 3 322 2 242 1 80 5 79 2 39 1 126 3 128 1 169 2 174 6 
4 2 88 2 180 1 294 3 94 1 182 1 52 1 301 1 302 3 185 4 189 2 190 1 308 1 24 1 314 1 273 1 275 1 240 3 76 1 322 1 80 3 79 1 126 2 128 1 169 1 174 2 
4 3 88 4 294 4 180 1 94 2 182 2 52 1 301 2 302 5 185 7 189 4 190 2 308 1 233 1 24 1 314 1 273 2 275 2 29 1 240 4 76 2 322 1 242 1 80 4 79 1 126 3 128 1 169 1 174 4 
184 1 309 1 201 1 
84 1 201 1 
135 1 
201 1 172 1 
309 2 217 1 119 1 3 1 201 3 172 1 
217 1 201 1 172 1 
201 1 166 1 
176 4 46 3 236 1 252 1 269 1 113 1 76 1 134 2 161 1 140 1 16 1 245 1 18 2 326 3 211 1 289 1 
176 4 46 3 236 1 252 1 269 1 113 1 76 1 134 2 161 1 140 1 16 1 245 1 18 2 326 3 211 1 289 1 
176 4 46 3 236 1 252 1 269 1 113 1 76 1 134 2 161 1 140 1 16 1 165 1 245 1 18 2 326 3 211 1 289 1 
129 1 176 28 46 10 130 1 252 5 256 1 94 3 12 1 301 3 134 5 14 2 15 1 306 1 140 1 16 13 18 3 149 3 310 1 236 2 269 1 275 3 273 3 28 1 113 2 278 1 76 4 161 1 120 1 244 4 245 1 326 15 285 1 211 2 289 2 
129 1 176 6 46 4 236 1 130 2 252 1 269 1 256 2 113 1 300 1 76 1 134 3 161 1 33 1 14 4 15 2 16 2 245 1 18 2 326 4 285 2 211 1 289 1 
114 1 234 1 228 1 142 1 239 1 
114 1 321 1 234 1 228 1 239 1 
234 1 121 1 228 1 225 1 
114 1 321 1 234 1 228 1 239 1 
114 1 234 1 228 1 142 1 239 1 
247 1 
0 1 85 1 2 1 8 1 294 2 297 1 132 1 97 1 54 1 302 1 138 1 99 1 262 1 61 1 189 1 197 1 108 1 202 1 109 1 271 1 270 3 72 1 71 1 240 2 322 1 320 1 207 1 79 1 280 1 325 1 80 2 164 1 125 1 127 1 169 1 128 2 213 1 330 1 
0 1 85 1 2 1 8 1 294 2 297 1 132 1 97 1 54 1 302 1 138 1 99 1 262 1 61 1 189 1 197 1 108 1 109 1 271 1 270 3 202 1 72 1 71 1 240 2 322 1 320 1 207 1 79 1 280 1 325 1 80 2 164 1 125 1 127 1 169 1 128 2 213 1 330 1 
0 2 175 1 2 1 85 2 87 2 179 2 91 1 97 1 185 2 99 1 262 1 189 1 197 2 198 1 270 4 271 1 109 1 202 4 115 1 35 1 280 2 207 1 127 1 125 2 128 3 294 4 297 2 299 1 54 1 302 1 55 2 61 2 230 1 71 2 72 1 155 1 240 4 320 1 322 1 80 3 79 1 325 1 164 2 169 1 82 1 330 1 
0 1 2 1 97 1 99 1 262 1 189 2 25 1 106 2 268 1 108 1 202 2 201 1 109 1 271 1 270 2 274 2 280 1 207 1 125 1 127 1 128 2 287 1 212 1 47 1 294 3 297 1 133 1 54 1 55 1 302 2 61 1 150 1 314 1 67 2 72 1 71 1 240 3 322 1 320 1 160 1 79 1 325 1 80 2 327 2 172 1 169 1 330 1 
0 1 2 1 202 1 270 2 271 1 109 1 294 2 71 1 72 1 240 2 54 1 320 1 97 1 99 1 80 2 325 1 280 1 164 1 61 1 127 1 128 2 330 1 
0 1 85 1 2 1 270 3 271 1 109 1 294 2 71 1 72 1 240 2 54 1 320 1 97 1 99 1 80 2 325 1 280 1 61 1 127 1 128 2 330 1 
0 1 2 1 85 1 294 3 97 1 54 1 55 1 99 1 60 1 61 1 197 1 109 1 271 1 270 3 202 2 72 1 71 1 240 3 320 1 280 1 325 1 80 3 164 1 127 1 128 3 330 1 
0 2 175 1 85 1 2 1 220 1 294 3 91 1 299 1 97 1 54 1 55 1 99 1 60 1 61 2 230 1 197 1 202 2 109 1 271 1 270 3 72 1 71 2 155 1 240 3 320 1 115 1 35 1 280 2 325 1 80 3 164 1 127 1 128 3 330 1 
0 1 2 1 294 2 297 1 54 1 97 1 302 1 99 1 262 1 61 1 189 1 108 1 109 1 271 1 270 2 72 1 71 1 240 2 322 1 320 1 207 1 325 1 79 1 280 1 80 2 125 1 127 1 169 1 128 2 330 1 
0 1 2 1 8 1 294 2 297 1 132 1 97 1 54 1 302 1 138 1 99 1 61 1 262 1 189 1 108 1 109 1 271 1 270 2 72 1 71 1 240 2 322 1 320 1 207 1 79 1 280 1 325 1 80 2 125 1 127 1 128 2 169 1 330 1 
0 1 2 1 8 1 294 2 297 1 132 1 97 1 54 1 302 1 138 1 99 1 61 1 262 1 189 1 108 1 109 1 271 1 270 2 72 1 71 1 240 2 322 1 320 1 207 1 79 1 280 1 325 1 80 2 125 1 127 1 128 2 169 1 330 1 
0 2 175 1 2 1 85 2 87 2 179 2 91 1 97 1 185 2 99 1 262 1 189 1 197 2 198 1 270 4 271 1 109 1 202 4 115 1 35 1 280 2 207 1 127 1 125 2 128 3 294 4 297 2 132 1 299 1 54 1 302 1 55 2 61 2 230 1 231 1 71 2 72 1 155 1 240 4 320 1 322 1 80 3 325 1 79 1 164 2 168 1 169 1 330 1 
250 1 176 3 46 2 177 1 130 1 253 1 256 1 184 1 134 2 14 2 15 1 16 1 100 1 143 1 18 1 269 1 276 1 113 1 76 1 161 1 245 1 285 1 326 2 289 1 
250 1 176 9 177 7 130 2 253 7 295 1 49 1 256 2 94 2 14 4 15 2 306 1 16 3 100 1 229 1 21 1 149 2 266 1 199 1 71 1 276 2 275 2 76 2 208 1 244 2 285 2 326 6 167 5 
0 2 291 1 217 1 250 1 176 2 178 1 7 1 130 1 49 1 256 1 299 1 95 1 133 1 14 2 15 1 187 1 61 2 16 1 100 1 191 1 264 1 150 1 106 1 199 1 153 1 201 1 67 1 274 1 272 1 276 1 155 1 159 1 280 1 285 1 326 1 327 1 167 1 172 1 
0 2 291 1 217 1 176 5 250 2 177 2 178 1 7 1 130 2 253 2 11 1 49 1 94 1 256 2 299 1 133 1 14 4 15 2 61 2 16 2 191 1 196 1 267 1 150 1 106 1 199 1 153 1 201 1 67 1 275 1 276 2 274 1 318 1 155 1 76 1 280 1 326 3 285 2 327 1 171 1 172 1 173 1 
0 1 218 1 249 1 250 2 176 2 7 1 130 2 47 1 49 1 256 2 299 1 226 1 133 2 14 4 15 2 61 1 16 1 143 1 265 2 192 1 150 2 106 8 201 3 67 8 237 1 274 7 276 2 75 1 155 1 159 1 78 1 280 1 282 1 285 2 326 1 327 2 172 2 41 1 212 1 
0 1 115 1 280 1 61 1 152 1 299 1 155 1 319 1 
176 2 250 1 177 1 130 1 253 1 276 1 256 1 94 1 76 1 14 2 15 1 143 1 285 1 284 1 326 2 
176 2 250 1 177 1 130 1 253 1 276 1 273 1 256 1 301 1 14 2 15 1 305 1 16 2 143 1 285 1 
176 2 250 1 177 1 130 1 253 1 276 1 275 1 256 1 94 1 76 1 14 2 15 1 143 1 285 1 326 2 
176 2 250 1 177 1 130 1 253 1 276 1 256 1 94 1 76 1 14 2 15 1 285 1 284 1 326 2 41 1 
176 2 250 1 177 1 130 1 253 1 276 1 273 1 256 1 301 1 14 2 15 1 305 1 16 2 285 1 41 1 
176 2 250 1 177 1 130 1 253 1 276 1 275 1 256 1 94 1 76 1 14 2 15 1 285 1 326 2 41 1 
250 1 176 2 177 1 130 1 253 1 276 1 275 1 256 1 94 1 76 1 14 2 15 1 285 1 326 2 
0 1 217 1 176 2 250 1 178 1 130 1 49 1 256 1 133 1 14 2 15 1 61 1 16 1 100 1 191 1 150 1 106 1 153 1 67 1 201 1 274 1 276 1 159 1 326 1 285 1 327 1 172 1 173 1 
0 1 217 1 176 2 250 1 178 1 130 1 49 1 256 1 133 1 14 2 15 1 61 1 16 1 100 1 146 1 150 1 106 1 67 1 201 1 274 1 276 1 159 1 122 1 326 1 285 1 327 1 172 1 288 1 
176 2 250 1 177 1 130 1 253 1 199 1 276 1 275 1 256 1 94 1 76 1 14 2 15 1 285 1 326 2 
0 1 217 1 176 2 249 1 250 1 177 1 178 1 130 1 253 1 11 1 94 1 256 1 133 1 14 2 15 1 61 1 191 1 150 1 106 1 153 1 67 1 201 1 274 1 276 1 275 1 76 1 326 2 285 1 172 1 173 1 
0 1 250 1 176 2 46 1 177 1 130 1 252 1 253 1 256 1 94 1 299 1 14 2 15 1 141 1 61 1 199 1 276 1 275 1 155 1 319 1 76 1 115 1 280 1 285 1 326 2 167 1 
129 1 176 38 46 8 130 3 131 4 252 4 257 1 256 3 94 4 12 3 98 1 134 4 301 4 14 6 15 3 306 1 16 19 18 1 23 2 193 1 105 1 195 1 64 1 149 3 269 1 315 1 275 4 273 4 238 1 113 1 32 1 76 5 161 1 77 1 33 1 163 1 244 4 37 1 245 1 285 3 326 19 170 1 289 1 
129 2 176 35 46 7 130 4 131 4 252 3 257 1 256 4 94 4 12 3 98 1 134 4 301 3 14 8 15 4 306 1 16 16 18 1 23 2 193 1 105 1 195 1 64 1 149 3 269 1 315 1 275 4 273 3 238 1 113 1 32 1 76 5 161 1 77 1 33 1 163 1 244 4 37 1 245 1 285 4 326 19 170 1 289 1 
129 1 176 49 46 14 130 2 131 4 252 7 257 1 256 2 94 7 12 2 134 7 301 7 14 4 15 2 306 2 16 23 18 1 21 2 23 1 193 1 195 1 64 1 149 4 269 1 315 1 275 7 273 7 238 1 113 1 32 1 76 8 161 1 77 1 33 1 163 1 244 4 37 1 245 1 285 2 326 26 170 1 289 1 
176 19 219 1 46 6 130 2 131 2 252 3 256 2 94 3 12 1 134 3 301 3 14 4 15 2 306 1 16 10 23 1 193 1 105 1 64 1 149 1 275 3 273 3 238 1 32 1 76 3 33 1 244 2 37 2 285 2 326 9 
129 2 176 26 46 4 130 3 252 2 131 4 257 1 256 3 94 3 12 2 134 2 301 2 14 6 15 3 16 12 23 2 193 1 195 1 64 1 149 2 315 1 275 3 273 2 238 2 32 1 76 3 77 1 33 1 163 1 244 2 37 1 285 3 326 14 170 1 
1 1 259 1 216 1 200 1 63 1 154 1 93 1 328 1 277 1 83 1 
112 1 157 1 
1 1 259 1 216 1 137 1 241 1 324 1 200 1 93 1 277 1 
1 1 216 1 5 1 48 1 294 1 200 1 154 1 203 1 92 1 93 1 277 1 240 1 205 1 259 1 117 2 80 1 63 1 328 1 
1 1 216 1 5 1 48 1 294 1 200 1 154 1 203 1 92 1 93 1 277 1 240 1 205 1 259 1 117 2 80 1 63 1 328 1 
1 1 216 1 5 1 48 1 294 1 200 1 154 1 203 1 92 1 93 1 277 1 240 1 205 1 259 1 117 2 80 1 63 1 328 1 
260 1 254 1 9 1 
260 1 254 1 9 1 
58 1 317 1 
58 1 9 1 317 1 
186 1 31 1 
0 2 1 1 216 1 4 1 294 1 93 1 182 1 299 2 259 1 136 1 186 1 61 2 100 1 17 1 200 1 203 1 277 1 112 1 240 1 155 2 205 1 157 1 31 1 117 1 280 2 36 1 40 1 
260 1 254 1 
58 1 9 1 317 1 
215 1 0 2 86 1 250 1 176 2 130 1 49 1 256 1 133 1 14 2 15 1 61 2 16 1 265 2 103 1 150 1 106 2 199 1 201 1 67 2 237 1 70 1 276 1 274 2 159 1 78 1 280 2 285 1 38 1 326 1 172 1 
44 1 292 1 218 1 45 1 249 1 293 2 150 1 106 2 251 1 221 1 66 1 67 2 69 1 316 1 10 1 110 1 274 2 133 1 34 1 
44 1 292 1 218 1 45 1 293 2 150 1 106 1 251 1 221 1 66 1 67 1 69 1 10 1 110 1 274 1 133 1 81 1 
45 1 150 1 106 1 47 1 201 1 67 1 68 1 316 1 274 1 133 1 327 1 172 1 212 1 42 1 
44 1 292 1 218 1 45 1 293 2 150 1 106 1 251 1 221 1 66 1 67 1 69 1 316 1 10 1 110 1 274 1 133 1 34 1 
255 1 
0 3 217 1 176 1 250 1 178 1 130 1 91 1 49 1 256 1 299 2 133 1 14 2 15 1 16 1 61 3 100 1 191 1 150 1 106 1 153 1 67 1 201 1 274 1 276 1 155 2 115 2 280 2 243 1 285 1 327 1 172 1 173 1 
88 2 314 1 268 1 322 1 302 1 185 4 79 1 80 4 262 1 189 2 18 1 126 2 169 1 128 2 174 2 
184 1 302 1 80 1 189 1 102 1 128 1 27 1 
322 1 302 1 79 1 262 1 189 1 108 1 169 1 
84 2 88 3 94 1 185 6 262 2 189 3 22 1 104 1 106 1 201 4 202 2 271 1 274 1 275 1 273 1 116 1 119 1 123 1 286 1 126 3 217 1 294 2 50 1 133 2 301 1 302 4 55 1 147 1 309 1 150 1 314 1 67 1 240 2 76 1 322 2 162 1 79 2 80 3 327 1 172 1 169 2 171 1 174 3 
248 1 88 5 294 1 257 1 50 2 94 2 12 1 301 2 55 1 302 8 185 6 262 2 189 5 195 1 149 1 312 1 268 1 314 1 202 1 315 1 275 2 273 2 240 1 76 2 322 2 118 1 163 1 79 2 80 5 244 1 126 3 170 1 169 2 128 2 174 5 
8 1 65 1 294 1 50 1 240 1 113 1 76 1 301 1 322 1 302 2 161 1 79 1 262 1 189 2 169 1 289 1 
27 1 322 1 302 1 79 1 80 1 262 1 189 1 102 1 169 1 128 1 
88 5 312 1 275 2 273 2 50 2 94 2 76 2 301 2 302 5 185 10 80 5 189 5 126 5 171 1 174 5 
55 1 80 1 294 1 202 1 128 1 240 1 
47 1 294 3 298 1 133 1 13 1 302 2 55 2 262 1 189 2 24 1 25 1 150 1 106 4 314 2 268 2 201 1 67 4 202 4 274 4 111 1 240 3 322 2 160 1 79 2 327 2 172 1 169 2 212 1 214 2 
259 1 216 1 20 1 
259 1 216 1 20 1 
43 1 259 1 216 1 186 1 63 1 
259 1 216 1 20 1 
259 1 216 1 89 1 
259 1 216 1 89 1 
259 1 216 1 89 1 
259 1 216 1 
1 1 277 1 
176 5 46 2 130 1 256 1 12 1 134 2 14 2 15 1 16 2 18 1 149 1 269 1 113 1 76 1 33 1 161 1 244 1 245 1 285 1 326 3 170 1 289 1 
176 8 46 3 130 2 252 1 256 2 94 1 12 1 134 2 14 4 15 2 306 1 16 3 18 1 149 1 269 1 275 1 113 1 76 2 161 1 33 1 279 1 244 2 245 1 285 2 326 5 170 1 289 1 
129 1 176 16 46 4 130 3 252 1 257 1 256 3 94 2 12 1 301 2 134 3 14 6 15 3 16 8 18 1 149 1 195 1 269 1 315 1 275 2 273 2 113 1 76 3 161 1 279 1 33 1 163 1 244 1 245 1 285 3 326 8 170 1 289 1 
129 1 176 14 46 5 130 3 252 2 256 3 94 2 257 1 12 1 301 1 134 3 14 6 15 3 16 5 18 1 149 1 195 1 269 1 315 1 275 2 273 1 113 1 76 3 161 1 279 1 33 1 163 1 244 1 245 1 285 3 326 9 170 1 289 1 
176 5 46 2 130 1 256 1 12 1 134 2 14 2 15 1 16 2 18 1 149 1 269 1 113 1 76 1 33 1 161 1 244 1 245 1 285 1 326 3 170 1 289 1 
176 12 46 2 130 1 252 1 256 1 94 2 257 1 12 1 301 2 134 1 14 2 15 1 16 6 149 1 195 1 315 1 275 2 273 2 76 2 33 1 163 1 244 1 285 1 326 6 170 1 
129 2 176 15 46 5 130 4 252 2 257 1 256 4 94 2 12 1 301 1 134 3 14 8 15 4 16 6 18 1 195 1 149 1 269 1 315 1 275 2 273 1 113 1 76 3 161 1 279 1 33 1 163 1 244 1 245 1 285 4 326 9 170 1 289 1 
129 2 176 16 46 6 130 4 252 3 257 1 256 4 94 3 12 1 301 2 134 3 14 8 15 4 16 7 195 1 105 1 149 1 315 1 275 3 273 2 76 3 33 1 163 1 244 1 285 4 326 9 170 1 
176 7 46 7 252 3 65 1 269 1 113 2 76 3 301 1 134 4 161 2 16 2 245 1 18 1 326 5 289 2 
129 2 176 15 46 4 130 4 252 1 257 1 256 4 94 2 12 1 301 1 134 3 14 8 15 4 16 6 18 1 195 1 105 1 149 1 269 1 315 1 275 2 273 1 113 1 76 3 161 1 33 1 163 1 244 1 245 1 285 4 326 9 170 1 289 1 
129 1 176 5 46 3 130 2 252 1 269 1 256 2 113 1 76 1 134 2 161 1 14 4 15 2 16 2 245 1 18 1 326 3 285 2 289 1 
134 2 184 1 176 3 161 1 46 2 16 1 245 1 269 1 18 1 326 2 113 1 76 1 289 1 
176 4 46 2 130 1 252 1 273 1 275 1 256 1 94 1 76 1 134 1 301 1 279 1 14 2 15 1 16 2 285 1 326 2 
149 1 176 7 46 2 252 1 273 1 275 1 94 1 12 1 76 1 134 1 301 1 306 1 244 2 16 4 326 3 
129 2 176 20 46 9 130 2 252 4 94 2 256 2 301 2 134 5 14 4 15 2 306 1 16 10 18 1 21 1 149 2 266 1 107 1 269 1 275 2 273 2 113 2 76 3 161 1 244 2 245 1 326 10 285 2 289 2 
176 1 16 1 244 1 
149 1 176 1 326 1 
176 6 46 3 130 1 252 1 275 1 273 1 256 1 94 1 76 1 301 1 134 2 279 1 14 2 15 1 16 3 285 1 326 3 171 1 
176 12 46 2 130 1 252 1 256 1 94 2 257 1 12 1 301 2 134 1 14 2 15 1 16 6 149 1 195 1 315 1 275 2 273 2 76 2 33 1 163 1 244 1 285 1 326 6 170 1 
176 1 161 1 326 1 76 1 
129 1 176 3 46 2 107 1 130 1 252 1 269 1 256 1 113 1 134 1 14 2 15 1 16 2 245 1 326 1 285 1 289 1 
176 7 46 4 130 1 252 2 65 1 256 1 113 1 76 2 134 2 301 1 33 1 161 1 14 2 15 1 16 3 285 1 326 4 289 1 
176 2 46 1 130 1 252 1 256 1 94 1 76 1 33 1 14 2 15 1 285 1 326 2 
176 4 46 2 130 1 252 1 273 1 275 1 256 1 94 1 76 1 134 1 301 1 33 1 14 2 15 1 16 2 285 1 326 2 
129 1 105 1 176 3 46 2 107 1 130 3 252 1 256 3 113 1 134 1 33 1 14 6 15 3 16 2 285 3 326 1 289 1 
129 2 176 28 46 11 130 5 252 5 256 5 94 3 12 1 301 3 134 6 14 10 15 5 306 1 16 14 18 1 105 1 149 3 107 1 269 1 275 3 273 3 28 1 113 2 278 1 76 5 161 2 279 1 33 1 120 1 244 4 245 1 285 5 326 14 289 2 
0 1 303 1 280 1 61 1 100 1 204 1 330 1 
0 1 223 1 204 1 53 1 303 1 227 1 280 1 61 1 100 1 124 1 144 1 330 1 
184 1 150 1 47 1 106 1 201 1 67 1 327 1 274 1 172 1 212 1 133 1 
0 2 217 1 178 1 150 1 7 1 106 1 153 1 201 1 67 1 274 1 299 1 155 1 133 1 280 1 61 2 100 1 327 1 172 1 
0 2 217 2 178 1 150 1 7 1 106 1 153 1 109 1 201 3 67 1 296 1 71 1 274 1 299 1 155 2 133 1 320 1 280 2 61 2 100 1 166 1 172 2 214 1 
0 2 217 2 178 1 7 1 296 1 299 1 51 1 133 1 61 2 100 1 146 1 150 1 106 2 67 2 201 3 109 1 274 2 71 1 155 2 320 1 280 2 166 1 172 2 214 1 
0 1 84 1 175 1 217 1 294 2 91 1 296 1 299 1 133 1 61 1 230 1 62 1 19 1 309 1 150 1 106 1 202 1 201 4 67 1 271 1 71 1 274 1 155 1 240 2 115 1 35 1 280 1 80 1 166 1 172 1 128 1 214 1 
0 1 84 1 175 1 217 1 294 2 91 1 296 1 299 1 133 1 61 1 230 1 22 1 309 1 150 1 106 1 202 1 201 4 67 1 271 1 71 1 274 1 155 1 240 2 115 1 35 1 280 1 80 1 166 1 172 1 128 1 214 1 
150 1 106 1 67 1 274 1 133 1 192 1 
217 1 218 1 249 1 150 2 106 7 90 1 67 7 201 3 274 6 226 1 75 1 156 1 133 3 119 1 78 1 282 1 327 2 246 1 172 2 265 1 192 1 
0 2 249 1 250 2 176 8 178 1 177 1 7 1 252 1 253 1 11 1 256 2 14 4 15 2 16 3 100 1 18 1 191 1 106 1 199 1 269 1 201 1 274 1 276 2 113 2 208 1 280 1 285 2 289 2 217 1 46 5 130 2 299 1 133 1 301 1 134 4 61 2 150 1 65 1 153 1 67 1 70 1 71 1 318 1 155 1 76 3 161 2 245 1 326 5 172 1 173 1 
0 1 84 1 175 1 4 1 91 1 13 1 262 2 189 4 102 1 22 1 106 1 271 1 202 2 201 2 274 1 27 1 113 1 116 1 115 1 35 1 280 1 123 1 128 1 289 1 294 3 50 2 299 1 301 1 55 1 302 2 61 1 230 1 147 1 309 1 312 1 65 1 67 1 71 1 240 3 155 1 76 2 322 2 161 1 79 2 80 1 327 1 169 2 
309 1 217 1 249 1 150 1 106 2 67 2 201 2 274 2 133 2 162 1 119 1 172 1 192 1 
249 1 150 1 106 4 47 1 67 4 201 1 274 4 51 1 133 1 57 1 327 1 172 1 212 1 
217 1 6 1 150 1 106 2 90 1 67 2 201 1 274 2 74 1 156 1 133 2 329 1 172 1 214 1 
292 1 293 1 150 1 106 1 221 1 67 1 69 1 327 1 274 1 133 1 
249 1 218 1 86 1 150 1 106 2 67 2 201 1 274 2 133 1 78 1 172 1 
249 1 150 2 47 1 106 5 67 5 201 3 274 4 226 1 133 2 57 1 78 1 282 1 327 1 172 2 212 1 214 1 
249 1 150 2 47 1 106 5 67 5 201 3 274 4 226 1 133 2 57 1 304 1 78 1 327 1 172 2 212 1 214 1 
0 2 217 1 178 1 150 1 7 1 106 1 201 1 67 1 274 1 299 1 155 1 133 1 280 1 61 2 100 1 327 1 172 1 146 1 
217 1 150 1 106 1 90 1 67 1 201 1 274 1 156 1 133 2 119 1 246 1 172 1 214 1 
158 1 206 1 59 1 100 1 151 1 
0 1 175 1 4 1 294 2 91 1 299 1 59 1 139 1 61 1 188 1 230 1 145 1 151 1 109 1 271 1 72 1 71 2 155 1 240 2 158 1 206 1 320 1 115 1 35 1 280 1 80 1 283 1 128 1 
215 1 0 1 151 1 206 1 158 1 280 1 61 1 38 1 103 1 
139 1 188 1 151 1 

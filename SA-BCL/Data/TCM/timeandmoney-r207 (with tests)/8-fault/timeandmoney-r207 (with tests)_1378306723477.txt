#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (49,73,184) 300 (99,132,250) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException (49,73,184) 300 277 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (49,73,184) 300 (99,132,250) 187 39 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (49,73,184) 300 (99,132,250) 187 39 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (49,73,184) 300 (99,132,250) 187 39 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (49,73,184) 300 (99,132,250) 187 39 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (49,73,184) 300 (99,132,250) 187 39 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (49,73,184) 300 (99,132,250) 187 39 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (49,73,184) 300 (99,132,250) 187 39 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (49,73,184) 300 (99,132,250) 187 39 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (49,73,184) 300 (99,132,250) 187 39 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (49,73,184) 300 (99,132,250) 187 39 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (49,73,184) 300 (99,132,250) 187 39 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (49,73,184) 300 (99,132,250) 187 39 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (118,324) (118,324) (5,62) 192 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 274 197 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 274 197 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException (49,73,184) 300 277 319 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException (49,73,184) 300 277 319 3 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 267 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | ASSIGN | 464 | = null
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 1130 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11572 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 893 | = null
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2778 | = null
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1501 | = null
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | RETURN | 891 | return null
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
152 1 176 2 29 2 290 1 275 1 311 2 9 1 77 1 81 2 165 9 13 2 251 2 230 1 167 1 146 1 188 4 255 1 340 5 193 6 302 3 198 1 260 1 134 1 201 1 262 9 285 2 138 1 287 1 
152 1 176 2 29 2 290 1 275 1 311 2 9 1 77 1 165 9 81 2 251 2 13 2 230 1 167 1 146 1 188 4 255 1 340 5 193 6 302 3 198 1 260 1 134 1 201 1 262 9 285 2 138 1 287 1 
152 1 176 2 29 2 290 1 275 1 311 2 9 1 77 1 165 10 81 2 251 2 13 2 230 1 167 1 146 1 188 5 255 1 340 6 193 7 302 4 198 1 260 1 134 1 201 1 262 10 285 2 138 1 287 1 
176 2 29 2 290 1 275 1 311 2 9 1 77 1 165 7 81 1 251 2 13 2 230 1 167 1 146 1 188 3 255 1 340 4 193 4 302 2 198 1 260 1 134 1 201 1 262 7 285 2 138 1 287 1 
152 1 176 1 29 1 290 1 255 1 193 3 340 3 275 1 311 1 302 1 9 1 262 4 285 1 165 4 81 2 138 1 251 1 188 2 
176 1 29 1 290 1 20 1 340 1 275 1 311 1 89 1 223 1 260 1 9 1 262 2 285 1 165 2 287 1 13 1 
29 2 290 1 340 2 193 1 275 1 302 1 9 1 262 3 285 2 165 3 13 1 146 1 188 1 
176 1 152 1 29 2 290 1 50 1 275 1 311 1 9 1 165 9 81 2 13 1 251 1 167 1 146 1 188 4 255 1 193 7 340 5 302 3 134 1 262 9 285 2 138 1 289 1 
176 1 152 1 29 2 290 1 50 1 275 1 311 1 9 1 165 9 81 2 13 1 251 1 167 1 146 1 188 4 255 1 193 7 340 5 302 3 134 1 262 9 285 2 138 1 289 1 
222 1 317 1 139 1 
122 1 53 2 139 1 
272 2 68 1 341 2 73 2 184 2 49 2 25 1 34 2 
272 2 221 1 73 3 32 1 276 1 205 1 76 1 34 2 10 2 249 2 164 1 54 1 184 2 252 2 320 1 83 1 210 1 282 1 169 2 87 1 63 1 256 1 147 1 301 1 341 3 194 1 346 1 305 1 117 1 68 1 264 1 328 1 351 1 49 2 118 1 25 1 26 2 
272 1 64 1 341 1 73 1 184 1 157 1 49 1 25 1 115 1 34 1 
99 1 300 1 184 1 
272 1 73 1 341 1 132 2 222 1 206 2 34 1 115 1 250 1 38 1 184 1 49 1 139 1 229 1 82 1 
335 1 1 1 132 1 90 1 206 1 
335 1 33 1 132 2 222 1 90 1 139 1 206 2 334 1 
335 1 132 1 206 1 
272 1 64 1 73 1 341 1 132 1 157 1 90 1 236 1 115 1 206 1 34 1 184 1 49 1 25 1 
139 1 
335 1 0 1 132 2 222 1 90 1 139 1 206 2 334 1 
335 2 132 5 75 1 222 1 90 2 111 1 112 1 206 5 116 1 44 2 216 1 306 1 58 1 139 1 331 1 120 2 168 1 334 1 129 2 
169 1 221 1 350 1 252 1 249 1 
68 1 317 1 
272 1 30 1 73 2 341 2 34 1 208 1 68 2 184 2 49 1 
177 1 131 1 60 1 
169 1 63 1 221 1 256 1 341 1 73 1 194 1 301 1 205 1 76 1 346 1 249 1 117 1 68 1 252 1 143 1 
153 1 272 2 30 1 21 1 73 2 341 2 115 1 34 1 68 1 350 1 184 2 49 2 
207 1 272 2 64 1 341 2 73 2 184 2 49 2 115 1 
272 3 68 1 21 1 341 3 73 3 184 3 49 3 34 1 
272 1 64 1 341 1 73 1 184 1 49 1 115 1 
272 1 208 1 30 1 341 1 73 1 184 1 49 1 115 1 34 1 
272 1 30 1 341 1 73 1 350 1 184 1 49 1 34 1 
272 1 300 1 341 1 73 1 21 1 184 2 49 1 277 1 
350 1 
272 2 30 1 21 1 73 2 341 2 131 1 34 1 184 2 49 2 60 1 
169 1 63 1 221 1 256 1 341 1 73 1 194 1 301 1 205 1 76 1 346 1 249 1 117 1 68 1 252 1 
169 1 63 1 221 1 256 1 341 1 73 1 247 1 301 1 76 1 346 1 249 1 117 1 68 1 252 1 186 1 
177 2 72 1 32 1 10 2 164 2 80 1 100 1 128 1 104 1 320 1 60 2 210 1 282 1 233 1 43 1 147 1 131 2 259 1 261 1 305 2 323 1 351 1 26 4 70 1 
207 1 38 1 272 1 341 1 73 1 184 1 49 1 115 1 
243 1 107 1 
243 1 107 1 
175 1 101 1 
175 1 101 1 
175 1 101 1 
243 1 107 1 102 1 
18 1 243 1 107 1 
243 2 175 1 107 2 101 1 124 1 258 1 
243 1 107 1 102 1 
243 1 107 1 102 1 
243 1 107 1 41 1 
243 1 107 1 41 1 
243 1 107 1 41 1 
85 1 18 1 243 1 154 1 107 1 254 1 213 1 272 2 108 1 341 2 73 2 132 1 215 1 126 1 206 1 304 1 325 1 286 1 68 1 329 1 55 1 184 2 185 1 49 2 
243 2 154 3 179 1 107 2 254 2 213 2 132 2 258 1 22 2 206 2 161 1 263 1 46 1 286 2 296 1 55 1 185 2 139 1 270 1 
176 1 311 1 251 1 
176 1 20 1 311 1 
20 1 251 2 311 3 91 1 8 1 144 1 
20 1 251 1 311 2 8 1 144 1 332 1 
20 1 251 1 311 2 144 1 8 2 
122 1 335 1 155 1 156 2 204 1 222 1 224 1 206 5 53 3 225 1 80 1 11 2 128 1 40 1 58 3 129 1 253 1 108 1 132 5 90 4 215 1 261 1 44 1 323 1 216 1 306 2 136 1 329 1 139 2 352 2 120 1 334 1 
122 3 335 6 1 5 155 1 222 1 224 2 160 1 206 9 53 9 80 3 279 1 11 6 128 3 40 2 58 8 129 2 132 9 215 4 90 7 113 1 261 3 116 1 172 1 44 2 323 3 216 1 240 5 306 6 136 3 266 1 48 1 139 5 352 6 120 2 334 1 
122 2 156 1 204 1 222 1 224 1 206 3 53 4 225 1 80 1 11 2 128 1 40 1 58 3 129 1 132 3 90 2 215 1 261 1 44 1 116 1 323 1 136 1 306 2 139 3 352 2 120 1 
122 3 156 2 204 1 222 1 224 1 160 1 206 4 53 7 225 1 80 2 11 4 128 2 40 1 58 5 129 1 132 4 215 2 90 3 113 1 261 2 44 1 116 1 323 2 136 2 306 4 266 1 139 4 352 4 120 1 
256 1 74 1 317 1 
256 1 145 1 
123 1 
256 1 301 1 346 1 
256 1 69 1 
256 1 346 1 
256 3 301 1 74 2 14 1 15 1 346 1 
151 2 234 1 291 1 196 1 195 1 259 2 261 1 305 3 347 1 164 4 80 1 100 3 219 1 26 7 61 1 16 1 189 1 
151 2 234 1 291 1 196 1 195 1 259 2 261 1 305 3 347 1 164 4 80 1 100 3 219 1 26 7 61 1 16 1 189 1 
151 2 234 1 291 1 196 1 195 1 259 2 261 1 305 3 347 1 164 4 80 1 100 3 219 1 281 1 26 7 61 1 189 1 16 1 
151 1 246 1 291 2 313 1 10 2 248 3 164 17 316 1 80 5 100 13 294 1 128 3 231 4 61 3 210 1 282 1 189 1 16 1 106 1 234 3 147 1 196 1 195 7 259 6 261 5 305 17 347 2 323 3 174 1 45 1 136 3 219 1 351 1 26 34 121 1 
151 2 234 1 147 2 291 1 196 1 195 1 237 1 259 3 261 1 174 1 305 4 347 1 10 4 164 5 80 1 100 4 351 2 24 1 26 9 61 1 282 2 210 2 189 1 16 1 
176 1 336 1 29 1 290 1 275 1 311 2 9 1 162 1 249 1 165 2 251 1 252 1 13 1 298 1 105 1 169 1 212 1 63 1 20 1 340 1 193 1 110 1 283 1 91 1 345 1 117 1 262 2 285 1 308 1 119 1 
176 1 29 1 290 1 311 2 159 1 9 1 162 1 249 1 226 1 165 3 251 1 252 1 13 1 298 1 105 1 169 1 86 1 63 1 20 1 340 1 193 2 110 1 91 1 283 1 345 1 117 1 262 3 285 1 308 1 119 1 
176 1 290 1 311 2 159 1 9 1 162 1 249 1 226 1 165 2 13 1 252 1 251 1 105 1 169 1 63 1 20 1 340 1 193 2 110 1 283 1 91 1 345 1 117 1 262 2 308 1 
29 1 221 1 249 1 315 1 165 1 252 1 13 2 105 2 169 1 86 1 190 1 63 1 256 1 345 2 199 1 346 1 117 1 135 1 262 1 285 1 308 2 269 1 150 1 
176 1 29 1 275 1 311 2 162 1 249 1 226 1 165 1 251 1 252 1 13 1 298 1 105 1 169 1 212 1 63 1 20 1 110 1 283 1 91 1 345 1 117 1 262 1 285 1 308 1 119 1 
149 1 
335 2 221 2 51 1 314 1 206 2 249 2 99 1 184 1 252 2 142 1 39 1 40 1 58 1 187 1 129 1 169 2 190 1 63 1 300 1 256 1 132 2 346 1 44 1 216 1 117 1 306 1 120 1 334 1 150 1 
99 1 300 1 184 1 132 1 39 1 187 1 206 1 
99 1 300 1 184 1 132 1 39 1 187 1 206 1 
99 1 300 1 184 1 132 1 39 1 187 1 206 1 
335 1 0 1 99 1 300 1 184 1 132 2 39 1 187 1 206 2 334 1 
99 1 300 1 184 1 132 1 39 1 187 1 120 1 44 1 206 1 129 1 216 1 
99 1 300 1 184 1 132 1 39 1 187 1 206 1 
99 1 300 1 184 1 132 1 39 1 187 1 206 1 
99 1 300 1 184 1 132 1 39 1 187 1 206 1 
99 1 300 1 184 1 132 1 39 1 187 1 206 1 
99 1 300 1 184 1 132 1 39 1 187 1 206 1 
99 1 300 1 184 1 132 1 39 1 187 1 120 1 44 1 206 1 129 1 216 1 
151 1 177 1 72 1 32 1 10 2 164 3 80 1 100 2 317 1 320 1 60 1 61 1 210 1 282 1 189 1 16 1 234 1 131 1 147 1 196 1 259 2 261 1 305 3 68 2 351 1 26 6 
177 11 32 1 313 1 10 4 248 3 183 1 164 8 80 1 100 2 54 1 128 1 320 2 231 3 60 4 210 2 282 2 17 1 299 1 87 1 257 1 147 2 131 11 195 1 259 1 114 1 261 2 305 6 323 2 45 1 136 2 68 1 351 2 26 14 
299 1 87 1 147 1 32 1 344 1 305 1 10 2 164 1 54 1 350 1 351 1 26 2 320 1 232 1 282 1 210 1 
169 1 299 1 62 1 87 1 192 1 221 1 147 1 32 1 324 1 305 1 10 2 249 1 350 1 252 1 351 1 118 1 26 1 320 1 282 1 210 1 
336 1 309 1 273 1 72 1 272 1 221 2 73 1 338 1 32 2 249 8 10 4 226 1 36 1 164 1 54 1 184 1 252 7 320 2 83 2 210 2 282 2 169 8 190 1 63 2 87 1 256 3 341 1 21 1 147 2 235 1 346 2 305 1 117 2 218 1 242 1 49 1 351 2 26 2 150 1 
177 1 272 1 30 1 73 1 32 1 34 1 10 2 164 1 80 1 100 1 128 1 184 1 320 1 60 1 210 1 282 1 299 1 131 1 147 1 88 1 341 1 259 1 261 1 323 1 305 2 136 1 351 1 49 1 26 3 
177 1 43 1 72 1 131 1 147 1 32 1 195 1 261 1 10 2 323 1 164 2 100 1 351 1 26 2 320 1 60 1 282 1 210 1 
233 1 177 1 72 1 131 1 147 1 32 1 259 1 10 2 305 2 80 1 100 1 128 1 351 1 26 2 320 1 60 1 282 1 210 1 
177 2 72 1 32 1 10 2 164 2 80 1 100 2 128 1 320 1 60 2 210 1 282 1 147 1 131 2 195 1 259 1 261 1 323 1 305 2 136 1 351 1 26 4 
177 1 309 1 43 1 131 1 147 1 32 1 195 1 261 1 10 2 323 1 164 2 100 1 351 1 26 2 320 1 60 1 282 1 210 1 
233 1 177 1 309 1 131 1 147 1 32 1 259 1 10 2 305 2 80 1 100 1 128 1 351 1 26 2 320 1 60 1 282 1 210 1 
177 2 309 1 32 1 10 2 164 2 80 1 100 2 128 1 320 1 60 2 210 1 282 1 147 1 131 2 195 1 259 1 261 1 323 1 305 2 136 1 351 1 26 4 
177 2 32 1 10 2 164 2 80 1 100 2 128 1 320 1 60 2 210 1 282 1 147 1 131 2 195 1 259 1 261 1 323 1 305 2 136 1 351 1 26 4 
221 1 73 1 32 1 76 1 205 1 249 1 10 2 164 1 54 1 252 1 320 1 282 1 210 1 169 1 63 1 87 1 256 1 301 1 194 1 341 1 147 1 346 1 305 1 117 1 68 1 351 1 118 1 26 2 
178 1 221 1 247 1 73 1 32 1 76 1 249 1 10 2 164 1 54 1 252 1 186 1 320 1 282 1 210 1 169 1 63 1 87 1 256 1 301 1 341 1 147 1 346 1 305 1 117 1 68 1 351 1 26 2 
177 2 32 1 10 2 164 2 80 1 100 2 128 1 320 1 60 2 210 1 282 1 299 1 147 1 131 2 195 1 259 1 261 1 323 1 305 2 136 1 351 1 26 4 
177 2 336 1 73 1 32 1 76 1 205 1 249 1 10 2 164 2 80 1 100 2 128 1 252 1 320 1 60 2 282 1 210 1 169 1 63 1 256 1 131 2 301 1 194 1 341 1 147 1 195 1 259 1 261 1 346 1 305 2 323 1 324 1 117 1 136 1 351 1 118 1 26 4 
177 1 272 1 30 1 73 1 32 1 52 1 34 1 10 2 164 2 80 1 100 1 128 1 184 1 320 1 60 1 210 1 282 1 299 1 147 1 341 1 131 1 195 1 261 1 305 1 323 1 136 1 351 1 49 1 26 3 
151 1 4 1 274 1 125 1 313 1 10 6 248 3 293 1 164 20 80 5 100 7 280 1 127 1 128 4 231 4 61 1 210 3 282 3 189 1 16 1 19 1 191 1 234 1 147 3 196 1 195 4 197 1 238 1 66 4 259 3 171 1 261 5 174 1 305 21 323 4 45 3 326 1 241 1 136 4 202 2 351 3 24 1 26 41 
4 1 274 1 313 1 10 8 100 7 280 1 231 4 282 4 61 1 16 1 189 1 191 1 19 1 234 1 147 4 195 3 196 1 66 4 238 1 197 1 323 4 326 1 241 1 202 2 24 1 26 38 151 1 125 1 248 3 164 20 293 1 80 4 128 3 127 1 210 4 259 4 171 1 261 5 305 18 174 2 45 3 136 4 351 4 
151 1 4 1 274 1 125 1 313 2 10 4 248 4 293 1 183 2 164 23 80 7 100 12 280 1 127 1 128 6 231 4 61 1 210 2 282 2 189 1 16 1 191 1 234 1 147 2 196 1 195 6 197 1 238 1 66 2 259 6 261 7 174 1 305 21 323 6 45 2 326 1 241 1 136 6 202 1 351 2 24 1 26 44 
4 1 274 2 31 1 313 1 10 4 248 1 164 9 80 3 100 6 127 1 128 3 231 2 210 2 282 2 19 1 191 1 147 2 195 3 197 1 66 2 259 3 261 3 305 10 323 3 45 1 136 3 202 1 351 2 24 1 26 19 
4 1 274 1 125 1 10 6 248 2 293 1 164 14 80 2 100 2 127 2 280 1 128 2 231 2 210 3 282 3 191 1 147 3 195 1 197 1 238 1 66 4 259 1 261 3 174 2 305 12 323 3 45 2 326 1 241 1 136 3 202 2 351 3 24 1 26 26 
28 1 243 1 46 1 179 1 213 1 254 1 107 1 286 1 185 1 258 1 
18 1 325 1 
243 1 213 1 254 1 107 1 286 1 337 1 214 1 185 1 239 1 
102 1 27 1 
137 1 124 1 41 1 
243 1 154 2 179 1 107 1 254 1 213 1 132 1 258 1 22 1 206 1 161 1 46 1 286 1 296 1 55 1 185 1 139 1 270 1 
243 1 154 2 179 1 107 1 254 1 213 1 132 1 258 1 22 1 206 1 161 1 46 1 286 1 296 1 55 1 185 1 139 1 270 1 
243 1 154 2 179 1 107 1 254 1 213 1 132 1 258 1 22 1 206 1 161 1 46 1 286 1 296 1 55 1 185 1 139 1 270 1 
102 1 124 1 27 1 
102 1 124 1 27 1 
137 1 41 1 
137 1 124 1 41 1 
85 1 126 1 
271 1 243 1 154 1 272 2 73 2 161 1 206 1 126 1 184 2 185 1 85 1 18 1 213 1 254 1 107 1 108 1 341 2 132 1 90 1 215 1 22 1 304 1 325 1 286 1 68 1 329 1 49 2 
273 1 73 2 32 1 158 1 140 1 249 2 10 2 79 1 182 1 164 1 54 1 184 2 252 2 103 1 320 1 83 2 282 1 210 1 169 2 299 1 63 1 87 1 256 1 341 2 147 1 346 1 305 1 117 1 218 1 351 1 26 2 
169 2 176 1 336 1 63 1 322 1 20 1 311 2 110 1 133 1 91 1 283 1 249 2 117 1 226 1 307 1 251 1 252 2 308 1 298 1 
169 1 176 1 63 1 20 1 310 1 311 2 110 1 91 1 283 1 249 1 226 1 117 1 307 1 251 1 252 1 308 1 298 1 
169 1 190 1 63 1 322 1 221 1 256 1 346 1 249 1 117 1 135 1 349 1 252 1 308 1 150 1 
169 1 176 1 322 1 63 1 20 1 311 2 110 1 133 1 91 1 283 1 249 1 117 1 226 1 307 1 251 1 252 1 308 1 298 1 
227 1 
306 1 222 1 317 1 58 1 139 1 331 1 168 1 
122 1 335 1 222 1 97 1 206 1 53 1 58 1 129 1 132 1 44 1 216 1 306 1 330 1 139 2 120 1 220 1 334 1 
221 1 96 2 51 1 222 2 5 2 7 1 312 2 98 2 53 12 11 6 14 1 318 1 58 9 145 3 63 3 284 2 23 2 323 2 117 4 327 2 331 1 120 4 69 2 333 1 334 3 122 6 335 5 336 1 245 2 74 2 35 1 206 5 249 3 80 2 128 2 252 3 40 2 82 2 168 1 129 4 169 3 256 10 301 3 342 1 132 5 346 3 261 2 44 4 216 4 136 2 306 8 265 2 139 8 352 6 
122 3 335 1 222 1 312 1 125 1 206 1 248 1 53 6 293 1 80 2 11 5 280 1 128 2 297 1 58 7 231 1 129 2 132 1 261 2 44 2 216 2 323 2 45 1 326 1 241 1 306 4 136 2 139 4 352 5 120 2 334 1 
246 1 272 1 96 1 73 1 157 1 312 2 206 1 34 1 80 1 184 1 58 2 61 1 129 1 64 1 234 1 341 1 132 1 196 1 236 1 170 1 261 2 115 1 44 1 216 1 306 2 49 1 25 1 120 1 
222 1 44 1 216 1 306 1 331 1 139 1 58 1 120 1 168 1 129 1 
122 5 96 1 312 2 261 2 23 1 323 2 53 10 136 2 306 5 80 2 11 5 128 2 139 5 58 5 352 5 
335 1 132 1 222 1 139 1 206 1 334 1 
335 4 95 1 221 2 51 2 314 1 35 1 206 3 249 4 142 1 252 4 318 2 40 2 58 2 129 2 169 4 190 1 63 1 256 1 132 3 148 1 346 1 116 1 44 2 216 1 117 1 306 2 120 2 334 2 150 1 
221 1 272 2 73 3 32 1 276 1 205 1 76 1 34 2 10 2 249 1 252 1 184 2 320 1 210 1 282 1 169 1 87 1 63 1 256 1 147 1 341 3 194 1 301 1 346 1 305 1 117 1 68 1 351 1 49 2 118 1 25 1 26 1 
151 1 122 2 51 1 222 2 44 1 216 1 53 4 306 2 11 2 40 1 58 1 139 4 352 2 120 1 129 1 
93 1 213 1 254 1 
46 1 213 1 254 1 67 1 126 1 
93 1 213 1 254 1 
93 1 213 1 254 1 
71 1 213 1 254 1 
71 1 213 1 254 1 
71 1 213 1 254 1 
213 1 254 1 
243 1 107 1 
151 1 125 1 248 1 10 2 164 4 80 1 100 2 231 1 210 1 282 1 61 1 16 1 189 1 234 1 147 1 196 1 259 2 261 1 305 4 45 1 351 1 24 1 26 8 
151 1 125 1 313 1 10 4 248 1 164 6 80 1 100 3 57 1 231 2 61 1 210 2 282 2 189 1 16 1 234 1 147 2 196 1 195 1 259 2 261 2 305 5 323 1 45 1 136 1 351 2 24 1 26 11 
125 1 248 1 10 6 164 6 293 1 80 2 100 2 280 1 128 2 57 1 231 1 210 3 282 3 147 3 195 1 259 1 261 2 305 7 323 2 174 1 45 1 326 1 241 1 136 2 351 3 24 1 26 13 
125 1 248 1 10 6 164 7 293 1 80 1 100 2 280 1 128 1 57 1 231 1 210 3 282 3 147 3 195 1 259 1 261 2 174 1 305 4 323 2 45 1 326 1 136 2 241 1 351 3 24 1 26 11 
151 1 125 1 248 1 10 2 164 4 80 1 100 2 231 1 210 1 282 1 61 1 16 1 189 1 234 1 147 1 196 1 259 2 261 1 305 4 45 1 351 1 24 1 26 8 
125 1 248 1 10 2 164 6 293 1 80 2 100 2 280 1 128 2 231 1 210 1 282 1 147 1 195 1 259 1 261 2 305 6 323 2 45 1 326 1 136 2 241 1 351 1 24 1 26 12 
125 1 10 8 248 1 293 1 164 7 80 1 100 2 280 1 128 1 57 1 231 1 210 4 282 4 147 4 195 1 259 1 261 2 305 5 323 2 174 2 45 1 326 1 241 1 136 2 351 4 24 1 26 12 
125 1 10 8 248 1 293 1 164 7 80 1 100 4 280 1 128 1 231 1 210 4 282 4 19 1 147 4 195 2 259 2 261 2 305 5 323 2 174 2 45 1 326 1 241 1 136 2 351 4 24 1 26 12 
234 3 195 3 196 1 259 3 261 1 305 4 164 3 80 1 100 6 26 7 61 3 16 1 189 2 
125 1 10 8 248 1 293 1 164 7 80 1 100 2 280 1 128 1 231 1 210 4 282 4 19 1 147 4 195 1 259 1 261 2 305 5 323 2 174 2 45 1 326 1 241 1 136 2 351 4 24 1 26 12 
151 1 234 1 147 2 196 1 195 1 259 2 261 1 305 4 10 4 174 1 164 4 80 1 100 3 351 2 26 8 282 2 210 2 61 1 16 1 189 1 
151 1 234 1 196 1 259 2 261 1 305 3 164 3 80 1 100 2 317 1 26 6 61 1 16 1 189 1 
147 1 195 1 259 1 261 1 305 2 10 2 323 1 164 2 80 1 136 1 100 2 128 1 57 1 351 1 26 4 282 1 210 1 
195 1 259 1 313 1 261 1 305 4 248 1 323 1 45 1 164 3 80 1 136 1 100 2 128 1 26 7 231 2 
151 1 313 1 248 2 10 4 164 11 183 1 80 3 100 9 128 2 231 2 61 2 282 2 210 2 189 1 16 1 17 1 234 2 147 2 196 1 195 4 259 5 261 3 323 2 305 12 174 2 136 2 351 2 26 23 94 1 
26 1 231 1 305 1 
164 1 26 1 248 1 
147 1 195 1 259 2 261 1 10 2 23 1 305 3 323 1 164 3 136 1 80 1 100 3 128 1 57 1 351 1 26 6 210 1 282 1 
125 1 248 1 10 2 164 6 293 1 80 2 100 2 280 1 128 2 231 1 210 1 282 1 147 1 195 1 259 1 261 2 305 6 323 2 45 1 326 1 136 2 241 1 351 1 24 1 26 12 
234 1 196 1 195 1 259 1 261 1 305 3 164 3 80 1 100 2 26 6 61 1 
234 1 147 1 195 1 259 1 305 2 174 1 10 2 164 1 100 2 351 1 94 1 26 3 61 1 282 1 210 1 189 1 16 1 
246 1 234 2 147 1 195 2 196 1 259 3 261 2 10 2 305 5 164 5 80 2 100 5 351 1 24 1 26 10 210 1 282 1 61 2 
147 1 195 1 261 1 10 2 323 1 164 2 100 1 351 1 24 1 26 2 282 1 210 1 
147 1 195 1 259 1 261 1 305 2 10 2 323 1 164 2 80 1 136 1 100 2 128 1 351 1 24 1 26 4 282 1 210 1 
19 1 234 1 147 3 195 1 259 1 174 1 305 2 10 6 164 1 100 2 351 3 24 1 94 1 26 3 282 3 210 3 61 1 
151 1 313 1 10 10 248 3 164 16 316 1 80 5 294 1 100 12 128 3 57 1 231 4 61 3 210 5 282 5 189 1 16 1 106 1 19 1 234 3 147 5 196 2 195 5 259 7 261 5 174 2 305 18 323 3 45 1 136 3 351 5 24 1 94 1 26 34 
300 1 184 1 319 1 277 1 
217 1 3 1 300 1 184 1 319 1 84 1 292 1 180 1 277 1 
169 1 117 1 190 1 63 1 221 1 256 1 252 1 317 1 346 1 150 1 249 1 
169 1 63 1 272 1 221 1 256 1 301 1 21 1 73 2 341 2 76 1 205 1 346 1 249 1 117 1 68 1 184 1 252 1 49 1 
169 1 63 1 272 1 256 3 301 2 21 1 73 2 341 2 76 1 205 1 284 1 346 2 115 1 249 1 117 1 38 1 68 1 184 2 252 1 49 2 318 1 229 1 69 1 
272 1 73 2 76 1 249 2 38 1 339 1 252 2 184 2 318 1 186 1 229 1 169 2 63 1 256 3 341 2 21 1 301 2 284 1 346 2 115 1 117 1 68 1 49 2 69 1 
169 3 130 1 335 1 63 1 221 1 256 4 301 1 132 2 74 1 222 1 284 1 346 1 206 2 249 3 163 1 117 1 339 1 252 3 318 1 139 1 82 1 145 1 69 1 
169 3 335 1 63 1 221 1 256 4 301 1 132 2 74 1 222 1 284 1 346 1 206 2 249 3 117 1 339 1 327 1 252 3 318 1 139 1 82 1 145 1 69 1 
169 1 117 1 36 1 63 1 252 1 249 1 
169 7 336 1 63 2 273 1 221 2 256 3 301 1 235 1 338 1 346 2 249 7 226 1 117 3 36 1 348 1 242 1 252 6 14 1 203 1 83 1 42 1 
151 1 177 1 336 1 272 1 73 2 32 2 76 1 205 1 10 4 249 1 79 1 164 3 80 1 100 2 184 1 252 1 320 2 60 1 61 1 210 2 282 2 189 1 16 1 299 1 169 1 62 1 63 1 234 1 256 1 131 1 301 1 341 2 21 1 147 2 194 1 196 1 259 2 261 1 346 1 305 3 324 1 117 1 68 2 49 1 351 2 118 1 26 6 
335 2 245 1 221 1 74 1 222 1 5 1 35 1 206 3 249 1 252 1 58 1 145 1 82 1 168 1 129 2 169 1 256 2 132 3 90 1 44 2 216 2 306 1 327 1 265 1 139 1 331 1 120 2 334 1 
169 2 336 1 63 1 256 2 301 1 74 1 346 1 249 2 117 2 36 1 252 2 14 1 333 1 
169 4 336 1 190 1 63 1 221 1 256 1 346 1 249 4 117 1 47 1 339 1 252 4 150 1 
169 2 63 1 256 1 301 1 303 1 346 1 173 1 249 2 117 2 348 1 252 2 318 1 59 1 42 1 
169 1 176 1 117 1 63 1 20 1 221 1 311 1 252 1 283 1 249 1 
169 2 117 1 226 1 336 1 63 1 273 1 256 1 252 2 158 1 346 1 249 2 
169 5 190 1 336 1 63 2 221 1 273 1 256 3 235 1 346 2 249 5 117 2 47 1 252 4 242 1 318 1 150 1 
169 5 190 1 336 1 63 2 221 1 273 1 256 3 235 1 346 2 249 5 117 2 47 1 252 4 318 1 228 1 150 1 
169 1 63 1 272 1 221 1 256 1 301 1 21 1 73 2 341 2 76 1 346 1 249 1 117 1 68 1 184 1 252 1 49 1 186 1 
169 1 63 1 256 1 301 1 346 1 249 1 117 2 348 1 252 1 14 1 318 1 203 1 42 1 
37 1 2 1 209 1 92 1 
278 1 37 1 2 1 288 1 267 1 132 1 209 1 90 1 206 1 92 1 
73 1 341 1 140 1 92 1 182 1 37 1 184 1 103 1 209 1 
288 1 267 1 92 1 
290 1 340 1 317 1 9 1 
262 1 29 1 285 1 290 1 165 1 340 1 9 1 
105 1 262 1 13 1 
29 1 290 1 340 1 275 1 6 1 260 2 9 1 262 3 285 1 165 3 295 1 211 1 
262 2 29 1 285 1 290 1 81 1 165 2 340 1 193 1 9 1 
176 1 262 1 29 1 285 1 255 1 165 1 340 1 275 1 311 1 251 1 188 1 
262 1 29 1 285 1 165 1 340 1 275 1 9 1 
262 1 29 1 285 1 290 1 165 1 275 1 9 2 
321 1 29 2 340 1 275 1 141 1 9 1 262 2 285 2 165 2 268 1 
29 1 290 1 193 2 340 2 275 1 302 1 134 1 9 1 262 3 285 1 165 3 167 1 188 1 
176 1 29 1 290 1 20 1 340 1 193 1 275 1 311 2 91 1 9 1 200 1 262 2 285 1 165 2 251 1 
152 1 29 2 290 1 193 2 340 2 275 1 302 1 9 1 262 4 285 2 165 4 81 1 188 1 
262 1 29 1 285 1 290 1 165 1 340 1 275 1 9 1 
29 1 290 2 109 1 193 2 340 3 302 1 6 1 260 1 9 2 262 4 285 1 165 4 295 1 188 1 
29 1 50 1 290 1 340 1 193 1 275 1 343 1 9 1 262 2 285 1 165 2 56 1 
29 1 290 1 340 1 275 1 6 1 260 2 9 1 262 3 285 1 165 3 295 2 12 1 
244 1 340 2 166 2 181 1 
262 1 29 1 285 1 165 1 275 1 78 1 
262 2 29 1 285 1 290 1 165 2 340 1 193 1 275 1 167 1 9 1 
65 1 
262 1 29 1 285 1 290 1 165 1 340 1 275 1 9 1 
29 1 290 1 193 1 340 1 275 1 260 1 9 1 262 3 285 1 165 3 167 1 
109 1 340 1 302 1 188 1 
340 1 9 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (72,140,175,270) (72,140,175,270) (72,140,175,270) 93 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (72,140,175,270) (72,140,175,270) (72,140,175,270) 93 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (72,140,175,270) (72,140,175,270) (72,140,175,270) 93 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (72,140,175,270) (72,140,175,270) (72,140,175,270) 93 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (72,140,175,270) (72,140,175,270) (72,140,175,270) 93 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (72,140,175,270) (72,140,175,270) (72,140,175,270) 93 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (72,140,175,270) (72,140,175,270) (72,140,175,270) 93 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (72,140,175,270) (72,140,175,270) (72,140,175,270) 93 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (72,140,175,270) (72,140,175,270) (72,140,175,270) 93 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 183 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (72,140,175,270) (72,140,175,270) (72,140,175,270) 93 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (72,140,175,270) (72,140,175,270) (72,140,175,270) (185,322) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (72,140,175,270) (72,140,175,270) (185,322) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (72,140,175,270) (72,140,175,270) (72,140,175,270) (185,322) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (72,140,175,270) (72,140,175,270) (72,140,175,270) 93 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 128 276 42 169 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 117 20 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 117 20 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 117 20 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 117 6 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 117 20 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 2635 | stmt -> ;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1806 | = null
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2279 | if (x) -> if (!x)
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4623 | == -> !=
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 906 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
93 1 270 1 273 1 72 1 175 1 
93 1 270 1 273 1 72 1 175 1 
93 1 270 1 273 1 72 1 175 1 
93 1 270 1 273 1 72 1 175 1 
93 1 270 1 273 1 72 1 175 1 
93 1 270 1 273 1 72 1 175 1 
93 1 270 1 273 1 72 1 175 1 
93 1 270 1 273 1 72 1 175 1 
93 1 270 1 273 1 72 1 175 1 
135 1 269 1 327 1 
128 1 
76 1 259 2 239 2 288 2 38 2 141 2 146 1 222 2 
76 1 79 1 218 1 41 1 288 2 85 1 172 2 132 1 222 3 259 3 293 1 96 1 181 1 19 1 141 2 266 2 25 1 146 1 110 1 267 1 193 1 112 1 57 1 315 1 233 1 201 2 235 1 157 1 34 2 114 2 158 1 239 2 161 1 280 1 38 2 73 1 163 1 
278 1 76 1 39 1 259 1 239 1 288 1 208 1 38 1 141 1 222 1 
39 1 151 1 288 1 8 1 289 1 62 1 222 1 319 1 223 1 259 1 135 1 327 1 329 1 75 1 
39 1 151 1 288 1 8 1 289 2 62 2 222 1 319 1 223 1 259 1 239 1 135 1 141 1 38 1 327 1 
292 1 119 1 289 1 62 1 27 1 
249 1 17 1 135 1 119 1 289 2 62 2 327 1 27 1 
289 1 62 1 27 1 
76 1 39 1 288 1 289 1 60 1 62 1 222 1 278 1 259 1 239 1 119 1 208 1 141 1 38 1 
135 1 
249 1 68 1 135 1 119 1 289 2 62 2 327 1 27 1 
249 1 194 1 153 2 289 5 171 1 62 5 318 1 317 1 260 1 116 1 135 1 46 2 324 1 119 2 104 1 284 2 327 1 227 1 27 2 
269 1 146 1 
2 1 288 2 222 2 259 2 295 1 239 1 141 1 38 1 146 2 
137 1 323 1 291 1 
110 1 80 1 79 1 201 1 132 1 222 1 235 1 259 1 34 1 158 1 280 1 181 1 19 1 266 1 163 1 146 1 
110 1 79 1 288 1 291 1 201 1 132 1 235 1 222 2 259 2 34 1 261 1 158 1 239 1 280 1 181 1 19 1 265 1 38 1 266 1 163 1 
2 1 219 1 288 5 222 5 259 5 16 1 261 1 239 4 265 2 38 4 141 1 213 1 75 1 146 1 
278 1 39 1 259 2 239 2 84 1 288 2 38 2 222 2 
259 3 239 3 265 1 288 3 141 1 38 3 146 1 222 3 
278 1 39 1 259 1 239 1 288 1 38 1 222 1 
39 1 259 1 2 1 295 1 239 1 288 1 38 1 141 1 222 1 
76 1 2 1 39 1 79 1 218 1 4 1 288 3 8 1 289 1 172 2 132 1 222 4 223 1 259 4 293 1 261 1 181 1 19 1 265 1 141 2 266 1 25 1 146 1 110 1 267 1 112 1 151 1 229 1 315 1 62 1 233 1 201 1 235 1 157 1 319 1 34 1 114 1 158 1 239 3 161 1 280 1 38 3 73 1 163 1 
259 2 239 1 219 1 288 2 265 1 38 1 146 1 75 1 222 2 
2 1 39 1 4 1 151 1 288 3 289 1 8 1 62 1 222 3 223 1 319 1 259 3 261 1 159 1 239 3 135 1 265 2 141 1 38 3 
2 1 288 2 291 1 222 2 259 2 239 2 137 1 265 1 141 1 38 2 
110 1 79 1 201 1 132 1 222 1 235 1 259 1 34 1 158 1 280 1 181 1 19 1 266 1 163 1 146 1 
79 1 201 1 132 1 222 1 235 1 259 1 34 1 36 1 280 1 300 1 181 1 19 1 266 1 163 1 146 1 
78 1 254 1 172 2 291 2 294 1 178 1 137 2 103 1 25 1 267 1 51 1 112 1 57 2 311 1 154 1 315 1 233 1 113 1 66 1 114 4 321 1 161 2 323 2 73 1 
319 1 39 1 259 1 239 1 84 1 288 1 38 1 222 1 
160 1 29 1 
160 1 29 1 
248 1 120 1 
248 1 120 1 
248 1 120 1 
150 1 160 1 29 1 
246 1 160 1 29 1 
247 1 248 1 160 2 29 2 47 1 120 1 
150 1 160 1 29 1 
150 1 160 1 29 1 
97 1 160 1 29 1 
97 1 160 1 29 1 
97 1 160 1 29 1 
244 1 246 1 220 1 288 2 289 1 11 1 222 2 94 1 259 2 100 1 301 1 26 1 144 1 146 1 308 1 196 1 29 1 62 1 277 1 239 2 160 1 206 1 210 1 38 2 
244 1 247 1 308 2 196 3 40 1 83 1 220 2 29 2 289 2 62 2 320 1 225 1 100 2 135 1 160 2 206 2 122 1 188 2 191 1 
205 1 167 1 202 1 
205 1 202 1 275 1 
217 1 205 3 167 2 37 1 314 1 275 1 
15 1 217 1 205 2 167 1 314 1 275 1 
217 2 205 2 167 1 314 1 275 1 
76 1 78 1 249 1 13 1 259 1 260 1 180 1 182 2 104 2 108 1 27 1 28 1 198 2 277 1 278 1 116 3 208 1 119 4 38 1 284 1 39 1 288 1 289 5 128 4 43 1 222 1 294 1 297 2 135 3 46 1 141 1 305 1 51 1 153 1 154 1 60 1 62 5 239 1 325 2 327 1 
76 1 78 1 249 1 170 1 13 1 259 1 260 1 180 1 104 2 108 1 27 3 195 2 272 1 198 2 277 1 278 1 116 3 208 1 119 4 38 1 284 1 39 1 288 1 289 5 128 4 222 1 292 2 294 1 297 2 135 3 46 1 141 1 305 1 51 1 153 1 154 1 60 1 62 5 239 1 325 2 327 1 
76 1 39 1 78 1 288 1 289 3 128 4 222 1 43 1 13 1 259 1 294 1 297 2 135 3 46 1 182 1 104 2 141 1 108 1 305 1 28 1 51 1 153 1 154 1 198 2 60 1 62 3 318 1 277 1 278 1 239 1 116 3 208 1 119 2 38 1 284 1 325 2 327 1 
78 1 289 2 128 4 43 1 13 1 294 1 297 2 135 2 46 1 183 1 182 1 104 2 108 1 305 1 28 1 51 1 153 1 154 1 198 2 62 2 318 1 277 1 116 3 119 1 284 1 325 2 
269 1 299 1 181 1 
56 1 181 1 
250 1 
79 1 181 1 235 1 
147 1 181 1 
79 1 181 1 
216 1 79 1 299 2 58 1 181 3 235 1 
166 1 3 1 268 1 57 4 154 1 87 1 173 2 44 1 294 1 321 3 237 1 114 7 161 3 18 1 102 1 103 2 226 1 
166 1 3 1 268 1 57 4 154 1 87 1 173 2 44 1 294 1 321 3 237 1 114 7 161 3 18 1 102 1 103 2 226 1 
166 1 3 1 268 1 57 4 154 1 87 1 173 2 44 1 294 1 321 3 237 1 114 7 161 3 18 1 102 1 103 2 226 1 326 1 
44 1 114 1 237 1 57 1 302 1 87 2 173 1 
166 1 3 1 267 2 268 1 112 2 57 5 154 1 87 1 172 4 315 2 173 2 130 1 155 1 294 1 321 4 237 1 114 9 161 4 18 1 263 1 102 1 103 3 25 2 226 1 
93 1 270 1 273 1 72 1 175 1 
270 1 185 1 273 1 72 1 175 1 
270 1 322 1 140 1 273 1 
270 1 185 1 273 1 72 1 175 1 
93 1 270 1 273 1 72 1 175 1 
328 1 
245 1 1 1 79 1 249 1 82 1 12 1 13 1 260 1 181 1 104 2 266 2 27 2 274 1 201 2 276 1 34 2 116 2 280 1 118 1 284 1 287 1 289 2 128 1 129 1 132 1 224 1 297 1 135 1 46 1 145 1 149 1 52 1 55 1 153 1 62 2 64 1 67 1 162 1 163 2 
245 1 149 1 249 1 55 1 287 1 252 1 289 2 62 2 224 1 68 1 27 2 
245 1 148 1 149 1 224 1 55 1 287 1 86 1 289 1 62 1 
245 1 149 1 148 1 249 1 55 1 287 1 252 1 289 2 86 1 62 2 174 1 224 1 68 1 27 2 
0 1 245 1 76 1 1 2 249 3 252 4 86 3 174 4 12 1 259 1 260 1 104 1 27 7 276 1 278 1 116 1 208 1 211 1 38 1 212 1 284 1 39 1 287 1 288 1 289 4 42 1 222 1 224 1 297 2 135 2 46 1 141 1 303 1 304 2 145 2 148 3 149 1 55 1 153 1 60 1 62 4 67 2 68 1 239 1 327 2 
245 1 1 1 287 1 289 1 128 1 12 1 224 1 260 1 297 1 135 1 46 1 104 1 145 1 149 1 55 1 153 1 62 1 276 1 67 1 116 1 162 1 284 1 
0 1 245 1 1 2 249 2 252 2 287 1 86 2 289 3 174 2 42 1 12 1 224 1 260 1 297 2 135 1 46 1 104 1 304 2 27 4 145 2 148 2 149 1 55 1 153 1 62 3 276 1 67 2 116 1 212 1 284 1 327 1 
0 1 245 1 1 2 249 2 252 2 287 1 86 2 289 3 174 2 42 1 12 1 224 1 260 1 297 2 135 1 46 1 104 1 304 2 27 4 145 2 148 2 149 1 55 1 153 1 62 3 276 1 67 2 116 1 212 1 284 1 327 1 
245 1 1 1 149 1 55 1 153 1 287 1 169 1 271 1 289 1 128 1 42 1 31 1 62 1 221 1 276 1 224 1 260 1 116 1 46 1 104 1 284 1 145 1 
245 1 0 1 1 2 249 2 252 3 287 1 289 3 86 3 42 1 174 3 12 1 224 1 260 1 297 2 135 1 46 1 104 1 303 1 304 2 145 2 27 5 148 3 149 1 55 1 153 1 62 3 276 1 67 2 116 1 212 1 284 1 327 1 
245 1 0 1 1 2 249 2 252 3 287 1 289 3 86 3 42 1 174 3 12 1 224 1 260 1 297 2 135 1 46 1 104 1 303 1 304 2 145 2 27 5 148 3 149 1 55 1 153 1 62 3 276 1 67 2 116 1 212 1 284 1 327 1 
245 1 1 2 249 2 252 2 287 1 86 2 289 3 128 2 174 2 221 2 224 1 260 1 135 1 46 1 104 1 27 4 145 2 148 2 149 1 55 1 153 1 62 3 31 1 276 1 35 2 116 1 162 1 284 1 327 1 
166 1 3 1 254 1 172 2 291 1 173 1 294 1 18 1 137 1 103 2 25 1 226 1 146 2 267 1 268 1 112 1 269 1 57 3 154 1 315 1 233 1 321 2 114 6 161 3 323 1 73 1 
78 1 218 1 168 1 255 1 172 4 291 11 131 1 294 2 136 1 102 1 137 4 103 1 21 1 25 2 189 1 146 1 305 2 307 3 267 2 193 1 51 2 112 2 57 8 154 1 315 2 233 1 321 2 114 14 161 6 323 11 243 1 283 3 73 2 
79 1 80 1 218 1 288 1 255 1 172 2 132 1 222 2 259 2 261 1 98 1 181 1 137 1 19 1 265 1 139 1 266 1 25 1 146 1 110 1 267 1 193 1 112 1 57 1 315 1 201 1 233 1 235 1 34 1 114 2 158 1 239 1 161 1 280 1 38 1 163 1 73 1 286 1 
166 1 77 2 78 2 3 1 79 2 255 1 88 1 172 6 173 1 259 3 261 1 18 1 181 2 102 4 103 4 265 1 19 2 266 3 25 3 110 2 267 3 268 1 193 1 112 3 201 3 32 2 34 3 204 1 114 20 280 2 38 1 215 2 218 1 288 1 291 7 132 2 222 3 294 3 137 7 142 2 226 1 146 2 305 2 51 2 152 1 57 10 154 3 315 3 233 3 235 2 157 2 238 1 321 8 158 2 239 1 161 10 323 7 163 1 73 3 
79 2 218 1 254 1 288 1 88 1 172 4 90 1 129 1 132 2 222 1 259 1 258 1 96 2 296 1 179 1 181 3 265 1 266 8 25 2 48 1 267 2 193 1 53 1 112 2 57 1 230 1 315 2 201 7 233 2 64 1 34 8 114 2 239 1 161 1 280 2 38 1 164 1 163 2 73 2 
2 1 78 1 288 1 255 1 172 2 291 1 222 1 259 1 294 1 137 1 103 1 141 1 25 1 305 1 267 1 51 1 112 1 57 1 154 1 315 1 233 1 234 1 321 1 114 3 239 1 161 2 323 1 38 1 73 1 
267 1 51 1 112 1 57 2 311 1 254 1 172 2 315 1 291 1 233 1 294 1 321 1 114 2 102 1 137 1 323 1 25 1 73 1 
78 1 267 1 112 1 254 1 154 1 172 2 315 1 291 1 233 1 321 1 114 2 66 1 161 2 137 1 103 1 323 1 25 1 73 1 
78 1 254 1 172 2 291 2 294 1 137 2 102 1 103 1 25 1 305 1 267 1 51 1 112 1 57 2 154 1 315 1 233 1 114 4 321 2 161 2 323 2 73 1 
267 1 51 1 112 1 57 2 311 1 172 2 315 1 291 1 233 1 294 1 321 1 114 2 296 1 102 1 137 1 323 1 25 1 73 1 
78 1 267 1 112 1 154 1 172 2 315 1 291 1 233 1 321 1 114 2 66 1 296 1 161 2 137 1 103 1 323 1 25 1 73 1 
78 1 172 2 291 2 294 1 296 1 137 2 102 1 103 1 25 1 305 1 267 1 51 1 112 1 57 2 154 1 315 1 233 1 114 4 321 2 161 2 323 2 73 1 
78 1 172 2 291 2 294 1 137 2 102 1 103 1 25 1 305 1 267 1 51 1 112 1 57 2 154 1 315 1 233 1 114 4 321 2 161 2 323 2 73 1 
79 1 218 1 172 2 132 1 222 1 259 1 181 1 19 1 266 1 25 1 146 1 110 1 267 1 193 1 112 1 57 1 315 1 201 1 233 1 235 1 157 1 34 1 114 2 158 1 161 1 280 1 163 1 73 1 
79 1 218 1 172 2 132 1 222 1 259 1 300 1 181 1 19 1 266 1 25 1 146 1 267 1 193 1 112 1 57 1 315 1 201 1 233 1 235 1 36 1 34 1 114 2 161 1 280 1 163 1 73 1 74 1 
78 1 255 1 172 2 291 2 294 1 137 2 102 1 103 1 25 1 305 1 267 1 51 1 112 1 57 2 154 1 315 1 233 1 114 4 321 2 161 2 323 2 73 1 
78 1 79 1 172 2 291 2 132 1 222 1 294 1 259 1 102 1 137 2 181 1 103 1 19 1 266 1 25 1 305 1 110 1 267 1 51 1 112 1 57 2 154 1 315 1 32 1 201 1 233 1 235 1 157 1 34 1 321 2 114 4 158 1 161 2 280 1 323 2 164 1 73 1 
78 1 2 1 288 1 255 1 172 2 291 1 222 1 259 1 294 1 102 1 264 1 137 1 141 1 25 1 305 1 267 1 51 1 112 1 57 2 154 1 315 1 233 1 321 1 114 3 239 1 161 1 323 1 38 1 73 1 
78 1 172 4 130 1 131 1 294 1 99 1 102 1 20 1 103 1 21 1 25 2 24 1 109 1 305 1 307 1 267 2 309 1 51 1 112 2 57 4 154 1 59 1 315 2 114 9 321 2 161 5 117 1 71 1 283 2 
78 1 172 4 130 1 131 1 294 1 99 1 102 1 20 1 103 1 21 1 25 2 24 1 109 1 305 1 307 1 267 2 309 1 51 1 112 2 57 4 154 1 59 1 315 2 114 9 321 2 161 5 117 1 71 1 283 2 
166 1 78 6 3 1 172 4 173 1 91 1 130 1 131 2 294 7 99 1 298 1 18 1 263 1 138 1 102 6 20 1 103 6 21 2 25 2 24 1 109 1 226 1 305 6 307 4 267 2 268 1 51 6 112 2 57 24 154 7 313 1 59 3 315 2 114 46 321 12 161 22 117 1 71 1 243 2 283 4 214 1 124 1 
78 1 6 1 172 4 130 1 131 1 294 1 99 1 102 1 103 1 21 1 25 2 24 1 109 1 305 1 307 1 267 2 309 1 51 1 112 2 57 4 154 1 59 1 315 2 114 9 321 2 161 5 117 1 71 1 283 2 
78 1 172 6 91 1 130 1 294 2 99 2 298 1 102 1 263 2 138 1 20 1 103 1 21 2 25 3 24 1 109 1 305 2 307 2 267 3 51 2 112 3 57 11 154 1 59 3 313 1 315 3 321 2 114 20 161 9 117 1 71 2 283 2 214 1 124 1 
247 1 308 1 228 1 100 1 40 1 83 1 220 1 160 1 206 1 29 1 
94 1 246 1 
308 1 177 1 100 1 220 1 160 1 206 1 197 1 29 1 306 1 
150 1 9 1 
97 1 207 1 47 1 
244 1 247 1 308 1 196 2 40 1 83 1 220 1 29 1 289 1 62 1 225 1 100 1 135 1 160 1 206 1 122 1 188 1 191 1 
244 1 247 1 308 1 196 2 40 1 83 1 220 1 29 1 289 1 62 1 225 1 100 1 135 1 160 1 206 1 122 1 188 1 191 1 
244 1 247 1 308 1 196 2 40 1 83 1 220 1 29 1 289 1 62 1 225 1 100 1 135 1 160 1 206 1 122 1 188 1 191 1 
150 1 47 1 9 1 
150 1 47 1 9 1 
97 1 207 1 
97 1 207 1 47 1 
26 1 11 1 
246 1 220 1 288 2 289 1 11 1 222 2 94 1 259 2 100 1 301 1 26 1 188 1 144 1 146 1 191 1 308 1 196 1 29 1 61 1 62 1 277 1 239 2 160 1 206 1 119 1 210 1 38 2 
79 1 218 1 253 1 288 2 255 1 172 2 132 1 222 2 259 2 258 1 96 2 179 1 181 1 266 2 186 1 25 1 267 1 193 1 112 1 57 1 199 1 315 1 232 1 233 1 201 2 34 2 114 2 161 1 280 1 242 1 73 1 
54 1 167 1 88 1 200 1 201 2 202 1 275 1 132 1 156 1 34 2 95 1 205 2 280 1 37 1 184 1 241 1 266 2 121 1 164 1 
54 1 167 1 88 1 200 1 201 1 202 1 275 1 156 1 132 1 203 1 34 1 95 1 205 2 280 1 37 1 241 1 266 1 
95 1 34 1 79 1 126 1 280 1 181 1 231 1 121 1 266 1 129 1 64 1 201 1 163 1 132 1 
54 1 167 1 88 1 200 1 201 1 202 1 275 1 132 1 156 1 34 1 95 1 205 2 280 1 37 1 184 1 241 1 266 1 121 1 
105 1 
116 1 135 1 269 1 324 1 104 1 327 1 227 1 
153 1 128 1 12 1 260 1 67 1 297 1 135 1 116 1 46 1 104 1 284 1 
78 2 79 1 249 3 82 1 14 2 13 2 256 1 260 3 181 6 104 7 266 1 27 5 198 6 201 1 33 2 34 1 116 8 280 1 281 1 284 3 215 2 125 2 290 1 289 5 128 12 132 2 223 2 294 2 297 6 135 7 46 3 299 2 143 2 305 2 50 2 51 2 56 3 153 3 58 1 154 2 62 5 235 1 236 2 163 1 325 6 327 1 
78 2 249 1 82 1 125 2 289 1 128 6 91 1 13 1 257 1 133 1 294 2 260 2 298 1 297 3 135 5 46 2 138 1 21 1 104 5 27 1 305 2 307 1 51 2 153 2 198 5 154 2 313 1 62 1 279 1 116 8 283 1 214 1 284 2 325 5 327 2 
76 1 39 1 3 1 125 2 81 1 288 1 289 1 222 1 257 1 259 1 294 2 260 1 46 1 104 2 141 1 226 1 268 1 153 1 154 1 60 1 62 1 278 1 239 1 116 2 208 1 38 1 212 1 284 1 
153 1 260 1 135 1 116 1 46 1 324 1 104 1 284 1 227 1 327 1 
78 1 125 1 51 1 198 2 154 1 128 4 294 1 297 2 135 2 116 2 104 2 325 2 305 1 
249 1 135 1 289 1 62 1 327 1 27 1 
79 1 249 2 82 2 289 3 129 1 132 1 13 2 260 1 46 2 181 1 104 2 266 4 27 4 153 2 312 1 274 1 62 3 318 1 201 4 64 1 34 4 240 1 116 2 280 1 209 2 118 1 282 1 284 2 163 2 
76 1 79 1 218 1 288 2 172 2 132 1 222 3 259 3 293 1 181 1 19 1 266 1 141 2 25 1 146 1 110 1 267 1 112 1 315 1 201 1 233 1 235 1 157 1 34 1 114 1 158 1 239 2 161 1 280 1 38 2 163 1 73 1 
82 1 153 1 198 2 128 4 173 1 13 1 260 1 297 2 116 1 135 4 46 1 104 2 284 1 325 2 327 2 
100 1 220 1 101 1 
100 1 40 1 220 1 7 1 26 1 
100 1 220 1 101 1 
100 1 220 1 101 1 
100 1 220 1 123 1 
100 1 220 1 123 1 
100 1 220 1 123 1 
100 1 220 1 
160 1 29 1 
166 1 3 1 172 2 173 1 130 1 294 1 18 1 103 2 21 1 25 1 226 1 307 1 267 1 268 1 112 1 57 4 154 1 315 1 114 8 321 2 161 4 283 1 214 1 
166 1 3 1 172 4 173 1 130 1 131 1 92 1 294 2 18 1 102 1 103 2 21 1 25 2 226 1 305 1 307 1 267 2 268 1 51 1 112 2 57 6 154 1 315 2 114 11 321 3 161 5 283 2 214 1 
166 1 78 2 3 1 172 6 173 1 91 1 130 1 92 1 294 3 298 1 18 1 102 1 138 1 263 1 103 3 21 1 25 3 226 1 305 2 307 1 267 3 268 1 51 2 112 3 57 9 154 3 313 1 315 3 114 19 321 4 161 10 283 1 214 1 
166 1 78 1 3 1 172 6 173 1 130 1 91 1 92 1 294 3 298 1 18 1 263 1 102 2 138 1 103 3 21 1 25 3 226 1 305 2 307 1 267 3 268 1 51 2 112 3 57 10 154 2 313 1 315 3 114 17 321 5 161 7 283 1 214 1 
166 1 3 1 172 2 173 1 130 1 294 1 18 1 103 2 21 1 25 1 226 1 307 1 267 1 268 1 112 1 57 4 154 1 315 1 114 8 321 2 161 4 283 1 214 1 
78 2 172 2 130 1 91 1 294 2 298 1 102 1 138 1 103 1 21 1 25 1 305 2 307 1 267 1 51 2 112 1 57 6 154 2 313 1 315 1 114 12 321 2 161 6 283 1 214 1 
166 1 78 1 3 1 172 8 173 1 91 1 130 1 92 1 294 3 298 1 18 1 102 2 138 1 263 2 103 3 21 1 25 4 226 1 305 2 307 1 267 4 268 1 51 2 112 4 57 10 154 2 313 1 315 4 114 18 321 5 161 8 283 1 214 1 
78 2 172 8 91 1 130 1 294 3 298 1 102 3 138 1 263 2 103 3 21 1 25 4 305 3 307 1 267 4 309 1 51 3 112 4 57 9 154 2 313 1 315 4 114 16 321 6 161 7 283 1 214 1 
166 1 3 3 268 1 57 3 154 1 294 1 114 7 321 6 161 4 18 2 102 3 103 3 226 3 
166 1 78 1 3 1 172 8 173 1 91 1 130 1 294 3 298 1 18 1 102 1 138 1 263 2 103 3 21 1 25 4 226 1 305 2 307 1 267 4 268 1 309 1 51 2 112 4 57 10 154 2 313 1 315 4 114 18 321 4 161 8 283 1 214 1 
166 1 267 2 3 1 268 1 112 2 57 4 154 1 172 4 315 2 173 1 294 1 114 8 321 3 161 4 18 1 102 1 263 1 103 2 25 2 226 1 
166 1 3 1 268 1 269 1 57 3 154 1 173 1 294 1 321 2 114 6 161 3 18 1 103 2 226 1 
78 1 267 1 51 1 112 1 57 2 154 1 172 2 315 1 92 1 294 1 321 2 114 4 161 2 102 1 103 1 25 1 305 1 
307 1 78 1 51 1 57 3 154 1 131 1 294 1 114 7 321 2 161 4 102 1 103 1 21 1 283 2 305 1 
166 1 78 2 3 2 172 4 173 1 131 1 294 3 136 1 18 1 102 4 263 2 103 5 25 2 226 2 305 2 307 2 267 2 268 1 51 2 112 2 57 11 154 3 30 1 315 2 321 9 114 23 161 12 283 2 243 1 
114 1 161 1 283 1 
307 1 114 1 57 1 
78 1 267 1 51 1 112 1 57 3 154 1 172 2 315 1 92 1 294 1 114 6 321 3 161 3 102 1 103 2 25 1 215 1 305 1 
78 2 172 2 130 1 91 1 294 2 298 1 102 1 138 1 103 1 21 1 25 1 305 2 307 1 267 1 51 2 112 1 57 6 154 2 313 1 315 1 114 12 321 2 161 6 283 1 214 1 
3 1 268 1 57 3 154 1 294 1 114 6 321 2 161 3 102 1 103 1 226 1 
166 1 3 1 267 1 112 1 57 1 30 1 172 2 315 1 321 2 114 3 161 2 18 1 102 1 263 1 103 1 25 1 226 1 
267 1 3 2 81 1 268 1 112 1 57 5 154 2 172 2 315 1 130 1 294 2 321 5 114 10 161 5 102 2 103 3 25 1 226 2 
267 1 51 1 112 1 57 2 172 2 315 1 130 1 294 1 114 2 321 1 102 1 25 1 
78 1 267 1 51 1 112 1 57 2 154 1 172 2 315 1 130 1 294 1 321 2 114 4 161 2 102 1 103 1 25 1 305 1 
267 3 3 1 309 1 112 3 57 1 30 1 172 6 315 3 130 1 114 3 321 2 161 2 263 1 102 1 103 1 25 3 226 1 
166 1 78 3 3 3 172 10 173 1 130 1 131 1 92 1 294 5 18 1 263 2 102 5 103 7 21 1 187 1 25 5 226 3 305 3 307 3 267 5 268 2 309 1 51 3 112 5 57 16 154 5 30 1 315 5 65 1 115 1 114 34 321 12 161 18 283 4 
259 1 219 1 310 1 288 1 146 1 222 1 75 1 
111 1 219 1 310 1 127 1 288 1 176 1 222 1 259 1 70 1 146 1 192 1 75 1 
34 1 79 1 269 1 280 1 181 1 266 1 129 1 64 1 201 1 163 1 132 1 
110 1 79 1 288 1 201 1 132 1 235 1 222 2 259 2 34 1 239 1 280 1 181 1 19 1 265 1 38 1 266 1 163 1 146 1 
110 1 147 1 39 1 79 2 288 2 8 1 63 1 201 1 132 1 235 2 222 2 319 1 259 2 34 1 239 2 280 1 181 3 19 1 265 1 209 1 38 1 266 1 146 1 
39 1 79 2 288 2 8 1 132 1 222 2 259 2 181 3 265 1 19 1 106 1 266 2 146 1 147 1 201 2 63 1 235 2 319 1 36 1 34 2 239 2 280 1 209 1 38 1 
79 1 289 2 89 1 132 1 223 1 135 1 299 1 181 4 106 1 107 1 266 3 27 1 147 1 56 1 62 2 201 3 63 1 235 1 34 3 280 1 209 1 163 1 327 1 
147 1 79 1 56 1 289 2 62 2 63 1 201 3 132 1 33 1 235 1 223 1 34 3 135 1 299 1 280 1 181 4 209 1 106 1 266 3 163 1 327 1 27 1 
48 1 34 1 280 1 266 1 201 1 132 1 
48 1 79 2 53 1 251 1 58 1 230 1 88 1 90 1 316 1 201 6 132 3 235 1 34 7 96 1 179 1 280 2 181 3 266 7 23 1 164 1 163 2 
166 1 79 1 3 1 255 1 172 4 173 1 259 2 18 1 181 1 265 1 19 1 103 2 266 1 186 1 25 2 110 1 267 2 268 1 112 2 32 1 201 1 34 1 114 6 280 1 38 1 288 1 291 1 132 1 222 2 294 1 137 1 142 1 226 1 146 2 57 3 154 1 315 2 233 2 235 1 157 1 321 2 158 1 239 1 161 3 323 1 164 1 73 2 
249 1 289 3 14 1 223 1 260 2 135 1 46 2 299 1 181 2 104 1 266 1 227 1 27 2 50 1 56 1 153 2 62 3 201 1 33 1 34 1 236 1 116 1 324 1 119 1 282 1 284 2 163 1 327 1 
48 1 79 1 250 1 58 1 201 1 132 2 235 1 34 1 256 1 299 1 280 1 181 2 266 1 
79 1 129 1 201 4 64 1 132 1 34 4 280 1 181 1 106 1 266 4 285 1 163 1 164 1 
79 1 251 1 152 1 201 2 132 2 235 1 34 2 262 1 280 1 181 1 209 1 266 2 23 1 165 1 
34 1 205 1 280 1 266 1 201 1 163 1 202 1 275 1 132 1 156 1 
79 1 88 1 201 2 132 1 34 2 179 1 280 1 181 1 266 2 242 1 164 1 
79 2 53 1 129 1 90 1 64 1 201 4 132 2 34 5 179 1 280 2 181 3 209 1 266 5 285 1 163 1 164 1 
79 2 53 1 129 1 64 1 201 4 10 1 132 2 34 5 179 1 280 2 181 3 209 1 266 5 285 1 163 1 164 1 
79 1 288 1 201 1 132 1 235 1 222 2 259 2 34 1 36 1 239 1 280 1 181 1 19 1 265 1 38 1 266 1 163 1 146 1 
79 1 251 1 58 1 316 1 201 1 132 2 235 1 34 1 280 1 181 1 209 1 266 1 23 1 
134 1 69 1 22 1 190 1 146 1 
39 1 49 1 5 1 4 1 151 1 8 1 289 2 62 2 223 1 319 1 134 1 135 1 45 1 69 2 119 1 22 2 190 2 146 1 327 1 
253 1 288 1 199 1 232 1 222 1 259 1 134 1 69 1 190 1 
49 1 134 1 45 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 50 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 50 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 50 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 50 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 329 278 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 329 278 170 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 153 307 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 329 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 329 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 329 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 329 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 329 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 329 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 329 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | ASSIGN | 1600 | = null
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 5914 | = null
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> 2
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5144 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 2841 | return null
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | CONDITION | 739 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
247 1 50 1 4 1 342 1 64 1 199 1 
247 1 50 1 4 1 342 1 64 1 199 1 
247 1 50 1 4 1 342 1 64 1 199 1 
247 1 50 1 4 1 342 1 64 1 199 1 
321 1 95 1 188 1 132 1 34 1 66 1 348 3 67 2 274 1 174 2 164 1 247 1 195 3 125 1 342 1 4 4 199 1 64 4 
139 1 321 1 57 1 66 1 273 1 119 1 205 1 164 1 247 1 195 1 125 1 342 1 4 2 199 1 64 2 90 1 
95 1 57 1 66 1 67 1 348 1 147 1 164 1 247 2 195 2 342 2 4 3 199 1 64 3 
321 1 95 3 188 1 57 1 223 1 132 1 34 1 66 1 348 7 67 4 19 1 274 1 147 1 174 2 298 1 164 1 247 2 194 1 195 5 125 1 342 2 4 9 199 1 64 9 
321 1 95 3 188 1 57 1 223 1 132 1 34 1 66 1 348 7 67 4 19 1 274 1 147 1 174 2 298 1 164 1 247 2 194 1 195 5 125 1 342 2 4 9 199 1 64 9 
346 1 126 1 48 1 
346 1 192 2 42 1 
84 2 20 2 202 2 16 2 81 1 166 2 82 1 63 2 
288 1 169 1 332 2 0 1 127 1 334 1 148 1 51 1 128 1 20 3 338 1 300 1 154 1 197 1 257 1 344 2 322 1 347 1 114 1 241 1 202 2 81 1 82 1 60 1 120 1 284 1 354 2 83 2 84 3 264 1 266 1 227 1 16 2 285 1 166 2 45 2 63 2 
310 1 336 1 84 1 20 1 202 1 16 1 166 1 82 1 38 1 63 1 
346 1 304 1 33 1 48 1 158 1 36 1 59 1 159 1 310 1 20 1 84 1 166 1 24 1 218 1 
346 1 304 2 33 1 48 1 202 1 59 1 159 1 310 1 20 1 84 1 16 1 24 2 166 1 218 1 63 1 
304 1 92 1 177 1 24 1 69 1 
346 1 304 2 92 1 48 1 299 1 101 1 24 2 69 1 
304 1 92 1 24 1 
304 1 30 1 202 1 69 1 82 1 38 1 310 1 336 1 20 1 84 1 16 1 24 1 166 1 63 1 
346 1 
346 1 304 2 92 1 107 1 48 1 299 1 24 2 69 1 
346 1 304 5 92 2 48 1 98 2 65 1 144 1 294 1 58 1 69 2 15 2 246 1 40 1 299 1 86 2 24 5 217 1 167 1 286 1 
126 1 81 1 
202 1 81 2 20 2 84 2 70 1 16 1 166 2 239 1 63 1 
7 1 47 1 122 1 
332 1 241 1 81 1 146 1 148 1 51 1 128 1 284 1 354 1 84 1 20 1 338 1 266 1 285 1 344 1 257 1 
47 1 332 1 241 1 145 1 202 1 148 1 128 1 51 1 352 1 284 1 354 1 20 2 84 2 338 1 266 1 285 1 166 1 257 1 344 1 63 1 
84 3 20 3 16 1 202 3 81 1 166 3 352 1 63 3 
310 1 84 1 20 1 202 1 166 1 38 1 63 1 
310 1 84 1 20 1 70 1 202 1 16 1 166 1 239 1 63 1 
332 1 127 1 145 1 334 1 148 1 128 1 51 1 338 1 20 4 300 1 152 1 154 1 24 1 218 1 239 1 257 1 110 1 344 1 304 1 322 1 347 1 114 1 33 1 241 1 202 3 81 1 59 1 159 1 82 1 60 1 120 1 352 1 284 1 310 1 354 1 83 2 84 4 266 1 227 1 16 2 285 1 166 3 45 1 63 3 
84 2 20 2 10 1 202 1 81 1 166 2 36 1 63 1 352 1 
346 1 304 1 33 1 145 1 202 3 159 1 59 1 352 2 310 1 20 3 84 3 16 1 184 1 152 1 24 1 166 3 218 1 239 1 63 3 
47 1 202 2 352 1 20 2 84 2 16 1 122 1 166 2 239 1 63 2 
332 1 241 1 81 1 51 1 128 1 148 1 284 1 354 1 84 1 20 1 338 1 266 1 285 1 344 1 257 1 
332 1 270 1 241 1 81 1 35 1 51 1 128 1 148 1 354 1 84 1 20 1 266 1 285 1 344 1 257 1 
47 2 0 2 127 1 254 1 334 1 151 1 318 1 130 1 341 1 300 1 154 1 219 1 7 2 305 1 347 2 114 1 157 1 120 1 39 1 83 2 122 2 229 1 45 4 88 1 
310 1 84 1 20 1 202 1 193 1 166 1 59 1 63 1 
10 1 202 4 145 1 81 1 36 1 352 2 319 1 20 5 84 5 16 1 124 1 166 5 239 1 63 4 
310 1 84 2 20 2 193 1 202 2 166 2 38 1 63 2 
189 1 137 1 
189 1 137 1 
76 1 238 1 
76 1 238 1 
76 1 238 1 
189 1 134 1 137 1 
189 1 333 1 137 1 
180 1 76 1 189 2 238 1 276 1 137 2 
189 1 134 1 137 1 
189 1 134 1 137 1 
290 1 189 1 137 1 
290 1 189 1 137 1 
290 1 189 1 137 1 
278 1 189 1 43 1 329 1 137 1 230 1 
304 1 170 1 278 1 189 1 43 1 24 1 329 1 137 1 230 1 
321 1 188 1 125 1 
321 1 139 1 125 1 
321 3 139 1 188 2 234 1 176 1 6 1 
321 2 139 1 188 1 176 1 6 1 62 1 
321 2 139 1 188 1 6 1 176 2 
138 1 92 1 140 1 97 1 98 1 48 1 253 1 69 4 295 1 52 1 149 1 151 1 318 1 192 3 337 2 341 1 299 1 24 5 217 3 219 1 304 5 346 2 260 1 308 1 242 2 61 2 15 1 327 1 40 2 86 1 42 1 167 1 
92 6 140 1 48 1 98 2 144 1 69 7 52 4 295 2 233 1 149 2 150 1 151 3 318 3 192 9 341 3 299 1 24 9 217 8 219 3 27 1 304 9 346 5 77 1 177 5 308 3 242 6 133 1 61 6 15 2 40 6 85 5 86 2 42 3 356 1 167 1 
97 1 48 1 98 1 144 1 253 1 69 2 295 1 52 1 149 1 151 1 318 1 337 1 192 4 341 1 24 3 217 3 219 1 346 3 304 3 308 1 242 2 15 1 61 2 40 2 86 1 42 2 
97 1 48 1 98 1 144 1 253 1 69 3 295 1 52 2 233 1 149 1 151 2 318 2 192 7 337 2 341 2 24 4 217 5 219 2 346 4 304 4 77 1 308 2 242 4 61 4 15 1 40 4 86 1 42 3 356 1 
126 1 148 1 317 1 
73 1 148 1 
31 1 
266 1 148 1 
266 1 340 1 148 3 5 1 257 1 317 2 
266 1 148 1 257 1 
222 1 148 1 
323 1 347 1 251 1 0 3 201 1 271 1 102 1 316 1 309 2 262 1 153 1 229 2 219 1 75 1 88 3 45 4 
323 1 347 1 251 1 0 3 201 1 271 1 102 1 316 1 309 2 262 1 153 1 229 2 219 1 75 1 88 3 45 4 
323 1 347 1 251 1 0 3 201 1 271 1 102 1 316 1 309 2 283 1 262 1 153 1 229 2 219 1 75 1 88 3 45 4 
96 1 251 1 127 1 0 15 334 1 271 2 102 1 316 2 296 1 318 3 151 3 3 1 341 3 280 1 300 1 153 1 301 1 219 4 75 5 323 2 347 13 224 3 201 1 308 3 14 1 309 3 120 1 262 2 83 2 136 1 210 4 229 5 45 28 88 10 
251 1 127 2 0 4 334 2 271 1 102 1 316 1 300 2 153 1 219 1 75 1 323 1 78 1 347 2 14 1 309 2 120 2 262 1 311 1 83 4 229 3 45 6 88 4 
139 1 188 1 332 1 66 1 214 1 2 1 51 1 103 1 234 1 108 1 195 1 4 2 342 1 344 1 199 1 321 2 57 1 11 1 241 1 348 1 161 1 160 1 118 1 207 1 354 1 208 1 164 1 247 1 125 1 64 2 
139 1 231 1 188 1 332 1 66 1 214 1 2 1 51 1 103 1 234 1 175 1 108 1 195 1 4 3 342 1 344 1 321 2 57 1 11 1 241 1 348 2 161 1 160 1 207 1 354 1 164 1 247 1 209 1 125 1 64 3 
139 1 231 1 332 1 188 1 66 1 214 1 2 1 51 1 103 1 175 1 234 1 108 1 195 1 4 2 344 1 321 2 57 1 11 1 241 1 348 2 207 1 354 1 164 1 125 1 64 2 
331 1 57 2 332 1 11 2 2 2 353 1 207 2 354 1 248 1 247 1 285 1 209 1 342 1 4 1 54 1 344 1 64 1 
139 1 231 1 188 1 332 1 214 1 2 1 51 1 103 1 234 1 108 1 4 1 342 1 344 1 199 1 321 2 57 1 11 1 241 1 161 1 160 1 207 1 354 1 208 1 247 1 125 1 64 1 
105 1 
92 6 48 1 98 1 100 4 148 1 51 1 149 1 106 2 192 2 236 2 155 2 241 1 158 1 59 1 159 1 325 1 15 1 285 2 17 1 166 1 167 1 291 1 332 2 213 1 173 1 215 2 297 2 20 1 299 3 71 1 24 5 217 2 218 1 74 1 344 2 346 2 345 1 304 5 259 1 33 1 306 1 80 1 36 1 310 1 354 2 182 2 226 1 84 1 40 2 183 1 266 1 86 1 42 2 313 2 185 1 
304 3 92 2 33 1 259 1 213 1 158 1 100 2 173 1 159 1 59 1 36 1 297 1 310 1 107 1 20 1 84 1 299 1 71 1 24 3 166 1 218 1 185 1 
346 1 304 3 92 1 33 1 259 1 48 1 213 1 158 1 100 3 173 1 159 1 59 1 36 1 310 1 107 1 182 1 20 1 84 1 299 1 71 1 24 3 166 1 218 1 185 1 
92 2 48 1 213 1 100 3 173 1 297 1 107 1 20 1 299 1 71 1 236 1 24 3 218 1 304 3 346 1 259 1 33 1 158 1 36 1 59 1 159 1 310 1 84 1 182 1 166 1 185 1 
92 3 98 1 48 1 100 2 107 1 236 2 198 1 158 1 282 1 202 1 12 1 159 1 59 1 325 1 15 1 16 1 166 2 167 1 63 1 213 1 173 1 297 2 336 1 20 2 299 1 71 1 24 3 218 1 217 1 343 1 304 3 346 1 30 1 33 1 259 1 36 1 82 1 38 1 310 2 84 2 40 1 86 1 185 1 
92 4 291 1 48 1 98 1 213 1 100 4 173 1 215 2 297 2 106 2 192 2 20 1 299 2 236 2 71 1 24 4 217 1 218 1 346 2 304 4 155 2 259 1 33 1 306 1 158 1 36 1 59 1 159 1 325 1 15 1 310 1 182 2 84 1 40 1 86 1 42 2 313 2 166 1 167 1 185 1 
48 1 98 1 213 1 100 2 173 1 336 1 20 2 71 1 24 2 217 1 218 1 198 1 346 1 304 2 30 1 259 1 33 1 158 1 202 1 12 1 82 1 36 1 59 1 159 1 38 1 325 1 15 1 310 2 84 2 40 1 86 1 16 1 166 2 167 1 185 1 63 1 
48 1 98 1 213 1 100 2 173 1 336 1 20 2 71 1 24 2 217 1 218 1 198 1 346 1 304 2 30 1 259 1 33 1 158 1 202 1 12 1 82 1 36 1 59 1 159 1 38 1 325 1 15 1 310 2 84 2 40 1 86 1 16 1 166 2 167 1 185 1 63 1 
92 4 93 1 250 2 48 1 98 1 213 1 100 4 173 1 215 2 297 2 192 2 20 1 299 2 236 2 71 1 196 2 24 4 218 1 320 1 346 1 304 4 155 2 259 1 33 1 306 1 158 1 116 1 36 1 59 1 159 1 15 1 310 1 182 2 84 1 40 1 86 1 41 1 166 1 167 1 185 1 
92 1 98 1 48 1 100 3 236 1 198 1 282 1 158 1 12 1 202 1 159 1 59 1 325 1 15 1 16 1 166 2 167 1 63 1 213 1 173 1 297 1 336 1 20 2 71 1 24 2 218 1 217 1 304 2 346 1 30 1 33 1 259 1 36 1 82 1 38 1 310 2 182 1 84 2 40 1 86 1 185 1 
92 1 98 1 48 1 100 3 236 1 198 1 282 1 158 1 12 1 202 1 159 1 59 1 325 1 15 1 16 1 166 2 167 1 63 1 213 1 173 1 297 1 336 1 20 2 71 1 24 2 218 1 217 1 304 2 346 1 30 1 33 1 259 1 36 1 82 1 38 1 310 2 182 1 84 2 40 1 86 1 185 1 
92 4 93 1 291 1 250 2 48 1 98 1 213 1 100 4 173 1 215 2 297 2 192 2 20 1 299 2 236 2 71 1 196 2 24 4 218 1 346 1 304 4 155 2 259 1 33 1 306 1 158 1 36 1 59 1 159 1 15 1 310 1 182 2 84 1 40 1 86 1 166 1 167 1 185 1 
7 1 126 1 47 1 347 1 114 1 251 1 0 2 127 1 81 1 334 1 271 1 102 1 309 1 316 1 39 1 120 1 83 2 300 1 122 1 153 1 154 1 229 2 45 3 219 1 88 2 
288 1 141 1 47 11 142 1 127 2 0 8 334 2 296 1 318 1 151 1 3 1 341 2 23 1 300 2 154 1 75 1 219 2 220 1 7 11 347 6 114 2 224 3 308 2 81 1 60 1 120 2 83 4 122 4 165 1 229 1 210 3 88 2 45 14 
288 1 141 1 332 1 127 1 145 1 0 1 334 1 146 1 148 1 128 1 51 1 275 1 338 1 20 2 300 1 154 1 257 1 344 1 347 1 114 1 241 1 202 1 81 1 60 1 352 1 120 1 284 1 354 1 83 2 84 2 266 1 285 1 122 1 123 1 166 1 228 1 45 2 63 1 
231 1 141 1 47 7 145 1 0 9 271 1 102 1 51 2 148 2 316 1 151 2 318 2 153 1 154 3 7 7 8 1 114 3 241 2 202 1 60 1 162 1 120 3 121 2 284 2 285 1 122 7 166 1 63 1 288 1 251 1 332 3 127 3 334 3 128 2 129 2 20 3 338 2 216 1 341 2 300 3 22 2 344 3 257 2 219 3 75 4 347 8 308 2 81 1 309 1 352 1 354 3 83 6 84 3 227 2 266 2 87 2 229 4 45 17 88 8 
288 1 169 2 231 1 332 7 293 1 127 2 0 1 99 1 334 2 51 2 148 3 191 1 21 1 20 1 300 2 154 2 74 1 344 8 347 1 114 2 241 2 202 1 13 1 37 1 60 1 118 1 206 1 39 1 352 1 120 2 354 8 83 4 84 1 226 1 266 2 285 2 166 1 45 2 63 1 
47 1 141 1 127 1 0 1 334 1 318 1 151 1 20 1 341 1 300 1 154 1 239 1 281 1 219 1 7 1 347 2 114 1 202 1 308 1 120 1 83 2 84 1 16 1 122 1 166 1 229 1 88 1 45 3 63 1 
7 1 47 1 114 1 127 1 0 2 334 1 39 1 120 1 83 2 130 1 341 1 300 1 122 1 154 1 88 1 75 1 45 2 219 1 
7 1 47 1 347 2 114 1 127 1 334 1 254 1 39 1 120 1 83 2 318 1 151 1 300 1 122 1 154 1 229 1 88 1 45 2 
47 2 0 2 127 1 334 1 318 1 151 1 341 1 300 1 154 1 219 1 75 1 7 2 347 2 114 1 308 1 120 1 39 1 83 2 122 2 229 1 45 4 88 2 
7 1 47 1 114 1 127 1 0 2 334 1 120 1 191 1 83 2 130 1 341 1 300 1 122 1 154 1 88 1 75 1 45 2 219 1 
7 1 47 1 347 2 114 1 127 1 334 1 254 1 120 1 191 1 83 2 318 1 151 1 300 1 122 1 154 1 229 1 88 1 45 2 
47 2 0 2 127 1 334 1 191 1 318 1 151 1 341 1 300 1 154 1 219 1 75 1 7 2 347 2 114 1 308 1 120 1 83 2 122 2 229 1 45 4 88 2 
47 2 0 2 127 1 334 1 318 1 151 1 341 1 300 1 154 1 219 1 75 1 7 2 347 2 114 1 308 1 120 1 83 2 122 2 229 1 45 4 88 2 
288 1 332 1 0 1 127 1 334 1 128 1 51 1 148 1 338 1 20 1 300 1 154 1 257 1 344 1 347 1 114 1 241 1 81 1 60 1 120 1 284 1 354 1 83 2 84 1 266 1 227 1 285 1 45 2 
288 1 332 1 270 1 0 1 127 1 334 1 128 1 51 1 148 1 335 1 20 1 300 1 154 1 257 1 344 1 347 1 114 1 241 1 81 1 35 1 60 1 120 1 354 1 83 2 84 1 266 1 285 1 45 2 
141 1 47 2 0 2 127 1 334 1 318 1 151 1 341 1 300 1 154 1 219 1 75 1 7 2 347 2 114 1 308 1 120 1 83 2 122 2 229 1 45 4 88 2 
47 2 332 1 0 2 127 1 334 1 128 1 51 1 148 1 129 1 151 1 318 1 338 1 20 1 341 1 300 1 154 1 75 1 219 1 257 1 344 1 7 2 347 2 114 1 241 1 308 1 118 1 120 1 284 1 354 1 83 2 84 1 227 1 266 1 122 2 229 1 88 2 45 4 
141 1 47 1 127 1 0 2 334 1 151 1 318 1 20 1 341 1 300 1 154 1 239 1 75 1 219 1 7 1 347 1 114 1 202 1 308 1 120 1 83 2 84 1 16 1 122 1 166 1 88 1 45 3 63 1 287 1 
171 1 127 2 0 9 334 2 296 1 318 3 151 3 3 1 341 3 300 2 25 1 302 1 219 3 75 3 347 10 224 1 115 1 308 3 203 1 350 1 120 2 311 1 83 4 163 2 229 3 210 2 268 1 45 19 88 6 269 2 
289 1 171 1 127 3 0 14 334 3 272 1 296 2 277 1 151 2 318 2 341 3 300 3 75 2 219 3 347 12 179 1 224 2 115 1 308 3 203 2 350 2 244 1 14 2 120 3 311 1 83 6 163 4 249 1 229 2 210 2 88 4 268 1 45 26 269 1 
0 19 271 1 272 1 102 1 316 1 151 4 318 4 277 1 3 1 153 1 115 1 203 1 14 1 244 1 120 3 163 4 249 1 210 4 289 1 171 1 251 1 127 3 334 3 296 3 341 4 300 3 25 1 75 4 219 5 303 1 347 19 179 1 224 3 308 4 350 2 309 1 311 1 83 6 229 4 88 8 45 38 268 1 269 1 
289 1 171 1 251 1 127 4 0 19 334 4 271 1 102 1 272 1 316 1 296 3 277 1 318 3 151 3 3 1 341 4 300 4 153 1 25 1 219 5 75 3 303 1 347 16 179 1 224 3 115 1 308 4 203 1 350 2 244 1 14 2 309 1 120 4 311 1 83 8 163 4 249 1 229 4 210 4 268 1 45 35 88 7 269 1 
289 1 171 1 251 1 142 2 127 2 0 26 334 2 271 1 102 1 272 1 316 1 296 2 277 1 318 7 151 7 3 2 341 7 300 2 153 1 219 8 75 7 347 23 179 1 224 4 115 1 308 7 203 1 350 1 244 1 14 1 309 1 120 2 311 1 83 4 163 4 249 1 229 7 210 4 268 1 45 49 88 14 269 1 
288 1 169 2 141 1 332 2 143 1 127 1 0 1 334 1 51 1 148 1 21 1 20 2 300 1 154 1 53 1 344 2 347 1 114 1 241 1 13 1 60 1 120 1 354 2 83 2 84 2 266 1 166 2 18 1 45 2 46 1 186 1 
321 2 139 1 55 1 168 1 231 1 188 1 332 2 241 1 51 1 160 1 118 1 103 1 207 1 354 2 263 1 234 1 108 1 125 1 344 2 
321 2 139 1 168 1 231 1 178 1 188 1 332 1 241 1 160 1 51 1 103 1 207 1 354 1 234 1 108 1 125 1 344 1 
353 1 207 1 55 1 354 1 332 1 285 1 243 1 344 1 
321 2 139 1 55 1 168 1 231 1 188 1 332 1 241 1 51 1 160 1 103 1 207 1 354 1 263 1 234 1 108 1 125 1 344 1 
339 1 
346 1 126 1 40 1 48 1 65 1 294 1 217 1 
304 1 346 2 92 1 48 1 98 1 325 1 15 1 106 1 192 1 40 1 299 1 86 1 42 1 24 1 313 1 167 1 217 1 
92 5 48 2 98 4 51 4 148 10 317 2 149 2 318 2 151 2 192 12 279 1 5 1 113 2 56 2 200 1 9 2 241 3 242 6 159 2 245 1 118 1 15 4 326 2 61 6 285 1 167 4 332 3 65 1 294 1 256 2 299 3 341 2 22 2 24 5 217 9 73 3 257 3 344 3 219 2 28 1 345 1 304 5 346 8 32 1 222 2 308 2 351 2 354 3 40 8 266 3 86 4 42 6 44 2 314 2 
289 1 92 1 98 2 48 2 252 1 272 1 149 1 296 1 277 1 318 2 151 2 192 6 299 1 341 2 24 1 217 8 219 2 345 1 112 1 304 1 346 5 179 1 224 1 308 2 242 5 351 2 61 5 15 2 40 5 86 2 42 3 249 1 314 1 167 2 210 1 
304 1 98 1 307 1 12 1 271 1 316 1 351 1 15 1 151 1 40 2 86 1 153 1 24 1 217 2 167 1 219 1 
346 1 98 1 48 1 65 1 294 1 15 1 40 1 86 1 167 1 217 1 
346 5 308 2 242 5 351 2 61 5 318 2 151 2 192 10 40 5 341 2 22 1 42 5 314 1 217 5 219 2 
346 1 304 1 92 1 48 1 299 1 24 1 
92 4 332 4 98 2 144 1 51 1 148 1 149 2 299 2 24 3 217 2 74 1 344 4 28 1 345 2 304 3 156 1 80 1 241 1 245 2 15 2 354 4 226 1 40 2 183 1 266 1 86 2 285 2 328 1 167 1 
332 1 127 1 334 1 51 1 128 1 148 1 20 3 338 1 300 1 154 1 344 1 257 1 322 1 347 1 114 1 241 1 202 2 81 1 82 1 60 1 120 1 284 1 354 1 83 2 84 3 227 1 266 1 285 1 16 2 166 2 45 1 63 2 
346 4 345 1 98 1 48 2 242 2 309 1 61 2 15 1 149 1 192 4 40 2 86 1 42 2 167 1 217 1 
43 1 329 1 
43 1 329 1 
43 1 329 1 
43 1 329 1 
43 1 329 1 
43 1 329 1 
43 1 329 1 
43 1 329 1 
189 1 137 1 
347 2 251 1 0 3 127 2 334 2 271 1 14 1 102 1 309 1 316 1 120 2 83 4 300 2 153 1 229 2 219 1 45 5 75 1 88 3 
126 1 347 1 251 1 0 2 153 1 271 1 229 2 102 1 309 1 45 3 219 1 88 2 316 1 
347 2 127 1 0 2 308 1 334 1 204 1 120 1 151 1 318 1 83 2 341 1 300 1 229 1 88 2 219 1 45 4 75 1 
347 4 224 1 0 3 308 1 296 1 151 1 318 1 3 1 341 1 229 1 210 2 45 7 219 1 75 1 88 2 
251 1 142 1 0 10 127 2 172 1 334 2 271 2 102 1 316 2 318 2 151 2 3 1 341 2 300 2 153 1 75 4 219 3 347 10 224 2 308 2 14 2 309 1 120 2 83 4 165 1 210 2 229 5 88 9 45 20 
347 1 210 1 45 1 
224 1 0 1 45 1 
347 3 127 1 0 3 308 1 334 1 204 1 120 1 83 2 318 1 151 1 341 1 300 1 22 1 229 2 45 6 219 1 75 1 88 3 
289 1 127 1 0 6 334 1 272 1 296 1 318 2 151 2 277 1 341 2 300 1 75 1 219 2 347 6 179 1 224 1 308 2 120 1 311 1 83 2 249 1 210 1 229 1 45 12 88 2 
0 1 153 1 45 1 219 1 
347 2 251 1 0 1 127 1 172 1 334 1 271 1 14 1 102 1 316 1 120 1 83 2 300 1 229 1 75 1 88 2 45 3 
347 3 307 1 127 1 0 4 334 1 271 1 316 1 120 1 311 1 83 2 151 1 300 1 153 1 229 2 88 4 75 2 45 7 219 2 
127 1 0 2 334 1 120 1 311 1 83 2 341 1 300 1 219 1 45 2 75 1 88 1 
347 2 127 1 0 2 308 1 334 1 120 1 311 1 151 1 318 1 83 2 341 1 300 1 229 1 88 2 219 1 45 4 75 1 
347 2 127 3 0 1 172 1 334 3 271 1 14 1 316 1 120 3 311 1 83 6 300 3 25 1 229 1 45 3 88 2 75 1 
251 1 127 5 0 14 172 1 334 5 271 2 102 1 316 2 296 1 318 3 151 3 3 1 280 1 341 3 300 5 153 2 301 1 25 1 219 5 75 5 347 14 224 3 308 3 204 1 14 2 309 1 120 5 311 1 83 10 136 1 210 4 229 6 45 28 88 11 
251 1 127 1 0 3 334 1 271 1 102 1 316 1 296 1 300 1 153 1 219 1 347 2 224 1 309 1 120 1 311 1 83 2 249 1 210 1 229 2 45 5 88 2 
251 1 127 2 0 5 334 2 271 1 102 1 316 1 296 1 3 1 341 1 300 2 153 1 219 2 75 1 347 3 224 1 308 1 204 1 309 1 120 2 311 1 83 4 249 1 229 2 210 2 45 8 88 3 
289 1 251 1 127 3 0 8 334 3 271 1 102 1 272 1 316 1 296 1 277 1 318 2 151 2 341 2 300 3 153 1 75 1 219 3 347 8 179 1 224 1 308 2 204 1 14 1 309 1 120 3 311 1 83 6 249 1 210 1 229 3 45 16 88 4 
289 1 251 1 127 3 0 9 334 3 271 1 102 1 272 1 316 1 296 1 318 1 151 1 277 1 341 2 300 3 153 1 75 2 219 3 347 5 179 1 224 1 308 2 204 1 14 1 309 1 120 3 311 1 83 6 249 1 210 1 229 3 45 14 88 5 
251 1 127 1 0 3 334 1 271 1 102 1 316 1 296 1 300 1 153 1 219 1 347 2 224 1 309 1 120 1 311 1 83 2 249 1 210 1 229 2 45 5 88 2 
289 1 127 1 0 6 334 1 272 1 296 1 318 2 151 2 277 1 341 2 300 1 75 1 219 2 347 6 179 1 224 1 308 2 120 1 311 1 83 2 249 1 210 1 229 1 45 12 88 2 
289 1 251 1 127 4 0 9 334 4 271 1 102 1 272 1 316 1 296 1 277 1 318 1 151 1 341 2 300 4 153 1 75 2 219 3 347 6 179 1 224 1 308 2 204 1 14 2 309 1 120 4 311 1 83 8 249 1 210 1 229 3 45 15 88 5 
289 1 127 4 0 9 334 4 272 1 296 1 277 1 318 2 151 2 341 3 300 4 25 1 75 3 219 3 347 7 179 1 224 1 308 3 14 2 120 4 311 1 83 8 249 1 210 1 229 3 45 16 88 6 
347 2 251 1 307 1 0 5 271 2 102 1 309 1 316 2 151 1 153 2 229 4 45 7 88 7 75 3 219 3 
289 1 251 1 127 4 0 9 334 4 271 1 102 1 272 1 316 1 296 1 277 1 318 1 151 1 341 2 300 4 153 1 25 1 75 1 219 3 347 6 179 1 224 1 308 2 14 2 309 1 120 4 311 1 83 8 249 1 210 1 229 3 45 15 88 4 
221 1 84 1 20 1 10 1 81 1 166 1 36 1 
221 1 190 1 94 1 84 1 20 1 10 1 49 1 1 1 237 1 81 1 166 1 36 1 
354 1 126 1 226 1 332 1 241 1 266 1 285 1 51 1 148 1 74 1 344 1 
332 1 241 1 202 1 81 1 148 1 128 1 51 1 352 1 284 1 354 1 20 2 84 2 266 1 285 1 166 1 257 1 344 1 63 1 
113 1 222 1 33 1 332 1 241 1 202 2 81 1 59 1 148 3 128 1 51 1 245 1 352 1 310 1 284 1 354 1 20 2 84 2 266 2 166 2 257 2 344 1 63 1 
113 1 222 1 33 1 332 2 241 1 202 2 81 1 59 1 35 1 148 3 128 1 51 1 245 1 352 1 310 1 354 2 20 2 84 2 266 2 166 2 131 1 257 2 344 2 63 1 
346 1 304 2 113 1 92 1 222 1 332 3 48 1 241 1 159 1 255 1 51 1 245 1 148 4 317 1 354 3 235 1 266 1 285 1 24 2 73 1 131 1 257 1 344 3 
346 1 304 2 113 1 92 1 222 1 332 3 48 1 241 1 159 1 51 1 245 1 148 4 256 1 317 1 354 3 266 1 285 1 24 2 73 1 131 1 257 1 344 3 
354 1 332 1 241 1 99 1 51 1 344 1 
169 1 231 1 240 1 332 6 293 1 241 2 99 1 37 1 148 3 51 3 118 1 206 1 225 1 354 7 21 1 266 2 285 2 5 1 344 7 257 1 89 1 
47 1 141 1 251 1 332 1 0 2 127 2 334 2 271 1 102 1 148 1 128 1 51 1 316 1 129 1 20 2 338 1 300 2 153 1 154 2 219 1 257 1 344 1 7 1 347 1 114 2 241 1 202 1 81 1 309 1 118 1 352 1 120 2 121 1 284 1 354 1 83 4 84 2 266 1 227 1 122 1 166 1 229 2 45 3 88 2 186 1 63 1 
92 2 332 1 48 1 98 2 65 1 294 1 69 1 148 2 256 1 317 1 299 1 24 3 217 1 73 1 344 1 346 1 28 1 304 3 56 1 9 1 159 1 15 2 354 1 40 1 86 2 285 1 44 1 167 2 
200 1 332 2 241 1 99 1 148 2 51 2 118 1 317 1 354 2 266 1 5 1 344 2 257 1 
232 1 332 4 241 1 51 1 148 1 118 1 354 4 226 1 266 1 285 1 131 1 74 1 344 4 
240 1 8 1 212 1 332 2 241 1 245 1 148 1 51 2 354 2 266 1 267 1 344 2 257 1 89 1 
321 1 139 1 354 1 332 1 241 1 108 1 285 1 125 1 51 1 344 1 
354 2 21 1 231 1 332 2 241 1 266 1 51 1 148 1 344 2 118 1 46 1 
232 1 332 4 293 1 241 2 245 1 148 3 51 2 37 1 118 1 354 5 226 1 21 1 266 2 285 1 74 1 344 5 
232 1 332 4 241 2 245 1 148 3 51 2 37 1 118 1 354 5 226 1 21 1 266 2 285 1 74 1 344 5 211 1 
332 1 241 1 202 1 81 1 35 1 148 1 128 1 51 1 352 1 354 1 20 2 84 2 266 1 285 1 166 1 257 1 344 1 63 1 
240 1 332 1 241 1 245 1 148 1 51 2 225 1 354 1 266 1 5 1 344 1 257 1 89 1 
181 1 330 1 
29 1 292 1 349 1 
143 1 81 1 349 2 310 1 181 1 20 1 84 1 265 1 166 1 18 1 330 1 53 1 
48 1 143 1 292 1 68 1 69 1 336 1 20 2 152 1 24 2 218 1 53 1 346 1 29 1 304 2 30 1 33 1 202 1 349 2 82 1 59 1 159 1 38 1 310 2 181 1 84 2 16 1 166 2 18 1 330 1 63 1 
126 1 164 1 66 1 195 1 
164 1 66 1 247 1 195 1 4 1 342 1 64 1 
57 1 2 1 64 1 
66 1 261 1 324 1 119 2 164 1 247 1 195 1 342 1 4 3 111 1 199 1 64 3 
174 1 164 1 66 1 247 1 348 1 195 1 4 2 342 1 64 2 
321 1 188 1 34 1 247 1 67 1 195 1 125 1 4 1 342 1 64 1 199 1 
164 1 247 1 195 1 4 1 342 1 64 1 199 1 
164 2 66 1 247 1 4 1 342 1 64 1 199 1 
79 1 104 1 164 1 247 2 195 1 342 2 4 2 315 1 199 1 64 2 
95 1 66 1 348 2 67 1 298 1 164 1 247 1 194 1 195 2 342 1 4 3 199 1 64 3 
139 1 321 2 188 1 66 1 348 1 117 1 234 1 164 1 247 1 195 1 125 1 342 1 4 2 199 1 64 2 
95 1 132 1 66 1 348 2 67 1 174 1 164 1 247 2 195 2 342 2 4 4 199 1 64 4 
164 1 66 1 247 1 195 1 4 1 342 1 64 1 199 1 
95 1 66 2 261 1 348 2 67 1 324 1 119 1 164 2 247 1 195 3 4 4 342 1 109 1 64 4 
258 1 187 1 223 1 164 1 66 1 247 1 348 1 195 1 4 2 342 1 64 2 199 1 
91 1 164 1 66 1 247 1 261 2 195 1 4 3 342 1 324 1 119 2 64 3 199 1 
135 2 312 1 355 1 195 2 
26 1 247 1 4 1 342 1 64 1 199 1 
298 1 164 1 66 1 247 1 348 1 195 1 4 2 342 1 64 2 199 1 
72 1 
164 1 66 1 247 1 195 1 4 1 342 1 64 1 199 1 
298 1 164 1 66 1 247 1 348 1 195 1 4 3 342 1 119 1 64 3 199 1 
95 1 67 1 195 1 109 1 
164 1 195 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.ClassCastException (128,285) 291 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.ClassCastException (128,285) 291 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.ClassCastException (128,285) 115 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 305 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.ClassCastException (128,285) 115 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 74 314 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3533 | stmt -> ;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4967 | stmt -> ;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | STATEMENT | 1159 | stmt -> ;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4636 | 0 -> -1
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z | STATEMENT | 1492 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 3127 | = null
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 2411 | < -> ==
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
181 1 23 1 24 1 229 1 26 9 301 6 9 1 306 2 189 2 208 5 361 2 312 1 59 1 364 1 81 2 170 1 240 1 292 4 103 2 370 1 215 9 84 1 198 2 322 1 67 1 109 1 376 2 296 3 
181 1 23 1 24 1 229 1 26 9 301 6 9 1 306 2 189 2 208 5 361 2 312 1 59 1 364 1 81 2 170 1 240 1 292 4 370 1 215 9 103 2 84 1 198 2 322 1 67 1 109 1 376 2 296 3 
181 1 23 1 24 1 229 1 26 10 301 7 9 1 306 2 189 2 208 6 361 2 312 1 59 1 364 1 81 2 170 1 240 1 292 5 370 1 215 10 103 2 84 1 198 2 322 1 67 1 109 1 376 2 296 4 
181 1 23 1 24 1 229 1 26 7 301 4 306 2 189 2 208 4 361 2 312 1 59 1 364 1 81 2 170 1 240 1 292 3 370 1 215 7 103 1 84 1 198 2 322 1 67 1 109 1 376 2 296 2 
24 1 229 1 81 1 26 4 301 3 292 2 9 1 215 4 103 2 84 1 306 1 67 1 109 1 189 1 208 3 296 1 376 1 361 1 
114 1 152 1 364 1 23 1 229 1 26 2 251 1 81 1 215 2 306 1 198 1 67 1 208 1 109 1 189 1 376 1 
181 1 229 1 26 3 301 1 292 1 215 3 306 2 198 1 67 1 109 1 208 2 376 2 296 1 
181 1 24 1 229 1 26 9 301 7 304 1 9 1 306 2 208 5 189 1 361 1 312 1 81 1 240 1 343 1 292 4 215 9 103 2 84 1 198 1 67 1 109 1 296 3 376 2 
181 1 24 1 229 1 26 9 301 7 304 1 9 1 306 2 208 5 189 1 361 1 312 1 81 1 240 1 343 1 292 4 215 9 103 2 84 1 198 1 67 1 109 1 296 3 376 2 
224 1 243 1 80 1 
341 1 
335 2 213 2 204 1 16 2 142 2 355 1 108 2 362 2 
297 1 88 1 131 1 228 1 246 2 248 2 353 1 136 1 355 1 356 1 185 1 204 1 279 1 307 1 359 2 142 2 360 2 362 2 335 2 192 1 260 1 168 1 99 1 145 1 338 1 290 1 16 3 82 2 147 1 171 1 264 1 213 3 18 1 125 1 126 1 106 1 108 2 
335 1 225 1 213 1 204 1 261 1 16 1 142 1 108 1 368 1 362 1 
224 1 333 1 298 1 80 1 117 1 16 1 121 1 319 1 368 1 213 1 358 1 161 1 362 1 180 1 
224 1 333 2 335 1 298 1 80 1 16 1 121 2 319 1 368 1 213 1 358 1 142 1 108 1 362 1 180 1 
333 1 22 1 173 1 121 1 262 1 
224 1 333 2 202 1 22 1 173 1 139 1 80 1 121 2 
333 1 173 1 121 1 
333 1 335 1 225 1 337 1 22 1 261 1 16 1 121 1 368 1 204 1 213 1 142 1 108 1 362 1 
224 1 
224 1 333 2 22 1 173 1 139 1 80 1 54 1 121 2 
224 1 333 5 154 2 191 1 22 2 317 1 80 1 184 1 118 1 367 2 121 5 196 1 329 2 139 1 173 2 66 1 127 1 372 1 346 1 
243 1 355 1 
335 1 16 2 355 2 203 1 213 2 142 1 347 1 108 1 362 2 
153 1 141 1 95 1 
192 1 248 1 145 1 16 1 290 1 82 1 355 1 185 1 264 1 213 1 18 1 279 1 125 1 126 1 360 1 323 1 
335 1 192 1 248 1 145 1 290 1 250 1 16 2 82 1 185 1 264 1 213 2 18 1 279 1 125 1 126 1 163 1 360 1 95 1 108 1 362 1 
335 3 213 3 250 1 16 3 142 1 355 1 108 3 362 3 
335 1 225 1 213 1 16 1 108 1 368 1 362 1 
335 1 213 1 16 1 142 1 347 1 108 1 368 1 362 1 203 1 
88 1 131 1 228 1 246 2 298 1 248 1 353 1 250 1 136 1 355 1 203 1 185 1 204 1 279 1 358 1 359 1 142 2 163 1 360 1 362 3 333 1 335 3 143 1 192 1 260 1 168 1 99 1 145 1 290 1 239 1 16 4 82 1 147 1 121 1 319 1 368 1 264 1 213 4 18 1 125 1 126 1 106 1 108 3 180 1 
351 1 335 1 213 2 117 1 16 2 250 1 355 1 108 1 362 2 
224 1 333 1 335 3 143 1 298 1 44 1 250 2 16 3 121 1 203 1 368 1 319 1 213 3 358 1 142 1 163 1 108 3 362 3 180 1 
335 2 250 1 16 2 203 1 213 2 141 1 142 1 108 2 95 1 362 2 
192 1 248 1 145 1 16 1 290 1 82 1 355 1 185 1 264 1 213 1 18 1 279 1 125 1 126 1 360 1 
209 1 192 1 248 1 145 1 16 1 290 1 82 1 355 1 264 1 213 1 18 1 279 1 125 1 130 1 360 1 
271 1 153 2 297 2 131 1 88 2 246 2 111 1 353 1 25 1 357 1 141 2 359 4 309 1 95 2 260 1 168 1 194 1 146 1 62 1 147 1 342 1 83 1 106 1 201 1 
335 1 213 1 259 1 16 1 108 1 368 1 319 1 362 1 
351 1 335 4 117 1 250 2 16 5 355 1 303 1 203 1 213 5 142 1 163 1 108 4 75 1 362 5 
335 2 225 1 213 2 259 1 16 2 108 2 368 1 362 2 
37 1 64 1 
37 1 64 1 
13 1 283 1 
13 1 283 1 
13 1 283 1 
2 1 37 1 64 1 
13 1 283 1 37 2 128 1 285 1 64 2 
37 1 375 1 64 1 
2 1 37 1 64 1 
2 1 37 1 64 1 
77 1 37 1 64 1 
77 1 37 1 64 1 
77 1 37 1 64 1 
224 1 333 2 12 1 166 1 97 1 14 2 211 1 64 2 121 2 8 2 278 2 197 3 330 2 37 2 128 1 28 1 162 1 107 1 39 2 
89 1 6 1 355 1 278 1 8 1 330 1 49 1 158 1 256 1 362 2 333 1 335 2 12 1 14 1 16 2 64 1 121 1 320 1 197 1 213 2 37 1 21 1 375 1 108 2 
81 1 189 1 361 1 
81 1 251 1 189 1 
61 1 81 3 251 1 71 1 361 2 46 1 
61 1 274 1 81 2 251 1 71 1 361 1 
61 2 81 2 251 1 361 1 71 1 
271 1 224 2 68 1 154 1 89 1 22 4 111 1 326 1 138 1 329 1 357 1 49 1 139 1 158 1 78 1 333 5 191 1 210 2 317 2 80 1 341 3 367 1 121 5 212 2 123 1 83 1 149 1 173 1 345 1 199 2 66 3 223 1 
271 3 224 5 68 2 154 2 22 7 111 3 326 3 327 1 328 1 138 2 329 2 357 3 158 4 139 1 159 5 53 1 78 3 333 9 191 1 210 6 317 6 80 1 341 9 367 2 121 9 262 5 212 6 83 3 173 6 127 1 66 8 200 1 220 1 349 1 223 1 
271 1 224 3 68 1 154 1 22 2 111 1 326 1 138 1 329 1 357 1 158 1 78 2 333 3 210 2 317 2 80 1 341 4 367 1 121 3 123 1 212 2 83 1 149 1 127 1 66 3 199 1 
271 2 224 4 68 1 154 1 22 3 111 2 326 2 327 1 328 1 138 1 329 1 357 2 158 2 53 1 78 3 333 4 210 4 317 4 80 1 341 7 367 1 121 4 212 4 123 1 83 2 149 1 127 1 66 5 199 2 
243 1 156 1 290 1 
74 1 290 1 
174 1 
279 1 290 1 
148 1 279 1 192 1 156 2 290 3 93 1 
279 1 192 1 290 1 
187 1 290 1 
88 3 297 4 111 1 249 1 25 3 32 1 45 1 342 2 83 1 94 1 73 1 373 1 38 1 30 1 359 7 268 1 348 2 
88 3 297 4 111 1 249 1 25 3 32 1 45 1 342 2 83 1 94 1 73 1 373 1 38 1 30 1 359 7 268 1 348 2 
88 3 297 4 111 1 249 1 25 3 32 1 45 1 342 2 83 1 94 1 73 1 373 1 105 1 38 1 30 1 359 7 268 1 348 2 
88 3 297 3 131 1 246 2 352 1 43 1 249 1 25 2 325 1 331 1 73 2 359 6 260 1 168 1 32 1 120 1 147 1 342 1 373 1 38 1 221 1 268 1 151 1 348 1 
131 2 297 5 88 4 246 4 111 1 352 1 249 1 25 4 45 1 94 1 51 1 73 1 30 1 359 9 260 2 168 2 32 1 147 2 342 3 83 1 373 1 374 1 268 1 348 2 
110 1 90 1 248 1 155 1 92 1 229 1 26 2 251 1 301 1 46 1 232 1 281 1 306 1 360 1 208 1 189 1 311 1 361 1 169 1 81 2 82 1 195 1 264 1 215 2 125 1 198 1 67 1 109 1 178 1 376 1 
110 1 90 1 248 1 133 1 155 1 92 1 229 1 26 3 251 1 301 2 46 1 232 1 281 1 306 1 360 1 287 1 208 1 189 1 311 1 361 1 81 2 82 1 195 1 369 1 264 1 215 3 125 1 198 1 109 1 376 1 
110 1 90 1 248 1 133 1 92 1 229 1 26 2 251 1 301 2 46 1 232 1 281 1 360 1 287 1 208 1 311 1 189 1 361 1 81 2 82 1 264 1 215 2 125 1 198 1 109 1 
132 1 248 1 90 2 92 2 26 1 279 1 306 1 360 1 311 2 56 1 258 1 290 1 366 1 82 1 264 1 369 1 18 1 215 1 125 1 371 1 198 2 86 1 376 1 
110 1 90 1 248 1 155 1 92 1 26 1 251 1 46 1 232 1 281 1 306 1 360 1 287 1 189 1 311 1 361 1 81 2 82 1 195 1 264 1 215 1 125 1 198 1 67 1 178 1 376 1 
332 1 
224 2 40 1 272 1 182 2 134 1 138 1 329 1 279 1 139 3 56 1 236 2 333 5 336 2 288 1 191 1 290 1 16 1 340 1 341 2 241 1 18 2 66 2 350 2 154 1 248 2 298 1 300 1 302 2 27 2 205 1 358 1 255 1 161 1 29 1 308 1 360 2 362 1 78 2 258 1 317 2 365 1 80 1 117 1 367 1 82 2 121 5 319 1 368 1 264 1 213 1 173 6 125 1 217 4 269 2 180 1 
333 3 40 1 272 1 298 1 365 1 117 1 16 1 300 1 302 1 121 3 368 1 319 1 213 1 139 1 173 2 358 1 161 1 217 2 29 1 54 1 180 1 362 1 
40 1 224 1 272 1 298 1 300 1 139 1 358 1 161 1 29 1 54 1 362 1 236 1 333 3 365 1 80 1 16 1 117 1 121 3 319 1 368 1 213 1 173 1 217 3 180 1 
40 1 224 1 272 1 182 1 298 1 300 1 302 1 139 1 358 1 161 1 29 1 54 1 362 1 236 1 333 3 365 1 80 1 16 1 117 1 121 3 319 1 368 1 213 1 173 2 217 3 180 1 
224 1 40 1 272 1 225 1 182 3 227 1 4 1 329 1 139 2 142 1 54 1 236 1 333 4 335 1 336 1 337 1 191 1 16 2 340 1 66 1 108 1 350 1 154 1 298 1 300 1 302 3 27 1 204 1 160 1 358 1 161 1 29 1 308 1 362 2 78 1 261 1 317 1 365 1 80 1 117 1 367 1 121 4 368 2 319 1 213 2 173 5 321 1 217 3 219 1 269 1 180 1 
40 1 224 1 272 1 182 2 134 1 329 1 139 2 236 2 333 4 336 2 191 1 340 1 16 1 341 2 66 1 350 2 154 1 298 1 300 1 27 2 302 2 358 1 161 1 29 1 308 1 362 1 78 2 317 1 365 1 80 1 117 1 367 1 121 4 368 1 319 1 213 1 173 4 217 4 269 2 180 1 
40 1 224 1 272 1 225 1 182 1 227 1 4 1 329 1 139 1 142 1 236 1 333 3 335 1 336 1 337 1 191 1 16 2 340 1 66 1 108 1 350 1 154 1 298 1 300 1 27 1 302 1 204 1 358 1 161 1 29 1 308 1 362 2 78 1 261 1 317 1 365 1 80 1 117 1 367 1 121 3 368 2 319 1 213 2 173 2 321 1 217 3 269 1 180 1 
40 1 224 1 272 1 225 1 182 1 227 1 4 1 329 1 139 1 142 1 236 1 333 3 335 1 336 1 337 1 191 1 16 2 340 1 66 1 108 1 350 1 154 1 298 1 300 1 27 1 302 1 204 1 358 1 161 1 29 1 308 1 362 2 78 1 261 1 317 1 365 1 80 1 117 1 367 1 121 3 368 2 319 1 213 2 173 2 321 1 217 3 269 1 180 1 
40 1 224 1 272 1 225 1 182 1 4 1 230 1 329 1 139 1 282 1 142 1 236 1 333 3 335 1 337 1 191 1 16 2 341 1 344 1 66 1 108 1 350 1 154 1 247 1 298 1 70 1 300 1 27 1 302 1 204 1 358 1 161 1 29 1 308 1 362 2 261 1 317 1 365 1 80 1 117 1 367 1 121 3 368 2 319 1 213 2 173 2 217 3 180 1 
40 1 224 1 272 1 225 1 182 2 227 1 4 1 329 1 139 1 142 1 236 2 333 3 335 1 336 1 337 1 191 1 16 2 340 1 66 1 108 1 350 1 154 1 298 1 300 1 302 2 27 1 204 1 358 1 161 1 29 1 308 1 362 2 78 1 261 1 317 1 365 1 80 1 117 1 367 1 121 3 368 2 319 1 213 2 173 3 321 1 217 4 219 1 269 1 180 1 
40 1 224 1 272 1 225 1 182 2 227 1 4 1 329 1 139 1 142 1 236 2 333 3 335 1 336 1 337 1 191 1 16 2 340 1 66 1 108 1 350 1 154 1 298 1 300 1 302 2 27 1 204 1 358 1 161 1 29 1 308 1 362 2 78 1 261 1 317 1 365 1 80 1 117 1 367 1 121 3 368 2 319 1 213 2 173 3 321 1 217 4 219 1 269 1 180 1 
40 1 272 1 154 1 134 1 298 1 230 1 300 1 27 1 329 1 358 1 282 1 161 1 29 1 308 1 362 1 333 2 191 1 317 1 365 1 117 1 16 1 341 1 367 1 121 2 319 1 368 1 213 1 66 1 217 2 350 1 180 1 
153 1 88 3 297 3 131 1 246 2 260 1 111 1 168 1 353 1 249 1 25 2 194 1 45 1 355 2 147 1 342 2 83 1 94 1 243 1 141 1 106 1 30 1 359 6 268 1 95 1 348 1 
271 1 42 1 153 8 88 5 131 2 297 6 228 1 246 4 111 2 353 1 25 2 325 2 326 2 135 1 355 1 357 2 140 1 141 3 359 11 95 8 313 1 167 1 260 2 168 2 102 1 147 2 368 1 342 1 83 1 373 1 106 2 221 2 270 1 
42 1 131 1 88 1 297 1 246 2 228 1 248 1 353 1 250 1 5 1 355 1 185 1 279 1 206 1 141 1 359 2 360 1 163 1 310 1 362 1 335 1 192 1 260 1 168 1 145 1 290 1 16 2 82 1 147 1 171 1 264 1 213 2 18 1 125 1 126 1 106 1 108 1 323 1 
271 2 42 1 87 2 88 10 131 3 228 1 326 2 136 2 45 1 185 2 94 1 279 2 141 7 284 2 287 1 95 7 235 2 335 1 192 2 145 2 16 3 290 2 65 1 147 3 342 4 18 1 106 3 108 1 348 1 153 7 297 10 246 6 248 3 111 3 249 1 353 3 25 8 250 1 355 2 357 2 30 1 359 20 360 3 163 1 164 2 362 1 260 3 168 3 82 3 35 1 171 1 264 2 213 3 83 3 125 2 216 1 126 2 373 4 268 1 
131 2 297 1 88 1 246 4 228 1 248 7 69 1 353 2 250 1 276 1 47 1 279 2 233 1 307 2 359 2 287 1 360 8 56 1 362 1 31 1 335 1 258 1 260 2 168 2 194 1 16 1 290 3 169 1 82 8 147 2 263 1 171 1 264 2 213 1 18 2 125 2 106 2 176 1 108 1 
271 1 153 1 42 1 131 1 297 1 88 2 246 2 111 1 353 1 25 1 326 1 203 1 357 1 141 1 142 1 359 3 95 1 362 1 335 1 260 1 168 1 16 1 147 1 342 1 213 1 265 1 83 1 106 1 108 1 
153 1 131 1 297 2 246 2 260 1 168 1 111 1 353 1 25 1 194 1 146 1 147 1 357 1 141 1 373 1 106 1 359 2 95 1 
271 1 153 1 131 1 88 2 246 2 260 1 168 1 353 1 25 1 194 1 62 1 147 1 342 1 83 1 141 1 106 1 359 2 95 1 
271 1 153 2 297 2 131 1 88 2 246 2 111 1 353 1 25 2 326 1 357 1 141 2 359 4 95 2 260 1 168 1 194 1 147 1 342 1 83 1 373 1 106 1 
153 1 131 1 297 2 246 2 260 1 168 1 111 1 353 1 25 1 146 1 147 1 263 1 357 1 141 1 373 1 106 1 359 2 95 1 
271 1 153 1 131 1 88 2 246 2 260 1 168 1 353 1 25 1 62 1 147 1 342 1 263 1 83 1 141 1 106 1 359 2 95 1 
271 1 153 2 297 2 131 1 88 2 246 2 111 1 353 1 25 2 326 1 357 1 141 2 359 4 95 2 260 1 168 1 147 1 263 1 342 1 83 1 373 1 106 1 
271 1 153 2 297 2 131 1 88 2 246 2 111 1 353 1 25 2 326 1 357 1 141 2 359 4 95 2 260 1 168 1 147 1 342 1 83 1 373 1 106 1 
297 1 131 1 88 1 246 2 228 1 248 1 353 1 136 1 355 1 185 1 279 1 359 2 360 1 192 1 260 1 168 1 145 1 290 1 16 1 82 1 147 1 171 1 264 1 213 1 18 1 125 1 126 1 106 1 
297 1 131 1 88 1 246 2 228 1 248 1 353 1 355 1 279 1 359 2 360 1 334 1 209 1 192 1 260 1 168 1 145 1 290 1 16 1 82 1 147 1 171 1 264 1 213 1 18 1 125 1 106 1 130 1 
271 1 42 1 153 2 297 2 131 1 88 2 246 2 111 1 353 1 25 2 326 1 357 1 141 2 359 4 95 2 260 1 168 1 147 1 342 1 83 1 373 1 106 1 
271 1 153 2 87 1 88 2 297 2 131 1 246 2 248 1 111 1 353 1 25 2 326 1 136 1 185 1 357 1 279 1 141 2 359 4 360 1 95 2 192 1 260 1 168 1 145 1 290 1 16 1 169 1 82 1 147 1 342 1 264 1 213 1 83 1 125 1 126 1 373 1 106 1 
271 1 42 1 153 1 88 1 131 1 297 2 246 2 111 1 353 1 25 1 326 1 203 1 357 1 141 1 142 1 359 3 95 1 362 1 335 1 260 1 168 1 16 1 147 1 213 1 83 1 373 1 106 1 218 1 108 1 
271 3 131 4 88 16 297 17 246 8 352 2 111 4 249 1 43 2 25 6 325 2 326 3 45 1 275 1 72 1 252 1 357 3 94 1 188 1 30 1 286 1 359 33 79 1 60 1 260 4 168 4 15 1 33 1 63 1 119 1 147 4 342 3 36 1 83 4 373 3 20 3 104 1 374 1 268 1 221 2 348 1 
271 2 88 12 131 3 297 14 246 6 352 2 111 3 43 2 25 4 325 2 326 3 275 1 252 2 357 3 188 1 359 26 79 1 363 1 60 1 260 3 168 3 15 2 33 1 63 1 119 1 147 3 342 2 36 1 83 2 373 2 20 4 104 1 374 1 221 2 
271 3 131 4 88 18 297 19 246 8 352 2 111 4 249 1 43 3 25 7 325 3 326 3 137 1 45 1 275 1 72 1 252 2 357 3 94 1 188 1 30 1 359 37 79 1 363 1 60 1 260 4 168 4 15 1 33 1 63 1 119 1 147 4 342 3 36 1 83 4 373 4 20 4 104 1 374 1 268 1 221 3 348 1 
271 3 131 4 88 17 297 18 246 8 352 2 111 4 249 1 43 2 25 5 325 2 326 3 45 1 275 1 72 1 252 1 357 3 94 1 188 1 30 1 359 35 79 1 363 1 60 1 260 4 168 4 15 1 33 1 63 1 119 1 147 4 342 2 36 1 83 4 373 3 20 4 104 1 374 1 268 1 221 2 348 1 
271 3 131 3 88 14 297 14 246 6 352 2 111 3 43 2 25 6 325 2 326 3 275 1 252 1 357 3 188 1 359 28 79 1 363 1 60 1 260 3 168 3 15 1 33 1 63 1 119 1 147 3 342 3 36 1 83 3 373 3 20 4 104 1 374 1 221 2 
278 1 8 1 166 1 330 1 97 1 14 1 37 1 128 1 354 1 64 1 
375 1 6 1 
278 1 8 1 330 1 14 1 37 1 234 1 267 1 64 1 179 1 
224 1 333 1 12 1 166 1 97 1 14 1 121 1 64 1 8 1 278 1 197 2 330 1 37 1 128 1 28 1 162 1 107 1 39 1 
224 1 333 1 12 1 166 1 97 1 14 1 121 1 64 1 8 1 278 1 197 2 330 1 37 1 128 1 28 1 162 1 107 1 39 1 
224 1 333 1 12 1 166 1 97 1 14 1 121 1 64 1 8 1 278 1 197 2 330 1 37 1 128 1 28 1 162 1 107 1 39 1 
2 1 285 1 291 1 
2 1 285 1 291 1 
77 1 115 1 
77 1 115 1 285 1 
256 1 21 1 
333 1 305 1 278 1 8 1 330 1 22 1 14 1 37 1 121 1 64 1 
2 1 291 1 
77 1 115 1 285 1 
42 1 131 1 297 1 88 1 246 2 228 1 248 2 353 1 47 1 279 1 307 2 359 2 360 2 362 2 165 1 96 1 260 1 168 1 290 1 16 2 82 2 34 1 147 1 171 1 264 1 213 2 125 1 19 1 106 1 176 1 295 1 
110 1 248 2 90 1 155 1 91 1 3 1 169 1 81 2 251 1 82 2 46 1 264 1 48 1 125 1 281 1 287 1 360 2 189 1 361 1 
110 1 248 1 90 1 155 1 3 1 299 1 81 2 251 1 82 1 46 1 264 1 281 1 125 1 287 1 360 1 189 1 361 1 
258 1 132 1 248 1 90 1 91 1 290 1 82 1 264 1 18 1 279 1 125 1 52 1 360 1 56 1 
110 1 248 1 90 1 155 1 91 1 3 1 81 2 251 1 82 1 46 1 264 1 48 1 281 1 125 1 287 1 360 1 189 1 361 1 
55 1 
224 1 243 1 317 1 66 1 80 1 184 1 346 1 
224 1 154 1 329 1 139 1 78 1 333 1 336 1 191 1 317 1 80 1 340 1 341 1 367 1 121 1 173 1 66 1 269 1 
314 1 154 1 191 1 192 1 248 1 290 1 93 1 367 1 82 1 277 1 264 2 329 1 18 1 279 1 125 1 74 1 360 1 
271 2 154 1 111 2 43 1 325 1 326 2 275 1 329 1 357 2 188 1 191 1 79 1 210 5 317 4 341 3 367 1 33 1 119 1 212 5 83 2 66 6 221 1 
225 1 41 2 154 1 227 1 111 2 249 1 329 1 204 1 254 1 30 1 142 1 362 1 333 1 335 1 191 1 337 1 317 2 261 1 16 1 367 1 121 1 368 1 214 1 213 1 83 1 66 2 268 1 108 1 
224 1 154 1 191 1 317 1 80 1 184 1 367 1 329 1 66 1 346 1 
78 2 224 2 271 1 210 2 111 1 317 2 326 1 341 4 212 2 357 1 83 1 66 2 
224 1 333 1 173 1 139 1 80 1 121 1 
154 2 273 1 248 4 138 2 329 2 279 1 205 1 139 2 10 1 360 4 56 1 333 3 258 1 288 2 191 1 315 1 317 2 290 1 367 2 82 4 121 3 264 1 241 1 18 2 125 1 173 4 85 2 127 1 66 2 
88 1 131 1 228 1 246 2 248 1 353 1 136 1 355 1 185 1 204 1 279 1 359 1 142 2 360 1 362 2 335 2 192 1 260 1 99 1 168 1 145 1 16 3 290 1 82 1 147 1 264 1 213 3 18 1 125 1 126 1 106 1 108 2 
224 1 154 1 288 1 191 1 317 1 80 1 341 1 367 1 138 1 329 1 212 1 66 1 
122 1 330 1 14 1 
112 1 166 1 330 1 14 1 21 1 
122 1 330 1 14 1 
122 1 330 1 14 1 
330 1 14 1 150 1 
330 1 14 1 150 1 
330 1 14 1 150 1 
330 1 14 1 
37 1 64 1 
88 4 297 4 131 2 246 4 260 2 111 1 168 2 352 1 249 1 25 3 45 1 147 2 342 2 83 1 94 1 373 1 30 1 359 8 268 1 348 1 
88 3 297 3 111 1 249 1 25 2 45 1 342 2 83 1 94 1 243 1 30 1 359 6 268 1 348 1 
271 1 88 2 131 1 297 2 246 2 260 1 168 1 111 1 25 2 326 1 147 1 342 1 83 1 357 1 242 1 373 1 359 4 
297 1 88 1 43 1 325 1 359 2 221 1 
271 2 297 13 88 12 131 1 246 2 111 5 352 1 249 2 25 8 326 2 325 2 45 1 357 2 254 1 94 1 140 1 30 2 359 25 313 1 260 1 168 1 102 1 147 1 342 4 83 5 373 4 268 2 221 2 348 1 
88 1 359 1 221 1 
297 1 325 1 359 1 
271 1 131 1 88 3 297 3 246 2 260 1 168 1 111 1 25 3 326 1 147 1 342 2 357 1 83 1 242 1 373 1 284 1 359 6 
271 2 88 6 131 1 297 6 246 2 111 2 43 1 25 2 325 1 326 2 275 1 357 2 188 1 359 12 79 1 260 1 168 1 33 1 119 1 147 1 342 1 83 2 373 1 374 1 221 1 
297 3 88 3 111 1 249 1 25 2 342 1 83 1 373 1 30 1 359 6 268 1 
297 1 88 2 131 1 246 2 260 1 352 1 168 1 249 1 25 2 45 1 147 1 342 1 94 1 331 1 373 1 359 3 268 1 
131 1 297 5 88 5 246 2 260 1 168 1 111 2 249 2 25 5 147 1 342 3 83 2 254 1 373 2 30 1 374 1 359 10 268 2 
131 1 297 2 246 2 260 1 168 1 111 1 25 1 147 1 357 1 373 1 374 1 359 2 
271 1 88 2 131 1 297 2 246 2 260 1 168 1 111 1 25 2 326 1 147 1 342 1 83 1 357 1 373 1 374 1 359 4 
88 2 131 3 297 1 246 6 260 3 352 1 168 3 249 1 25 2 147 3 72 1 342 1 331 1 373 1 359 3 374 1 268 1 
88 8 131 4 297 7 246 8 111 2 352 1 43 1 249 2 25 6 325 1 45 1 72 1 254 1 94 1 331 1 30 1 359 15 260 4 168 4 147 4 342 3 83 2 242 1 373 3 374 1 221 1 268 2 151 1 
271 1 88 10 131 2 297 14 246 4 352 1 111 5 249 2 43 1 25 9 325 1 326 2 45 1 275 1 357 2 254 1 94 1 188 1 30 2 359 24 79 1 260 2 168 2 33 1 119 1 147 2 342 5 83 4 373 4 374 1 268 2 221 1 348 1 
271 1 88 7 131 3 297 10 246 6 352 1 111 3 249 1 43 1 25 4 325 1 326 2 45 1 275 1 357 2 94 1 188 1 30 1 359 17 79 1 260 3 168 3 33 1 119 1 147 3 342 3 83 2 242 1 373 1 374 1 268 1 221 1 348 1 
271 2 88 10 131 3 297 9 246 6 111 3 352 1 249 1 43 1 25 4 325 1 326 2 45 1 275 1 357 2 94 1 188 1 30 1 359 19 79 1 260 3 168 3 33 1 119 1 147 3 342 3 83 3 242 1 373 1 374 1 268 1 221 1 348 1 
271 1 88 7 131 3 297 10 246 6 352 1 111 3 249 1 43 1 25 5 325 1 326 2 45 1 275 1 357 2 94 1 188 1 30 1 359 17 79 1 260 3 168 3 33 1 119 1 147 3 342 3 83 2 242 1 373 2 374 1 268 1 221 1 348 1 
271 1 88 10 131 2 297 14 246 4 352 1 111 5 249 2 43 1 25 9 325 1 326 2 45 1 275 1 357 2 254 1 94 1 188 1 30 2 359 24 79 1 260 2 168 2 33 1 119 1 147 2 342 5 83 4 373 4 374 1 268 2 221 1 348 1 
271 2 88 6 131 1 297 6 246 2 111 2 43 1 25 2 325 1 326 2 275 1 357 2 188 1 359 12 79 1 260 1 168 1 33 1 119 1 147 1 342 1 83 2 373 1 374 1 221 1 
271 1 88 8 131 4 297 10 246 8 111 3 352 2 249 1 43 1 25 5 325 1 326 2 45 1 275 1 357 2 94 1 188 1 30 1 359 18 79 1 260 4 168 4 33 1 119 1 147 4 342 3 83 2 242 1 373 2 374 1 268 1 221 1 348 1 
271 2 88 7 131 4 297 9 246 8 111 3 352 2 43 1 25 6 325 1 326 3 275 1 72 1 357 3 188 1 359 16 79 1 260 4 168 4 33 1 119 1 147 4 342 3 83 2 373 3 374 1 221 1 
88 4 297 3 111 1 249 3 25 6 45 1 342 3 83 1 94 2 373 3 30 1 359 7 268 3 
271 1 88 8 131 4 297 10 246 8 111 3 352 2 249 1 43 1 25 4 325 1 326 2 45 1 275 1 72 1 357 2 94 1 188 1 30 1 359 18 79 1 260 4 168 4 33 1 119 1 147 4 342 3 83 2 373 1 374 1 268 1 221 1 348 1 
351 1 213 1 16 1 117 1 355 1 362 1 57 1 
0 1 76 1 351 1 213 1 124 1 1 1 237 1 16 1 117 1 355 1 362 1 57 1 
264 1 258 1 18 1 279 1 125 1 243 1 248 1 290 1 360 1 82 1 56 1 
335 1 192 1 248 1 145 1 290 1 250 1 16 2 82 1 355 1 264 1 213 2 18 1 279 1 125 1 126 1 360 1 108 1 362 1 
335 1 192 2 248 1 145 1 290 3 250 1 16 2 82 1 355 1 368 1 319 1 264 1 213 2 187 1 279 2 125 1 126 1 85 1 207 1 360 1 108 2 180 1 362 2 
335 1 209 1 192 2 248 2 145 1 290 3 250 1 16 2 82 2 355 1 368 1 319 1 231 1 264 1 213 2 187 1 279 2 125 1 85 1 207 1 360 2 108 2 180 1 362 2 
224 1 248 3 298 1 156 1 231 1 186 1 279 1 187 1 74 1 207 1 360 3 333 2 192 1 80 1 290 4 82 3 121 2 264 1 18 1 125 1 173 1 85 1 245 1 
224 1 333 2 192 1 298 1 248 3 80 1 156 1 290 4 100 1 82 3 121 2 231 1 264 1 18 1 187 1 279 1 173 1 125 1 85 1 74 1 207 1 360 3 
264 1 125 1 248 1 69 1 360 1 82 1 
31 1 192 1 248 6 69 1 93 1 290 3 169 1 101 1 318 1 276 1 82 7 47 1 264 3 172 1 18 2 279 2 125 2 233 1 307 1 287 1 360 7 
153 1 42 1 87 1 88 3 297 3 131 2 246 4 248 1 111 1 249 1 353 2 25 2 250 1 136 1 45 1 355 2 185 1 94 1 279 1 141 1 30 1 359 6 360 1 95 1 164 1 362 1 335 1 192 1 260 2 168 2 145 1 290 1 16 2 169 1 82 1 147 2 342 2 264 1 213 2 83 1 125 1 126 1 106 2 295 1 268 1 108 1 348 1 
224 1 154 2 22 1 248 1 298 1 156 1 184 1 329 2 139 1 10 1 113 1 74 1 360 1 333 3 190 1 191 2 317 1 80 1 290 2 367 2 100 1 82 1 121 3 18 1 173 2 66 1 175 1 346 1 
192 1 248 1 69 1 156 1 93 1 290 1 82 1 277 1 264 2 279 1 125 1 174 1 360 1 
324 1 258 1 248 4 290 1 169 1 82 4 231 1 264 1 18 1 279 1 125 1 360 4 56 1 
192 1 248 2 183 1 290 1 318 1 82 2 264 2 172 1 279 1 125 1 216 1 85 1 294 1 360 2 
264 1 110 1 18 1 125 1 248 1 81 1 251 1 360 1 82 1 189 1 
96 1 248 2 290 1 169 1 82 2 47 1 264 1 279 1 125 1 360 2 287 1 
324 1 258 1 31 1 248 4 290 3 169 1 82 5 276 1 47 1 264 2 18 1 279 2 125 2 85 1 360 5 56 1 
11 1 324 1 258 1 31 1 248 4 290 3 169 1 82 5 47 1 264 2 18 1 279 2 125 2 85 1 360 5 56 1 
335 1 209 1 192 1 248 1 145 1 290 1 250 1 16 2 82 1 355 1 264 1 213 2 18 1 279 1 125 1 360 1 108 1 362 1 
192 1 248 1 93 1 290 1 101 1 318 1 82 1 264 2 172 1 279 1 125 1 85 1 360 1 
280 1 116 1 129 1 157 1 355 1 
224 1 333 2 289 1 143 1 22 1 298 1 116 2 80 1 157 2 355 1 121 2 7 1 368 1 319 1 293 1 280 2 358 1 129 1 180 1 
165 1 16 1 157 1 34 1 213 1 280 1 19 1 129 1 362 1 
293 1 129 1 7 1 
243 1 229 1 208 1 109 1 
215 1 306 1 229 1 26 1 208 1 109 1 376 1 
215 1 198 1 311 1 
58 1 364 2 229 1 26 3 17 1 215 3 306 1 67 1 208 1 222 1 109 1 376 1 
103 1 215 2 306 1 229 1 26 2 301 1 208 1 109 1 376 1 
26 1 81 1 292 1 215 1 84 1 306 1 67 1 208 1 189 1 376 1 361 1 
215 1 306 1 229 1 26 1 67 1 208 1 376 1 
215 1 306 1 229 2 26 1 67 1 109 1 376 1 
253 1 215 2 244 1 98 1 306 2 229 1 26 2 67 1 208 1 376 2 
312 1 229 1 26 3 301 2 240 1 292 1 215 3 306 1 67 1 109 1 208 2 376 1 296 1 
144 1 229 1 251 1 81 2 26 2 301 1 46 1 215 2 306 1 67 1 208 1 109 1 189 1 376 1 361 1 
229 1 26 4 301 2 292 1 215 4 9 1 103 1 306 2 67 1 109 1 208 2 376 2 296 1 
215 1 306 1 229 1 26 1 67 1 208 1 109 1 376 1 
58 1 364 1 316 1 229 2 26 4 301 2 292 1 215 4 306 1 222 1 109 2 208 3 376 1 296 1 
229 1 339 1 26 2 301 1 343 1 215 2 306 1 177 1 67 1 208 1 109 1 376 1 
58 2 364 2 229 1 26 3 215 3 306 1 266 1 67 1 222 1 208 1 109 1 376 1 
226 2 238 1 193 1 208 2 
50 1 215 1 306 1 26 1 67 1 376 1 
312 1 215 2 306 1 229 1 26 2 301 1 67 1 208 1 109 1 376 1 
257 1 
215 1 306 1 229 1 26 1 67 1 208 1 109 1 376 1 
312 1 364 1 229 1 26 3 301 1 215 3 306 1 67 1 109 1 208 1 376 1 
292 1 316 1 208 1 296 1 
229 1 208 1 

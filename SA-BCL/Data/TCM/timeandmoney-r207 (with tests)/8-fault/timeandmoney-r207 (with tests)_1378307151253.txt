#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 290 3 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 290 3 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 290 3 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 290 3 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 290 3 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.StringIndexOutOfBoundsException 119 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.StringIndexOutOfBoundsException 119 265 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 163 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 3976 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 1
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1284 | != -> <
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 12316 | stmt -> ;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6348 | stmt -> ;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 693 | = null
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 863 | < -> <=
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
60 1 135 1 164 5 141 2 92 1 335 1 115 1 252 2 66 1 226 1 97 2 294 4 40 2 148 6 296 1 356 9 195 1 45 3 197 1 213 1 101 9 125 2 156 1 346 1 361 1 84 2 85 1 109 2 
60 1 135 1 164 5 141 2 92 1 335 1 115 1 252 2 66 1 226 1 97 2 294 4 40 2 148 6 296 1 356 9 195 1 45 3 197 1 213 1 125 2 101 9 156 1 346 1 361 1 84 2 85 1 109 2 
60 1 135 1 164 6 141 2 92 1 335 1 115 1 252 2 66 1 226 1 97 2 294 5 40 2 148 7 296 1 356 10 195 1 45 4 197 1 213 1 125 2 101 10 156 1 346 1 361 1 84 2 85 1 109 2 
135 1 164 4 141 2 92 1 335 1 115 1 252 2 66 1 226 1 97 1 294 3 40 2 148 4 296 1 356 7 195 1 45 2 197 1 213 1 125 2 101 7 156 1 346 1 361 1 84 2 85 1 109 2 
296 1 60 1 164 3 356 4 45 1 101 4 213 1 125 1 156 1 141 1 92 1 252 1 226 1 97 2 294 2 40 1 148 3 109 1 
296 1 164 1 70 1 356 2 197 1 101 2 156 1 141 1 92 1 103 1 252 1 361 1 106 1 40 1 109 1 84 1 
296 1 164 2 356 3 45 1 101 3 156 1 92 1 335 1 294 1 40 2 148 1 109 2 84 1 
296 1 60 1 135 1 164 5 195 1 356 9 45 3 125 1 213 1 101 9 156 1 141 1 92 1 335 1 252 1 105 1 226 1 97 2 294 4 40 2 229 1 148 7 109 2 84 1 
296 1 60 1 135 1 164 5 195 1 356 9 45 3 125 1 213 1 101 9 156 1 141 1 92 1 335 1 252 1 105 1 226 1 97 2 294 4 40 2 229 1 148 7 109 2 84 1 
163 1 138 1 220 1 
223 2 77 1 138 1 
0 2 161 2 344 2 267 1 191 2 258 2 10 2 249 1 
30 1 0 2 161 2 62 1 249 1 116 1 35 1 37 1 188 1 98 1 191 3 42 1 10 3 149 1 275 1 151 2 344 2 152 1 196 1 322 2 258 2 73 1 157 1 324 1 215 1 242 1 286 1 287 2 52 1 360 1 79 1 267 1 159 2 133 1 59 1 330 2 331 1 
0 1 161 1 344 1 191 1 258 1 256 1 310 1 10 1 249 1 250 1 
161 1 2 1 138 1 63 1 140 1 8 1 315 1 130 1 191 1 10 1 99 1 310 1 364 1 220 1 
0 1 161 1 344 1 138 1 258 1 63 1 8 1 315 1 130 2 191 1 364 2 10 1 99 1 310 1 220 1 
130 1 76 1 16 1 359 1 364 1 
130 2 76 1 16 1 138 1 58 1 351 1 364 2 220 1 
130 1 76 1 364 1 
0 1 161 1 16 1 344 1 258 1 249 1 250 1 130 1 228 1 191 1 256 1 310 1 364 1 10 1 
138 1 
130 2 76 1 16 1 138 1 58 1 65 1 364 2 220 1 
16 2 123 1 138 1 300 1 302 1 323 1 325 1 304 1 130 5 76 2 23 2 58 1 190 2 27 1 41 1 364 5 82 1 231 2 220 1 
332 1 275 1 161 1 151 1 344 1 62 1 152 1 322 1 258 1 73 1 242 1 7 1 215 1 286 1 95 1 98 1 191 2 10 2 330 1 331 1 
163 1 267 1 
0 1 161 2 344 1 258 1 48 1 129 1 191 2 267 2 10 2 
95 1 113 1 12 1 
275 1 151 1 62 1 176 1 152 1 322 1 73 1 215 1 242 1 286 1 267 1 191 1 98 1 10 1 330 1 331 1 
0 1 332 1 161 5 2 1 344 4 258 4 48 1 7 2 352 1 191 5 267 1 81 1 10 5 230 1 
161 2 122 1 344 2 191 2 258 2 256 1 310 1 10 2 
0 1 161 3 344 3 267 1 191 3 258 3 10 3 7 1 
161 1 344 1 191 1 258 1 256 1 310 1 10 1 
0 1 161 1 344 1 191 1 258 1 48 1 310 1 10 1 129 1 
0 2 332 1 161 3 62 1 247 1 63 1 249 1 7 1 8 1 116 1 315 1 37 1 188 1 98 1 191 4 42 1 10 4 99 1 275 1 171 1 151 1 344 3 152 1 196 1 322 1 258 3 73 1 48 1 324 1 242 1 215 1 286 1 130 1 287 2 52 1 360 1 79 1 267 1 159 1 59 1 310 1 364 1 330 1 331 1 
352 1 161 2 2 1 344 1 267 1 191 2 258 1 10 2 7 1 
0 1 332 1 44 1 161 3 344 3 138 1 258 3 247 1 63 1 48 1 7 2 8 1 130 1 315 1 191 3 364 1 310 1 10 3 99 1 
0 1 161 2 344 2 258 2 48 1 7 1 113 1 95 1 191 2 10 2 
275 1 151 1 62 1 152 1 322 1 73 1 215 1 242 1 286 1 267 1 191 1 98 1 10 1 330 1 331 1 
275 1 151 1 62 1 152 1 322 1 73 1 242 1 327 1 267 1 191 1 98 1 10 1 107 1 330 1 331 1 
245 1 186 1 113 2 116 1 208 1 95 2 169 1 291 1 188 1 145 1 118 1 255 1 211 1 42 1 12 2 196 1 157 2 324 1 358 1 287 2 21 1 79 1 360 2 159 4 
161 1 344 1 122 1 63 1 191 1 258 1 310 1 10 1 
36 1 11 1 
36 1 11 1 
263 1 337 1 
263 1 337 1 
263 1 337 1 
200 1 36 1 11 1 
293 1 36 1 11 1 
263 1 298 1 337 1 36 2 282 1 11 2 
200 1 36 1 11 1 
200 1 36 1 11 1 
36 1 158 1 11 1 
36 1 158 1 11 1 
36 1 158 1 11 1 
161 2 61 1 312 1 313 1 167 1 36 1 293 1 191 2 10 2 11 1 297 1 344 2 258 2 47 1 198 1 238 1 130 1 306 1 217 1 267 1 328 1 181 1 268 1 364 1 
277 1 61 2 138 1 198 2 47 2 345 1 282 1 117 1 130 2 306 2 253 1 36 2 181 1 328 3 219 2 295 1 364 2 341 1 11 2 
252 1 125 1 141 1 
252 1 106 1 141 1 
132 1 203 1 106 1 125 2 362 1 141 3 
89 1 203 1 106 1 125 1 362 1 141 2 
203 2 106 1 125 1 362 1 141 2 
1 1 138 2 186 1 313 1 223 3 208 1 254 1 190 1 211 1 231 1 297 1 15 1 274 2 16 4 355 2 71 2 302 1 261 1 358 1 130 5 77 1 76 1 23 1 24 1 217 1 58 1 309 1 27 3 363 1 364 5 82 2 220 1 
348 1 162 1 138 5 207 1 186 3 223 9 208 3 254 1 190 2 41 1 211 3 231 2 274 6 16 7 355 6 301 5 302 1 155 1 20 1 358 3 130 9 77 3 76 6 23 2 217 4 24 2 359 5 58 1 309 2 27 8 363 3 364 9 82 6 108 1 220 1 
1 1 138 3 186 1 223 4 208 1 190 1 41 1 211 1 231 1 274 2 16 2 355 2 71 1 261 1 358 1 130 3 77 2 23 1 24 1 217 1 309 1 27 3 364 3 363 1 82 2 220 1 
162 1 1 1 138 4 186 2 223 7 208 2 190 1 41 1 211 2 231 1 274 4 16 3 355 4 71 2 155 1 261 1 20 1 358 2 130 4 77 3 23 1 24 1 217 2 309 1 27 5 364 4 363 2 82 4 220 1 
163 1 183 1 331 1 
26 1 331 1 
222 1 
62 1 98 1 331 1 
69 1 331 1 
98 1 331 1 
62 1 183 2 227 1 178 1 98 1 331 3 
43 1 349 1 111 1 221 1 186 1 34 1 157 4 251 1 314 1 224 1 21 3 169 2 319 2 360 3 189 1 159 7 211 1 
43 1 349 1 111 1 221 1 186 1 34 1 157 4 251 1 314 1 224 1 21 3 169 2 319 2 360 3 189 1 159 7 211 1 
43 1 349 1 111 1 221 1 186 1 34 1 157 4 251 1 314 1 224 1 225 1 21 3 169 2 319 2 360 3 189 1 159 7 211 1 
349 2 111 5 221 2 139 1 186 4 34 1 314 1 251 1 116 1 224 1 336 1 208 3 319 3 169 5 188 1 189 2 192 1 146 3 42 1 211 4 43 2 121 1 196 1 281 1 157 16 179 1 358 3 287 2 21 10 360 15 57 1 159 31 329 4 363 3 
349 1 111 1 221 1 185 1 186 1 34 1 116 2 314 1 224 1 319 2 169 3 188 2 189 1 192 1 211 1 42 2 43 1 196 2 239 1 157 5 287 4 21 4 360 4 159 9 
164 1 165 1 311 1 141 2 92 1 252 1 210 1 338 1 40 1 148 1 296 1 14 1 151 1 343 1 152 1 356 2 322 1 125 1 101 2 199 1 156 1 242 1 104 1 132 1 22 1 106 1 29 1 330 1 109 1 84 1 
164 1 165 1 311 1 141 2 252 1 210 1 338 1 40 1 148 2 296 1 151 1 343 1 194 1 152 1 356 3 322 1 125 1 101 3 199 1 156 1 154 1 242 1 132 1 104 1 106 1 347 1 29 1 330 1 109 1 84 1 
164 1 311 1 141 2 252 1 210 1 338 1 148 2 296 1 151 1 343 1 194 1 152 1 356 2 322 1 101 2 125 1 156 1 154 1 242 1 104 1 132 1 106 1 29 1 330 1 84 1 
62 1 4 1 112 1 270 1 96 1 98 1 210 2 40 1 151 1 234 1 343 2 152 2 279 1 356 1 177 1 322 1 73 1 101 1 126 1 214 1 260 1 242 1 180 1 347 1 29 2 330 1 331 1 109 1 84 2 
165 1 311 1 141 2 92 1 252 1 210 1 338 1 40 1 14 1 151 1 343 1 194 1 152 1 356 1 322 1 125 1 101 1 199 1 242 1 104 1 132 1 106 1 29 1 330 1 109 1 84 1 
354 1 
62 1 112 1 270 1 91 1 190 1 98 1 231 1 151 2 234 1 152 2 322 2 302 1 73 2 75 1 260 1 49 1 242 1 130 2 76 2 180 1 23 1 24 1 58 1 27 1 364 2 330 2 82 1 331 1 
161 1 2 1 5 1 63 1 140 1 65 1 8 1 315 1 191 1 10 1 99 1 342 1 320 1 235 1 236 2 19 1 130 3 76 2 58 1 204 1 364 3 310 1 
320 1 161 1 2 1 138 1 235 1 5 1 236 3 46 1 63 1 140 1 65 1 8 1 315 1 130 3 76 1 58 1 204 1 191 1 310 1 99 1 364 3 10 1 220 1 342 1 
161 1 2 1 138 1 5 1 63 1 140 1 65 1 8 1 315 1 191 1 10 1 99 1 342 1 320 1 235 1 236 3 237 1 19 1 46 1 130 3 76 2 58 1 204 1 364 3 310 1 220 1 
161 1 2 1 5 1 63 1 65 1 8 1 170 1 10 1 342 1 19 4 302 1 74 2 130 5 76 7 77 2 23 1 80 1 27 1 310 1 82 1 220 5 138 5 90 1 140 1 93 1 315 1 317 2 190 1 191 1 99 1 231 1 232 2 320 1 233 1 235 1 321 1 236 6 237 4 46 4 326 1 50 2 58 3 204 1 364 5 
161 1 2 1 5 1 63 1 8 1 10 1 342 1 19 2 302 1 74 2 130 4 77 2 76 4 23 1 80 1 27 1 310 1 82 1 220 1 138 2 140 1 223 2 315 1 317 2 190 1 39 1 191 1 99 1 231 1 232 2 320 1 235 1 236 4 237 2 46 2 326 1 50 2 204 1 58 2 364 4 
161 1 2 1 138 1 5 1 90 1 63 1 140 1 8 1 315 1 317 2 170 1 190 1 191 1 10 1 99 1 231 1 342 1 232 2 320 1 233 1 235 1 236 4 19 2 237 2 46 2 302 1 74 2 50 2 326 1 130 4 76 4 77 2 23 1 58 2 204 1 80 1 27 1 364 4 310 1 82 1 220 1 
161 1 2 1 138 1 5 1 90 1 63 1 140 1 8 1 315 1 317 2 170 1 190 1 191 1 10 1 99 1 231 1 342 1 232 2 320 1 233 1 235 1 236 4 19 2 237 2 46 2 302 1 74 2 50 2 326 1 130 4 76 4 77 2 23 1 58 2 204 1 80 1 27 1 364 4 310 1 82 1 220 1 
86 1 161 1 2 1 138 1 5 1 63 1 140 1 8 1 223 2 315 1 144 1 190 1 191 1 10 1 99 1 231 1 342 1 150 1 232 2 120 2 320 1 233 1 235 1 236 4 19 2 237 2 46 2 302 1 50 2 326 1 130 4 76 4 23 1 78 2 58 2 204 1 27 1 364 4 310 1 82 1 220 1 
161 1 2 1 138 1 5 1 90 1 63 1 140 1 8 1 93 1 315 1 317 2 170 1 190 1 191 1 10 1 99 1 231 1 342 1 232 2 320 1 233 1 235 1 236 5 237 3 19 3 302 1 46 3 74 2 50 2 326 1 130 4 77 2 76 5 23 1 58 2 204 1 80 1 27 1 364 4 310 1 82 1 220 1 
161 1 2 1 138 1 5 1 90 1 63 1 140 1 8 1 93 1 315 1 317 2 170 1 190 1 191 1 10 1 99 1 231 1 342 1 232 2 320 1 233 1 235 1 236 5 237 3 19 3 302 1 46 3 74 2 50 2 326 1 130 4 77 2 76 5 23 1 58 2 204 1 80 1 27 1 364 4 310 1 82 1 220 1 
161 1 2 1 138 1 5 1 63 1 140 1 8 1 223 2 315 1 144 1 39 1 190 1 191 1 10 1 99 1 231 1 342 1 232 2 120 2 320 1 235 1 236 4 19 2 237 2 46 2 302 1 50 2 326 1 130 4 76 4 23 1 78 2 58 2 204 1 27 1 364 4 310 1 82 1 220 1 
163 1 221 1 186 1 34 1 113 1 314 1 116 1 224 1 95 1 169 2 319 1 188 1 255 1 42 1 211 1 12 1 43 1 196 1 324 1 157 3 287 2 21 2 79 1 360 3 159 6 267 2 
110 1 111 1 186 2 113 4 116 2 35 1 208 2 95 11 169 1 37 1 188 2 146 3 42 2 211 1 12 11 121 1 196 2 324 1 157 8 262 1 179 1 358 1 21 2 287 4 360 6 79 2 25 1 266 1 267 1 159 14 329 3 363 2 83 1 
332 1 161 1 31 1 62 1 110 1 113 1 7 1 116 1 35 1 271 1 188 1 37 1 98 1 191 2 42 1 10 2 212 1 275 1 151 1 344 1 152 1 176 1 196 1 322 1 73 1 258 1 242 1 215 1 324 1 157 1 286 1 287 2 79 1 360 1 267 1 159 2 330 1 331 1 
332 1 161 1 110 1 62 2 111 4 7 1 113 7 116 3 208 2 169 4 292 2 211 3 10 3 12 7 17 2 344 1 72 2 303 1 73 1 258 1 215 2 216 1 21 8 79 3 267 2 269 1 221 1 186 3 34 1 314 1 224 1 35 1 316 2 95 7 319 1 37 1 188 3 191 3 98 2 42 3 43 1 275 2 151 3 194 1 152 2 196 3 322 3 324 3 242 2 157 10 358 2 286 2 287 6 52 2 360 10 159 20 363 2 330 3 331 2 
62 1 112 1 270 1 116 1 35 1 188 1 37 1 98 1 42 1 149 1 151 2 234 1 152 2 196 1 322 2 73 1 260 1 283 1 242 1 324 1 157 1 180 1 287 2 243 1 79 1 360 1 159 2 330 2 331 1 
0 1 161 1 110 1 186 1 248 1 113 1 116 1 208 1 95 1 169 1 188 1 191 1 42 1 10 1 211 1 12 1 344 1 196 1 258 1 48 1 324 1 157 1 358 1 21 1 287 2 79 1 360 2 159 3 363 1 
111 1 196 1 186 1 113 1 324 1 157 2 116 1 21 1 287 2 208 1 95 1 79 1 188 1 145 1 159 2 255 1 42 1 12 1 
245 1 196 1 113 1 324 1 116 1 358 1 21 1 287 2 95 1 169 1 79 1 360 2 188 1 159 2 255 1 42 1 211 1 12 1 
111 1 186 1 113 2 116 1 208 1 95 2 169 1 188 1 255 1 42 1 211 1 12 2 196 1 157 2 324 1 358 1 287 2 21 2 79 1 360 2 159 4 363 1 
111 1 196 1 186 1 113 1 324 1 157 2 116 1 21 1 287 2 208 1 95 1 243 1 79 1 188 1 145 1 159 2 42 1 12 1 
245 1 196 1 113 1 324 1 116 1 358 1 21 1 287 2 95 1 243 1 169 1 79 1 360 2 188 1 159 2 42 1 211 1 12 1 
111 1 186 1 113 2 116 1 208 1 95 2 169 1 188 1 42 1 211 1 12 2 196 1 157 2 324 1 358 1 287 2 21 2 243 1 79 1 360 2 159 4 363 1 
111 1 186 1 113 2 116 1 208 1 95 2 169 1 188 1 42 1 211 1 12 2 196 1 157 2 324 1 358 1 287 2 21 2 79 1 360 2 159 4 363 1 
62 1 116 1 35 1 188 1 37 1 98 1 191 1 10 1 42 1 275 1 151 1 152 1 196 1 322 1 73 1 157 1 242 1 215 1 324 1 286 1 52 1 287 2 79 1 360 1 267 1 159 2 330 1 331 1 
62 1 116 1 35 1 188 1 37 1 98 1 191 1 10 1 42 1 275 1 151 1 173 1 152 1 196 1 322 1 73 1 157 1 242 1 324 1 327 1 287 2 79 1 360 1 267 1 159 2 107 1 330 1 331 1 
110 1 111 1 186 1 113 2 116 1 208 1 95 2 169 1 188 1 42 1 211 1 12 2 196 1 157 2 324 1 358 1 287 2 21 2 79 1 360 2 159 4 363 1 
62 1 111 1 186 1 113 2 116 1 208 1 95 2 169 1 188 1 98 1 191 1 211 1 10 1 42 1 12 2 275 1 151 1 152 1 196 1 72 1 322 1 157 2 242 1 215 1 324 1 358 1 286 1 21 2 52 1 287 2 22 1 360 2 79 1 159 4 363 1 330 1 331 1 
0 1 161 1 110 1 111 1 186 1 113 1 116 1 208 1 94 1 95 1 188 1 191 1 211 1 42 1 10 1 12 1 344 1 196 1 258 1 48 1 324 1 157 2 358 1 21 1 287 2 360 1 79 1 159 3 363 1 
116 1 290 1 287 2 54 1 3 1 196 1 188 1 239 1 42 1 
116 1 290 1 287 2 54 1 3 1 196 1 188 1 239 1 42 1 
116 1 290 1 287 2 54 1 3 1 196 1 188 1 239 1 42 1 
116 1 290 1 287 2 54 1 3 1 196 1 188 1 239 1 42 1 
116 1 290 1 287 2 54 1 3 1 196 1 188 1 239 1 42 1 
161 2 88 1 333 1 110 1 32 1 116 1 35 1 188 1 37 1 98 1 191 2 10 2 42 1 149 2 151 2 174 1 152 1 196 1 322 2 257 1 283 1 242 1 324 1 157 1 51 1 287 2 79 1 360 1 159 2 330 2 331 1 
151 2 276 1 194 1 152 1 165 1 322 2 311 1 125 1 141 2 242 1 252 1 132 1 53 1 22 1 106 1 338 1 29 1 147 1 330 2 
151 1 276 1 194 1 152 1 165 1 322 1 311 1 125 1 141 2 242 1 252 1 132 1 202 1 106 1 338 1 29 1 330 1 
62 1 112 1 270 1 96 1 98 1 151 1 234 1 152 2 322 1 126 1 73 1 260 1 242 1 285 1 180 1 53 1 29 1 330 1 331 1 
151 1 276 1 194 1 152 1 165 1 322 1 311 1 125 1 141 2 242 1 252 1 132 1 53 1 106 1 338 1 29 1 147 1 330 1 
353 1 
304 1 163 1 138 1 300 1 27 1 82 1 220 1 
138 2 223 1 317 1 190 1 231 1 302 1 74 1 130 1 77 1 76 1 23 1 58 1 80 1 27 1 364 1 82 1 220 1 
62 3 166 1 208 2 68 2 339 1 211 2 69 2 17 2 172 1 18 2 300 1 302 4 73 1 127 2 304 1 130 5 76 5 77 6 22 1 23 4 24 2 218 1 26 3 27 9 82 8 220 2 137 1 138 8 183 2 186 2 91 1 142 2 223 12 315 2 227 1 38 2 190 4 98 3 231 4 274 6 151 3 152 4 355 6 322 3 241 2 284 2 242 3 358 2 58 3 288 2 364 5 363 2 330 3 331 10 
138 5 350 1 246 1 186 2 91 1 223 6 289 1 208 2 190 2 193 1 146 1 211 2 231 2 274 5 355 5 302 2 153 1 241 2 102 1 179 1 358 2 130 1 76 1 77 3 23 2 24 1 58 1 288 1 27 8 205 1 364 1 329 1 363 2 82 5 220 2 
0 1 161 1 221 1 186 2 249 1 250 1 224 1 170 1 190 1 191 1 228 1 256 1 10 1 211 1 231 1 43 1 344 1 302 1 258 1 240 1 241 2 130 1 23 1 288 1 27 2 310 1 364 1 82 2 
138 1 300 1 302 1 304 1 23 1 190 1 27 1 231 1 82 1 220 1 
274 5 17 1 355 5 138 5 186 2 241 2 223 10 358 2 77 5 208 2 288 1 27 5 363 2 211 2 82 5 
130 1 76 1 138 1 58 1 364 1 220 1 
62 1 112 1 270 1 91 1 190 1 98 1 231 1 151 2 234 1 152 2 322 2 302 1 73 2 75 1 260 1 49 1 242 1 130 1 76 2 180 1 23 1 24 1 218 1 58 1 27 1 364 1 330 2 82 1 331 1 
0 2 161 2 62 1 249 1 116 1 37 1 188 1 191 3 98 1 42 1 10 3 275 1 151 1 344 2 152 1 196 1 322 1 73 1 258 2 215 1 242 1 324 1 286 1 287 2 52 1 360 1 79 1 267 1 159 1 59 1 330 1 331 1 
274 2 355 2 138 4 302 1 91 1 223 4 77 2 23 1 24 1 319 1 190 1 27 1 82 2 231 1 220 2 
206 1 47 1 198 1 
117 1 56 1 47 1 198 1 167 1 
206 1 47 1 198 1 
206 1 47 1 198 1 
47 1 198 1 334 1 
47 1 198 1 334 1 
47 1 198 1 334 1 
47 1 198 1 
36 1 11 1 
43 1 111 1 196 2 221 1 186 1 34 1 157 4 116 2 314 1 224 1 21 3 287 4 319 1 169 2 360 4 188 2 159 8 192 1 211 1 42 2 
43 1 163 1 221 1 186 1 34 1 157 3 314 1 224 1 21 2 319 1 169 2 360 3 159 6 211 1 
111 1 196 1 186 1 157 2 358 1 116 1 21 2 287 2 208 1 169 1 360 2 187 1 188 1 159 4 211 1 42 1 363 1 
121 1 111 1 186 1 157 3 358 1 179 1 208 1 21 2 169 1 360 4 159 7 146 1 211 1 329 2 363 1 
111 4 221 2 186 3 34 1 314 1 116 2 224 1 208 2 319 1 169 5 188 2 192 2 146 2 211 3 42 2 43 2 121 1 196 2 157 11 262 1 358 2 21 9 287 4 360 12 25 1 159 23 28 1 363 2 329 2 
360 1 159 1 329 1 
159 1 146 1 157 1 
17 1 111 1 196 1 186 1 157 3 116 1 358 1 287 2 208 1 21 3 169 2 187 1 360 3 188 1 159 6 42 1 363 1 211 1 
111 1 350 1 246 1 186 2 116 1 208 2 169 1 188 1 146 1 193 1 42 1 211 2 196 1 153 1 239 1 102 1 157 6 179 1 358 2 287 2 21 2 360 6 159 12 329 1 363 2 
43 1 111 1 221 1 186 1 157 3 224 1 21 2 169 1 360 3 159 6 211 1 
43 1 111 1 196 1 221 1 34 1 157 1 116 1 314 1 21 2 287 2 169 1 360 2 188 1 159 3 192 1 28 1 42 1 
43 2 111 3 221 2 186 2 240 1 157 6 224 1 21 6 169 3 360 6 159 12 211 2 
111 1 196 1 239 1 186 1 157 2 116 1 287 2 208 1 21 1 188 1 159 2 42 1 
111 1 196 1 239 1 186 1 157 2 358 1 116 1 21 2 287 2 208 1 169 1 360 2 188 1 159 4 211 1 42 1 363 1 
43 1 111 1 196 3 221 1 239 1 6 1 157 1 116 3 287 6 21 2 169 1 360 2 188 3 192 1 159 3 28 1 42 3 
111 5 221 3 139 1 186 5 6 1 34 1 314 1 116 5 224 2 208 3 319 1 169 7 187 1 188 5 192 2 146 3 42 5 211 5 43 3 121 1 196 5 281 1 239 1 157 16 179 1 358 3 287 10 21 12 57 1 360 18 159 34 28 1 329 4 363 3 
221 1 186 1 34 1 116 1 314 1 224 1 319 1 169 2 188 1 146 1 211 1 42 1 43 1 196 1 239 1 102 1 157 4 179 1 287 2 21 2 360 4 159 8 329 1 
111 1 221 1 186 2 34 1 314 1 116 2 224 1 208 1 319 1 169 2 187 1 188 2 146 1 211 1 42 2 43 1 121 1 196 2 239 1 102 1 157 6 179 1 287 4 21 3 360 5 159 11 329 2 363 1 
111 1 350 1 221 1 246 1 186 3 34 1 314 1 116 3 224 1 208 2 319 1 169 3 187 1 188 3 192 1 146 1 193 1 42 3 211 3 43 1 196 3 153 1 239 1 102 1 157 9 179 1 358 2 287 6 21 4 360 10 159 19 329 1 363 2 
111 2 350 1 221 1 246 1 186 3 34 1 314 1 116 3 224 1 208 2 319 1 169 3 187 1 188 3 192 1 146 1 193 1 42 3 211 2 43 1 196 3 153 1 239 1 102 1 157 10 179 1 358 1 287 6 21 5 360 7 159 17 329 1 363 2 
221 1 186 1 34 1 116 1 314 1 224 1 319 1 169 2 188 1 146 1 211 1 42 1 43 1 196 1 239 1 102 1 157 4 179 1 287 2 21 2 360 4 159 8 329 1 
111 1 350 1 246 1 186 2 116 1 208 2 169 1 188 1 146 1 193 1 42 1 211 2 196 1 153 1 239 1 102 1 157 6 179 1 358 2 287 2 21 2 360 6 159 12 329 1 363 2 
111 2 350 1 221 1 246 1 186 3 34 1 314 1 116 4 224 1 208 2 319 1 169 3 187 1 188 4 192 2 193 1 146 1 42 4 211 2 43 1 196 4 153 1 239 1 102 1 157 10 179 1 358 1 287 8 21 5 360 8 159 18 329 1 363 2 
111 3 350 1 246 1 186 3 6 1 116 4 208 3 169 3 188 4 192 2 193 1 146 1 42 4 211 2 196 4 153 1 239 1 102 1 157 9 179 1 358 2 287 8 21 6 360 7 159 16 329 1 363 3 
43 3 111 3 221 3 186 1 34 2 157 3 314 1 224 1 21 6 169 3 360 4 159 7 211 1 
111 1 350 1 221 1 246 1 186 3 6 1 34 1 314 1 116 4 224 1 208 2 319 1 169 3 188 4 192 2 193 1 146 1 42 4 211 2 43 1 196 4 153 1 239 1 102 1 157 10 179 1 358 1 287 8 21 4 360 8 159 18 329 1 363 2 
119 1 
114 1 265 1 305 1 67 1 119 1 33 1 
151 1 163 1 322 1 112 1 73 1 330 1 
275 1 161 1 151 1 344 1 62 1 152 1 322 1 258 1 73 1 7 1 242 1 286 1 267 1 98 1 191 2 10 2 330 1 331 1 
161 2 62 2 63 1 166 1 7 1 191 2 98 2 10 2 99 1 69 1 275 1 151 1 344 2 152 1 18 1 322 1 258 1 242 1 286 1 267 1 310 1 330 1 331 3 
161 2 62 2 63 1 166 1 7 1 191 2 98 2 10 2 99 1 69 1 275 1 151 2 344 2 152 1 18 1 322 2 258 1 242 1 131 1 267 1 107 1 310 1 330 2 331 3 
62 1 138 1 183 1 166 1 315 1 318 1 98 1 69 1 151 3 152 1 18 1 322 3 73 1 242 1 130 2 131 1 76 1 55 1 26 1 364 2 330 3 331 4 220 1 
151 3 62 1 138 1 152 1 18 1 183 1 322 3 73 1 127 1 166 1 242 1 315 1 130 2 131 1 76 1 26 1 98 1 364 2 69 1 330 3 220 1 331 4 
244 1 151 1 152 1 322 1 242 1 330 1 
244 1 333 1 62 1 270 1 227 1 98 2 149 1 100 1 151 6 152 3 280 1 322 6 73 2 260 1 242 2 22 1 308 1 330 5 331 3 160 1 
161 1 110 1 62 1 113 1 7 1 116 2 169 2 10 2 211 1 12 1 344 1 72 1 258 1 215 1 21 2 22 1 79 2 267 2 32 1 221 1 186 1 34 1 314 1 224 1 316 1 95 1 319 1 188 2 191 2 98 1 42 2 43 1 275 1 151 1 152 1 196 2 322 1 324 2 242 1 157 3 286 1 52 1 287 4 360 3 159 6 330 1 331 1 
138 1 183 1 142 1 315 1 38 1 190 2 231 2 151 1 16 1 300 1 322 1 302 2 73 1 127 1 284 1 304 1 130 3 76 2 23 2 218 1 26 1 58 1 27 1 364 3 82 1 330 1 220 1 331 2 
244 1 151 2 22 1 62 1 152 2 183 1 227 1 322 2 98 1 339 1 242 1 330 2 331 2 
151 2 234 1 62 1 152 2 322 2 73 1 112 1 270 1 260 1 242 1 180 1 22 1 98 1 330 2 331 1 
151 2 234 1 62 1 152 2 322 2 303 1 270 1 166 1 260 1 242 1 180 1 98 1 330 2 331 1 
252 1 151 1 152 1 311 1 322 1 106 1 73 1 141 1 242 1 330 1 
151 2 194 1 333 1 152 1 322 2 242 1 51 1 22 1 98 1 330 2 331 1 
333 1 62 1 112 1 270 1 98 2 100 1 151 3 234 1 152 3 322 3 73 1 260 1 242 2 180 1 22 1 308 1 330 2 331 3 
333 1 62 1 112 1 270 1 98 2 100 1 151 3 234 1 152 3 322 3 73 1 260 1 242 2 357 1 180 1 22 1 330 2 331 3 
275 1 161 1 151 1 344 1 62 1 152 1 322 1 258 1 73 1 7 1 242 1 267 1 98 1 191 2 10 2 107 1 330 1 331 1 
151 1 62 1 152 2 280 1 322 1 270 1 166 1 260 1 242 1 227 1 98 1 330 1 331 1 
168 1 201 1 278 1 267 1 128 1 
16 1 138 1 278 2 63 1 247 1 128 1 8 1 315 1 130 2 168 2 201 2 272 1 209 1 267 1 310 1 99 1 364 2 220 1 182 1 
161 1 88 1 174 1 278 1 257 1 128 1 201 1 191 1 10 1 
272 1 209 1 128 1 
296 1 164 1 163 1 156 1 
296 1 164 1 356 1 101 1 156 1 40 1 109 1 
343 1 356 1 84 1 
13 1 296 1 164 1 356 3 184 1 197 2 64 1 101 3 156 1 92 1 40 1 109 1 
296 1 164 1 356 2 97 1 101 2 156 1 40 1 148 1 109 1 
164 1 356 1 101 1 213 1 125 1 141 1 92 1 252 1 294 1 40 1 109 1 
164 1 356 1 101 1 156 1 40 1 92 1 109 1 
296 1 356 1 101 1 156 2 40 1 92 1 109 1 
164 1 175 1 356 2 101 2 156 1 92 1 9 1 40 2 340 1 109 2 
296 1 135 1 164 2 356 3 195 1 45 1 101 3 156 1 92 1 294 1 40 1 148 2 109 1 
296 1 87 1 164 1 356 2 101 2 125 1 156 1 141 2 92 1 252 1 132 1 106 1 40 1 148 1 109 1 
296 1 60 1 164 2 356 4 45 1 101 4 156 1 92 1 97 1 294 1 40 2 148 2 109 2 
296 1 164 1 356 1 101 1 156 1 40 1 92 1 109 1 
13 1 296 2 164 3 356 4 184 1 45 1 197 1 101 4 156 2 294 1 40 1 273 1 148 2 109 1 
296 1 136 1 164 1 356 2 101 2 156 1 92 1 264 1 105 1 40 1 148 1 109 1 
296 1 13 2 143 1 164 1 356 3 184 1 197 2 101 3 156 1 40 1 92 1 109 1 
164 2 299 1 259 2 134 1 
124 1 356 1 101 1 40 1 92 1 109 1 
296 1 164 1 195 1 356 2 101 2 156 1 40 1 148 1 92 1 109 1 
307 1 
296 1 164 1 356 1 101 1 156 1 40 1 92 1 109 1 
296 1 164 1 356 3 195 1 197 1 101 3 156 1 92 1 40 1 148 1 109 1 
164 1 45 1 294 1 273 1 
164 1 156 1 

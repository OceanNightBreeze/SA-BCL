#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 25 (50,173) (50,173) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 25 (50,173) (50,173) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 25 (50,173) (50,173) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 25 (50,173) (50,173) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.ArrayIndexOutOfBoundsException 13 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 365 281 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 314 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 314 73 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 318 163 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 352 318 163 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 352 318 12 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 318 163 366 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 318 163 366 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 365 281 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> -1
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 860 | = null
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 4578 | return null
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | STATEMENT | 1218 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> -1
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | CONDITION | 1071 | if (x) -> if (!x)
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1280 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
110 1 331 1 299 2 41 3 84 2 44 1 152 1 123 2 351 1 174 1 260 1 100 3 278 1 
41 1 84 1 44 1 123 1 48 1 25 1 50 1 173 1 278 1 367 1 100 1 
41 1 84 1 44 1 123 1 48 1 25 1 50 1 173 1 278 1 367 1 100 1 
41 1 84 1 44 1 123 1 48 1 25 1 50 1 173 1 278 1 367 1 100 1 
41 1 84 1 44 1 123 1 48 1 25 1 50 1 173 1 278 1 367 1 100 1 
110 2 76 1 160 1 53 1 299 3 165 1 41 4 118 2 84 1 86 1 152 1 44 1 123 1 231 1 351 1 174 1 260 3 100 4 
353 1 160 1 299 1 199 1 41 2 84 1 86 1 44 1 123 1 351 1 311 1 232 1 174 1 100 2 367 1 278 1 
110 4 331 1 299 5 41 9 118 2 152 3 44 1 123 2 260 7 278 1 100 9 76 1 160 1 53 1 10 1 345 1 33 1 165 1 84 2 86 1 231 1 351 1 141 1 174 1 
110 4 331 1 299 5 41 9 118 2 152 3 44 1 123 2 260 7 278 1 100 9 76 1 160 1 53 1 10 1 345 1 33 1 165 1 84 2 86 1 231 1 351 1 141 1 174 1 
344 1 148 1 1 1 133 1 113 1 114 1 82 1 235 1 190 1 107 1 59 1 21 1 151 1 170 1 
224 1 
344 1 328 1 148 1 1 1 133 1 113 1 114 1 224 1 82 1 235 1 107 1 190 1 59 1 21 1 151 1 170 1 183 1 27 1 144 1 
328 2 148 1 1 1 113 1 114 2 71 2 235 1 18 1 237 1 21 1 178 2 258 1 151 1 97 4 27 1 344 1 239 1 101 2 368 1 279 2 242 2 133 4 224 2 82 1 210 1 287 1 58 5 107 1 190 1 85 1 59 1 228 1 348 1 170 4 36 1 14 2 140 1 144 2 
175 1 224 1 144 1 
193 2 316 1 224 1 
107 2 190 1 344 2 21 2 1 2 82 2 235 2 29 1 
326 1 147 2 271 1 1 3 298 1 274 1 235 3 3 1 361 1 21 2 4 1 276 1 153 1 154 1 277 1 155 1 124 1 29 1 126 1 128 1 344 2 129 2 264 1 131 2 81 1 225 2 82 2 285 1 189 1 57 2 107 2 190 1 347 1 372 1 109 1 248 1 295 1 
107 1 190 1 344 1 148 1 59 1 21 1 1 1 113 1 82 1 235 1 
15 1 1 1 253 1 133 1 224 1 215 1 235 1 217 1 286 1 107 1 59 1 170 1 184 1 144 1 
344 1 1 1 253 1 133 2 224 1 215 1 82 1 235 1 217 1 286 1 107 1 21 1 59 1 170 2 144 1 
328 1 133 1 170 1 114 1 342 1 
344 1 263 1 328 1 148 1 1 1 133 1 113 1 114 1 224 1 82 1 235 1 107 1 190 1 59 1 21 1 151 1 170 1 27 1 144 1 
328 1 133 1 170 1 
326 1 112 1 344 1 129 1 147 1 1 2 370 1 81 1 274 1 285 1 235 2 189 1 57 1 347 1 107 1 21 1 248 1 124 1 6 1 126 1 
344 1 1 2 357 1 82 1 235 2 56 1 107 2 21 1 29 2 
254 1 65 1 6 1 
326 1 129 1 147 1 1 1 240 1 81 1 285 1 274 1 235 1 57 1 189 1 347 1 248 1 124 1 29 1 126 1 
112 2 344 4 15 1 1 5 370 1 82 1 235 5 56 1 107 5 21 4 308 1 158 1 29 1 296 1 
202 1 107 2 344 2 148 1 59 1 21 2 1 2 235 2 
175 1 29 1 
107 3 112 1 344 3 21 3 1 3 82 1 235 3 29 1 
107 1 344 1 148 1 59 1 21 1 1 1 235 1 
107 1 344 1 59 1 21 1 1 1 357 1 82 1 235 1 56 1 
326 1 112 1 147 1 253 1 1 4 298 1 215 1 274 1 235 4 217 1 364 1 21 3 4 1 153 1 154 1 277 1 155 1 124 1 29 1 126 1 128 1 344 3 129 1 264 1 131 1 133 1 81 1 103 1 370 1 225 2 285 1 82 2 56 1 189 1 286 1 57 1 347 1 107 3 190 1 372 1 59 1 109 1 170 1 248 1 
107 2 344 1 112 1 15 1 21 1 1 2 235 2 29 1 158 1 
251 1 112 2 344 3 1 3 253 1 133 1 224 1 370 1 103 1 215 1 82 1 56 1 235 3 217 1 286 1 107 3 59 1 21 3 170 1 
112 1 344 2 1 2 254 1 82 1 56 1 235 2 107 2 21 2 6 1 
326 1 129 1 147 1 1 1 81 1 285 1 274 1 235 1 57 1 189 1 347 1 248 1 124 1 29 1 126 1 
326 1 129 1 147 1 1 1 285 1 274 1 235 1 57 1 189 1 45 1 248 1 124 1 250 1 29 1 126 1 
17 1 254 2 304 1 255 1 363 1 178 1 338 1 4 1 153 1 154 1 155 1 6 2 128 1 279 1 264 1 131 4 9 1 225 2 164 1 323 1 109 2 108 1 65 2 295 2 
107 1 202 1 344 1 59 1 21 1 1 1 215 1 235 1 
192 1 288 1 64 1 
167 1 288 2 212 1 162 1 64 2 172 1 
288 1 64 1 
288 1 64 1 
167 1 212 1 
167 1 212 1 
167 1 212 1 
288 1 270 1 64 1 
288 1 270 1 64 1 
288 1 270 1 64 1 
288 1 229 1 64 1 
288 1 229 1 64 1 
288 1 229 1 64 1 
344 2 330 1 1 2 133 1 55 1 32 1 200 1 235 2 116 1 358 1 107 2 192 1 246 1 288 1 168 1 34 1 21 2 180 1 340 1 170 1 182 1 64 1 171 1 29 1 
148 1 330 2 1 1 113 1 235 1 116 2 94 1 203 1 21 1 121 1 151 1 182 2 312 1 344 1 159 1 133 2 55 1 82 1 107 1 190 1 288 2 290 1 59 1 34 2 170 2 64 2 171 2 325 1 
252 2 86 2 199 1 165 1 336 1 
160 1 86 1 165 1 
160 1 86 1 199 1 
252 1 86 3 199 1 37 1 336 1 165 2 
252 1 86 2 187 1 199 1 336 1 165 1 
328 1 66 2 329 1 114 4 71 1 200 1 358 1 95 1 237 1 178 1 338 1 97 3 27 1 49 1 99 1 209 1 30 1 101 1 279 1 242 1 133 4 161 1 224 1 32 1 164 1 58 1 193 1 61 1 170 4 14 1 144 1 377 1 
328 6 329 6 149 1 114 7 356 1 71 2 358 4 95 6 237 1 178 3 338 3 97 8 27 1 342 5 99 1 209 3 30 2 368 1 101 2 279 3 102 1 242 3 316 3 133 8 161 2 224 5 164 3 105 1 58 6 321 1 139 1 373 5 193 9 170 8 14 2 144 1 
66 1 329 2 114 2 71 1 358 1 95 2 178 1 338 1 97 3 49 1 209 1 30 1 101 1 368 1 279 1 242 1 316 2 133 3 161 1 224 3 164 1 58 2 193 4 61 1 170 3 14 1 144 1 
66 2 329 4 149 1 114 3 71 1 358 2 95 4 178 2 338 2 97 5 49 1 209 2 30 1 101 1 368 1 279 2 242 2 316 3 133 4 161 1 224 4 164 2 58 4 321 1 139 1 193 7 61 1 170 4 14 1 144 1 
83 1 
248 1 189 1 126 1 
16 1 126 1 
175 1 126 1 337 1 
92 1 126 1 
248 1 126 1 
248 1 243 1 300 1 189 1 337 2 126 3 
279 1 130 1 131 7 2 1 334 1 93 1 138 1 119 1 319 1 255 2 289 2 178 1 258 1 109 3 108 3 348 1 36 1 295 4 
67 1 2 2 334 1 93 2 119 1 255 8 338 4 178 7 179 2 4 2 258 3 153 2 154 2 155 2 209 4 343 1 127 1 279 7 130 7 131 46 132 1 54 1 225 4 210 1 164 4 166 1 106 1 319 1 289 3 109 22 108 15 348 2 268 1 349 4 36 3 295 24 214 4 
13 1 289 1 4 1 131 1 2 1 259 1 153 1 154 1 225 2 93 1 155 1 295 1 
279 1 130 1 131 7 2 1 93 1 334 1 119 1 319 1 255 2 289 2 178 1 258 1 109 3 108 3 348 1 36 1 295 4 
279 1 130 1 131 7 2 1 93 1 334 1 119 1 319 1 255 2 289 2 178 1 258 1 109 3 108 3 348 1 36 1 295 4 
326 1 0 1 111 1 197 2 129 1 147 1 78 1 11 1 285 1 57 1 41 1 84 1 362 2 257 1 60 1 23 1 248 1 123 1 213 2 124 1 126 1 278 2 100 1 
326 1 197 1 147 1 199 1 41 1 362 1 341 1 44 1 123 1 157 1 100 1 278 1 160 1 129 1 222 1 369 1 283 1 8 1 285 1 165 1 135 1 57 1 84 1 86 2 213 1 37 1 
326 1 146 1 197 1 147 1 299 1 199 1 41 2 362 1 44 1 123 1 260 1 157 1 100 2 278 1 160 1 129 1 222 1 369 1 283 1 8 1 285 1 165 1 135 1 57 1 84 1 86 2 213 1 351 1 37 1 174 1 
326 1 111 1 197 1 147 1 333 1 299 1 199 1 41 3 362 1 341 1 123 1 260 2 157 1 100 3 278 1 160 1 129 1 222 1 283 1 8 1 285 1 165 1 135 1 57 1 84 1 86 2 213 1 351 1 37 1 174 1 
326 1 197 1 147 1 333 1 299 1 199 1 41 2 362 1 341 1 260 2 278 1 100 2 129 1 222 1 160 1 283 1 285 1 135 1 165 1 57 1 86 2 213 1 351 1 37 1 174 1 
205 1 
328 2 101 1 129 1 147 1 281 1 133 1 161 1 71 1 57 1 58 1 237 1 374 1 97 1 365 1 170 1 14 1 27 1 124 1 
314 1 328 2 15 1 315 1 253 1 1 1 133 2 215 1 301 1 134 2 217 1 303 1 235 1 286 1 107 1 59 1 218 1 170 2 183 1 27 1 184 1 294 1 
328 1 15 1 253 1 1 1 301 1 215 1 235 1 303 1 217 1 218 1 183 1 27 1 184 1 185 1 315 1 133 2 224 1 134 3 286 1 107 1 59 1 170 2 294 1 144 1 
314 1 328 2 15 1 315 1 1 1 253 1 133 2 215 1 301 1 134 3 217 1 303 1 235 1 286 1 73 1 107 1 59 1 218 1 170 2 183 1 27 1 184 1 185 1 294 1 
328 1 133 1 170 1 183 1 27 1 
89 2 328 2 15 1 1 1 253 1 301 1 215 1 71 1 302 2 303 1 235 1 217 1 73 1 117 1 237 1 20 1 218 1 97 1 98 1 27 1 184 1 185 1 314 1 101 1 315 1 316 1 133 2 134 3 286 1 58 1 107 1 193 1 59 1 170 2 14 1 88 2 352 1 294 1 
89 2 328 2 15 1 198 1 253 1 1 1 301 1 215 1 71 1 302 2 235 1 303 1 217 1 73 1 117 1 237 1 20 1 218 1 97 1 27 1 184 1 185 1 314 1 101 1 315 1 316 1 133 2 163 1 318 1 134 3 286 1 58 1 107 1 59 1 170 2 14 1 88 2 352 1 294 1 
89 1 328 2 15 1 198 1 253 1 1 1 301 1 215 1 71 1 302 1 235 1 303 1 217 1 73 1 117 1 237 1 20 1 218 1 97 1 27 1 184 1 314 1 101 1 315 1 316 1 133 2 163 1 318 1 134 2 286 1 58 1 107 1 59 1 170 2 14 1 88 1 352 1 294 1 
89 1 328 2 15 1 253 1 1 1 301 1 215 1 71 1 302 1 235 1 303 1 217 1 73 1 237 1 218 1 97 1 27 1 184 1 314 1 101 1 315 1 186 1 133 2 80 1 318 1 245 1 134 2 12 1 286 1 58 1 107 1 266 1 193 1 59 1 170 2 14 1 352 1 294 1 
89 2 15 1 328 3 198 1 253 1 1 1 301 1 215 1 71 1 302 2 235 1 303 1 217 1 117 1 73 2 237 1 20 1 218 1 97 1 27 1 366 1 184 1 185 2 314 2 101 1 315 1 316 1 133 2 163 1 318 1 134 4 286 1 58 1 107 1 59 1 170 2 14 1 88 2 352 1 294 1 
89 2 15 1 328 3 198 1 253 1 1 1 301 1 215 1 71 1 302 2 235 1 303 1 217 1 117 1 73 2 237 1 20 1 218 1 97 1 27 1 366 1 184 1 185 2 314 2 101 1 315 1 316 1 133 2 163 1 318 1 134 4 286 1 58 1 107 1 59 1 170 2 14 1 88 2 352 1 294 1 
89 2 328 2 15 1 1 1 253 1 301 1 215 1 71 1 302 2 303 1 235 1 217 1 73 1 237 1 218 1 97 1 98 1 27 1 184 1 185 1 314 1 101 1 315 1 186 1 133 2 80 2 245 1 134 3 286 1 58 1 107 1 193 1 59 1 170 2 14 1 352 1 294 1 
326 3 146 1 112 1 147 7 1 1 176 1 235 1 177 1 360 1 236 1 361 2 21 1 257 1 4 2 307 1 276 1 153 2 154 2 277 1 124 2 155 2 238 1 126 4 128 2 221 1 344 1 129 6 264 2 131 2 317 1 225 4 285 4 137 1 346 1 189 1 57 7 107 1 323 1 60 1 35 1 109 1 248 3 295 1 
196 1 1 1 254 1 235 1 255 1 21 1 338 1 178 1 4 1 153 1 154 1 155 1 6 1 209 1 128 1 344 1 279 1 264 1 131 3 225 2 82 1 164 1 56 1 107 1 108 1 109 2 65 1 142 1 295 1 
175 1 254 1 334 1 119 1 255 2 178 1 4 1 258 1 153 1 154 1 155 1 6 1 29 2 128 1 279 1 264 1 131 6 225 2 289 1 323 1 108 2 109 3 348 1 36 1 65 1 295 3 
254 4 255 1 338 2 178 1 4 2 96 1 276 1 153 2 154 2 277 1 155 2 6 11 209 2 343 1 29 1 128 2 279 2 130 1 264 1 131 14 225 4 164 1 166 1 322 1 108 2 109 6 291 1 349 3 268 1 142 1 65 11 295 8 214 3 
326 1 112 1 147 1 1 2 332 1 254 1 274 1 235 2 21 1 4 1 276 1 153 1 154 1 277 1 124 1 155 1 29 1 126 1 128 1 344 1 129 1 264 1 52 1 131 2 240 1 81 1 370 1 225 2 285 1 189 1 57 1 347 1 107 1 109 1 350 1 248 1 142 1 295 1 
145 1 326 2 147 3 1 3 334 1 274 2 235 3 338 2 4 3 341 1 276 1 153 3 154 3 277 1 156 1 155 3 6 7 209 2 344 1 279 3 285 2 164 2 57 3 107 1 347 2 289 1 109 10 108 8 348 1 248 2 65 7 295 10 112 1 69 2 298 2 254 7 115 2 119 1 255 4 178 3 21 1 258 1 124 1 29 2 126 2 128 3 129 3 264 3 130 4 131 20 31 2 265 1 370 1 81 2 225 6 189 2 36 1 142 1 269 2 
128 1 279 1 130 1 264 1 131 2 9 1 254 1 225 2 338 1 323 1 4 1 108 1 153 1 154 1 65 1 155 1 6 1 295 2 
128 1 264 1 131 2 254 1 225 2 164 1 304 1 255 1 178 1 323 1 4 1 108 1 109 2 153 1 154 1 65 1 155 1 6 1 
254 2 255 1 338 1 178 1 4 1 153 1 154 1 155 1 209 1 6 2 128 1 279 1 264 1 130 1 131 4 225 2 164 1 323 1 108 2 109 2 65 2 295 2 
128 1 279 1 130 1 264 1 131 2 9 1 254 1 225 2 338 1 4 1 35 1 108 1 153 1 154 1 65 1 155 1 6 1 295 2 
128 1 264 1 131 2 254 1 225 2 164 1 304 1 178 1 4 1 35 1 109 2 153 1 154 1 65 1 155 1 6 1 
128 1 279 1 264 1 131 4 254 2 225 2 164 1 178 1 338 1 4 1 35 1 109 2 153 1 154 1 65 2 155 1 6 2 209 1 295 2 
128 1 279 1 130 1 264 1 131 4 254 2 225 2 164 1 255 1 178 1 338 1 4 1 109 2 108 2 153 1 154 1 65 2 155 1 6 2 209 1 295 2 
326 1 147 1 1 1 298 1 274 1 235 1 4 1 276 1 153 1 154 1 277 1 124 1 155 1 29 1 126 1 128 1 129 1 264 1 131 2 81 1 225 2 285 1 189 1 57 1 347 1 109 1 248 1 295 1 
326 1 297 1 147 1 1 1 274 1 235 1 4 1 276 1 45 1 153 1 154 1 277 1 124 1 155 1 29 1 126 1 128 1 129 1 264 1 131 2 225 2 285 1 189 1 57 1 109 1 248 1 295 1 250 1 
254 2 255 1 338 1 178 1 4 1 153 1 154 1 155 1 209 1 6 2 128 1 279 1 264 1 130 1 131 4 225 2 164 1 108 2 109 2 142 1 65 2 295 2 
326 1 146 1 147 1 1 1 254 2 298 1 274 1 235 1 255 1 178 1 338 1 4 1 153 1 154 1 155 1 6 2 209 1 126 1 128 1 279 1 129 1 130 1 264 1 131 4 31 1 81 1 225 2 164 1 285 1 189 1 57 1 347 1 109 2 108 2 248 1 65 2 295 2 
1 1 40 1 254 1 235 1 178 1 21 1 338 1 4 1 153 1 154 1 155 1 209 1 6 1 128 1 344 1 279 1 130 1 264 1 131 3 225 2 164 1 82 1 56 1 107 1 109 1 108 1 142 1 65 1 295 2 
234 1 90 1 91 1 334 1 72 1 119 1 255 7 256 1 338 7 178 7 179 2 4 4 42 1 258 1 43 1 75 1 122 1 259 1 47 1 153 4 154 4 28 1 155 4 209 7 343 2 279 8 130 8 131 51 225 8 164 6 166 2 227 3 289 1 109 24 108 15 348 1 349 4 268 2 36 1 230 1 376 1 295 27 214 4 
234 1 90 1 91 1 255 2 256 1 178 2 338 3 179 2 4 3 43 1 75 1 122 2 259 1 47 2 153 3 154 3 155 3 28 1 209 3 343 2 279 3 130 2 131 26 225 6 164 2 211 1 227 4 108 4 109 12 349 2 230 1 376 1 295 14 214 2 
234 1 90 1 91 1 334 1 72 1 119 1 255 7 256 1 338 7 178 7 179 2 4 4 258 1 43 1 75 1 122 1 259 1 47 1 153 4 154 4 28 1 155 4 209 7 343 2 279 8 130 7 131 51 225 8 164 6 211 1 166 2 227 3 289 1 109 24 108 14 348 1 349 4 268 2 36 1 230 1 376 1 295 27 214 4 
234 1 90 1 91 1 334 1 72 1 119 1 255 7 256 1 338 7 178 7 179 2 4 4 258 1 43 1 75 1 122 1 259 1 47 1 153 4 154 4 28 1 155 4 209 7 343 2 279 8 130 7 131 53 225 8 164 6 211 1 166 2 227 4 289 1 109 25 108 14 348 1 349 4 268 2 36 1 230 1 376 1 295 28 214 4 
234 1 90 1 91 1 334 1 119 1 255 7 256 1 338 7 178 8 179 1 4 2 258 1 43 1 75 1 122 1 259 1 47 1 153 2 154 2 28 1 155 2 209 7 343 2 279 8 130 7 131 52 225 4 164 7 211 1 166 2 227 4 289 1 109 25 108 14 348 1 349 4 268 2 36 1 230 1 376 1 295 27 214 4 
327 1 288 1 34 1 182 1 162 1 64 1 309 1 171 1 188 1 116 1 
192 1 340 1 
288 1 34 1 39 1 182 1 64 1 292 1 171 1 201 1 116 1 
270 1 7 1 
339 1 229 1 172 1 
148 1 330 2 1 1 113 1 235 1 116 1 94 1 203 1 21 1 121 1 151 1 182 1 312 1 344 1 159 1 133 1 55 1 82 1 107 1 190 1 288 1 290 1 59 1 34 1 170 1 64 1 171 1 325 1 
148 1 330 2 1 1 113 1 235 1 116 1 94 1 203 1 21 1 121 1 151 1 182 1 312 1 344 1 159 1 133 1 55 1 82 1 107 1 190 1 288 1 290 1 59 1 34 1 170 1 64 1 171 1 325 1 
148 1 330 2 1 1 113 1 235 1 116 1 94 1 203 1 21 1 121 1 151 1 182 1 312 1 344 1 159 1 133 1 55 1 82 1 107 1 190 1 288 1 290 1 59 1 34 1 170 1 64 1 171 1 325 1 
270 1 172 1 7 1 
270 1 172 1 7 1 
339 1 229 1 
339 1 229 1 172 1 
168 1 180 1 
330 1 1 2 114 1 200 1 235 2 116 1 94 1 358 1 21 2 340 1 180 1 182 1 29 1 344 2 133 1 32 1 107 2 288 1 246 1 192 1 34 1 168 1 63 1 170 1 64 1 171 1 325 1 
326 1 147 2 1 2 235 2 150 1 236 1 361 2 4 1 307 1 276 1 153 1 154 1 277 1 155 1 126 1 128 1 129 2 264 1 131 2 241 1 225 2 285 1 57 2 107 2 62 1 109 1 87 1 248 1 142 1 38 1 295 1 
326 1 129 1 147 1 285 1 57 1 267 1 362 1 257 1 60 1 23 1 248 1 375 1 124 1 126 1 
326 1 160 1 129 1 147 1 222 1 355 1 8 1 199 1 285 1 165 1 135 1 57 1 267 1 362 1 86 2 341 1 220 1 37 1 
326 1 146 1 160 1 129 2 147 2 222 1 355 1 8 1 199 1 285 1 165 1 135 1 57 2 267 1 362 1 86 2 341 1 220 1 37 1 
326 1 160 1 129 1 147 1 222 1 355 1 8 1 199 1 285 1 165 1 135 1 57 1 362 1 86 2 341 1 46 1 37 1 
191 1 
239 1 101 1 237 1 97 1 224 1 14 1 71 1 144 1 287 1 58 1 
279 2 329 5 242 2 316 5 224 5 164 2 115 1 58 5 95 5 85 1 338 2 193 10 178 2 97 5 209 2 
344 1 328 1 148 1 1 1 113 1 224 1 82 1 235 1 107 1 190 1 59 1 21 1 151 1 27 1 144 1 
328 2 101 1 129 1 147 1 281 1 161 1 71 1 57 1 58 1 237 1 374 1 97 1 365 1 14 1 195 1 27 1 124 1 
175 1 239 1 97 1 224 1 144 1 287 1 58 1 
328 1 101 1 316 1 224 1 71 1 117 1 58 1 237 1 193 1 20 1 97 1 14 1 27 1 88 1 144 1 
326 1 328 2 147 1 329 3 92 2 337 1 237 2 95 3 338 1 97 4 206 1 209 1 101 2 279 1 282 1 161 1 244 1 285 2 164 1 57 1 286 1 58 3 170 1 248 1 14 2 68 1 300 1 71 2 115 1 74 1 178 1 27 1 124 1 126 4 129 1 223 1 133 1 316 3 224 3 371 1 189 1 193 6 
328 1 234 1 148 1 329 5 91 1 1 1 235 1 237 2 95 5 338 2 151 1 97 8 5 1 209 2 343 1 344 1 101 2 279 2 242 3 161 1 164 2 58 5 107 1 59 1 349 1 14 2 214 1 113 1 71 2 256 1 178 2 21 1 75 1 27 1 28 1 125 1 316 3 224 5 82 1 190 1 193 6 85 1 374 1 144 2 
148 1 198 1 1 1 113 1 71 1 235 1 237 1 178 1 21 1 258 1 151 1 97 2 344 1 101 1 279 2 242 2 133 1 210 1 82 1 58 2 190 1 107 1 85 1 59 1 170 1 348 1 36 1 14 1 
326 1 147 1 1 3 298 1 274 1 235 3 21 2 4 1 153 1 154 1 277 1 155 1 124 1 29 1 126 1 128 1 344 2 129 1 264 1 131 1 81 1 225 2 82 2 285 1 57 1 189 1 107 2 190 1 347 1 372 1 109 1 248 1 
101 1 329 2 316 2 161 1 224 4 71 1 58 2 95 2 237 1 289 1 193 4 97 1 374 1 14 1 144 2 
168 1 34 1 182 1 272 1 309 1 
34 1 182 1 293 1 
34 1 182 1 293 1 
34 1 182 1 293 1 
34 1 182 1 70 1 
34 1 182 1 70 1 
34 1 182 1 70 1 
34 1 182 1 
288 1 64 1 
279 2 130 2 131 10 225 2 210 1 255 3 178 2 4 1 258 2 108 5 109 5 259 1 348 1 153 1 36 2 154 1 155 1 295 5 
279 1 130 1 131 2 225 2 338 1 4 1 108 1 259 1 153 1 154 1 155 1 295 2 
279 1 130 1 131 4 225 2 164 1 255 1 178 1 338 1 4 1 109 2 108 2 259 1 153 1 154 1 155 1 209 1 295 2 
67 1 130 1 131 3 225 6 72 1 255 1 179 1 4 3 258 1 109 2 108 2 259 1 153 3 36 1 154 3 155 3 295 1 
67 1 334 1 72 1 119 1 255 7 19 1 338 4 178 6 179 2 4 5 258 3 259 1 153 5 154 5 155 5 209 4 343 1 127 1 279 6 130 7 131 41 132 1 225 10 164 4 166 1 106 1 289 1 109 21 108 14 348 2 349 4 268 1 36 3 295 20 214 4 
279 1 131 8 225 2 334 1 119 1 255 2 289 1 178 1 4 1 258 1 108 2 75 1 109 4 348 1 259 1 349 1 36 1 153 1 154 1 155 1 295 4 343 1 214 1 
334 1 119 1 255 2 19 1 178 1 338 1 4 2 258 1 75 1 259 1 153 2 154 2 155 2 209 1 343 1 279 2 130 1 131 11 225 4 289 1 109 5 108 3 348 1 349 1 268 1 36 1 295 6 214 2 
234 1 91 1 334 1 119 1 255 4 19 1 256 1 338 2 178 3 4 3 179 1 258 1 75 1 259 1 153 3 154 3 155 3 28 1 209 2 343 1 279 3 130 1 131 19 225 6 164 2 289 1 109 10 108 5 348 1 349 1 36 1 295 9 214 1 
234 1 91 1 334 1 119 1 255 2 19 1 256 1 338 2 178 2 179 1 4 3 258 1 75 1 259 1 153 3 154 3 155 3 28 1 209 2 343 1 279 3 130 2 131 17 225 6 164 1 289 1 109 7 108 4 348 1 349 1 36 1 295 10 214 1 
279 1 131 8 225 2 334 1 119 1 255 2 289 1 178 1 4 1 258 1 108 2 75 1 109 4 348 1 259 1 349 1 36 1 153 1 154 1 155 1 295 4 343 1 214 1 
234 1 91 1 255 1 256 1 338 2 178 2 4 1 75 1 259 1 153 1 154 1 155 1 28 1 209 2 343 1 279 2 130 1 131 12 225 2 164 2 109 6 108 2 349 1 295 6 214 1 
234 1 91 1 334 1 119 1 255 3 19 1 256 1 338 2 178 2 4 4 179 2 258 1 75 1 259 1 153 4 154 4 155 4 28 1 209 2 343 1 279 3 130 2 131 18 225 8 164 1 289 1 109 8 108 5 348 1 349 1 36 1 295 10 214 1 
234 1 91 1 72 1 256 1 338 2 178 1 179 1 4 3 75 1 259 1 153 3 154 3 155 3 28 1 209 2 343 1 279 2 130 2 131 11 225 6 164 1 108 2 109 4 349 1 295 7 214 1 
279 1 130 3 131 7 334 2 119 1 255 3 178 1 258 3 109 4 108 6 348 1 36 3 295 3 
234 1 91 1 334 1 72 1 119 1 255 3 256 1 338 2 178 2 4 4 179 2 258 1 75 1 259 1 153 4 154 4 155 4 28 1 209 2 343 1 279 3 130 1 131 18 225 8 164 1 289 1 109 8 108 4 348 1 349 1 36 1 295 10 214 1 
279 1 130 1 131 8 225 4 334 1 119 1 255 2 289 1 178 1 4 2 179 1 258 1 109 4 108 3 348 1 153 2 36 1 154 2 155 2 295 4 
175 1 279 1 131 6 334 1 119 1 255 2 289 1 178 1 258 1 109 3 108 2 348 1 36 1 295 3 
279 1 131 4 225 2 164 1 255 1 19 1 178 1 338 1 4 1 108 1 109 2 153 1 154 1 155 1 209 1 295 2 
279 2 130 2 131 12 164 2 166 1 255 2 178 2 338 2 109 6 108 4 349 2 268 1 295 6 209 2 343 1 214 2 
67 1 334 1 119 1 255 7 338 2 178 4 179 2 4 2 258 4 153 2 154 2 155 2 209 2 279 4 130 5 131 30 225 4 210 1 164 2 166 1 289 1 108 12 109 16 291 1 348 2 268 1 349 2 36 4 295 14 214 2 
131 1 109 1 214 1 
131 1 349 1 295 1 
279 1 130 2 131 6 225 2 164 1 115 1 255 1 19 1 338 1 178 1 4 1 109 3 108 3 153 1 154 1 155 1 209 1 295 3 
234 1 91 1 255 1 256 1 338 2 178 2 4 1 75 1 259 1 153 1 154 1 155 1 28 1 209 2 343 1 279 2 130 1 131 12 225 2 164 2 109 6 108 2 349 1 295 6 214 1 
279 1 130 1 131 6 255 1 178 1 258 1 109 3 108 2 348 1 36 1 295 3 
67 1 130 1 131 3 225 2 334 1 119 1 255 1 179 1 4 1 258 1 108 2 109 2 36 1 153 1 154 1 155 1 295 1 
107 1 15 1 1 1 235 1 136 1 29 1 158 1 
51 1 15 1 1 1 284 1 104 1 136 1 235 1 275 1 107 1 143 1 29 1 158 1 
326 1 146 1 354 1 129 4 147 4 285 1 57 4 257 1 120 1 60 1 248 1 124 1 126 1 
326 1 129 2 147 2 317 1 285 2 137 1 57 2 189 1 346 1 360 1 320 1 248 1 156 1 126 1 
326 1 160 1 147 1 129 1 86 1 199 1 285 1 135 1 124 1 57 1 
326 1 150 1 236 1 146 1 147 2 129 2 341 1 248 1 285 1 57 2 126 1 
326 2 146 1 221 1 129 4 147 5 285 2 57 5 177 1 236 1 320 1 257 1 120 1 60 1 248 2 124 1 126 3 
326 2 146 1 129 4 147 5 335 1 285 2 57 5 177 1 236 1 320 1 257 1 120 1 60 1 248 2 124 1 126 3 
326 1 112 1 344 1 129 1 147 1 1 2 274 1 285 1 235 2 189 1 57 1 107 1 21 1 45 1 248 1 124 1 29 1 126 1 
326 1 129 1 147 1 300 1 285 2 57 1 189 1 346 1 360 1 320 1 194 1 248 1 126 1 
326 1 175 1 147 1 129 1 257 1 60 1 248 1 285 1 124 1 57 1 126 1 
326 1 112 1 344 1 129 1 147 1 1 2 274 1 285 1 235 2 189 1 57 1 107 1 347 1 21 1 248 1 124 1 29 1 126 1 
326 1 112 1 16 1 147 1 1 2 215 1 274 1 235 2 217 1 21 1 181 1 29 1 126 3 344 2 129 1 285 1 57 1 189 2 347 1 107 2 320 1 59 1 248 2 
326 1 112 1 354 1 16 1 147 2 1 2 215 1 274 1 235 2 217 1 21 1 181 1 45 1 29 1 126 3 344 2 129 2 285 1 57 2 189 2 107 2 320 1 59 1 248 2 
326 1 354 1 328 1 16 1 147 3 92 1 337 1 181 1 306 1 124 1 126 4 313 1 129 3 133 2 224 1 285 1 57 3 189 1 286 1 320 1 170 2 248 1 144 1 
326 1 354 1 16 1 328 1 129 3 147 3 223 1 133 2 92 1 224 1 285 1 286 1 189 1 57 3 337 1 320 1 181 1 170 2 248 1 124 1 144 1 126 4 
326 1 147 1 129 1 176 1 285 1 57 1 
326 2 146 1 147 6 300 1 176 1 177 1 360 1 236 1 361 1 124 2 238 1 126 3 221 1 129 5 285 3 346 1 189 1 57 6 194 1 248 2 
326 1 146 1 147 1 1 2 274 1 334 1 235 2 4 2 153 2 154 2 155 2 6 1 344 1 279 1 241 1 285 1 57 1 347 1 107 1 289 1 108 2 109 3 348 1 248 1 65 1 295 3 112 1 69 1 254 1 298 1 119 1 255 2 21 1 178 1 258 1 126 1 29 2 128 2 129 1 264 2 31 1 131 6 81 1 225 4 189 1 36 1 142 1 
328 2 148 1 147 1 1 1 92 1 235 1 337 1 237 2 151 1 97 4 239 1 344 1 101 2 279 2 282 1 242 2 210 1 286 1 57 1 287 1 58 5 107 1 59 1 170 2 348 1 14 2 68 1 113 1 114 1 71 2 74 1 178 2 21 1 258 1 27 1 124 1 126 2 129 1 223 1 133 2 224 2 82 1 190 1 85 1 36 1 195 1 144 2 
326 1 146 1 129 2 147 2 244 1 300 1 176 1 285 2 57 2 189 1 337 1 248 1 126 2 
261 1 24 1 216 1 208 1 29 1 
261 2 253 1 133 2 224 1 215 1 114 1 103 1 216 2 217 1 286 1 59 1 170 2 24 2 207 1 310 1 324 1 144 1 208 1 29 1 
107 1 261 1 1 1 62 1 87 1 216 1 235 1 38 1 208 1 
207 1 310 1 208 1 
41 1 84 1 44 1 123 1 299 1 351 1 174 1 100 1 
110 1 353 1 299 3 41 4 84 1 219 1 22 1 152 1 123 1 249 1 351 2 174 2 260 2 100 4 
299 1 345 1 359 1 41 2 84 1 305 1 44 1 123 1 351 1 174 1 260 1 100 2 
353 2 299 1 41 3 84 1 169 1 22 2 44 1 123 1 249 1 351 1 174 1 100 3 
262 1 247 1 299 2 233 2 
41 1 84 1 280 1 44 1 123 1 100 1 
41 2 84 1 44 1 123 1 299 1 351 1 33 1 174 1 260 1 100 2 
26 1 
41 1 84 1 44 1 123 1 299 1 351 1 174 1 100 1 
175 1 299 1 351 1 174 1 
41 1 84 1 123 1 299 1 351 1 174 1 100 1 
41 1 197 1 278 1 
353 2 77 1 299 1 41 3 84 1 22 1 44 1 123 1 249 1 351 1 174 1 100 3 
118 1 41 2 84 1 123 1 299 1 351 1 174 1 260 1 100 2 
110 1 41 1 76 1 84 1 160 1 86 1 44 1 123 1 299 1 165 1 100 1 
41 1 84 1 44 1 123 1 299 1 174 1 100 1 
41 1 84 1 44 1 123 1 351 1 174 2 100 1 
41 2 84 2 79 1 44 1 123 2 299 1 273 1 226 1 174 1 100 2 
110 1 10 1 299 2 33 1 41 3 84 1 44 1 152 1 123 1 351 1 174 1 260 2 100 3 
160 1 299 1 199 1 165 1 41 2 84 1 86 2 204 1 44 1 123 1 351 1 37 1 174 1 260 1 100 2 
110 1 299 2 41 4 118 1 84 2 44 1 152 1 123 2 231 1 351 1 174 1 260 2 100 4 
353 1 299 1 33 1 41 3 84 1 44 1 123 1 351 1 260 1 174 1 100 3 
110 1 219 1 152 1 299 1 
299 1 174 1 

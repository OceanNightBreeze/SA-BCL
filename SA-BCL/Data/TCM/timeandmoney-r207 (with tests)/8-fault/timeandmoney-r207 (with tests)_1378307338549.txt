#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (9,148,151,228) (9,148,151,228) (9,148,151,228) 203 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (9,148,151,228) (9,148,151,228) (9,148,151,228) 203 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (9,148,151,228) (9,148,151,228) (9,148,151,228) 203 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (9,148,151,228) (9,148,151,228) (9,148,151,228) 203 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (9,148,151,228) (9,148,151,228) (9,148,151,228) 203 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (9,148,151,228) (9,148,151,228) (9,148,151,228) 203 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (9,148,151,228) (9,148,151,228) (9,148,151,228) 203 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (9,148,151,228) (9,148,151,228) (9,148,151,228) 203 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (9,148,151,228) (9,148,151,228) (9,148,151,228) 203 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 116 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (9,148,151,228) (9,148,151,228) (9,148,151,228) (282,320) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (9,148,151,228) (9,148,151,228) (9,148,151,228) 203 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (9,148,151,228) (9,148,151,228) (9,148,151,228) 203 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (9,148,151,228) (9,148,151,228) (9,148,151,228) (282,320) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (9,148,151,228) (9,148,151,228) (282,320) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 196 317 167 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 186 231 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 186 231 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 186 231 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 186 231 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 186 231 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 52 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 52 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 52 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 52 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 52 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 52 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 52 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 52 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 52 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 196 317 167 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 11229 | = null
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 1100 | = null
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration; | RETURN | 694 | return null
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 1823 | = null
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONSTANT | 6207 | 1 -> 0
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 693 | = null
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5678 | return null
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5405 | stmt -> ;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
151 1 203 1 228 1 9 1 267 1 
151 1 203 1 228 1 9 1 267 1 
151 1 203 1 228 1 9 1 267 1 
151 1 203 1 228 1 9 1 267 1 
151 1 203 1 228 1 9 1 267 1 
151 1 203 1 228 1 9 1 267 1 
151 1 203 1 228 1 9 1 267 1 
151 1 203 1 228 1 9 1 267 1 
151 1 203 1 228 1 9 1 267 1 
54 1 292 1 136 1 226 1 20 1 217 1 141 1 93 1 205 1 95 1 111 1 113 1 265 1 279 1 
108 1 
136 2 226 1 108 1 296 1 132 1 254 1 327 1 279 2 
311 2 155 2 108 1 314 1 178 1 296 1 24 1 298 1 51 1 132 1 254 2 279 5 255 1 136 5 226 2 285 2 241 1 66 1 212 1 
293 1 108 1 132 1 
108 1 243 1 97 2 
54 1 20 2 93 2 205 2 95 2 111 2 276 1 265 2 
215 2 2 1 93 3 95 2 183 1 128 1 185 1 8 1 222 1 133 1 54 1 102 1 138 1 227 1 140 1 262 1 69 2 265 2 106 2 73 1 20 3 199 1 269 1 111 2 26 1 276 1 30 1 277 2 33 1 280 1 81 1 281 1 283 2 240 1 239 1 205 2 85 1 
54 1 20 1 217 1 141 1 93 1 205 1 95 1 111 1 113 1 265 1 
20 1 157 1 108 1 217 1 94 1 93 1 77 1 112 1 132 1 279 1 136 1 205 1 39 1 67 1 
20 1 157 1 108 1 217 1 111 1 95 1 93 1 77 1 112 1 132 1 279 2 136 2 205 1 67 1 265 1 
136 1 226 1 105 1 254 1 279 1 
80 1 136 2 226 1 108 1 296 1 132 1 254 1 279 2 
136 1 254 1 279 1 
20 2 76 1 93 2 111 1 95 1 275 1 276 2 205 2 265 1 
260 1 68 1 213 1 
106 1 73 1 20 1 269 1 93 1 236 1 128 1 276 1 277 1 33 1 138 1 281 1 227 1 140 1 69 1 85 1 
293 1 276 1 
106 1 73 1 20 2 269 1 95 1 93 2 128 1 277 1 33 1 10 1 281 1 138 1 12 1 227 1 140 1 205 1 68 1 85 1 69 1 265 1 
12 1 20 3 111 1 93 3 205 3 95 3 276 1 265 3 
20 1 217 1 93 1 205 1 95 1 113 1 265 1 
20 1 217 1 76 1 93 1 205 1 95 1 111 1 275 1 265 1 
215 1 2 1 217 1 176 1 93 4 95 3 183 1 128 1 8 1 222 1 133 1 10 1 136 1 54 1 102 1 138 1 12 1 227 1 140 1 262 1 67 1 69 1 265 3 73 1 106 1 20 4 157 1 269 1 77 1 111 2 26 1 112 1 275 1 276 1 277 1 279 1 33 1 280 1 81 1 281 1 283 2 205 3 84 1 85 1 
20 2 12 1 93 2 205 2 95 1 39 1 146 1 276 1 265 1 
20 3 157 1 108 1 217 1 111 1 95 3 93 3 77 1 112 1 275 1 279 1 10 1 136 1 12 2 205 3 84 1 67 1 265 3 246 1 
20 2 111 1 95 2 93 2 275 1 12 1 205 2 68 1 265 2 213 1 
106 1 73 1 20 1 269 1 93 1 128 1 276 1 277 1 33 1 138 1 281 1 140 1 227 1 69 1 85 1 
106 1 217 1 128 1 277 1 276 1 189 1 69 1 150 1 
215 4 2 1 299 1 8 1 130 1 11 1 303 1 102 1 260 2 262 1 68 2 16 1 197 1 199 2 26 1 32 1 237 1 81 1 280 2 283 2 245 1 290 1 88 1 213 2 
157 1 20 1 217 1 62 1 93 1 205 1 95 1 265 1 
20 5 95 4 93 5 111 1 275 1 276 1 10 1 12 2 122 1 205 5 308 1 39 1 146 1 265 4 
20 2 62 1 217 1 93 2 205 2 95 2 113 1 265 2 
75 1 6 1 53 1 
107 1 248 1 49 1 6 2 53 2 134 1 
6 1 53 1 
6 1 53 1 
49 1 134 1 
49 1 134 1 
49 1 134 1 
64 1 6 1 53 1 
64 1 6 1 53 1 
64 1 6 1 53 1 
79 1 6 1 53 1 
79 1 6 1 53 1 
79 1 6 1 53 1 
107 1 108 1 92 1 6 2 96 2 28 2 115 1 53 2 279 2 34 2 136 2 118 2 238 3 166 1 139 1 288 1 169 2 266 1 172 1 
0 1 45 1 95 2 93 2 96 1 6 1 7 1 53 1 136 1 60 1 265 2 20 2 75 1 23 1 28 1 276 1 279 1 34 1 238 1 118 1 82 1 205 2 287 1 172 1 
294 1 91 2 323 1 190 2 171 1 
294 1 190 1 72 1 
323 1 190 1 72 1 
294 2 91 1 323 1 190 3 41 1 171 1 
74 1 294 1 91 1 323 1 190 2 171 1 
47 1 295 1 178 2 296 1 298 3 97 3 130 1 132 1 254 1 188 1 11 1 136 5 226 4 60 1 66 1 143 1 144 2 311 1 155 1 200 2 108 2 159 2 78 1 32 1 279 5 82 1 324 1 285 1 124 1 243 1 287 1 245 1 
295 2 178 6 296 1 298 8 97 9 130 3 132 1 254 6 224 1 11 3 136 9 226 7 259 1 59 5 13 1 307 1 105 5 66 1 143 2 229 1 311 2 155 2 200 6 108 5 159 6 32 3 279 9 82 4 324 3 285 2 241 1 37 1 124 1 243 3 245 3 
47 1 295 1 178 2 298 3 97 4 132 1 130 1 188 1 11 1 136 3 226 2 143 1 144 1 311 1 155 1 108 3 200 2 159 2 32 1 279 3 82 1 285 1 324 1 241 1 243 2 245 1 
47 1 295 1 178 4 298 5 97 7 132 1 130 2 188 1 224 1 11 2 136 4 226 3 307 1 143 1 144 2 311 1 155 1 108 4 200 4 159 4 32 2 279 4 82 2 285 1 324 2 241 1 37 1 243 3 245 2 
247 1 
293 1 227 1 244 1 
227 1 206 1 
227 1 140 1 
44 1 227 3 140 1 269 1 209 1 244 2 
227 1 140 1 269 1 
227 1 274 1 
215 7 174 1 199 4 181 2 299 3 161 1 187 1 32 1 237 2 256 1 117 1 280 3 36 1 103 1 119 1 120 1 168 1 245 1 
215 1 117 2 199 1 120 1 181 1 116 1 
215 9 46 1 2 2 181 2 299 4 8 2 187 1 101 1 103 1 262 2 199 5 161 1 32 1 31 1 237 3 117 1 81 2 280 4 36 1 283 4 120 1 119 1 168 1 245 1 
215 7 174 1 199 4 181 2 299 3 161 1 187 1 32 1 237 2 117 1 280 3 36 1 103 1 120 1 119 1 168 1 245 1 
215 7 174 1 199 4 181 2 299 3 161 1 187 1 32 1 237 2 117 1 280 3 36 1 103 1 120 1 119 1 168 1 245 1 
151 1 228 1 320 1 9 1 267 1 
151 1 203 1 228 1 9 1 267 1 
151 1 203 1 228 1 9 1 267 1 
151 1 228 1 320 1 9 1 267 1 
151 1 282 1 148 1 267 1 
35 1 
173 1 90 1 178 2 94 1 93 1 97 2 254 6 14 1 192 2 263 2 18 2 106 2 20 1 108 2 271 1 112 1 27 2 277 2 279 5 33 1 281 1 285 1 121 2 205 1 208 1 39 1 214 1 295 1 217 1 296 3 220 1 50 1 127 1 298 2 128 2 301 1 132 1 223 1 136 5 304 1 57 4 61 2 140 1 227 1 66 1 69 2 67 1 70 1 230 2 311 1 155 1 157 1 158 1 77 1 243 2 
173 1 217 1 93 1 94 1 296 1 220 1 301 1 254 2 136 3 57 2 192 1 67 1 20 1 157 1 158 1 77 1 112 1 279 3 205 1 208 1 39 1 327 1 
173 1 217 1 93 1 94 1 296 1 220 1 301 1 132 1 254 1 136 3 57 3 67 1 18 1 20 1 157 1 158 1 108 1 77 1 112 1 279 3 205 1 208 1 39 1 327 1 
173 1 217 1 296 1 93 1 94 1 220 1 301 1 132 1 254 2 136 3 57 3 192 1 67 1 18 1 20 1 157 1 158 1 108 1 77 1 112 1 279 3 205 1 121 1 208 1 39 1 327 1 
173 1 1 1 93 1 94 1 178 1 254 7 192 4 263 2 194 1 18 4 20 1 108 5 112 1 27 2 279 5 285 1 121 4 205 1 208 1 207 1 39 1 291 1 217 1 296 3 220 1 50 1 298 1 127 1 301 1 132 5 136 5 57 6 58 1 61 2 66 1 67 1 230 2 311 1 155 1 157 1 158 1 77 1 243 2 327 1 
173 1 93 1 94 1 178 1 97 2 254 4 263 2 192 2 18 2 20 1 108 2 112 1 27 2 279 4 285 1 205 1 121 2 208 1 39 1 217 1 296 2 50 1 220 1 298 1 127 1 301 1 132 1 136 4 57 4 61 2 66 1 67 1 70 1 230 2 311 1 155 1 157 1 158 1 77 1 243 2 
173 1 1 1 217 1 296 2 178 1 93 1 94 1 50 1 220 1 127 1 298 1 301 1 132 1 254 4 136 4 57 4 58 1 61 2 192 2 263 2 66 1 67 1 230 2 18 2 311 1 155 1 20 1 157 1 108 1 158 1 77 1 112 1 27 2 279 4 285 1 121 2 205 1 207 1 208 1 243 2 39 1 
173 1 1 1 217 1 296 2 178 1 93 1 94 1 50 1 220 1 127 1 298 1 301 1 132 1 254 4 136 4 57 4 58 1 61 2 192 2 263 2 66 1 67 1 230 2 18 2 311 1 155 1 20 1 157 1 108 1 158 1 77 1 112 1 27 2 279 4 285 1 121 2 205 1 207 1 208 1 243 2 39 1 
173 1 217 1 296 2 178 1 93 1 94 1 220 1 127 1 298 1 97 2 301 1 132 1 254 4 136 4 57 4 61 2 63 1 192 2 263 2 66 1 67 1 18 2 311 1 19 1 155 1 20 1 157 1 108 1 158 1 109 1 77 1 273 2 112 1 279 4 204 2 285 1 121 2 205 1 207 1 208 1 39 1 
173 1 291 1 1 1 217 1 296 2 178 1 93 1 94 1 50 1 220 1 127 1 298 1 301 1 132 1 254 5 136 4 57 5 58 1 61 2 263 2 66 1 192 3 67 1 230 2 18 3 311 1 155 1 20 1 157 1 108 1 158 1 77 1 112 1 27 2 279 4 285 1 205 1 121 3 207 1 208 1 243 2 39 1 
173 1 291 1 1 1 217 1 296 2 178 1 93 1 94 1 50 1 220 1 127 1 298 1 301 1 132 1 254 5 136 4 57 5 58 1 61 2 263 2 66 1 192 3 67 1 230 2 18 3 311 1 155 1 20 1 157 1 108 1 158 1 77 1 112 1 27 2 279 4 285 1 205 1 121 3 207 1 208 1 243 2 39 1 
173 1 93 1 94 1 178 1 97 2 254 4 263 2 192 2 18 2 20 1 108 1 112 1 273 2 279 4 204 2 285 1 205 1 121 2 208 1 39 1 217 1 296 2 220 1 298 1 127 1 301 1 132 1 136 4 57 4 61 2 63 1 66 1 67 1 70 1 311 1 155 1 157 1 158 1 77 1 
215 2 2 2 93 1 95 1 128 2 184 1 8 2 185 1 222 1 135 1 102 2 12 1 227 3 140 2 262 2 14 1 69 5 16 1 309 1 149 1 265 1 106 6 196 1 20 1 22 1 199 1 317 1 271 1 26 2 277 6 30 1 33 2 81 2 280 1 281 2 283 4 205 1 167 1 211 1 
43 1 215 3 2 1 95 1 93 1 299 1 8 1 130 1 11 1 102 1 260 1 262 1 191 1 68 1 265 1 20 1 199 1 111 1 26 1 275 1 237 1 32 1 81 1 280 2 283 2 324 1 205 1 245 1 213 1 
215 6 293 1 199 3 2 1 181 1 299 2 26 1 161 1 276 2 8 1 187 1 32 1 237 2 280 3 102 1 81 1 103 1 260 1 283 2 119 1 262 1 68 1 16 1 168 1 245 1 213 1 
43 1 215 14 2 2 250 1 180 1 299 2 252 3 185 1 8 2 130 2 222 1 11 1 102 1 260 11 262 2 65 1 68 11 199 8 315 3 26 2 276 1 278 1 237 1 32 1 321 1 36 1 280 6 81 2 283 4 324 2 245 2 89 1 213 4 
43 1 215 2 2 1 93 2 95 1 128 1 8 1 253 1 185 1 222 1 10 1 102 1 138 1 12 1 227 1 140 1 262 1 69 1 265 1 73 1 106 1 20 2 199 1 269 1 236 1 26 1 276 1 277 1 202 1 33 1 163 1 81 1 280 1 281 1 283 2 205 1 85 1 213 1 
2 3 95 1 93 3 181 1 183 2 185 1 8 3 187 1 10 1 11 2 103 1 102 3 12 1 260 7 262 3 265 1 106 3 20 3 199 10 269 2 26 3 276 2 277 3 32 3 33 2 280 10 36 4 281 2 283 6 119 1 205 1 123 2 213 7 43 1 215 20 216 1 299 8 128 1 130 2 222 1 138 2 140 2 227 2 69 3 68 7 309 1 71 1 73 2 235 1 161 1 237 4 81 3 324 2 242 2 85 2 168 1 86 2 170 2 245 3 
215 2 2 1 199 2 299 1 26 1 8 1 130 1 36 1 102 1 81 1 260 1 283 2 262 1 68 1 16 1 88 1 245 1 213 1 
215 2 2 1 299 1 26 1 8 1 237 1 32 1 11 1 102 1 81 1 303 1 280 2 260 1 283 2 262 1 68 1 16 1 213 1 
215 4 2 1 199 2 299 2 26 1 8 1 130 1 237 1 32 1 11 1 280 2 36 1 102 1 81 1 260 2 283 2 324 1 262 1 68 2 16 1 245 1 213 2 
215 2 2 1 199 2 299 1 26 1 8 1 130 1 135 1 36 1 102 1 81 1 260 1 283 2 262 1 68 1 88 1 245 1 213 1 
215 2 2 1 299 1 26 1 8 1 237 1 32 1 135 1 11 1 102 1 81 1 303 1 280 2 260 1 283 2 262 1 68 1 213 1 
215 4 2 1 199 2 299 2 26 1 8 1 130 1 237 1 32 1 135 1 11 1 280 2 36 1 102 1 81 1 260 2 283 2 324 1 262 1 68 2 245 1 213 2 
215 4 2 1 199 2 299 2 26 1 8 1 130 1 237 1 32 1 11 1 280 2 36 1 102 1 81 1 260 2 283 2 324 1 262 1 68 2 245 1 213 2 
215 2 2 1 93 1 183 1 128 1 185 1 8 1 222 1 102 1 138 1 140 1 227 1 262 1 69 1 73 1 106 1 20 1 199 1 269 1 26 1 276 1 277 1 33 1 81 1 280 1 281 1 283 2 85 1 
106 1 215 1 217 1 2 1 26 1 128 1 276 1 8 1 277 1 222 1 280 1 189 1 102 1 81 1 283 2 262 1 69 1 210 1 150 1 
215 4 43 1 2 1 199 2 299 2 26 1 8 1 130 1 237 1 32 1 11 1 280 2 36 1 102 1 81 1 260 2 283 2 324 1 262 1 68 2 245 1 213 2 
215 4 2 1 93 1 299 2 183 1 130 1 8 1 11 1 102 1 138 1 260 2 140 1 227 1 262 1 68 2 69 1 73 1 106 1 20 1 199 2 22 1 269 1 26 1 277 1 237 1 32 1 33 1 280 2 36 1 81 1 281 1 283 2 324 1 242 1 85 1 245 1 213 2 
43 1 215 3 2 1 95 1 93 1 299 1 8 1 130 1 11 1 102 1 261 1 260 1 262 1 68 1 265 1 20 1 199 2 111 1 26 1 275 1 32 1 280 1 36 1 81 1 283 2 324 1 205 1 245 1 213 1 
81 1 2 1 283 2 262 1 8 1 186 1 231 1 31 1 162 1 
81 1 2 1 283 2 262 1 8 1 186 1 231 1 31 1 162 1 
81 1 2 1 283 2 262 1 8 1 186 1 231 1 31 1 162 1 
81 1 2 1 283 2 262 1 8 1 186 1 231 1 31 1 162 1 
81 1 2 1 283 2 262 1 8 1 186 1 231 1 31 1 162 1 
107 1 34 1 118 1 166 1 92 1 251 1 96 1 6 1 28 1 53 1 
0 1 75 1 
34 1 118 1 137 1 142 1 96 1 6 1 28 1 53 1 99 1 
107 1 108 1 92 1 6 1 96 1 28 1 53 1 279 1 136 1 34 1 118 1 238 2 166 1 139 1 288 1 169 1 266 1 172 1 
107 1 108 1 92 1 6 1 96 1 28 1 53 1 279 1 136 1 34 1 118 1 238 2 166 1 139 1 288 1 169 1 266 1 172 1 
107 1 108 1 92 1 6 1 96 1 28 1 53 1 279 1 136 1 34 1 118 1 238 2 166 1 139 1 288 1 169 1 266 1 172 1 
248 1 64 1 310 1 
248 1 64 1 310 1 
79 1 270 1 
79 1 248 1 270 1 
23 1 7 1 
0 1 45 1 93 2 95 2 179 1 96 1 6 1 7 1 53 1 136 1 226 1 60 1 139 1 265 2 20 2 75 1 23 1 28 1 276 1 279 1 34 1 118 1 238 1 82 1 205 2 287 1 169 1 
64 1 310 1 
79 1 248 1 270 1 
43 1 215 2 2 1 93 2 182 1 8 1 185 1 222 1 102 1 227 1 140 1 262 1 69 2 106 2 196 1 198 1 20 2 199 1 272 1 26 1 114 1 277 2 30 2 33 1 164 1 81 1 280 1 281 1 283 2 205 2 211 1 
106 1 126 1 271 1 128 1 129 1 277 1 33 1 281 1 227 1 140 1 14 1 69 1 264 1 17 1 
106 1 153 1 294 1 48 1 3 1 201 1 277 1 33 1 281 1 323 1 190 2 69 1 264 1 145 1 41 1 309 1 17 1 72 1 
106 2 153 1 294 1 48 1 22 1 3 1 201 1 277 2 33 1 281 1 323 1 190 2 69 2 264 1 145 1 41 1 309 1 17 1 72 1 
106 1 153 1 294 1 156 1 48 1 3 1 277 1 33 1 281 1 323 1 190 2 69 1 264 1 145 1 41 1 309 1 72 1 
219 1 
311 1 155 1 108 1 178 1 24 1 51 1 298 1 132 1 285 1 66 1 
200 5 108 5 178 5 159 5 298 5 97 10 98 2 130 2 32 2 11 2 324 2 243 5 289 1 170 1 245 2 
136 1 108 1 296 1 132 1 254 1 279 1 
214 1 90 2 295 2 178 2 296 2 298 2 128 2 254 4 100 2 136 3 304 1 227 1 140 1 14 1 193 1 66 1 69 4 15 1 311 2 232 1 106 4 155 2 271 1 277 4 279 3 33 1 281 1 285 2 241 1 
293 1 108 1 178 1 24 1 298 1 51 1 132 1 
178 1 296 1 50 1 298 1 97 1 132 1 254 1 136 1 66 1 230 1 311 1 155 1 108 2 27 1 279 1 285 1 243 1 
90 1 175 2 249 2 178 8 97 12 98 2 254 5 100 1 258 1 11 2 106 3 22 1 268 1 200 6 108 8 269 3 24 1 112 2 274 2 277 3 279 5 32 2 33 4 281 3 285 4 206 3 209 1 40 1 289 2 125 2 295 2 296 3 51 1 298 9 128 1 132 2 130 2 136 5 225 2 227 10 140 3 305 2 66 4 69 3 232 1 311 4 155 4 159 6 322 2 324 2 243 6 244 2 170 2 245 2 
296 1 178 2 298 5 97 6 252 1 98 1 131 1 130 1 132 1 254 1 52 1 136 1 11 1 66 2 311 2 155 2 21 1 200 4 108 4 315 1 159 4 279 1 278 1 32 1 285 2 324 1 286 1 243 3 245 1 
292 1 1 1 217 1 93 1 218 1 178 2 95 1 298 2 98 2 187 1 136 1 54 1 103 1 141 1 66 1 265 1 311 1 155 1 20 1 111 1 113 1 161 1 279 1 32 1 285 1 205 1 289 1 245 2 
215 1 2 1 93 3 95 2 183 1 128 1 8 1 222 1 133 1 54 1 102 1 138 1 140 1 227 1 262 1 69 1 265 2 106 1 73 1 20 3 269 1 111 2 26 1 276 1 277 1 33 1 280 1 81 1 281 1 283 2 205 2 85 1 
311 1 155 1 90 1 200 2 295 1 108 4 178 2 159 2 181 1 298 1 97 4 132 2 285 1 66 1 243 2 
34 1 166 1 104 1 23 1 96 1 
34 1 83 1 96 1 
34 1 83 1 96 1 
34 1 83 1 96 1 
34 1 312 1 96 1 
34 1 312 1 96 1 
34 1 312 1 96 1 
34 1 96 1 
6 1 53 1 
215 10 2 1 199 5 218 1 299 5 161 2 8 1 187 1 31 1 237 3 32 2 81 1 103 2 36 2 280 5 283 2 262 1 245 2 
215 2 2 1 199 2 299 1 8 1 130 1 31 1 81 1 36 1 283 2 262 1 245 1 
215 4 2 1 199 2 299 2 8 1 130 1 237 1 32 1 31 1 11 1 280 2 81 1 36 1 283 2 324 1 262 1 245 1 
233 1 215 3 46 1 2 3 199 1 110 1 299 2 161 1 8 3 31 1 237 1 280 2 81 3 103 1 36 1 283 6 262 3 
215 34 46 2 2 5 177 1 181 1 299 12 252 4 8 5 130 3 187 2 11 3 103 3 262 5 233 1 199 16 110 1 315 3 318 1 161 3 278 1 31 1 32 5 237 7 280 18 81 5 36 5 283 10 119 1 324 3 38 1 168 1 245 5 42 1 89 1 
215 8 46 1 199 4 2 2 181 1 299 3 161 1 8 2 187 1 32 1 237 2 280 4 36 1 81 2 103 1 283 4 119 1 262 2 168 1 245 1 
215 6 293 1 199 3 181 1 299 2 161 1 187 1 237 2 32 1 280 3 103 1 119 1 168 1 245 1 
215 4 2 1 199 2 177 1 299 2 8 1 130 1 237 1 32 1 11 1 280 2 81 1 36 1 283 2 324 1 262 1 245 1 
215 7 199 3 315 1 299 2 252 2 130 1 237 1 32 1 278 1 11 1 280 4 36 1 324 1 245 1 89 1 
215 23 46 2 2 2 181 1 299 9 252 2 130 2 8 2 187 1 11 2 103 2 262 2 65 1 199 11 315 2 110 1 161 2 32 3 237 5 321 1 36 4 280 12 81 2 283 4 119 1 324 2 168 1 245 3 89 1 
215 1 280 1 252 1 
215 1 199 1 315 1 
215 6 2 1 199 3 177 1 299 3 8 1 130 1 32 1 237 2 11 1 81 1 280 3 36 1 283 2 324 1 262 1 170 1 245 1 
215 12 2 1 299 2 252 1 8 1 131 1 130 2 52 1 11 2 262 1 195 1 21 1 199 6 313 1 315 1 278 1 31 1 32 2 237 1 36 1 280 6 81 1 283 2 324 2 245 2 
215 6 199 3 299 2 161 1 187 1 32 1 237 1 280 3 103 1 36 1 245 1 
215 3 46 1 199 1 2 1 110 1 299 2 161 1 8 1 237 1 36 1 103 1 280 2 81 1 283 2 119 1 262 1 168 1 
215 2 199 1 2 1 315 1 252 1 8 1 52 1 31 1 278 1 81 1 280 1 283 2 262 1 
215 5 199 3 2 2 315 1 177 1 299 1 252 2 130 1 8 2 52 1 31 1 278 1 36 1 81 2 280 2 283 4 324 1 262 2 245 1 89 1 
215 8 46 1 21 1 199 3 2 2 315 1 299 1 252 1 130 1 131 1 8 2 52 1 237 1 32 1 31 1 278 1 11 1 81 2 280 5 283 4 324 1 262 2 245 1 
215 11 46 1 2 2 299 2 252 1 8 2 131 1 130 2 52 1 11 1 262 2 195 1 21 1 199 7 313 1 315 1 278 1 31 1 32 1 237 1 36 1 280 4 81 2 283 4 324 2 245 2 
215 2 199 1 2 1 315 1 252 1 8 1 52 1 31 1 278 1 81 1 280 1 283 2 262 1 
215 12 2 1 299 2 252 1 8 1 131 1 130 2 52 1 11 2 262 1 195 1 21 1 199 6 313 1 315 1 278 1 31 1 32 2 237 1 36 1 280 6 81 1 283 2 324 2 245 2 
215 8 46 1 21 1 199 3 2 3 315 1 177 1 299 1 252 1 130 1 131 1 8 3 52 1 237 1 32 1 31 1 278 1 11 1 81 3 280 5 283 6 324 1 262 3 245 1 
233 1 215 8 46 1 21 1 199 3 2 3 315 1 299 2 252 1 130 1 131 1 8 3 52 1 237 2 32 1 31 1 278 1 11 1 81 3 280 5 283 6 324 1 262 3 245 1 
215 7 199 3 299 6 161 3 187 1 32 1 237 3 280 4 103 3 36 3 119 2 168 1 245 1 
233 1 215 8 46 1 21 1 199 3 2 3 315 1 299 1 252 1 130 1 131 1 8 3 52 1 237 1 32 1 31 1 278 1 11 1 81 3 280 5 283 6 324 1 262 3 245 1 
55 1 20 1 93 1 205 1 39 1 146 1 276 1 
20 1 93 1 25 1 5 1 319 1 276 1 302 1 55 1 205 1 306 1 39 1 146 1 
106 4 22 1 271 1 128 1 277 4 33 1 281 1 140 1 227 1 14 1 69 4 147 1 326 1 
106 2 269 1 235 1 300 1 277 2 100 1 257 1 33 2 56 1 281 1 140 1 227 1 69 2 87 1 
33 1 106 1 281 1 48 1 323 1 190 1 69 1 128 1 277 1 72 1 
33 1 106 2 196 1 281 1 227 1 140 1 22 1 69 2 114 1 309 1 277 2 
106 5 196 1 22 1 317 1 271 1 128 1 184 1 277 5 100 1 33 2 281 2 140 2 227 3 14 1 69 4 326 1 
106 5 152 1 196 1 22 1 271 1 128 1 184 1 277 5 100 1 33 2 281 2 140 2 227 3 14 1 69 4 326 1 
33 1 106 1 293 1 281 1 227 1 140 1 14 1 271 1 69 1 128 1 277 1 
106 1 20 2 269 1 95 1 93 2 128 1 276 1 277 1 33 1 12 1 138 1 281 1 227 1 140 1 205 1 85 1 69 1 265 1 
217 1 93 2 95 2 100 1 138 1 12 1 140 2 227 3 305 1 69 1 67 1 265 1 106 1 20 2 157 1 269 2 274 1 276 1 277 1 33 1 281 1 205 2 85 1 
217 1 93 2 95 2 100 1 12 1 140 2 227 3 305 1 69 2 67 1 147 1 265 1 106 2 20 2 157 1 316 1 269 2 274 1 276 1 277 2 33 1 281 1 205 2 85 1 
106 3 108 1 269 1 234 1 112 1 274 1 128 1 132 1 277 3 254 1 279 2 100 1 33 1 136 2 165 1 281 1 140 1 227 4 305 1 206 1 69 3 147 1 244 1 
106 3 108 1 269 1 112 1 274 1 128 1 132 1 277 3 254 1 279 2 100 1 33 1 136 2 322 1 281 1 140 1 227 4 305 1 206 1 69 3 147 1 244 1 
149 1 
106 5 196 1 22 1 269 1 317 1 300 1 128 2 160 1 184 1 277 5 257 1 33 3 281 2 140 2 227 3 209 1 69 4 167 1 309 1 149 1 
215 6 43 1 2 2 93 2 95 1 181 1 182 1 299 2 183 1 8 2 187 1 103 1 102 2 12 1 138 1 260 1 227 1 140 1 262 2 68 1 69 1 265 1 106 1 73 1 20 2 199 3 22 1 269 1 26 2 161 1 276 2 277 1 32 1 237 2 33 1 280 3 81 2 281 1 283 4 119 1 205 1 242 1 85 1 168 1 86 1 245 1 213 1 
125 1 175 1 178 1 249 1 296 1 298 1 51 1 128 1 132 1 254 2 136 3 226 1 227 2 66 2 69 1 106 1 311 2 232 1 155 2 108 1 24 1 112 1 277 1 279 3 322 1 285 2 206 1 244 1 
149 1 
106 1 20 2 269 1 316 1 95 1 93 2 128 1 276 1 277 1 33 1 12 1 281 1 227 1 140 1 205 1 85 1 69 1 265 1 
106 1 269 1 300 1 160 1 277 1 100 1 257 1 33 2 281 1 140 1 227 1 209 1 69 1 
154 1 284 1 221 1 276 1 29 1 
154 1 157 1 108 1 217 1 297 1 77 1 4 1 112 1 221 2 276 1 132 1 29 2 279 2 136 2 226 1 284 2 84 1 67 1 325 1 
164 1 154 1 20 1 198 1 93 1 205 1 272 1 221 1 29 1 
154 1 297 1 4 1 

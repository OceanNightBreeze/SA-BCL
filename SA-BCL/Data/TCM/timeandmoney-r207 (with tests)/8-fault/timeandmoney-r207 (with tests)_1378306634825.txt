#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException 96 289 (152,155) (112,300) (112,300) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException 96 289 (152,155) (112,300) (112,300) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException 96 289 (152,155) (112,300) (112,300) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException 96 289 (152,155) (112,300) (112,300) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 96 (34,41,105,188) 231 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException 96 289 (152,155) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException 96 289 (152,155) 215 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException 96 289 (152,155) 215 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 307 93 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 307 93 60 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 176 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 307 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 307 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 307 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 307 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 307 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 307 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 307 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 96 (34,41,105,188) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 96 289 232 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 96 289 42 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 96 289 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4739 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1394 | 1 -> -1
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9614 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | RETURN | 1194 | return null
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | CONDITION | 3975 | if (x) -> if (!x)
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> >>
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
114 1 289 1 2 1 155 1 299 1 96 1 170 3 219 2 173 1 181 2 340 2 312 1 341 3 6 1 91 1 300 1 152 1 234 1 112 1 57 1 
114 1 289 1 2 1 155 1 299 1 96 1 170 3 219 2 173 1 181 2 340 2 312 1 341 3 6 1 91 1 300 1 152 1 234 1 112 1 57 1 
114 1 289 1 2 1 155 1 299 1 96 1 170 3 219 2 173 1 181 2 340 2 312 1 341 3 6 1 91 1 300 1 152 1 234 1 112 1 57 1 
114 1 289 1 2 1 155 1 299 1 96 1 170 3 219 2 173 1 181 2 340 2 312 1 341 3 6 1 91 1 300 1 152 1 234 1 112 1 57 1 
114 1 2 1 231 1 341 2 190 1 238 1 96 1 188 1 170 2 57 1 340 1 181 1 
115 1 2 1 199 1 323 1 170 2 219 1 181 1 340 1 250 1 173 1 341 2 6 1 98 1 91 1 234 1 57 1 
114 1 289 1 2 1 341 2 96 1 219 1 152 1 170 2 57 1 340 2 181 2 
114 1 289 1 2 1 238 1 105 1 96 1 170 3 219 1 181 2 340 2 341 3 152 1 215 1 57 1 
114 1 289 1 2 1 238 1 105 1 96 1 170 3 219 1 181 2 340 2 341 3 152 1 215 1 57 1 
122 1 176 1 197 1 
291 1 211 2 197 1 
352 2 59 2 83 2 245 2 283 1 150 2 305 1 303 2 
165 1 167 1 245 2 246 2 305 1 280 2 49 1 230 1 7 2 29 1 148 1 175 1 191 2 74 1 283 1 150 3 151 1 284 1 216 1 10 1 259 1 156 1 59 3 13 1 263 1 83 2 133 1 265 1 352 2 39 1 110 1 141 1 184 1 303 2 68 1 142 2 94 1 
352 1 88 1 59 1 83 1 209 1 245 1 296 1 150 1 305 1 303 1 
80 1 59 1 158 1 245 1 131 1 338 1 325 1 88 1 52 1 122 1 150 1 111 1 124 1 197 1 
80 1 59 1 83 1 245 1 131 1 325 2 352 1 88 1 52 2 122 1 150 1 111 1 303 1 124 1 197 1 
325 1 267 1 52 1 288 1 47 1 
325 2 52 2 229 1 122 1 233 1 288 1 47 1 197 1 
325 1 52 1 47 1 
59 1 11 1 209 1 83 1 245 1 305 1 325 1 352 1 88 1 52 1 288 1 296 1 150 1 303 1 
197 1 
325 2 52 2 223 1 122 1 233 1 288 1 47 1 197 1 
272 1 350 1 336 1 47 2 220 2 240 1 281 2 201 2 325 5 52 5 314 1 66 1 122 1 233 1 288 2 193 1 257 1 304 1 197 1 
156 1 59 2 237 1 168 1 263 1 245 1 246 1 230 1 352 1 7 1 148 1 191 1 74 1 151 1 150 2 303 1 126 1 284 1 10 1 216 1 
176 1 283 1 
320 1 59 2 83 1 245 2 16 1 352 1 150 2 283 2 303 1 
3 1 168 1 31 1 
59 1 156 1 263 1 246 1 230 1 293 1 7 1 148 1 191 1 74 1 283 1 150 1 151 1 284 1 216 1 10 1 
352 3 59 3 237 1 83 1 245 3 283 1 150 3 303 3 
352 1 88 1 59 1 245 1 296 1 150 1 303 1 
352 1 88 1 320 1 59 1 83 1 245 1 150 1 303 1 16 1 
167 1 245 3 246 1 248 1 305 1 280 1 230 1 52 1 7 1 29 1 148 1 175 1 294 1 191 1 74 1 283 1 151 1 150 4 124 1 126 1 284 1 10 1 216 1 259 1 80 1 156 1 59 4 237 1 13 1 263 1 83 2 131 1 133 1 16 1 325 1 352 3 88 1 39 1 184 1 111 1 303 3 68 1 142 2 94 1 
352 1 59 2 158 1 237 1 245 2 283 1 150 2 14 1 303 1 
80 1 59 3 237 2 83 1 245 3 131 1 16 1 325 1 352 3 52 1 88 1 107 1 294 1 150 3 111 1 124 1 303 3 126 1 197 1 
3 1 59 2 237 1 168 1 83 1 245 2 16 1 352 2 150 2 303 2 
59 1 156 1 263 1 246 1 230 1 7 1 148 1 191 1 74 1 283 1 150 1 151 1 284 1 216 1 10 1 
348 1 59 1 156 1 263 1 246 1 230 1 7 1 252 1 191 1 74 1 283 1 150 1 151 1 284 1 10 1 
128 1 117 1 168 1 13 1 280 2 133 1 86 1 327 1 29 1 175 1 31 1 184 1 142 2 68 1 94 2 347 1 
352 1 88 1 80 1 59 1 269 1 245 1 150 1 303 1 
59 5 158 1 237 2 83 1 245 5 14 1 16 1 324 1 352 4 38 1 150 5 283 1 303 4 126 1 
352 2 88 1 59 2 269 1 245 2 296 1 150 2 303 2 
192 1 316 1 
192 1 316 1 
285 1 243 1 
285 1 243 1 
285 1 243 1 
192 1 316 1 196 1 
90 1 192 1 316 1 
25 1 285 1 192 2 316 2 243 1 286 1 
192 1 316 1 196 1 
192 1 316 1 196 1 
53 1 192 1 316 1 
53 1 192 1 316 1 
53 1 192 1 316 1 
30 1 192 1 132 1 93 1 316 1 307 1 
325 1 52 1 60 1 30 1 192 1 132 1 93 1 316 1 307 1 
312 1 91 1 173 1 
91 1 98 1 173 1 
312 2 37 1 189 1 91 3 98 1 139 1 
312 1 157 1 189 1 91 2 98 1 139 1 
312 1 189 2 91 2 98 1 139 1 
272 1 207 2 209 1 279 1 245 1 47 1 305 1 337 1 211 1 281 1 50 1 27 1 52 5 213 1 254 1 233 1 122 1 296 1 193 2 150 1 257 1 77 1 197 1 59 1 322 1 82 1 11 1 83 1 220 1 201 1 325 5 352 1 88 1 288 4 67 1 303 1 21 1 
209 1 245 1 47 1 305 1 51 1 52 2 295 1 122 1 296 1 150 1 197 1 59 1 11 1 83 1 63 1 325 2 267 1 352 1 88 1 288 2 303 1 
272 3 291 2 207 1 279 1 337 2 281 1 211 4 50 1 27 2 52 3 213 1 254 1 122 1 193 2 77 1 347 1 197 3 350 1 322 1 220 1 201 1 325 3 327 1 288 2 67 1 21 1 
272 5 291 3 207 2 279 1 337 4 211 7 281 1 50 1 27 4 52 4 212 1 213 2 315 1 254 1 122 1 193 4 77 2 347 2 197 4 350 1 322 2 220 1 201 1 325 4 87 1 327 2 288 3 67 2 21 1 
206 1 176 1 
74 1 298 1 
171 1 
156 1 74 1 
206 2 156 1 263 1 171 1 313 1 74 1 55 1 
156 1 263 1 74 1 
120 1 74 1 
24 1 280 6 351 1 172 1 327 1 136 1 242 1 110 3 32 1 123 1 256 1 99 2 76 1 77 1 94 3 143 1 186 1 
24 1 280 6 351 1 172 1 327 1 136 1 242 1 110 3 32 1 123 1 256 1 99 2 76 1 77 1 94 3 143 1 186 1 
24 1 280 6 351 1 172 1 327 1 136 1 242 1 110 3 32 1 123 1 256 1 99 2 76 1 77 1 94 3 143 1 228 1 186 1 
274 1 24 5 208 1 280 30 172 2 308 1 213 3 29 1 175 1 32 2 123 2 256 2 99 9 76 1 77 4 347 3 130 1 322 3 134 3 351 1 222 1 136 1 137 4 327 4 242 4 110 15 184 1 92 1 330 1 68 1 142 2 186 1 94 15 143 2 
24 1 276 1 280 8 172 1 29 2 175 2 54 1 256 1 123 1 32 1 99 3 77 1 351 1 327 1 136 1 242 2 110 4 184 2 330 1 68 2 142 4 143 1 94 4 186 1 
115 1 2 1 246 1 277 1 170 2 173 1 340 1 339 1 312 1 230 1 341 2 7 1 98 1 255 1 191 1 214 1 153 1 318 1 57 1 10 1 12 1 323 1 238 1 219 1 161 1 181 1 326 1 37 1 328 1 91 2 
115 1 246 1 170 3 173 1 340 1 339 1 312 1 230 1 341 3 7 1 98 1 255 1 191 1 214 1 153 1 57 1 10 1 12 1 323 1 238 2 62 1 36 1 219 1 64 1 161 1 181 1 326 1 37 1 328 1 91 2 
115 1 246 1 170 2 339 1 173 1 230 1 312 1 341 2 7 1 98 1 191 1 214 1 153 1 57 1 10 1 323 1 238 2 62 1 219 1 64 1 161 1 326 1 37 1 328 1 91 2 
292 1 156 1 81 1 45 1 246 1 36 1 219 2 170 1 161 2 181 1 340 1 230 1 341 1 97 1 7 1 328 2 191 1 74 1 346 1 153 2 78 1 284 1 10 1 
2 1 246 1 170 1 173 1 340 1 339 1 312 1 230 1 341 1 7 1 98 1 255 1 191 1 214 1 153 1 318 1 10 1 12 1 62 1 219 1 161 1 181 1 326 1 37 1 328 1 91 2 
310 1 
272 2 275 2 279 1 47 6 281 1 230 1 52 5 97 1 7 2 8 1 147 1 233 3 191 2 193 2 150 1 317 1 284 2 197 2 10 1 156 1 59 1 158 1 201 1 325 5 241 4 111 1 20 2 244 2 164 2 70 2 291 2 71 1 335 2 246 2 169 1 245 1 211 2 73 1 338 1 28 1 344 1 122 1 346 1 74 1 257 1 124 1 125 1 80 1 129 2 349 1 180 1 131 1 220 1 221 1 88 1 
244 1 71 1 245 1 169 1 47 2 338 1 52 3 8 1 147 1 233 1 150 1 124 1 125 1 80 1 59 1 158 1 131 1 325 3 88 1 241 2 223 1 111 1 
70 1 71 1 245 1 169 1 47 1 338 1 52 3 8 1 147 1 122 1 233 1 150 1 124 1 125 1 197 1 80 1 59 1 158 1 131 1 325 3 88 1 241 3 223 1 111 1 
244 1 70 1 71 1 335 1 245 1 169 1 47 2 338 1 52 3 8 1 147 1 233 1 122 1 150 1 124 1 125 1 197 1 80 1 59 1 158 1 131 1 325 3 88 1 223 1 241 3 111 1 
272 1 1 1 275 2 47 7 281 1 52 5 8 1 147 1 233 3 150 1 193 1 197 5 9 1 319 1 59 1 158 1 201 1 325 5 241 6 111 1 20 2 113 1 244 4 164 2 70 4 291 2 71 1 335 4 169 1 245 1 338 1 73 1 122 5 125 1 124 1 257 1 178 1 80 1 129 2 180 1 131 1 220 1 88 1 223 1 
272 1 275 2 47 4 281 1 52 4 8 1 147 1 233 2 150 1 193 1 197 2 59 1 158 1 201 1 325 4 241 4 111 1 20 2 164 2 244 2 291 2 70 2 71 1 335 2 245 1 169 1 211 2 338 1 73 1 28 1 122 1 125 1 124 1 257 1 80 1 129 2 180 1 131 1 220 1 88 1 
244 2 164 2 272 1 70 2 291 2 1 1 71 1 275 2 335 2 245 1 169 1 47 4 281 1 73 1 338 1 52 4 8 1 147 1 122 1 233 2 193 1 150 1 124 1 125 1 257 1 197 1 9 1 80 1 129 2 59 1 180 1 158 1 131 1 220 1 201 1 325 4 88 1 241 4 111 1 20 2 113 1 
244 2 164 2 272 1 70 2 291 2 1 1 71 1 275 2 335 2 245 1 169 1 47 4 281 1 73 1 338 1 52 4 8 1 147 1 122 1 233 2 193 1 150 1 124 1 125 1 257 1 197 1 9 1 80 1 129 2 59 1 180 1 158 1 131 1 220 1 201 1 325 4 88 1 241 4 111 1 20 2 113 1 
244 2 272 1 70 2 1 1 71 1 275 2 335 2 245 1 169 1 47 4 211 2 281 1 73 1 338 1 52 4 8 1 147 1 122 1 233 2 297 1 193 1 150 1 124 1 125 1 257 1 197 1 101 1 80 1 129 2 59 1 158 1 131 1 220 1 201 1 325 4 183 2 88 1 268 1 241 4 108 2 111 1 
164 2 272 1 244 3 291 2 1 1 70 3 71 1 275 2 335 3 245 1 169 1 47 5 281 1 73 1 338 1 52 4 8 1 147 1 122 1 233 2 193 1 150 1 257 1 124 1 125 1 197 1 9 1 319 1 80 1 129 2 59 1 180 1 158 1 131 1 220 1 201 1 325 4 88 1 241 5 111 1 20 2 113 1 
164 2 272 1 244 3 291 2 1 1 70 3 71 1 275 2 335 3 245 1 169 1 47 5 281 1 73 1 338 1 52 4 8 1 147 1 122 1 233 2 193 1 150 1 257 1 124 1 125 1 197 1 9 1 319 1 80 1 129 2 59 1 180 1 158 1 131 1 220 1 201 1 325 4 88 1 241 5 111 1 20 2 113 1 
272 1 275 2 47 4 281 1 52 4 8 1 147 1 233 2 150 1 193 1 197 1 59 1 158 1 201 1 325 4 241 4 108 2 111 1 244 2 70 2 71 1 335 2 245 1 169 1 211 2 338 1 73 1 28 1 122 1 297 1 125 1 124 1 257 1 80 1 129 2 131 1 220 1 88 1 183 2 
128 1 13 1 280 5 133 1 351 1 327 1 136 1 29 1 175 1 242 1 176 1 110 2 283 2 32 1 184 1 123 1 99 1 77 1 142 2 68 1 94 3 186 1 
3 5 168 7 208 1 280 9 29 2 213 2 175 2 345 1 31 7 283 1 77 2 259 1 261 1 322 2 13 2 239 1 133 1 134 2 202 1 88 1 137 2 110 6 184 2 332 1 68 2 142 4 227 1 94 3 
3 1 246 1 245 1 280 2 230 1 7 1 293 1 29 1 148 1 175 1 345 1 191 1 74 1 283 1 151 1 150 2 154 1 284 1 126 1 10 1 216 1 258 1 259 1 156 1 59 2 237 1 321 1 263 1 13 1 133 1 352 1 110 1 184 1 141 1 303 1 142 2 68 1 94 1 
168 2 245 1 246 1 280 5 249 1 26 1 230 1 7 1 213 1 29 2 148 1 175 2 345 1 191 1 31 2 74 1 151 1 150 2 77 1 126 1 284 1 10 1 216 1 259 1 156 1 59 2 237 1 322 1 262 1 263 1 13 2 133 2 106 1 352 1 39 1 110 3 184 2 303 1 43 1 142 4 68 2 94 2 
0 1 165 2 277 1 245 1 246 8 72 1 280 2 230 2 7 8 146 1 97 1 29 2 175 2 191 7 74 3 346 1 150 1 284 2 10 2 259 1 236 1 128 1 59 1 156 2 237 1 13 2 62 1 133 2 352 1 329 1 301 1 110 1 184 2 141 1 303 1 354 1 68 2 142 4 94 1 
3 1 168 1 245 1 280 3 29 1 213 1 175 1 345 1 31 1 150 1 99 1 77 1 347 1 59 1 322 1 83 1 13 1 133 1 16 1 352 1 327 1 224 1 242 1 110 1 184 1 303 1 68 1 142 2 94 2 
128 1 168 1 13 1 280 2 133 1 29 1 213 1 175 1 31 1 110 2 184 1 142 2 68 1 33 1 77 1 
128 1 168 1 13 1 280 2 133 1 86 1 327 1 29 1 175 1 31 1 184 1 142 2 68 1 347 1 94 2 
128 1 168 1 322 1 13 1 280 2 133 1 29 1 213 1 175 1 31 1 110 2 184 1 142 2 68 1 77 1 
168 1 13 1 280 2 133 1 29 1 213 1 175 1 31 1 110 2 184 1 354 1 142 2 68 1 33 1 77 1 
168 1 13 1 280 2 133 1 86 1 327 1 29 1 175 1 31 1 184 1 354 1 142 2 68 1 347 1 94 2 
168 1 322 1 13 1 280 2 133 1 29 1 213 1 175 1 31 1 110 2 184 1 354 1 142 2 68 1 77 1 
168 1 322 1 13 1 280 2 133 1 29 1 213 1 175 1 31 1 110 2 184 1 142 2 68 1 77 1 
246 1 280 2 230 1 7 1 29 1 148 1 175 1 191 1 74 1 283 1 151 1 150 1 284 1 10 1 216 1 259 1 156 1 59 1 263 1 13 1 133 1 39 1 110 1 141 1 184 1 142 2 68 1 94 1 
246 1 280 2 230 1 7 1 252 1 29 1 175 1 191 1 74 1 283 1 151 1 150 1 284 1 10 1 259 1 348 1 156 1 59 1 263 1 13 1 133 1 110 1 141 1 184 1 185 1 142 2 68 1 94 1 
168 1 322 1 13 1 280 2 133 1 29 1 213 1 345 1 175 1 31 1 110 2 184 1 142 2 68 1 77 1 
168 1 246 1 277 1 280 2 26 1 230 1 7 1 213 1 29 1 148 1 175 1 191 1 31 1 74 1 151 1 150 1 77 1 10 1 216 1 156 1 59 1 322 1 263 1 13 1 133 1 39 1 110 2 184 1 142 2 68 1 
3 1 24 1 168 1 245 1 280 2 29 1 213 1 175 1 345 1 31 1 150 1 99 1 77 1 127 1 59 1 322 1 83 1 13 1 133 1 16 1 352 1 110 2 184 1 303 1 68 1 142 2 
274 3 24 4 208 1 144 1 145 2 276 1 306 1 280 41 210 1 29 3 213 4 342 4 175 3 32 1 123 1 99 8 77 5 347 4 35 1 322 4 159 1 104 1 217 1 15 1 134 3 351 1 266 1 136 1 137 4 287 1 327 5 89 1 205 1 242 4 110 19 330 1 184 3 302 1 68 3 142 6 186 1 94 22 
274 3 24 3 208 1 144 1 145 2 276 1 306 1 280 38 210 1 29 4 213 4 342 4 175 4 32 1 123 1 99 7 77 5 347 3 35 1 322 4 159 1 104 1 217 1 15 1 134 3 351 1 266 1 136 1 137 4 287 1 327 4 89 1 205 1 242 4 110 19 330 2 184 4 302 1 68 4 142 8 186 1 94 19 
274 2 24 7 208 2 145 1 276 1 280 52 210 1 29 2 213 7 342 4 175 2 32 1 123 1 99 14 77 8 347 7 35 1 322 7 159 1 104 1 217 1 239 2 15 1 134 4 351 1 266 1 136 1 137 4 287 1 327 8 89 1 205 1 242 7 110 26 330 1 184 2 302 1 68 2 142 4 186 1 94 26 
274 1 24 3 208 1 145 1 276 1 306 1 280 19 29 2 213 3 342 2 175 2 99 6 77 3 347 3 103 1 322 3 217 1 104 2 134 1 137 2 287 1 327 3 89 1 242 3 110 9 184 2 302 1 68 2 142 4 94 10 
274 2 24 2 145 2 276 1 280 26 210 1 29 3 213 3 342 4 175 3 99 4 77 3 347 2 35 1 322 3 159 1 104 1 217 1 15 1 134 2 266 1 327 2 287 2 137 2 89 1 205 1 242 2 110 14 330 2 184 3 302 1 68 3 142 6 94 12 
0 1 165 2 246 2 245 2 48 1 280 2 230 1 7 2 146 1 29 1 345 1 253 1 175 1 191 2 74 1 150 2 10 1 79 1 259 1 156 1 59 2 13 1 85 1 133 1 17 1 110 1 184 1 141 1 142 2 68 1 94 1 
12 1 119 1 95 1 246 2 277 1 62 1 173 1 326 1 312 1 230 1 37 1 7 2 91 2 98 1 19 1 191 2 214 1 153 1 10 1 
102 1 12 1 95 1 246 1 62 1 173 1 326 1 312 1 230 1 37 1 7 1 91 2 98 1 191 1 214 1 153 1 10 1 
156 1 81 1 246 1 230 1 7 1 97 1 19 1 109 1 191 1 74 1 346 1 153 1 284 1 10 1 
12 1 119 1 95 1 246 1 62 1 173 1 326 1 312 1 230 1 37 1 7 1 91 2 98 1 19 1 191 1 214 1 153 1 10 1 
273 1 
272 1 66 1 122 1 176 1 193 1 240 1 197 1 
272 1 164 1 291 1 47 1 281 1 211 1 52 1 233 1 122 1 193 1 257 1 197 2 180 1 220 1 201 1 325 1 20 1 
272 9 277 1 278 2 279 2 47 5 281 4 230 4 313 1 52 5 282 1 7 3 191 3 149 2 233 3 193 8 100 2 284 1 10 3 197 8 58 1 156 3 322 2 160 2 240 1 201 4 203 2 325 5 327 2 66 1 18 2 69 1 206 2 291 6 246 3 337 6 211 12 120 2 27 6 213 2 344 1 122 2 74 8 298 3 75 1 257 4 124 2 77 2 347 2 262 2 263 3 220 4 40 2 225 2 270 1 
272 8 291 3 274 1 279 1 47 1 337 5 211 6 281 2 210 1 27 5 311 1 52 1 213 2 344 1 233 1 122 2 193 5 100 2 257 2 77 2 197 5 347 2 35 1 322 2 159 1 220 2 201 2 134 1 266 1 325 1 137 1 327 2 204 1 18 1 205 1 
272 2 23 1 209 1 245 1 305 1 281 1 52 1 296 1 150 1 32 1 123 1 193 2 100 2 257 1 77 2 9 1 59 1 11 1 83 1 220 1 201 1 351 1 325 1 352 1 88 1 327 1 18 1 303 1 
272 1 220 1 240 1 281 1 201 1 66 1 122 1 193 1 257 1 197 1 
272 5 291 5 262 1 322 2 337 5 211 10 27 5 327 2 213 2 18 1 193 5 100 2 77 2 197 5 347 2 
325 1 52 1 122 1 233 1 47 1 197 1 
69 1 272 2 246 4 279 2 47 4 281 2 230 1 52 3 282 2 7 4 97 1 344 2 191 4 233 2 74 1 346 1 193 2 257 1 317 1 284 2 10 1 179 1 156 1 349 1 350 1 220 2 201 2 325 3 226 1 
167 1 246 1 245 2 305 1 280 1 230 1 7 1 29 1 148 1 175 1 191 1 74 1 283 1 150 3 151 1 284 1 216 1 10 1 259 1 59 3 156 1 83 2 263 1 13 1 133 1 352 2 39 1 184 1 303 2 68 1 142 2 94 1 
272 1 291 2 279 1 337 2 220 1 211 4 281 1 201 1 172 1 27 2 344 1 122 2 193 2 257 1 197 4 
30 1 307 1 
30 1 307 1 
30 1 307 1 
30 1 307 1 
30 1 307 1 
30 1 307 1 
30 1 307 1 
30 1 307 1 
192 1 316 1 
274 1 276 1 280 7 29 1 175 1 123 1 32 1 99 1 77 1 35 1 134 1 351 1 327 1 137 1 136 1 242 1 110 3 184 1 68 1 142 2 94 4 186 1 
274 1 334 1 24 1 208 1 276 1 280 10 29 2 213 1 175 2 32 1 123 1 99 2 77 2 35 1 322 1 134 1 351 1 327 1 136 1 137 2 242 1 110 5 184 2 68 2 142 4 186 1 94 5 
274 1 334 1 24 1 276 1 280 18 210 1 29 3 213 2 175 3 32 1 123 1 99 3 77 3 347 2 35 1 322 2 159 1 134 1 351 1 266 1 136 1 137 1 327 3 205 1 242 2 110 8 184 3 330 1 68 3 142 6 186 1 94 10 
274 1 334 1 24 2 276 1 280 16 210 1 29 3 213 2 175 3 32 1 123 1 99 4 77 3 347 1 35 1 322 2 159 1 134 1 351 1 266 1 136 1 137 1 327 2 205 1 242 2 110 9 330 1 184 3 68 3 142 6 186 1 94 7 
274 1 276 1 280 7 29 1 175 1 123 1 32 1 99 1 77 1 35 1 134 1 351 1 327 1 137 1 136 1 242 1 110 3 184 1 68 1 142 2 94 4 186 1 
274 1 24 1 276 1 280 12 210 1 29 1 213 2 175 1 99 2 77 2 347 2 35 1 322 2 159 1 134 1 266 1 137 1 327 2 205 1 242 1 110 6 184 1 68 1 142 2 94 6 
274 1 334 1 24 2 276 1 280 17 210 1 29 4 213 2 175 4 32 1 123 1 99 4 77 3 347 1 35 1 322 2 159 1 134 1 351 1 266 1 136 1 137 1 327 2 205 1 242 2 110 9 184 4 330 2 68 4 142 8 186 1 94 8 
274 1 24 3 276 1 280 16 306 1 210 1 29 4 213 3 175 4 99 6 77 3 347 2 35 1 322 3 159 1 134 1 266 1 137 1 327 2 205 1 242 3 110 9 184 4 330 2 68 4 142 8 94 7 
23 1 24 4 280 10 172 1 351 2 327 2 136 1 242 5 110 5 123 4 32 4 99 9 77 2 94 5 186 1 
274 1 24 1 276 1 280 17 306 1 210 1 29 4 213 2 175 4 32 1 123 1 99 3 77 3 347 1 35 1 322 2 159 1 134 1 351 1 266 1 136 1 137 1 327 2 205 1 242 2 110 9 184 4 330 2 68 4 142 8 186 1 94 8 
24 1 280 7 351 1 327 1 136 1 29 2 175 2 242 1 110 3 184 2 330 1 123 1 32 1 99 2 77 1 142 4 68 2 94 4 186 1 
280 5 351 1 136 1 327 1 176 1 242 1 110 2 123 1 32 1 99 1 77 1 94 3 186 1 
334 1 24 1 322 1 280 4 327 1 29 1 213 1 175 1 242 1 110 2 184 1 99 2 142 2 68 1 77 1 94 2 347 1 
274 1 24 1 208 1 322 1 280 7 134 1 327 1 137 2 213 1 242 1 110 3 99 2 77 1 347 1 94 4 
24 4 208 1 280 22 213 2 29 2 175 2 32 2 123 2 99 8 77 3 347 2 260 1 261 1 322 2 239 1 134 2 351 1 136 1 137 2 327 3 242 4 110 10 330 2 184 2 142 4 68 2 186 1 94 12 
137 1 280 1 94 1 
110 1 280 1 134 1 
334 1 24 1 262 1 322 1 280 6 327 1 29 1 213 1 175 1 242 2 110 3 184 1 99 3 68 1 142 2 77 1 94 3 347 1 
274 1 24 1 276 1 280 12 210 1 29 1 213 2 175 1 99 2 77 2 347 2 35 1 322 2 159 1 134 1 266 1 137 1 327 2 205 1 242 1 110 6 184 1 68 1 142 2 94 6 
24 1 280 6 351 1 327 1 242 1 110 3 123 1 32 1 99 2 77 1 94 3 
260 1 24 1 280 3 136 1 29 1 175 1 242 1 110 1 32 1 123 1 330 1 184 1 99 2 142 2 68 1 94 2 186 1 
23 1 24 2 276 1 280 10 351 1 327 2 29 1 175 1 242 3 110 5 184 1 123 2 32 2 99 5 68 1 142 2 77 2 94 5 
24 1 276 1 280 2 29 1 213 1 175 1 110 2 184 1 99 1 142 2 68 1 77 1 
24 1 322 1 276 1 280 4 327 1 29 1 213 1 175 1 242 1 110 2 184 1 99 2 142 2 68 1 77 1 94 2 347 1 
260 1 24 1 276 1 306 1 280 3 29 3 175 3 242 1 110 1 330 1 184 3 123 1 32 1 99 2 142 6 68 3 94 2 
274 1 334 1 24 5 208 1 276 1 306 1 280 33 308 1 29 5 213 3 175 5 32 3 123 3 99 11 77 5 347 3 260 1 322 3 134 3 351 2 222 1 136 1 137 4 327 5 242 6 110 15 330 2 92 1 184 5 68 5 142 10 186 1 94 18 
162 1 59 1 158 1 245 1 283 1 150 1 14 1 
235 1 290 1 59 1 158 1 245 1 84 1 14 1 309 1 135 1 162 1 283 1 150 1 
230 1 156 1 97 1 7 1 176 1 246 1 191 1 74 1 346 1 284 1 10 1 
156 1 59 2 237 1 263 1 245 1 246 1 230 1 352 1 7 1 191 1 74 1 283 1 151 1 150 2 303 1 284 1 216 1 10 1 
246 1 245 2 120 1 230 1 282 1 7 1 191 1 149 1 74 3 283 1 150 2 151 1 10 1 216 1 80 1 59 2 156 2 237 1 263 2 131 1 352 2 88 1 303 1 
246 2 245 2 120 1 230 1 282 1 7 2 252 1 191 2 149 1 74 3 283 1 150 2 151 1 10 1 80 1 59 2 156 2 237 1 263 2 131 1 182 1 352 2 88 1 303 1 
206 1 116 1 246 3 47 1 120 1 230 1 52 2 282 1 7 3 191 3 149 1 122 1 74 3 298 1 124 1 284 1 10 1 197 1 156 1 263 1 200 1 182 1 325 2 
206 1 156 1 263 1 246 3 47 1 182 1 120 1 325 2 230 1 52 2 282 1 7 3 225 1 122 1 149 1 191 3 74 3 298 1 124 1 284 1 197 1 10 1 
230 1 7 1 329 1 246 1 191 1 10 1 
0 1 165 1 236 1 156 2 263 1 277 1 247 1 246 7 61 1 62 1 72 1 230 3 313 1 7 7 329 1 301 1 191 6 74 3 331 1 284 2 10 2 
245 1 277 1 246 1 280 5 249 1 26 1 230 1 7 1 29 2 148 1 175 2 345 1 191 1 74 1 283 2 32 1 123 1 151 1 150 2 99 1 77 1 10 1 216 1 156 1 59 2 237 1 263 1 13 2 133 2 351 1 352 1 327 1 136 1 17 1 39 1 242 1 110 2 184 2 303 1 142 4 68 2 94 3 186 1 
272 1 69 1 206 1 246 1 278 1 47 2 281 2 230 1 52 3 7 1 122 1 233 1 191 1 149 1 74 2 193 1 298 1 124 1 257 2 284 1 197 1 10 1 156 1 263 1 160 1 220 2 240 1 201 2 325 3 66 1 40 1 225 1 288 1 
206 1 156 1 263 1 246 1 171 1 230 2 313 1 7 1 329 1 191 1 74 1 75 1 10 1 
156 1 246 4 277 1 251 1 182 1 230 1 7 4 97 1 191 4 346 1 74 1 284 1 10 1 
166 1 156 1 263 1 247 1 246 2 61 1 264 1 230 2 282 1 7 2 163 1 191 2 74 1 10 1 
230 1 7 1 91 1 98 1 246 1 191 1 214 1 284 1 173 1 10 1 
0 1 156 1 277 1 246 2 62 1 85 1 230 1 7 2 191 2 74 1 10 1 
0 1 236 1 156 2 246 5 277 1 251 1 230 2 282 1 97 1 7 5 191 4 301 1 346 1 74 3 284 1 10 2 
0 1 156 2 246 5 277 1 251 1 230 2 282 1 97 1 7 5 191 4 301 1 346 1 74 3 194 1 284 1 10 2 
156 1 59 2 237 1 263 1 245 1 246 1 230 1 352 1 7 1 252 1 191 1 74 1 283 1 151 1 150 2 303 1 284 1 10 1 
156 1 263 1 247 1 246 1 61 1 230 2 313 1 282 1 7 1 191 1 74 1 331 1 10 1 
198 1 140 1 283 1 271 1 4 1 
209 1 245 1 305 1 52 1 122 1 296 1 150 1 177 1 197 1 59 1 11 1 83 1 325 1 352 1 88 1 353 1 288 1 271 1 303 1 44 1 
59 1 253 1 245 1 48 1 140 1 150 1 271 1 4 1 79 1 
177 1 271 1 44 1 
115 1 323 1 176 1 57 1 
115 1 341 1 323 1 170 1 57 1 340 1 181 1 
328 1 219 1 170 1 
115 1 2 1 323 1 46 1 218 1 170 3 181 1 340 1 341 3 234 2 195 1 57 1 
115 1 341 2 323 1 190 1 238 1 170 2 57 1 340 1 181 1 
114 1 2 1 341 1 96 1 188 1 170 1 57 1 340 1 181 1 
115 1 2 1 341 1 170 1 57 1 340 1 181 1 
115 2 2 1 341 1 323 1 170 1 340 1 181 1 
115 1 22 1 2 1 170 2 181 2 340 2 341 2 343 1 57 1 333 1 
114 1 289 1 121 1 2 1 341 2 232 1 238 1 96 1 170 2 57 1 340 1 181 1 
115 1 2 1 187 1 323 1 238 1 170 2 181 1 340 1 173 1 312 1 341 2 37 1 98 1 91 2 57 1 
114 1 289 1 2 1 341 2 190 1 238 1 96 1 170 2 42 1 57 1 340 1 181 1 
115 1 2 1 341 1 323 1 170 1 57 1 340 1 181 1 
289 1 114 2 341 2 238 1 96 1 170 2 57 1 340 1 181 1 
115 1 2 1 323 1 238 1 105 1 170 2 181 1 340 1 341 2 41 1 57 1 34 1 
115 1 2 1 323 1 46 1 170 3 181 1 340 1 5 1 341 3 234 2 195 2 57 1 
174 2 56 1 65 1 57 2 
2 1 341 1 118 1 170 1 340 1 181 1 
115 1 121 1 2 1 341 2 323 1 238 1 170 2 57 1 340 1 181 1 
138 1 
115 1 2 1 341 1 323 1 170 1 57 1 340 1 181 1 
115 1 121 1 2 1 341 3 323 1 238 1 234 1 170 3 57 1 340 1 181 1 
289 1 341 1 238 1 96 1 170 1 57 1 
115 1 57 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (67,73) (67,73) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (67,73) (67,73) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (67,73) (67,73) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (67,73) (67,73) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 336 349 187 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 95 21 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 95 21 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 95 21 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 95 21 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 95 21 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 95 21 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 95 21 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 95 21 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 95 21 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 95 21 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 95 21 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 95 21 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (124,292) 234 41 85 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 336 312 207 204 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 336 312 207 204 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 336 312 207 204 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 336 312 207 204 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 336 139 207 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 336 139 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 336 139 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 336 139 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 336 139 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 336 139 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 336 139 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 336 139 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 336 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 41 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 336 139 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 336 349 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> <<
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | OPERATOR | 7412 | >= -> ==
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V | STATEMENT | 577 | stmt -> ;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONSTANT | 6207 | 1 -> 0
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7790 | return null
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3831 | 1 -> -1
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 894 | stmt -> ;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | STATEMENT | 5839 | stmt -> ;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
162 1 123 1 283 1 88 1 209 1 67 1 164 1 73 1 68 1 182 1 331 1 
162 1 123 1 283 1 88 1 209 1 67 1 164 1 73 1 68 1 182 1 331 1 
162 1 123 1 283 1 88 1 209 1 67 1 164 1 73 1 68 1 182 1 331 1 
162 1 123 1 283 1 88 1 209 1 67 1 164 1 73 1 68 1 182 1 331 1 
141 1 142 3 162 1 88 4 19 1 77 2 68 1 331 1 307 1 70 2 311 3 195 1 268 1 209 4 298 1 171 1 322 1 200 1 
162 1 88 2 68 1 164 1 331 1 307 1 311 1 43 1 209 2 270 1 171 1 182 1 322 1 9 1 200 1 111 1 
142 1 162 1 88 3 19 1 77 1 68 2 164 1 331 2 311 2 317 1 209 3 322 1 200 1 
141 1 142 7 29 1 162 1 88 9 19 3 77 4 68 2 164 1 331 2 307 1 243 1 70 2 311 5 195 1 268 1 317 1 209 9 298 1 171 1 138 1 322 1 200 1 340 1 
141 1 142 7 29 1 162 1 88 9 19 3 77 4 68 2 164 1 331 2 307 1 243 1 70 2 311 5 195 1 268 1 317 1 209 9 298 1 171 1 138 1 322 1 200 1 340 1 
236 1 262 1 266 1 
236 1 114 2 274 1 
347 1 156 2 6 2 97 2 295 2 54 1 84 2 205 2 
226 1 38 2 176 1 228 1 279 1 91 1 254 1 177 1 22 1 281 1 256 2 255 1 156 3 6 2 45 1 158 1 118 1 47 1 160 1 27 2 140 1 202 1 97 2 98 2 163 1 54 1 33 1 100 1 205 3 79 1 347 1 295 2 350 2 146 1 271 1 319 1 84 2 
151 1 156 1 6 1 97 1 295 1 133 1 54 1 84 1 205 1 335 1 
324 1 236 1 262 1 151 1 1 1 56 1 90 1 205 1 6 1 156 1 337 1 339 1 108 1 275 1 
324 1 236 1 262 1 97 1 151 1 56 2 90 1 205 1 6 1 156 1 295 1 337 1 84 1 339 1 275 2 
216 1 250 1 56 1 20 1 275 1 
236 1 262 1 175 1 233 1 250 1 56 2 20 1 275 2 
250 1 56 1 275 1 
151 1 97 1 133 1 54 1 20 1 56 1 205 1 335 1 6 1 156 1 295 1 84 1 285 1 275 1 
236 1 
236 1 262 1 175 1 250 1 56 2 20 1 39 1 275 2 
236 1 262 1 175 1 185 1 342 1 152 1 250 2 20 2 56 5 278 1 223 1 154 2 130 1 208 1 245 2 191 1 94 2 131 1 275 5 
97 1 98 1 330 1 279 1 91 1 205 2 177 1 292 1 22 1 281 1 255 1 256 1 6 1 156 2 295 1 45 1 319 1 47 1 247 1 27 1 
347 1 266 1 
97 1 315 1 205 2 101 1 6 2 156 2 347 2 295 1 84 1 
234 1 193 1 292 1 
98 1 279 1 205 1 91 1 177 1 22 1 256 1 255 1 281 1 347 1 156 1 45 1 318 1 319 1 47 1 27 1 
347 1 156 3 6 3 97 3 295 3 84 1 205 3 247 1 
151 1 156 1 6 1 97 1 295 1 133 1 205 1 
101 1 151 1 156 1 6 1 97 1 315 1 295 1 84 1 205 1 
324 1 151 1 226 1 38 2 176 1 330 1 90 1 279 1 91 1 177 1 22 1 281 1 255 1 217 1 256 1 156 4 6 3 45 1 337 1 158 1 118 1 47 1 339 1 160 1 27 1 140 1 202 1 288 1 97 3 98 1 163 1 54 1 56 1 100 1 205 4 79 1 101 1 347 1 295 3 350 1 319 1 84 2 247 1 275 1 
347 1 156 2 6 2 97 1 295 1 1 1 205 2 247 1 286 1 
324 1 236 1 151 1 97 3 56 1 330 1 90 1 205 3 153 1 217 1 101 1 6 3 156 3 295 3 337 1 84 1 339 1 247 2 275 1 
97 2 193 1 205 2 292 1 101 1 6 2 156 2 295 2 84 1 247 1 
98 1 279 1 205 1 91 1 177 1 22 1 256 1 255 1 281 1 347 1 156 1 45 1 319 1 47 1 27 1 
98 1 290 1 279 1 205 1 91 1 177 1 22 1 256 1 281 1 347 1 156 1 45 1 319 1 181 1 27 1 
213 1 226 1 193 2 38 2 176 1 40 1 329 1 334 1 23 1 234 2 118 1 24 1 25 1 140 1 122 1 237 1 124 1 163 1 100 2 79 1 292 2 244 1 350 4 271 2 
151 1 156 1 6 1 97 1 295 1 90 1 205 1 49 1 
276 1 97 4 1 1 330 1 205 5 101 1 44 1 6 5 156 5 347 1 295 4 84 1 247 2 286 1 
151 1 156 2 6 2 97 2 295 2 133 1 205 2 49 1 
251 1 57 1 
251 1 57 1 
87 1 242 1 
87 1 242 1 
87 1 242 1 
263 1 251 1 57 1 
263 1 251 1 57 1 
263 1 251 1 57 1 
180 1 251 1 57 1 
143 1 87 1 251 2 57 2 242 1 12 1 
51 1 251 1 57 1 
51 1 251 1 57 1 
51 1 251 1 57 1 
113 1 236 1 174 2 313 1 66 2 341 1 56 2 264 3 251 2 57 2 34 1 12 1 232 2 196 1 258 1 148 1 352 2 50 2 275 2 
66 1 192 1 251 1 42 1 6 2 156 2 232 1 180 1 50 1 97 2 341 1 239 1 264 1 56 1 291 1 57 1 205 2 347 1 295 2 61 1 86 1 352 1 275 1 248 1 
268 1 171 1 307 1 
171 1 307 1 43 1 
268 2 289 1 227 1 344 1 307 3 43 1 
268 1 289 1 227 1 194 1 307 2 43 1 
268 1 289 2 227 1 307 2 43 1 
114 3 175 1 17 1 152 2 250 1 20 4 329 1 40 1 5 2 278 1 154 1 42 1 115 1 230 1 310 1 94 1 235 1 236 2 10 2 262 1 237 1 56 5 244 1 103 1 348 2 61 1 130 3 245 1 320 1 274 1 275 5 248 1 
114 9 175 1 17 2 152 6 250 6 20 7 329 3 40 3 5 6 278 1 154 2 229 5 230 2 216 5 94 2 235 1 96 1 74 1 236 5 185 1 10 6 262 1 237 3 56 9 265 1 244 3 103 3 130 8 245 2 297 1 132 1 273 1 274 3 248 4 275 9 
114 4 17 1 152 2 20 2 329 1 40 1 5 2 154 1 115 1 230 1 94 1 236 3 262 1 185 1 10 2 237 1 56 3 244 1 348 1 103 1 130 3 245 1 320 1 274 2 275 3 248 1 
114 7 17 1 152 4 20 3 329 2 40 2 5 4 154 1 115 1 230 1 94 1 96 1 236 4 262 1 10 4 185 1 237 2 56 4 244 2 348 2 103 2 130 5 245 1 320 1 132 1 273 1 274 3 275 4 248 2 
266 1 22 1 212 1 
211 1 22 1 
58 1 
319 1 22 1 
125 1 277 1 58 1 22 3 281 1 319 1 212 2 
281 1 319 1 22 1 
269 1 22 1 
122 2 52 1 237 1 55 1 40 1 4 1 78 1 100 3 334 3 350 7 338 1 271 4 137 1 179 2 15 1 107 1 249 1 
122 2 52 1 237 1 55 1 40 1 4 1 78 1 100 3 334 3 350 7 338 1 271 4 137 1 179 2 15 1 107 1 249 1 
122 2 52 1 237 1 55 1 40 1 4 1 78 1 100 3 334 3 218 1 350 7 338 1 271 4 137 1 179 2 15 1 107 1 249 1 
336 1 53 1 349 1 350 3 271 2 179 1 187 1 199 1 100 1 107 1 15 2 
226 2 38 4 40 1 4 1 334 4 231 1 338 1 137 1 118 2 179 2 120 1 122 3 52 1 237 1 163 2 55 1 343 1 100 4 79 2 350 9 271 5 107 1 15 1 249 1 
325 1 88 2 68 1 331 1 307 2 332 1 333 1 252 1 177 1 69 1 311 1 43 1 72 1 256 1 136 1 45 1 117 1 200 1 27 1 161 1 142 1 162 1 98 1 164 1 344 1 268 1 209 2 210 1 171 1 322 1 
150 1 88 3 68 1 331 1 307 2 332 1 333 1 252 1 177 1 69 1 311 1 43 1 72 1 256 1 136 1 45 1 200 1 27 1 161 1 142 2 98 1 344 1 164 1 166 1 268 1 209 3 62 1 210 1 171 1 322 1 
88 2 307 2 332 1 252 1 177 1 69 1 311 1 43 1 72 1 256 1 136 1 45 1 200 1 27 1 161 1 142 2 98 1 164 1 344 1 166 1 268 1 209 2 62 1 171 1 322 1 
150 1 88 1 68 1 279 1 331 1 177 1 332 2 69 2 22 1 72 2 256 1 92 1 45 1 260 1 27 1 314 1 98 1 164 2 206 1 293 1 224 1 209 1 319 1 
325 1 162 1 88 1 98 1 344 1 164 1 68 1 331 1 307 2 177 1 252 1 333 1 166 1 332 1 69 1 43 1 256 1 72 1 136 1 268 1 45 1 209 1 210 1 171 1 27 1 161 1 
32 1 
324 1 151 1 175 1 1 1 250 2 152 1 2 1 90 1 279 2 278 1 21 1 154 1 177 1 230 1 116 1 22 1 256 2 156 1 6 1 45 1 337 1 94 1 339 1 95 1 119 1 27 2 184 1 98 2 56 3 205 1 267 1 293 1 294 1 224 1 130 1 245 1 319 1 108 1 275 3 
324 1 151 1 1 1 56 2 90 1 21 1 205 1 116 1 6 1 156 1 337 1 339 1 108 1 95 1 119 1 275 2 184 1 
324 1 151 1 1 1 56 2 90 1 21 1 205 1 116 1 6 1 156 1 337 1 339 1 108 1 95 1 119 1 275 2 184 1 
324 1 151 1 1 1 56 2 90 1 21 1 205 1 116 1 6 1 156 1 337 1 339 1 108 1 95 1 119 1 275 2 184 1 
324 1 151 1 175 1 250 1 1 1 56 3 39 1 90 1 205 1 21 1 116 1 6 1 156 1 337 1 339 1 108 1 95 1 119 1 275 3 184 1 
324 1 151 1 1 1 56 2 90 1 278 1 205 1 21 1 154 1 116 1 156 1 6 1 337 1 245 1 94 1 339 1 108 1 95 1 119 1 275 2 184 1 
324 1 151 1 1 1 56 2 90 1 21 1 205 1 116 1 6 1 156 1 337 1 339 1 108 1 95 1 119 1 275 2 184 1 
324 1 151 1 1 1 56 2 90 1 21 1 205 1 116 1 6 1 156 1 337 1 339 1 108 1 95 1 119 1 275 2 184 1 
324 1 151 1 1 1 56 2 90 1 21 1 205 1 116 1 6 1 156 1 337 1 339 1 108 1 95 1 119 1 275 2 184 1 
324 1 151 1 1 1 56 2 90 1 21 1 205 1 116 1 6 1 156 1 337 1 339 1 108 1 95 1 119 1 275 2 184 1 
324 1 151 1 1 1 56 2 90 1 21 1 205 1 116 1 6 1 156 1 337 1 339 1 108 1 95 1 119 1 275 2 184 1 
324 1 151 1 1 1 56 2 90 1 278 1 205 1 21 1 154 1 116 1 156 1 6 1 337 1 245 1 94 1 339 1 108 1 95 1 119 1 275 2 184 1 
193 1 226 1 38 2 176 1 40 1 4 1 334 2 23 1 234 1 338 1 137 1 118 1 179 1 140 1 122 2 52 1 237 1 163 1 100 3 266 1 79 1 292 1 347 2 350 6 271 3 249 1 
53 1 226 1 163 1 176 1 38 2 100 1 79 1 41 1 292 3 234 3 350 2 271 1 169 1 118 1 85 1 199 1 140 1 
193 1 226 1 176 1 38 2 330 1 305 1 279 1 228 1 91 1 177 1 22 1 281 1 255 1 256 1 156 2 6 1 45 1 47 1 118 1 158 1 27 1 140 1 97 1 98 1 163 1 205 2 100 1 79 1 128 1 347 1 295 1 350 2 318 1 169 1 271 1 319 1 247 1 110 1 
38 6 176 3 40 3 4 1 91 2 177 2 256 3 255 2 6 1 45 2 137 1 179 1 47 2 183 2 140 3 52 1 97 1 98 3 55 4 186 1 100 10 103 2 271 10 319 2 63 2 226 3 193 7 328 2 330 1 329 2 228 1 279 1 334 8 22 2 281 2 156 3 234 7 338 1 158 1 118 3 27 3 202 2 122 4 287 2 237 3 163 3 31 1 205 3 166 1 79 3 292 7 244 2 347 2 295 1 350 20 169 1 300 1 247 1 249 1 
302 1 226 2 38 4 176 2 279 2 228 1 177 2 309 1 254 2 22 3 23 1 256 7 156 1 6 1 45 2 117 1 118 2 158 1 219 1 27 8 140 2 97 1 98 8 163 2 76 1 205 1 100 1 166 1 79 2 293 1 295 1 224 1 105 1 350 2 246 1 271 1 319 2 65 1 247 1 
193 1 226 1 38 2 176 1 40 1 329 1 308 1 334 1 6 1 156 1 234 1 118 1 140 1 122 1 97 1 237 1 163 1 205 1 100 2 79 1 292 1 244 1 101 1 103 1 295 1 350 3 169 1 271 1 84 1 
193 1 226 1 163 1 55 1 176 1 38 2 40 1 79 1 334 1 292 1 23 1 244 1 234 1 350 2 271 2 118 1 24 1 140 1 
122 1 237 1 193 1 226 1 163 1 176 1 38 2 329 1 100 2 79 1 334 1 292 1 23 1 234 1 350 2 118 1 25 1 140 1 
226 1 193 2 38 2 176 1 40 1 329 1 334 2 23 1 234 2 118 1 140 1 122 1 237 1 163 1 55 1 100 2 79 1 292 2 244 1 103 1 350 4 271 2 
193 1 226 1 163 1 55 1 176 1 38 2 40 1 79 1 334 1 292 1 244 1 234 1 105 1 350 2 271 2 118 1 24 1 140 1 
122 1 237 1 193 1 226 1 163 1 176 1 38 2 329 1 100 2 79 1 334 1 292 1 234 1 105 1 350 2 118 1 25 1 140 1 
226 1 193 2 38 2 176 1 40 1 329 1 334 2 234 2 118 1 140 1 122 1 237 1 163 1 55 1 100 2 79 1 292 2 244 1 103 1 105 1 350 4 271 2 
226 1 193 2 38 2 176 1 40 1 329 1 334 2 234 2 118 1 140 1 122 1 237 1 163 1 55 1 100 2 79 1 292 2 244 1 103 1 350 4 271 2 
226 1 176 1 38 2 228 1 279 1 91 1 177 1 22 1 281 1 255 1 256 1 156 1 45 1 47 1 118 1 158 1 27 1 202 1 140 1 98 1 163 1 205 1 100 1 79 1 347 1 350 2 271 1 319 1 
226 1 176 1 38 2 228 1 279 1 91 1 177 1 22 1 281 1 256 1 156 1 45 1 93 1 118 1 158 1 181 1 27 1 140 1 98 1 163 1 290 1 205 1 100 1 79 1 347 1 350 2 271 1 319 1 
226 1 193 2 38 2 176 1 40 1 329 1 334 2 234 2 118 1 140 1 122 1 237 1 163 1 55 1 100 2 79 1 292 2 244 1 103 1 350 4 271 2 169 1 
193 2 226 1 176 1 38 2 329 1 40 1 91 1 177 1 334 2 22 1 281 1 255 1 256 1 156 1 234 2 45 1 117 1 47 1 118 1 27 1 202 1 140 1 122 1 237 1 98 1 163 1 55 1 100 2 205 1 79 1 292 2 244 1 103 1 350 4 271 2 319 1 63 1 
226 1 214 1 193 1 38 2 176 1 329 1 40 1 334 1 6 1 156 1 234 1 118 1 140 1 97 1 237 1 163 1 55 1 100 1 205 1 79 1 292 1 244 1 101 1 103 1 295 1 350 3 169 1 271 2 84 1 
312 1 53 1 226 1 163 1 38 2 343 1 204 1 100 2 79 1 336 1 207 1 350 4 271 2 118 1 159 1 197 1 199 1 
312 1 53 1 226 1 163 1 38 2 343 1 204 1 100 2 79 1 336 1 207 1 350 4 271 2 118 1 159 1 197 1 199 1 
312 1 53 1 226 1 163 1 38 2 343 1 204 1 100 2 79 1 336 1 207 1 350 4 271 2 118 1 159 1 197 1 199 1 
312 1 53 1 226 1 163 1 38 2 343 1 204 1 100 2 79 1 336 1 207 1 350 4 271 2 118 1 159 1 197 1 199 1 
312 2 53 2 226 1 163 1 38 2 343 1 204 1 100 4 79 1 336 2 207 2 350 8 271 4 118 1 197 1 159 2 199 2 139 1 
313 1 66 1 232 1 196 1 170 1 251 1 352 1 57 1 12 1 50 1 
192 1 180 1 
66 1 232 1 134 1 126 1 221 1 251 1 352 1 57 1 50 1 
236 1 174 1 313 1 341 1 66 1 56 1 264 2 251 1 57 1 34 1 12 1 232 1 196 1 258 1 148 1 352 1 275 1 50 1 
236 1 174 1 313 1 341 1 66 1 56 1 264 2 251 1 57 1 34 1 12 1 232 1 196 1 258 1 148 1 352 1 275 1 50 1 
236 1 174 1 313 1 341 1 66 1 56 1 264 2 251 1 57 1 34 1 12 1 232 1 196 1 258 1 148 1 352 1 275 1 50 1 
143 1 263 1 327 1 
143 1 263 1 327 1 
51 1 304 1 
143 1 51 1 304 1 
291 1 86 1 
174 1 66 1 192 1 20 1 251 1 42 1 156 2 6 2 232 1 180 1 50 1 97 2 239 1 56 1 264 1 291 1 205 2 57 1 34 1 80 1 347 1 61 1 295 2 86 1 352 1 275 1 248 1 
263 1 327 1 
143 1 51 1 304 1 
18 1 226 1 176 1 38 2 228 1 177 1 253 1 309 1 254 2 22 1 256 2 156 2 6 2 45 1 46 1 118 1 158 1 27 2 140 1 98 2 163 1 205 2 100 1 79 1 13 1 350 2 246 1 169 1 271 1 319 1 272 1 
98 2 344 1 280 1 307 2 177 1 166 1 333 1 252 1 69 1 43 1 256 2 136 1 268 1 45 1 83 1 117 1 171 1 321 1 27 2 
98 1 344 1 307 2 166 1 333 1 252 1 177 1 69 1 43 1 256 1 136 1 268 1 45 1 83 1 171 1 7 1 27 1 
98 1 279 1 177 1 69 1 22 1 206 1 293 1 256 1 224 1 45 1 319 1 321 1 172 1 27 1 
98 1 344 1 280 1 307 2 177 1 166 1 333 1 252 1 69 1 43 1 256 1 136 1 268 1 45 1 83 1 171 1 321 1 27 1 
129 1 
236 1 262 1 130 1 208 1 152 1 223 1 266 1 
114 1 175 1 152 1 250 1 278 1 154 1 257 1 94 1 236 2 262 1 56 1 189 1 60 1 130 1 245 1 274 1 275 1 
301 2 175 3 303 2 250 5 40 2 5 6 177 4 256 3 45 3 178 2 94 4 48 1 183 2 262 2 10 6 98 3 56 5 188 2 223 1 269 2 103 2 104 1 106 2 319 3 274 6 275 5 114 12 152 8 329 2 278 4 279 1 154 4 230 2 71 1 22 10 155 1 281 3 117 1 339 2 201 2 27 3 236 8 237 2 125 1 240 2 244 2 82 1 294 1 208 1 130 9 245 4 211 3 36 2 212 2 
114 6 175 1 250 1 152 5 89 1 40 2 329 2 5 5 278 2 154 2 230 1 336 1 94 2 199 1 139 1 236 5 10 5 53 1 144 1 262 2 237 2 238 1 56 1 220 1 188 2 244 2 102 1 103 2 294 1 130 8 245 2 351 1 36 1 274 3 275 1 
151 1 133 1 152 2 3 1 40 2 4 1 278 1 154 1 335 1 156 1 6 1 94 1 338 1 285 1 97 1 237 1 54 1 56 1 188 2 205 1 295 1 130 2 245 1 84 1 36 1 64 1 249 1 275 1 
236 1 262 1 152 1 278 1 154 1 223 1 208 1 130 1 245 1 94 1 
114 10 236 5 10 5 237 2 152 5 40 2 329 2 188 2 5 5 244 2 103 2 130 5 36 1 274 5 183 1 
236 1 262 1 175 1 250 1 56 1 275 1 
16 1 175 2 250 4 152 2 2 1 306 1 278 1 279 2 154 2 177 3 230 2 22 2 71 1 281 1 256 4 45 2 94 2 8 1 48 2 26 1 27 4 185 1 28 1 98 4 56 3 241 1 267 1 293 1 294 2 224 1 130 2 245 2 319 2 275 3 
226 1 38 2 176 1 279 1 91 1 177 1 22 1 256 1 255 1 281 1 156 3 6 2 45 1 158 1 118 1 47 1 160 1 27 1 202 1 140 1 97 2 98 1 163 1 54 1 100 1 205 3 79 1 347 1 295 2 350 1 319 1 84 2 
114 4 236 4 10 2 262 2 152 2 5 2 278 1 154 1 230 1 294 1 130 1 245 1 94 1 179 1 274 2 
282 1 352 1 50 1 
282 1 352 1 50 1 
282 1 352 1 50 1 
313 1 0 1 291 1 352 1 50 1 
352 1 316 1 50 1 
352 1 316 1 50 1 
352 1 316 1 50 1 
352 1 50 1 
251 1 57 1 
336 1 53 1 350 2 163 1 226 1 271 1 38 2 118 1 343 1 199 1 100 1 139 1 79 1 
336 1 53 1 75 1 350 2 163 2 226 2 271 1 38 4 343 1 118 2 199 1 100 1 139 1 79 2 
226 3 38 6 89 1 40 3 329 2 4 1 334 4 336 1 338 1 137 1 179 1 118 3 199 1 139 1 120 1 122 3 52 1 75 1 53 1 144 1 237 3 163 3 55 1 343 1 220 1 100 10 79 3 244 2 103 2 350 19 351 1 271 9 249 1 
336 1 53 1 350 2 163 1 226 1 271 1 38 2 118 1 343 1 199 1 100 1 139 1 79 1 
336 1 53 1 350 2 163 1 226 1 271 1 38 2 118 1 343 1 199 1 100 1 139 1 79 1 
226 1 38 2 40 2 329 2 89 1 334 2 336 1 118 1 199 1 139 1 122 1 53 1 144 1 237 2 163 1 55 1 343 1 220 1 100 6 79 1 244 2 103 2 350 12 351 1 271 6 
336 1 53 1 75 1 350 2 163 2 226 2 271 1 38 4 118 2 343 1 199 1 100 1 139 1 79 2 
336 1 167 1 53 1 350 2 163 2 226 2 271 1 38 4 343 1 118 2 199 1 100 1 139 1 79 2 
122 3 52 2 237 1 55 3 40 1 4 3 100 4 334 6 350 7 338 1 271 3 137 1 249 3 
336 1 167 1 53 1 350 2 163 2 226 2 271 1 38 4 343 1 118 2 199 1 100 1 139 1 79 2 
122 2 52 1 237 1 226 2 163 2 55 1 38 4 40 1 4 1 100 4 79 2 334 3 350 8 338 1 271 4 137 1 179 1 118 2 120 1 249 1 
122 2 52 1 237 1 40 1 4 1 100 3 266 1 334 2 350 6 338 1 271 3 137 1 179 1 249 1 
122 1 75 1 237 1 226 1 163 1 55 1 38 2 329 1 40 1 100 2 79 1 334 2 244 1 103 1 350 4 271 2 118 1 
336 1 53 1 350 2 271 1 199 1 100 1 
53 1 350 2 271 1 199 1 100 1 41 1 
53 1 350 1 100 1 
350 1 271 1 199 1 
122 2 75 1 237 1 163 1 226 1 55 1 38 2 40 1 329 1 100 3 79 1 334 3 244 1 103 1 350 6 271 3 118 1 183 1 
336 1 53 1 350 2 163 1 226 1 271 1 38 2 118 1 343 1 199 1 100 1 139 1 79 1 
122 1 237 1 55 1 40 1 4 1 100 3 334 2 350 6 338 1 271 3 249 1 
122 1 52 1 226 1 163 1 55 1 38 2 4 1 100 2 79 1 334 2 350 3 271 1 137 1 118 1 249 1 149 1 120 1 
122 3 237 2 163 1 226 1 55 2 38 2 343 1 40 2 4 2 100 5 79 1 334 5 350 10 271 5 338 1 118 1 64 1 249 2 
226 1 163 1 55 1 38 2 343 1 40 1 79 1 334 1 244 1 350 2 271 2 118 1 
122 1 237 1 226 1 163 1 55 1 38 2 329 1 343 1 40 1 100 2 79 1 334 2 244 1 103 1 350 4 271 2 118 1 
122 1 226 3 163 3 55 1 38 6 343 1 4 1 100 2 79 3 334 2 167 1 350 3 271 1 118 3 120 1 149 1 249 1 
75 1 53 1 226 3 163 3 38 6 343 1 100 1 79 3 336 1 167 1 349 1 350 2 271 1 118 3 199 1 
37 1 347 1 156 1 6 1 1 1 205 1 286 1 
37 1 261 1 1 1 145 1 205 1 59 1 347 1 6 1 156 1 14 1 323 1 286 1 
256 1 224 1 45 1 98 1 319 1 279 1 266 1 177 1 27 1 22 1 293 1 
97 1 98 1 279 1 91 1 205 2 177 1 22 1 281 1 256 1 255 1 347 1 6 1 156 2 295 1 45 1 319 1 247 1 27 1 
301 1 151 1 90 1 91 1 177 1 22 3 255 1 256 1 281 2 156 2 6 2 45 1 337 1 48 1 27 1 97 1 98 1 205 2 347 1 269 1 295 2 319 2 247 1 
301 1 151 1 90 1 91 1 177 1 22 3 256 2 281 2 156 2 6 2 45 1 337 1 48 1 27 2 97 1 98 2 222 1 290 1 205 2 347 1 269 1 295 2 319 2 247 1 
301 1 236 1 262 1 98 3 250 1 56 2 222 1 279 1 177 1 22 4 281 1 256 3 269 1 45 1 319 1 211 1 339 1 48 1 109 1 27 3 121 1 275 2 212 1 
301 1 236 1 262 1 98 3 250 1 56 2 222 1 279 1 177 1 22 4 281 1 256 3 269 1 45 1 106 1 319 1 211 1 339 1 48 1 27 3 275 2 212 1 
256 1 45 1 98 1 76 1 177 1 27 1 
28 1 326 1 98 7 302 1 125 1 76 1 279 2 241 1 254 1 166 1 177 3 22 3 256 6 281 1 45 2 246 1 117 1 319 2 65 1 219 1 27 7 
38 4 176 2 40 1 4 1 91 1 177 1 255 1 256 1 6 1 45 1 137 1 47 1 179 1 140 2 52 1 97 1 98 1 100 3 271 3 319 1 272 1 63 1 193 1 226 2 334 2 22 1 281 1 156 2 234 1 338 1 117 1 118 2 27 1 202 1 287 1 122 2 237 1 163 2 205 2 79 2 292 1 347 2 295 1 350 6 169 1 247 1 249 1 
175 1 303 1 152 1 250 2 20 1 279 1 278 2 154 2 71 1 22 2 256 1 94 2 178 1 339 1 201 1 27 1 236 1 262 1 98 1 56 3 223 1 130 1 208 1 245 2 106 1 211 1 275 3 212 1 
98 2 125 1 76 1 177 2 155 1 22 2 256 2 281 1 45 1 117 1 319 1 27 2 212 1 
98 4 222 1 279 1 135 1 177 1 293 1 22 1 256 4 224 1 45 1 117 1 319 1 27 4 
28 1 98 2 31 1 306 1 241 1 177 2 22 1 256 2 281 1 45 1 319 1 48 1 27 2 26 1 
256 1 136 1 45 1 98 1 171 1 279 1 307 1 177 1 27 1 43 1 
98 2 166 1 177 1 22 1 256 2 45 1 46 1 246 1 117 1 319 1 27 2 
98 5 302 1 279 1 135 1 177 2 293 1 22 3 256 4 224 1 45 2 246 1 117 1 319 2 48 1 27 5 219 1 
98 5 279 1 135 1 177 2 293 1 22 3 256 4 224 1 157 1 45 2 246 1 117 1 319 2 48 1 27 5 219 1 
97 1 98 1 290 1 279 1 91 1 205 2 177 1 22 1 281 1 256 1 347 1 6 1 156 2 295 1 45 1 319 1 247 1 27 1 
28 1 326 1 98 1 125 1 241 1 177 2 22 1 256 1 281 1 45 1 319 1 48 1 27 1 
112 1 35 1 156 1 6 1 18 1 13 1 225 1 205 1 253 1 
147 1 259 1 225 1 
112 1 35 1 347 1 225 1 353 1 
112 2 324 1 236 1 262 1 151 1 20 1 56 2 90 1 99 1 217 1 35 2 347 1 337 1 147 1 339 1 225 1 259 1 353 2 275 2 
322 1 266 1 200 1 311 1 
88 1 209 1 68 1 331 1 322 1 200 1 311 1 
209 1 164 1 332 1 
162 1 88 3 203 1 68 1 331 1 311 1 346 1 190 1 209 3 9 2 322 1 200 1 
142 1 88 2 209 2 68 1 331 1 322 1 200 1 70 1 311 1 
162 1 88 1 77 1 68 1 331 1 307 1 311 1 268 1 209 1 298 1 171 1 
162 1 88 1 209 1 68 1 331 1 322 1 311 1 
162 1 88 1 209 1 68 1 331 1 322 2 200 1 
162 1 88 2 68 2 331 2 311 1 81 1 209 2 198 1 284 1 322 1 
142 2 162 1 29 1 88 3 19 1 77 1 68 1 331 1 311 2 209 3 322 1 200 1 340 1 
142 1 162 1 88 2 68 1 344 1 331 1 307 2 311 1 43 1 345 1 268 1 209 2 171 1 322 1 200 1 
142 2 162 1 88 4 19 1 77 1 68 2 331 2 70 1 311 2 195 1 209 4 322 1 200 1 
162 1 88 1 209 1 68 1 331 1 322 1 200 1 311 1 
142 2 88 4 19 1 77 1 68 1 331 1 11 1 311 3 346 1 190 1 209 4 9 1 322 2 200 2 
142 1 162 1 88 2 68 1 331 1 215 1 243 1 311 1 209 2 299 1 322 1 200 1 
162 1 88 3 68 1 331 1 311 1 346 2 190 1 209 3 9 2 322 1 173 1 200 1 
296 2 30 1 165 1 311 2 
162 1 88 1 168 1 209 1 68 1 331 1 
142 1 162 1 88 2 209 2 68 1 331 1 322 1 200 1 311 1 340 1 
127 1 
162 1 88 1 209 1 68 1 331 1 322 1 200 1 311 1 
142 1 162 1 88 3 209 3 68 1 331 1 322 1 9 1 200 1 340 1 311 1 
19 1 77 1 11 1 311 1 
322 1 311 1 

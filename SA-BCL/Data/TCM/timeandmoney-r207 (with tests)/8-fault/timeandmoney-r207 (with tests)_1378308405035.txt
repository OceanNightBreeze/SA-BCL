#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArithmeticException 194 125 (111,303) (111,303) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArithmeticException 194 125 (111,303) (111,303) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArithmeticException 194 125 107 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArithmeticException 194 125 107 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 236 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 195 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 250 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 304 (5,37,189) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 333 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (324,330) (324,330) 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 248 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 116 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 220 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 220 271 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 197 308 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 130 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 130 89 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 10 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 10 73 66 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 10 73 66 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 10 73 272 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 130 89 295 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 130 89 295 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 10 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (324,330) (324,330) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (324,330) (324,330) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (324,330) (324,330) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 333 18 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 236 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 123 (65,71) 264 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 68 158 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (101,120) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (15,274) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (26,192) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 758 | = null
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7110 | stmt -> ;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2737 | stmt -> ;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 8735 | || -> &&
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | CONSTANT | 4705 | 1 -> 2
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 821 | < -> !=
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
3 3 83 4 6 1 11 2 135 3 12 1 140 1 303 1 183 2 182 1 55 2 143 1 104 7 262 2 265 1 193 1 194 2 111 1 114 2 72 1 29 1 280 1 121 7 125 1 210 2 
3 3 83 4 6 1 11 2 135 3 12 1 140 1 303 1 183 2 182 1 55 2 143 1 104 7 262 2 265 1 193 1 194 2 111 1 114 2 72 1 29 1 121 7 280 1 125 1 210 2 
3 4 83 6 6 1 11 3 135 5 12 1 140 1 303 1 183 2 182 1 55 2 143 1 104 9 262 2 313 1 265 1 193 1 194 2 111 1 112 1 114 2 72 1 29 1 121 9 280 2 125 1 286 1 211 1 210 2 
3 3 83 4 6 1 11 2 135 4 12 1 140 1 303 1 183 2 182 1 55 2 143 1 104 7 262 2 265 1 193 1 194 2 111 1 112 1 114 2 72 1 29 1 121 7 280 1 125 1 286 1 210 2 
3 2 83 3 112 1 114 1 11 1 135 3 182 1 183 1 140 1 121 4 280 2 125 1 262 1 104 4 286 1 313 1 211 1 210 1 194 1 
112 1 135 1 30 1 164 1 182 1 183 1 55 1 121 2 143 1 262 1 104 2 286 1 313 1 210 1 265 1 292 1 194 1 
3 1 83 1 6 1 112 1 11 1 135 2 182 1 183 2 55 1 121 3 262 2 104 3 286 1 
3 3 83 5 6 1 114 1 11 2 72 1 12 1 135 3 28 1 140 1 182 1 183 2 55 1 280 1 121 7 125 1 262 2 104 7 210 1 107 1 194 1 
3 3 83 5 6 1 114 1 11 2 72 1 12 1 135 3 28 1 140 1 182 1 183 2 55 1 280 1 121 7 125 1 262 2 104 7 210 1 107 1 194 1 
236 1 
216 1 320 1 196 1 113 1 117 1 237 1 32 1 94 1 185 1 288 1 246 1 
320 1 196 1 113 1 117 1 237 1 32 1 94 2 181 1 329 1 282 1 288 1 246 1 
139 1 94 1 
139 1 94 1 
94 1 
139 1 94 1 
139 1 94 1 
139 1 166 1 100 1 256 1 150 1 94 2 
9 1 257 1 90 1 51 1 56 1 105 1 317 1 318 1 320 2 22 1 24 1 26 1 232 1 237 2 203 2 329 1 33 2 282 1 284 1 35 1 246 1 176 1 39 2 
236 1 119 1 
320 2 237 2 119 2 181 1 329 1 184 1 282 1 103 1 246 2 
69 1 41 1 90 1 
318 1 320 1 22 1 269 1 9 1 26 1 257 1 237 1 119 1 203 1 51 1 33 1 56 1 284 1 35 1 39 1 
320 5 237 5 119 1 207 1 329 4 181 1 185 1 184 1 282 4 309 1 105 2 288 1 337 1 246 5 176 1 315 1 
329 2 320 2 282 2 80 1 288 1 246 2 237 2 258 1 
181 1 329 3 320 3 282 3 105 1 246 3 237 3 119 1 
329 1 320 1 282 1 288 1 246 1 237 1 258 1 
329 1 181 1 320 1 184 1 282 1 103 1 288 1 246 1 237 1 
195 1 320 2 196 1 113 1 117 1 32 1 237 2 94 1 329 2 181 1 184 1 282 2 105 1 288 1 246 2 148 1 176 1 
320 2 237 2 119 1 329 1 185 1 282 1 105 1 288 1 337 1 246 2 315 1 
320 1 196 1 250 1 113 1 117 1 237 1 32 1 94 1 329 1 282 1 105 1 288 1 246 1 148 1 176 1 
69 1 320 2 237 2 90 1 181 1 329 2 184 1 282 2 105 1 246 2 
318 1 320 1 22 1 9 1 26 1 257 1 237 1 119 1 203 1 51 1 33 1 56 1 284 1 35 1 39 1 
318 1 320 1 110 1 22 1 9 1 257 1 237 1 119 1 203 1 15 1 51 1 33 1 56 1 35 1 39 1 
129 1 41 2 84 1 8 1 45 1 14 1 49 2 90 2 92 1 138 1 59 4 191 1 153 2 69 2 109 1 160 1 205 1 279 1 76 2 287 1 170 1 82 1 214 1 247 1 
329 1 320 1 282 1 288 1 80 1 246 1 32 1 237 1 
321 1 5 1 
321 1 5 1 
304 1 189 1 
304 1 189 1 
304 1 189 1 
54 1 321 1 5 1 
54 1 321 1 5 1 
304 1 321 1 189 1 5 1 
321 1 5 1 37 1 
54 1 321 1 5 1 
321 1 224 1 5 1 
321 1 224 1 5 1 
321 1 224 1 5 1 
320 1 321 1 131 1 5 1 251 1 254 1 237 1 94 1 329 1 16 1 282 1 124 1 333 1 246 1 213 1 
321 2 131 2 5 2 251 2 324 1 254 2 94 2 206 1 16 2 330 1 167 1 124 2 213 1 
114 1 210 1 194 1 
210 1 292 1 194 1 
75 1 179 1 114 2 210 3 31 1 292 1 
179 1 114 1 210 2 48 1 31 1 292 1 
114 1 179 1 210 2 31 2 292 1 
139 1 248 1 94 1 
139 2 261 1 116 1 94 2 152 1 
249 1 298 1 220 1 256 1 94 2 139 1 166 1 331 1 100 1 144 1 150 1 
249 1 271 1 298 1 220 1 256 1 94 1 166 1 331 1 100 1 144 1 150 1 
56 1 146 1 236 1 
56 1 4 1 
86 1 
318 1 56 1 35 1 
56 1 222 1 
318 1 56 1 
318 1 56 3 20 1 146 2 35 1 201 1 
0 1 42 1 23 1 8 1 49 3 50 1 223 1 306 1 188 2 332 1 34 1 59 7 170 3 61 1 82 1 247 2 153 4 
0 1 42 1 23 1 8 1 49 3 50 1 223 1 306 1 188 2 332 1 34 1 59 7 170 3 61 1 82 1 247 2 153 4 
0 1 42 1 23 1 8 1 49 3 50 1 223 1 306 1 102 1 188 2 332 1 34 1 59 7 170 3 61 1 82 1 247 2 153 4 
0 1 218 1 42 5 8 6 253 3 47 4 49 18 50 5 223 1 306 2 188 2 59 37 61 1 191 1 153 19 68 1 109 1 23 2 200 3 118 1 162 1 205 1 276 1 279 1 76 2 169 1 34 2 332 9 287 3 244 1 170 17 290 1 214 3 82 6 247 8 
42 1 8 1 49 4 50 1 223 1 306 1 188 2 59 9 61 1 191 2 153 5 109 2 23 1 205 2 208 1 279 2 76 4 169 1 34 1 332 1 170 4 82 1 247 3 294 1 
83 1 133 1 219 1 9 1 135 1 257 1 137 1 183 1 182 1 53 1 55 1 311 1 104 2 262 1 312 1 194 1 156 1 112 1 114 1 203 1 33 1 121 2 75 1 286 1 243 1 172 1 210 2 292 1 177 1 39 1 
44 1 83 2 219 1 9 1 135 1 257 1 137 1 183 1 53 1 55 1 311 1 104 3 262 1 312 1 194 1 268 1 112 1 114 1 327 1 203 1 33 1 75 1 121 3 286 1 243 1 172 1 210 2 292 1 177 1 39 1 
83 2 44 1 9 1 135 1 257 1 137 1 55 1 311 1 104 2 312 1 194 1 268 1 112 1 114 1 203 1 33 1 121 2 75 1 286 1 243 1 172 1 210 2 292 1 177 1 39 1 
318 1 22 1 9 1 134 1 257 1 327 1 95 1 203 1 302 1 183 1 55 2 33 1 121 1 56 1 127 1 311 2 262 1 104 1 243 2 312 2 174 1 64 1 39 1 
219 1 9 1 257 1 137 1 183 1 182 1 53 1 55 1 311 1 104 1 262 1 312 1 194 1 268 1 156 1 114 1 203 1 33 1 121 1 75 1 243 1 172 1 210 2 292 1 177 1 39 1 
204 1 
197 1 22 1 115 1 298 1 256 1 94 1 203 1 33 1 166 1 331 1 100 1 308 1 39 1 
130 1 216 1 320 1 196 1 322 1 198 1 157 1 113 1 117 1 32 1 237 1 94 2 185 1 128 1 288 1 246 1 339 1 
216 1 320 1 196 1 322 1 198 1 157 1 113 1 202 1 117 1 32 1 237 1 94 2 185 1 128 1 288 1 246 1 339 1 
130 1 216 1 320 1 196 1 322 1 198 1 157 1 113 1 89 1 117 1 32 1 237 1 94 2 185 1 128 1 288 1 246 1 339 1 
94 1 
216 1 10 1 256 1 93 1 94 2 185 1 100 1 316 1 320 1 196 1 322 1 198 1 157 1 113 1 115 1 117 1 235 1 237 1 32 1 166 1 331 1 128 1 288 1 245 1 246 1 339 1 38 1 
216 1 40 1 10 1 256 1 93 1 94 2 185 1 100 1 66 1 316 1 196 1 320 1 322 1 198 1 157 1 113 1 115 1 235 1 117 1 237 1 32 1 73 1 166 1 331 1 128 1 288 1 245 1 246 1 339 1 38 1 
216 1 40 1 10 1 256 1 93 1 94 2 185 1 100 1 66 1 316 1 196 1 320 1 322 1 198 1 157 1 113 1 115 1 235 1 117 1 237 1 32 1 73 1 166 1 331 1 128 1 288 1 245 1 246 1 339 1 38 1 
216 1 10 1 256 1 93 1 94 2 305 1 185 1 100 1 196 1 320 1 322 1 198 1 157 1 113 1 272 1 115 1 235 1 117 1 237 1 32 1 73 1 166 1 331 1 241 1 171 1 128 1 288 1 246 1 339 1 38 1 
130 1 216 1 320 1 196 1 322 1 295 1 198 1 157 1 113 1 89 1 117 1 32 1 237 1 94 2 185 1 128 1 288 1 246 1 339 1 
130 1 216 1 320 1 196 1 322 1 295 1 198 1 157 1 113 1 89 1 117 1 32 1 237 1 94 2 185 1 128 1 288 1 246 1 339 1 
216 1 10 1 256 1 93 1 94 2 185 1 100 1 320 1 196 1 322 1 198 1 157 1 113 1 115 1 117 1 235 1 237 1 32 1 166 1 331 1 241 1 171 1 128 1 288 1 246 1 339 1 38 1 
42 1 41 1 45 1 8 1 14 1 90 1 49 3 92 1 50 1 223 1 188 1 59 6 61 1 191 1 153 3 69 1 109 1 23 1 236 1 205 1 119 2 279 1 76 2 170 2 247 2 82 1 
1 1 41 11 8 2 253 3 47 3 87 1 180 1 14 2 49 6 90 11 92 1 259 1 59 14 191 2 153 8 68 1 69 4 109 2 200 2 119 1 163 1 205 2 238 1 279 2 76 4 332 1 242 1 287 2 170 2 290 1 247 1 214 1 82 1 
1 1 9 1 180 1 257 1 14 1 49 1 92 1 51 1 56 1 59 2 105 1 191 1 153 1 318 1 69 1 109 1 320 2 22 1 269 1 26 1 237 2 119 1 203 1 205 1 329 1 74 1 33 1 279 1 282 1 284 1 76 2 209 1 242 1 35 1 173 1 246 1 176 1 39 1 
1 1 9 2 8 3 180 1 14 3 257 2 90 7 92 3 188 1 105 1 191 3 109 3 268 1 23 1 22 1 200 2 26 2 119 2 203 3 205 3 33 3 279 3 282 1 284 2 287 2 35 2 214 2 39 3 217 1 42 1 41 7 49 10 50 1 51 2 223 1 56 2 307 2 58 1 59 20 310 2 61 1 153 10 318 2 319 2 69 7 320 3 71 2 325 1 237 3 329 1 76 6 332 4 242 1 170 8 246 1 176 1 247 4 82 3 81 2 
133 1 45 1 9 2 180 1 257 2 14 2 49 1 92 2 95 1 302 1 56 3 59 2 105 1 314 1 63 1 191 2 67 1 153 1 317 2 318 2 19 1 320 1 109 2 267 1 268 1 22 2 270 1 237 1 203 8 205 2 329 1 33 7 279 2 282 1 76 4 242 1 336 1 246 1 39 8 
1 1 41 1 8 1 14 1 90 1 49 2 92 1 181 1 184 1 59 3 191 1 153 1 69 1 109 1 320 1 200 1 237 1 205 1 329 1 279 1 282 1 76 2 285 1 287 1 170 1 246 1 247 1 214 1 82 1 
69 1 109 1 41 1 45 1 8 1 160 1 14 1 90 1 92 1 205 1 279 1 76 2 332 1 59 2 287 1 170 1 191 1 153 2 
69 1 109 1 41 1 45 1 14 1 90 1 49 2 92 1 205 1 138 1 279 1 76 2 59 2 170 1 191 1 247 1 214 1 82 1 
41 2 8 1 45 1 14 1 90 2 49 2 92 1 59 4 191 1 153 2 69 2 109 1 200 1 205 1 279 1 76 2 332 1 287 1 170 2 214 1 82 1 247 1 
69 1 109 1 41 1 8 1 160 1 14 1 90 1 92 1 205 1 279 1 76 2 332 1 59 2 287 1 170 1 191 1 67 1 153 2 
69 1 109 1 41 1 14 1 90 1 49 2 92 1 205 1 138 1 279 1 76 2 59 2 170 1 191 1 247 1 214 1 82 1 67 1 
41 2 8 1 14 1 90 2 49 2 92 1 59 4 191 1 153 2 67 1 69 2 109 1 200 1 205 1 279 1 76 2 332 1 287 1 170 2 214 1 82 1 247 1 
69 2 109 1 41 2 8 1 200 1 14 1 49 2 90 2 92 1 205 1 279 1 76 2 332 1 59 4 287 1 170 2 191 1 247 1 82 1 214 1 153 2 
9 1 180 1 257 1 14 1 49 1 92 1 51 1 56 1 307 1 59 2 191 1 153 1 318 1 320 1 109 1 22 1 26 1 237 1 119 1 203 1 205 1 33 1 279 1 284 1 76 2 242 1 35 1 39 1 
9 1 180 1 257 1 14 1 49 1 15 1 92 1 51 1 56 1 59 2 191 1 153 1 318 1 320 1 109 1 110 1 22 1 25 1 237 1 119 1 203 1 205 1 33 1 279 1 76 2 242 1 35 1 39 1 
1 1 41 2 8 1 14 1 90 2 49 2 92 1 59 4 191 1 153 2 69 2 109 1 200 1 205 1 279 1 76 2 332 1 287 1 170 2 214 1 82 1 247 1 
41 2 8 1 9 1 133 1 257 1 14 1 49 2 90 2 92 1 51 1 56 1 307 1 59 4 191 1 153 2 69 2 318 1 320 1 109 1 200 1 26 1 237 1 203 1 205 1 33 1 279 1 284 1 76 2 332 1 287 1 170 2 35 1 247 1 82 1 214 1 81 1 39 1 
1 1 41 1 8 1 14 1 13 1 49 1 90 1 92 1 181 1 184 1 59 3 191 1 153 2 69 1 109 1 320 1 200 1 237 1 205 1 329 1 279 1 282 1 76 2 332 1 287 1 170 1 246 1 82 1 214 1 
85 1 8 3 255 1 253 1 47 2 49 10 187 1 59 19 145 2 191 2 151 1 153 9 68 1 109 2 200 3 165 1 205 2 277 2 208 1 279 2 76 4 332 3 287 3 170 6 290 1 293 1 247 3 214 3 82 3 215 1 
132 1 7 1 85 2 8 3 255 1 253 2 47 2 49 12 59 26 145 1 191 3 151 1 153 14 68 2 109 3 200 3 158 1 328 1 165 2 205 3 277 4 208 1 279 3 239 1 169 2 76 6 332 2 287 3 170 4 291 1 247 2 82 2 214 2 215 1 
132 1 42 1 7 1 85 2 8 5 255 1 253 3 47 4 49 21 50 1 223 1 188 1 59 41 145 1 61 1 191 3 151 1 153 20 68 3 109 3 23 1 200 4 158 1 161 1 328 1 165 1 205 3 277 4 208 1 279 3 239 1 169 1 76 6 332 4 287 4 170 8 291 1 290 1 293 1 247 4 214 4 82 5 215 1 
132 1 42 1 7 1 85 2 8 5 255 1 253 3 47 4 49 18 50 1 223 1 188 1 59 38 145 1 61 1 191 4 151 1 153 20 68 3 109 4 23 1 200 4 158 1 161 1 328 1 165 1 205 4 277 4 208 1 279 4 239 1 169 2 76 8 332 3 287 4 170 7 291 1 290 1 293 1 247 4 214 3 82 4 215 1 
132 1 42 1 7 1 85 1 8 8 255 1 253 4 47 4 49 25 50 1 259 2 223 1 188 1 59 52 145 1 61 1 191 2 151 1 153 27 68 2 109 2 23 1 200 7 158 1 328 1 165 1 205 2 277 4 208 1 279 2 239 1 169 1 76 4 332 8 287 7 170 15 291 1 290 2 247 7 214 7 82 8 215 1 
16 1 321 1 240 1 283 1 124 1 251 1 5 1 254 1 159 1 335 1 
149 1 37 1 
260 1 16 1 98 1 321 1 124 1 251 1 5 1 254 1 263 1 
54 1 2 1 
323 1 224 1 226 1 
321 1 131 2 5 1 251 1 324 1 254 1 94 1 206 1 16 1 330 1 167 1 124 1 213 1 
321 1 131 2 5 1 251 1 324 1 254 1 94 1 206 1 16 1 330 1 167 1 124 1 213 1 
321 1 131 2 5 1 251 1 324 1 254 1 94 1 206 1 16 1 330 1 167 1 124 1 213 1 
54 1 2 1 226 1 
54 1 2 1 226 1 
323 1 224 1 
323 1 224 1 226 1 
97 1 21 1 
18 1 139 1 16 1 131 1 167 1 321 1 124 1 251 1 5 1 333 1 254 1 94 1 206 1 
1 1 9 1 136 1 180 1 257 1 14 1 299 1 49 1 92 1 56 1 59 2 147 1 191 1 153 1 318 1 317 2 19 1 109 1 320 2 267 1 155 1 237 2 203 2 205 1 279 1 33 2 76 2 242 1 246 2 36 1 39 2 
268 1 9 1 133 1 219 1 114 1 257 1 203 2 278 1 33 2 75 1 311 1 172 1 210 2 289 1 292 1 177 1 194 1 39 2 266 1 
268 1 219 1 9 1 178 1 114 1 257 1 203 1 33 1 75 1 311 1 172 1 210 2 292 1 177 1 194 1 39 1 266 1 
318 1 22 1 9 1 257 1 203 1 95 1 278 1 302 1 33 1 56 1 311 1 79 1 174 1 39 1 
268 1 9 1 219 1 114 1 257 1 203 1 278 1 33 1 75 1 311 1 172 1 210 2 289 1 292 1 177 1 194 1 39 1 266 1 
108 1 
101 1 235 1 236 1 120 1 
166 1 331 1 100 1 115 1 245 1 235 1 256 1 316 1 
318 1 20 1 4 1 22 1 9 2 115 1 298 1 257 1 256 1 275 1 203 1 33 1 166 1 123 1 331 1 56 2 100 1 35 1 264 1 65 1 39 1 
68 1 166 1 331 1 100 1 253 1 47 1 158 1 115 1 235 1 256 1 
40 1 42 1 23 1 8 2 115 1 235 2 256 1 94 1 276 1 50 1 166 1 142 2 331 1 100 1 17 1 82 1 
166 1 100 1 115 1 235 1 256 1 120 1 
331 1 8 1 200 1 287 1 235 1 82 1 214 1 
33 1 22 1 203 1 39 1 
166 1 331 1 100 1 115 1 298 1 235 1 256 1 301 1 
124 1 251 1 60 1 
124 1 251 1 60 1 
97 1 43 1 124 1 251 1 159 1 
124 1 251 1 60 1 
96 1 124 1 251 1 
96 1 124 1 251 1 
96 1 124 1 251 1 
124 1 251 1 
321 1 5 1 
109 2 42 1 23 1 8 1 49 4 205 2 50 1 279 2 223 1 188 1 76 4 169 1 332 1 59 8 170 3 61 1 191 2 82 1 247 2 153 4 
42 1 23 1 8 1 49 3 236 1 50 1 223 1 188 1 59 6 61 1 170 2 247 2 82 1 153 3 
109 1 8 1 200 1 49 2 205 1 300 1 279 1 76 2 332 1 59 4 287 1 170 2 191 1 247 1 82 1 214 1 153 2 
68 1 8 1 253 1 200 1 47 2 49 4 332 1 59 7 287 1 170 2 290 1 247 1 82 1 214 1 153 3 
42 2 8 3 252 1 253 2 47 2 49 12 50 2 259 1 223 1 188 1 59 23 61 1 191 2 153 11 109 2 23 1 200 2 163 1 205 2 279 2 169 2 76 4 332 4 287 2 170 9 290 1 214 2 82 3 247 5 
59 1 47 1 49 1 
59 1 253 1 153 1 
319 1 109 1 8 1 200 1 49 3 205 1 300 1 279 1 76 2 332 1 59 6 287 1 170 3 191 1 214 1 82 1 247 2 153 3 
132 1 8 2 7 1 253 1 47 1 49 6 59 12 191 1 153 6 68 1 109 1 200 2 158 1 205 1 328 1 208 1 279 1 76 2 332 1 287 2 170 2 291 1 214 2 82 2 247 1 
42 1 23 1 8 1 49 3 50 1 332 1 59 6 170 2 82 1 247 1 153 3 
109 1 42 1 252 1 49 2 205 1 50 1 279 1 223 1 169 1 76 2 332 1 59 3 170 2 61 1 191 1 247 1 153 1 
109 1 42 2 23 1 8 2 49 5 205 1 276 1 50 2 208 1 279 1 76 2 332 2 59 10 170 5 191 1 247 3 82 2 153 5 
109 1 8 1 205 1 208 1 279 1 76 2 332 1 59 2 287 1 170 1 191 1 153 2 
109 1 8 1 200 1 49 2 205 1 208 1 279 1 76 2 332 1 59 4 287 1 170 2 191 1 247 1 82 1 214 1 153 2 
109 3 42 1 252 1 49 2 205 3 50 1 208 1 279 3 169 1 76 6 332 1 59 3 170 2 191 3 293 1 247 1 153 1 
218 1 42 2 8 4 253 3 47 4 49 14 50 2 300 1 223 1 188 1 59 27 61 1 191 4 153 13 68 1 109 4 23 1 200 3 118 1 162 1 205 4 208 1 279 4 169 1 76 8 332 5 287 3 170 10 290 1 293 1 214 3 82 4 247 5 
42 1 8 1 253 1 47 1 49 4 50 1 223 1 188 1 59 8 61 1 191 1 153 4 68 1 109 1 23 1 158 1 205 1 208 1 279 1 76 2 170 2 82 1 247 2 
42 1 8 2 253 1 47 2 49 5 50 1 300 1 223 1 188 1 59 11 61 1 191 2 153 6 68 1 109 2 23 1 200 1 158 1 205 2 208 1 279 2 76 4 332 1 287 1 170 3 290 1 82 1 247 2 
132 1 42 1 8 3 7 1 253 1 47 1 49 10 50 1 300 1 223 1 188 1 59 19 61 1 191 3 153 9 68 1 109 3 23 1 200 2 158 1 328 1 205 3 208 1 279 3 76 6 169 1 332 1 287 2 170 4 291 1 214 2 82 3 247 3 
132 1 42 1 8 3 7 1 253 1 47 1 49 7 50 1 300 1 223 1 188 1 59 17 61 1 191 3 153 10 68 1 109 3 23 1 200 2 158 1 205 3 328 1 208 1 279 3 169 1 76 6 332 2 287 2 170 4 291 1 247 2 214 1 82 2 
42 1 8 1 253 1 47 1 49 4 50 1 223 1 188 1 59 8 61 1 191 1 153 4 68 1 109 1 23 1 158 1 205 1 208 1 279 1 76 2 170 2 82 1 247 2 
132 1 8 2 7 1 253 1 47 1 49 6 59 12 191 1 153 6 68 1 109 1 200 2 158 1 205 1 328 1 208 1 279 1 76 2 332 1 287 2 170 1 291 1 214 2 82 2 
132 1 42 1 7 1 8 3 253 1 47 1 49 8 50 1 300 1 223 1 188 1 59 18 61 1 191 4 153 10 68 1 109 4 23 1 200 2 158 1 328 1 205 4 208 1 279 4 76 8 169 2 332 2 287 2 170 5 291 1 214 1 82 2 247 3 
132 1 7 1 8 3 253 1 47 1 49 7 59 16 191 4 153 9 68 1 109 4 200 3 158 1 328 1 205 4 208 1 279 4 76 8 169 2 332 3 287 3 170 6 291 1 293 1 214 2 82 2 247 3 
42 3 23 1 8 1 49 4 50 3 223 1 332 3 59 7 61 2 170 6 82 1 247 3 153 3 
132 1 42 1 7 1 8 3 253 1 47 1 49 8 50 1 223 1 188 1 59 18 61 1 191 4 153 10 68 1 109 4 23 1 200 2 158 1 328 1 205 4 208 1 279 4 76 8 169 2 332 1 287 2 170 4 291 1 293 1 214 1 82 2 247 3 
320 1 91 1 237 1 119 1 185 1 288 1 246 1 337 1 315 1 
320 1 234 1 91 1 237 1 119 1 122 1 185 1 77 1 288 1 62 1 337 1 227 1 246 1 315 1 
318 1 302 1 33 1 56 1 22 1 9 1 257 1 236 1 95 1 203 1 39 1 
318 1 320 2 22 1 9 1 26 1 257 1 237 2 119 1 203 1 51 1 329 1 33 1 56 1 282 1 105 1 35 1 246 1 39 1 
9 1 257 1 222 1 51 1 56 3 105 1 318 2 320 2 113 1 26 1 237 2 32 1 119 1 203 1 329 1 33 1 282 2 35 2 78 1 288 1 212 1 246 2 39 1 
9 1 257 1 222 1 15 1 51 1 186 1 56 3 105 1 318 2 320 2 113 1 237 2 32 1 119 1 203 2 329 1 33 2 282 2 35 2 78 1 288 1 212 1 246 2 39 2 
33 1 56 1 4 1 212 1 274 1 203 1 94 1 39 1 
33 1 56 1 4 1 212 1 192 1 203 1 94 1 39 1 
33 1 9 1 270 1 257 1 203 1 39 1 
317 1 318 2 19 1 268 1 20 1 22 2 270 1 133 1 9 3 257 2 203 7 33 6 281 1 56 3 190 1 35 1 314 1 336 1 63 1 338 1 39 7 
1 1 9 1 8 1 14 2 257 1 90 1 92 2 188 1 105 1 191 2 109 2 23 1 26 1 203 1 205 2 119 2 33 1 279 2 282 1 284 1 35 1 39 1 42 1 41 1 133 1 299 1 49 3 51 1 50 1 223 1 56 1 307 1 59 6 61 1 153 3 69 1 318 1 320 2 71 1 237 2 329 1 76 4 170 2 246 1 81 1 247 2 82 1 
139 1 94 1 
318 1 20 1 133 1 270 1 9 2 257 1 275 1 203 2 33 2 56 2 146 1 35 1 39 2 
318 1 22 1 9 1 133 1 257 1 203 4 95 1 302 1 33 4 186 1 56 1 225 1 39 4 
318 1 217 1 9 2 273 1 257 1 203 2 33 2 281 1 56 1 126 1 35 1 212 1 338 1 39 2 
33 1 22 1 9 1 172 1 210 1 257 1 292 1 203 1 194 1 39 1 
318 1 19 1 268 1 133 1 9 1 257 1 203 2 33 2 56 1 147 1 39 2 
318 2 19 1 22 1 133 1 9 2 257 2 95 1 203 5 302 1 33 4 56 3 225 1 336 1 314 1 212 1 39 5 
318 2 19 1 22 1 133 1 9 2 257 2 95 1 203 5 302 1 33 4 56 3 225 1 314 1 212 1 175 1 39 5 
318 1 320 2 22 1 9 1 257 1 237 2 119 1 203 1 15 1 51 1 329 1 33 1 56 1 282 1 105 1 35 1 246 1 39 1 
318 1 20 1 9 2 257 1 203 1 33 1 281 1 56 1 190 1 35 1 212 1 338 1 39 1 
70 1 296 1 231 1 297 1 119 1 
196 1 229 1 70 2 296 2 113 1 297 1 231 2 117 1 32 1 119 1 94 2 139 1 99 1 57 1 288 1 148 1 
320 1 70 1 155 1 231 1 297 1 136 1 237 1 246 1 36 1 
99 1 229 1 297 1 
112 1 286 1 135 1 236 1 
183 1 121 1 112 1 104 1 262 1 286 1 135 1 
55 1 104 1 243 1 
154 1 183 1 182 1 121 3 199 1 46 1 112 1 104 3 262 1 286 1 135 1 265 2 
83 1 112 1 135 1 183 1 121 2 280 1 262 1 104 2 286 1 313 1 
140 1 183 1 182 1 121 1 3 1 104 1 262 1 114 1 135 1 210 1 194 1 
183 1 182 1 121 1 104 1 262 1 286 1 135 1 
183 1 182 1 121 1 112 1 104 1 262 1 286 2 
135 1 233 1 326 1 182 1 183 2 121 2 168 1 262 2 104 2 286 1 
3 1 83 2 112 1 11 1 12 1 72 1 135 2 182 1 183 1 121 3 262 1 104 3 286 1 
83 1 112 1 114 1 135 1 182 1 183 1 121 2 75 1 262 1 104 2 286 1 210 2 292 1 228 1 194 1 
3 1 83 2 112 1 11 1 135 2 182 1 183 1 121 3 280 1 262 1 104 3 286 1 313 1 211 1 
183 1 182 1 121 1 112 1 104 1 262 1 286 1 135 1 
154 1 3 1 83 2 199 1 112 2 11 1 135 3 183 1 121 4 104 4 262 1 286 2 313 1 265 1 
183 1 182 1 141 1 121 2 83 1 112 1 104 2 262 1 286 1 135 1 106 1 28 1 
154 2 183 1 182 1 121 3 199 1 112 1 104 3 262 1 286 1 334 1 135 1 265 2 
52 2 135 2 88 1 221 1 
183 1 182 1 121 1 104 1 262 1 230 1 
183 1 182 1 121 2 83 1 112 1 104 2 262 1 286 1 135 1 72 1 
27 1 
183 1 182 1 121 1 112 1 104 1 262 1 286 1 135 1 
183 1 182 1 121 3 83 1 112 1 104 3 262 1 286 1 72 1 135 1 265 1 
3 1 11 1 135 1 313 1 
286 1 135 1 

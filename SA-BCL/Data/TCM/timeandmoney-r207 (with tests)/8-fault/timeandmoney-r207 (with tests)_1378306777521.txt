#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 31 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 31 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 31 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 31 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 31 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 31 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 31 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 31 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 817 | stmt -> ;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | CONDITION | 675 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> >=
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1326 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 2
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5368 | stmt -> ;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11444 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2309 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
268 2 142 1 361 6 316 2 298 1 243 1 145 2 86 4 150 9 108 1 300 1 248 2 111 2 152 1 275 1 8 3 222 9 279 5 14 1 258 2 372 1 375 1 332 2 40 1 236 1 22 1 292 1 338 1 
268 2 142 1 361 6 316 2 298 1 243 1 145 2 86 4 150 9 108 1 300 1 248 2 111 2 152 1 275 1 8 3 222 9 279 5 14 1 258 2 372 1 375 1 332 2 40 1 236 1 22 1 292 1 338 1 
268 2 142 1 361 7 316 2 298 1 243 1 145 2 86 5 150 10 108 1 300 1 248 2 111 2 152 1 275 1 8 4 222 10 279 6 14 1 258 2 372 1 375 1 332 2 40 1 236 1 22 1 292 1 338 1 
268 2 142 1 361 4 316 2 243 1 145 1 86 3 150 7 108 1 300 1 248 2 111 2 152 1 275 1 8 2 222 7 279 4 14 1 258 2 372 1 375 1 332 2 40 1 236 1 22 1 292 1 338 1 
268 1 361 3 279 3 316 1 258 1 298 1 145 2 86 2 150 4 300 1 40 1 248 1 111 1 236 1 22 1 8 1 222 4 338 1 
141 1 142 1 279 1 316 1 258 1 244 1 93 1 150 2 332 1 40 1 248 1 111 1 236 1 22 1 292 1 222 2 
279 2 361 1 86 1 150 3 332 1 40 1 248 2 111 2 152 1 236 1 22 1 8 1 222 3 
268 1 361 7 316 1 298 1 243 1 145 2 86 4 150 9 300 1 248 2 152 1 111 2 8 3 222 9 279 5 258 1 372 1 332 1 40 1 55 1 236 1 22 1 337 1 338 1 
268 1 361 7 316 1 298 1 243 1 145 2 86 4 150 9 300 1 248 2 152 1 111 2 8 3 222 9 279 5 258 1 372 1 332 1 40 1 55 1 236 1 22 1 337 1 338 1 
31 1 
294 1 255 1 345 2 
334 2 353 1 70 2 183 2 379 2 167 1 209 2 252 2 
169 1 101 1 341 1 24 1 215 1 179 2 344 1 183 3 130 2 90 2 9 1 252 3 325 1 346 1 371 1 347 1 70 2 71 1 282 1 349 1 75 1 54 1 17 2 229 1 330 2 231 1 334 2 353 1 95 1 39 1 41 1 203 1 379 2 42 1 264 1 167 1 209 2 
334 1 353 1 306 1 70 1 373 1 183 1 288 1 379 1 209 1 252 1 
294 1 253 1 226 1 373 1 158 1 146 1 228 1 334 1 199 1 183 1 251 1 336 1 43 1 252 1 
294 1 253 1 70 1 226 1 373 1 158 2 146 1 334 1 183 1 251 1 336 1 379 1 43 2 209 1 252 1 
178 1 158 1 16 1 283 1 43 1 
294 1 178 1 137 1 164 1 158 2 146 1 16 1 43 2 
178 1 158 1 43 1 
306 1 70 1 373 1 158 1 16 1 163 1 353 1 334 1 288 1 183 1 379 1 43 1 209 1 252 1 
294 1 
294 1 178 1 137 1 357 1 158 2 146 1 16 1 43 2 
294 1 187 1 156 1 188 1 137 1 158 5 146 1 16 2 216 1 161 1 107 1 175 1 178 2 234 2 58 2 68 1 289 2 43 5 45 1 
31 1 
70 1 149 1 352 1 334 2 183 2 379 1 209 1 167 2 252 2 
305 1 12 1 307 1 
169 1 346 1 101 1 371 1 71 1 229 1 330 1 179 1 344 1 203 1 183 1 34 1 130 1 264 1 167 1 252 1 
70 4 241 1 160 1 106 1 352 1 334 5 199 1 335 1 233 2 183 5 379 4 209 1 167 1 252 5 
334 2 348 1 306 1 70 2 373 1 183 2 379 2 252 2 
346 1 169 1 101 1 371 1 70 1 71 1 307 1 229 1 330 1 334 1 335 1 233 1 179 1 203 1 344 1 183 2 130 1 264 1 379 1 252 2 
334 3 233 1 70 3 183 3 379 3 209 1 167 1 252 3 
334 1 306 1 70 1 373 1 183 1 379 1 252 1 
352 1 334 1 70 1 373 1 183 1 379 1 209 1 149 1 252 1 
169 1 101 1 341 1 215 1 121 1 179 1 344 1 251 1 183 4 130 1 90 1 9 1 252 4 325 1 346 1 253 1 371 1 347 1 70 3 71 1 226 1 282 1 373 1 349 1 158 1 54 1 17 2 229 1 330 1 231 1 352 1 334 3 353 1 335 1 233 1 203 1 336 1 264 1 42 1 379 3 167 1 291 1 209 2 43 1 
334 2 199 1 70 1 233 1 160 1 183 2 379 1 167 1 252 2 
294 1 253 1 70 3 226 1 373 1 158 1 352 1 334 3 335 1 233 2 183 3 250 1 251 1 336 1 379 3 209 1 43 1 291 1 252 3 
305 1 70 2 307 1 352 1 334 2 233 1 183 2 379 2 209 1 252 2 
169 1 346 1 101 1 371 1 71 1 330 1 229 1 179 1 344 1 203 1 183 1 130 1 264 1 167 1 252 1 
101 1 371 1 71 1 330 1 229 1 200 1 179 1 285 1 344 1 203 1 183 1 130 1 264 1 167 1 252 1 
266 1 240 1 102 1 341 1 215 1 110 1 112 1 184 1 185 1 9 1 90 4 325 1 305 2 12 2 307 2 282 1 349 1 308 1 17 2 197 1 231 2 39 2 286 1 359 1 
334 1 348 1 70 1 226 1 373 1 183 1 379 1 252 1 
263 1 213 1 
263 1 213 1 
263 1 301 1 0 1 213 1 
263 1 301 1 0 1 213 1 
301 1 0 1 
263 1 213 1 180 1 
263 1 213 1 180 1 
263 2 301 1 0 1 213 2 6 1 1 1 
263 1 213 1 57 1 
263 1 213 1 180 1 
263 1 78 1 213 1 
263 1 78 1 213 1 
263 1 78 1 213 1 
103 1 363 1 213 1 171 1 67 1 33 1 183 2 252 2 370 1 70 2 280 1 189 1 158 1 351 1 263 1 333 1 334 2 235 1 21 1 57 1 206 1 379 2 167 1 43 1 
294 1 11 1 363 2 103 3 213 2 158 2 1 1 174 1 148 1 196 1 67 2 263 2 333 1 354 2 33 2 235 2 43 2 276 1 61 1 
268 1 316 1 258 1 
316 1 258 1 93 1 
238 1 87 1 268 2 151 1 316 3 93 1 
87 1 268 1 151 1 316 2 147 1 93 1 
268 1 87 1 151 2 316 2 93 1 
294 2 64 1 171 1 104 2 146 1 107 1 175 3 178 1 112 1 184 1 345 3 35 2 36 1 255 1 254 1 155 1 280 1 189 1 188 2 137 1 15 1 193 1 158 5 16 4 234 1 286 1 58 1 204 1 359 1 289 1 43 5 23 2 
294 4 171 4 246 1 175 6 3 1 178 5 183 1 184 2 345 6 252 1 255 2 306 1 137 1 188 4 193 2 16 6 353 1 204 1 58 2 359 2 209 1 23 4 269 4 104 4 146 1 107 1 112 2 368 1 36 2 156 1 70 1 155 2 157 1 373 1 158 8 283 4 76 1 163 1 334 1 234 2 286 2 288 1 379 1 82 1 289 2 43 8 
294 3 64 1 171 1 104 2 146 1 175 3 183 1 112 1 184 1 345 4 252 1 35 1 36 1 255 2 254 1 306 1 70 1 156 1 155 1 188 2 373 1 193 1 158 3 16 2 163 1 334 1 353 1 234 1 286 1 58 1 288 1 379 1 359 1 289 1 209 1 43 3 23 2 
294 3 171 2 246 1 175 3 183 1 184 1 345 4 252 1 254 1 255 2 306 1 188 2 193 1 16 2 353 1 58 1 359 1 209 1 23 2 64 1 104 2 146 1 112 1 35 1 36 1 155 1 156 1 70 1 157 1 373 1 158 3 76 1 163 1 334 1 234 1 286 1 288 1 379 1 289 1 43 3 
31 1 
5 1 229 1 
154 1 
101 1 203 1 229 1 
182 1 229 1 
101 1 229 1 
101 1 140 1 225 1 203 1 153 2 229 3 
240 3 327 2 113 1 195 1 122 1 123 1 231 3 39 4 355 1 286 1 88 1 110 2 221 1 112 1 304 1 60 1 90 7 
240 3 327 2 113 1 195 1 122 1 123 1 231 3 39 4 355 1 286 1 88 1 110 2 221 1 112 1 304 1 60 1 90 7 
240 3 327 2 113 1 195 1 122 1 123 1 231 3 139 1 39 4 355 1 286 1 88 1 110 2 221 1 112 1 304 1 60 1 90 7 
240 10 85 1 122 2 245 1 123 1 125 1 272 4 88 5 110 5 221 1 304 2 112 4 184 3 9 1 90 31 325 1 327 3 113 2 191 1 282 1 193 3 192 1 349 1 17 2 195 2 231 15 39 16 355 1 286 4 359 3 60 1 290 1 313 3 265 1 
340 1 240 4 47 1 122 1 123 1 88 1 110 3 221 2 131 1 304 2 112 3 9 1 90 14 325 1 327 2 113 2 282 1 349 1 17 2 195 1 231 6 39 8 355 1 286 3 
238 1 268 1 296 1 361 1 316 2 150 2 28 1 179 1 274 1 248 1 303 1 111 1 344 1 130 1 222 2 256 1 279 1 71 1 258 1 330 1 93 1 138 1 94 1 332 1 40 1 205 1 236 1 378 1 22 1 44 1 
238 1 268 1 296 1 62 1 361 2 170 1 316 2 150 3 28 1 179 1 248 1 303 1 111 1 344 1 130 1 50 1 222 3 256 1 279 1 71 1 258 1 330 1 93 1 138 1 94 1 332 1 236 1 378 1 22 1 44 1 
238 1 268 1 296 1 361 2 170 1 316 2 150 2 179 1 344 1 130 1 50 1 222 2 256 1 279 1 71 1 258 1 330 1 93 1 332 1 138 1 94 1 236 1 378 1 22 1 44 1 
101 1 371 1 296 2 62 1 71 1 25 1 229 1 330 1 217 1 150 1 124 1 247 1 332 2 138 2 94 2 177 1 248 1 179 1 344 1 111 1 130 1 222 1 51 1 
238 1 268 1 256 1 296 1 316 2 170 1 71 1 258 1 330 1 93 1 28 1 150 1 332 1 94 1 138 1 303 1 40 1 248 1 179 1 344 1 205 1 111 1 378 1 130 1 44 1 222 1 
46 1 
294 2 295 1 239 1 84 1 175 2 124 1 128 1 302 1 177 1 178 6 179 2 344 1 249 4 130 2 183 1 251 1 345 2 252 1 253 1 255 2 137 3 188 2 194 1 260 2 19 2 199 1 97 1 58 1 59 2 101 1 212 1 214 2 146 1 107 1 26 1 32 2 36 1 371 2 71 1 226 1 373 1 158 5 330 2 229 1 228 1 376 2 117 1 162 1 334 1 234 1 336 1 289 1 43 5 293 2 380 1 
295 1 26 1 178 2 249 2 251 1 183 1 252 1 253 1 226 1 137 1 373 1 158 3 194 1 228 1 117 1 376 1 334 1 199 1 357 1 336 1 43 3 380 1 
295 1 294 1 146 1 26 1 178 1 249 3 251 1 183 1 252 1 253 1 226 1 137 1 373 1 158 3 194 1 228 1 117 1 334 1 199 1 357 1 336 1 59 1 43 3 380 1 
295 1 294 1 214 1 146 1 26 1 178 2 249 3 251 1 183 1 252 1 253 1 137 1 226 1 373 1 158 3 194 1 228 1 117 1 376 1 334 1 199 1 357 1 336 1 59 1 43 3 380 1 
294 5 295 1 212 1 214 4 146 5 107 1 26 1 175 1 302 1 32 2 178 7 322 1 249 6 183 1 251 1 252 1 253 1 255 2 188 1 137 3 226 1 373 1 158 5 53 1 194 1 228 1 309 1 260 2 117 1 376 4 334 1 19 2 199 1 96 1 234 1 357 1 58 1 336 1 59 4 289 1 100 1 43 5 293 2 380 1 
295 1 294 2 175 1 302 1 128 1 178 4 249 4 251 1 183 1 345 2 252 1 253 1 255 2 188 1 137 2 194 1 260 2 199 1 19 2 58 1 59 2 212 1 214 2 146 1 107 1 26 1 32 2 226 1 373 1 158 4 228 1 117 1 376 2 334 1 234 1 336 1 289 1 43 4 380 1 293 2 
294 1 295 1 212 1 214 2 146 1 26 1 107 1 175 1 302 1 178 4 32 2 322 1 249 4 251 1 183 1 252 1 253 1 255 2 137 2 188 1 226 1 373 1 158 4 53 1 194 1 228 1 376 2 260 2 117 1 334 1 19 2 199 1 234 1 58 1 336 1 59 2 289 1 43 4 100 1 293 2 380 1 
294 1 295 1 212 1 214 2 146 1 26 1 107 1 175 1 302 1 178 4 32 2 322 1 249 4 251 1 183 1 252 1 253 1 255 2 137 2 188 1 226 1 373 1 158 4 53 1 194 1 228 1 376 2 260 2 117 1 334 1 19 2 199 1 234 1 58 1 336 1 59 2 289 1 43 4 100 1 293 2 380 1 
294 1 295 1 120 1 242 1 214 2 146 1 105 2 299 2 26 1 107 1 175 1 302 1 178 4 32 2 322 1 249 4 251 1 183 1 345 2 252 1 253 1 137 2 188 1 226 1 373 1 158 4 194 1 228 1 376 2 117 1 334 1 19 2 199 1 234 1 356 1 58 1 336 1 59 2 289 1 43 4 380 1 
294 1 295 1 212 1 214 3 146 1 107 1 26 1 175 1 302 1 32 2 178 5 322 1 249 5 251 1 183 1 252 1 253 1 255 2 137 2 188 1 226 1 373 1 158 4 53 1 194 1 228 1 260 2 117 1 376 3 334 1 19 2 199 1 96 1 234 1 58 1 336 1 59 3 289 1 43 4 100 1 293 2 380 1 
294 1 295 1 212 1 214 3 146 1 107 1 26 1 175 1 302 1 32 2 178 5 322 1 249 5 251 1 183 1 252 1 253 1 255 2 137 2 188 1 226 1 373 1 158 4 53 1 194 1 228 1 260 2 117 1 376 3 334 1 19 2 199 1 96 1 234 1 58 1 336 1 59 3 289 1 43 4 100 1 293 2 380 1 
295 1 294 1 120 1 299 2 175 1 302 1 128 1 178 4 249 4 251 1 183 1 345 2 252 1 253 1 188 1 137 2 194 1 199 1 19 2 58 1 59 2 214 2 105 2 146 1 107 1 26 1 32 2 226 1 373 1 158 4 228 1 117 1 376 2 334 1 234 1 336 1 289 1 43 4 380 1 
325 1 266 1 31 1 282 1 341 1 349 1 215 1 17 2 9 1 
83 1 143 1 240 2 341 2 215 1 125 1 272 3 88 1 110 1 112 2 184 1 9 2 90 14 325 2 347 1 305 4 257 1 12 11 13 1 307 11 282 2 193 2 349 2 17 4 231 6 95 1 201 1 39 8 286 1 359 2 167 1 290 1 313 3 
169 1 101 1 341 1 215 1 342 1 179 1 344 1 130 1 34 1 183 2 9 1 252 2 90 2 346 1 325 1 371 1 305 1 347 1 70 1 71 1 257 1 282 1 374 1 349 1 17 2 229 1 330 1 230 1 231 1 334 1 335 1 95 1 233 1 39 1 203 1 264 1 379 1 167 1 
339 2 169 2 240 8 170 1 341 3 173 1 123 1 179 3 344 2 88 4 304 1 130 3 183 3 184 2 252 3 9 3 90 20 346 2 347 1 305 7 257 1 12 7 307 7 193 2 349 3 17 6 95 1 355 1 203 2 264 2 359 2 101 2 215 3 29 2 320 1 110 4 221 1 112 3 324 1 325 3 371 1 70 1 327 1 71 2 113 1 282 3 330 3 229 2 231 10 334 1 77 2 335 1 233 1 39 10 286 3 379 1 42 2 118 2 167 2 
314 1 266 1 101 2 170 1 63 1 341 2 24 2 215 2 124 1 218 1 177 1 274 1 129 1 179 7 344 2 183 1 130 8 252 1 9 2 277 1 90 2 325 2 371 2 347 1 70 1 71 2 282 2 116 1 349 2 17 4 229 3 330 8 231 1 334 1 95 1 233 1 39 1 379 1 208 1 
240 1 341 1 215 1 367 1 110 1 183 1 112 1 184 1 9 1 252 1 90 3 325 1 305 1 70 1 12 1 257 1 307 1 282 1 193 1 349 1 17 2 352 1 231 2 334 1 39 1 286 1 379 1 359 1 209 1 
325 1 266 1 240 1 305 1 12 1 307 1 341 1 282 1 349 1 308 1 215 1 17 2 39 2 88 1 112 1 359 1 90 2 9 1 
325 1 266 1 240 1 305 1 12 1 307 1 341 1 282 1 349 1 215 1 17 2 197 1 231 2 286 1 110 1 184 1 90 2 9 1 
266 1 240 2 341 1 215 1 88 1 110 1 112 1 184 1 9 1 90 4 325 1 305 2 12 2 307 2 193 1 282 1 349 1 17 2 231 2 39 2 286 1 359 1 
325 1 240 1 305 1 12 1 307 1 341 1 282 1 349 1 308 1 215 1 17 2 39 2 88 1 112 1 359 1 90 2 277 1 9 1 
325 1 240 1 305 1 12 1 307 1 341 1 282 1 349 1 215 1 17 2 197 1 231 2 286 1 110 1 184 1 90 2 277 1 9 1 
240 2 341 1 215 1 88 1 110 1 112 1 184 1 9 1 277 1 90 4 325 1 305 2 12 2 307 2 193 1 282 1 349 1 17 2 231 2 39 2 286 1 359 1 
240 2 341 1 215 1 88 1 110 1 112 1 184 1 90 4 9 1 325 1 305 2 12 2 307 2 193 1 282 1 349 1 17 2 231 2 39 2 286 1 359 1 
169 1 101 1 341 1 215 1 179 1 344 1 130 1 183 1 90 2 252 1 9 1 346 1 325 1 371 1 347 1 71 1 282 1 349 1 17 2 330 1 229 1 231 1 95 1 39 1 203 1 264 1 42 1 167 1 
101 1 341 1 215 1 179 1 344 1 130 1 183 1 90 2 252 1 9 1 325 1 371 1 347 1 71 1 282 1 349 1 17 2 330 1 229 1 231 1 95 1 200 1 39 1 285 1 203 1 264 1 167 1 168 1 
240 2 341 1 215 1 88 1 110 1 112 1 184 1 9 1 90 4 325 1 305 2 257 1 12 2 307 2 193 1 282 1 349 1 17 2 231 2 39 2 286 1 359 1 
169 1 339 1 101 1 240 2 341 1 215 1 179 1 274 1 110 1 88 1 344 1 112 1 130 1 183 1 184 1 90 4 252 1 9 1 346 1 325 1 305 2 12 2 71 1 307 2 282 1 193 1 349 1 17 2 330 1 229 1 231 2 39 2 286 1 203 1 359 1 264 1 42 1 
240 1 341 1 215 1 88 1 183 1 112 1 184 1 9 1 252 1 90 3 325 1 305 1 70 1 257 1 12 1 307 1 282 1 193 1 349 1 17 2 331 1 231 1 352 1 334 1 39 2 286 1 379 1 359 1 209 1 
210 1 211 1 240 7 362 1 125 2 127 4 272 4 273 1 343 1 110 4 88 3 181 1 131 1 112 4 184 4 9 2 90 30 325 2 281 1 282 2 193 4 349 2 17 4 262 1 231 16 39 14 56 1 286 4 359 4 290 2 360 2 313 2 
210 1 362 2 125 1 127 2 272 1 273 1 181 1 131 1 112 1 184 1 9 1 90 10 325 1 282 1 193 1 349 1 17 2 231 5 39 5 56 2 286 1 359 1 313 1 360 1 
210 1 240 4 362 2 125 3 127 4 272 5 273 1 343 1 110 2 88 2 181 1 131 1 112 3 184 3 9 2 90 28 325 2 281 1 73 1 282 2 193 3 349 2 17 4 262 1 231 15 39 13 56 1 286 3 359 3 290 2 360 1 313 3 
210 1 240 5 362 2 125 3 127 4 272 5 273 1 343 1 110 3 88 2 181 1 131 1 112 3 184 3 9 2 90 28 325 2 281 1 73 1 282 2 193 3 349 2 17 4 262 1 231 15 39 13 56 1 286 3 359 3 290 2 360 1 313 3 
210 1 143 1 240 9 362 1 123 3 125 2 127 4 272 3 273 1 110 6 88 3 221 3 181 1 304 3 131 1 112 6 184 3 9 1 90 41 325 1 327 3 113 3 281 1 282 1 193 3 349 1 17 2 262 1 231 19 39 22 355 3 56 1 286 6 359 3 290 1 360 1 313 3 
11 1 263 1 67 1 363 1 33 1 213 1 235 1 1 1 148 1 133 1 
57 1 21 1 
263 1 67 1 52 1 317 1 363 1 33 1 213 1 235 1 207 1 
126 1 180 1 
109 1 78 1 6 1 
294 1 11 1 363 1 103 2 213 1 158 1 1 1 174 1 148 1 67 1 263 1 333 1 354 1 33 1 235 1 43 1 276 1 61 1 
294 1 11 1 363 1 103 2 213 1 158 1 1 1 174 1 148 1 67 1 263 1 333 1 354 1 33 1 235 1 43 1 276 1 61 1 
294 1 11 1 363 1 103 2 213 1 158 1 1 1 174 1 148 1 67 1 263 1 333 1 354 1 33 1 235 1 43 1 276 1 61 1 
126 1 180 1 6 1 
126 1 180 1 6 1 
109 1 78 1 
109 1 78 1 6 1 
370 1 206 1 
363 1 103 1 213 1 171 1 67 1 176 1 33 1 183 2 276 1 252 2 370 1 70 2 280 1 189 1 158 1 16 1 351 1 263 1 334 2 354 1 235 1 21 1 57 1 206 1 379 2 167 1 43 1 
101 1 63 1 341 1 24 2 215 1 271 1 218 1 179 2 344 1 130 2 183 2 252 2 9 1 90 2 325 1 223 1 347 1 71 1 257 1 115 1 282 1 349 1 227 1 17 2 229 1 330 2 231 1 334 2 95 1 39 1 81 1 
238 1 268 1 316 2 170 1 71 1 258 1 259 1 2 1 330 2 93 1 138 1 80 1 179 2 274 1 303 1 344 1 130 2 378 1 44 1 
238 1 268 1 316 2 170 1 71 1 258 1 37 1 330 1 93 1 138 1 80 1 179 1 303 1 344 1 130 1 378 1 44 1 
101 1 371 1 71 1 259 1 66 1 229 1 330 1 138 1 247 1 124 1 177 1 179 1 344 1 130 1 
238 1 268 1 316 2 170 1 71 1 258 1 259 1 2 1 330 1 93 1 138 1 80 1 179 1 303 1 344 1 130 1 378 1 44 1 
20 1 
31 1 
294 2 255 1 212 1 137 1 188 1 158 1 146 1 107 1 260 1 175 1 178 1 234 1 58 1 289 1 43 1 345 1 293 1 
294 8 297 2 84 1 175 9 5 3 179 3 178 5 344 3 130 3 182 2 7 1 184 2 345 12 253 2 255 6 137 3 188 8 193 2 310 2 140 1 312 2 203 3 58 4 358 2 359 2 23 6 101 3 315 2 144 1 104 6 146 2 216 1 319 1 107 4 274 1 112 2 153 2 36 2 371 1 224 1 326 2 71 4 158 5 229 10 330 3 79 2 284 1 234 4 286 2 118 2 289 4 166 2 43 5 45 1 
294 4 65 1 104 5 146 1 107 2 175 7 125 1 272 1 178 1 112 2 184 2 345 6 255 3 136 1 91 1 137 1 188 4 114 1 193 2 158 1 262 1 312 1 234 2 286 2 377 1 58 2 359 2 289 2 43 1 23 5 313 1 
340 1 315 1 107 1 175 2 221 1 183 1 304 1 112 2 252 1 306 1 70 1 188 2 113 1 373 1 158 1 53 1 163 1 353 1 334 1 312 2 234 1 286 1 58 1 288 1 379 1 289 1 43 1 209 1 
294 1 188 1 146 1 216 1 107 1 175 1 234 1 58 1 289 1 45 1 
294 5 315 1 255 5 188 5 193 2 104 5 175 5 312 2 286 2 112 2 118 1 359 2 184 2 345 10 23 5 
294 1 178 1 137 1 158 1 146 1 43 1 
101 1 239 1 144 2 84 2 107 1 175 2 124 1 49 1 177 1 179 4 178 4 344 1 130 4 36 2 371 2 224 1 156 1 71 1 188 2 137 2 158 3 229 1 330 4 97 1 234 2 58 2 98 1 289 2 43 3 
169 1 101 1 341 1 215 1 179 1 344 1 130 1 183 3 90 1 9 1 252 3 325 1 346 1 371 1 347 1 70 2 71 1 282 1 349 1 54 1 17 2 330 1 229 1 231 1 334 2 353 1 203 1 379 2 42 1 264 1 167 1 209 2 
294 4 36 1 255 2 327 1 188 2 84 1 104 2 146 2 107 1 175 1 234 1 58 1 289 1 345 4 23 2 
363 1 33 1 99 1 
363 1 33 1 99 1 
11 1 370 1 363 1 33 1 366 1 
363 1 33 1 99 1 
363 1 33 1 92 1 
363 1 33 1 92 1 
363 1 33 1 92 1 
363 1 33 1 
263 1 213 1 
325 2 240 3 327 1 113 1 282 2 349 2 85 1 17 4 123 1 231 4 39 4 355 1 286 1 88 1 110 2 221 1 112 1 304 1 90 8 9 2 
31 1 
325 1 240 2 282 1 193 1 349 1 329 1 17 2 231 2 39 2 286 1 110 1 88 1 112 1 359 1 184 1 9 1 90 4 
240 2 193 1 125 1 231 4 272 2 39 3 286 1 110 1 88 1 112 1 359 1 184 1 290 1 90 7 313 1 
83 1 143 1 240 9 85 2 123 1 272 2 88 4 110 5 221 1 304 2 112 3 184 2 90 23 9 2 325 2 327 1 113 2 193 2 282 2 349 2 17 4 231 12 39 11 355 1 202 1 286 3 359 2 290 1 313 2 
231 1 272 1 90 1 
39 1 90 1 313 1 
325 1 240 3 282 1 193 1 349 1 17 2 329 1 231 3 39 3 286 1 88 1 110 2 112 1 118 1 359 1 184 1 9 1 90 6 
240 2 65 1 125 1 272 1 88 1 110 1 131 1 112 2 184 2 90 12 9 1 325 1 136 1 91 1 114 1 282 1 193 2 349 1 17 2 262 1 231 6 39 6 286 2 359 2 313 1 
240 2 113 1 231 3 39 3 286 1 110 1 88 1 221 1 112 1 304 1 90 6 
325 1 240 2 113 1 282 1 349 1 85 1 17 2 123 1 231 2 39 1 202 1 355 1 88 1 110 1 304 1 90 3 9 1 
325 1 340 1 240 5 113 2 282 1 349 1 17 2 231 5 39 5 286 2 110 3 88 2 221 1 131 1 304 2 112 2 9 1 90 10 
325 1 240 1 282 1 349 1 17 2 39 2 88 1 131 1 112 1 359 1 9 1 90 2 
325 1 240 2 282 1 193 1 349 1 17 2 231 2 39 2 286 1 110 1 88 1 131 1 112 1 359 1 184 1 9 1 90 4 
325 3 240 2 113 1 282 3 349 3 85 1 17 6 231 2 39 1 202 1 343 1 110 1 88 1 131 1 304 1 90 3 9 3 
240 12 85 2 245 1 123 1 125 1 272 4 343 1 88 5 110 7 221 2 304 3 131 1 112 5 184 3 9 5 90 34 325 5 327 1 113 3 191 1 192 1 282 5 193 3 349 5 329 1 17 10 231 18 39 16 355 1 202 1 286 5 359 3 290 1 313 3 
240 2 123 1 125 1 272 1 110 2 221 1 112 1 131 1 304 1 90 8 9 1 325 1 327 1 113 1 282 1 349 1 17 2 262 1 231 4 39 4 355 1 286 1 313 1 
240 3 123 1 125 1 272 2 110 2 88 1 221 1 304 1 131 1 112 2 90 11 9 2 325 2 327 1 113 1 282 2 193 1 349 2 17 4 329 1 262 1 231 5 39 6 355 1 286 1 359 1 290 1 313 1 
240 2 65 1 85 1 125 1 272 1 88 1 110 1 131 1 112 2 184 2 90 13 9 3 325 3 136 1 91 1 114 1 282 3 193 2 349 3 329 1 17 6 262 1 231 7 39 6 286 2 359 2 313 1 
240 2 65 1 85 1 125 1 272 1 88 1 110 1 131 1 112 2 184 1 90 11 9 3 325 3 136 1 91 1 114 1 282 3 193 2 349 3 329 1 17 6 262 1 231 4 39 7 286 1 359 2 313 1 
240 2 123 1 125 1 272 1 110 2 221 1 112 1 131 1 304 1 90 8 9 1 325 1 327 1 113 1 282 1 349 1 17 2 262 1 231 4 39 4 355 1 286 1 313 1 
240 2 65 1 125 1 272 1 88 1 110 1 131 1 112 2 184 2 90 12 9 1 325 1 136 1 91 1 114 1 282 1 193 2 349 1 17 2 262 1 231 6 39 6 286 2 359 2 313 1 
240 2 65 1 85 2 125 1 272 1 88 1 110 1 131 1 112 2 184 1 90 12 9 4 325 4 136 1 91 1 114 1 282 4 193 2 349 4 329 1 17 8 262 1 231 5 39 7 286 1 359 2 313 1 
240 4 65 1 85 2 125 1 272 1 343 1 88 2 110 2 131 1 112 2 184 1 90 12 9 4 325 4 136 1 91 1 114 1 282 4 193 2 349 4 17 8 262 1 231 5 39 7 286 1 359 2 313 1 
240 6 113 3 123 2 231 4 39 3 355 1 286 1 110 3 88 3 221 1 304 3 112 1 90 7 
240 2 65 1 85 2 125 1 272 1 343 1 88 1 110 1 131 1 112 2 184 1 90 12 9 4 325 4 136 1 91 1 114 1 282 4 193 2 349 4 17 8 262 1 231 5 39 7 286 1 359 2 313 1 
334 1 199 1 219 1 183 1 160 1 167 1 252 1 
261 1 186 1 334 1 199 1 219 1 172 1 183 1 160 1 159 1 165 1 167 1 252 1 
371 1 31 1 179 1 130 1 330 1 
346 1 101 1 371 1 70 1 71 1 229 1 330 1 334 1 233 1 179 1 203 1 344 1 183 2 130 1 264 1 379 1 167 1 252 2 
346 1 101 2 70 1 226 1 71 1 144 1 373 1 229 3 330 1 310 1 334 2 233 1 179 1 203 2 344 1 182 1 336 1 183 2 130 1 264 1 379 2 167 1 252 2 
369 1 101 2 70 1 226 1 71 1 144 1 373 1 229 3 330 2 310 1 334 2 233 1 179 2 285 1 203 2 344 1 182 1 336 1 183 2 130 2 264 1 379 2 167 1 252 2 
294 1 101 1 144 1 146 1 5 1 178 1 179 3 344 1 89 1 130 3 182 1 153 1 369 1 253 1 371 1 71 1 72 1 158 2 229 4 330 3 310 1 203 1 43 2 
369 1 294 1 253 1 101 1 371 1 71 1 144 1 158 2 146 1 330 3 229 4 310 1 5 1 179 3 178 1 203 1 358 1 344 1 182 1 130 3 153 1 43 2 
314 1 71 1 179 1 344 1 130 1 330 1 
314 1 101 2 371 2 170 1 63 1 71 3 24 1 116 1 330 7 229 3 18 1 311 1 140 1 274 1 129 1 179 6 203 1 344 2 130 7 208 1 119 1 
339 1 169 1 101 1 240 2 341 2 215 2 123 1 29 1 274 1 179 1 110 2 344 1 221 1 112 1 304 1 183 2 130 1 90 6 9 2 252 2 325 2 346 1 223 1 305 1 70 1 12 1 327 1 71 1 257 1 307 1 113 1 282 2 349 2 17 4 229 1 330 1 231 3 334 1 39 3 233 1 355 1 286 1 203 1 264 1 379 1 42 1 167 2 
294 1 297 1 146 1 216 1 107 2 175 1 5 1 179 1 178 2 130 1 153 1 253 1 371 1 224 1 326 1 188 1 137 1 158 3 16 1 330 1 229 2 234 2 58 2 358 1 289 2 43 3 166 1 45 1 
314 1 101 1 71 2 330 2 229 2 140 1 274 1 179 2 203 1 344 1 130 2 153 1 7 1 
369 1 101 1 371 1 71 1 330 4 229 1 124 1 177 1 179 4 274 1 287 1 344 1 130 4 
324 1 101 1 144 1 71 2 364 1 330 2 229 1 4 1 311 1 179 2 203 1 344 1 130 2 119 1 
371 1 316 1 71 1 179 1 258 1 344 1 378 1 130 1 330 1 93 1 
101 1 170 1 63 1 71 1 330 2 229 1 271 1 274 1 179 2 344 1 130 2 
101 2 371 1 144 1 63 1 71 2 116 1 330 5 229 3 124 1 177 1 179 4 274 1 287 1 344 2 130 5 208 1 
101 2 371 1 144 1 63 1 71 2 116 1 330 5 229 3 124 1 177 1 179 4 274 1 220 1 287 1 344 2 130 5 
101 1 371 1 70 1 71 1 229 1 330 1 334 1 233 1 179 1 285 1 203 1 344 1 183 2 130 1 264 1 379 1 167 1 252 2 
101 1 144 1 71 2 330 1 229 1 18 1 311 1 140 1 179 1 203 1 344 1 130 1 119 1 
134 1 198 1 328 1 167 1 27 1 
294 1 134 1 253 1 226 1 328 2 373 1 158 2 146 1 16 1 38 1 27 2 198 2 232 1 336 1 251 1 167 1 43 2 291 1 10 1 
134 1 328 1 115 1 227 1 198 1 334 1 81 1 183 1 252 1 
134 1 38 1 10 1 
31 1 
150 1 279 1 248 1 111 1 236 1 22 1 222 1 
332 1 296 1 222 1 
267 1 142 2 279 1 135 1 69 1 150 3 40 1 248 1 111 1 236 1 22 1 222 3 
150 2 279 1 361 1 248 1 111 1 236 1 145 1 22 1 222 2 
150 1 268 1 279 1 316 1 248 1 40 1 258 1 111 1 86 1 338 1 222 1 
150 1 279 1 248 1 40 1 111 1 236 1 222 1 
150 1 248 1 40 1 111 1 236 2 22 1 222 1 
237 1 150 2 279 1 248 2 40 1 111 2 74 1 236 1 365 1 222 2 
361 2 279 2 372 1 243 1 86 1 150 3 40 1 248 1 111 1 236 1 22 1 8 1 222 3 
238 1 268 1 279 1 361 1 316 2 258 1 93 1 150 2 30 1 40 1 248 1 111 1 236 1 22 1 222 2 
361 2 279 2 298 1 145 1 86 1 150 4 40 1 248 2 111 2 236 1 22 1 8 1 222 4 
150 1 279 1 248 1 40 1 111 1 236 1 22 1 222 1 
142 1 267 1 361 2 279 3 69 1 350 1 86 1 150 4 248 1 111 1 236 2 22 2 8 1 222 4 
279 1 361 1 270 1 150 2 40 1 248 1 111 1 236 1 132 1 22 1 222 2 337 1 
267 2 142 2 279 1 69 1 190 1 150 3 40 1 248 1 111 1 236 1 22 1 222 3 
48 1 278 1 279 2 318 2 
150 1 248 1 40 1 111 1 323 1 222 1 
150 2 279 1 361 1 248 1 40 1 372 1 111 1 236 1 22 1 222 2 
321 1 
150 1 279 1 248 1 40 1 111 1 236 1 22 1 222 1 
142 1 361 1 279 1 372 1 150 3 40 1 248 1 111 1 236 1 22 1 222 3 
279 1 350 1 86 1 8 1 
279 1 236 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (181,272,301,316,379) (70,263) (70,263) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (181,272,301,316,379) (70,263) (70,263) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (181,272,301,316,379) (70,263) (70,263) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (181,272,301,316,379) (70,263) (70,263) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.ArrayIndexOutOfBoundsException 128 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 155 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.RuntimeException 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1921 | return null
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2116 | = null
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3533 | stmt -> ;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> -1
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String; | RETURN | 1613 | return null
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
263 1 341 1 303 1 376 1 54 1 171 1 65 1 29 1 346 1 379 1 309 1 184 1 70 1 365 1 
263 1 303 1 341 1 376 1 54 1 171 1 65 1 29 1 346 1 379 1 309 1 184 1 70 1 365 1 
263 1 303 1 341 1 376 1 54 1 171 1 65 1 29 1 346 1 379 1 309 1 184 1 70 1 365 1 
263 1 303 1 341 1 376 1 54 1 171 1 65 1 29 1 346 1 379 1 309 1 184 1 70 1 365 1 
62 1 117 1 126 1 303 4 341 1 266 1 142 3 376 1 80 3 89 1 54 1 143 2 171 1 307 1 153 2 309 4 184 1 178 1 
62 1 339 1 117 1 126 1 303 2 142 1 344 1 376 1 54 1 171 1 65 1 144 1 346 1 379 1 309 2 184 1 
332 1 62 1 117 1 303 3 142 2 80 1 54 2 89 1 171 1 153 1 346 1 309 3 184 2 
332 1 62 1 117 1 126 1 341 1 303 9 304 1 266 1 142 5 376 1 80 7 143 2 54 2 89 3 171 1 307 1 153 4 346 1 309 9 184 2 102 1 178 1 279 1 222 1 
332 1 62 1 117 1 126 1 341 1 303 9 304 1 266 1 142 5 376 1 80 7 143 2 54 2 89 3 171 1 307 1 153 4 346 1 309 9 184 2 102 1 178 1 279 1 222 1 
193 1 22 1 87 1 
193 1 369 1 198 2 
44 1 300 2 315 2 333 2 24 2 114 1 141 2 325 2 
330 1 190 1 315 2 314 1 333 2 162 1 24 2 51 1 27 1 141 3 267 2 168 1 247 1 5 1 6 1 274 2 175 1 297 1 325 2 38 1 368 1 300 3 15 1 237 1 127 2 306 1 44 1 182 2 345 1 347 1 93 1 114 1 131 1 352 1 357 2 47 1 71 1 
300 1 315 1 333 1 24 1 320 1 202 1 114 1 337 1 141 1 325 1 
300 1 333 1 193 1 77 1 343 1 141 1 197 1 87 1 154 1 202 1 276 1 298 1 323 1 356 1 
300 1 315 1 333 1 193 1 24 1 77 1 343 1 141 1 197 1 87 1 202 1 276 1 323 2 325 1 356 2 
0 1 317 1 10 1 323 1 356 1 
0 1 193 1 68 1 10 1 167 1 323 2 87 1 356 2 
0 1 323 1 356 1 
300 1 315 1 333 1 24 1 340 1 141 1 320 1 202 1 114 1 337 1 10 1 323 1 325 1 356 1 
193 1 
0 1 193 1 68 1 10 1 323 2 87 1 129 1 356 2 
242 1 0 2 50 2 137 1 252 1 193 1 78 1 211 1 87 1 92 1 68 1 7 1 10 2 323 5 37 1 61 1 148 2 356 5 326 2 
44 1 22 1 
300 2 315 1 333 2 24 1 110 1 119 1 141 2 44 2 325 1 
107 1 277 1 26 1 
300 1 314 1 51 1 118 1 127 1 141 1 168 1 306 1 44 1 182 1 345 1 347 1 274 1 175 1 131 1 352 1 
107 1 300 2 314 1 14 1 315 1 333 1 51 1 127 1 141 2 168 1 306 1 345 1 182 1 347 1 274 1 175 1 131 1 352 1 123 1 325 1 
44 1 300 3 14 1 315 3 333 3 24 1 141 3 325 3 
300 1 315 1 333 1 202 1 337 1 141 1 325 1 
300 1 315 1 333 1 24 1 202 1 110 1 119 1 141 1 325 1 
330 1 190 1 314 1 315 3 333 3 51 1 24 2 77 1 27 1 141 4 197 1 267 2 168 1 247 1 5 1 274 1 175 1 202 1 276 1 297 1 323 1 123 1 325 3 368 1 300 4 210 1 14 1 237 1 343 1 110 1 127 1 306 1 44 1 345 1 182 1 347 1 93 1 114 1 350 1 131 1 352 1 357 1 47 1 356 1 
44 1 154 1 300 2 315 1 14 1 333 2 275 1 141 2 325 1 
300 3 14 2 315 3 210 1 333 3 24 1 193 1 77 1 110 1 343 1 141 3 197 1 214 1 202 1 276 1 323 1 123 1 325 3 356 1 
107 1 300 2 14 1 315 2 333 2 24 1 110 1 141 2 277 1 325 2 
300 1 314 1 51 1 127 1 141 1 168 1 306 1 44 1 182 1 345 1 347 1 274 1 175 1 131 1 352 1 
300 1 314 1 127 1 141 1 168 1 3 1 306 1 44 1 182 1 345 1 274 1 175 1 131 1 352 1 187 1 
330 1 191 1 293 1 26 2 27 1 267 2 200 1 336 1 82 1 146 1 277 2 297 1 338 1 38 2 368 1 107 2 237 2 66 1 112 1 93 1 288 1 221 1 47 1 357 4 
300 1 315 1 333 1 202 1 197 1 141 1 169 1 325 1 
300 5 14 2 315 4 333 5 24 1 110 1 141 5 246 1 154 1 44 1 275 1 123 1 133 1 325 4 
300 2 315 2 333 2 202 1 337 1 141 2 169 1 325 2 
239 1 170 1 
239 1 170 1 
215 1 360 1 
215 1 360 1 
215 1 360 1 
239 1 106 1 170 1 
239 1 374 1 170 1 
215 1 273 1 217 1 239 2 360 1 170 2 
239 1 106 1 170 1 
239 1 106 1 170 1 
231 1 239 1 170 1 
231 1 239 1 170 1 
231 1 239 1 170 1 
367 2 193 1 139 3 229 1 120 2 170 2 361 1 30 1 273 1 250 1 33 1 239 2 58 2 260 1 95 2 323 2 236 1 356 2 12 2 
367 1 300 2 315 2 333 2 253 1 17 1 370 1 372 1 139 1 100 1 374 1 141 2 120 1 170 1 44 1 239 1 58 1 35 1 260 1 354 1 323 1 95 1 325 2 356 1 
126 1 341 1 376 1 
339 1 126 1 376 1 
339 1 63 1 259 1 341 2 376 3 46 1 
339 1 63 1 259 1 176 1 341 1 376 2 
339 1 63 2 259 1 341 1 376 2 
242 2 0 1 50 1 137 3 191 1 76 2 78 1 193 2 227 1 100 1 198 3 336 1 104 1 10 4 323 5 148 1 149 1 326 1 207 2 253 1 369 1 17 1 18 1 254 1 87 1 258 1 112 1 68 1 288 1 134 2 356 5 72 1 
242 6 0 6 96 1 50 2 137 8 191 3 193 5 78 1 317 5 198 9 336 3 57 1 103 1 104 1 177 1 10 7 323 9 324 5 148 2 149 2 326 2 327 1 207 6 369 3 17 4 87 1 258 3 92 1 112 3 68 1 329 1 288 3 134 6 356 9 72 2 
242 2 50 1 137 3 76 1 191 1 193 3 227 1 198 4 336 1 10 2 323 3 148 1 149 1 326 1 207 2 369 2 17 1 18 1 87 1 258 1 112 1 92 1 288 1 134 2 356 3 72 1 
242 4 50 1 137 5 76 2 191 2 193 4 227 1 198 7 336 2 103 1 177 1 10 3 323 4 148 1 149 1 326 1 207 4 369 3 17 2 18 1 87 1 258 2 112 2 92 1 329 1 288 2 134 4 356 4 72 1 
22 1 168 1 205 1 
195 1 168 1 
220 1 
168 1 306 1 
40 1 111 1 131 1 205 2 168 3 306 1 
131 1 168 1 306 1 
168 1 172 1 
39 1 84 1 16 1 237 3 180 1 269 2 66 2 336 1 216 1 112 1 113 1 311 1 322 1 296 1 338 3 357 7 38 4 
39 1 84 1 16 1 237 3 180 1 269 2 66 2 336 1 216 1 112 1 113 1 311 1 322 1 296 1 338 3 357 7 38 4 
39 1 84 1 16 1 237 3 180 1 269 2 66 2 336 1 216 1 112 1 113 1 311 1 186 1 322 1 296 1 338 3 357 7 38 4 
330 1 191 3 196 1 334 1 163 1 27 1 267 2 268 1 269 3 31 3 336 6 322 3 296 2 338 11 38 21 39 5 84 1 16 2 180 1 237 19 284 1 258 3 21 4 66 6 130 1 216 2 112 6 93 1 113 3 287 1 311 1 312 1 288 3 47 1 357 40 
330 1 216 1 93 1 296 1 128 1 27 1 267 2 269 1 47 1 91 1 357 1 38 1 
243 1 117 1 265 1 142 1 165 1 80 1 54 1 4 1 171 1 56 1 274 1 175 1 62 1 339 1 126 1 341 1 303 2 127 1 376 2 213 1 182 1 346 1 345 1 309 2 348 1 184 1 380 1 156 1 158 1 46 1 
243 1 117 1 264 1 265 1 142 1 165 1 80 2 54 1 4 1 56 1 274 1 175 1 13 1 62 1 339 1 126 1 341 1 303 3 127 1 376 2 213 1 182 1 346 1 345 1 309 3 184 1 380 1 156 1 349 1 46 1 
243 1 117 1 265 1 142 1 165 1 80 2 4 1 56 1 274 1 175 1 13 1 62 1 339 1 126 1 303 2 341 1 127 1 376 2 346 1 182 1 345 1 309 2 380 1 349 1 46 1 
243 2 136 1 264 1 303 1 127 1 168 1 55 1 54 1 306 1 238 1 4 2 345 1 346 2 182 1 174 1 309 1 274 1 175 1 184 1 321 1 380 2 352 1 355 1 
243 1 265 1 165 1 54 1 4 1 171 1 56 1 274 1 175 1 13 1 339 1 126 1 341 1 303 1 127 1 376 2 213 1 182 1 346 1 345 1 309 1 348 1 184 1 380 1 156 1 46 1 
25 1 
242 2 0 6 50 1 137 2 333 1 291 1 193 2 98 4 140 1 141 1 197 1 198 2 294 1 202 1 9 1 298 1 148 1 149 1 300 1 302 2 64 1 343 1 257 1 306 1 345 1 154 1 68 3 352 2 223 1 356 5 78 1 79 1 77 1 168 1 230 2 232 1 274 2 175 1 321 1 276 1 234 1 364 2 323 5 282 1 326 1 369 2 283 2 127 2 87 1 328 2 377 2 90 2 238 1 182 2 94 1 
0 2 333 1 77 1 98 2 141 1 140 1 197 1 294 1 202 1 276 1 234 1 298 1 323 3 282 1 300 1 283 1 343 1 129 1 257 1 154 1 68 1 356 3 
0 1 333 1 77 1 193 1 98 3 141 1 140 1 197 1 294 1 202 1 276 1 234 1 298 1 323 3 282 1 300 1 343 1 87 1 129 1 257 1 377 1 154 1 68 1 356 3 
0 2 333 1 77 1 193 1 98 3 141 1 140 1 197 1 294 1 202 1 276 1 234 1 298 1 323 3 282 1 300 1 302 1 283 1 343 1 129 1 87 1 257 1 377 1 154 1 68 1 356 3 
242 1 0 5 50 1 137 1 333 2 193 1 98 3 197 1 141 2 140 1 294 1 202 2 337 1 105 1 298 1 148 1 300 2 302 3 340 1 64 1 343 1 257 1 20 1 154 1 68 2 114 1 223 1 356 4 315 1 24 1 77 1 78 1 230 1 362 1 320 1 276 1 234 1 364 1 323 4 325 1 282 1 326 1 369 1 283 3 87 1 129 1 328 1 90 1 377 1 43 1 241 1 
242 1 0 4 50 1 137 1 333 1 193 2 98 4 197 1 141 1 140 1 198 2 294 1 202 1 298 1 148 1 300 1 302 2 64 1 343 1 257 1 154 1 68 2 223 1 356 4 77 1 78 1 230 2 232 1 276 1 234 1 364 2 323 4 282 1 326 1 369 2 283 2 328 2 87 1 90 2 377 2 
242 1 0 2 50 1 137 1 333 2 193 1 98 3 197 1 140 1 141 2 294 1 202 2 337 1 105 1 298 1 148 1 300 2 302 1 340 1 64 1 343 1 257 1 154 1 68 1 114 1 223 1 356 3 315 1 24 1 78 1 77 1 230 1 362 1 320 1 276 1 234 1 364 1 323 3 325 1 282 1 326 1 369 1 283 1 328 1 87 1 90 1 377 1 241 1 
242 1 0 2 50 1 137 1 333 2 193 1 98 3 197 1 140 1 141 2 294 1 202 2 337 1 105 1 298 1 148 1 300 2 302 1 340 1 64 1 343 1 257 1 154 1 68 1 114 1 223 1 356 3 315 1 24 1 78 1 77 1 230 1 362 1 320 1 276 1 234 1 364 1 323 3 325 1 282 1 326 1 369 1 283 1 328 1 87 1 90 1 377 1 241 1 
300 1 333 1 77 1 98 2 343 1 197 1 140 1 141 1 257 1 154 1 294 1 155 1 202 1 276 1 34 1 234 1 323 2 298 1 356 2 282 1 
242 1 0 3 50 1 137 1 333 2 193 1 98 4 197 1 140 1 141 2 294 1 202 2 337 1 105 1 298 1 148 1 300 2 302 2 340 1 64 1 343 1 257 1 20 1 154 1 68 1 114 1 223 1 356 3 315 1 24 1 77 1 78 1 230 1 362 1 320 1 276 1 234 1 364 1 323 3 325 1 282 1 326 1 369 1 283 2 328 1 87 1 377 2 90 1 241 1 
242 1 0 3 50 1 137 1 333 2 193 1 98 4 197 1 140 1 141 2 294 1 202 2 337 1 105 1 298 1 148 1 300 2 302 2 340 1 64 1 343 1 257 1 20 1 154 1 68 1 114 1 223 1 356 3 315 1 24 1 77 1 78 1 230 1 362 1 320 1 276 1 234 1 364 1 323 3 325 1 282 1 326 1 369 1 283 2 328 1 87 1 377 2 90 1 241 1 
242 1 0 4 50 1 137 1 192 1 333 1 193 1 98 4 245 2 197 1 141 1 140 1 198 2 294 1 202 1 298 1 148 1 300 1 302 2 343 1 257 1 154 1 68 2 223 1 356 4 77 1 78 1 230 2 232 1 276 1 234 1 323 4 280 2 282 1 326 1 283 2 87 1 90 2 377 2 
330 1 26 1 27 1 267 2 269 1 336 1 277 1 322 1 297 1 338 2 38 3 107 1 368 1 84 1 16 1 237 3 66 2 44 2 93 1 112 1 113 1 311 1 22 1 221 1 47 1 357 6 
330 2 190 1 138 1 191 2 1 1 26 8 28 1 27 2 267 4 31 2 336 2 202 1 277 3 297 1 338 2 38 6 39 1 368 2 107 8 209 1 237 5 284 1 88 1 258 2 66 1 21 2 44 1 93 2 112 1 288 1 353 1 47 2 357 11 
330 1 190 1 314 1 315 1 333 1 51 1 226 1 118 1 141 2 27 1 168 1 267 2 274 1 175 1 59 1 277 1 297 1 123 1 325 1 38 1 366 1 368 1 300 2 14 1 237 1 127 1 88 1 306 1 44 1 345 1 182 1 347 1 93 1 131 1 352 1 47 1 357 2 71 1 
330 3 190 1 333 1 191 2 51 2 141 3 247 2 336 3 297 3 338 8 13 1 107 7 300 3 14 1 16 1 305 2 342 1 258 2 306 2 66 4 345 2 347 2 112 3 113 1 311 1 219 2 352 1 159 1 357 20 71 1 315 1 314 2 225 2 359 1 26 7 27 3 267 6 168 2 269 1 274 3 175 2 322 1 277 7 123 1 281 2 325 1 38 10 39 4 368 3 84 1 237 10 127 3 88 1 44 2 182 3 93 3 131 2 288 2 47 3 
330 2 161 1 190 1 315 1 333 1 141 1 27 2 168 3 267 4 173 1 335 1 274 7 81 1 175 2 147 1 321 1 235 1 297 2 325 1 38 1 13 1 368 2 300 1 14 1 15 2 108 1 237 1 127 8 238 1 306 2 345 2 182 8 93 2 221 1 158 1 352 2 47 2 357 2 71 1 
330 1 315 1 333 1 191 1 24 1 26 1 27 1 141 1 267 2 336 1 277 1 297 1 338 1 325 1 38 1 107 1 368 1 300 1 110 1 237 2 88 1 258 1 66 1 93 1 112 1 288 1 47 1 357 3 116 1 
39 1 330 1 107 1 368 1 191 1 26 1 27 1 267 2 336 1 93 1 146 1 277 1 297 1 221 1 338 1 357 2 47 1 38 2 
330 1 107 1 368 1 237 2 26 1 27 1 267 2 66 1 200 1 93 1 112 1 277 1 297 1 221 1 288 1 338 1 357 2 47 1 
330 1 191 1 26 2 27 1 267 2 336 1 277 2 297 1 338 2 38 2 39 1 368 1 107 2 237 2 258 1 66 1 93 1 112 1 221 1 288 1 47 1 357 4 
39 1 330 1 107 1 368 1 191 1 26 1 27 1 267 2 336 1 81 1 93 1 146 1 277 1 297 1 338 1 357 2 47 1 38 2 
330 1 107 1 368 1 237 2 26 1 27 1 267 2 66 1 200 1 81 1 93 1 112 1 277 1 297 1 288 1 338 1 357 2 47 1 
330 1 191 1 26 2 27 1 267 2 336 1 81 1 277 2 297 1 338 2 38 2 39 1 368 1 107 2 237 2 258 1 66 1 93 1 112 1 288 1 47 1 357 4 
330 1 191 1 26 2 27 1 267 2 336 1 277 2 297 1 338 2 38 2 39 1 368 1 107 2 237 2 258 1 66 1 93 1 112 1 288 1 357 4 47 1 
330 1 190 1 314 1 51 1 141 1 27 1 168 1 267 2 247 1 274 1 175 1 297 1 38 1 368 1 300 1 237 1 127 1 306 1 44 1 345 1 182 1 347 1 93 1 131 1 352 1 357 2 47 1 71 1 
330 1 190 1 314 1 292 1 141 1 27 1 168 1 267 2 3 1 274 1 175 1 297 1 38 1 368 1 300 1 237 1 127 1 306 1 44 1 345 1 182 1 93 1 131 1 187 1 352 1 357 2 47 1 71 1 
330 1 191 1 26 2 27 1 267 2 336 1 277 2 297 1 338 2 38 2 39 1 368 1 107 2 237 2 258 1 88 1 66 1 93 1 112 1 288 1 47 1 357 4 
330 1 314 1 191 1 51 1 26 2 141 1 27 1 168 1 267 2 247 1 336 1 274 1 175 1 277 2 297 1 338 2 38 2 39 1 107 2 368 1 300 1 237 2 127 1 258 1 306 1 66 1 345 1 182 1 347 1 112 1 93 1 219 1 288 1 131 1 158 1 357 4 47 1 
330 1 48 1 315 1 333 1 191 1 24 1 26 1 27 1 141 1 267 2 336 1 277 1 297 1 338 1 325 1 38 2 39 1 368 1 107 1 300 1 237 1 110 1 88 1 258 1 112 1 93 1 288 1 47 1 357 3 
330 2 75 1 191 3 97 1 27 2 267 4 271 1 31 1 249 1 336 3 203 1 338 5 36 2 38 9 39 2 371 1 237 10 256 2 284 1 258 3 91 1 21 2 66 3 93 2 183 1 112 3 312 1 288 3 47 2 357 19 
330 1 75 2 191 2 97 1 27 1 267 2 271 1 31 1 336 2 338 1 36 1 38 7 371 2 237 8 256 2 284 1 258 2 91 1 21 2 66 1 93 1 183 1 112 2 312 1 288 2 47 1 357 15 
330 2 75 2 191 3 97 1 27 2 267 4 271 1 31 2 249 1 336 3 338 3 36 1 38 10 39 1 371 1 237 12 256 2 284 2 258 3 91 1 308 1 21 4 66 2 93 2 183 1 112 3 312 2 288 3 47 2 357 22 
330 2 75 2 191 3 97 1 27 2 267 4 271 1 31 2 249 1 336 3 338 4 36 1 38 10 39 1 371 1 237 12 256 2 284 2 258 3 91 1 308 1 21 4 66 3 93 2 183 1 112 3 312 2 288 3 47 2 357 22 
330 1 331 1 75 1 191 7 97 1 1 2 2 1 27 1 267 2 269 2 271 1 31 4 336 9 122 1 322 2 338 10 36 1 206 1 38 28 39 4 84 2 16 2 371 1 237 26 256 3 284 2 258 7 91 1 21 4 66 6 93 1 183 1 112 9 113 2 311 2 312 2 288 7 157 1 313 1 47 1 357 54 
30 1 367 1 273 1 32 1 33 1 239 1 58 1 95 1 120 1 170 1 
374 1 354 1 
367 1 239 1 85 1 58 1 19 1 95 1 120 1 212 1 170 1 
367 1 193 1 139 2 229 1 120 1 170 1 361 1 30 1 273 1 33 1 239 1 58 1 260 1 323 1 95 1 236 1 356 1 12 1 
367 1 193 1 139 2 229 1 120 1 170 1 361 1 30 1 273 1 33 1 239 1 58 1 260 1 323 1 95 1 236 1 356 1 12 1 
367 1 193 1 139 2 229 1 120 1 170 1 361 1 30 1 273 1 33 1 239 1 58 1 260 1 323 1 95 1 236 1 356 1 12 1 
217 1 166 1 106 1 
217 1 166 1 106 1 
231 1 228 1 
231 1 217 1 228 1 
370 1 35 1 
315 2 333 2 139 1 100 1 141 2 120 1 170 1 361 1 58 1 10 1 35 1 323 1 325 2 12 1 367 1 300 2 17 1 253 1 370 1 372 1 374 1 44 1 239 1 95 1 354 1 115 1 356 1 
166 1 106 1 
231 1 217 1 228 1 
330 1 190 1 333 2 141 2 27 1 168 1 267 2 274 2 175 1 233 1 235 1 297 1 299 1 38 1 83 1 368 1 300 2 15 2 108 1 237 1 127 2 375 1 88 1 306 1 345 1 182 2 93 1 45 1 47 1 357 2 71 1 
13 1 339 1 74 1 126 1 341 1 127 2 265 1 319 1 165 1 376 2 345 1 182 2 274 2 175 1 380 1 156 1 204 1 158 1 46 1 
13 1 339 1 74 1 126 1 341 1 127 1 265 1 165 1 376 2 182 1 345 1 274 1 175 1 380 1 156 1 278 1 46 1 
125 1 127 1 168 1 306 1 238 1 345 1 182 1 274 1 175 1 380 1 321 1 352 1 204 1 355 1 
13 1 339 1 74 1 126 1 341 1 127 1 265 1 319 1 165 1 376 2 182 1 345 1 274 1 175 1 380 1 156 1 204 1 46 1 
286 1 
242 1 137 1 193 1 7 1 22 1 87 1 37 1 
242 1 0 1 50 1 137 1 78 1 193 2 198 1 364 1 323 1 148 1 326 1 369 1 64 1 328 1 87 1 68 1 356 1 
242 8 0 5 50 4 137 9 191 2 193 8 195 3 52 1 53 2 198 12 336 2 7 1 205 2 148 4 149 2 208 2 207 6 151 1 258 2 306 3 345 3 112 2 68 3 218 1 261 1 158 1 352 1 224 2 356 5 225 2 78 4 77 2 318 2 168 10 172 2 274 3 175 4 323 5 37 1 326 4 40 1 124 2 369 6 41 2 127 3 42 2 87 2 182 3 94 1 131 3 289 1 288 2 132 2 134 6 
242 3 50 1 137 5 191 1 333 1 193 4 141 1 198 6 336 1 202 1 337 1 148 1 149 1 207 4 300 1 340 1 258 1 21 2 112 1 114 1 312 1 157 1 224 1 315 1 78 1 24 1 31 1 320 1 325 1 326 1 369 3 284 1 42 1 87 1 94 1 288 1 134 4 135 1 
242 2 50 1 137 2 315 1 333 1 78 1 24 1 141 1 362 1 336 2 320 1 202 1 337 1 322 1 323 1 148 1 325 1 326 1 300 1 16 1 340 1 42 1 112 1 113 1 114 1 287 1 224 2 356 1 
242 1 50 1 137 1 78 1 193 1 87 1 7 1 37 1 148 1 326 1 
242 5 207 5 225 1 137 5 191 2 369 5 193 5 42 1 258 2 198 10 336 2 112 2 288 2 134 5 224 2 
0 1 193 1 68 1 323 1 87 1 356 1 
242 2 0 4 50 2 137 2 79 1 78 1 52 2 168 1 101 1 274 4 175 1 321 1 9 1 323 3 148 2 149 2 326 2 127 4 306 1 238 1 345 1 182 4 92 1 68 2 218 1 94 2 352 2 188 1 356 3 
330 1 190 1 315 2 314 1 333 2 24 2 51 1 27 1 141 3 267 2 168 1 247 1 5 1 274 1 175 1 297 1 325 2 368 1 300 3 237 1 127 1 306 1 44 1 182 1 345 1 347 1 93 1 114 1 131 1 352 1 357 1 47 1 
242 2 207 2 50 1 137 1 369 2 78 1 193 4 87 2 269 1 198 4 94 1 134 2 148 1 149 1 326 1 
244 1 95 1 120 1 
30 1 370 1 251 1 95 1 120 1 
244 1 95 1 120 1 
244 1 95 1 120 1 
164 1 95 1 120 1 
164 1 95 1 120 1 
164 1 95 1 120 1 
95 1 120 1 
239 1 170 1 
39 1 330 2 84 1 16 1 237 4 27 2 267 4 269 1 66 2 130 1 336 1 112 1 93 2 113 1 311 1 322 1 338 3 357 8 47 2 38 4 
84 1 16 1 237 3 269 1 66 2 336 1 112 1 113 1 311 1 322 1 22 1 338 2 357 6 38 3 
330 1 39 1 191 1 237 2 27 1 267 2 258 1 66 1 336 1 112 1 93 1 288 1 338 2 47 1 357 4 358 1 38 2 
191 1 237 4 284 1 258 1 21 2 31 1 336 1 112 1 312 1 288 1 357 7 38 3 
330 1 191 2 138 1 1 1 27 1 267 2 269 1 31 2 336 5 322 2 338 8 38 13 39 4 84 1 16 2 237 12 284 1 258 2 66 4 21 2 130 1 112 5 93 1 113 2 287 1 311 1 288 2 357 25 47 1 
21 1 237 1 357 1 
31 1 357 1 38 1 
330 1 39 1 225 1 191 1 237 3 27 1 267 2 258 1 66 2 336 1 93 1 112 1 288 1 338 3 47 1 357 6 358 1 38 3 
330 1 191 4 1 1 2 1 27 1 267 2 31 2 336 4 122 1 338 4 206 1 38 11 39 2 237 11 284 1 258 4 91 1 21 2 66 2 93 1 112 4 312 1 288 4 157 1 313 1 357 22 47 1 
39 1 16 1 237 3 66 1 336 1 112 1 113 1 322 1 338 2 357 6 38 3 
39 1 330 1 84 1 237 2 99 1 27 1 267 2 66 1 130 1 93 1 113 1 311 1 322 1 338 2 357 3 47 1 38 1 
330 1 39 2 16 1 237 5 27 1 267 2 91 1 66 3 336 2 93 1 112 2 113 2 287 1 322 2 338 5 47 1 357 10 38 5 
330 1 39 1 191 1 27 1 267 2 91 1 336 1 93 1 338 1 47 1 357 2 38 2 
330 1 39 1 191 1 237 2 27 1 267 2 258 1 91 1 66 1 336 1 112 1 93 1 288 1 338 2 47 1 357 4 38 2 
330 3 39 1 237 2 99 1 27 3 267 6 91 1 66 1 130 1 249 1 93 3 113 1 322 1 338 2 357 3 47 3 38 1 
330 4 191 3 334 1 196 1 27 4 268 1 267 8 269 1 31 3 249 1 336 6 322 2 338 9 38 18 39 4 84 1 16 2 237 18 284 1 258 3 91 1 21 4 66 5 130 1 93 4 112 6 113 2 287 1 311 1 312 1 288 3 47 4 357 36 358 1 
330 1 191 1 27 1 267 2 269 1 31 1 336 2 322 1 338 3 38 6 84 1 16 1 237 7 284 1 258 1 91 1 21 2 66 3 93 1 112 2 113 1 311 1 312 1 288 1 157 1 357 13 47 1 
330 2 191 1 27 2 267 4 269 1 31 1 336 2 322 1 338 3 38 6 84 1 16 1 237 7 284 1 258 1 91 1 21 2 66 3 93 2 112 2 113 1 311 1 312 1 288 1 157 1 357 13 47 2 358 1 
330 2 191 1 27 2 267 4 269 1 31 1 336 4 322 2 338 4 38 10 39 1 84 1 16 2 237 10 284 1 258 1 91 1 66 3 21 2 93 2 112 4 113 2 287 1 311 1 312 1 288 1 157 1 357 20 47 2 358 1 
330 2 191 1 27 2 267 4 269 1 31 1 336 4 322 2 338 8 38 10 39 3 84 1 16 2 237 10 284 1 258 1 91 1 21 2 66 5 93 2 112 4 113 2 287 1 311 1 312 1 288 1 157 1 357 20 47 2 358 1 
330 1 191 1 27 1 267 2 269 1 31 1 336 2 322 1 338 3 38 6 84 1 16 1 237 7 284 1 258 1 91 1 21 2 66 3 93 1 112 2 113 1 311 1 312 1 288 1 157 1 357 13 47 1 
330 1 191 1 27 1 267 2 31 1 336 1 338 1 38 3 237 4 284 1 258 1 91 1 21 2 66 1 93 1 112 1 312 1 288 1 157 1 357 7 47 1 
330 2 191 1 27 2 267 4 31 1 336 1 38 3 237 4 284 1 258 1 91 1 21 2 93 2 112 1 312 1 288 1 157 1 357 7 47 2 358 1 
330 2 191 1 27 2 267 4 31 1 249 1 336 1 338 1 38 3 237 4 284 1 258 1 91 1 21 2 66 1 93 2 112 1 312 1 288 1 157 1 357 7 47 2 
39 3 84 1 16 1 237 4 66 3 336 1 112 1 113 3 311 2 322 3 338 6 357 7 38 3 
330 2 191 1 27 2 267 4 31 1 249 1 336 1 38 3 237 4 284 1 258 1 91 1 21 2 93 2 112 1 312 1 288 1 157 1 357 7 47 2 
44 1 300 1 154 1 333 1 275 1 11 1 141 1 
189 1 73 1 194 1 185 1 270 1 
345 1 182 1 274 1 175 1 321 1 22 1 127 1 352 1 168 1 306 1 238 1 
300 2 314 1 14 1 315 1 333 1 127 1 141 2 168 1 306 1 44 1 182 1 345 1 347 1 274 1 175 1 131 1 352 1 325 1 
315 2 314 1 333 2 52 1 141 2 197 1 168 3 172 1 274 1 175 1 202 1 276 1 325 1 300 2 14 1 41 1 127 1 306 2 44 1 345 1 182 1 347 1 131 2 
315 2 314 1 333 2 52 1 141 2 197 1 168 3 3 1 172 1 274 2 175 1 202 1 276 1 325 1 300 2 14 1 41 1 127 2 306 2 44 1 345 1 182 2 310 1 131 2 
0 1 77 1 193 1 195 1 52 1 168 4 172 1 121 1 274 3 295 1 175 1 323 2 205 1 41 1 127 3 87 1 306 1 345 1 182 3 310 1 131 1 352 1 356 2 
0 1 193 1 77 1 41 1 318 1 195 1 52 1 127 3 87 1 168 4 306 1 172 1 182 3 345 1 274 3 310 1 175 1 131 1 352 1 323 2 205 1 356 2 
345 1 182 1 161 1 274 1 175 1 127 1 
13 1 290 1 40 1 161 1 15 1 127 7 373 1 168 3 306 2 199 1 173 1 335 1 182 7 345 2 274 6 175 3 147 1 235 1 131 1 158 1 352 2 
330 2 333 1 51 1 141 2 247 1 336 1 297 2 338 2 107 1 300 2 14 1 16 1 306 1 66 2 345 1 347 1 112 1 113 1 219 1 311 1 158 1 357 6 315 1 314 1 26 1 27 2 267 4 168 1 269 1 274 1 175 1 233 1 277 1 322 1 281 1 325 1 38 3 368 2 84 1 237 3 127 1 88 1 182 1 44 2 93 2 131 1 47 2 
242 1 0 2 50 2 137 1 193 1 78 2 77 1 318 1 195 1 168 2 274 1 7 1 10 1 323 3 37 1 205 1 148 2 326 2 208 1 124 1 127 1 87 1 182 1 68 1 218 1 352 1 132 1 356 3 
40 1 161 1 127 2 168 2 306 1 182 2 345 1 274 2 175 2 289 1 131 1 158 1 205 1 
127 4 168 1 238 1 306 1 182 4 345 1 274 4 310 1 175 1 321 1 352 1 158 1 23 1 
160 1 342 1 52 1 127 2 373 1 168 1 306 1 199 1 182 2 345 1 145 1 274 2 175 2 131 1 
339 1 345 1 182 1 274 1 126 1 175 1 127 1 165 1 352 1 376 1 
13 1 83 1 127 2 168 1 306 1 182 2 345 1 274 2 175 1 235 1 158 1 
52 1 127 5 168 3 238 1 306 2 335 1 182 5 345 2 274 4 175 2 321 1 147 1 235 1 352 1 158 1 23 1 
86 1 52 1 127 5 168 3 238 1 306 2 182 5 345 2 274 4 175 2 321 1 147 1 235 1 352 1 158 1 23 1 
300 2 314 1 14 1 315 1 333 1 127 1 141 2 168 1 306 1 3 1 44 1 182 1 345 1 274 1 175 1 131 1 352 1 325 1 
290 1 40 1 52 1 127 1 373 1 168 1 306 1 199 1 182 1 345 1 274 1 175 2 131 1 
248 1 44 1 109 1 255 1 285 1 
210 1 193 1 77 1 150 1 109 2 255 1 152 1 343 1 197 1 285 2 87 1 248 2 44 1 202 1 8 1 276 1 10 1 323 2 356 2 
300 1 333 1 109 1 255 1 285 1 141 1 375 1 45 1 299 1 
150 1 8 1 255 1 
62 1 117 1 22 1 142 1 
62 1 117 1 309 1 303 1 184 1 142 1 54 1 
243 1 346 1 303 1 
62 1 117 1 316 1 303 3 142 1 181 1 54 1 171 1 272 1 309 3 379 2 184 1 
62 1 117 1 309 2 303 2 184 1 142 1 80 1 143 1 54 1 
153 1 309 1 126 1 341 1 303 1 184 1 178 1 142 1 376 1 54 1 171 1 
62 1 309 1 303 1 184 1 142 1 54 1 171 1 
62 2 117 1 309 1 303 1 184 1 54 1 171 1 
62 1 303 2 142 1 54 2 171 1 309 2 363 1 184 2 240 1 69 1 
153 1 62 1 117 1 309 3 303 3 184 1 142 2 279 1 222 1 80 2 89 1 54 1 171 1 
62 1 339 1 117 1 126 1 303 2 341 1 142 1 376 2 80 1 54 1 171 1 67 1 309 2 184 1 46 1 
153 1 62 1 117 1 309 4 303 4 184 2 142 2 266 1 80 2 89 1 143 1 54 2 171 1 
62 1 117 1 309 1 303 1 184 1 142 1 54 1 171 1 
62 2 117 2 316 1 303 4 181 1 142 3 80 2 54 1 89 1 153 1 201 1 379 1 309 4 184 1 
49 1 62 1 117 1 309 2 102 1 303 2 184 1 142 1 80 1 179 1 54 1 171 1 
62 1 117 1 316 1 301 1 303 3 142 1 181 2 54 1 171 1 309 3 379 2 184 1 
378 1 60 2 142 2 381 1 
309 1 303 1 184 1 351 1 54 1 171 1 
62 1 117 1 309 2 303 2 184 1 142 1 279 1 80 1 54 1 171 1 
262 1 
62 1 117 1 309 1 303 1 184 1 142 1 54 1 171 1 
62 1 117 1 379 1 309 3 303 3 184 1 279 1 142 1 80 1 54 1 171 1 
153 1 201 1 142 1 89 1 
62 1 142 1 

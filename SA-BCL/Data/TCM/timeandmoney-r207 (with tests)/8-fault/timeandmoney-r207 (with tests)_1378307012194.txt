#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException 278 23 (332,372) 171 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException 278 23 (332,372) 171 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException 278 23 (332,372) (261,306) (261,306) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException 278 23 (332,372) (261,306) (261,306) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException 278 23 (332,372) (261,306) (261,306) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException 278 23 (332,372) (261,306) (261,306) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 278 (29,48,121,143) 369 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException 278 23 (332,372) 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 126 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 375 235 330 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 126 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 278 (29,48,121,143) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 278 23 289 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 278 23 125 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 278 23 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio; | RETURN | 2534 | return null
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6040 | if (x) -> if (!x)
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3734 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | STATEMENT | 2915 | stmt -> ;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 644 | 0 -> -1
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7581 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5972 | <= -> !=

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
278 1 319 1 240 2 23 1 48 1 120 1 219 1 323 3 112 1 206 3 284 2 264 1 332 1 171 1 
278 1 319 1 240 2 23 1 48 1 120 1 219 1 323 3 112 1 206 3 284 2 264 1 332 1 171 1 
98 1 99 1 278 1 279 1 319 2 240 2 145 1 23 1 120 1 372 1 219 1 323 3 67 1 112 1 206 3 52 1 284 2 261 1 332 1 306 1 
98 1 99 1 278 1 279 1 319 2 240 2 145 1 23 1 120 1 372 1 219 1 323 3 67 1 112 1 206 3 52 1 284 2 261 1 332 1 306 1 
98 1 99 1 278 1 279 1 319 2 240 2 145 1 23 1 120 1 372 1 219 1 323 3 67 1 112 1 206 3 52 1 284 2 261 1 332 1 306 1 
98 1 99 1 278 1 279 1 319 2 240 2 145 1 23 1 120 1 372 1 219 1 323 3 67 1 112 1 206 3 52 1 284 2 261 1 332 1 306 1 
120 1 219 1 323 2 112 1 206 2 122 1 369 1 278 1 143 1 284 1 240 1 264 1 
2 1 98 1 99 1 279 1 319 1 110 1 240 1 145 1 6 1 120 1 83 1 323 2 112 1 206 2 150 1 284 1 
120 1 219 1 323 2 112 1 206 2 278 1 319 1 284 2 240 2 332 1 23 1 
312 1 61 1 126 1 
312 1 221 1 132 2 
216 2 360 1 114 2 101 2 102 2 210 2 285 2 116 1 
216 2 268 2 360 1 157 1 101 3 102 2 82 2 340 1 218 1 50 1 163 1 347 1 57 1 371 1 199 1 200 1 88 1 111 1 63 2 64 1 131 1 14 1 91 1 301 1 93 1 94 1 208 1 70 1 114 2 178 1 151 1 210 2 285 3 116 1 267 2 233 2 180 1 
216 1 114 1 222 1 101 1 102 1 210 1 153 1 285 1 116 1 62 1 
216 1 77 1 156 1 79 1 101 1 338 1 61 1 62 1 312 1 7 1 365 1 71 1 285 1 169 1 
216 1 77 1 156 1 79 1 102 1 101 1 338 1 61 1 62 1 312 1 71 2 114 1 210 1 285 1 169 2 
55 1 71 1 169 1 228 1 246 1 
312 1 71 2 142 1 146 1 169 2 61 1 228 1 246 1 
71 1 169 1 228 1 
216 1 102 1 101 1 62 1 34 1 71 1 114 1 222 1 153 1 210 1 285 1 169 1 246 1 116 1 
312 1 
312 1 71 2 146 1 169 2 61 1 228 1 246 1 275 1 
76 1 60 1 248 1 146 1 137 1 22 2 61 1 228 2 65 1 312 1 230 1 363 2 244 1 71 5 84 1 17 1 169 5 246 2 75 2 
216 1 347 1 135 1 268 1 102 1 101 2 249 1 82 1 200 1 88 1 111 1 218 1 131 1 208 1 70 1 327 1 210 1 285 2 267 1 180 1 
360 1 126 1 
216 2 30 1 360 2 101 2 102 1 167 1 114 1 210 1 285 2 
368 1 327 1 303 1 
268 1 347 1 360 1 101 1 82 1 200 1 88 1 111 1 131 1 218 1 208 1 70 1 27 1 285 1 267 1 180 1 
216 3 135 1 114 1 360 1 101 3 102 3 210 3 285 3 
216 1 222 1 101 1 102 1 210 1 285 1 62 1 
216 1 30 1 167 1 114 1 101 1 102 1 210 1 285 1 62 1 
216 3 77 1 135 1 268 1 156 1 79 1 360 1 157 1 101 4 102 3 103 1 82 1 338 1 218 1 50 1 163 1 167 1 169 1 347 1 199 1 249 1 200 1 88 1 111 1 63 2 62 1 64 1 131 1 14 1 301 1 93 1 208 1 70 1 283 1 71 1 114 2 178 1 151 1 210 3 285 4 116 1 267 1 233 1 180 1 
216 2 135 1 365 1 360 1 186 1 101 2 102 1 210 1 285 2 
216 3 77 1 135 2 156 1 79 1 102 3 101 3 249 1 338 1 62 1 312 1 283 1 167 1 71 1 123 1 114 1 210 3 285 3 169 1 
216 2 135 1 368 1 167 1 327 1 114 1 101 2 102 2 210 2 285 2 
268 1 347 1 360 1 101 1 82 1 200 1 88 1 111 1 131 1 218 1 70 1 208 1 285 1 267 1 180 1 
268 1 347 1 181 1 360 1 101 1 82 1 200 1 88 1 131 1 218 1 208 1 285 1 223 1 267 1 180 1 
134 1 157 1 361 1 45 1 50 1 292 1 368 2 199 1 229 1 63 2 14 1 91 2 324 1 301 1 258 1 148 1 327 2 178 1 151 2 303 2 331 1 358 1 74 1 233 4 
216 1 51 1 101 1 102 1 210 1 285 1 338 1 62 1 
216 5 135 2 360 1 102 4 101 5 249 1 202 1 365 1 167 1 113 1 186 1 114 1 210 4 285 5 
216 2 51 1 222 1 101 2 102 2 210 2 285 2 62 1 
68 1 315 1 
68 1 315 1 
370 1 377 1 
370 1 377 1 
370 1 377 1 
68 1 224 1 315 1 
68 1 272 1 315 1 
68 2 259 1 308 1 370 1 377 1 315 2 
68 1 224 1 315 1 
68 1 224 1 315 1 
68 1 16 1 315 1 
68 1 16 1 315 1 
68 1 16 1 315 1 
1 3 39 1 182 2 349 1 104 2 312 1 231 2 68 2 207 1 71 2 259 1 356 1 260 1 190 2 169 2 315 2 192 1 172 2 305 1 
216 2 1 1 360 1 102 2 182 1 101 2 104 1 241 1 160 1 220 1 272 1 169 1 315 1 192 1 172 1 367 1 68 1 231 1 71 1 95 1 210 2 285 2 212 1 133 1 
67 1 98 1 279 1 
98 1 279 1 110 1 
67 2 164 1 109 1 20 1 279 3 110 1 
352 1 164 1 20 1 279 1 110 1 147 1 
67 1 164 2 20 1 279 2 110 1 
4 1 22 1 241 1 312 2 25 1 292 1 363 1 221 1 84 2 273 1 169 5 246 4 317 1 277 1 173 2 60 3 248 1 146 1 228 1 61 1 229 1 251 2 32 2 257 1 71 5 95 1 148 1 132 3 74 1 333 1 133 1 75 1 
337 1 309 5 22 2 241 4 311 1 312 5 292 3 363 2 221 3 84 6 273 2 169 9 246 7 193 1 55 5 128 1 277 3 173 6 60 8 12 1 146 1 248 1 228 6 61 1 229 3 251 6 326 1 257 2 71 9 148 3 132 9 17 1 74 3 333 1 75 2 
4 1 22 1 241 1 312 3 363 1 292 1 221 2 84 2 273 1 169 3 246 2 317 1 277 1 173 2 60 3 61 1 229 1 251 2 32 1 257 1 71 3 148 1 132 4 17 1 74 1 75 1 
4 1 337 1 22 1 241 2 311 1 312 4 363 1 292 2 221 3 84 4 273 1 169 4 246 3 317 1 277 2 173 4 60 5 12 1 61 1 229 2 251 4 32 2 257 1 71 4 148 2 132 7 17 1 74 2 75 1 
208 1 271 1 126 1 
208 1 41 1 
378 1 
347 1 208 1 
347 1 218 1 300 1 208 2 271 2 304 1 378 1 
347 1 208 1 218 1 
208 1 177 1 
134 5 19 1 361 4 184 1 364 1 292 3 188 1 28 1 295 2 59 1 31 2 322 1 91 8 148 3 151 6 376 2 73 2 233 14 
134 7 19 1 361 4 184 3 364 1 292 3 188 1 28 1 295 2 59 1 31 2 322 1 91 8 148 3 151 6 376 2 73 2 233 14 
134 5 19 1 361 4 184 1 364 1 292 3 188 1 28 1 295 2 59 1 13 1 31 2 322 1 91 8 148 3 151 6 376 2 73 2 233 14 
134 2 361 1 184 1 49 1 50 1 26 1 364 2 139 1 28 1 295 1 199 1 31 1 63 2 322 1 91 3 301 1 256 1 178 1 151 3 375 1 73 1 287 1 233 6 235 1 
134 7 19 1 361 5 184 2 50 2 292 3 364 1 139 1 188 1 189 1 295 2 59 1 199 2 31 2 63 4 322 1 91 9 301 2 354 1 148 3 178 2 151 7 376 2 73 2 233 16 
98 1 268 1 237 1 81 1 82 1 240 1 6 1 120 1 344 1 366 1 195 1 109 1 319 1 279 2 110 1 200 1 350 1 88 1 67 1 15 1 323 2 112 1 206 2 150 1 284 1 264 1 154 1 286 1 211 1 267 1 
98 1 268 1 237 1 290 1 81 1 82 1 240 1 6 1 341 1 344 1 187 1 195 1 109 1 319 1 279 2 110 1 200 1 350 1 88 1 67 1 15 1 323 3 112 1 206 3 150 1 284 1 264 2 154 1 286 1 267 1 
268 1 98 1 237 1 290 1 82 1 6 1 341 1 344 1 195 1 109 1 319 1 279 2 110 1 200 1 350 1 88 1 15 1 323 2 67 1 112 1 206 2 150 1 264 2 286 1 267 1 
85 1 346 1 347 1 268 1 237 2 319 2 239 1 238 1 240 1 82 1 200 1 88 1 21 1 131 1 253 1 323 1 15 2 208 1 206 1 187 1 344 2 284 1 267 1 
98 1 268 1 237 1 290 1 81 1 82 1 240 1 120 1 344 1 195 1 109 1 319 1 279 2 110 1 200 1 350 1 88 1 67 1 15 1 323 1 206 1 284 1 154 1 286 1 211 1 267 1 
294 1 
3 2 101 1 44 1 338 1 46 1 7 1 342 3 106 1 107 1 108 2 194 2 60 1 198 1 248 1 146 2 201 3 61 1 62 1 205 2 71 4 75 1 216 1 77 1 217 1 79 1 156 1 118 1 22 1 312 1 162 1 363 1 365 1 221 2 84 1 169 4 170 5 127 1 175 1 228 5 232 3 285 1 334 1 
216 1 77 1 217 1 3 2 156 1 79 1 118 1 101 1 338 1 44 1 22 1 46 1 312 1 7 1 162 1 342 3 106 1 363 1 221 2 365 1 108 2 107 1 84 1 169 4 170 5 127 1 194 2 60 1 146 2 248 1 198 1 175 1 201 3 61 1 228 5 62 1 205 2 71 4 232 3 285 1 75 1 334 1 
3 2 101 1 338 1 7 1 342 2 106 1 107 1 194 2 60 1 248 1 198 1 146 2 201 2 351 1 61 1 62 1 71 4 75 1 216 1 77 1 79 1 156 1 118 1 22 1 312 1 363 1 365 1 84 1 169 4 170 4 127 1 228 4 33 2 321 1 176 2 132 2 232 2 285 1 334 1 
3 2 239 1 101 1 338 1 46 1 242 1 7 1 342 2 106 1 108 2 107 1 194 2 347 1 60 2 146 3 248 1 198 1 201 2 200 1 61 1 298 1 62 1 205 2 257 1 208 1 71 5 267 2 75 1 216 1 77 1 268 2 156 1 79 1 118 1 82 2 22 1 312 2 363 1 221 2 365 1 84 2 169 5 170 4 85 1 127 1 88 1 228 6 321 1 131 2 90 1 132 2 232 2 285 1 97 1 334 1 
216 1 77 1 156 1 79 1 118 1 101 1 338 1 7 1 342 1 106 1 365 1 107 1 169 3 170 2 275 1 198 1 146 1 228 2 62 1 71 3 285 1 334 1 
216 1 77 1 156 1 79 1 118 1 101 1 338 1 7 1 312 1 106 1 365 1 107 1 169 3 170 3 275 1 198 1 146 1 201 1 228 1 61 1 62 1 71 3 285 1 334 1 
216 1 77 1 156 1 79 1 118 1 101 1 338 1 7 1 312 1 342 1 106 1 365 1 107 1 169 3 275 1 170 3 146 1 198 1 201 1 228 2 61 1 62 1 71 3 232 1 285 1 334 1 
3 2 101 1 338 1 44 1 46 1 7 1 342 4 106 1 107 1 108 2 194 2 60 1 146 3 198 1 248 1 201 4 61 5 62 1 205 2 71 5 75 1 215 1 216 1 77 1 217 1 79 1 156 1 118 1 22 1 312 5 162 1 363 1 365 1 221 2 84 1 169 5 170 6 275 1 127 1 175 1 228 7 232 4 285 1 334 1 
3 2 101 1 338 1 46 1 7 1 342 2 106 1 107 1 108 2 194 2 60 1 248 1 198 1 146 2 201 2 61 1 62 1 205 2 71 4 75 1 216 1 77 1 79 1 156 1 118 1 22 1 312 2 363 1 365 1 221 2 84 1 169 4 170 4 127 1 228 4 321 1 132 2 232 2 285 1 334 1 
216 1 77 1 217 1 3 2 156 1 79 1 118 1 101 1 338 1 22 1 46 1 312 1 7 1 342 2 162 1 106 1 363 1 221 2 365 1 108 2 107 1 84 1 169 4 170 4 127 1 194 2 60 1 146 2 198 1 175 1 248 1 201 2 61 1 228 4 62 1 205 2 71 4 232 2 285 1 334 1 75 1 
216 1 77 1 217 1 3 2 156 1 79 1 118 1 101 1 338 1 22 1 46 1 312 1 7 1 342 2 162 1 106 1 363 1 221 2 365 1 108 2 107 1 84 1 169 4 170 4 127 1 194 2 60 1 146 2 198 1 175 1 248 1 201 2 61 1 228 4 62 1 205 2 71 4 232 2 285 1 334 1 75 1 
216 1 77 1 217 1 3 2 156 1 79 1 118 1 101 1 338 1 22 1 312 1 7 1 342 2 106 1 363 1 365 1 107 1 84 1 169 4 170 4 127 1 194 2 226 1 60 1 146 2 198 1 248 1 201 2 61 1 228 4 351 1 62 1 33 2 176 2 281 1 71 4 132 2 232 2 285 1 334 1 75 1 
134 2 295 1 19 1 360 2 157 1 59 1 199 1 361 2 31 1 45 1 63 2 14 1 91 3 301 1 50 1 292 1 148 1 178 1 151 2 376 1 73 1 233 5 126 1 
134 1 360 1 157 1 361 1 47 1 158 1 50 2 292 2 86 1 368 2 277 2 318 1 371 1 199 2 62 1 63 4 229 1 64 1 14 2 91 7 301 2 256 2 327 6 148 1 178 2 151 5 303 6 375 2 115 1 72 1 266 1 74 2 233 12 
216 1 268 1 135 1 360 1 157 1 101 2 102 1 82 1 218 1 158 1 50 1 27 1 347 1 368 1 371 1 199 1 249 1 200 1 88 1 111 1 63 2 131 1 64 1 14 1 252 1 91 1 301 1 208 1 70 1 355 1 96 1 178 1 151 1 210 1 285 2 267 1 233 2 180 1 
134 7 135 1 102 1 101 3 5 2 184 1 50 3 292 5 188 1 347 2 295 1 58 1 59 1 249 1 199 3 200 2 111 2 62 1 63 6 64 1 14 3 66 1 301 3 69 2 70 2 208 2 148 5 151 13 210 1 303 6 73 2 267 1 74 2 216 1 268 1 19 1 360 3 157 3 82 1 361 6 24 2 158 1 218 2 163 2 86 1 368 6 277 2 371 1 31 2 88 2 229 2 131 1 91 14 325 2 327 6 178 3 376 2 285 3 233 27 180 2 
216 1 135 1 268 8 290 1 157 2 136 1 101 1 102 1 239 1 82 7 45 1 340 2 50 2 168 1 366 1 9 1 85 1 347 2 297 1 371 1 199 2 200 2 88 2 63 4 131 2 64 1 14 2 91 1 301 2 208 3 179 1 178 2 302 1 151 1 210 1 285 1 36 1 267 8 233 2 
216 1 134 1 157 1 40 1 102 1 101 1 361 1 158 1 50 1 292 1 167 1 368 1 277 1 199 1 63 2 229 1 14 1 91 1 301 1 327 1 114 1 148 1 178 1 151 2 303 1 210 1 285 1 74 1 233 3 
134 1 368 1 157 1 199 1 184 1 45 1 63 2 14 1 91 2 301 1 50 1 292 1 327 1 178 1 303 1 331 1 74 1 233 2 
134 1 368 1 157 1 199 1 361 1 45 1 63 2 229 1 14 1 301 1 50 1 327 1 148 1 178 1 151 2 303 1 358 1 233 2 
134 2 157 1 361 1 45 1 184 1 50 1 292 1 368 2 277 1 199 1 63 2 229 1 14 1 91 2 301 1 327 2 148 1 178 1 151 2 303 2 74 1 233 4 
134 1 368 1 157 1 297 1 199 1 184 1 63 2 14 1 91 2 301 1 50 1 292 1 327 1 178 1 303 1 331 1 74 1 233 2 
134 1 368 1 157 1 297 1 199 1 361 1 63 2 229 1 14 1 301 1 50 1 327 1 148 1 178 1 151 2 303 1 358 1 233 2 
134 2 157 1 361 1 184 1 50 1 292 1 368 2 277 1 297 1 199 1 63 2 229 1 14 1 91 2 301 1 327 2 148 1 178 1 151 2 303 2 74 1 233 4 
134 2 368 2 277 1 157 1 199 1 361 1 184 1 229 1 63 2 14 1 91 2 301 1 50 1 292 1 148 1 327 2 178 1 151 2 303 2 74 1 233 4 
268 1 360 1 157 1 101 1 82 1 218 1 163 1 50 1 347 1 371 1 199 1 200 1 88 1 111 1 63 2 131 1 64 1 14 1 91 1 301 1 70 1 208 1 178 1 151 1 285 1 267 1 233 2 180 1 
268 1 359 1 181 1 360 1 157 1 101 1 82 1 218 1 50 1 223 1 347 1 371 1 199 1 200 1 88 1 63 2 131 1 64 1 14 1 91 1 301 1 208 1 178 1 151 1 285 1 267 1 233 2 180 1 
134 2 157 1 361 1 184 1 158 1 50 1 292 1 368 2 277 1 199 1 63 2 229 1 14 1 91 2 301 1 327 2 148 1 178 1 151 2 303 2 74 1 233 4 
134 2 268 1 157 1 101 1 82 1 361 1 184 1 218 1 163 1 50 1 292 1 366 1 347 1 368 2 277 1 199 1 200 1 88 1 111 1 229 1 63 2 14 1 91 2 301 1 325 1 70 1 208 1 148 1 327 2 178 1 151 2 303 2 285 1 74 1 267 1 233 4 180 1 
216 1 134 1 157 1 102 1 101 1 184 1 158 1 105 1 50 1 292 1 167 1 368 1 277 1 199 1 229 1 63 2 14 1 91 2 301 1 148 1 114 1 327 1 178 1 151 1 210 1 303 1 285 1 74 1 233 3 
134 5 183 1 361 3 184 2 119 1 50 2 292 3 189 1 140 1 54 4 316 1 247 1 277 3 197 2 199 2 299 1 63 4 229 3 91 12 301 2 256 3 148 3 329 1 178 2 151 13 375 2 330 1 266 1 74 3 18 1 233 25 235 2 
336 1 134 4 183 2 361 2 184 2 119 2 50 3 270 1 292 3 139 2 189 1 140 1 54 4 316 1 247 1 277 3 197 1 199 3 63 6 229 2 91 14 301 3 256 2 148 2 178 3 151 12 375 2 330 1 262 1 74 3 18 1 233 26 213 1 235 2 
134 7 336 1 183 2 184 3 50 3 292 5 139 1 189 1 140 1 54 4 247 1 295 1 59 1 199 3 197 1 63 6 301 3 256 4 148 5 151 21 262 1 73 1 266 1 74 4 213 1 18 1 19 1 361 4 119 1 270 1 316 1 276 1 277 4 31 1 229 4 91 20 178 3 329 1 330 1 375 3 376 1 233 41 235 3 
336 1 134 6 19 1 183 2 361 4 184 2 119 1 270 1 50 4 292 5 139 2 189 1 140 1 54 4 316 1 276 1 247 1 295 1 277 4 59 1 197 1 199 4 31 1 63 8 229 3 91 20 301 4 256 4 148 4 329 1 178 4 151 18 375 3 330 1 376 1 262 1 73 1 266 1 74 4 18 1 213 1 233 38 235 3 
336 1 134 12 19 3 183 1 361 7 184 5 47 1 119 1 270 1 50 2 292 8 139 1 189 1 140 1 54 4 316 1 247 1 295 3 277 5 59 3 197 1 199 2 31 3 63 4 229 5 91 28 301 2 256 3 148 8 178 2 151 24 330 1 375 3 376 3 262 1 73 3 266 1 74 5 18 1 213 1 233 52 235 2 
68 1 231 1 207 1 209 1 259 1 356 1 182 1 315 1 104 1 172 1 
367 1 272 1 
68 1 231 1 353 1 182 1 274 1 191 1 315 1 104 1 172 1 
1 2 182 1 349 1 104 1 312 1 231 1 68 1 207 1 71 1 259 1 356 1 260 1 190 1 169 1 192 1 315 1 172 1 305 1 
1 2 182 1 349 1 104 1 312 1 231 1 68 1 207 1 71 1 259 1 356 1 260 1 190 1 169 1 192 1 315 1 172 1 305 1 
1 2 182 1 349 1 104 1 312 1 231 1 68 1 207 1 71 1 259 1 356 1 260 1 190 1 169 1 192 1 315 1 172 1 305 1 
308 1 339 1 224 1 
308 1 339 1 224 1 
16 1 42 1 
16 1 308 1 42 1 
160 1 212 1 
216 2 1 1 360 1 101 2 182 1 102 2 104 1 241 1 160 1 243 1 220 1 190 1 272 1 169 1 246 1 315 1 172 1 367 1 68 1 231 1 71 1 95 1 210 2 285 2 212 1 305 1 133 1 
339 1 224 1 
16 1 308 1 42 1 
216 2 288 1 268 2 157 1 101 2 82 2 340 2 158 1 291 1 50 1 166 1 168 1 225 1 347 1 371 1 199 1 200 1 88 1 203 1 63 2 64 1 14 1 91 1 301 1 208 1 179 1 178 1 151 1 285 2 267 2 233 2 
98 1 268 2 195 1 109 1 237 1 290 1 279 2 110 1 81 1 82 2 200 1 130 1 88 1 350 1 67 1 161 1 366 1 263 1 267 2 
98 1 268 1 195 1 109 1 237 1 290 1 279 2 110 1 227 1 81 1 82 1 200 1 350 1 88 1 67 1 263 1 267 1 
85 1 347 1 268 1 237 1 238 1 239 1 82 1 200 1 130 1 88 1 131 1 208 1 313 1 267 1 
98 1 268 1 195 1 109 1 237 1 290 1 279 2 110 1 81 1 82 1 200 1 130 1 350 1 88 1 67 1 161 1 263 1 267 1 
345 1 
216 2 268 1 360 1 157 1 101 3 102 2 82 1 218 1 50 1 163 1 347 1 199 1 200 1 88 1 111 1 63 2 64 1 131 1 14 1 301 1 93 1 70 1 208 1 114 2 178 1 151 1 210 2 285 3 267 1 116 1 233 1 180 1 
295 1 173 2 60 1 248 1 22 1 61 2 251 2 312 4 90 1 363 1 257 1 221 2 132 4 84 2 75 1 
312 1 76 1 244 1 60 1 84 1 61 1 126 1 
60 1 146 1 248 1 22 1 61 1 228 1 46 1 312 2 205 1 363 1 71 1 221 1 108 1 132 1 84 1 169 1 75 1 
41 3 138 1 292 2 244 1 245 2 293 1 347 3 60 9 348 2 248 4 146 3 200 4 61 2 251 6 204 2 300 1 257 2 208 10 71 5 148 2 267 3 74 2 75 4 76 1 77 2 268 3 80 2 82 3 22 4 24 2 218 3 312 8 165 2 363 4 221 6 271 2 84 8 366 1 169 5 277 2 173 6 174 1 88 3 280 1 228 5 320 1 229 2 131 1 90 1 92 2 177 2 132 12 38 2 379 2 
173 1 60 1 248 1 22 1 251 1 312 1 363 1 256 1 221 1 132 2 84 1 375 1 330 1 75 1 235 1 
216 1 101 1 102 1 22 1 162 1 363 1 292 2 222 1 188 1 84 2 169 1 60 2 348 1 248 1 31 1 62 1 204 2 34 1 71 1 148 1 114 1 153 1 210 1 285 1 376 1 73 1 116 1 75 1 
76 1 60 1 248 1 22 1 61 1 312 1 363 1 244 1 84 1 75 1 
277 2 173 5 60 5 348 1 24 1 251 5 229 2 204 2 312 5 292 2 221 5 148 2 132 10 84 5 74 2 
312 1 71 1 146 1 169 1 61 1 228 1 
268 4 239 1 82 4 22 2 242 1 363 2 8 1 84 2 169 3 85 1 347 1 60 2 248 1 146 2 200 1 88 1 280 1 228 4 320 2 131 2 90 2 208 1 257 2 71 3 17 1 37 1 97 1 267 4 75 2 
182 1 53 1 172 1 
356 1 182 1 43 1 212 1 172 1 
182 1 53 1 172 1 
182 1 53 1 172 1 
362 1 182 1 172 1 
362 1 182 1 172 1 
362 1 182 1 172 1 
182 1 172 1 
68 1 315 1 
134 7 19 1 361 4 184 3 50 2 292 3 139 1 188 1 295 1 59 1 199 2 31 2 63 4 91 9 301 2 148 3 178 2 151 8 376 2 73 2 233 17 
134 2 295 1 19 1 59 1 31 1 361 2 91 3 292 1 148 1 151 2 376 1 73 1 233 5 126 1 
134 2 277 1 199 1 361 1 184 1 229 1 63 2 91 2 301 1 50 1 292 1 148 1 178 1 151 2 152 1 74 1 233 4 
91 1 256 1 151 1 375 1 233 2 235 1 
134 7 19 1 361 5 184 2 47 1 50 1 292 5 139 1 188 1 295 1 277 2 59 1 318 1 199 1 31 2 229 2 63 2 91 13 301 1 256 2 148 5 178 1 151 12 375 2 376 2 73 2 266 1 74 2 233 25 
256 1 151 1 233 1 
91 1 375 1 233 1 
134 3 277 1 199 1 361 2 184 1 63 2 24 1 229 1 91 3 50 1 301 1 292 1 148 1 178 1 152 1 151 3 74 1 233 6 
134 2 336 1 361 1 184 1 50 1 270 1 292 2 189 1 277 2 199 1 63 2 229 2 91 6 301 1 256 1 148 2 178 1 151 6 375 1 330 1 262 1 74 2 233 12 213 1 235 1 
134 2 31 1 361 1 184 1 91 3 292 1 148 1 151 3 376 1 73 1 233 6 
134 2 19 1 59 1 199 1 361 1 31 1 184 1 63 2 91 1 301 1 50 1 26 1 139 1 178 1 151 2 73 1 233 3 
134 5 199 1 31 2 361 3 184 2 63 2 91 5 50 1 301 1 292 2 148 2 178 1 189 1 188 1 151 5 376 1 73 2 233 10 
134 1 199 1 184 1 63 2 91 2 301 1 50 1 292 1 178 1 189 1 74 1 233 2 
134 2 277 1 199 1 361 1 184 1 229 1 63 2 91 2 301 1 50 1 292 1 148 1 178 1 151 2 189 1 74 1 233 4 
134 2 199 3 31 1 361 1 184 1 63 6 91 1 301 3 50 3 26 1 139 1 329 1 178 3 151 2 189 1 73 1 233 3 
134 6 19 1 361 3 184 3 50 4 26 1 292 2 139 1 188 1 189 1 59 1 199 4 31 2 63 8 91 7 301 4 256 1 148 2 329 1 178 4 151 8 152 1 375 1 376 1 73 2 287 1 233 15 235 1 
134 9 336 1 19 1 361 5 184 4 50 2 270 1 292 5 139 1 188 1 189 1 295 1 277 2 59 1 199 2 31 2 63 4 229 1 91 14 301 2 256 1 148 4 178 2 151 11 375 1 330 1 376 2 262 1 73 2 74 2 233 25 213 1 235 1 
134 7 336 1 19 1 361 5 184 2 50 3 270 1 292 5 139 1 188 1 189 1 295 1 277 2 59 1 199 3 31 2 63 6 229 1 91 14 301 3 256 1 148 4 178 3 151 10 152 1 330 1 375 1 376 2 262 1 73 2 74 2 233 24 213 1 235 1 
134 7 336 1 19 1 361 5 184 2 50 3 270 1 292 5 139 1 188 1 189 1 295 1 277 2 59 1 199 3 31 2 63 6 229 2 91 13 301 3 256 1 148 5 178 3 152 1 151 13 375 1 330 1 376 2 262 1 73 2 74 2 233 26 213 1 235 1 
134 9 336 1 19 1 361 5 184 4 50 3 270 1 292 5 139 1 188 1 189 1 295 1 277 2 59 1 199 3 31 2 63 6 229 1 91 14 301 3 256 1 148 4 178 3 152 1 151 10 375 1 330 1 376 2 262 1 73 2 74 2 233 24 213 1 235 1 
134 9 336 1 19 1 361 5 184 4 50 2 270 1 292 5 139 1 188 1 189 1 295 1 277 2 59 1 199 2 31 2 63 4 229 1 91 14 301 2 256 1 148 4 178 2 151 11 375 1 330 1 376 2 262 1 73 2 74 2 233 25 213 1 235 1 
134 2 336 1 361 1 184 1 50 1 270 1 292 2 189 1 277 2 199 1 63 2 229 2 91 6 301 1 256 1 148 2 178 1 151 6 375 1 330 1 262 1 74 2 233 12 213 1 235 1 
336 1 134 7 19 1 361 5 184 2 50 4 270 1 292 5 139 2 188 1 189 1 295 1 277 2 59 1 199 4 31 2 63 8 229 1 91 14 301 4 256 1 148 4 178 4 151 11 152 1 330 1 375 1 376 2 262 1 73 2 74 2 233 25 213 1 235 1 
336 1 134 6 361 3 184 3 50 4 270 1 292 3 139 2 189 1 277 3 199 4 63 8 229 2 91 9 301 4 256 1 148 2 178 4 329 1 151 7 330 1 375 1 262 1 74 3 233 16 213 1 235 1 
134 6 19 2 59 1 31 3 361 3 184 3 91 3 292 1 148 1 151 4 376 1 73 3 233 7 
336 1 134 7 19 1 361 5 184 2 50 4 270 1 292 5 139 2 188 1 189 1 295 1 277 2 59 1 199 4 31 2 63 8 229 1 91 14 301 4 256 1 148 4 178 4 329 1 151 11 330 1 375 1 376 2 262 1 73 2 74 2 233 25 213 1 235 1 
216 1 0 1 365 1 360 1 186 1 101 1 285 1 
216 1 0 1 117 1 360 1 101 1 89 1 310 1 365 1 186 1 35 1 285 1 265 1 
85 1 347 1 268 1 208 1 239 1 82 1 200 1 88 1 267 1 126 1 131 1 
216 1 347 1 135 1 268 1 360 1 102 1 101 2 82 1 200 1 88 1 218 1 131 1 208 1 70 1 210 1 285 2 267 1 180 1 
216 2 347 2 135 1 268 1 79 1 360 1 102 2 101 2 82 1 338 1 200 1 88 1 62 1 320 1 218 2 208 3 70 1 177 1 210 1 285 2 267 1 379 1 180 1 
216 2 347 2 135 1 268 2 11 1 79 1 360 1 102 2 101 2 82 2 338 1 200 1 88 1 62 1 320 1 218 2 208 3 177 1 210 1 285 2 223 1 267 2 379 1 180 1 
77 1 347 1 87 1 268 3 11 1 41 1 82 3 200 1 88 1 61 1 228 1 320 1 131 1 218 1 312 1 255 1 208 4 177 1 71 2 271 1 169 2 267 3 379 1 
77 1 347 1 268 3 11 1 41 1 82 3 200 1 88 1 61 1 228 1 320 1 131 1 218 1 312 1 208 4 177 1 71 2 245 1 271 1 169 2 267 3 379 1 
268 1 82 1 200 1 88 1 267 1 9 1 
268 7 347 2 290 1 136 1 82 6 200 3 88 2 340 1 131 2 218 1 300 1 185 1 208 3 374 1 328 1 179 1 302 1 366 1 36 1 9 1 267 7 
134 5 135 1 102 1 101 2 184 1 50 2 292 3 188 1 347 1 295 1 59 1 199 2 200 1 111 1 62 1 63 4 14 2 301 2 69 1 70 1 208 1 148 3 151 6 210 1 73 2 267 1 216 1 268 1 19 1 157 2 360 3 82 1 361 4 158 1 218 1 163 1 366 1 225 1 86 1 88 1 31 2 91 7 325 1 178 2 285 2 376 2 233 13 180 1 
76 1 77 1 268 1 80 1 41 1 82 1 22 2 312 1 165 1 363 2 244 1 245 1 84 1 271 1 169 3 246 1 60 1 248 2 146 1 61 1 280 1 228 2 131 1 208 2 71 3 38 1 267 1 75 2 
268 2 347 1 82 2 200 2 88 1 218 1 300 1 138 1 208 2 271 1 366 1 9 1 267 2 
56 1 85 1 268 4 347 1 11 1 239 1 82 4 200 1 88 1 131 1 208 1 366 1 267 4 
268 2 347 1 144 1 82 2 200 2 88 1 320 1 218 1 373 1 282 1 208 1 374 1 328 1 267 2 
98 1 268 1 279 1 110 1 82 1 200 1 88 1 350 1 267 1 131 1 
347 1 288 1 268 2 208 1 290 1 179 1 82 2 366 1 200 1 88 1 267 2 
56 1 85 1 268 5 347 2 136 1 239 1 82 4 200 2 88 2 320 1 131 1 208 3 179 1 302 1 366 1 267 5 
56 1 85 1 78 1 268 5 347 2 136 1 239 1 82 4 200 2 88 2 320 1 131 1 208 3 179 1 366 1 267 5 
216 1 347 1 135 1 268 1 360 1 102 1 101 2 82 1 200 1 88 1 218 1 131 1 208 1 210 1 285 2 223 1 267 1 180 1 
268 1 347 1 82 1 200 2 88 1 320 1 218 1 300 1 185 1 208 1 374 1 328 1 267 1 
335 1 129 1 360 1 149 1 141 1 
10 1 335 2 77 1 129 2 269 1 79 1 156 1 360 1 338 1 61 1 62 1 312 1 283 1 71 2 343 1 149 1 141 2 169 2 246 1 
216 1 291 1 166 1 129 1 149 1 101 1 285 1 141 1 203 1 
10 1 343 1 149 1 
120 1 323 3 112 1 99 1 206 3 150 1 314 1 284 1 240 1 264 1 6 1 
323 1 206 1 112 1 278 1 264 1 23 1 
112 1 150 1 
112 1 150 1 6 1 126 1 
323 1 112 1 206 1 150 1 284 1 240 1 6 1 
15 1 206 1 319 1 
99 2 240 1 250 1 6 1 120 1 323 3 112 1 206 3 150 1 284 1 357 1 214 1 
323 2 112 1 206 2 122 1 150 1 284 1 240 1 264 1 6 1 
120 1 219 1 323 1 112 1 206 1 278 1 143 1 284 1 240 1 
120 1 323 1 112 1 206 1 150 1 284 1 240 1 
120 1 323 1 206 1 150 2 284 1 240 1 6 1 
307 1 196 1 100 1 240 2 120 1 323 2 112 1 206 2 150 1 284 2 
120 1 219 1 323 2 289 1 112 1 206 2 278 1 314 1 284 1 240 1 264 1 23 1 
98 1 109 1 279 2 110 1 240 1 6 1 120 1 323 2 67 1 254 1 112 1 206 2 150 1 284 1 264 1 
120 1 219 1 323 2 112 1 206 2 122 1 278 1 284 1 240 1 264 1 23 1 125 1 
120 1 323 1 112 1 206 1 150 1 284 1 240 1 6 1 
323 2 219 2 112 1 206 2 278 1 284 1 240 1 264 1 23 1 
240 1 6 1 48 1 120 1 323 2 121 1 112 1 206 2 150 1 284 1 264 1 29 1 
99 2 240 1 250 1 6 1 120 1 323 3 112 1 206 3 150 1 284 1 234 1 214 2 
236 2 112 2 155 1 124 1 
120 1 323 1 206 1 296 1 284 1 240 1 
120 1 323 2 112 1 206 2 150 1 314 1 284 1 240 1 264 1 6 1 
159 1 
120 1 323 1 112 1 206 1 150 1 284 1 240 1 6 1 

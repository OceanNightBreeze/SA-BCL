#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (1,118,207,257) (1,118,207,257) (1,118,207,257) 80 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (1,118,207,257) (1,118,207,257) (1,118,207,257) 80 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (1,118,207,257) (1,118,207,257) (1,118,207,257) 80 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (1,118,207,257) (1,118,207,257) (1,118,207,257) 80 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (1,118,207,257) (1,118,207,257) (1,118,207,257) 80 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (1,118,207,257) (1,118,207,257) (1,118,207,257) 80 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (1,118,207,257) (1,118,207,257) (1,118,207,257) 80 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (1,118,207,257) (1,118,207,257) (1,118,207,257) 80 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (1,118,207,257) (1,118,207,257) (1,118,207,257) 80 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 253 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 253 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 253 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (1,118,207,257) (1,118,207,257) (1,118,207,257) 80 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (1,118,207,257) (1,118,207,257) (1,118,207,257) (10,97) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (1,118,207,257) (1,118,207,257) (10,97) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (1,118,207,257) (1,118,207,257) (1,118,207,257) (10,97) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (1,118,207,257) (1,118,207,257) (1,118,207,257) 80 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 253 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 253 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 253 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 0 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 253 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1136 | = null
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7245 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V | STATEMENT | 809 | stmt -> ;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 955 | = null
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1 1 257 1 270 1 80 1 207 1 
1 1 257 1 270 1 80 1 207 1 
1 1 257 1 270 1 80 1 207 1 
1 1 257 1 270 1 80 1 207 1 
1 1 257 1 270 1 80 1 207 1 
1 1 257 1 270 1 80 1 207 1 
1 1 257 1 270 1 80 1 207 1 
1 1 257 1 270 1 80 1 207 1 
1 1 257 1 270 1 80 1 207 1 
253 1 
328 2 49 1 231 1 
224 2 87 2 184 2 48 1 139 1 79 2 222 2 325 2 
199 2 303 1 84 1 159 1 161 1 87 2 212 1 166 1 48 1 312 2 259 1 51 1 222 3 171 1 224 3 57 1 134 2 135 1 229 1 139 1 273 1 64 2 324 1 325 2 237 1 283 1 184 2 238 1 188 1 76 1 79 2 333 2 294 1 35 1 245 1 152 1 109 1 
224 1 87 1 184 1 48 1 62 1 79 1 102 1 222 1 29 1 325 1 
111 1 224 1 100 1 176 1 62 1 231 1 276 1 44 1 234 1 235 1 87 1 127 1 14 1 222 1 
111 1 224 1 100 2 62 1 231 1 276 1 44 1 325 1 234 1 235 1 87 1 184 1 127 2 79 1 222 1 
83 1 100 1 127 1 305 1 246 1 
111 1 83 1 286 1 100 2 127 2 231 1 305 1 236 1 
100 1 127 1 305 1 
224 1 83 1 100 1 62 1 102 1 29 1 325 1 87 1 184 1 7 1 48 1 127 1 79 1 222 1 
231 1 
111 1 187 1 83 1 100 2 127 2 231 1 305 1 236 1 
111 1 112 1 83 2 200 1 100 5 302 1 274 1 4 1 231 1 305 2 160 1 236 1 70 2 74 2 127 5 167 2 298 1 15 1 320 1 
253 1 
224 2 301 1 139 2 325 1 87 2 184 1 79 1 150 1 222 2 
241 1 149 1 293 1 
224 1 199 1 139 1 273 1 159 1 161 1 237 1 238 1 312 1 188 1 259 1 333 1 294 1 245 1 222 1 319 1 
224 3 87 3 184 1 139 1 79 3 193 1 222 3 325 3 
224 1 87 1 62 1 79 1 102 1 222 1 325 1 
224 1 87 1 301 1 184 1 62 1 79 1 150 1 222 1 325 1 
199 1 119 1 84 1 159 1 121 1 44 1 161 1 87 3 212 1 48 1 312 1 259 1 51 1 127 1 262 1 222 4 171 1 224 4 134 2 100 1 229 1 139 1 62 1 273 1 64 1 276 1 324 1 325 3 234 1 235 1 237 1 184 2 238 1 188 1 76 1 79 3 333 1 294 1 150 1 35 1 245 1 193 1 152 1 109 1 
224 2 87 2 300 1 139 1 79 1 14 1 222 2 193 1 325 1 
224 3 100 1 62 1 119 1 231 1 121 1 276 1 44 1 235 1 325 3 234 1 87 3 184 1 127 1 79 3 13 1 150 1 193 2 222 3 
224 2 325 2 87 2 184 1 241 1 149 1 79 2 150 1 193 1 222 2 
224 1 199 1 139 1 273 1 159 1 161 1 237 1 238 1 312 1 188 1 259 1 333 1 294 1 245 1 222 1 
95 1 224 1 265 1 199 1 139 1 273 1 159 1 238 1 312 1 188 1 259 1 333 1 294 1 245 1 222 1 
84 2 122 1 254 1 212 1 91 1 18 1 19 1 57 2 134 2 229 1 64 4 322 1 232 1 324 1 281 1 240 1 105 1 76 1 241 2 149 2 293 2 296 1 35 1 152 1 
224 1 87 1 185 1 62 1 79 1 276 1 222 1 325 1 
224 2 199 1 273 1 159 1 121 1 161 1 325 1 87 1 237 1 238 1 188 1 312 1 259 1 241 1 79 1 333 1 294 1 245 1 193 1 222 2 
224 5 87 5 300 1 184 1 269 1 139 1 79 4 66 1 121 1 150 1 14 1 222 5 193 2 325 4 
224 2 87 2 185 1 62 1 79 2 102 1 222 2 325 2 
326 1 5 1 
326 1 5 1 
289 1 292 1 
289 1 292 1 
289 1 292 1 
326 1 191 1 5 1 
326 1 144 1 5 1 
326 2 289 1 292 1 244 1 5 2 45 1 
326 1 191 1 5 1 
326 1 191 1 5 1 
163 1 326 1 5 1 
163 1 326 1 5 1 
163 1 326 1 5 1 
226 2 266 2 100 2 42 1 231 1 5 2 141 1 178 2 326 2 162 1 71 1 186 2 313 1 127 2 78 1 33 1 244 1 128 2 107 3 
196 1 251 1 5 1 162 1 87 2 164 1 127 1 52 1 128 1 222 2 224 2 266 1 226 1 100 1 139 1 178 1 325 2 326 1 144 1 282 1 285 1 79 2 192 1 107 1 
182 1 311 1 68 1 
182 1 311 1 280 1 
182 3 321 1 189 1 81 1 68 2 280 1 
182 2 189 1 63 1 81 1 68 1 280 1 
182 2 189 1 81 2 68 1 280 1 
196 1 111 1 112 2 37 1 83 4 201 1 302 3 305 1 43 2 164 1 49 1 260 1 91 1 127 5 217 2 261 1 167 1 320 1 267 1 20 1 100 5 322 1 101 1 231 2 236 1 70 1 328 3 74 1 240 1 290 2 192 1 296 1 
195 1 111 1 198 1 112 6 83 7 156 1 302 8 4 1 305 6 164 4 49 3 260 1 91 3 127 9 217 6 167 2 320 1 267 3 20 2 22 1 100 9 322 3 101 2 231 5 67 1 236 1 70 2 328 9 73 5 74 2 240 3 290 6 296 3 108 1 246 5 
111 1 37 1 112 2 83 2 302 3 4 1 43 1 164 1 49 2 127 3 91 1 261 1 217 2 167 1 20 1 267 1 100 3 322 1 101 1 231 3 70 1 328 4 74 1 240 1 290 2 296 1 
111 1 198 1 37 1 112 4 83 3 302 5 4 1 43 2 164 2 49 3 127 4 91 2 217 4 261 1 167 1 20 1 267 2 22 1 100 4 322 2 101 1 231 4 67 1 70 1 328 7 74 1 240 2 290 4 296 2 
253 1 
259 1 204 1 
316 1 
259 1 159 1 
172 1 259 3 203 1 218 2 159 1 245 1 
259 1 159 1 245 1 
133 1 259 1 
56 1 114 2 57 5 24 1 206 1 64 9 158 1 322 1 84 4 275 1 122 3 254 2 146 1 50 1 92 1 296 1 297 1 
56 1 114 2 57 5 24 1 206 1 64 9 158 1 322 1 84 4 275 1 122 3 254 2 146 1 50 1 92 1 296 1 297 1 
56 1 114 2 57 5 24 1 206 1 158 1 64 9 322 1 120 1 84 4 275 1 122 3 254 2 146 1 50 1 92 1 296 1 297 1 
114 3 250 1 206 2 158 1 84 13 122 10 254 5 46 4 212 1 91 3 50 5 92 2 11 1 318 3 56 2 267 3 57 16 24 1 134 2 136 1 229 1 64 29 322 3 275 1 324 1 233 1 146 2 331 1 240 2 31 1 242 1 35 1 296 4 297 1 
38 1 114 2 250 1 206 1 158 1 84 5 122 5 254 3 212 2 50 2 92 1 56 1 57 6 134 4 24 1 229 2 64 11 322 1 324 2 146 1 332 1 296 1 35 2 297 1 
1 1 257 1 270 1 80 1 207 1 
97 1 1 1 257 1 270 1 207 1 
1 1 10 1 270 1 118 1 
97 1 1 1 257 1 270 1 207 1 
1 1 257 1 270 1 80 1 207 1 
155 1 
248 2 2 1 154 2 159 1 87 1 259 1 12 1 167 1 14 1 94 1 20 1 99 1 100 5 273 2 176 1 177 1 276 1 183 2 188 1 190 1 288 1 34 2 294 1 111 1 112 2 199 2 302 2 205 2 305 6 209 1 44 1 312 2 126 1 49 2 127 5 315 2 214 1 215 4 222 1 320 1 224 1 132 2 62 1 65 1 231 2 236 3 234 1 235 1 142 1 70 1 328 2 74 1 75 1 333 2 243 1 
305 2 44 1 209 1 87 1 127 3 12 1 214 1 215 2 14 1 222 1 94 1 224 1 100 3 176 1 62 1 276 1 234 1 235 1 236 1 183 1 75 1 187 1 
111 1 305 1 44 1 209 1 87 1 127 3 12 1 214 1 215 3 14 1 222 1 94 1 224 1 100 3 176 1 62 1 231 1 276 1 234 1 235 1 236 1 75 1 187 1 34 1 
111 1 154 1 305 2 44 1 209 1 87 1 127 3 12 1 214 1 215 3 14 1 222 1 94 1 224 1 100 3 176 1 62 1 231 1 276 1 236 1 234 1 235 1 183 1 187 1 75 1 34 1 
248 2 2 1 154 4 87 1 255 1 12 1 167 1 14 1 94 1 100 5 176 1 276 1 183 4 187 1 34 4 111 5 112 1 302 1 205 2 305 7 44 1 209 1 307 1 49 2 127 5 214 1 315 2 215 6 317 1 222 1 53 1 55 1 320 1 224 1 132 2 62 1 65 1 231 5 235 1 234 1 236 3 70 1 75 1 74 1 
248 2 2 1 154 2 87 1 12 1 167 1 14 1 94 1 100 4 176 1 276 1 183 2 34 2 111 1 112 1 302 1 205 2 305 4 44 1 209 1 126 1 49 2 127 4 214 1 315 2 215 4 222 1 320 1 224 1 132 2 62 1 65 1 231 2 235 1 234 1 236 2 70 1 328 2 75 1 74 1 
248 2 111 1 112 1 2 1 154 2 302 1 205 2 305 4 44 1 209 1 87 1 255 1 49 2 127 4 315 2 12 1 214 1 215 4 317 1 167 1 14 1 222 1 53 1 94 1 320 1 224 1 132 2 100 4 176 1 62 1 65 1 231 1 276 1 236 2 234 1 235 1 183 2 70 1 74 1 75 1 34 2 
248 2 111 1 112 1 2 1 154 2 302 1 205 2 305 4 44 1 209 1 87 1 255 1 49 2 127 4 315 2 12 1 214 1 215 4 317 1 167 1 14 1 222 1 53 1 94 1 320 1 224 1 132 2 100 4 176 1 62 1 65 1 231 1 276 1 236 2 234 1 235 1 183 2 70 1 74 1 75 1 34 2 
248 2 111 1 299 1 112 1 2 1 154 2 302 1 305 4 44 1 209 1 87 1 8 1 127 4 12 1 214 1 215 4 317 1 167 1 14 1 16 2 222 1 94 1 320 1 264 1 224 1 132 2 59 2 100 4 176 1 62 1 231 1 276 1 236 2 234 1 235 1 183 2 70 1 328 2 74 1 75 1 34 2 
248 2 111 1 112 1 2 1 154 3 302 1 205 2 305 5 44 1 209 1 307 1 87 1 255 1 49 2 127 4 315 2 12 1 214 1 215 5 317 1 167 1 14 1 222 1 53 1 320 1 94 1 224 1 132 2 100 4 176 1 62 1 65 1 231 1 276 1 236 2 234 1 235 1 70 1 183 3 74 1 75 1 34 3 
248 2 111 1 112 1 2 1 154 3 302 1 205 2 305 5 44 1 209 1 307 1 87 1 255 1 49 2 127 4 315 2 12 1 214 1 215 5 317 1 167 1 14 1 222 1 53 1 320 1 94 1 224 1 132 2 100 4 176 1 62 1 65 1 231 1 276 1 236 2 234 1 235 1 70 1 183 3 74 1 75 1 34 3 
248 2 2 1 154 2 87 1 8 1 12 1 167 1 14 1 16 2 94 1 100 4 176 1 276 1 183 2 34 2 111 1 112 1 302 1 305 4 44 1 209 1 126 1 127 4 214 1 215 4 222 1 320 1 224 1 132 2 59 2 62 1 231 1 235 1 234 1 236 2 70 1 328 2 75 1 74 1 
212 1 134 2 105 1 76 1 229 1 35 1 253 1 324 1 152 1 
303 1 84 6 122 2 86 1 254 1 46 3 212 2 51 1 50 1 91 2 11 1 216 1 318 3 170 1 21 1 267 2 57 8 134 4 229 2 139 1 64 14 322 1 324 2 240 1 76 2 241 8 149 4 242 1 293 8 35 2 296 2 153 1 152 1 
199 1 303 1 159 1 121 1 84 1 161 1 87 1 212 1 47 1 312 1 259 1 51 1 319 1 222 2 170 1 224 2 227 1 57 1 134 2 229 1 139 1 273 1 64 2 324 1 325 1 237 1 238 1 188 1 329 1 76 1 149 1 333 1 79 1 294 1 245 1 35 1 193 1 152 1 
158 1 84 11 159 2 161 2 6 2 87 1 88 1 254 6 259 2 91 2 92 1 93 2 170 1 171 2 267 2 24 1 273 1 28 1 188 2 294 2 293 7 35 3 296 3 297 1 193 1 194 1 114 1 199 3 303 1 121 1 306 2 122 11 125 2 212 3 312 3 314 1 51 1 50 5 222 3 224 3 57 11 134 6 229 3 139 3 64 22 322 3 324 3 325 1 237 2 146 1 238 2 240 2 76 3 241 7 149 7 333 3 79 1 245 2 152 3 
247 1 159 3 84 1 87 1 9 1 259 4 89 1 263 1 273 2 177 1 283 2 188 4 190 1 105 1 30 1 294 3 35 2 193 1 113 1 199 7 202 1 303 1 212 2 312 7 314 1 51 1 222 1 224 1 57 1 134 4 137 1 228 1 229 2 64 2 323 1 324 2 325 1 76 2 333 6 334 1 79 1 245 1 152 2 
84 2 122 1 87 1 254 1 212 1 91 1 222 1 170 1 224 1 173 1 267 1 57 1 134 2 229 1 64 3 322 1 324 1 325 1 184 1 240 1 241 1 76 1 149 1 79 1 293 1 150 1 35 1 296 1 152 1 
57 2 134 2 229 1 64 2 324 1 122 1 212 1 105 1 241 1 76 1 50 1 91 1 149 1 293 1 35 1 296 1 152 1 18 1 
134 2 229 1 64 2 322 1 84 2 324 1 122 1 281 1 254 1 212 1 105 1 240 1 241 1 76 1 149 1 293 1 35 1 152 1 
84 2 122 1 254 1 212 1 91 1 267 1 57 2 134 2 229 1 64 4 322 1 324 1 105 1 240 1 76 1 241 2 149 2 293 2 296 1 35 1 152 1 
57 2 134 2 229 1 64 2 324 1 122 1 212 1 9 1 241 1 76 1 50 1 91 1 149 1 293 1 35 1 296 1 152 1 18 1 
134 2 229 1 64 2 322 1 84 2 324 1 122 1 281 1 254 1 212 1 9 1 240 1 241 1 76 1 149 1 293 1 35 1 152 1 
84 2 122 2 254 1 212 1 9 1 91 1 50 1 267 1 57 2 134 2 229 1 64 4 322 1 324 1 240 1 76 1 241 2 149 2 293 2 296 1 35 1 152 1 
84 2 122 1 254 1 212 1 91 1 267 1 57 2 134 2 229 1 64 4 322 1 324 1 240 1 76 1 241 2 149 2 293 2 296 1 35 1 152 1 
199 1 303 1 159 1 84 1 161 1 212 1 312 1 259 1 51 1 222 1 171 1 224 1 57 1 134 2 229 1 139 1 273 1 64 2 324 1 237 1 238 1 188 1 76 1 333 1 294 1 245 1 35 1 152 1 
199 1 303 1 159 1 84 1 212 1 312 1 259 1 51 1 222 1 95 1 224 1 265 1 57 1 134 2 229 1 139 1 272 1 273 1 64 2 324 1 238 1 188 1 76 1 333 1 294 1 245 1 35 1 152 1 
84 2 122 1 254 1 212 1 91 1 170 1 267 1 57 2 134 2 229 1 64 4 322 1 324 1 240 1 76 1 241 2 149 2 293 2 296 1 35 1 152 1 
199 1 84 2 159 1 122 1 161 1 125 1 254 1 212 1 312 1 259 1 91 1 222 1 171 1 224 1 267 1 57 2 134 2 228 1 229 1 64 4 322 1 324 1 237 1 238 1 188 1 240 1 241 2 76 1 149 2 333 1 293 2 294 1 296 1 245 1 35 1 152 1 
117 1 84 1 122 1 87 1 212 1 50 1 91 1 222 1 170 1 224 1 267 1 57 2 134 2 229 1 64 3 322 1 324 1 325 1 184 1 240 1 76 1 241 1 149 1 79 1 150 1 293 1 35 1 296 1 152 1 
82 1 38 1 84 5 85 1 122 2 254 1 211 1 46 2 212 2 91 2 50 1 11 1 318 1 267 2 57 6 134 4 58 1 229 2 175 1 64 11 322 1 324 2 327 1 284 1 240 1 77 1 242 1 35 2 296 2 
82 4 249 1 38 1 250 2 84 12 122 4 165 1 310 1 124 1 254 2 211 2 212 3 46 2 50 2 91 3 318 2 267 3 57 14 23 1 134 6 58 1 229 3 175 1 64 26 322 2 324 3 327 1 284 2 240 2 287 1 242 2 35 3 151 1 296 3 
82 4 249 1 250 2 158 1 84 17 85 1 165 1 254 3 91 4 11 1 92 1 267 4 23 1 24 1 175 1 284 1 287 1 296 5 35 4 297 1 38 1 114 1 122 8 210 1 124 1 310 1 211 2 212 4 46 4 50 5 318 3 57 21 134 8 58 1 229 4 64 38 322 3 324 4 327 1 146 1 240 2 242 3 151 1 
82 2 38 1 84 6 85 1 122 3 165 1 254 1 211 1 46 2 212 2 91 2 50 2 11 1 318 1 267 2 57 7 134 4 58 1 229 2 175 1 64 13 322 1 324 2 327 1 284 1 240 1 242 1 35 2 296 2 
82 3 249 1 38 1 114 1 250 2 158 1 84 15 122 8 165 1 310 1 124 1 254 3 211 1 46 3 212 3 91 4 50 5 92 1 11 1 318 2 267 4 57 19 24 1 23 1 134 6 58 1 229 3 175 1 64 34 322 3 324 3 327 1 146 1 284 1 240 2 287 1 242 2 151 1 35 3 296 5 297 1 
326 1 266 1 226 1 256 1 313 1 244 1 5 1 141 1 128 1 178 1 
144 1 285 1 
326 1 266 1 226 1 268 1 157 1 5 1 128 1 17 1 178 1 
226 1 266 1 100 1 42 1 231 1 5 1 141 1 178 1 162 1 326 1 71 1 186 1 313 1 127 1 33 1 244 1 128 1 107 2 
226 1 266 1 100 1 42 1 231 1 5 1 141 1 178 1 162 1 326 1 71 1 186 1 313 1 127 1 33 1 244 1 128 1 107 2 
226 1 266 1 100 1 42 1 231 1 5 1 141 1 178 1 162 1 326 1 71 1 186 1 313 1 127 1 33 1 244 1 128 1 107 2 
191 1 208 1 45 1 
191 1 208 1 45 1 
163 1 32 1 
163 1 32 1 45 1 
282 1 52 1 
196 1 83 1 42 1 251 1 5 1 164 1 87 2 127 1 52 1 128 1 222 2 224 2 266 1 226 1 100 1 61 1 139 1 178 1 325 2 326 1 144 1 282 1 186 1 285 1 79 2 192 1 107 1 
191 1 208 1 
163 1 32 1 45 1 
199 2 303 1 159 1 252 1 84 1 87 2 212 1 312 2 259 1 51 1 263 1 54 1 222 2 220 1 170 1 224 2 225 1 57 1 134 2 229 1 64 2 324 1 283 2 188 1 76 1 30 1 333 2 294 1 295 1 35 1 152 1 
110 1 321 1 199 2 116 1 25 1 228 1 68 1 280 1 182 2 143 1 311 1 188 1 312 2 90 1 148 1 314 1 291 1 333 2 294 1 
36 1 110 1 321 1 199 1 25 1 68 1 280 1 182 2 143 1 311 1 312 1 188 1 148 1 314 1 291 1 333 1 294 1 
197 1 199 1 273 1 159 1 177 1 145 1 188 1 312 1 259 1 190 1 90 1 291 1 333 1 294 1 
110 1 321 1 199 1 116 1 25 1 68 1 280 1 182 2 143 1 311 1 188 1 312 1 90 1 148 1 314 1 291 1 333 1 294 1 
223 1 
253 1 
111 1 112 1 302 1 205 1 305 1 49 1 127 1 315 1 167 1 320 1 100 1 65 1 231 2 236 1 70 1 328 1 74 1 
159 3 160 1 259 10 91 2 167 4 169 2 93 2 98 2 20 2 267 2 99 1 100 5 26 2 271 2 273 1 274 1 277 1 279 1 188 4 290 6 294 3 296 2 111 2 112 8 199 3 39 1 203 1 302 9 204 3 41 2 304 1 305 5 123 1 312 3 49 6 127 5 217 6 218 2 320 4 133 2 228 1 322 2 231 8 69 2 235 2 236 3 70 4 328 12 74 4 239 2 240 2 147 2 333 3 245 3 
249 1 111 2 112 5 302 8 41 1 305 1 310 1 124 1 46 1 49 2 127 1 91 2 217 4 318 1 167 2 169 2 320 2 130 1 20 1 267 2 99 1 23 1 100 1 322 2 231 4 278 1 236 1 70 2 328 4 74 2 240 2 290 4 242 1 151 1 296 2 
112 2 302 2 41 1 87 1 255 1 7 1 48 1 127 1 92 1 167 1 222 1 168 1 169 2 320 1 224 1 100 1 62 1 102 1 322 1 29 1 325 1 70 1 146 1 184 1 74 1 79 1 296 2 297 1 
111 1 112 1 302 1 274 1 231 1 160 1 70 1 74 1 167 1 320 1 
267 2 112 5 302 5 41 1 322 2 231 5 328 10 240 2 49 5 91 2 290 5 217 5 296 2 93 1 169 2 
111 1 100 1 127 1 231 1 305 1 236 1 
112 2 199 4 39 2 302 2 4 1 304 1 159 1 305 4 312 4 259 1 127 3 167 2 320 1 129 1 20 2 174 1 99 2 100 3 273 2 177 1 236 2 142 1 70 2 74 2 188 1 190 1 333 4 243 1 294 1 
199 1 84 1 159 1 161 1 87 2 212 1 312 1 48 1 259 1 51 1 222 3 171 1 224 3 134 2 229 1 139 1 273 1 64 1 324 1 325 2 237 1 184 2 238 1 188 1 76 1 333 1 79 2 294 1 35 1 245 1 109 1 152 1 
111 2 112 2 20 1 114 1 99 1 302 1 231 4 70 1 328 4 74 1 49 2 290 2 217 2 167 1 320 1 
309 1 266 1 128 1 
308 1 282 1 266 1 141 1 128 1 
309 1 266 1 128 1 
309 1 266 1 128 1 
266 1 258 1 128 1 
266 1 258 1 128 1 
266 1 258 1 128 1 
266 1 128 1 
326 1 5 1 
114 1 57 4 134 4 24 1 250 1 229 2 64 8 158 1 322 1 84 4 324 2 122 3 254 2 146 1 212 2 50 1 92 1 296 1 35 2 297 1 
253 1 
267 1 57 2 134 2 138 1 229 1 64 4 322 1 84 2 324 1 122 2 254 1 212 1 240 1 91 1 50 1 35 1 296 1 
57 1 46 1 64 2 242 1 318 1 84 1 
114 1 250 1 158 1 84 13 122 8 254 4 46 2 212 1 91 2 50 4 92 2 11 1 216 1 318 2 168 1 267 2 57 15 134 2 24 1 229 1 64 28 322 4 324 1 146 2 240 1 296 5 35 1 297 2 153 1 
46 1 64 1 84 1 
57 1 64 1 318 1 
267 1 57 3 134 2 138 1 229 1 64 6 322 1 84 3 324 1 122 4 254 2 212 1 240 1 91 1 50 2 35 1 296 1 93 1 
249 1 38 1 84 5 122 4 124 1 310 1 254 2 46 1 212 1 50 2 91 2 318 1 267 2 57 7 134 2 23 1 229 1 64 12 322 1 324 1 240 1 242 1 35 1 151 1 296 2 
57 3 64 6 322 1 84 3 122 2 146 1 254 1 50 1 92 1 296 1 297 1 
57 1 134 2 24 1 250 1 229 1 158 1 64 3 84 2 324 1 122 2 254 1 146 1 72 1 212 1 50 1 92 1 35 1 
57 5 64 10 322 2 84 5 122 4 146 1 254 2 50 2 92 1 296 2 168 1 297 1 
38 1 57 2 134 2 229 1 64 2 324 1 122 1 212 1 91 1 50 1 35 1 296 1 
38 1 267 1 57 2 134 2 229 1 64 4 322 1 84 2 324 1 122 1 254 1 212 1 240 1 91 1 35 1 296 1 
38 1 57 1 134 2 229 1 64 2 84 1 324 1 122 2 146 1 254 1 212 1 50 1 92 1 35 1 
38 1 114 1 250 2 158 1 84 17 85 1 122 12 254 6 46 4 212 5 91 3 50 6 92 3 11 1 318 3 267 3 57 17 24 1 134 10 136 1 138 1 229 5 64 34 322 4 324 5 146 3 72 1 331 1 240 2 31 1 242 1 35 5 296 5 297 2 
249 1 38 1 114 1 158 1 84 5 122 3 254 2 46 1 212 1 50 1 92 1 318 1 57 5 134 2 24 1 229 1 64 10 322 1 324 1 146 1 242 1 296 1 35 1 297 1 
249 1 38 1 114 1 158 1 84 6 122 4 254 2 46 2 212 2 91 1 50 2 92 1 11 1 318 1 267 1 57 7 24 1 134 4 138 1 229 2 64 13 322 1 324 2 146 1 242 1 35 2 296 2 297 1 
249 1 38 1 250 2 84 5 122 3 310 1 124 1 254 1 46 1 212 4 50 2 91 2 318 1 267 2 57 7 134 8 23 1 138 1 229 4 64 12 322 1 324 4 240 1 242 1 35 4 151 1 296 2 
249 1 38 1 250 2 84 5 122 3 310 1 124 1 254 2 46 1 212 4 50 1 91 2 318 1 267 2 57 7 134 8 23 1 138 1 229 4 64 12 322 1 324 4 240 1 242 1 35 4 151 1 296 2 
249 1 38 1 114 1 158 1 84 5 122 3 254 2 46 1 212 1 50 1 92 1 318 1 57 5 134 2 24 1 229 1 64 10 322 1 324 1 146 1 242 1 296 1 35 1 297 1 
249 1 38 1 250 2 84 5 122 4 310 1 124 1 254 2 46 1 212 3 50 2 91 2 318 1 267 2 57 7 134 6 23 1 229 3 64 12 322 1 324 3 240 1 242 1 35 3 151 1 296 2 
249 1 38 1 114 1 250 2 158 1 84 9 122 5 310 1 124 1 254 3 46 1 212 4 50 2 91 2 92 1 318 1 267 2 57 11 24 1 23 1 134 8 138 1 229 4 64 20 322 2 324 4 146 1 240 1 242 1 35 4 151 1 296 3 297 1 
249 1 38 1 84 5 85 1 122 4 310 1 124 1 254 2 46 1 212 2 50 2 91 2 318 1 267 2 57 7 134 4 23 1 229 2 64 12 322 1 324 2 240 1 242 1 35 2 151 1 296 2 
57 2 24 1 158 2 64 4 84 2 122 4 146 2 254 2 50 2 92 2 
249 1 38 1 114 1 250 2 158 1 84 9 85 1 122 5 310 1 124 1 254 3 46 1 212 4 50 2 91 2 92 1 318 1 267 2 57 11 24 1 23 1 134 8 229 4 64 20 322 2 324 4 146 1 240 1 242 1 35 4 151 1 296 3 297 1 
224 1 87 1 300 1 3 1 139 1 14 1 222 1 
0 1 115 1 60 1 140 1 27 1 
199 1 312 1 273 1 333 1 253 1 
224 2 199 1 139 1 273 1 159 1 325 1 161 1 87 1 238 1 188 1 312 1 259 1 79 1 333 1 294 1 245 1 193 1 222 2 
199 1 39 1 159 2 161 1 87 2 312 1 259 3 222 2 224 2 133 1 271 1 139 1 62 1 276 1 325 2 234 1 238 1 188 1 333 1 79 1 294 1 245 2 193 1 
199 2 39 1 159 2 87 2 312 2 259 3 221 1 222 2 95 1 224 2 133 1 271 1 139 1 62 1 276 1 325 2 234 1 238 1 188 1 333 2 79 1 294 1 245 2 193 1 
111 1 133 1 199 3 39 1 100 2 271 1 204 1 273 1 231 1 159 1 305 1 235 1 103 1 188 1 312 3 259 4 127 2 333 3 106 1 218 1 294 1 245 1 221 1 
111 1 133 1 199 3 39 1 100 2 271 1 204 1 273 1 231 1 159 1 305 1 235 1 188 1 312 3 259 4 147 1 127 2 333 3 218 1 294 1 245 1 221 1 
188 1 199 1 312 1 40 1 333 1 294 1 
247 1 113 1 199 6 228 1 203 1 273 2 323 1 159 2 283 1 312 6 188 3 259 3 213 1 89 1 314 1 334 1 333 5 294 2 245 1 263 1 
158 1 252 1 159 1 84 4 161 1 87 1 254 2 259 1 92 1 171 1 170 1 24 1 188 1 294 1 293 1 35 2 296 1 193 1 297 1 114 1 199 1 306 1 122 3 125 1 212 2 312 1 50 1 222 2 224 2 57 4 134 4 228 1 229 2 139 3 64 8 322 1 324 2 325 1 237 1 146 1 238 1 241 1 76 2 149 1 333 1 79 1 245 1 152 2 
111 1 112 1 83 1 199 1 302 1 204 1 304 1 305 2 160 1 312 1 259 2 127 3 167 2 218 1 320 2 98 1 100 3 273 1 274 1 231 1 69 1 235 1 236 1 70 2 74 2 239 1 147 1 333 1 
199 2 228 1 203 1 40 1 159 1 277 1 312 2 188 2 259 2 333 2 218 1 294 1 245 1 
199 4 228 1 273 1 159 1 177 1 330 1 188 1 312 4 190 1 259 1 333 4 294 1 221 1 
199 2 39 1 137 1 202 1 159 1 88 1 312 2 188 2 259 1 89 1 334 1 333 2 294 1 245 1 
182 1 110 1 311 1 188 1 199 1 312 1 273 1 333 1 294 1 280 1 
199 2 228 1 159 1 312 2 188 1 259 1 314 1 333 2 294 1 54 1 263 1 
247 1 199 5 39 1 228 1 273 1 323 1 159 2 177 1 330 1 312 5 188 2 190 1 259 3 333 4 294 2 263 1 
247 1 96 1 199 5 39 1 228 1 273 1 159 2 177 1 330 1 312 5 188 2 190 1 259 3 333 4 294 2 263 1 
95 1 224 2 199 1 139 1 273 1 159 1 325 1 87 1 238 1 188 1 312 1 259 1 79 1 333 1 294 1 245 1 193 1 222 2 
199 1 39 1 203 1 159 1 312 1 188 2 259 1 213 1 89 1 334 1 333 1 294 1 245 1 
104 1 139 1 230 1 181 1 180 1 
111 1 131 1 83 1 100 2 139 1 62 1 230 2 119 1 231 1 276 1 44 1 235 1 234 1 180 1 179 1 181 2 104 2 127 2 219 1 
224 1 87 1 225 1 230 1 295 1 222 1 220 1 180 1 181 1 
131 1 219 1 180 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (168,200) (168,200) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (168,200) (168,200) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (168,200) (168,200) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (168,200) (168,200) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 24 41 163 45 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 24 41 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 24 41 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 24 143 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 24 41 163 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 24 41 163 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 136 182 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 185 320 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3437 | = null
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3404 | = null
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | OPERATOR | 4163 | / -> %
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11444 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6348 | stmt -> ;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7182 | if (x) -> if (!x)
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2022 | = null
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 4646 | return null
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
123 1 168 1 132 1 203 1 23 1 43 1 118 1 282 1 200 1 
123 1 168 1 132 1 203 1 23 1 43 1 118 1 282 1 200 1 
123 1 168 1 132 1 203 1 23 1 43 1 118 1 282 1 200 1 
123 1 168 1 132 1 203 1 23 1 43 1 118 1 282 1 200 1 
161 1 60 1 203 4 132 4 43 1 77 2 294 1 314 1 277 1 278 3 93 1 148 1 240 2 58 1 118 1 282 1 129 3 372 1 
161 1 203 2 132 2 43 1 64 1 345 1 176 1 276 1 123 1 93 1 23 1 148 1 118 1 129 1 282 1 372 1 
161 1 203 3 132 3 43 2 277 1 278 1 23 1 148 1 184 1 240 1 118 1 282 2 129 2 
171 1 60 1 132 9 203 9 43 2 277 3 278 7 155 1 93 1 23 1 240 4 184 1 118 1 282 2 161 1 77 2 294 1 314 1 335 1 148 1 58 1 129 5 59 1 372 1 
171 1 60 1 132 9 203 9 43 2 277 3 278 7 155 1 93 1 23 1 240 4 184 1 118 1 282 2 161 1 77 2 294 1 314 1 335 1 148 1 58 1 129 5 59 1 372 1 
202 1 52 1 89 1 
224 1 86 2 89 1 
62 1 11 2 343 1 258 2 127 2 27 2 84 2 98 2 
273 1 62 1 131 1 90 1 231 1 110 1 343 1 258 2 259 1 207 1 68 1 92 1 279 1 212 1 156 1 351 1 352 2 6 2 27 2 308 1 243 1 186 1 98 2 283 2 263 2 121 1 359 1 104 1 11 3 57 1 106 1 127 3 196 1 84 2 301 1 88 2 227 1 
253 1 11 1 343 1 258 1 324 1 38 1 127 1 27 1 84 1 98 1 
258 1 16 1 295 1 52 1 2 1 251 1 253 1 11 1 127 1 225 1 170 1 87 1 89 1 284 1 
258 1 16 1 295 1 52 1 2 1 251 1 253 1 11 1 127 1 27 1 84 1 98 1 87 2 89 1 284 2 
274 1 50 1 87 1 284 1 262 1 
154 1 274 1 52 1 87 2 89 1 284 2 262 1 33 1 
274 1 87 1 284 1 
63 1 343 1 258 1 324 1 253 1 11 1 38 1 127 1 27 1 84 1 87 1 98 1 262 1 284 1 
89 1 
56 1 274 1 52 1 87 2 89 1 284 2 262 1 33 1 
341 1 342 1 39 1 274 2 52 1 327 1 53 2 135 1 33 1 318 1 116 1 48 1 244 2 85 1 87 5 89 1 262 2 284 5 285 2 
202 1 62 1 
62 2 258 2 175 1 11 2 127 2 27 1 84 1 187 1 98 1 
103 1 323 1 109 1 
263 1 273 1 62 1 131 1 110 1 207 1 104 1 156 1 11 1 352 1 95 1 127 1 196 1 106 1 283 1 227 1 
263 1 273 1 131 1 120 1 110 1 258 1 190 1 207 1 103 1 104 1 156 1 11 2 352 1 106 1 127 2 196 1 84 1 98 1 283 1 227 1 
62 1 120 1 11 3 258 3 127 3 27 1 84 3 98 3 
253 1 11 1 258 1 38 1 127 1 84 1 98 1 
253 1 11 1 258 1 127 1 175 1 27 1 84 1 187 1 98 1 
273 1 62 1 131 1 90 1 231 1 110 1 343 1 258 3 16 1 175 1 207 1 133 1 2 1 92 1 279 1 156 1 351 1 352 1 6 1 27 2 243 1 186 1 98 3 283 1 214 1 284 1 263 1 120 1 121 1 190 1 295 1 251 1 104 1 253 1 11 4 57 1 106 1 196 1 127 4 84 3 301 1 87 1 88 2 227 1 
62 1 120 1 11 2 258 2 307 1 127 2 170 1 84 1 98 1 
120 2 258 3 190 1 16 1 175 1 295 1 2 1 133 1 328 1 251 1 253 1 11 3 127 3 27 1 84 3 87 1 98 3 89 1 284 1 
103 1 120 1 11 2 258 2 323 1 127 2 175 1 27 1 84 2 98 2 
263 1 273 1 62 1 131 1 110 1 207 1 104 1 156 1 11 1 352 1 127 1 196 1 106 1 283 1 227 1 
263 1 273 1 62 1 131 1 110 1 362 1 207 1 104 1 11 1 352 1 127 1 338 1 106 1 283 1 227 1 
61 1 0 1 90 1 231 1 323 2 349 1 279 1 97 1 6 4 71 1 308 2 243 1 186 2 310 1 51 1 289 1 361 1 164 1 268 1 103 2 57 1 301 1 88 2 109 2 
253 1 11 1 258 1 127 1 295 1 84 1 49 1 98 1 
62 1 120 2 258 5 190 1 175 1 66 1 11 5 261 1 307 1 127 5 27 1 170 1 84 4 98 4 
253 1 11 2 258 2 38 1 127 2 49 1 84 2 98 2 
21 1 70 1 
21 1 70 1 
36 1 206 1 
36 1 206 1 
36 1 206 1 
21 1 70 1 165 1 
21 1 70 1 122 1 
180 1 21 2 70 2 368 1 36 1 206 1 
21 1 70 1 165 1 
21 1 70 1 165 1 
21 1 70 1 271 1 
21 1 70 1 271 1 
21 1 70 1 271 1 
246 1 272 2 332 2 344 3 350 1 34 2 179 1 180 1 21 2 319 1 70 2 117 1 354 1 370 1 130 2 87 2 89 1 150 2 284 2 
272 1 62 1 42 1 258 2 344 1 174 1 21 1 70 1 239 1 280 1 98 2 284 1 332 1 266 1 122 1 319 1 11 2 127 2 369 1 84 2 130 1 87 1 149 1 150 1 
93 1 58 1 372 1 
93 1 345 1 372 1 
367 1 82 1 58 2 345 1 297 1 372 3 
367 1 58 1 345 1 65 1 297 1 372 2 
367 1 58 1 345 1 297 2 372 2 
61 1 172 2 0 1 230 1 42 1 174 1 274 1 348 1 135 1 116 3 241 1 244 1 99 2 285 1 284 5 262 4 51 1 361 1 78 1 218 2 293 1 250 1 52 1 53 1 33 1 318 2 195 1 224 1 369 1 86 3 87 5 89 2 
61 3 172 6 0 3 174 4 274 6 91 1 135 1 69 5 116 8 306 1 241 1 244 2 50 5 99 6 284 9 262 7 285 2 51 3 141 1 162 1 357 1 361 3 78 3 293 2 334 1 52 1 53 2 33 1 318 6 195 2 224 3 85 1 86 9 87 9 89 5 
61 1 172 2 0 1 230 1 174 1 348 1 116 3 244 1 99 2 262 2 285 1 284 3 51 1 361 1 218 1 78 1 293 1 52 1 53 1 318 2 195 1 224 2 85 1 86 4 87 3 89 3 
61 2 172 4 0 2 230 1 174 2 348 1 116 5 244 1 99 4 285 1 284 4 262 3 51 2 162 1 357 1 361 2 218 2 78 2 293 1 334 1 52 1 53 1 318 4 195 1 224 3 86 7 85 1 87 4 89 4 
202 1 131 1 363 1 
131 1 185 1 
101 1 
131 1 106 1 
309 1 131 3 110 1 106 1 363 2 340 1 
131 1 110 1 106 1 
131 1 142 1 
310 3 228 1 61 1 361 1 347 2 366 1 146 1 22 1 211 1 305 1 256 1 257 1 71 2 6 7 308 4 186 3 140 1 
310 3 228 1 61 1 361 1 347 2 366 1 146 1 22 1 211 1 305 1 256 1 257 1 71 2 6 7 308 4 186 3 140 1 
310 3 228 1 61 1 361 1 347 2 366 1 146 1 22 1 329 1 211 1 305 1 256 1 257 1 71 2 6 7 308 4 186 3 140 1 
228 2 61 4 0 3 90 1 19 1 347 3 22 5 279 1 211 2 305 1 353 1 6 31 71 5 308 16 140 1 186 15 30 1 310 10 51 3 216 1 75 1 361 4 78 3 146 1 366 2 317 4 124 3 300 1 256 2 57 1 257 1 199 1 301 1 88 2 
310 4 228 1 61 1 216 1 90 2 361 1 347 2 366 1 22 1 211 1 279 2 169 1 305 1 256 1 57 2 257 1 71 3 6 9 308 5 356 1 140 1 186 4 301 2 88 4 
273 1 132 2 203 2 43 1 205 1 345 1 278 1 238 1 93 1 352 1 23 1 118 1 282 1 283 1 161 1 263 1 8 1 311 1 79 1 144 1 219 1 102 1 104 1 298 1 82 1 148 1 58 1 339 1 129 1 372 2 
273 1 132 3 203 3 43 1 205 1 345 1 114 1 210 1 278 2 93 1 352 1 23 1 282 1 283 1 161 1 263 1 247 1 8 1 311 1 79 1 144 1 102 1 104 1 82 1 298 1 148 1 58 1 339 1 129 1 372 2 
273 1 132 2 203 2 205 1 345 1 210 1 278 2 93 1 23 1 352 1 283 1 161 1 263 1 247 1 8 1 311 1 79 1 144 1 104 1 298 1 82 1 148 1 58 1 129 1 372 2 
263 1 273 1 8 2 131 1 203 1 132 1 43 1 333 1 205 2 79 2 207 1 153 1 315 1 134 1 20 1 104 1 114 1 23 2 352 1 106 1 128 1 282 1 283 1 
273 1 132 1 203 1 43 1 205 1 345 1 210 1 93 1 352 1 23 1 118 1 282 1 283 1 263 1 8 1 311 1 79 1 144 1 219 1 102 1 104 1 298 1 82 1 58 1 339 1 372 2 
254 1 
273 3 131 2 110 1 112 1 274 2 260 1 207 2 346 1 303 1 153 1 135 1 134 1 352 2 116 1 244 1 283 2 285 1 284 2 286 1 263 2 215 1 192 1 53 1 33 1 104 2 318 1 195 1 106 2 87 2 
15 2 258 1 16 1 274 2 2 1 236 1 183 1 5 1 284 3 295 1 251 1 33 1 269 1 10 1 253 1 11 1 56 1 337 1 127 1 225 1 170 1 87 3 
15 3 258 1 16 1 274 1 2 1 236 1 183 1 5 1 284 3 295 1 52 1 251 1 33 1 10 1 253 1 11 1 223 1 56 1 337 1 127 1 225 1 170 1 87 3 89 1 
14 1 15 3 258 1 16 1 274 2 2 1 236 1 183 1 5 1 284 3 295 1 52 1 251 1 33 1 269 1 10 1 253 1 11 1 56 1 223 1 337 1 127 1 225 1 170 1 87 3 89 1 
14 2 15 2 41 1 258 1 16 1 274 3 2 1 45 1 135 1 236 1 183 1 116 1 24 1 5 1 244 1 285 1 284 3 312 1 163 1 295 1 251 1 53 1 194 1 33 1 269 2 10 1 318 1 253 1 11 1 56 1 337 1 127 1 225 1 170 1 87 3 
274 4 325 2 2 1 135 1 236 1 183 1 5 1 138 1 244 1 284 4 285 1 295 1 52 1 251 1 53 1 145 2 10 1 253 1 11 1 337 1 14 2 15 4 258 1 16 1 116 1 26 2 119 1 312 1 313 2 33 2 269 2 318 1 223 2 224 2 127 1 225 1 170 1 86 2 87 4 89 2 
15 2 41 1 258 1 16 1 2 1 236 1 135 1 183 1 116 1 24 1 5 1 244 1 285 1 284 2 312 1 295 1 251 1 194 1 53 1 10 1 318 1 253 1 11 1 337 1 127 1 225 1 170 1 87 2 
15 2 41 1 258 1 16 1 2 1 236 1 135 1 183 1 116 1 24 1 5 1 244 1 285 1 284 2 312 1 295 1 251 1 194 1 53 1 10 1 318 1 253 1 11 1 337 1 127 1 225 1 170 1 87 2 
15 2 258 1 16 1 2 1 236 1 135 1 183 1 116 1 24 1 5 1 244 1 285 1 284 2 292 1 143 1 295 1 296 1 251 1 53 1 10 1 318 1 253 1 11 1 337 1 127 1 225 1 170 1 87 2 
14 1 15 3 41 1 258 1 16 1 274 1 2 1 135 1 236 1 183 1 116 1 24 1 5 1 244 1 285 1 284 2 312 1 163 1 295 1 251 1 53 1 194 1 269 1 10 1 318 1 253 1 11 1 223 1 337 1 127 1 225 1 170 1 87 2 
14 1 15 3 41 1 258 1 16 1 274 1 2 1 135 1 236 1 183 1 116 1 24 1 5 1 244 1 285 1 284 2 312 1 163 1 295 1 251 1 53 1 194 1 269 1 10 1 318 1 253 1 11 1 223 1 337 1 127 1 225 1 170 1 87 2 
274 4 2 1 135 1 236 1 183 1 5 1 138 1 244 1 284 4 285 1 189 2 295 1 296 1 52 1 251 1 53 1 145 2 10 1 54 2 253 1 11 1 337 1 14 2 15 4 258 1 16 1 116 1 119 1 313 2 33 2 269 2 318 1 223 2 127 1 225 1 170 1 86 2 87 4 89 1 
310 2 202 1 61 1 62 2 231 1 90 1 361 1 323 1 347 1 349 1 366 1 103 1 279 1 305 1 256 1 57 1 6 6 257 1 71 2 308 3 243 1 186 3 140 1 301 1 88 2 109 1 
61 1 62 1 0 1 90 2 231 2 323 4 152 1 19 1 67 1 68 1 22 1 279 2 281 1 71 1 6 14 243 1 308 8 186 6 310 2 51 2 188 1 75 1 121 1 361 2 78 2 316 1 103 11 317 3 124 3 57 2 301 2 88 4 109 11 
273 1 62 1 131 1 110 1 231 1 90 1 258 1 323 1 207 1 68 1 156 1 279 1 352 1 95 1 281 1 6 2 243 1 308 1 186 1 283 1 98 1 263 1 120 1 121 1 190 1 104 1 166 1 147 1 11 2 37 1 106 1 196 1 57 1 127 2 84 1 301 1 227 1 88 2 
273 1 131 1 110 1 231 2 90 2 258 1 207 1 156 1 279 2 351 1 352 1 281 1 6 1 243 2 186 1 98 1 283 1 7 1 263 1 120 1 121 1 190 1 365 1 104 1 255 1 11 2 106 1 196 1 107 1 57 2 127 2 84 1 301 2 227 1 88 4 
273 2 131 3 90 2 231 2 258 1 207 2 235 1 153 1 349 1 134 1 68 1 210 1 238 1 279 2 212 2 352 8 242 1 6 2 243 2 159 1 308 1 139 1 186 1 98 1 283 8 263 7 120 1 121 1 104 2 11 1 55 1 127 1 57 2 106 2 226 1 84 1 321 1 301 2 88 4 
61 1 0 1 90 1 231 1 258 1 323 1 175 1 279 1 281 1 71 1 27 1 6 3 243 1 308 1 186 2 98 1 310 1 51 1 291 1 361 1 78 1 103 1 11 1 57 1 127 1 84 1 301 1 88 2 109 1 
310 1 51 1 289 1 231 1 90 1 361 1 323 1 349 1 103 1 22 1 279 1 57 1 6 2 243 1 308 2 301 1 88 2 109 1 
310 1 61 1 0 1 231 1 90 1 323 1 349 1 103 1 279 1 57 1 97 1 71 1 6 2 243 1 186 2 301 1 88 2 109 1 
310 2 61 1 51 1 0 1 231 1 90 1 361 1 323 2 78 1 349 1 103 2 22 1 279 1 57 1 71 1 6 4 243 1 308 2 186 2 301 1 88 2 109 2 
310 1 51 1 289 1 231 1 90 1 361 1 323 1 103 1 22 1 279 1 57 1 6 2 159 1 243 1 308 2 301 1 88 2 109 1 
310 1 61 1 0 1 231 1 90 1 323 1 103 1 279 1 57 1 97 1 71 1 6 2 159 1 243 1 186 2 301 1 88 2 109 1 
310 2 61 1 51 1 0 1 231 1 90 1 361 1 323 2 78 1 103 2 22 1 279 1 57 1 71 1 6 4 159 1 243 1 308 2 186 2 301 1 88 2 109 2 
310 2 61 1 51 1 0 1 231 1 90 1 361 1 323 2 78 1 103 2 22 1 279 1 57 1 71 1 6 4 243 1 308 2 186 2 301 1 88 2 109 2 
273 1 62 1 131 1 110 1 231 1 90 1 207 1 68 1 156 1 279 1 351 1 352 1 6 2 308 1 243 1 186 1 283 1 263 1 121 1 104 1 11 1 106 1 196 1 127 1 57 1 301 1 227 1 88 2 
273 1 62 1 131 1 110 1 231 1 90 1 207 1 68 1 279 1 352 1 6 2 308 1 243 1 186 1 283 1 263 1 121 1 362 1 104 1 11 1 106 1 338 1 83 1 127 1 57 1 301 1 227 1 88 2 
310 2 61 1 51 1 0 1 231 1 90 1 361 1 323 2 78 1 103 2 22 1 279 1 281 1 57 1 71 1 6 4 243 1 308 2 186 2 301 1 88 2 109 2 
61 1 273 1 0 1 131 1 110 1 231 1 90 1 323 2 22 1 156 1 238 1 279 1 351 1 352 1 71 1 6 4 308 2 243 1 186 2 283 1 310 2 263 1 51 1 361 1 78 1 103 2 104 1 11 1 196 1 107 1 106 1 127 1 57 1 301 1 227 1 88 2 109 2 
61 1 0 1 90 1 231 1 258 1 323 1 175 1 22 1 279 1 281 1 27 1 6 3 243 1 308 2 186 1 98 1 310 1 51 1 361 1 78 1 32 1 103 1 11 1 57 1 127 1 84 1 301 1 88 2 109 1 
201 1 61 4 0 4 90 3 233 1 19 1 177 2 178 3 136 1 304 1 22 3 182 1 137 1 279 3 25 1 28 1 71 2 6 32 355 1 308 15 186 17 310 5 51 4 216 1 75 3 358 1 361 4 191 1 78 4 267 1 317 4 336 1 169 1 124 3 57 3 301 3 88 6 
201 1 61 3 0 3 90 4 233 1 19 1 177 2 178 4 136 1 304 1 22 3 182 1 137 1 279 4 25 1 28 1 71 3 6 33 355 1 308 17 186 16 310 6 51 4 216 2 75 3 358 1 361 4 191 1 78 4 267 1 317 4 336 1 169 1 124 3 57 4 301 4 88 8 
201 1 61 7 0 6 90 2 233 1 347 1 19 2 177 1 178 3 136 1 304 1 22 6 182 1 137 1 279 2 305 1 28 1 71 6 6 46 355 1 308 24 140 1 186 22 310 12 51 6 216 1 188 2 75 2 358 1 361 7 78 6 267 1 366 1 317 4 336 1 169 1 124 4 256 1 57 2 257 1 301 2 88 4 
61 3 0 3 90 2 19 1 177 1 178 2 136 2 22 3 182 1 279 2 25 1 71 3 6 19 355 1 308 9 186 10 310 6 51 3 264 1 75 1 358 1 361 3 78 3 267 1 317 2 169 1 124 1 57 2 301 2 88 4 
201 1 61 2 0 2 90 3 233 1 177 2 178 3 136 1 304 1 22 1 182 1 279 3 137 1 28 1 71 1 6 24 355 2 308 13 186 11 310 2 51 3 216 2 358 1 75 2 361 3 78 3 267 1 317 2 336 1 169 1 124 2 57 3 301 3 88 6 
350 1 246 1 332 1 272 1 180 1 21 1 70 1 130 1 150 1 46 1 
239 1 122 1 
332 1 272 1 21 1 248 1 47 1 70 1 113 1 130 1 150 1 
246 1 272 1 332 1 344 2 350 1 34 1 179 1 180 1 21 1 319 1 70 1 354 1 370 1 130 1 87 1 89 1 284 1 150 1 
246 1 272 1 332 1 344 2 350 1 34 1 179 1 180 1 21 1 319 1 70 1 354 1 370 1 130 1 87 1 89 1 284 1 150 1 
246 1 272 1 332 1 344 2 350 1 34 1 179 1 180 1 21 1 319 1 70 1 354 1 370 1 130 1 87 1 89 1 284 1 150 1 
368 1 220 1 165 1 
368 1 220 1 165 1 
18 1 271 1 
368 1 18 1 271 1 
266 1 149 1 
272 1 62 1 42 1 258 2 344 1 174 1 21 1 70 1 239 1 280 1 98 2 284 1 262 1 332 1 266 1 122 1 34 1 35 1 11 2 127 2 369 1 370 1 84 2 130 1 87 1 149 1 150 1 
220 1 165 1 
368 1 18 1 271 1 
273 1 131 1 231 1 90 1 258 2 235 1 275 1 68 1 3 1 279 1 212 2 352 2 281 1 6 2 243 1 308 1 139 1 186 1 283 2 263 2 74 1 249 1 121 1 193 1 104 1 11 2 106 1 127 2 57 1 301 1 88 2 
263 2 273 1 204 1 311 1 205 1 232 1 345 1 144 1 104 1 82 1 210 1 238 1 93 1 352 2 58 1 339 1 283 2 213 1 372 2 
263 1 273 1 311 1 205 1 232 1 345 1 144 1 104 1 82 1 210 1 93 1 352 1 94 1 58 1 339 1 283 1 372 2 
263 1 273 1 131 1 40 1 205 1 207 1 153 1 134 1 104 1 352 1 106 1 128 1 283 1 213 1 
263 1 273 1 204 1 311 1 205 1 232 1 345 1 144 1 104 1 82 1 210 1 93 1 352 1 58 1 339 1 283 1 213 1 372 2 
252 1 
202 1 318 1 116 1 48 1 52 1 327 1 89 1 
274 1 325 1 135 1 116 1 26 1 244 1 285 1 284 1 312 1 52 1 53 1 33 1 318 1 224 1 86 1 87 1 89 2 
263 1 309 1 273 2 131 1 110 1 207 1 53 1 135 1 104 1 209 1 352 1 320 1 185 1 106 1 244 1 283 1 285 1 
61 2 172 5 0 2 274 1 233 1 135 2 304 1 137 1 116 7 28 1 244 2 99 5 284 1 245 1 285 2 51 2 75 1 361 2 78 2 52 1 53 2 33 1 317 1 318 4 336 1 124 1 125 1 224 3 86 6 87 1 89 4 
61 1 229 1 63 1 343 1 258 1 324 1 135 1 116 2 27 1 244 1 98 1 285 1 284 1 361 2 53 1 194 1 366 1 253 1 167 1 318 2 11 1 125 2 38 1 127 1 256 1 257 1 84 1 87 1 
52 1 327 1 53 1 135 1 318 1 116 1 48 1 244 1 285 1 89 1 
51 2 61 2 172 5 229 1 0 2 361 2 78 2 318 5 116 5 125 2 224 5 197 1 86 10 99 5 89 5 
274 1 52 1 87 1 89 1 284 1 33 1 
273 3 131 2 110 1 112 1 274 2 260 1 207 2 346 1 303 1 153 1 135 1 134 1 352 2 116 1 244 1 283 2 285 1 284 1 286 1 263 2 215 1 192 1 53 1 33 1 104 2 318 1 195 1 106 2 270 1 87 1 
273 1 62 1 131 1 90 1 343 1 110 1 231 1 258 2 207 1 92 1 279 1 156 1 351 1 352 1 6 1 27 2 243 1 186 1 283 1 98 2 263 1 121 1 104 1 11 3 57 1 127 3 196 1 106 1 84 2 301 1 88 2 227 1 
172 2 215 1 52 2 347 1 53 1 135 1 318 2 195 1 116 1 224 2 244 1 86 4 99 2 285 1 89 4 
332 1 234 1 130 1 
350 1 332 1 9 1 266 1 130 1 
332 1 234 1 130 1 
332 1 234 1 130 1 
332 1 80 1 130 1 
332 1 80 1 130 1 
332 1 80 1 130 1 
332 1 130 1 
21 1 70 1 
310 2 61 1 90 1 75 1 361 1 347 1 366 1 317 1 279 1 137 1 169 1 305 1 124 1 256 1 57 1 257 1 71 2 6 8 308 4 140 1 186 4 301 1 88 2 
61 1 90 2 347 1 19 1 22 1 137 1 279 2 305 1 71 2 6 11 308 6 140 1 186 5 310 3 51 1 75 1 361 2 78 1 366 1 317 2 81 1 169 1 124 1 256 1 57 2 257 1 301 2 88 4 
61 2 0 2 90 3 233 1 304 1 22 1 137 1 279 3 28 1 6 13 71 1 308 6 186 7 310 2 51 2 216 1 75 1 361 2 78 2 317 1 81 1 336 1 169 1 124 1 57 3 301 3 88 6 
61 1 0 1 90 3 233 1 304 1 22 1 137 1 279 3 6 11 71 1 28 1 308 7 186 4 310 2 51 2 216 1 75 1 361 2 78 2 317 1 81 1 336 1 169 1 124 1 57 3 301 3 88 6 
310 2 61 1 90 1 75 1 361 1 347 1 366 1 317 1 279 1 137 1 169 1 305 1 124 1 256 1 57 1 257 1 71 2 6 8 308 4 140 1 186 4 301 1 88 2 
61 2 0 2 90 1 233 1 304 1 22 1 137 1 279 1 6 12 71 1 28 1 308 6 186 6 310 2 51 2 75 1 361 2 78 2 317 1 336 1 169 1 124 1 57 1 301 1 88 2 
61 1 0 1 90 4 233 1 304 1 22 1 137 1 279 4 28 1 6 12 71 1 308 7 186 5 310 2 51 2 216 2 75 1 361 2 78 2 317 1 81 1 336 1 169 1 124 1 57 4 301 4 88 8 
61 1 0 1 90 4 233 1 304 1 22 2 137 1 279 4 25 1 28 1 6 12 71 2 308 7 186 5 310 4 51 2 216 2 75 1 361 2 78 2 317 1 336 1 169 1 124 1 57 4 301 4 88 8 
310 6 61 1 361 1 366 3 22 3 305 2 256 3 6 7 71 3 257 1 308 3 186 4 140 1 
61 1 0 1 90 4 233 1 304 1 22 1 137 1 279 4 25 1 28 1 6 12 71 1 308 7 186 5 310 2 51 2 216 2 75 1 361 2 78 2 317 1 336 1 169 1 124 1 57 4 301 4 88 8 
310 3 61 1 216 1 90 2 361 1 347 1 366 1 22 1 279 2 305 1 57 2 256 1 257 1 6 8 71 2 308 4 186 4 140 1 301 2 88 4 
202 1 310 2 61 1 361 1 347 1 366 1 305 1 256 1 71 2 257 1 6 6 308 3 186 3 140 1 
310 2 61 1 51 1 0 1 90 1 361 1 78 1 22 1 81 1 279 1 57 1 71 1 6 4 308 2 186 2 301 1 88 2 
310 2 61 1 51 1 0 1 75 1 361 1 78 1 19 1 317 2 22 1 124 1 71 1 6 7 308 3 186 4 
61 3 0 2 90 2 347 1 19 1 67 1 22 4 279 2 305 1 158 1 6 23 71 5 308 11 140 1 186 12 310 9 51 2 188 1 216 2 361 3 78 2 366 2 317 2 124 2 256 2 57 2 257 1 301 2 88 4 
317 1 6 1 186 1 
124 1 6 1 308 1 
310 3 51 1 61 1 0 1 90 1 361 1 78 1 22 1 279 1 81 1 57 1 197 1 6 6 71 2 308 3 186 3 301 1 88 2 
61 2 0 2 90 1 233 1 304 1 22 1 137 1 279 1 6 12 71 1 28 1 308 6 186 6 310 2 51 2 75 1 361 2 78 2 317 1 336 1 169 1 124 1 57 1 301 1 88 2 
310 2 61 1 361 1 366 1 22 1 256 1 257 1 6 6 71 1 308 3 186 3 
310 2 216 1 90 1 366 1 22 1 279 1 305 1 256 1 158 1 57 1 71 1 6 3 308 1 186 2 140 1 301 1 88 2 
310 6 61 2 361 2 366 2 22 3 167 1 256 2 71 3 6 12 257 1 308 6 186 6 
310 1 51 1 90 1 361 1 22 1 279 1 169 1 57 1 6 2 308 2 301 1 88 2 
310 2 61 1 51 1 0 1 90 1 361 1 78 1 22 1 279 1 169 1 57 1 71 1 6 4 308 2 186 2 301 1 88 2 
310 2 216 1 90 3 366 1 22 1 279 3 169 1 25 1 158 1 57 3 256 1 6 3 71 1 308 1 186 2 301 3 88 6 
61 5 0 3 90 5 347 1 19 1 22 5 279 5 305 1 353 1 25 1 158 1 6 34 71 7 308 16 140 1 186 18 310 12 51 3 216 2 75 1 361 5 78 3 366 3 317 4 81 1 169 1 124 3 300 1 256 3 57 5 257 2 199 1 301 5 88 10 
62 1 11 1 258 1 127 1 307 1 170 1 198 1 
62 1 288 1 173 1 258 1 322 1 31 1 11 1 307 1 127 1 198 1 170 1 108 1 
202 1 263 1 273 1 104 1 131 1 352 1 106 1 207 1 153 1 283 1 134 1 
263 1 273 1 62 1 131 1 120 1 110 1 258 1 207 1 104 1 156 1 11 2 352 1 106 1 127 2 84 1 98 1 283 1 227 1 
263 1 273 1 62 1 131 3 120 1 110 2 142 1 258 2 16 1 295 1 208 1 104 1 253 1 156 1 11 2 352 1 106 2 127 2 84 1 160 1 98 2 283 1 227 1 
13 1 273 1 62 1 131 3 110 2 258 2 16 1 208 1 352 2 160 1 283 2 98 2 263 2 120 1 142 1 362 1 295 1 104 1 253 1 11 2 127 2 106 2 84 1 227 1 
13 1 273 1 131 4 302 1 110 1 274 1 207 1 2 1 208 1 352 3 185 1 160 1 283 3 284 2 263 3 142 1 52 1 363 1 104 1 299 1 106 1 87 2 89 1 
263 3 13 1 273 1 131 4 110 1 142 1 274 1 207 1 52 1 2 1 363 1 208 1 237 1 104 1 352 3 106 1 185 1 160 1 87 2 283 3 89 1 284 2 
263 1 273 1 104 1 352 1 242 1 283 1 
263 1 309 1 273 2 131 1 110 1 192 1 260 1 207 1 364 1 104 1 352 1 106 1 283 1 
61 1 273 1 62 2 131 1 110 1 231 2 90 2 258 1 323 1 347 1 279 2 238 1 156 1 351 1 352 1 305 1 281 1 6 6 71 2 308 3 243 2 186 3 140 1 98 1 283 1 310 2 263 1 120 1 249 1 361 1 366 1 103 1 104 1 255 1 11 2 256 1 106 1 57 2 127 2 107 1 196 1 257 1 84 1 301 2 227 1 88 4 109 1 
131 2 1 1 274 2 207 1 327 1 2 1 135 2 237 1 116 1 352 1 185 1 48 1 244 2 283 1 285 2 284 3 262 1 330 1 263 1 52 1 363 1 53 2 33 1 318 1 12 1 270 1 87 3 89 1 
263 1 309 1 273 2 131 1 110 1 363 1 101 1 209 1 104 1 352 1 106 1 242 1 283 1 
263 4 13 1 273 1 131 1 207 1 153 1 134 1 104 1 238 1 352 4 4 1 106 1 283 4 
263 1 286 1 273 2 131 1 110 1 111 1 192 1 260 1 346 1 104 1 352 1 106 1 283 1 
263 1 273 1 104 1 93 1 352 1 311 1 345 1 207 1 283 1 372 1 
263 2 273 1 104 1 131 1 210 1 238 1 352 2 106 1 139 1 193 1 283 2 
263 4 273 2 131 3 207 1 153 1 208 1 134 1 104 2 238 1 352 5 4 1 106 2 226 1 139 1 283 5 321 1 
263 4 273 2 131 3 207 1 153 1 208 1 134 1 104 2 238 1 352 5 4 1 106 2 226 1 139 1 283 5 371 1 
263 1 273 1 62 1 131 1 120 1 110 1 258 1 362 1 207 1 104 1 11 2 352 1 106 1 127 2 84 1 98 1 283 1 227 1 
263 1 309 1 273 2 131 1 110 1 192 1 260 1 364 1 208 1 104 1 352 1 106 1 283 1 
62 1 115 1 360 1 76 1 17 1 
29 1 62 1 73 1 16 1 76 1 360 2 295 1 17 2 52 1 2 1 133 1 251 1 253 1 115 2 87 2 89 1 262 1 284 2 100 1 
74 1 258 1 360 1 76 1 17 1 275 1 3 1 11 1 127 1 
73 1 76 1 100 1 
161 1 202 1 148 1 129 1 
161 1 132 1 203 1 43 1 148 1 129 1 282 1 
132 1 23 1 79 1 
161 1 203 3 132 3 43 1 151 1 176 2 222 1 148 1 126 1 118 1 129 1 282 1 
161 1 278 1 132 2 203 2 43 1 148 1 77 1 129 1 282 1 
203 1 132 1 43 1 314 1 93 1 240 1 58 1 118 1 282 1 129 1 372 1 
132 1 203 1 43 1 148 1 118 1 129 1 282 1 
161 1 132 1 203 1 43 1 148 2 118 1 282 1 
203 2 132 2 290 1 43 2 44 1 148 1 118 1 129 1 282 2 331 1 
161 1 203 3 132 3 43 1 277 1 155 1 278 2 148 1 240 1 118 1 282 1 129 2 59 1 
161 1 203 2 132 2 43 1 345 1 82 1 278 1 157 1 93 1 148 1 58 1 118 1 129 1 282 1 372 2 
161 1 60 1 203 4 132 4 43 2 77 1 277 1 278 2 148 1 240 1 118 1 282 2 129 2 
161 1 132 1 203 1 43 1 148 1 118 1 129 1 282 1 
161 2 203 4 132 4 43 1 176 1 222 1 277 1 105 1 278 2 148 2 240 1 126 1 282 1 129 3 
171 1 161 1 203 2 132 2 43 1 217 1 265 1 278 1 148 1 118 1 129 1 282 1 
161 1 287 1 203 3 132 3 43 1 176 2 222 2 148 1 126 1 118 1 129 1 282 1 
129 2 326 2 221 1 72 1 
132 1 203 1 43 1 96 1 118 1 282 1 
161 1 278 1 132 2 203 2 43 1 148 1 118 1 129 1 282 1 59 1 
181 1 
161 1 132 1 203 1 43 1 148 1 118 1 129 1 282 1 
161 1 278 1 132 3 203 3 43 1 148 1 176 1 118 1 129 1 282 1 59 1 
277 1 105 1 240 1 129 1 
148 1 129 1 

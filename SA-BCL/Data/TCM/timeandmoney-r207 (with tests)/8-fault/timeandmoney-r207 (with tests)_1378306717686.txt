#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 74 (138,247) (138,247) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 74 (138,247) (138,247) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 74 (138,247) (138,247) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 74 (138,247) (138,247) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 339 188 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 339 188 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 94 114 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 94 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2585 | return null
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 4427 | = null
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V | CONSTANT | 6557 | 0 -> -1
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | CONSTANT | 1656 | 0 -> 1
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | RETURN | 5626 | return null
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | RETURN | 563 | return null
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 822 | = null
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
79 1 42 1 200 1 201 2 278 3 135 1 159 2 340 1 248 2 125 3 93 1 350 1 38 1 
96 1 200 1 201 1 278 1 344 1 132 1 74 1 159 1 168 1 138 1 247 1 125 1 93 1 
96 1 200 1 201 1 278 1 344 1 132 1 74 1 159 1 168 1 138 1 247 1 125 1 93 1 
96 1 200 1 201 1 278 1 344 1 132 1 74 1 159 1 168 1 138 1 247 1 125 1 93 1 
96 1 200 1 201 1 278 1 344 1 132 1 74 1 159 1 168 1 138 1 247 1 125 1 93 1 
79 1 302 1 96 1 187 2 42 1 5 1 200 1 201 1 344 1 278 4 135 2 74 1 159 1 339 1 248 3 350 1 125 4 38 3 
79 1 42 1 223 1 200 1 201 1 319 1 278 2 344 1 132 1 159 1 74 1 111 1 248 1 125 2 93 1 10 1 
188 1 200 1 201 2 278 4 135 1 159 2 339 1 204 1 340 1 248 1 125 4 93 1 350 1 143 1 38 2 
188 1 200 1 201 2 278 4 135 1 159 2 339 1 204 1 340 1 248 1 125 4 93 1 350 1 143 1 38 2 
105 1 316 1 78 1 251 1 1 1 328 1 333 1 164 1 99 1 129 1 293 1 25 1 124 1 311 1 
45 1 
45 1 190 1 251 1 75 1 162 1 289 1 25 2 293 2 
286 1 251 2 304 1 116 1 162 1 289 1 293 5 25 5 109 2 240 1 357 1 45 1 279 2 145 1 337 2 310 1 75 2 260 1 285 1 
45 1 308 1 289 1 
45 1 241 1 253 2 
105 2 78 2 1 2 164 2 99 2 311 1 129 2 234 1 
207 1 315 1 23 1 1 2 238 1 99 2 265 2 146 1 72 2 102 2 242 1 171 1 47 1 212 1 347 1 243 1 272 1 351 2 105 2 78 3 13 1 176 1 164 3 54 1 129 2 16 1 307 1 356 1 227 1 31 1 133 1 182 1 112 1 153 2 312 1 311 1 234 1 
105 1 78 1 316 1 1 1 328 1 164 1 124 1 99 1 311 1 129 1 
301 1 78 1 288 1 328 1 98 1 289 1 164 1 129 1 293 1 25 1 45 1 27 1 167 1 62 1 
105 1 301 1 78 1 1 1 328 1 289 1 164 1 99 1 129 1 25 2 293 2 45 1 27 1 167 1 62 1 
251 1 75 1 290 1 25 1 293 1 
45 1 158 1 251 1 75 1 162 1 289 1 25 2 293 2 
75 1 25 1 293 1 
105 1 78 2 327 1 1 1 164 2 69 1 99 1 129 2 234 2 
181 1 66 1 58 1 
78 1 207 1 315 1 343 1 13 1 164 1 356 1 72 1 102 1 347 1 112 1 243 1 153 1 312 1 272 1 234 1 
105 1 315 1 207 1 78 2 13 1 66 1 164 2 99 1 129 1 356 1 359 1 72 1 102 1 112 1 213 1 347 1 243 1 153 1 312 1 272 1 
308 1 234 1 
105 3 78 3 1 1 213 1 164 3 99 3 129 3 234 1 
105 1 78 1 328 1 164 1 124 1 99 1 129 1 
105 1 78 1 327 1 1 1 328 1 164 1 99 1 69 1 129 1 
315 1 207 1 23 1 1 2 238 1 69 1 99 3 265 1 293 1 25 1 27 1 146 1 72 1 102 1 171 1 47 1 212 1 213 1 347 1 243 1 272 1 351 2 105 3 301 1 127 1 78 4 13 1 328 1 164 4 129 3 307 1 356 1 227 1 31 1 359 1 258 1 182 1 167 1 112 1 153 1 312 1 311 1 234 1 62 1 
105 1 78 2 213 1 98 1 164 2 99 1 129 2 234 1 233 1 
105 3 301 1 78 3 1 1 328 1 164 3 69 1 99 3 129 3 25 1 293 1 45 1 27 1 359 1 258 1 167 1 213 2 57 1 62 1 
105 2 78 2 1 1 66 1 164 2 69 1 99 2 129 2 213 1 58 1 
78 1 207 1 315 1 13 1 164 1 356 1 72 1 102 1 347 1 112 1 243 1 153 1 312 1 272 1 234 1 
78 1 315 1 80 1 13 1 354 1 164 1 356 1 72 1 102 1 347 1 112 1 153 1 312 1 272 1 234 1 
23 1 238 1 66 2 169 1 317 1 265 4 100 1 146 1 47 1 346 1 298 1 244 1 351 2 329 1 276 1 306 1 54 2 307 2 227 1 181 2 182 1 283 1 36 1 58 2 
301 1 105 1 78 1 328 1 65 1 164 1 99 1 129 1 
105 4 324 1 78 5 1 1 98 1 164 5 99 4 69 1 129 5 359 1 213 2 50 1 233 1 234 1 
105 2 78 2 328 1 65 1 164 2 124 1 99 2 129 2 
83 1 141 1 120 1 
122 1 83 2 130 1 92 1 206 1 120 2 
83 1 120 1 
83 1 120 1 
122 1 130 1 
122 1 130 1 
122 1 130 1 
264 1 83 1 120 1 
264 1 83 1 120 1 
264 1 83 1 120 1 
83 1 108 1 120 1 
83 1 108 1 120 1 
83 1 108 1 120 1 
21 1 197 3 208 2 303 2 97 1 39 1 83 2 335 2 120 2 293 2 25 2 45 1 134 1 193 1 89 2 282 2 271 1 92 1 20 1 
262 1 237 1 208 1 39 1 99 2 291 1 120 1 25 1 293 1 211 1 105 2 104 1 78 2 197 1 303 1 277 1 83 1 164 2 129 2 18 1 89 1 282 1 141 1 234 1 
353 1 96 1 160 2 223 1 344 2 
96 1 74 1 344 1 
74 1 223 1 344 1 
353 1 96 2 160 1 139 1 223 1 344 3 
353 1 96 1 160 1 223 1 148 1 344 2 
22 1 286 3 209 2 64 1 289 1 317 1 25 5 293 5 241 1 45 2 145 2 46 2 192 1 48 1 75 1 196 1 104 1 251 4 81 2 276 1 162 1 277 1 253 3 109 1 279 1 178 1 337 1 18 1 137 1 310 1 283 1 36 1 
22 3 286 8 209 6 64 2 289 1 290 5 317 3 25 9 293 9 241 3 45 5 145 6 75 6 246 1 251 7 81 6 276 3 277 4 332 5 162 1 165 1 253 9 109 2 279 2 336 1 178 2 256 1 337 2 137 1 310 1 283 3 360 1 34 1 36 3 285 1 
22 1 286 3 64 1 209 2 289 1 317 1 25 3 293 3 45 3 241 2 145 2 46 1 48 1 196 1 251 2 81 2 276 1 277 1 253 4 109 1 279 1 178 1 337 1 283 1 36 1 285 1 
22 2 286 5 209 4 64 1 289 1 317 2 25 4 293 4 45 4 241 3 145 4 46 2 48 1 196 1 246 1 251 3 81 4 276 2 277 2 165 1 253 7 109 1 279 1 178 1 337 1 283 2 34 1 36 2 285 1 
323 1 
308 1 312 1 88 1 
172 1 312 1 
312 1 356 1 
217 1 13 1 312 3 88 2 356 1 44 1 
13 1 312 1 356 1 
312 1 113 1 
326 1 252 1 3 1 84 2 54 4 307 3 100 3 265 7 191 1 157 1 321 1 7 1 281 1 283 1 269 1 36 1 173 1 244 2 
22 3 238 1 3 2 317 3 318 1 265 31 100 10 191 2 321 1 71 4 157 5 7 1 146 1 47 1 295 1 28 1 214 3 173 2 244 5 351 2 326 1 174 1 252 2 276 3 331 1 84 3 54 16 307 15 182 1 281 1 283 4 35 1 36 4 184 1 
238 2 3 1 265 9 100 4 294 1 191 1 157 1 321 1 146 2 7 1 47 2 28 1 173 1 244 3 351 4 252 1 84 2 54 5 307 4 131 1 182 2 281 1 283 1 36 1 
326 1 252 1 3 1 84 2 54 4 307 3 100 3 265 7 191 1 157 1 321 1 7 1 281 1 283 1 36 1 173 1 244 2 
326 1 252 1 3 1 84 2 54 4 307 3 100 3 265 7 191 1 157 1 321 1 7 1 281 1 283 1 36 1 173 1 244 2 
315 1 68 1 26 2 102 1 72 1 268 2 159 1 347 1 273 1 125 1 177 2 201 1 278 1 356 1 230 1 309 1 112 1 153 1 312 1 261 1 93 2 59 1 362 1 
315 1 96 1 344 2 26 1 322 1 102 1 72 1 147 1 268 1 121 1 74 1 159 1 76 1 300 1 125 1 12 1 177 1 223 1 201 1 200 1 278 1 110 1 112 1 153 1 139 1 93 1 
315 1 96 1 42 1 344 2 26 1 322 1 102 1 72 1 147 1 268 1 121 1 74 1 159 1 76 1 248 1 300 1 125 2 79 1 177 1 223 1 201 1 200 1 278 2 254 1 110 1 112 1 153 1 139 1 93 1 38 1 
315 1 96 1 42 1 344 2 26 1 102 1 72 1 147 1 268 1 121 1 74 1 159 1 76 1 248 1 300 1 125 3 12 1 79 1 177 1 223 1 201 1 278 3 110 1 112 1 153 1 205 1 139 1 261 1 93 1 38 2 
315 1 96 1 42 1 344 2 26 1 102 1 72 1 268 1 74 1 76 1 248 1 300 1 125 2 12 1 79 1 177 1 223 1 278 2 110 1 112 1 153 1 205 1 139 1 93 1 38 2 
117 1 
315 1 286 1 288 1 64 1 210 1 98 1 154 1 67 1 25 3 293 3 27 1 145 1 102 2 72 2 347 2 75 2 8 1 273 1 301 1 78 1 53 1 328 1 162 1 355 1 164 1 129 1 356 1 109 1 279 1 32 1 337 1 167 1 112 1 310 1 153 2 312 1 142 2 62 1 144 1 362 1 
301 1 78 1 328 1 288 1 210 1 154 1 98 1 164 1 129 1 293 2 25 2 27 1 32 1 167 1 8 1 142 2 144 1 62 1 
301 1 78 1 328 1 288 1 210 1 154 1 98 1 164 1 129 1 293 2 25 2 27 1 32 1 167 1 8 1 142 2 144 1 62 1 
301 1 78 1 328 1 288 1 210 1 154 1 98 1 164 1 129 1 293 2 25 2 27 1 32 1 167 1 8 1 142 2 144 1 62 1 
301 1 78 1 328 1 288 1 162 1 210 1 154 1 98 1 164 1 129 1 293 3 25 3 27 1 190 1 32 1 167 1 75 1 8 1 142 2 62 1 144 1 
286 1 288 1 210 1 154 1 98 1 25 2 293 2 27 1 145 1 8 1 301 1 78 1 30 1 328 1 164 1 129 1 109 1 279 1 32 1 337 1 167 1 310 1 142 2 144 1 62 1 
301 1 78 1 328 1 288 1 210 1 154 1 98 1 164 1 129 1 293 2 25 2 27 1 32 1 167 1 8 1 142 2 144 1 62 1 
301 1 78 1 328 1 288 1 210 1 154 1 98 1 164 1 129 1 293 2 25 2 27 1 32 1 167 1 8 1 142 2 144 1 62 1 
301 1 78 1 328 1 288 1 210 1 154 1 98 1 164 1 129 1 293 2 25 2 27 1 32 1 167 1 8 1 142 2 144 1 62 1 
301 1 78 1 328 1 288 1 210 1 154 1 98 1 164 1 129 1 293 2 25 2 27 1 32 1 167 1 8 1 142 2 144 1 62 1 
301 1 78 1 328 1 288 1 210 1 154 1 98 1 164 1 129 1 293 2 25 2 27 1 32 1 167 1 8 1 142 2 144 1 62 1 
286 1 288 1 210 1 154 1 98 1 25 2 293 2 27 1 145 1 8 1 301 1 78 1 328 1 330 1 164 1 129 1 109 1 279 1 32 1 337 1 167 1 310 1 142 2 144 1 62 1 
315 2 23 2 238 2 99 1 70 1 265 2 146 2 345 1 102 8 72 8 47 2 242 1 171 1 346 1 213 1 347 2 273 1 105 1 351 4 12 1 78 1 221 1 85 1 164 1 129 1 54 1 307 1 356 2 254 1 227 2 133 2 280 1 182 2 17 1 259 1 112 2 153 7 312 3 362 1 
22 1 23 1 1 1 66 1 238 1 69 1 99 1 317 1 100 1 265 3 146 1 47 1 77 1 244 1 105 1 351 2 78 1 276 1 164 1 129 1 54 1 307 2 227 1 181 1 182 1 203 1 283 1 36 1 58 1 
23 1 66 1 238 1 100 2 265 6 191 1 321 1 7 1 146 1 47 1 346 1 244 2 351 2 252 1 84 1 54 3 307 3 308 1 227 1 181 1 182 1 281 1 283 1 36 1 58 1 234 2 
22 2 23 1 238 1 66 8 317 1 100 2 265 10 266 1 157 1 71 2 146 1 47 1 214 2 77 1 244 1 351 2 276 2 86 1 54 6 307 4 55 1 227 1 181 8 182 1 33 1 283 2 35 1 36 1 58 3 
315 1 207 1 343 1 23 1 287 1 238 1 99 1 265 2 320 1 146 1 102 1 72 1 47 1 171 1 242 1 347 1 213 1 243 1 270 1 77 1 272 1 105 1 351 2 78 2 13 1 164 2 129 1 54 1 307 1 356 1 227 1 359 1 182 1 112 1 153 1 312 1 234 1 58 1 
207 2 315 2 99 1 317 2 265 20 100 8 321 1 7 1 146 3 102 3 171 1 47 3 212 2 213 1 103 2 272 2 149 2 105 1 12 1 218 1 13 2 276 2 54 10 227 3 228 2 181 7 182 3 281 1 112 2 283 3 153 3 234 2 58 7 22 2 23 3 238 3 66 7 191 1 157 4 72 3 242 1 347 1 243 2 297 1 77 1 244 4 351 6 78 3 252 1 84 1 164 3 129 1 307 10 356 2 359 1 36 3 90 2 312 2 37 1 
351 2 23 1 276 1 66 1 238 1 54 2 100 1 265 2 227 1 157 1 146 1 181 1 182 1 47 1 346 1 283 1 298 1 58 1 
351 2 23 1 329 1 66 1 238 1 317 1 100 1 265 2 307 2 227 1 146 1 181 1 182 1 47 1 346 1 36 1 244 1 58 1 
22 1 23 1 238 1 66 2 317 1 265 4 100 2 157 1 146 1 47 1 346 1 244 1 351 2 276 1 54 2 307 2 227 1 181 2 182 1 283 1 36 1 58 2 
351 2 23 1 276 1 66 1 238 1 54 2 100 1 265 2 227 1 157 1 146 1 181 1 17 1 182 1 47 1 283 1 298 1 58 1 
351 2 23 1 329 1 66 1 238 1 317 1 100 1 265 2 307 2 227 1 146 1 181 1 17 1 182 1 47 1 36 1 244 1 58 1 
22 1 23 1 238 1 66 2 317 1 265 4 100 2 157 1 146 1 47 1 244 1 351 2 276 1 54 2 307 2 227 1 181 2 182 1 17 1 283 1 36 1 58 2 
22 1 23 1 238 1 66 2 317 1 265 4 100 2 157 1 146 1 47 1 244 1 351 2 276 1 54 2 307 2 227 1 181 2 182 1 283 1 36 1 58 2 
315 1 207 1 23 1 238 1 265 2 146 1 102 1 72 1 242 1 47 1 171 1 212 1 347 1 243 1 272 1 351 2 78 1 13 1 164 1 54 1 307 1 356 1 227 1 182 1 112 1 153 1 312 1 234 1 
315 1 342 1 23 1 238 1 265 2 146 1 102 1 72 1 242 1 47 1 171 1 347 1 272 1 351 2 78 1 80 1 13 1 354 1 164 1 54 1 307 1 356 1 227 1 182 1 112 1 153 1 312 1 234 1 
22 1 23 1 238 1 66 2 317 1 265 4 100 2 157 1 146 1 47 1 77 1 244 1 351 2 276 1 54 2 307 2 227 1 181 2 182 1 283 1 36 1 58 2 
22 1 315 1 207 1 23 1 66 2 238 1 317 1 100 2 265 4 157 1 146 1 102 1 72 1 47 1 212 1 243 1 244 1 272 1 351 2 78 1 13 1 276 1 164 1 54 2 307 2 356 1 254 1 227 1 181 2 182 1 112 1 283 1 153 1 36 1 90 1 312 1 58 2 
22 1 23 1 1 1 238 1 66 1 69 1 99 1 317 1 100 1 265 3 157 1 146 1 47 1 77 1 105 1 351 2 78 1 276 1 164 1 129 1 54 2 307 1 227 1 202 1 181 1 182 1 283 1 36 1 58 1 
22 3 95 1 238 2 317 3 318 1 265 19 100 6 294 1 71 2 157 3 146 2 47 2 214 1 244 3 215 1 351 4 14 1 276 3 305 2 107 2 54 9 307 10 179 1 180 1 182 2 152 1 283 3 35 1 140 1 36 3 
22 3 95 2 238 3 4 1 317 2 100 4 265 26 318 2 294 1 157 2 71 2 146 3 28 2 47 3 214 2 123 1 244 2 249 1 215 2 351 6 352 1 276 3 82 1 305 4 107 1 54 14 307 12 180 1 182 3 152 1 56 1 283 3 36 2 140 1 
95 1 4 1 317 4 100 8 265 41 318 3 321 1 146 3 7 1 47 3 214 3 215 2 51 1 14 1 276 4 107 1 54 20 180 1 182 3 152 1 281 1 283 5 56 1 22 4 238 3 294 1 191 1 157 4 71 4 28 1 123 1 244 4 249 1 351 6 352 1 252 1 82 1 305 4 84 1 307 21 35 1 36 5 140 1 
22 4 95 1 238 4 4 1 317 3 318 3 265 38 100 7 294 1 191 1 321 1 71 4 157 3 7 1 146 4 28 2 47 4 123 1 214 3 244 4 51 1 249 1 215 2 351 8 352 1 14 1 252 1 276 4 82 1 84 1 305 4 107 1 54 20 307 18 180 1 182 4 281 1 152 1 56 1 283 5 35 1 140 1 36 4 
22 7 95 1 238 2 4 1 317 7 318 2 265 52 100 14 294 1 191 1 321 1 71 4 157 7 7 1 146 2 28 1 47 2 123 1 214 4 244 7 249 1 215 1 351 4 352 1 252 1 276 7 82 1 84 1 305 4 107 1 54 27 307 25 180 1 182 2 281 1 152 1 33 2 56 1 283 8 35 2 140 1 36 8 
193 1 208 1 89 1 303 1 97 1 106 1 282 1 83 1 92 1 120 1 
141 1 291 1 
0 1 151 1 208 1 194 1 89 1 303 1 282 1 83 1 120 1 
21 1 197 2 208 1 303 1 97 1 39 1 83 1 335 1 293 1 25 1 120 1 45 1 193 1 89 1 282 1 271 1 92 1 20 1 
21 1 197 2 208 1 303 1 97 1 39 1 83 1 335 1 293 1 25 1 120 1 45 1 193 1 89 1 282 1 271 1 92 1 20 1 
21 1 197 2 208 1 303 1 97 1 39 1 83 1 335 1 293 1 25 1 120 1 45 1 193 1 89 1 282 1 271 1 92 1 20 1 
264 1 292 1 206 1 
264 1 292 1 206 1 
198 1 108 1 
198 1 206 1 108 1 
211 1 237 1 
262 1 237 1 208 1 99 2 291 1 156 1 25 1 293 1 120 1 211 1 104 1 105 2 78 2 197 1 251 1 303 1 277 1 83 1 164 2 335 1 129 2 18 1 89 1 282 1 141 1 234 1 20 1 
264 1 292 1 
198 1 206 1 108 1 
315 1 23 1 2 1 238 1 6 1 101 1 265 2 24 1 146 1 102 2 72 2 47 1 242 1 171 1 77 1 351 2 78 2 221 1 85 1 164 2 129 2 54 1 307 1 356 1 227 1 133 2 182 1 112 1 153 2 312 1 231 1 
315 1 177 1 189 1 119 1 356 1 72 1 102 1 230 1 112 1 347 1 153 1 312 1 273 1 362 1 
12 1 315 1 96 1 177 1 163 1 223 1 189 1 155 1 344 2 72 1 102 1 147 1 110 1 74 1 112 1 153 1 139 1 300 1 
315 1 12 1 96 1 177 1 163 1 223 1 189 1 155 1 344 2 254 1 72 2 102 2 147 1 110 1 74 1 112 1 153 2 139 1 300 1 
12 1 315 1 96 1 177 1 223 1 155 1 344 2 72 1 102 1 147 1 110 1 74 1 112 1 153 1 139 1 300 1 9 1 
61 1 
286 1 116 1 289 1 109 1 279 1 45 1 145 1 337 1 310 1 260 1 
22 2 286 5 81 5 276 2 209 5 317 2 253 10 241 5 45 5 145 5 283 2 19 1 36 2 299 2 149 1 
45 1 75 1 162 1 289 1 25 1 293 1 
315 1 286 2 64 2 67 1 40 1 293 3 25 3 145 2 102 4 72 4 347 2 75 4 245 2 273 1 53 2 175 1 162 2 355 1 199 1 356 1 109 2 279 2 337 2 112 1 310 1 153 4 312 1 285 1 362 1 
45 1 308 1 145 1 286 1 116 1 289 1 260 1 
286 1 289 1 293 1 25 1 241 1 45 2 145 1 296 1 75 1 30 1 220 1 162 1 253 1 109 1 279 1 337 1 310 1 
94 1 315 1 114 1 109 1 279 1 337 1 72 1 102 1 112 1 310 1 347 1 153 1 
22 2 286 8 64 1 209 5 4 1 289 2 317 2 318 1 25 1 293 1 241 3 45 5 71 1 145 5 75 1 123 1 214 1 299 2 52 1 352 1 53 1 81 5 276 2 82 1 162 1 253 6 109 2 279 2 136 1 337 2 310 2 56 1 283 2 19 1 36 2 
316 1 286 2 1 1 99 1 25 1 293 1 191 1 145 2 124 1 299 2 105 1 78 1 128 1 328 1 252 1 333 1 164 1 225 1 129 1 109 1 279 1 337 1 281 1 310 1 283 2 19 1 36 1 311 1 
207 1 315 1 23 1 1 2 238 1 99 2 265 1 146 1 102 1 72 1 171 1 47 1 212 1 347 1 243 1 272 1 351 2 105 2 78 3 13 1 164 3 129 2 307 1 356 1 31 1 227 1 182 1 112 1 153 1 311 1 312 1 234 1 
286 1 53 1 81 2 209 2 64 1 84 1 289 2 253 4 109 1 241 2 279 1 45 4 145 2 337 1 310 1 
237 1 193 1 208 1 89 1 334 1 
73 1 208 1 89 1 
73 1 208 1 89 1 
73 1 208 1 89 1 
208 1 89 1 222 1 
208 1 89 1 222 1 
208 1 89 1 222 1 
208 1 89 1 
83 1 120 1 
351 2 252 2 238 1 225 1 54 5 100 5 265 10 307 5 294 1 191 2 157 2 146 1 182 1 47 1 281 1 283 2 36 2 244 3 
351 2 276 1 238 1 54 2 265 2 100 1 294 1 157 1 146 1 182 1 47 1 283 1 
351 2 22 1 276 1 238 1 317 1 54 2 307 2 100 2 265 4 294 1 157 1 146 1 182 1 47 1 283 1 36 1 244 1 
351 6 14 1 252 1 238 3 54 1 307 2 265 3 100 2 294 1 191 1 157 1 146 3 182 3 28 1 47 3 244 1 341 1 
22 3 238 5 317 3 318 1 265 34 100 12 294 1 191 3 321 1 71 4 157 5 7 1 146 5 28 2 47 5 214 3 244 7 351 10 174 1 274 1 252 3 14 1 276 3 331 1 84 1 54 16 307 18 182 5 281 2 283 5 35 1 184 1 36 5 341 1 
238 1 265 8 318 1 100 2 294 1 191 1 71 1 321 1 146 1 7 1 47 1 214 1 123 1 244 2 351 2 252 1 84 1 54 4 307 4 182 1 281 1 283 1 36 1 
22 1 238 2 265 11 318 1 100 3 294 1 191 1 321 1 71 2 157 1 7 1 146 2 47 2 123 1 214 1 244 2 351 4 274 1 252 1 276 1 84 1 54 6 307 5 182 2 281 1 283 2 35 1 36 1 
22 2 238 3 4 1 317 2 265 19 318 1 100 4 294 1 191 1 321 1 157 1 71 1 7 1 146 3 47 3 28 1 214 1 123 1 244 3 351 6 352 1 274 1 252 1 276 2 82 1 84 1 54 9 307 10 182 3 281 1 56 1 283 3 36 3 
22 2 238 3 4 1 317 1 265 17 318 1 100 5 294 1 191 1 321 1 157 2 71 1 7 1 146 3 28 1 47 3 214 1 123 1 244 3 351 6 352 1 274 1 252 1 276 2 82 1 84 1 54 10 307 7 182 3 281 1 283 3 56 1 36 2 
238 1 265 8 318 1 100 2 294 1 191 1 71 1 321 1 146 1 7 1 47 1 214 1 123 1 244 2 351 2 252 1 84 1 54 4 307 4 182 1 281 1 283 1 36 1 
22 2 238 1 4 1 317 2 265 12 318 1 100 2 294 1 157 1 71 1 146 1 47 1 214 1 123 1 244 1 351 2 352 1 276 2 82 1 54 6 307 6 182 1 283 2 56 1 36 2 
22 2 238 4 4 1 317 1 265 18 318 1 100 5 294 1 191 1 321 1 157 2 71 1 7 1 146 4 47 4 28 2 123 1 214 1 244 3 351 8 352 1 274 1 252 1 276 2 82 1 84 1 54 10 307 8 182 4 281 1 56 1 283 3 36 2 
22 3 238 4 4 1 317 2 265 16 318 1 100 6 294 1 157 3 71 1 146 4 47 4 28 2 123 1 214 1 244 3 351 8 352 1 14 1 276 3 82 1 54 9 307 7 182 4 56 1 283 3 36 2 
252 3 54 3 307 4 265 7 100 6 191 3 321 2 157 3 7 1 281 1 283 1 36 1 244 3 
22 2 238 4 4 1 317 1 265 18 318 1 100 4 294 1 191 1 321 1 157 1 71 1 7 1 146 4 47 4 28 2 123 1 214 1 244 3 351 8 352 1 252 1 14 1 276 2 82 1 84 1 54 10 307 8 182 4 281 1 56 1 283 3 36 2 
351 4 252 1 238 2 84 1 54 4 307 4 265 8 100 3 191 1 157 1 321 1 146 2 7 1 182 2 281 1 47 2 28 1 283 1 36 1 244 2 
252 1 84 1 54 3 307 3 100 2 265 6 308 1 191 1 321 1 7 1 281 1 283 1 36 1 244 2 
351 2 22 1 274 1 276 1 238 1 317 1 54 2 307 2 100 2 265 4 157 1 146 1 182 1 47 1 283 1 36 1 244 1 
22 1 276 1 317 1 54 3 318 1 307 4 265 7 100 2 71 2 157 1 214 1 283 1 35 1 36 1 244 1 
22 2 238 2 317 2 100 9 265 23 191 2 266 1 321 1 157 4 71 2 7 1 146 2 28 2 47 2 214 2 244 5 351 4 252 2 276 2 84 1 54 11 307 12 182 2 281 1 33 1 283 3 35 1 36 3 341 1 
71 1 265 1 307 1 
214 1 54 1 265 1 
351 2 22 1 274 1 276 1 238 1 54 3 317 1 307 3 265 6 100 3 157 1 146 1 182 1 47 1 283 1 36 1 244 2 149 1 
22 2 238 1 4 1 317 2 265 12 318 1 100 2 294 1 157 1 71 1 146 1 47 1 214 1 123 1 244 1 351 2 352 1 276 2 82 1 54 6 307 6 182 1 283 2 56 1 36 2 
252 1 54 3 265 6 307 3 100 2 191 1 157 1 281 1 283 1 36 1 244 1 
351 2 252 1 238 1 54 1 100 2 307 2 265 3 191 1 157 1 321 1 146 1 7 1 182 1 28 1 47 1 244 1 341 1 
78 1 115 1 98 1 164 1 129 1 234 1 233 1 
325 1 185 1 78 1 115 1 118 1 98 1 164 1 239 1 224 1 129 1 234 1 233 1 
315 1 186 1 43 1 356 1 254 1 72 4 102 4 112 1 347 1 153 4 312 1 273 1 362 1 
315 1 218 1 275 1 13 1 356 1 72 2 102 2 49 1 112 2 153 2 312 1 245 1 29 1 161 1 
315 1 110 1 102 1 72 1 74 1 112 1 347 1 153 1 223 1 344 1 
254 1 315 1 12 1 102 2 72 2 2 1 112 1 85 1 153 2 312 1 356 1 
315 2 186 1 85 1 356 2 254 1 345 1 72 5 102 5 347 1 259 1 112 2 153 4 312 3 245 1 273 1 362 1 
315 2 186 1 85 1 356 2 254 1 345 1 72 5 102 5 170 1 347 1 112 2 153 4 312 3 245 1 273 1 362 1 
308 1 315 1 102 1 72 1 112 1 347 1 153 1 312 1 273 1 356 1 362 1 
105 1 78 2 207 1 315 1 13 1 164 2 99 1 129 1 356 1 72 1 102 1 112 1 213 1 347 1 153 1 312 1 272 1 234 1 
301 1 105 1 78 2 207 1 315 1 328 1 13 2 164 2 99 2 129 2 356 2 72 1 102 1 167 1 112 1 213 1 153 1 312 3 245 1 272 1 234 1 113 1 126 1 
301 1 105 1 78 2 315 1 80 1 328 1 13 2 164 2 99 2 129 2 43 1 356 2 72 2 102 2 167 1 112 1 213 1 153 2 312 3 245 1 272 1 234 1 113 1 126 1 
315 1 63 1 13 1 289 1 43 1 356 1 293 2 25 2 88 1 45 1 27 1 72 3 102 3 166 1 347 1 112 1 75 1 172 1 153 3 312 4 245 1 113 1 126 1 
315 1 13 1 289 1 43 1 356 1 293 2 25 2 88 1 45 1 27 1 72 3 102 3 347 1 112 1 75 1 172 1 153 3 312 4 245 1 361 1 113 1 126 1 
315 1 102 1 72 1 280 1 112 1 153 1 
12 1 315 2 13 1 85 1 70 1 356 2 44 1 254 1 133 1 345 1 257 1 280 1 72 7 102 7 259 1 347 2 112 3 153 6 312 3 29 1 161 1 
207 1 315 1 99 1 6 1 100 2 265 6 321 1 146 2 7 1 102 1 47 2 212 1 213 1 272 1 105 1 13 1 54 3 227 2 228 1 181 1 182 2 281 1 112 1 283 1 153 1 58 1 234 2 23 2 238 2 66 1 191 1 72 1 243 1 77 1 244 2 351 4 78 2 252 1 84 1 164 2 129 1 307 3 356 1 254 1 90 1 312 1 36 1 
286 1 116 1 289 1 40 1 25 3 293 3 45 1 27 1 145 1 72 1 102 1 347 1 75 2 172 1 250 1 251 1 162 1 88 1 109 2 279 2 337 2 310 2 260 1 153 1 313 1 312 2 361 1 236 1 
94 1 315 1 102 1 72 1 280 1 112 1 153 1 
105 1 78 2 315 1 80 1 13 1 164 2 99 1 129 1 356 1 72 1 102 1 112 1 213 1 347 1 153 1 312 1 272 1 234 1 
315 1 13 1 356 1 44 1 257 1 72 1 102 1 112 2 153 1 312 1 245 1 29 1 161 1 
78 1 164 1 129 1 101 1 24 1 255 1 338 1 231 1 60 1 
338 1 349 1 284 1 
255 1 338 1 226 1 234 1 60 1 
301 1 263 1 251 1 328 1 289 1 226 2 293 2 25 2 45 1 27 1 255 2 258 1 167 1 338 1 349 1 234 1 284 1 60 2 62 1 
79 1 159 1 42 1 201 1 200 1 248 1 278 1 125 1 
79 2 42 2 201 1 319 1 278 4 135 1 159 1 348 1 91 1 232 1 248 3 125 4 350 1 38 2 
267 1 79 1 159 1 204 1 42 1 201 1 200 1 248 1 278 2 125 2 38 1 235 1 
79 1 42 1 200 1 201 1 278 3 319 2 159 1 348 2 195 1 91 1 248 1 125 3 
314 2 11 1 41 1 248 2 
219 1 159 1 201 1 200 1 278 1 125 1 
216 1 79 1 159 1 42 1 201 1 200 1 248 1 278 2 125 2 38 1 
87 1 
79 1 159 1 42 1 201 1 200 1 248 1 278 1 125 1 
308 1 79 1 42 1 248 1 
79 1 159 1 42 1 201 1 248 1 278 1 125 1 
26 1 93 1 278 1 
79 1 183 1 159 1 348 1 42 1 91 1 201 1 200 1 248 1 319 2 278 3 125 3 
79 1 159 1 187 1 42 1 201 1 248 1 278 2 125 2 38 1 
135 1 96 1 74 1 159 1 5 1 201 1 200 1 248 1 344 1 278 1 125 1 
79 1 159 1 201 1 200 1 248 1 278 1 125 1 
79 2 159 1 42 1 201 1 200 1 278 1 125 1 
79 1 150 1 200 1 201 2 278 2 358 1 229 1 159 2 248 1 125 2 
79 1 42 1 200 1 201 1 278 1 159 1 232 1 125 1 143 1 
79 1 96 1 15 1 42 1 223 1 200 1 201 1 344 2 278 2 159 1 74 1 139 1 248 1 125 2 38 1 
79 1 135 1 302 1 159 2 187 1 42 1 201 2 200 1 248 2 350 1 278 4 125 4 38 2 
216 1 79 1 159 1 42 1 201 1 200 1 248 1 319 1 278 3 125 3 38 1 
135 1 232 1 248 1 350 1 
79 1 248 1 

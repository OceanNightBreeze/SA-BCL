#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 232 309 214 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> 1
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | STATEMENT | 997 | stmt -> ;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2985 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> ==
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7581 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3669 | - -> >>
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10137 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3533 | stmt -> ;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
181 2 234 2 254 6 0 1 100 1 303 1 208 1 52 1 103 1 288 2 358 1 55 9 267 1 87 1 91 1 362 4 197 1 219 1 41 2 317 1 370 2 200 3 343 5 226 1 376 2 22 1 25 9 324 2 
181 2 234 2 254 6 0 1 100 1 303 1 208 1 52 1 103 1 288 2 358 1 55 9 267 1 87 1 91 1 362 4 197 1 219 1 41 2 317 1 370 2 200 3 343 5 226 1 376 2 22 1 25 9 324 2 
181 2 234 2 254 7 0 1 100 1 303 1 208 1 52 1 103 1 288 2 358 1 55 10 267 1 87 1 91 1 362 5 197 1 219 1 41 2 317 1 370 2 200 4 343 6 226 1 376 2 22 1 25 10 324 2 
181 1 234 2 254 4 0 1 100 1 303 1 52 1 103 1 288 2 358 1 55 7 267 1 87 1 91 1 362 3 197 1 219 1 41 2 317 1 370 2 200 2 343 4 226 1 376 2 22 1 25 7 324 2 
181 2 234 1 254 3 362 2 197 1 208 1 103 1 41 1 317 1 288 1 370 1 200 1 226 1 343 3 55 4 22 1 25 4 324 1 
234 1 197 1 100 1 173 1 103 1 65 1 8 1 370 1 288 1 343 1 358 1 55 2 376 1 22 1 25 2 324 1 
254 1 362 1 197 1 103 1 370 2 200 1 343 2 55 3 267 1 376 1 22 1 25 3 324 2 
181 2 254 7 0 1 234 1 208 1 103 1 306 1 288 1 83 1 267 1 55 9 91 1 362 4 197 1 41 1 317 1 370 2 200 3 343 5 226 1 376 1 22 1 25 9 324 2 
181 2 254 7 0 1 234 1 208 1 103 1 306 1 288 1 83 1 267 1 55 9 91 1 362 4 197 1 41 1 317 1 370 2 200 3 343 5 226 1 376 1 22 1 25 9 324 2 
256 1 307 1 272 1 
307 1 320 2 368 1 
257 2 44 2 18 2 345 1 20 2 341 2 237 2 110 1 
257 3 158 2 28 1 237 2 6 1 354 1 357 1 140 1 33 1 215 1 291 1 143 2 293 1 58 1 195 1 310 1 110 1 59 1 338 1 243 1 340 1 93 2 341 2 222 1 223 1 248 1 369 1 44 2 276 1 18 2 67 1 345 1 20 3 97 1 377 2 23 2 179 1 
275 1 257 1 44 1 18 1 345 1 35 1 20 1 341 1 300 1 237 1 
257 1 297 1 174 1 272 1 78 1 190 1 10 1 275 1 18 1 307 1 19 1 178 1 20 1 322 1 
257 1 341 1 297 1 174 1 272 1 237 1 78 1 10 2 190 2 44 1 275 1 18 1 307 1 20 1 322 1 
332 1 182 1 201 1 10 1 190 1 
255 1 307 1 332 1 77 1 201 1 272 1 10 2 190 2 
332 1 10 1 190 1 
257 1 327 1 341 1 237 1 190 1 10 1 275 1 44 1 18 1 35 1 345 1 20 1 201 1 300 1 
307 1 
255 1 307 1 332 1 201 1 112 1 272 1 10 2 190 2 
255 1 16 1 1 1 304 1 62 2 199 1 272 1 190 5 10 5 163 1 165 1 80 2 307 1 119 1 167 1 332 2 201 2 72 1 290 2 
257 2 28 1 340 1 93 1 223 1 354 1 237 1 150 1 44 1 276 1 18 1 20 2 227 1 97 1 377 1 23 1 58 1 310 1 179 1 240 1 
256 1 110 1 
257 2 341 1 96 1 237 1 238 1 44 1 18 2 20 2 110 2 
371 1 227 1 170 1 
257 1 259 1 340 1 28 1 93 1 223 1 354 1 276 1 20 1 97 1 377 1 23 1 58 1 310 1 110 1 179 1 
257 5 341 1 210 1 237 4 238 1 150 2 42 1 44 4 18 5 53 1 19 1 20 5 110 1 240 1 
275 1 257 2 44 2 18 2 61 1 20 2 300 1 237 2 
257 3 44 3 18 3 20 3 341 1 237 3 110 1 150 1 
275 1 257 1 44 1 18 1 20 1 300 1 237 1 
275 1 257 1 44 1 18 1 20 1 341 1 96 1 237 1 238 1 
257 4 158 2 28 1 354 1 237 3 238 1 78 1 190 1 10 1 140 1 33 1 169 1 215 1 291 1 143 1 293 1 58 1 195 1 310 1 110 1 240 1 59 1 243 1 340 1 93 1 341 2 223 1 248 1 297 1 174 1 369 1 150 1 44 3 275 1 276 1 18 3 345 1 20 4 375 1 97 1 377 1 23 1 322 1 179 1 
257 2 44 1 18 2 19 1 20 2 210 1 237 1 110 1 150 1 
15 1 257 3 341 1 297 1 174 1 237 3 238 1 78 1 150 2 10 1 190 1 275 1 44 3 18 3 307 1 20 3 169 1 322 1 240 1 
257 2 341 1 237 2 238 1 150 1 371 1 44 2 18 2 20 2 227 1 
257 1 340 1 28 1 93 1 223 1 354 1 276 1 20 1 97 1 377 1 23 1 58 1 310 1 110 1 179 1 
313 1 349 1 257 1 340 1 28 1 93 1 223 1 276 1 20 1 97 1 377 1 23 1 310 1 110 1 179 1 
280 1 158 2 9 1 140 1 265 1 331 1 289 1 170 2 291 2 143 4 293 1 109 1 59 1 37 1 338 2 243 1 248 1 369 1 151 1 371 2 227 2 228 1 231 1 347 1 
275 1 257 1 44 1 18 1 61 1 20 1 174 1 237 1 
326 1 159 1 
326 1 159 1 
5 1 312 1 
5 1 312 1 
5 1 312 1 
326 1 159 1 316 1 
326 1 159 1 249 1 
326 2 334 1 159 2 202 1 5 1 312 1 
326 1 159 1 316 1 
326 1 159 1 316 1 
326 1 159 1 216 1 
326 1 159 1 216 1 
326 1 159 1 216 1 
325 1 48 1 257 2 326 1 159 1 135 1 367 1 94 1 95 1 237 2 249 1 190 1 10 1 166 1 44 2 18 2 239 1 344 1 20 2 203 1 57 1 24 1 110 1 196 1 
48 2 157 1 351 2 326 2 159 2 135 2 224 1 94 2 138 1 190 2 10 2 264 1 330 1 307 1 344 1 202 1 203 2 133 1 57 3 
288 1 234 1 41 1 
288 1 234 1 8 1 
234 3 60 1 113 1 41 2 211 1 8 1 
234 2 60 1 113 1 41 1 31 1 8 1 
234 2 113 1 60 2 41 1 8 1 
325 1 233 1 255 1 1 1 282 1 212 1 9 1 10 5 190 5 80 1 307 2 332 1 119 3 193 2 290 1 109 1 16 2 149 2 148 1 367 1 62 1 63 1 368 1 272 1 273 1 151 1 320 3 153 2 201 4 228 1 252 1 24 1 323 1 
233 3 255 1 1 1 182 5 282 3 163 1 9 3 10 9 190 9 164 1 80 2 266 1 307 5 332 6 119 8 193 6 290 2 109 3 14 5 145 1 16 6 149 6 148 2 62 2 368 3 272 1 151 3 66 1 320 9 201 7 321 1 228 3 252 1 24 4 323 2 301 1 
233 1 257 1 327 1 282 1 237 1 212 1 9 1 10 3 190 3 163 1 80 1 35 1 307 3 119 3 193 2 290 1 109 1 16 2 341 1 148 1 149 2 62 1 368 2 272 1 273 1 151 1 275 1 44 1 18 1 345 1 319 1 153 1 320 4 20 1 201 2 228 1 300 1 24 1 323 1 
233 2 327 1 282 2 237 1 190 4 10 4 9 2 193 4 290 1 109 2 145 1 16 4 148 1 149 4 341 1 62 1 151 2 66 1 18 1 153 2 345 1 20 1 201 3 300 1 24 2 301 1 257 1 212 1 163 1 80 1 307 4 35 1 119 5 368 3 272 1 273 1 275 1 44 1 320 7 319 1 228 2 323 1 
256 1 160 1 310 1 
310 1 26 1 
292 1 
276 1 310 1 179 1 
218 1 310 1 
310 1 179 1 
276 1 34 1 160 2 194 1 310 3 179 1 
37 3 338 4 92 1 3 2 284 1 104 1 151 1 265 2 11 1 81 1 177 1 47 1 86 1 291 3 228 1 143 7 122 1 
37 3 338 4 92 1 3 2 284 1 104 1 151 1 265 2 11 1 81 1 177 1 47 1 86 1 291 3 228 1 143 7 122 1 
37 3 338 4 92 1 3 2 284 1 104 1 151 1 265 2 11 1 81 1 177 1 47 1 86 1 291 3 228 1 143 7 89 1 122 1 
76 1 158 2 3 1 104 1 140 1 329 1 11 1 265 1 81 1 12 1 86 1 291 3 143 6 309 1 293 1 122 1 37 2 338 3 248 1 369 1 47 2 71 1 98 1 232 1 
158 4 3 2 104 1 284 1 140 2 11 1 265 3 86 1 291 4 143 9 293 2 122 1 37 4 338 5 92 1 248 2 369 2 151 1 299 1 342 1 177 1 47 1 71 1 228 1 
74 1 254 1 75 1 234 2 28 1 207 1 4 1 209 1 103 1 102 1 211 1 8 1 288 1 55 2 336 1 197 1 245 1 93 1 41 1 128 1 370 1 343 1 132 1 376 1 22 1 97 1 23 1 377 1 25 2 324 1 
74 1 75 1 254 2 234 2 28 1 207 1 184 1 4 1 209 1 103 1 211 1 8 1 288 1 55 3 268 1 336 1 197 1 93 1 41 1 128 1 370 1 343 1 129 1 132 1 376 1 97 1 23 1 377 1 25 3 324 1 
74 1 75 1 254 2 234 2 28 1 207 1 209 1 103 1 211 1 8 1 288 1 55 2 268 1 336 1 197 1 93 1 41 1 343 1 129 1 376 1 132 1 97 1 23 1 377 1 25 2 
75 2 28 1 184 1 261 1 142 1 55 1 90 1 310 1 336 2 314 1 363 1 340 1 93 1 370 1 132 2 376 2 155 1 97 1 23 1 377 1 25 1 179 1 324 1 
74 1 75 1 234 2 28 1 207 1 4 1 209 1 211 1 8 1 288 1 55 1 268 1 336 1 245 1 93 1 41 1 128 1 370 1 132 1 376 1 22 1 97 1 23 1 377 1 25 1 324 1 
235 1 
99 1 1 1 101 2 7 1 190 5 10 5 287 4 332 6 290 1 108 1 146 2 337 2 16 2 340 2 244 1 148 1 62 1 297 1 298 1 18 1 19 1 20 1 70 2 155 1 23 2 116 1 255 3 257 1 28 1 260 2 78 1 80 1 307 2 119 2 359 1 308 1 310 1 314 1 93 2 125 1 366 1 368 2 174 1 272 1 175 1 43 2 45 1 275 1 320 2 178 1 374 2 97 1 377 2 322 1 179 1 
255 1 257 1 7 1 78 1 10 3 190 3 287 2 332 2 359 1 108 1 146 1 366 1 112 1 297 1 174 1 298 1 275 1 18 1 19 1 20 1 178 1 322 1 
255 1 257 1 260 1 7 1 78 1 10 3 190 3 287 3 307 1 332 1 359 1 108 1 366 1 112 1 297 1 174 1 272 1 298 1 275 1 18 1 19 1 20 1 178 1 322 1 
255 1 257 1 260 1 7 1 78 1 10 3 190 3 287 3 307 1 332 2 359 1 108 1 146 1 366 1 112 1 297 1 174 1 272 1 298 1 275 1 18 1 19 1 20 1 178 1 374 1 322 1 
1 1 101 1 327 1 237 1 7 1 190 4 10 4 287 3 332 5 335 1 290 1 108 1 146 3 16 1 337 1 244 1 341 1 112 1 62 1 297 1 296 1 298 1 18 2 345 1 19 1 20 2 70 1 300 1 255 2 257 2 260 1 78 1 80 1 35 1 307 1 119 1 359 1 120 1 217 1 366 1 125 1 174 1 368 1 272 1 43 1 44 1 275 2 178 1 372 1 374 3 322 1 
1 1 101 2 7 1 190 4 10 4 287 4 332 4 290 1 108 1 146 2 16 1 337 2 244 1 62 1 297 1 298 1 18 1 19 1 20 1 70 2 255 2 257 1 260 2 78 1 80 1 307 2 119 1 359 1 308 1 366 1 125 1 174 1 368 2 272 1 43 2 275 1 320 2 178 1 374 2 322 1 
1 1 101 1 327 1 237 1 7 1 190 3 10 3 287 3 332 2 290 1 108 1 146 1 16 1 337 1 244 1 341 1 62 1 296 1 297 1 298 1 18 2 345 1 19 1 20 2 70 1 300 1 255 1 257 2 260 1 78 1 80 1 35 1 307 1 119 1 359 1 120 1 366 1 125 1 174 1 368 1 272 1 43 1 44 1 275 2 178 1 372 1 374 1 322 1 
1 1 101 1 327 1 237 1 7 1 190 3 10 3 287 3 332 2 290 1 108 1 146 1 16 1 337 1 244 1 341 1 62 1 296 1 297 1 298 1 18 2 345 1 19 1 20 2 70 1 300 1 255 1 257 2 260 1 78 1 80 1 35 1 307 1 119 1 359 1 120 1 366 1 125 1 174 1 368 1 272 1 43 1 44 1 275 2 178 1 372 1 374 1 322 1 
180 1 1 1 327 1 237 1 7 1 190 3 10 3 287 3 192 1 332 2 290 1 108 1 146 1 16 1 337 1 341 1 62 1 297 1 298 1 18 2 345 1 19 1 20 2 70 1 300 1 346 1 253 1 255 1 257 2 260 1 78 1 80 1 35 1 307 1 119 1 359 1 88 1 366 1 125 1 174 1 272 1 44 1 275 2 320 1 178 1 372 1 374 1 322 1 
1 1 101 1 327 1 237 1 7 1 190 3 10 3 287 4 332 3 290 1 108 1 146 2 16 1 337 1 244 1 341 1 62 1 296 1 297 1 298 1 18 2 345 1 19 1 20 2 70 1 300 1 255 1 257 2 260 2 78 1 80 1 35 1 307 1 119 1 359 1 120 1 217 1 366 1 125 1 174 1 368 1 272 1 43 1 44 1 275 2 178 1 372 1 374 2 322 1 
1 1 101 1 327 1 237 1 7 1 190 3 10 3 287 4 332 3 290 1 108 1 146 2 16 1 337 1 244 1 341 1 62 1 296 1 297 1 298 1 18 2 345 1 19 1 20 2 70 1 300 1 255 1 257 2 260 2 78 1 80 1 35 1 307 1 119 1 359 1 120 1 217 1 366 1 125 1 174 1 368 1 272 1 43 1 44 1 275 2 178 1 372 1 374 2 322 1 
180 2 1 1 7 1 190 4 10 4 287 4 192 2 332 4 290 1 108 1 146 2 16 1 337 2 62 1 297 1 298 1 18 1 19 1 20 1 70 2 253 1 255 2 257 1 260 2 78 1 80 1 307 1 119 1 359 1 308 1 366 1 125 1 174 1 272 1 275 1 320 2 178 1 374 2 322 1 
256 1 158 2 3 1 104 1 284 1 140 1 265 2 331 1 170 1 291 3 143 6 293 1 122 1 110 2 59 1 37 2 338 3 92 1 243 1 248 1 369 1 151 1 371 1 177 1 227 1 228 1 
302 1 76 2 158 4 282 2 356 1 9 1 140 2 265 1 170 6 107 1 291 5 143 12 293 2 195 1 109 2 110 1 59 2 37 1 338 7 243 1 248 2 369 2 151 1 17 1 176 1 275 1 371 2 67 1 130 1 227 6 131 1 228 2 232 2 
259 1 257 2 28 1 158 2 51 1 354 1 237 1 140 1 291 1 143 2 58 1 293 1 310 1 195 1 110 1 240 1 59 1 338 1 340 1 243 1 220 1 93 1 223 1 248 1 369 1 150 1 176 1 371 1 44 1 276 1 18 1 46 1 67 1 20 2 97 1 23 1 377 1 179 1 
3 1 236 2 282 2 237 1 284 1 104 1 188 2 9 2 140 3 191 1 291 10 143 20 293 3 58 2 195 1 109 2 110 2 240 1 59 3 147 1 338 10 340 1 243 3 198 1 248 3 150 1 151 3 18 1 67 1 20 3 23 3 257 3 158 6 28 2 354 2 265 4 84 2 215 2 170 7 86 4 310 2 268 1 122 1 37 8 92 1 39 2 93 3 223 2 369 3 176 1 44 1 371 7 276 2 177 1 227 7 97 2 228 3 377 3 179 2 
134 1 257 1 28 2 158 4 187 1 102 1 237 1 137 1 357 2 140 2 331 1 291 1 143 2 293 2 310 3 195 1 268 1 59 2 241 1 314 1 338 1 340 2 243 2 93 8 315 1 248 2 64 1 369 2 150 1 44 1 18 1 67 1 20 1 154 1 155 1 97 2 23 8 377 7 179 2 
257 1 27 1 158 2 282 1 237 1 238 1 9 1 140 1 265 1 170 1 291 2 143 3 293 1 109 1 59 1 37 1 338 1 243 1 341 1 248 1 369 1 151 1 176 1 371 1 44 1 18 1 20 1 227 1 228 1 
37 1 280 1 338 2 243 1 158 2 248 1 369 1 140 1 371 1 331 1 86 1 227 1 170 1 228 1 143 2 293 1 109 1 59 1 
37 1 243 1 158 2 248 1 369 1 9 1 151 1 140 1 265 1 371 1 331 1 289 1 227 1 170 1 291 2 143 2 293 1 59 1 
158 2 282 1 9 1 140 1 265 1 331 1 170 2 86 1 291 2 143 4 293 1 109 1 59 1 37 2 338 2 243 1 248 1 369 1 151 1 371 2 227 2 228 1 
37 1 280 1 338 2 243 1 158 2 248 1 369 1 137 1 140 1 371 1 86 1 227 1 170 1 228 1 143 2 293 1 109 1 59 1 
37 1 243 1 158 2 248 1 369 1 137 1 9 1 151 1 140 1 265 1 371 1 289 1 227 1 170 1 291 2 143 2 293 1 59 1 
158 2 282 1 137 1 9 1 140 1 265 1 170 2 86 1 291 2 143 4 293 1 109 1 59 1 37 2 338 2 243 1 248 1 369 1 151 1 371 2 227 2 228 1 
37 2 338 2 243 1 158 2 282 1 248 1 369 1 151 1 9 1 140 1 265 1 371 2 86 1 227 2 170 2 291 2 228 1 143 4 293 1 109 1 59 1 
257 1 28 1 158 2 354 1 140 1 215 1 291 1 143 2 58 1 293 1 310 1 195 1 110 1 59 1 338 1 340 1 243 1 93 1 223 1 248 1 369 1 276 1 67 1 20 1 97 1 23 1 377 1 179 1 
349 1 257 1 28 1 158 2 353 1 140 1 291 1 143 2 293 1 310 1 195 1 110 1 59 1 313 1 338 1 340 1 243 1 93 1 223 1 248 1 369 1 276 1 67 1 20 1 97 1 23 1 377 1 179 1 
158 2 282 1 9 1 140 1 265 1 170 2 86 1 291 2 143 4 293 1 109 1 59 1 37 2 338 2 243 1 248 1 369 1 151 1 176 1 371 2 227 2 228 1 
257 1 28 1 158 2 282 1 354 1 102 1 188 1 9 1 140 1 265 1 86 1 170 2 215 1 291 2 143 4 58 1 293 1 109 1 310 1 59 1 37 2 338 2 243 1 93 1 223 1 248 1 369 1 151 1 371 2 276 1 20 1 227 2 228 1 97 1 23 1 377 1 179 1 
257 1 158 2 282 1 186 1 237 1 238 1 9 1 140 1 86 1 170 1 291 1 143 3 293 1 109 1 59 1 37 1 338 2 243 1 341 1 248 1 369 1 151 1 176 1 44 1 371 1 18 1 20 1 227 1 228 1 
76 3 158 4 50 1 282 3 30 1 263 1 285 1 356 1 9 3 140 2 265 3 141 2 214 1 168 1 86 2 291 13 143 25 309 2 293 2 109 3 37 5 338 12 123 1 172 1 248 2 369 2 151 3 318 4 342 1 228 3 229 1 232 2 
258 1 158 6 76 2 50 2 282 3 30 2 285 1 9 2 140 3 265 2 141 1 214 1 86 2 291 12 143 26 293 3 309 2 109 3 37 4 338 14 123 1 172 1 126 1 248 3 369 3 151 2 318 4 342 1 225 1 278 1 71 2 228 3 229 1 232 2 
258 1 76 4 158 6 50 1 3 1 282 4 30 2 263 1 284 1 104 1 285 1 356 1 9 4 140 3 265 4 141 1 214 1 86 3 291 21 143 41 309 3 293 3 109 4 122 1 295 1 37 7 338 20 92 1 123 1 172 1 126 1 248 3 369 3 151 5 318 4 342 1 225 1 177 1 278 1 71 1 228 5 229 1 232 3 
258 1 76 6 158 8 50 1 3 1 282 6 30 2 263 1 284 1 104 1 285 1 356 3 9 5 140 4 265 6 141 1 214 1 86 2 291 24 143 48 309 3 293 4 109 6 122 1 295 1 37 8 338 24 92 1 123 1 172 1 126 1 248 4 369 4 151 6 318 4 342 1 225 1 177 1 278 1 71 2 228 7 229 1 232 3 
258 1 76 3 158 2 50 1 3 3 282 4 30 1 284 3 104 3 285 1 356 1 9 4 140 1 265 6 141 1 214 1 86 2 291 22 143 46 309 2 293 1 109 4 122 3 37 8 338 24 92 3 123 1 172 1 126 1 248 1 369 1 151 7 318 4 342 1 225 1 177 3 278 1 228 7 229 1 232 2 
48 1 157 1 326 1 159 1 135 1 202 1 224 1 203 1 94 1 185 1 
249 1 196 1 
48 1 350 1 326 1 159 1 135 1 203 1 94 1 115 1 294 1 
271 1 316 1 
334 1 360 1 216 1 
48 1 157 1 351 1 326 1 159 1 135 1 224 1 94 1 190 1 10 1 264 1 330 1 307 1 344 1 202 1 203 1 133 1 57 2 
48 1 157 1 351 1 326 1 159 1 135 1 224 1 94 1 190 1 10 1 264 1 330 1 307 1 344 1 202 1 203 1 133 1 57 2 
48 1 157 1 351 1 326 1 159 1 135 1 224 1 94 1 190 1 10 1 264 1 330 1 307 1 344 1 202 1 203 1 133 1 57 2 
334 1 271 1 316 1 
334 1 271 1 316 1 
360 1 216 1 
334 1 360 1 216 1 
239 1 95 1 
48 1 325 1 257 2 351 1 326 1 183 1 159 1 135 1 237 2 10 1 190 1 166 1 239 1 57 1 110 1 196 1 367 1 94 1 95 1 249 1 44 2 18 2 20 2 201 1 203 1 133 1 24 1 
257 2 28 1 158 2 206 1 305 1 355 1 357 2 140 1 106 1 291 1 143 2 293 1 310 1 195 1 59 1 241 1 338 1 243 1 93 2 315 1 248 1 369 1 127 1 176 1 18 2 67 1 20 2 97 1 23 2 377 2 179 1 
74 1 234 2 75 1 242 1 28 1 93 2 4 1 209 1 41 1 211 1 102 1 79 1 8 1 288 1 97 1 377 2 23 2 144 1 268 1 
74 1 234 2 75 1 28 1 93 1 352 1 4 1 209 1 41 1 211 1 8 1 288 1 97 1 377 1 23 1 144 1 268 1 
75 1 314 1 28 1 340 1 93 1 124 1 79 1 155 1 97 1 377 1 23 1 310 1 90 1 179 1 
74 1 234 2 75 1 242 1 28 1 93 1 4 1 209 1 41 1 211 1 79 1 8 1 288 1 97 1 377 1 23 1 144 1 268 1 
246 1 
256 1 16 1 307 1 119 1 304 1 72 1 272 1 
255 1 1 1 101 1 190 1 10 1 80 1 307 2 119 1 332 1 290 1 16 1 244 1 62 1 368 1 272 1 43 1 320 1 
233 2 1 2 2 1 282 1 283 1 136 1 190 2 10 2 9 1 333 1 332 2 193 3 290 2 194 1 109 1 111 1 16 3 340 1 148 1 149 3 62 2 151 1 251 1 23 1 26 2 255 1 28 2 160 1 162 1 80 2 84 1 307 3 119 4 310 4 93 1 368 3 276 1 320 6 97 1 228 1 377 1 322 1 179 1 
16 1 1 1 76 1 149 1 62 1 368 1 80 1 307 1 320 2 214 1 119 1 193 1 290 1 309 1 232 1 
233 1 257 1 1 1 327 1 237 1 104 1 284 1 10 1 190 1 80 1 35 1 119 2 290 1 120 1 122 1 16 2 365 1 341 1 62 1 151 1 275 1 44 1 18 1 319 2 345 1 20 1 228 2 300 1 
1 1 16 1 304 1 62 1 272 1 80 1 307 1 119 1 72 1 290 1 
233 1 16 2 149 2 282 1 368 2 9 1 151 1 319 1 320 4 307 2 119 2 193 2 228 1 109 1 
255 1 307 1 332 1 272 1 10 1 190 1 
255 2 99 1 1 1 49 1 28 3 205 1 161 2 163 1 190 3 10 3 80 2 119 2 332 4 36 1 290 2 310 2 314 1 38 1 16 2 364 1 340 2 93 4 148 2 62 2 250 1 175 2 45 1 276 1 155 1 279 1 97 2 23 4 377 4 179 2 
257 3 158 2 28 1 237 2 354 1 140 1 33 1 215 1 291 1 143 1 293 1 58 1 195 1 310 1 110 1 59 1 340 1 243 1 93 1 341 2 223 1 248 1 369 1 44 2 18 2 276 1 345 1 20 3 97 1 23 1 377 1 179 1 
16 1 1 1 148 1 62 1 368 1 272 1 175 1 80 1 320 2 307 2 119 1 193 1 290 1 
48 1 203 1 269 1 
48 1 157 1 105 1 239 1 203 1 
48 1 203 1 269 1 
48 1 203 1 269 1 
48 1 203 1 286 1 
48 1 203 1 286 1 
48 1 203 1 286 1 
48 1 203 1 
326 1 159 1 
37 3 338 4 158 4 92 1 3 1 248 2 284 1 369 2 104 1 151 1 140 2 265 2 177 1 86 1 71 1 228 1 291 4 143 8 293 2 122 1 
256 1 37 2 338 3 92 1 3 1 104 1 284 1 151 1 265 2 177 1 291 3 228 1 143 6 122 1 
37 2 338 2 158 2 282 1 248 1 369 1 151 1 9 1 140 1 265 1 373 1 86 1 291 2 228 1 143 4 293 1 109 1 
338 1 76 1 291 1 143 2 309 1 232 1 
76 2 158 2 3 1 282 2 284 2 104 2 356 1 9 2 140 1 265 5 86 2 291 13 143 26 293 1 109 2 122 2 37 7 338 13 92 1 365 1 248 1 369 1 151 5 177 1 130 1 131 1 71 1 228 5 232 2 
76 1 291 1 143 1 
338 1 143 1 232 1 
37 3 338 3 158 2 282 1 248 1 369 1 9 1 151 1 140 1 265 2 84 1 373 1 86 1 291 3 228 1 143 6 293 1 109 1 
258 1 76 1 158 2 282 2 9 2 140 1 265 1 214 1 86 1 291 6 143 12 309 1 293 1 109 2 37 2 338 6 248 1 126 1 369 1 151 2 342 1 225 1 278 1 228 2 232 1 
37 2 338 3 284 1 104 1 151 1 265 1 86 1 228 1 291 3 143 6 122 1 
37 2 338 1 158 2 92 1 248 1 104 1 369 1 140 1 265 1 177 1 86 1 71 1 291 2 143 3 293 1 98 1 122 1 
37 5 338 5 158 2 365 1 248 1 369 1 104 2 284 1 151 2 140 1 342 1 265 3 86 2 291 5 228 2 143 10 293 1 122 2 
37 1 338 2 158 2 248 1 369 1 140 1 342 1 86 1 228 1 143 2 293 1 109 1 
37 2 338 2 158 2 282 1 248 1 369 1 151 1 9 1 140 1 265 1 342 1 86 1 291 2 228 1 143 4 293 1 109 1 
37 2 338 1 158 6 248 3 263 1 369 3 104 1 140 3 342 1 265 1 86 1 71 1 291 2 143 3 293 3 98 1 122 1 
76 1 158 8 263 1 284 1 104 2 140 4 329 1 265 3 86 3 291 8 143 15 309 1 293 4 122 2 37 6 338 7 92 1 365 1 248 4 369 4 151 2 342 1 177 1 373 1 71 1 228 2 98 1 232 1 
258 1 76 1 158 4 3 1 282 2 284 2 104 2 9 1 140 2 265 5 214 1 86 4 291 10 143 24 309 1 293 2 109 2 122 2 37 9 338 14 92 1 365 1 248 2 126 1 369 2 151 4 342 1 225 1 177 1 278 1 71 1 228 5 232 1 
258 1 76 1 158 6 3 1 282 2 284 1 104 1 9 1 140 3 265 3 214 1 86 1 291 7 143 17 309 1 293 3 109 2 122 1 37 4 338 10 92 1 248 3 126 1 369 3 151 2 342 1 225 1 177 1 278 1 373 1 71 1 228 3 232 1 
258 1 76 1 158 6 3 1 282 2 284 1 104 1 9 2 140 3 265 3 214 1 86 1 291 10 143 19 309 1 293 3 109 2 122 1 37 4 338 9 92 1 248 3 126 1 369 3 151 3 342 1 225 1 177 1 278 1 373 1 71 1 228 3 232 1 
258 1 76 1 158 6 3 1 282 2 284 1 104 1 9 1 140 3 265 3 214 1 86 2 291 7 143 17 309 1 293 3 109 2 122 1 37 5 338 10 92 1 248 3 126 1 369 3 151 2 342 1 225 1 177 1 278 1 373 1 71 1 228 3 232 1 
258 1 76 1 158 4 3 1 282 2 284 2 104 2 9 1 140 2 265 5 214 1 86 4 291 10 143 24 309 1 293 2 109 2 122 2 37 9 338 14 92 1 365 1 248 2 126 1 369 2 151 4 342 1 225 1 177 1 278 1 71 1 228 5 232 1 
258 1 76 1 158 2 282 2 9 2 140 1 265 1 214 1 86 1 291 6 143 12 309 1 293 1 109 2 37 2 338 6 248 1 126 1 369 1 151 2 342 1 225 1 278 1 228 2 232 1 
258 1 76 1 158 8 3 1 282 2 284 1 104 1 9 1 140 4 265 3 214 1 86 2 291 8 143 18 309 1 293 4 109 2 122 1 37 5 338 10 92 1 126 1 248 4 369 4 151 2 342 1 225 1 177 1 278 1 373 1 71 2 228 3 232 1 
258 1 76 1 158 8 282 3 263 1 9 2 140 4 265 3 214 1 86 3 291 7 143 16 309 1 293 4 109 3 37 6 338 9 126 1 248 4 369 4 151 2 342 1 225 1 278 1 71 2 228 3 232 1 
37 6 338 3 92 1 104 3 284 1 151 1 265 3 177 2 86 3 291 4 228 1 143 7 122 3 
258 1 76 1 158 8 3 1 282 2 263 1 284 1 104 1 9 1 140 4 265 3 214 1 86 1 291 8 143 18 309 1 293 4 109 2 122 1 37 4 338 10 92 1 126 1 248 4 369 4 151 2 342 1 225 1 177 1 278 1 71 2 228 3 232 1 
257 1 18 1 19 1 20 1 210 1 328 1 110 1 
348 1 257 1 328 1 210 1 18 1 19 1 114 1 20 1 156 1 110 1 171 1 270 1 
256 1 314 1 28 1 340 1 93 1 155 1 97 1 23 1 377 1 310 1 179 1 
257 2 28 1 340 1 93 1 223 1 237 1 354 1 150 1 44 1 276 1 18 1 20 2 97 1 377 1 23 1 310 1 110 1 179 1 
257 2 28 1 161 1 354 1 237 2 78 1 310 3 110 1 218 1 93 1 223 1 174 1 150 1 44 1 275 1 18 2 276 2 20 2 97 1 23 1 377 1 230 1 179 2 
257 2 28 1 161 1 237 2 78 1 361 1 310 3 110 1 313 1 218 1 93 2 223 1 174 1 150 1 44 1 275 1 18 2 276 2 20 2 97 1 23 2 377 2 230 1 179 2 
28 1 160 1 161 1 262 1 10 2 190 2 307 1 332 1 361 1 310 4 218 1 340 1 93 3 40 1 272 1 276 1 97 1 23 3 377 3 26 1 230 1 322 1 179 1 
218 1 340 1 28 1 93 3 160 1 161 1 272 1 136 1 190 2 10 2 276 1 307 1 332 1 97 1 361 1 377 3 23 3 322 1 230 1 26 1 310 4 179 1 
28 1 93 1 97 1 23 1 377 1 187 1 
134 1 38 1 340 2 364 1 28 3 93 7 315 1 117 1 187 1 102 1 64 1 357 1 276 1 154 1 97 2 377 6 23 7 194 1 310 3 268 1 179 2 
3 1 236 1 102 1 237 1 104 1 284 1 188 1 140 2 291 3 143 6 58 1 293 2 110 2 59 2 338 3 243 2 248 2 150 1 151 1 18 1 20 2 23 1 257 2 158 4 28 1 354 1 265 2 215 1 170 1 310 1 122 1 37 2 92 1 93 1 223 1 369 2 127 1 176 1 371 1 44 1 276 1 177 1 227 1 97 1 228 1 377 1 179 1 
255 1 1 2 2 1 160 1 304 1 162 1 283 1 136 1 10 3 190 3 80 2 307 1 119 1 332 2 36 1 290 2 310 2 16 1 340 1 93 1 62 2 272 1 201 1 72 1 23 1 377 1 26 1 322 1 
28 2 93 2 160 1 102 1 187 1 276 1 333 1 97 1 377 2 23 2 194 1 310 2 179 1 
314 1 28 1 340 1 93 4 102 1 155 1 97 1 361 1 377 4 23 4 121 1 310 1 179 1 
38 1 147 1 49 1 364 1 28 2 93 2 161 1 276 1 279 1 97 1 377 2 23 2 310 1 179 1 
74 1 288 1 234 1 28 1 340 1 93 1 97 1 23 1 377 1 8 1 
28 1 93 2 206 1 315 1 102 1 97 1 377 2 23 2 310 1 268 1 179 1 
314 1 340 1 28 2 93 5 315 1 161 1 102 1 64 1 154 1 155 1 97 2 377 4 23 5 121 1 310 3 179 2 
314 1 340 1 28 2 93 5 315 1 161 1 102 1 64 1 82 1 155 1 97 2 377 4 23 5 121 1 310 3 179 2 
313 1 257 2 28 1 340 1 93 1 223 1 237 1 150 1 44 1 276 1 18 1 20 2 97 1 377 1 23 1 310 1 110 1 179 1 
38 1 364 1 28 2 93 1 161 1 117 1 276 1 97 1 377 1 23 1 194 1 310 1 179 1 
339 1 68 1 56 1 247 1 110 1 
339 2 174 1 247 2 297 1 272 1 78 1 190 2 10 2 274 1 275 1 307 1 68 1 169 1 201 1 56 2 322 1 110 1 311 1 73 1 
257 1 305 1 247 1 355 1 18 1 68 1 20 1 106 1 56 1 
68 1 311 1 73 1 
256 1 197 1 343 1 103 1 
370 1 197 1 343 1 55 1 103 1 25 1 324 1 
336 1 376 1 25 1 
197 1 221 1 103 1 139 1 370 1 343 1 358 2 69 1 55 3 22 1 25 3 324 1 
181 1 254 1 370 1 197 1 343 1 55 2 103 1 25 2 324 1 
288 1 234 1 370 1 362 1 343 1 55 1 22 1 41 1 25 1 317 1 324 1 
370 1 197 1 343 1 55 1 22 1 25 1 324 1 
370 1 197 2 55 1 22 1 103 1 25 1 324 1 
197 1 281 1 370 2 32 1 343 1 85 1 55 2 22 1 25 2 324 2 
0 1 254 2 362 1 197 1 103 1 370 1 200 1 343 2 55 3 22 1 25 3 91 1 324 1 
234 2 254 1 197 1 103 1 211 1 41 1 8 1 370 1 288 1 343 1 118 1 55 2 22 1 25 2 324 1 
181 1 254 2 362 1 197 1 208 1 103 1 370 2 200 1 343 2 55 4 22 1 25 4 324 2 
370 1 197 1 343 1 55 1 22 1 103 1 25 1 324 1 
254 2 362 1 197 2 103 2 189 1 139 1 370 1 358 1 200 1 343 3 69 1 55 4 25 4 324 1 
254 1 370 1 204 1 197 1 343 1 54 1 55 2 22 1 103 1 306 1 25 2 324 1 
197 1 29 1 103 1 139 2 370 1 343 1 358 2 69 1 55 3 22 1 25 3 324 1 
343 2 213 1 13 1 21 2 
370 1 277 1 55 1 22 1 25 1 324 1 
254 1 0 1 370 1 197 1 343 1 55 2 22 1 103 1 25 2 324 1 
152 1 
370 1 197 1 343 1 55 1 22 1 103 1 25 1 324 1 
254 1 0 1 197 1 103 1 370 1 358 1 343 1 55 3 22 1 25 3 324 1 
362 1 343 1 200 1 189 1 
197 1 343 1 

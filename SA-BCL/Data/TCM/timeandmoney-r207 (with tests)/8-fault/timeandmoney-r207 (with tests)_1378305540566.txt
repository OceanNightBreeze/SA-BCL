#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (36,218) 181 (117,263) (117,263) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (36,218) 181 (117,263) (117,263) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (36,218) 181 (117,263) (117,263) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (36,218) 181 (117,263) (117,263) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (22,54,164) (22,54,164) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 238 53 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 238 53 130 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (22,54,164) (22,54,164) 287 278 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (22,54,164) (22,54,164) 287 278 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (22,54,164) (22,54,164) 287 278 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (22,54,164) (22,54,164) 287 278 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (22,54,164) (22,54,164) 287 278 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (22,54,164) (22,54,164) 287 278 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (22,54,164) (22,54,164) 287 278 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (22,54,164) (22,54,164) 287 278 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (22,54,164) (22,54,164) 287 278 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (22,54,164) (22,54,164) 287 278 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (22,54,164) (22,54,164) 287 278 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (22,54,164) (22,54,164) 287 278 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 27 321 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 27 321 75 222 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 238 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 238 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 238 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 238 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 238 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 238 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 238 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | CONDITION | 5413 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12144 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1046 | = null
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification; | RETURN | 587 | return null
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | STATEMENT | 1463 | stmt -> ;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | CONSTANT | 1656 | 0 -> 1
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
36 1 33 1 117 1 62 1 304 1 263 1 146 1 98 1 206 1 226 1 181 1 
36 1 33 1 117 1 62 1 304 1 263 1 146 1 98 1 206 1 226 1 181 1 
36 1 33 1 117 1 62 1 304 1 263 1 146 1 98 1 206 1 226 1 181 1 
36 1 33 1 117 1 62 1 304 1 263 1 146 1 98 1 206 1 226 1 181 1 
33 1 61 1 304 1 195 1 146 4 200 1 132 1 242 2 327 1 286 3 311 1 291 1 249 1 78 1 226 1 206 4 334 3 227 2 
33 1 234 1 299 1 62 1 304 1 176 1 146 2 200 1 311 1 291 1 249 1 28 1 226 1 206 2 98 1 334 1 
33 2 61 1 304 1 146 3 218 1 200 1 286 1 249 1 226 2 206 3 98 1 334 2 227 1 
33 2 211 1 86 1 304 1 218 1 132 1 311 1 98 1 226 2 227 4 61 3 195 1 146 9 200 1 242 2 327 1 286 7 291 1 249 1 78 1 165 1 206 9 334 5 82 1 
33 2 211 1 86 1 304 1 218 1 132 1 311 1 98 1 226 2 227 4 61 3 195 1 146 9 200 1 242 2 327 1 286 7 291 1 249 1 78 1 165 1 206 9 334 5 82 1 
102 1 163 1 4 1 
163 1 331 1 281 2 
277 1 300 2 94 1 142 2 328 2 332 2 243 2 274 2 
169 1 127 1 128 1 300 3 88 2 45 1 219 1 268 1 94 1 224 2 96 1 314 1 274 2 275 1 101 1 58 1 232 1 277 1 142 3 322 1 67 1 145 1 198 1 68 1 243 2 113 1 245 2 284 1 289 2 329 1 328 2 330 1 79 1 333 1 332 2 167 1 208 2 
230 1 14 1 300 1 94 1 142 1 328 1 332 1 243 1 207 1 274 1 
164 1 54 1 
14 1 300 1 142 1 197 2 22 2 326 1 4 1 243 1 221 1 328 1 272 1 163 1 164 1 332 1 274 1 
182 1 216 1 197 1 22 1 69 1 
163 1 216 1 197 2 22 2 4 1 133 1 203 1 69 1 
216 1 197 1 22 1 
230 1 14 1 300 1 279 1 142 1 197 1 22 1 243 1 69 1 94 1 328 1 332 1 207 1 274 1 
163 1 
25 1 163 1 216 1 197 2 22 2 4 1 133 1 69 1 
56 1 107 2 216 2 197 5 22 5 178 1 149 1 89 1 4 1 282 1 133 1 3 2 69 2 309 1 158 1 313 1 163 1 315 2 124 1 
102 1 277 1 
58 1 128 1 127 1 300 2 142 2 145 1 67 1 113 1 243 1 72 1 289 1 268 1 95 1 224 1 77 1 79 1 332 1 208 1 101 1 274 1 
277 2 300 2 142 2 196 1 243 2 90 1 328 1 332 1 274 1 
72 1 240 1 70 1 
127 1 128 1 58 1 277 1 300 1 85 1 142 1 67 1 145 1 113 1 289 1 268 1 224 1 79 1 208 1 101 1 
277 1 300 3 328 1 77 1 142 3 332 3 243 3 274 3 
14 1 300 1 142 1 332 1 243 1 207 1 274 1 
90 1 14 1 300 1 142 1 328 1 196 1 332 1 243 1 274 1 
169 1 128 1 127 1 300 4 88 2 219 1 221 1 268 1 95 1 94 1 224 1 272 1 314 1 101 1 274 3 103 1 58 1 232 1 277 1 14 1 142 4 322 1 145 1 67 1 196 1 197 1 22 1 68 1 326 1 113 1 243 3 245 1 284 1 289 1 118 1 329 1 328 2 77 1 164 1 79 1 333 1 332 3 167 1 208 1 
277 1 300 2 142 2 77 1 81 1 332 1 201 1 243 2 274 1 
14 1 300 3 235 1 142 3 196 1 197 1 22 1 326 1 243 3 221 1 118 1 95 1 328 1 77 2 272 1 163 1 164 1 332 3 274 3 
300 2 142 2 196 1 243 2 70 1 72 1 77 1 328 1 332 2 274 2 
127 1 128 1 58 1 277 1 300 1 142 1 67 1 145 1 113 1 289 1 268 1 224 1 79 1 208 1 101 1 
128 1 58 1 84 1 277 1 300 1 142 1 67 1 113 1 289 1 268 1 224 1 271 1 79 1 208 1 101 1 
83 1 169 1 212 1 303 1 175 1 131 1 88 2 219 2 308 1 314 1 188 1 189 1 240 1 68 1 152 1 245 3 70 1 284 1 72 1 248 1 329 1 330 1 27 1 167 1 
14 1 300 1 280 1 142 1 272 1 332 1 243 1 274 1 
277 1 300 5 142 5 196 1 201 1 243 5 95 1 269 1 77 2 328 1 81 1 316 1 332 4 274 4 
14 1 300 2 280 1 142 2 332 2 243 2 207 1 274 2 
157 1 236 1 
157 1 236 1 
65 1 259 1 
65 1 259 1 
65 1 259 1 
157 1 60 1 236 1 
204 1 157 1 236 1 
157 2 302 1 236 2 40 1 65 1 259 1 
157 1 60 1 236 1 
157 1 60 1 236 1 
157 1 236 1 179 1 
157 1 236 1 179 1 
157 1 236 1 179 1 
157 1 290 1 236 1 87 1 238 1 53 1 
157 1 290 1 236 1 87 1 238 1 130 1 197 1 53 1 22 1 
311 1 291 1 132 1 
311 1 291 1 28 1 
34 1 291 3 28 1 97 1 132 2 114 1 
34 1 291 2 136 1 28 1 97 1 132 1 
34 2 291 2 28 1 97 1 132 1 
37 1 126 1 298 1 212 1 303 1 129 1 216 1 89 1 3 1 133 1 4 1 6 1 312 1 51 1 315 1 56 3 139 1 107 1 194 1 321 1 197 5 22 5 281 1 152 1 282 1 69 4 116 2 251 1 162 1 27 1 163 1 
197 1 22 1 69 1 244 1 
126 1 298 1 212 1 129 1 303 1 4 1 3 1 6 1 312 1 313 1 51 1 315 1 56 3 139 1 107 1 321 1 197 3 22 3 281 2 282 1 152 1 69 2 116 1 27 1 163 2 331 1 
262 1 3 1 4 1 6 2 94 1 274 1 14 1 107 1 279 1 17 1 197 3 22 3 281 3 282 2 116 1 27 2 295 1 207 1 126 2 212 2 298 2 300 1 129 1 303 2 51 1 312 1 313 1 315 1 56 5 230 1 139 1 321 2 142 1 152 2 243 1 69 2 328 1 163 2 331 1 332 1 
102 1 268 1 23 1 
268 1 49 1 
260 1 
268 1 79 1 
58 1 268 3 79 1 23 2 228 1 24 1 
58 1 268 1 79 1 
268 1 111 1 
59 1 212 1 301 1 303 1 175 2 323 1 147 1 199 1 219 3 245 7 248 3 205 1 330 4 8 1 190 1 317 1 32 2 
59 1 212 1 301 1 303 1 175 2 323 1 147 1 199 1 219 3 245 7 248 3 205 1 330 4 8 1 190 1 317 1 32 2 
170 1 59 1 212 1 301 1 303 1 175 2 323 1 147 1 199 1 219 3 245 7 248 3 205 1 330 4 8 1 190 1 317 1 32 2 
35 4 169 1 212 4 174 1 301 2 303 4 175 4 88 2 219 15 50 1 7 3 8 1 190 2 317 2 11 1 57 1 59 1 321 3 323 1 20 1 147 2 68 1 199 2 152 3 245 28 284 1 205 1 248 6 159 1 330 13 27 3 30 1 167 1 32 3 
169 2 212 1 301 1 303 1 323 1 175 3 215 1 147 1 199 1 88 4 68 2 219 4 245 9 284 2 205 1 248 4 330 5 8 1 254 1 190 1 317 1 167 2 11 1 32 2 
33 1 255 1 128 1 304 1 132 1 220 1 91 1 311 1 224 1 226 1 98 1 99 1 101 1 276 1 15 1 237 1 66 1 146 2 200 1 325 1 114 1 286 1 289 1 291 2 249 1 28 1 206 2 334 1 208 1 209 1 
33 1 255 1 128 1 132 1 91 1 311 1 48 1 224 1 226 1 98 1 99 1 101 1 276 1 15 1 237 1 66 1 146 3 200 1 114 1 285 1 286 2 289 1 291 2 249 1 28 1 252 1 206 3 334 1 208 1 209 1 
255 1 128 1 132 1 91 1 311 1 48 1 224 1 98 1 99 1 101 1 276 1 237 1 66 1 146 2 200 1 114 1 286 2 289 1 291 2 249 1 28 1 252 1 206 2 334 1 208 1 
55 1 33 1 128 1 237 2 41 1 66 2 67 1 146 1 151 1 5 1 285 1 156 1 289 1 268 1 185 1 224 1 79 1 98 2 226 1 206 1 99 2 208 1 101 1 
33 1 255 1 128 1 304 1 132 1 91 1 311 1 224 1 226 1 98 1 99 1 101 1 276 1 15 1 237 1 66 1 146 1 325 1 114 1 289 1 291 2 28 1 252 1 206 1 208 1 209 1 
9 1 
128 1 171 1 216 2 89 1 3 1 133 1 268 1 224 2 51 1 54 1 315 1 318 1 101 1 56 1 55 1 138 1 107 1 278 1 109 1 67 2 197 2 22 2 282 1 287 1 289 2 156 1 164 1 79 1 166 1 208 2 
287 1 278 1 164 1 197 1 54 1 166 1 22 1 318 1 
287 1 278 1 164 1 197 1 54 1 166 1 22 1 318 1 
287 1 278 1 164 1 197 1 54 1 166 1 22 1 318 1 
25 1 287 1 278 1 164 1 216 1 197 2 54 1 166 1 22 2 133 1 318 1 
287 1 107 1 278 1 164 1 197 1 54 1 166 1 315 1 22 1 89 1 3 1 318 1 
287 1 278 1 164 1 197 1 54 1 166 1 22 1 318 1 
287 1 278 1 164 1 197 1 54 1 166 1 22 1 318 1 
287 1 278 1 164 1 197 1 54 1 166 1 22 1 318 1 
287 1 278 1 164 1 197 1 54 1 166 1 22 1 318 1 
287 1 278 1 164 1 197 1 54 1 166 1 22 1 318 1 
287 1 107 1 278 1 164 1 197 1 54 1 166 1 315 1 22 1 89 1 3 1 318 1 
169 1 212 1 303 1 175 2 131 1 88 2 219 3 314 1 8 1 317 1 190 1 102 1 277 2 323 1 240 1 68 1 70 1 245 6 284 1 72 1 205 1 248 2 329 1 330 3 167 1 32 1 
35 3 169 2 212 2 174 1 303 2 175 1 88 4 219 8 50 1 7 3 96 1 314 2 277 1 321 2 64 1 240 10 68 2 152 2 245 14 70 2 284 2 155 1 72 10 74 1 248 1 329 1 294 1 330 6 27 2 333 1 31 1 167 2 
169 1 128 1 127 1 300 2 85 1 88 2 219 1 268 1 224 1 95 1 96 1 314 1 101 1 274 1 58 1 231 1 277 1 106 1 142 2 145 1 67 1 148 1 68 1 113 1 243 1 70 1 245 2 284 1 289 1 155 1 329 1 77 1 330 1 79 1 332 1 333 1 208 1 167 1 
169 3 175 4 88 6 268 2 95 1 186 1 96 1 8 1 190 1 274 1 101 2 277 2 113 2 283 1 284 3 289 1 205 1 27 2 29 2 208 1 32 1 127 2 128 2 212 3 300 3 303 3 219 10 307 2 310 2 224 1 314 3 317 1 58 2 232 2 321 2 142 3 323 1 67 1 145 2 240 5 68 3 243 1 152 2 245 18 70 5 155 1 72 5 248 4 77 1 329 3 330 8 79 2 80 2 333 1 332 1 167 3 
169 2 128 2 300 1 131 1 88 4 45 2 219 1 220 1 135 1 268 3 224 8 96 1 314 2 100 1 274 1 101 2 55 1 141 1 142 1 67 2 68 2 243 1 245 2 71 1 247 1 284 2 289 8 156 1 77 1 329 2 293 1 330 1 252 1 121 1 79 2 332 1 333 1 208 7 167 2 
169 1 212 1 300 1 321 1 142 1 196 1 88 2 68 1 243 1 245 2 284 1 155 1 250 1 329 1 328 1 330 2 27 1 314 1 332 1 167 1 274 1 
169 1 212 1 131 1 88 2 68 1 245 1 308 1 284 1 329 1 27 1 330 1 314 1 167 1 
169 1 303 1 175 1 131 1 240 1 88 2 68 1 152 1 219 2 70 1 245 2 284 1 72 1 248 1 329 1 314 1 189 1 167 1 
169 1 212 1 303 1 175 1 131 1 88 2 219 2 314 1 321 1 240 1 68 1 152 1 245 3 70 1 284 1 72 1 248 1 329 1 330 1 27 1 167 1 
169 1 212 1 88 2 68 1 245 1 308 1 284 1 329 1 27 1 330 1 314 1 100 1 167 1 
169 1 303 1 175 1 240 1 88 2 68 1 152 1 219 2 70 1 245 2 284 1 72 1 248 1 329 1 314 1 189 1 100 1 167 1 
169 1 212 1 303 1 175 1 88 2 219 2 314 1 100 1 321 1 240 1 68 1 152 1 245 3 70 1 284 1 72 1 248 1 329 1 330 1 27 1 167 1 
169 1 212 1 303 1 175 1 88 2 219 2 314 1 321 1 240 1 68 1 152 1 245 3 70 1 284 1 72 1 248 1 329 1 330 1 27 1 167 1 
169 1 127 1 128 1 58 1 232 1 277 1 300 1 142 1 67 1 145 1 68 1 88 2 219 1 113 1 245 2 284 1 289 1 268 1 224 1 329 1 330 1 96 1 314 1 79 1 333 1 167 1 208 1 101 1 
169 1 0 1 128 1 58 1 84 1 277 1 300 1 142 1 67 1 68 1 88 2 219 1 113 1 245 2 284 1 289 1 268 1 224 1 329 1 271 1 330 1 96 1 314 1 79 1 333 1 167 1 208 1 101 1 
169 1 212 1 303 1 175 1 88 2 219 2 314 1 321 1 240 1 68 1 152 1 245 3 70 1 284 1 155 1 72 1 248 1 329 1 330 1 27 1 167 1 
169 1 128 1 127 1 212 1 300 1 303 1 175 1 88 2 219 2 220 1 268 1 224 1 314 1 101 1 58 1 232 1 321 1 142 1 145 1 240 1 68 1 152 1 113 1 70 1 245 3 284 1 72 1 289 1 248 1 329 1 330 1 27 1 29 1 79 1 208 1 167 1 
169 1 212 1 300 1 303 1 88 2 219 1 314 1 274 1 321 1 142 1 196 1 68 1 243 1 152 1 245 2 153 1 284 1 155 1 328 1 329 1 27 1 330 1 332 1 167 1 
35 2 169 2 212 2 174 1 303 2 175 1 217 1 180 2 88 4 219 8 93 1 50 1 270 1 7 1 233 1 140 1 321 2 68 2 152 2 245 13 284 2 288 1 248 1 330 5 27 2 122 1 254 1 167 2 
35 2 169 2 212 2 174 1 303 2 175 1 217 1 180 2 88 4 219 8 93 1 50 1 270 1 7 1 233 1 140 1 321 2 68 2 152 2 245 13 284 2 288 1 248 1 330 5 27 2 122 1 254 1 167 2 
35 4 169 2 212 8 174 2 301 1 303 8 175 6 217 1 44 1 180 4 88 4 219 25 222 1 93 1 50 2 270 1 7 4 8 1 52 1 190 1 317 1 11 1 233 1 140 1 321 7 323 1 144 1 64 2 68 2 241 1 152 7 245 45 284 2 205 1 248 7 75 1 330 20 27 7 122 1 254 1 167 2 32 1 
35 2 169 2 212 2 174 1 303 2 175 2 217 1 180 1 88 4 265 1 219 7 93 1 50 1 270 1 7 1 233 1 140 1 321 2 68 2 152 2 245 11 284 2 288 1 248 2 330 4 27 2 254 1 167 2 
169 3 35 2 212 3 301 1 303 3 175 1 217 2 44 1 180 4 88 6 219 14 222 1 93 1 270 1 50 2 7 2 52 1 11 2 233 1 140 2 321 3 144 1 68 3 241 1 152 3 245 25 284 3 248 2 75 1 330 11 27 3 122 1 254 1 167 3 
169 1 128 1 300 2 88 2 45 2 219 1 266 1 268 1 224 2 96 1 314 1 101 1 229 1 142 2 112 1 68 1 243 2 202 1 245 2 71 1 284 1 289 2 155 1 329 1 293 1 330 1 79 1 333 1 167 1 208 2 168 1 
276 1 128 1 1 1 15 1 66 1 2 1 132 1 264 1 114 1 220 1 91 1 311 1 289 2 291 2 224 2 28 1 252 1 208 2 101 1 
276 1 128 1 1 1 15 1 66 1 177 1 132 1 114 1 91 1 311 1 289 1 291 2 224 1 28 1 252 1 208 1 101 1 
55 1 128 1 105 1 41 1 67 1 66 1 2 1 289 1 156 1 268 1 224 1 79 1 208 1 101 1 
276 1 128 1 1 1 15 1 66 1 2 1 132 1 264 1 114 1 91 1 311 1 289 1 291 2 224 1 28 1 252 1 208 1 101 1 
223 1 
56 1 102 1 163 1 149 1 4 1 282 1 124 1 
216 1 46 1 89 1 3 1 133 1 4 1 184 1 315 1 56 1 191 1 107 1 197 1 22 1 281 1 282 1 163 2 331 1 
256 1 172 2 89 3 4 1 3 3 268 6 6 4 101 2 12 1 13 2 107 3 109 1 16 2 197 5 22 5 281 8 282 5 23 2 289 1 27 2 208 1 210 2 128 1 298 4 212 2 303 2 216 5 133 3 310 2 49 3 224 1 51 2 315 3 228 1 137 2 56 8 58 1 320 1 321 2 239 2 67 1 326 2 152 2 163 5 79 1 331 4 
35 1 56 2 212 1 107 1 298 3 321 1 144 1 89 1 281 4 282 3 3 1 222 1 6 3 75 1 50 1 27 1 7 1 163 2 331 2 315 1 
212 2 300 1 303 1 89 1 3 1 94 1 8 1 187 1 315 1 190 1 317 1 274 1 56 2 230 1 14 1 107 1 279 1 142 1 16 2 197 1 22 1 282 2 243 1 115 1 328 1 161 1 332 1 207 1 
56 1 107 1 89 1 149 1 3 1 282 1 4 1 163 1 315 1 124 1 
56 2 212 1 298 1 321 1 16 1 303 1 281 2 282 1 152 1 6 1 27 1 163 1 331 1 
163 1 216 1 197 1 22 1 4 1 133 1 
128 1 171 1 258 2 216 4 89 1 3 2 133 2 268 1 224 4 313 1 51 2 315 2 273 1 101 1 56 2 55 1 138 1 107 2 109 2 143 1 324 1 67 2 197 3 22 3 282 2 289 4 156 1 79 1 208 4 
169 1 127 1 128 1 300 3 88 2 219 1 268 1 224 1 94 1 314 1 274 2 101 1 58 1 232 1 277 1 142 3 322 1 67 1 145 1 68 1 243 2 113 1 245 1 284 1 289 1 328 2 329 1 79 1 333 1 332 2 167 1 208 1 
56 1 298 2 107 1 109 1 281 4 89 1 282 2 3 1 4 2 6 2 51 1 163 4 331 2 315 1 32 1 
87 1 238 1 
87 1 238 1 
87 1 238 1 
87 1 238 1 
87 1 238 1 
87 1 238 1 
87 1 238 1 
87 1 238 1 
157 1 236 1 
169 1 35 1 212 1 303 1 175 2 323 1 88 2 68 1 219 4 245 8 284 1 222 1 248 2 205 1 50 1 330 4 7 1 8 1 254 1 190 1 317 1 167 1 32 1 
35 2 169 3 212 5 174 1 301 1 303 5 175 5 44 1 88 6 219 14 222 1 50 1 7 2 8 1 52 1 190 1 317 1 11 1 319 1 321 4 323 1 144 1 64 1 68 3 152 4 245 25 284 3 205 1 248 6 75 1 330 11 27 4 254 1 167 3 32 1 
35 1 169 4 212 2 301 1 303 2 175 1 44 1 88 8 219 7 222 1 50 1 7 1 52 1 11 2 319 1 321 2 144 1 68 4 152 2 245 12 284 4 248 2 75 1 330 5 27 2 254 1 167 4 
35 1 169 3 212 3 301 2 303 3 175 3 44 1 88 6 219 9 222 1 50 1 7 1 8 1 52 1 190 1 317 1 11 1 319 1 321 2 323 1 144 1 68 3 152 2 245 17 284 3 205 1 248 5 75 1 330 8 27 2 254 1 167 3 32 1 
169 1 35 1 212 1 303 1 175 2 323 1 88 2 68 1 219 4 245 8 284 1 222 1 248 2 205 1 50 1 330 4 7 1 8 1 254 1 190 1 317 1 167 1 32 1 
35 1 169 2 212 2 301 1 303 2 175 1 44 1 88 4 219 6 222 1 50 1 7 1 52 1 11 1 321 2 144 1 68 2 152 2 245 11 284 2 248 2 75 1 330 5 27 2 254 1 167 2 
35 1 169 4 212 3 301 2 303 3 175 3 44 1 88 8 219 10 222 1 50 1 7 1 8 1 52 1 190 1 317 1 11 2 319 1 321 2 323 1 144 1 68 4 152 2 245 18 284 4 205 1 248 5 75 1 330 8 27 2 254 1 167 4 32 1 
35 1 169 4 212 3 301 1 303 3 175 3 44 1 88 8 219 9 222 1 50 1 7 1 52 1 11 2 321 3 144 1 68 4 152 3 245 15 284 4 288 1 248 4 75 1 330 6 27 3 254 1 167 4 
212 1 301 3 303 1 323 1 175 3 219 4 245 7 205 2 248 6 330 3 8 1 317 3 190 3 
35 1 169 4 212 3 301 1 303 3 175 3 44 1 88 8 219 10 222 1 50 1 7 1 8 1 52 1 190 1 317 1 11 2 321 2 323 1 144 1 68 4 152 2 245 18 284 4 288 1 205 1 248 4 75 1 330 8 27 2 254 1 167 4 32 1 
169 2 212 1 301 1 303 1 175 2 323 1 88 4 68 2 219 4 245 8 284 2 248 3 205 1 330 4 8 1 317 1 190 1 167 2 32 1 11 1 
102 1 212 1 248 2 205 1 303 1 330 3 175 2 323 1 8 1 190 1 317 1 219 3 245 6 32 1 
319 1 169 1 212 1 321 1 303 1 175 1 88 2 68 1 219 2 152 1 245 3 284 1 248 1 27 1 330 1 167 1 
35 2 212 1 174 1 321 1 303 1 175 1 219 4 152 1 245 6 248 1 50 1 7 1 330 2 27 1 
35 2 169 2 212 3 174 1 301 2 303 3 175 5 88 4 219 12 7 2 8 1 190 2 317 2 11 2 321 2 323 1 64 1 68 2 152 2 245 21 284 2 205 1 248 7 160 1 27 2 330 9 294 1 167 2 32 1 
35 1 219 1 245 1 
330 1 7 1 245 1 
169 1 319 1 212 1 321 1 303 1 175 2 68 1 88 2 219 3 152 1 245 5 284 1 310 1 248 2 27 1 330 2 167 1 
35 1 169 2 212 2 301 1 303 2 175 1 44 1 88 4 219 6 222 1 50 1 7 1 52 1 11 1 321 2 144 1 68 2 152 2 245 11 284 2 248 2 75 1 330 5 27 2 254 1 167 2 
212 1 301 1 303 1 175 1 219 3 245 6 248 2 330 3 8 1 317 1 190 1 
169 1 301 1 175 1 323 1 88 2 68 1 219 2 245 3 284 1 248 2 205 1 160 1 330 1 190 1 317 1 167 1 11 1 
169 1 212 2 301 2 303 2 175 3 68 1 88 2 219 5 245 10 284 1 115 1 248 5 330 5 8 1 254 1 317 2 190 2 167 1 
169 1 212 1 88 2 68 1 245 1 284 1 27 1 330 1 254 1 167 1 
169 1 212 1 321 1 303 1 175 1 88 2 68 1 219 2 152 1 245 3 284 1 248 1 27 1 330 1 254 1 167 1 
169 3 301 1 175 1 88 6 68 3 219 2 245 3 284 3 288 1 248 2 160 1 330 1 254 1 317 1 190 1 167 3 11 1 
35 4 169 5 212 5 174 1 301 3 303 5 175 5 88 10 219 19 50 1 7 3 8 2 190 3 317 3 11 2 319 1 321 3 323 1 20 1 68 5 152 3 245 33 284 5 288 1 205 1 248 8 159 1 160 1 330 14 27 3 254 1 30 1 167 5 32 1 
277 1 300 1 39 1 142 1 81 1 243 1 201 1 
277 1 300 1 39 1 142 1 18 1 19 1 201 1 243 1 246 1 76 1 81 1 253 1 
55 1 102 1 128 1 156 1 289 1 268 1 224 1 67 1 79 1 208 1 101 1 
58 1 128 1 277 1 300 2 142 2 67 1 145 1 113 1 243 1 289 1 268 1 224 1 77 1 79 1 332 1 208 1 101 1 274 1 
128 1 300 2 258 1 221 1 268 3 224 1 272 1 274 2 101 1 58 2 277 1 14 1 142 2 145 1 111 1 243 2 113 1 289 1 77 1 79 2 332 1 123 1 208 1 
128 1 300 2 257 1 258 1 221 1 268 3 224 2 271 1 272 1 274 2 101 1 58 2 277 1 14 1 142 2 111 1 243 2 113 1 289 2 77 1 79 2 332 1 123 1 208 2 
58 1 128 1 257 1 258 1 216 1 67 1 111 1 197 2 22 2 326 1 4 1 23 1 289 3 49 1 268 4 224 3 163 1 79 1 123 1 296 1 10 1 208 3 101 1 
58 1 128 1 172 1 257 1 258 1 216 1 67 1 111 1 197 2 22 2 326 1 4 1 23 1 289 3 49 1 268 4 224 3 163 1 79 1 123 1 208 3 101 1 
128 1 289 1 224 1 141 1 208 1 101 1 
58 1 128 2 141 1 214 1 67 2 261 1 45 1 71 1 220 1 154 1 247 1 289 7 135 1 268 3 224 7 252 1 121 1 79 2 208 6 228 1 101 3 
169 2 175 2 88 4 268 1 8 1 190 1 274 1 101 1 277 2 113 1 284 2 289 1 205 1 29 1 208 1 32 1 127 1 128 1 212 1 300 2 303 1 219 3 307 1 220 1 224 1 314 2 317 1 229 1 58 1 232 1 142 2 323 1 145 1 240 1 68 2 243 1 70 1 245 6 155 1 72 1 248 2 77 1 329 2 330 3 79 1 332 1 167 2 
172 1 216 2 89 2 4 1 3 2 133 1 49 1 268 2 224 1 315 2 137 1 56 1 13 1 107 2 143 1 67 1 239 1 197 3 22 3 149 1 326 1 282 1 69 1 23 1 289 1 163 1 208 1 124 1 
58 1 128 1 256 1 141 1 23 1 220 1 289 2 268 2 224 2 79 1 208 2 228 1 101 2 
55 1 128 1 257 1 67 1 21 1 220 1 289 4 156 1 268 1 224 4 79 1 208 4 101 1 
58 1 128 1 108 1 258 1 261 1 150 1 154 1 289 2 268 1 224 2 79 1 225 1 208 2 101 2 
276 1 311 1 128 1 289 1 291 1 224 1 28 1 67 1 208 1 101 1 
128 1 289 2 268 1 224 2 252 1 79 1 208 2 101 1 71 1 168 1 220 1 
55 1 128 2 258 1 67 1 21 1 220 1 71 1 156 1 289 5 135 1 268 3 224 5 121 1 79 2 208 4 101 2 
55 1 104 1 128 2 258 1 67 1 21 1 220 1 71 1 156 1 289 5 135 1 268 3 224 5 79 2 208 4 101 2 
58 1 128 1 277 1 300 2 142 2 67 1 113 1 243 1 289 1 268 1 224 1 77 1 271 1 79 1 332 1 208 1 101 1 274 1 
58 1 128 1 258 1 214 1 261 1 154 1 289 1 268 1 224 1 79 1 208 1 228 1 101 2 
125 1 192 1 300 1 142 1 110 1 112 1 243 1 202 1 266 1 
183 1 110 1 267 1 
125 1 277 1 192 1 213 1 110 1 
125 2 277 1 14 1 192 2 213 2 110 1 43 1 197 2 22 2 326 1 4 1 69 1 267 1 221 1 183 1 118 1 272 1 163 1 164 1 
102 1 249 1 334 1 200 1 
33 1 249 1 146 1 206 1 226 1 334 1 200 1 
237 1 98 1 206 1 
33 1 38 1 304 1 146 3 176 2 200 1 92 1 249 1 119 1 226 1 206 3 334 1 
286 1 33 1 249 1 146 2 206 2 226 1 334 1 200 1 242 1 
33 1 304 1 195 1 146 1 132 1 311 1 291 1 226 1 206 1 334 1 227 1 
33 1 249 1 304 1 146 1 206 1 226 1 334 1 
33 1 249 2 304 1 146 1 206 1 226 1 200 1 
33 2 304 1 63 1 146 2 26 1 249 1 292 1 226 2 206 2 334 1 
33 1 211 1 61 1 304 1 146 3 200 1 286 2 249 1 226 1 206 3 82 1 334 2 227 1 
33 1 304 1 146 2 200 1 132 1 114 1 286 1 47 1 311 1 291 2 249 1 28 1 226 1 206 2 334 1 
33 2 61 1 304 1 146 4 200 1 242 1 327 1 286 2 249 1 226 2 206 4 334 2 227 1 
33 1 249 1 304 1 146 1 206 1 226 1 334 1 200 1 
33 1 297 1 38 1 61 1 176 1 146 4 200 2 286 2 92 1 249 2 206 4 226 1 334 3 227 1 
33 1 193 1 304 1 146 2 200 1 286 1 73 1 249 1 165 1 226 1 206 2 334 1 
33 1 38 2 304 1 305 1 146 3 176 2 200 1 92 1 249 1 226 1 206 3 334 1 
173 1 42 1 334 2 134 2 
33 1 304 1 120 1 146 1 206 1 226 1 
286 1 33 1 249 1 304 1 146 2 206 2 226 1 334 1 200 1 82 1 
306 1 
33 1 249 1 304 1 146 1 206 1 226 1 334 1 200 1 
33 1 304 1 146 3 176 1 200 1 286 1 249 1 226 1 206 3 334 1 82 1 
297 1 61 1 334 1 227 1 
249 1 334 1 

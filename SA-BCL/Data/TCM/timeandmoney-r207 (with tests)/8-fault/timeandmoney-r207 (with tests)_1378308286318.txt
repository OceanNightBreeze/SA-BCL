#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 264 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 290 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (139,245) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 300 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | CONSTANT | 5361 | 0 -> 1
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1325 | return null
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2497 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4778 | 1 -> 0
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2932 | 1 -> 0
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | OPERATOR | 939 | += -> %=
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 3080 | = null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1740 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
55 2 359 1 338 1 80 2 262 1 221 6 176 1 31 1 266 1 61 1 32 1 154 1 346 1 36 1 13 2 37 1 206 3 351 5 212 2 99 2 306 1 353 2 72 2 216 1 333 4 217 9 78 1 120 9 
55 2 359 1 338 1 80 2 262 1 221 6 176 1 31 1 266 1 61 1 32 1 154 1 346 1 36 1 13 2 37 1 206 3 351 5 212 2 99 2 306 1 72 2 353 2 216 1 333 4 217 9 78 1 120 9 
55 2 359 1 338 1 80 2 262 1 221 7 176 1 31 1 266 1 61 1 32 1 154 1 346 1 36 1 13 2 37 1 206 4 351 6 212 2 99 2 306 1 72 2 353 2 216 1 333 5 217 10 78 1 120 10 
55 2 359 1 338 1 80 1 262 1 221 4 176 1 266 1 61 1 32 1 154 1 346 1 36 1 13 2 37 1 206 2 351 4 212 2 99 2 306 1 72 2 353 2 216 1 333 3 217 7 78 1 120 7 
206 1 55 1 338 1 80 2 221 3 351 3 99 1 31 1 266 1 353 1 72 1 61 1 216 1 333 2 217 4 36 1 13 1 120 4 
55 1 82 1 351 1 222 1 212 1 99 1 306 1 266 1 353 1 216 1 217 2 36 1 13 1 93 1 37 1 120 2 
206 1 262 1 221 1 351 2 212 1 99 2 266 1 353 2 216 1 333 1 217 3 36 1 120 3 
55 1 338 1 359 1 206 3 80 2 148 1 262 1 221 7 176 1 351 5 212 1 99 2 31 1 266 1 72 1 353 2 61 1 216 1 308 1 333 4 217 9 36 1 13 1 120 9 
55 1 338 1 359 1 206 3 80 2 148 1 262 1 221 7 176 1 351 5 212 1 99 2 31 1 266 1 72 1 353 2 61 1 216 1 308 1 333 4 217 9 36 1 13 1 120 9 
27 1 243 1 147 1 
275 2 67 1 147 1 
234 2 268 1 324 2 10 2 77 2 114 1 125 2 175 2 
121 1 261 1 122 1 341 1 242 1 364 1 125 2 244 1 343 2 58 1 268 1 10 2 66 1 131 2 347 2 156 2 301 1 250 1 210 1 324 3 114 1 19 1 70 1 46 1 352 1 253 1 234 3 354 1 332 1 144 1 116 1 77 2 309 2 196 1 256 1 173 1 175 2 
249 1 234 1 268 1 2 1 324 1 10 1 77 1 125 1 150 1 175 1 
249 2 2 1 27 1 324 2 125 1 150 1 367 1 167 1 268 1 234 2 202 1 50 1 110 1 10 2 77 1 321 1 175 1 147 1 
249 2 2 1 27 1 106 1 42 1 324 2 150 1 125 2 367 1 167 1 268 1 234 2 50 1 110 1 10 2 77 2 147 1 175 2 
136 1 106 1 211 1 42 1 29 1 
376 1 293 1 136 1 27 1 106 2 42 2 29 1 147 1 
106 1 42 1 29 1 
249 1 136 1 2 1 106 1 42 1 324 1 150 1 125 1 367 1 268 1 234 1 10 1 77 1 175 1 
147 1 
376 1 136 1 27 1 106 2 42 2 29 1 246 1 147 1 
136 2 27 1 106 5 42 5 29 2 326 1 187 2 232 2 366 1 165 1 100 1 376 1 190 2 294 1 145 1 357 1 24 1 147 1 322 1 
301 1 121 1 56 1 324 2 242 1 125 1 342 1 70 1 352 1 46 1 58 1 234 2 86 1 332 1 10 1 309 1 66 1 175 1 347 1 156 1 
114 1 243 1 
324 2 125 1 114 2 234 2 281 1 10 2 77 1 175 1 26 1 
86 1 130 1 
301 1 121 1 208 1 324 1 242 1 114 1 46 1 352 1 70 1 58 1 234 1 332 1 309 1 66 1 347 1 156 1 
234 3 56 1 324 3 10 3 77 1 114 1 125 3 175 3 
249 1 234 1 2 1 324 1 10 1 125 1 175 1 
249 1 234 1 324 1 281 1 10 1 77 1 125 1 175 1 26 1 
167 1 249 1 234 2 56 1 50 1 264 1 110 1 281 1 324 2 10 2 77 1 125 2 342 1 278 1 175 2 
234 2 56 1 324 2 10 2 114 1 125 1 321 1 142 1 175 1 
167 1 290 1 249 1 234 1 56 1 50 1 110 1 324 1 10 1 125 1 342 1 278 1 175 1 
56 1 324 2 139 1 125 2 234 2 86 1 281 1 10 2 77 1 175 2 
301 1 121 1 324 1 242 1 114 1 46 1 352 1 70 1 58 1 234 1 332 1 309 1 66 1 347 1 156 1 
302 1 301 1 324 1 242 1 114 1 46 1 352 1 70 1 58 1 234 1 309 1 197 1 66 1 347 1 156 1 
261 1 244 2 245 1 343 4 86 2 11 1 131 2 130 2 132 1 299 1 304 1 210 1 274 1 139 2 252 1 19 2 188 1 253 1 115 1 116 1 117 1 118 1 256 1 173 1 
249 1 234 1 110 1 324 1 10 1 179 1 125 1 175 1 
56 2 209 1 324 5 125 4 114 1 342 1 142 1 234 5 281 1 10 5 77 1 283 1 321 1 175 4 
249 1 234 2 2 1 324 2 179 1 10 2 125 2 175 2 
138 1 213 1 
138 1 213 1 
133 1 45 1 
133 1 45 1 
133 1 45 1 
307 1 138 1 213 1 
138 1 213 1 105 1 
133 1 138 2 45 1 277 1 151 1 213 2 
307 1 138 1 213 1 
307 1 138 1 213 1 
87 1 138 1 213 1 
87 1 138 1 213 1 
87 1 138 1 213 1 
54 1 258 2 220 1 106 2 42 2 138 2 149 1 151 1 213 2 60 2 191 1 22 2 319 1 295 1 155 1 270 2 271 2 147 1 53 3 
258 1 3 1 106 1 125 2 60 1 10 2 129 1 270 1 95 1 113 1 42 1 138 1 324 2 114 1 213 1 21 1 166 1 234 2 191 1 22 1 175 2 53 1 358 1 105 1 
55 1 72 1 13 1 
55 1 13 1 93 1 
72 2 273 1 44 1 161 1 13 3 93 1 
72 1 273 1 161 1 218 1 13 2 93 1 
72 1 273 2 161 1 13 2 93 1 
27 1 106 5 314 1 29 1 291 1 294 1 11 1 204 1 67 1 95 1 185 1 136 4 135 1 42 5 274 1 252 1 275 3 231 2 232 1 187 1 21 1 47 2 166 1 376 1 254 2 190 1 255 1 51 1 117 1 145 2 24 3 147 2 
27 1 288 1 106 9 314 1 29 6 33 1 294 1 11 3 67 3 184 1 185 2 136 7 135 2 211 5 42 9 274 3 160 5 252 3 275 9 231 6 187 2 232 2 165 1 166 4 376 1 254 6 190 2 51 3 117 3 145 6 378 1 24 8 147 5 25 1 337 1 
27 1 106 3 291 1 11 1 67 2 185 1 136 2 135 1 42 3 274 1 252 1 231 2 275 4 232 1 187 1 47 1 165 1 166 1 254 2 190 1 255 1 51 1 117 1 145 2 24 3 147 3 
27 1 288 1 106 4 291 1 11 2 67 3 184 1 185 1 135 1 136 3 42 4 274 2 252 2 275 7 231 4 232 1 187 1 47 2 165 1 166 2 254 4 190 1 255 1 51 2 117 2 145 4 378 1 24 5 147 4 
301 1 243 1 298 1 
301 1 69 1 
362 1 
301 1 70 1 
301 3 229 1 242 1 12 1 70 1 298 2 
301 1 242 1 70 1 
301 1 317 1 
299 2 183 1 323 1 304 3 360 2 274 1 19 3 252 1 289 1 244 4 20 1 225 1 343 7 49 1 369 1 356 1 226 1 
299 2 183 1 323 1 304 3 360 2 274 1 19 3 252 1 289 1 244 4 20 1 225 1 343 7 49 1 369 1 356 1 226 1 
299 2 183 1 323 1 304 3 360 2 274 1 19 3 252 1 289 1 244 4 20 1 225 1 343 7 49 1 369 1 356 1 101 1 226 1 
261 1 360 3 289 2 152 1 244 16 343 31 225 5 59 1 369 2 64 1 65 1 11 3 131 2 349 4 226 1 183 1 299 5 96 3 134 1 323 2 304 10 210 1 274 4 372 1 19 15 252 4 20 1 253 1 49 1 51 3 356 2 117 3 102 1 173 1 
261 2 360 2 289 1 244 5 343 9 225 1 369 1 64 1 131 4 226 1 299 3 183 1 323 1 304 4 210 2 274 1 252 1 19 4 253 2 49 1 195 1 356 1 52 1 173 2 
55 1 311 1 221 1 266 1 58 1 8 1 34 1 36 1 13 2 93 1 347 1 156 1 16 1 44 1 351 1 212 1 352 1 162 1 99 1 163 1 164 1 72 1 353 1 73 1 216 1 309 1 217 2 379 1 146 1 120 2 
55 1 311 1 221 2 58 1 8 1 34 1 36 1 13 2 93 1 347 1 156 1 137 1 44 1 186 1 351 1 212 1 352 1 162 1 99 1 163 1 164 1 72 1 353 1 216 1 309 1 282 1 217 3 379 1 146 1 120 3 
55 1 137 1 221 2 44 1 351 1 212 1 352 1 162 1 164 1 163 1 58 1 72 1 8 1 216 1 34 1 282 1 309 1 217 2 36 1 13 2 379 1 93 1 347 1 120 2 156 1 
5 1 84 1 58 1 112 1 347 1 156 1 227 1 301 1 186 1 212 2 352 1 46 1 70 1 99 1 162 2 163 2 164 2 353 1 215 1 309 1 217 1 235 1 120 1 
55 1 311 1 266 1 58 1 8 1 34 1 13 2 93 1 347 1 156 1 137 1 44 1 212 1 352 1 162 1 99 1 163 1 164 1 72 1 353 1 73 1 309 1 217 1 379 1 146 1 120 1 
228 1 
1 1 106 4 240 1 241 2 58 1 202 1 110 1 9 2 294 1 10 1 112 1 67 2 347 2 205 1 156 2 301 1 249 1 70 1 352 1 167 1 309 2 24 2 260 1 123 1 81 1 28 2 361 2 29 6 84 1 267 1 126 2 321 1 39 2 185 1 42 4 324 1 43 1 275 2 327 1 98 2 187 1 232 1 233 1 46 2 376 3 234 1 280 1 190 1 50 1 145 2 284 1 103 2 147 1 
249 1 123 1 1 1 106 2 42 2 29 2 324 1 43 1 167 1 376 1 267 1 234 1 126 1 280 1 202 1 50 1 110 1 246 1 10 1 321 1 
39 1 249 1 123 1 1 1 106 1 42 1 324 1 43 1 167 1 267 1 234 1 280 1 202 1 50 1 110 1 9 1 10 1 321 1 
1 1 123 1 106 2 29 2 267 1 126 1 202 1 110 1 9 1 246 1 10 1 321 1 39 1 249 1 42 2 324 1 43 1 98 1 167 1 376 1 234 1 280 1 50 1 
0 1 2 1 1 1 106 4 240 1 241 2 150 1 57 1 202 1 110 1 9 3 246 1 294 1 10 2 67 2 15 1 205 1 249 2 167 1 77 1 172 1 24 1 175 1 123 1 27 2 28 2 29 7 361 2 125 1 367 1 267 1 268 1 126 4 321 1 39 3 42 4 324 2 43 1 98 4 187 1 232 1 140 1 376 3 234 2 280 1 50 1 190 1 145 1 103 2 147 2 
1 1 240 1 106 3 241 2 202 1 110 1 294 1 9 2 10 1 67 2 205 1 249 1 167 1 24 1 123 1 27 1 28 2 81 1 361 2 29 4 267 1 126 2 321 1 39 2 42 3 324 1 43 1 275 2 187 1 232 1 98 2 376 2 234 1 280 1 50 1 190 1 145 1 103 2 147 2 
27 1 1 1 123 1 28 2 106 3 240 1 29 4 241 2 361 2 267 1 126 2 202 1 110 1 9 2 294 1 10 1 321 1 67 2 205 1 15 1 39 2 249 1 42 3 324 1 43 1 98 2 187 1 232 1 140 1 167 1 376 2 234 1 280 1 50 1 190 1 145 1 103 2 172 1 24 1 147 1 
27 1 1 1 123 1 28 2 106 3 240 1 29 4 241 2 361 2 267 1 126 2 202 1 110 1 9 2 294 1 10 1 321 1 67 2 205 1 15 1 39 2 249 1 42 3 324 1 43 1 98 2 187 1 232 1 140 1 167 1 376 2 234 1 280 1 50 1 190 1 145 1 103 2 172 1 24 1 147 1 
27 1 1 1 123 1 198 1 106 3 29 4 361 2 363 1 265 2 267 1 126 2 202 1 110 1 9 2 294 1 10 1 35 1 321 1 205 1 39 2 249 1 158 2 42 3 324 1 43 1 275 2 98 2 187 1 232 1 140 1 167 1 376 2 234 1 280 1 50 1 190 1 145 1 103 2 24 1 147 1 
27 1 1 1 123 1 28 2 240 1 106 3 241 2 361 2 29 5 267 1 57 1 126 3 202 1 110 1 294 1 9 3 10 1 321 1 67 2 205 1 15 1 39 3 249 1 42 3 324 1 43 1 232 1 187 1 98 3 140 1 167 1 376 2 234 1 280 1 190 1 50 1 145 1 103 2 172 1 24 1 147 1 
27 1 1 1 123 1 28 2 240 1 106 3 241 2 361 2 29 5 267 1 57 1 126 3 202 1 110 1 294 1 9 3 10 1 321 1 67 2 205 1 15 1 39 3 249 1 42 3 324 1 43 1 232 1 187 1 98 3 140 1 167 1 376 2 234 1 280 1 190 1 50 1 145 1 103 2 172 1 24 1 147 1 
27 1 1 1 123 1 198 1 81 1 106 3 29 4 361 2 265 2 267 1 126 2 202 1 110 1 9 2 294 1 10 1 321 1 205 1 39 2 249 1 158 2 42 3 324 1 43 1 275 2 98 2 232 1 187 1 167 1 376 2 234 1 280 1 190 1 50 1 145 1 103 2 24 1 147 1 
261 1 360 1 289 1 243 1 244 3 343 6 86 1 369 1 131 2 130 1 226 1 183 1 299 2 304 2 210 1 139 1 274 1 252 1 19 3 114 2 188 1 253 1 49 1 116 1 256 1 173 1 
219 1 239 1 261 2 178 1 244 6 225 1 343 11 59 1 86 8 127 1 269 1 11 2 131 4 130 8 349 2 299 1 249 1 96 2 304 2 210 2 274 2 139 3 114 1 19 5 252 1 253 2 144 1 116 1 51 2 117 1 256 2 119 1 173 2 
56 1 261 1 341 1 210 1 324 1 139 1 125 1 342 1 244 1 253 1 343 1 234 1 368 1 269 1 116 1 10 1 310 1 256 1 131 2 173 1 175 1 
56 1 341 1 242 2 289 1 342 1 244 10 343 20 58 2 292 2 10 1 11 2 66 2 14 1 347 1 156 1 299 4 301 2 304 6 210 3 114 2 252 3 19 10 352 2 70 2 253 3 116 3 309 1 117 2 256 3 173 3 175 1 121 2 261 3 122 2 360 1 125 1 177 2 225 2 86 7 369 1 318 2 269 1 128 2 131 6 130 7 226 1 183 1 324 3 139 7 274 3 141 1 46 1 49 1 234 3 332 2 144 1 51 2 
286 1 56 1 261 2 341 1 125 1 364 2 244 1 84 1 343 2 58 2 10 1 92 1 112 1 181 1 131 4 347 8 156 8 16 1 301 3 137 1 210 2 159 1 324 1 328 1 19 1 188 1 352 2 46 2 70 2 330 1 253 2 331 1 234 1 116 2 144 1 309 7 256 2 175 1 173 2 
261 1 125 1 6 1 244 1 343 3 86 1 269 1 10 1 11 1 130 1 131 2 299 1 304 1 210 1 324 1 139 1 274 1 252 1 19 2 253 1 234 1 281 1 116 1 77 1 51 1 117 1 256 1 175 1 173 1 
304 1 261 1 210 1 139 1 274 1 188 1 253 1 115 1 244 2 225 1 343 2 86 1 116 1 11 1 256 1 130 1 131 2 173 1 
299 1 304 1 261 1 210 1 139 1 252 1 19 2 188 1 253 1 343 2 86 1 116 1 117 1 256 1 130 1 131 2 173 1 132 1 
261 1 244 2 343 4 225 1 86 2 11 1 131 2 130 2 299 1 304 2 210 1 274 1 139 2 252 1 19 2 188 1 253 1 116 1 51 1 117 1 256 1 173 1 
304 1 261 1 159 1 210 1 139 1 274 1 253 1 115 1 244 2 225 1 343 2 86 1 116 1 11 1 256 1 130 1 131 2 173 1 
299 1 304 1 261 1 159 1 210 1 139 1 252 1 19 2 253 1 343 2 86 1 116 1 117 1 256 1 130 1 131 2 173 1 132 1 
261 1 244 2 343 4 86 2 11 1 131 2 130 2 299 1 304 1 210 1 159 1 274 1 139 2 252 1 19 2 253 1 116 1 51 1 117 1 256 1 173 1 
299 1 304 2 261 1 210 1 139 2 274 1 19 2 252 1 253 1 244 2 225 1 343 4 86 2 116 1 51 1 11 1 117 1 256 1 130 2 131 2 173 1 
121 1 122 1 261 1 341 1 242 1 244 1 343 2 58 1 66 1 131 2 347 1 156 1 301 1 210 1 324 1 114 1 19 1 70 1 352 1 46 1 253 1 234 1 332 1 116 1 144 1 309 1 256 1 173 1 
261 1 341 1 242 1 244 1 343 2 58 1 66 1 131 2 347 1 156 1 302 1 301 1 210 1 324 1 114 1 19 1 70 1 352 1 46 1 71 1 253 1 234 1 116 1 144 1 309 1 197 1 256 1 173 1 
261 1 244 2 343 4 225 1 86 2 269 1 11 1 131 2 130 2 299 1 304 2 210 1 274 1 139 2 252 1 19 2 253 1 116 1 51 1 117 1 256 1 173 1 
121 1 122 1 261 1 242 1 244 2 225 1 343 4 58 1 86 2 318 1 11 1 66 1 130 2 131 2 347 1 156 1 299 1 16 1 301 1 304 2 210 1 324 1 139 2 274 1 19 2 252 1 352 1 70 1 253 1 234 1 332 1 116 1 309 1 51 1 117 1 256 1 173 1 
261 1 125 1 244 2 225 1 343 3 86 1 269 1 10 1 11 1 131 2 130 1 304 1 210 1 324 1 274 1 139 1 19 1 252 1 253 1 48 1 234 1 281 1 116 1 77 1 51 1 117 1 256 1 175 1 173 1 
261 2 313 1 244 4 343 9 225 1 59 1 11 1 131 4 349 2 299 1 303 1 134 1 96 1 40 1 304 2 210 2 350 1 274 1 19 5 252 1 253 2 375 1 195 1 51 1 377 1 117 1 173 2 285 1 237 1 
261 2 313 1 244 4 343 9 225 1 59 1 11 1 131 4 349 2 299 1 303 1 134 1 96 1 40 1 304 2 210 2 350 1 274 1 19 5 252 1 253 2 375 1 195 1 51 1 377 1 117 1 173 2 285 1 237 1 
239 2 261 2 360 1 313 1 108 1 289 1 244 24 343 46 225 6 59 2 369 1 64 1 320 1 11 6 131 4 349 4 226 1 183 1 299 6 303 3 134 2 96 4 40 1 304 12 210 2 274 7 19 22 252 7 253 2 375 1 49 1 74 1 170 1 195 1 51 6 377 1 117 6 335 1 173 2 257 1 285 1 237 1 
261 2 313 1 109 1 244 4 343 9 225 1 59 1 11 1 131 4 349 2 299 1 303 1 134 1 96 1 304 2 210 2 350 1 274 1 19 5 252 1 253 2 375 1 195 1 51 1 377 1 117 1 173 2 285 1 237 1 
261 3 313 2 108 1 244 11 225 1 343 20 320 1 64 2 11 2 131 6 349 2 299 1 303 3 134 2 96 2 40 1 304 2 210 3 274 2 252 1 19 9 253 3 375 1 74 1 170 1 195 1 51 2 377 1 117 1 335 1 173 3 285 2 237 1 257 1 
258 1 60 1 305 1 22 1 138 1 149 1 155 1 151 1 213 1 270 1 
3 1 105 1 
258 1 60 1 193 1 22 1 138 1 373 1 213 1 270 1 79 1 
54 1 258 1 106 1 42 1 138 1 149 1 151 1 213 1 60 1 191 1 22 1 319 1 295 1 155 1 270 1 271 1 147 1 53 2 
54 1 258 1 106 1 42 1 138 1 149 1 151 1 213 1 60 1 191 1 22 1 319 1 295 1 155 1 270 1 271 1 147 1 53 2 
54 1 258 1 106 1 42 1 138 1 149 1 151 1 213 1 60 1 191 1 22 1 319 1 295 1 155 1 270 1 271 1 147 1 53 2 
307 1 277 1 279 1 
307 1 277 1 279 1 
87 1 17 1 
87 1 17 1 277 1 
113 1 129 1 
258 1 3 1 106 1 125 2 60 1 319 1 10 2 129 1 270 1 271 1 157 1 95 1 113 1 136 1 42 1 324 2 138 1 114 1 213 1 21 1 166 1 234 2 22 1 53 1 175 2 358 1 105 1 
307 1 279 1 
87 1 17 1 277 1 
286 1 339 1 261 1 341 1 107 1 364 2 244 1 343 2 58 1 269 1 10 2 131 2 347 2 156 2 182 1 301 1 210 1 324 2 325 1 230 1 328 1 19 1 352 1 70 1 253 1 234 2 116 1 144 1 309 2 256 1 173 1 
259 1 55 1 16 1 137 1 44 1 352 1 162 1 58 1 72 1 8 1 153 1 345 1 34 1 309 2 13 2 93 1 146 1 347 2 156 2 
55 1 137 1 44 1 352 1 162 1 58 1 72 1 8 1 345 1 34 1 309 1 13 2 180 1 93 1 146 1 347 1 156 1 
259 1 301 1 352 1 70 1 46 1 162 1 223 1 84 1 58 1 215 1 309 1 112 1 347 1 156 1 
259 1 55 1 137 1 44 1 352 1 162 1 58 1 72 1 8 1 153 1 345 1 34 1 309 1 13 2 93 1 146 1 347 1 156 1 
171 1 
27 1 145 1 243 1 24 1 147 1 322 1 366 1 
27 1 240 1 28 1 106 1 241 1 29 1 294 1 67 1 42 1 275 1 232 1 187 1 376 1 190 1 145 1 24 1 147 2 
106 5 242 1 58 1 63 2 294 4 296 1 11 2 247 2 67 6 347 3 156 3 298 2 300 1 16 1 69 3 301 6 251 1 252 2 352 2 70 1 254 6 169 2 75 2 309 3 117 2 24 9 260 1 27 2 29 5 177 2 366 1 89 1 370 2 90 2 322 1 185 2 229 1 41 1 42 5 274 2 231 6 275 12 187 4 232 4 46 1 376 3 190 4 334 2 51 2 145 8 236 2 147 8 
260 1 239 1 27 2 106 1 29 1 108 1 59 1 62 1 294 2 320 1 11 4 90 5 247 1 67 5 349 2 94 1 185 1 134 1 96 2 42 1 274 4 275 10 231 8 252 4 232 2 187 2 376 1 254 8 74 1 190 2 51 4 145 8 117 4 335 1 24 13 147 7 257 1 
238 1 2 1 106 1 289 1 150 1 125 1 367 1 268 1 369 1 294 1 10 1 90 2 247 1 249 1 42 1 324 1 274 2 252 1 232 1 187 1 234 1 49 1 190 1 77 1 145 2 172 1 24 2 175 1 
27 1 187 1 232 1 366 1 190 1 294 1 145 1 24 1 322 1 147 1 
274 2 177 1 231 5 275 10 252 2 254 5 90 2 51 2 11 2 145 5 117 2 247 1 67 5 24 5 147 5 
376 1 27 1 106 1 42 1 29 1 147 1 
260 2 106 3 29 4 83 1 84 1 58 1 294 1 112 1 347 4 156 4 301 1 185 2 41 1 42 3 251 2 327 1 233 1 232 2 187 2 352 1 70 1 46 2 165 1 376 2 190 2 76 1 309 4 145 2 24 2 
121 1 261 1 122 1 242 1 125 2 343 1 58 1 268 1 10 2 66 1 131 2 347 1 156 1 301 1 210 1 324 3 114 1 19 1 46 1 352 1 70 1 253 1 234 3 354 1 332 1 144 1 116 1 309 1 77 2 256 1 173 1 175 2 
260 1 185 1 27 2 360 1 275 4 231 2 187 1 232 1 254 2 190 1 294 1 145 2 67 2 24 1 147 4 
7 1 258 1 270 1 
258 1 113 1 189 1 149 1 270 1 
7 1 258 1 270 1 
7 1 258 1 270 1 
258 1 263 1 270 1 
258 1 263 1 270 1 
258 1 263 1 270 1 
258 1 270 1 
138 1 213 1 
261 1 360 1 289 1 244 4 343 8 369 1 131 2 349 1 226 1 183 1 299 2 96 1 134 1 304 2 210 1 274 1 252 1 19 4 253 1 49 1 195 1 173 1 257 1 
261 2 360 1 199 1 289 1 244 6 343 11 225 1 59 1 369 1 11 1 131 4 349 2 226 1 299 2 183 1 134 1 96 1 304 3 210 2 274 2 252 1 19 5 253 2 49 1 195 1 51 1 173 2 257 1 
261 3 360 1 199 1 108 1 289 1 244 9 225 1 343 19 369 1 320 1 64 1 11 2 131 6 349 1 226 1 183 1 299 3 96 1 134 1 304 4 210 3 274 3 19 10 252 3 253 3 49 1 74 1 195 1 51 2 117 2 335 1 173 3 257 1 
261 3 360 1 199 1 108 1 289 1 244 10 225 2 343 17 369 1 64 1 320 1 11 2 131 6 349 1 226 1 183 1 299 3 96 1 134 1 304 5 210 3 274 3 19 7 252 2 253 3 49 1 74 1 195 1 51 2 117 1 335 1 173 3 257 1 
261 1 360 1 289 1 244 4 343 8 369 1 131 2 349 1 226 1 183 1 299 2 96 1 134 1 304 2 210 1 274 1 252 1 19 4 253 1 49 1 195 1 173 1 257 1 
261 1 108 1 244 6 225 1 343 12 320 1 11 2 131 2 349 1 299 1 96 1 134 1 304 2 210 1 274 2 19 6 252 2 253 1 74 1 195 1 51 2 117 2 335 1 173 1 257 1 
261 4 360 1 199 1 108 1 289 1 244 10 225 2 343 18 369 1 320 1 64 2 11 2 131 8 349 1 226 1 183 1 299 3 134 1 96 1 304 5 210 4 274 3 19 8 252 2 253 4 49 1 74 1 195 1 51 2 117 1 335 1 173 4 257 1 
261 4 108 1 244 9 225 3 343 16 320 1 64 2 11 3 131 8 349 1 299 3 134 1 96 1 304 6 210 4 350 1 274 3 19 7 252 2 253 4 74 1 195 1 51 3 117 2 335 1 173 4 257 1 
183 2 299 3 304 6 274 1 19 4 252 1 289 3 244 3 343 7 225 3 49 1 369 3 226 1 
261 4 360 1 108 1 289 1 244 10 225 1 343 18 369 1 320 1 64 2 11 2 131 8 349 1 226 1 183 1 299 3 134 1 96 1 304 4 210 4 350 1 274 3 19 8 252 2 253 4 49 1 74 1 195 1 51 2 117 1 335 1 173 4 257 1 
299 2 183 1 304 3 261 2 360 1 210 2 274 1 252 1 19 4 289 1 244 4 253 2 343 8 225 1 49 1 369 1 64 1 131 4 173 2 226 1 
183 1 299 2 304 2 360 1 274 1 19 3 289 1 252 1 243 1 244 3 343 6 49 1 369 1 226 1 
299 1 304 2 261 1 199 1 210 1 274 1 19 2 252 1 253 1 244 2 343 4 225 1 51 1 11 1 117 1 131 2 173 1 
299 1 134 1 96 1 304 2 274 1 252 1 19 4 244 3 343 7 225 1 59 1 51 1 11 1 117 1 349 2 
287 1 239 1 261 2 360 1 289 2 244 11 225 4 343 23 59 1 369 2 64 2 11 2 131 4 349 2 226 1 183 1 299 5 96 2 304 9 210 2 274 3 19 12 252 3 253 2 49 1 51 2 117 2 119 1 173 2 
343 1 19 1 349 1 
343 1 96 1 244 1 
299 2 261 1 304 3 199 1 210 1 274 1 177 1 19 3 252 1 253 1 244 3 343 6 225 1 51 1 11 1 117 1 131 2 173 1 
261 1 108 1 244 6 225 1 343 12 320 1 11 2 131 2 349 1 299 1 96 1 134 1 304 2 210 1 274 2 19 6 252 2 253 1 74 1 195 1 51 2 117 2 335 1 173 1 257 1 
299 1 304 2 274 1 252 1 19 3 289 1 244 3 343 6 225 1 49 1 369 1 
299 1 183 1 287 1 304 2 261 1 210 1 289 1 19 2 244 1 253 1 225 1 343 3 369 1 64 1 131 2 173 1 226 1 
238 1 299 3 261 1 304 5 210 1 274 2 289 2 19 5 252 2 253 1 244 5 225 2 343 10 49 1 369 2 195 1 131 2 173 1 
261 1 304 1 210 1 274 1 253 1 244 2 343 2 225 1 195 1 11 1 131 2 173 1 
299 1 304 2 261 1 210 1 274 1 19 2 252 1 253 1 244 2 343 4 225 1 195 1 51 1 11 1 117 1 131 2 173 1 
299 1 287 1 261 3 304 2 210 3 350 1 19 2 289 1 253 3 244 1 343 3 225 1 369 1 64 1 195 1 131 6 173 3 
287 1 261 5 360 1 199 1 289 3 152 1 244 16 343 34 225 5 59 1 369 3 64 2 11 3 131 10 349 4 226 1 183 1 299 7 134 1 96 3 304 12 210 5 372 1 350 1 274 5 19 18 252 5 253 5 49 2 195 1 51 3 117 3 102 1 173 5 
340 1 234 1 324 1 10 1 114 1 321 1 142 1 
340 1 207 1 201 1 324 1 114 1 142 1 234 1 10 1 203 1 297 1 321 1 104 1 
58 1 301 1 309 1 112 1 243 1 352 1 70 1 46 1 347 1 84 1 156 1 
301 1 56 1 324 2 242 1 114 1 125 1 70 1 352 1 46 1 58 1 234 2 332 1 10 1 309 1 66 1 175 1 347 1 156 1 
56 1 242 2 315 1 125 2 317 1 58 1 110 1 10 2 66 1 347 1 156 1 301 3 249 1 324 2 251 1 114 1 352 1 70 2 167 1 234 2 332 1 309 1 175 1 
56 1 242 2 315 1 125 2 317 1 58 1 110 1 10 2 66 1 347 2 156 2 301 3 249 1 97 1 324 2 251 1 114 1 352 1 70 2 167 1 234 2 309 2 197 1 175 1 
2 1 27 1 106 1 150 1 125 1 367 1 268 1 10 1 347 1 156 1 249 1 301 1 69 1 42 1 324 1 251 1 374 1 234 1 309 1 77 1 147 1 175 1 
2 1 27 1 106 1 150 1 125 1 367 1 268 1 63 1 10 1 347 1 156 1 249 1 301 1 69 1 42 1 324 1 251 1 234 1 309 1 77 1 147 1 175 1 
58 1 309 1 352 1 330 1 347 1 156 1 
16 1 301 3 137 1 229 1 242 1 364 1 328 1 46 2 70 2 352 3 330 1 365 1 331 1 58 2 309 6 92 1 181 1 336 1 347 7 371 1 156 7 
56 1 242 1 289 1 244 3 343 6 58 1 10 1 66 1 347 1 156 1 299 2 16 1 301 1 304 2 210 2 252 1 19 3 114 2 352 1 70 1 253 2 116 2 309 1 256 2 173 2 175 1 121 1 122 1 261 2 360 1 125 1 86 1 318 1 369 1 128 1 269 1 131 4 130 1 226 1 183 1 324 2 139 1 325 1 274 1 234 2 49 1 332 1 
27 1 106 3 29 2 366 1 63 1 294 2 370 1 322 1 347 1 156 1 298 1 69 1 301 2 136 1 41 1 42 3 232 2 187 2 46 1 376 1 190 2 169 1 309 1 334 1 145 1 24 1 147 1 236 1 
16 1 301 2 229 1 242 1 70 1 352 2 330 1 58 1 309 2 296 1 347 2 298 1 156 2 
16 1 301 1 97 1 352 1 46 1 70 1 84 1 58 1 309 4 112 1 347 4 38 1 156 4 
301 1 251 1 242 1 329 1 70 1 352 2 58 1 192 1 309 2 111 1 336 1 347 2 371 1 156 2 
55 1 58 1 8 1 309 1 13 1 352 1 46 1 93 1 347 1 156 1 
58 1 301 1 339 1 16 1 137 1 309 2 328 1 352 1 70 1 347 2 156 2 
16 1 301 3 251 1 328 1 46 1 70 2 352 2 84 1 331 1 58 2 309 4 112 1 92 1 347 5 38 1 156 5 
248 1 16 1 301 3 251 1 328 1 46 1 70 2 352 2 84 1 58 2 309 4 112 1 92 1 347 5 38 1 156 5 
301 1 56 1 324 2 242 1 114 1 125 1 70 1 352 1 46 1 58 1 234 2 10 1 309 1 66 1 197 1 175 1 347 1 156 1 
301 1 229 1 251 1 242 1 70 1 352 2 365 1 58 1 309 1 336 1 347 1 371 1 156 1 
234 1 88 1 324 1 10 1 230 1 107 1 91 1 30 1 182 1 
168 1 91 1 68 1 
88 1 124 1 114 1 91 1 30 1 
2 1 27 1 106 1 124 1 125 1 150 1 30 1 367 1 268 1 88 1 110 1 10 1 91 1 68 1 249 2 136 1 42 1 324 1 278 1 167 1 234 1 168 1 50 1 143 1 77 1 175 1 147 1 
216 1 351 1 36 1 243 1 
353 1 216 1 351 1 217 1 36 1 99 1 120 1 
212 1 217 1 163 1 
18 1 351 1 276 1 99 1 266 1 85 1 353 1 216 1 217 3 36 1 120 3 37 2 
80 1 353 1 216 1 221 1 351 1 217 2 36 1 99 1 120 2 
55 1 351 1 99 1 266 1 353 1 72 1 61 1 333 1 217 1 13 1 120 1 
266 1 353 1 351 1 217 1 36 1 99 1 120 1 
266 1 353 1 216 1 217 1 36 2 99 1 120 1 
200 1 351 1 99 2 224 1 266 1 353 2 355 1 217 2 36 1 120 2 
359 1 206 1 221 2 176 1 351 2 99 1 266 1 353 1 216 1 333 1 217 3 36 1 120 3 
55 1 221 1 44 1 351 1 99 1 266 1 353 1 72 1 216 1 217 2 36 1 13 2 93 1 348 1 120 2 
206 1 80 1 221 2 351 2 99 2 31 1 266 1 353 2 216 1 333 1 217 4 36 1 120 4 
266 1 353 1 216 1 351 1 217 1 36 1 99 1 120 1 
206 1 221 2 18 1 351 3 276 1 99 1 353 1 216 2 194 1 333 1 217 4 36 2 37 1 120 4 
266 1 344 1 353 1 148 1 312 1 216 1 221 1 351 1 217 2 36 1 99 1 120 2 
18 2 351 1 276 1 99 1 214 1 266 1 353 1 216 1 217 3 36 1 120 3 37 2 
4 2 351 2 316 1 174 1 
266 1 353 1 217 1 23 1 99 1 120 1 
359 1 266 1 353 1 216 1 221 1 351 1 217 2 36 1 99 1 120 2 
272 1 
266 1 353 1 216 1 351 1 217 1 36 1 99 1 120 1 
359 1 221 1 351 1 99 1 266 1 353 1 216 1 217 3 36 1 120 3 37 1 
206 1 194 1 351 1 333 1 
351 1 36 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 61 42 46 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 101 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (119,227,326) (43,72,366) (43,72,366) (43,72,366) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 75 (8,182) (8,182) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 95 156 289 29 149 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 95 156 289 29 149 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 95 156 289 29 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (119,227,326) (119,227,326) (119,227,326) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 312 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 39 147 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 838 | = null
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 4694 | = null
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | STATEMENT | 1232 | stmt -> ;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V | STATEMENT | 809 | stmt -> ;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1356 | return null
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | CONSTANT | 8014 | 0 -> 1
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration; | RETURN | 900 | return null
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
307 1 210 2 285 1 111 1 250 1 53 1 139 3 161 1 218 1 253 1 142 1 40 2 223 1 352 1 335 2 92 2 148 4 255 1 229 2 356 5 377 1 278 9 257 9 128 1 48 2 302 2 201 6 50 1 
307 1 210 2 285 1 111 1 250 1 53 1 139 3 161 1 218 1 253 1 142 1 40 2 223 1 352 1 335 2 92 2 148 4 255 1 229 2 356 5 377 1 278 9 257 9 128 1 48 2 302 2 201 6 50 1 
307 1 210 2 285 1 111 1 250 1 53 1 139 4 161 1 218 1 253 1 142 1 40 2 223 1 352 1 335 2 92 2 148 5 255 1 229 2 356 6 377 1 278 10 257 10 128 1 48 2 302 2 201 7 50 1 
307 1 210 2 111 1 250 1 53 1 139 2 161 1 218 1 253 1 142 1 40 2 223 1 352 1 335 2 92 1 148 3 255 1 229 2 356 4 377 1 278 7 257 7 128 1 48 2 302 2 201 4 50 1 
307 1 352 1 210 1 285 1 92 2 148 2 229 1 356 3 278 4 139 1 257 4 128 1 48 1 302 1 253 1 40 1 50 1 201 3 
223 1 307 1 352 1 210 1 335 1 174 1 319 1 4 1 356 1 255 1 229 1 278 2 257 2 48 1 253 1 40 1 
307 1 352 1 210 2 335 1 148 1 356 2 278 3 139 1 257 3 48 2 218 1 253 1 201 1 
307 1 210 2 285 1 53 1 139 3 161 1 218 1 327 1 253 1 40 1 60 1 352 1 335 1 92 2 148 4 356 5 229 1 278 9 257 9 128 1 48 2 302 1 201 7 50 1 
307 1 210 2 285 1 53 1 139 3 161 1 218 1 327 1 253 1 40 1 60 1 352 1 335 1 92 2 148 4 356 5 229 1 278 9 257 9 128 1 48 2 302 1 201 7 50 1 
143 1 144 1 292 1 
144 1 2 2 93 1 
276 1 277 2 371 2 100 2 178 2 336 1 154 2 288 2 
365 1 320 1 241 1 208 1 286 2 137 2 82 1 288 3 309 1 325 1 8 1 371 3 252 1 164 1 38 2 58 1 192 2 63 1 316 1 350 1 13 1 171 1 336 1 337 1 231 1 276 1 175 1 277 2 176 1 127 1 258 1 19 1 100 2 178 2 344 2 75 1 154 2 
256 1 277 1 170 1 371 1 100 1 178 1 336 1 14 1 154 1 288 1 
144 1 292 1 368 1 306 1 170 1 287 1 288 1 339 1 100 1 371 1 21 1 57 1 22 1 49 1 
144 1 292 1 306 1 170 1 287 1 288 1 339 1 277 1 100 1 371 1 178 1 21 1 57 2 49 2 154 1 
57 1 49 1 160 1 238 1 5 1 
144 1 292 1 51 1 57 2 49 2 160 1 238 1 214 1 
57 1 49 1 238 1 
170 1 14 1 336 1 160 1 288 1 256 1 277 1 298 1 100 1 371 1 57 1 178 1 49 1 154 1 
144 1 
144 1 90 1 292 1 51 1 57 2 49 2 160 1 238 1 
61 1 367 1 54 1 42 1 46 1 57 3 44 1 49 3 160 2 331 1 
365 1 320 1 207 1 13 1 193 1 286 1 308 1 288 2 231 1 176 1 309 1 325 1 164 1 100 1 371 2 178 1 38 1 344 1 75 1 154 1 
143 1 276 1 
212 1 288 2 277 1 276 2 113 1 100 2 371 2 178 1 154 1 
207 1 290 1 259 1 
320 1 365 1 13 1 334 1 286 1 288 1 231 1 276 1 309 1 176 1 325 1 371 1 164 1 38 1 344 1 75 1 
277 1 276 1 371 3 100 3 178 3 308 1 154 3 288 3 
256 1 170 1 371 1 100 1 178 1 154 1 288 1 
277 1 113 1 170 1 371 1 100 1 178 1 154 1 212 1 288 1 
365 1 320 1 105 1 306 1 286 1 287 1 137 2 82 1 212 1 308 1 288 4 309 1 325 1 8 1 164 1 371 4 252 1 57 1 38 1 192 1 316 1 350 1 13 1 193 1 170 1 67 1 336 1 337 1 231 1 339 1 276 1 175 1 277 2 176 1 127 1 258 1 19 1 100 3 21 1 178 3 75 1 344 1 154 3 49 1 
276 1 368 1 371 2 100 2 330 1 178 1 154 1 308 1 288 2 
144 1 306 1 193 1 170 1 67 1 287 1 212 1 308 2 288 3 265 1 339 1 277 1 100 3 371 3 57 1 178 3 21 1 49 1 154 3 
207 1 308 1 212 1 288 2 277 1 100 2 371 2 259 1 178 2 154 2 
320 1 365 1 13 1 286 1 288 1 231 1 276 1 309 1 176 1 325 1 371 1 164 1 38 1 344 1 75 1 
365 1 320 1 231 1 276 1 176 1 309 1 325 1 13 1 268 1 219 1 371 1 286 1 38 1 344 1 288 1 
203 1 205 1 282 1 208 2 207 2 245 1 137 2 82 1 370 1 31 1 290 2 9 1 347 1 192 4 316 1 350 1 337 1 296 1 175 1 279 1 258 1 127 2 259 2 280 1 
355 1 306 1 170 1 371 1 100 1 178 1 154 1 288 1 
368 1 193 1 308 2 212 1 288 5 277 1 276 1 45 1 251 1 100 5 371 5 330 1 178 4 154 4 
355 1 256 1 170 1 371 2 100 2 178 2 154 2 288 2 
187 1 89 1 
187 1 89 1 
236 1 184 1 
236 1 184 1 
236 1 184 1 
131 1 187 1 89 1 
131 1 187 1 89 1 
187 1 373 1 89 1 
204 1 236 1 184 1 188 1 187 2 89 2 
131 1 187 1 89 1 
97 1 187 1 89 1 
97 1 187 1 89 1 
97 1 187 1 89 1 
144 1 77 1 169 2 186 3 345 1 159 1 122 1 188 1 187 2 124 2 357 1 359 2 55 1 37 2 99 2 57 2 23 1 49 2 89 2 
102 1 261 1 186 1 187 1 288 2 37 1 371 2 57 1 59 1 89 1 373 1 271 1 169 1 226 1 122 1 124 1 70 1 276 1 359 1 378 1 100 2 178 2 154 2 49 1 
229 1 302 1 40 1 
229 1 174 1 40 1 
234 1 321 1 302 2 225 1 174 1 40 3 
234 1 162 1 302 1 225 1 174 1 40 2 
234 2 302 1 225 1 174 1 40 2 
205 1 51 1 2 3 369 1 160 4 370 1 213 1 266 1 33 1 35 2 54 1 328 2 313 1 220 1 57 5 331 1 144 2 292 1 91 2 226 1 93 1 44 1 16 1 70 1 197 3 296 1 378 1 299 1 20 2 280 1 49 5 238 1 
103 1 104 5 367 1 205 3 262 1 51 1 2 9 369 3 135 1 160 7 370 3 5 5 213 1 33 1 35 6 54 2 328 6 313 2 220 2 57 9 331 2 144 5 254 1 292 1 91 6 351 1 226 4 93 3 44 2 197 8 296 3 101 1 280 3 49 9 238 6 
205 1 367 1 2 4 369 1 160 2 288 1 370 1 266 1 54 1 35 2 313 1 328 2 371 1 220 1 57 3 331 1 144 3 292 1 91 2 170 1 336 1 14 1 226 1 93 2 44 1 16 1 197 3 296 1 256 1 277 1 298 1 100 1 20 1 178 1 154 1 49 3 280 1 
205 1 367 1 2 4 369 1 160 1 370 1 266 1 54 1 35 2 328 2 313 1 220 1 57 2 331 1 144 2 91 2 226 1 93 2 44 1 16 1 197 3 296 1 20 1 101 1 49 2 280 1 
143 1 138 1 325 1 
325 1 163 1 
194 1 
365 1 325 1 
365 1 320 1 138 2 325 3 87 1 343 1 
365 1 320 1 325 1 
338 1 325 1 
202 1 192 9 11 1 208 5 270 1 27 1 245 2 195 1 66 1 81 1 370 1 296 1 127 4 301 1 9 3 372 1 168 2 
202 1 192 9 11 1 208 5 270 1 27 1 245 2 195 1 66 1 81 1 370 1 296 1 127 4 301 1 9 3 372 1 168 2 
202 1 11 1 192 9 208 5 270 1 27 1 245 2 195 1 66 1 133 1 81 1 370 1 296 1 127 4 301 1 9 3 372 1 168 2 
202 1 156 1 244 3 205 2 208 16 27 2 245 5 78 1 322 1 369 3 81 1 264 1 137 2 82 1 370 4 311 1 9 10 167 1 372 1 168 3 11 1 192 29 316 1 350 1 270 2 66 2 195 5 337 1 232 1 296 3 95 4 127 13 301 2 280 3 
202 1 106 1 208 6 27 1 245 3 322 1 137 4 82 2 370 1 117 1 9 5 372 1 168 2 192 11 11 1 316 2 350 2 270 1 195 2 66 1 337 2 296 1 127 5 301 1 
119 1 332 1 366 1 209 1 352 1 210 1 335 1 43 1 324 1 72 1 278 1 342 1 257 1 48 1 200 1 
260 1 366 1 321 1 209 1 307 1 210 1 286 1 309 1 56 1 38 1 253 1 40 2 332 1 119 1 13 1 335 1 174 1 356 1 229 1 72 1 278 3 340 1 257 3 342 1 48 1 302 1 200 1 344 1 76 1 201 2 
260 1 321 1 209 1 307 1 286 1 309 1 56 1 38 1 253 1 40 2 332 1 119 1 13 1 335 1 174 1 356 1 229 1 72 1 278 2 257 2 302 1 200 1 344 1 76 1 201 2 
365 1 242 1 209 2 210 1 286 1 80 1 309 1 325 1 116 1 38 1 332 2 224 1 13 1 335 2 231 1 358 1 278 1 340 1 257 1 126 1 48 1 200 2 344 1 
366 1 321 1 209 1 210 1 286 1 309 1 56 1 38 1 40 2 332 1 119 1 13 1 352 1 335 1 43 1 174 1 229 1 72 1 278 1 257 1 342 1 48 1 302 1 200 1 344 1 76 1 
177 1 
51 3 306 1 2 2 3 1 309 1 215 4 54 1 217 2 220 1 57 5 165 1 120 1 224 1 13 1 121 1 170 1 123 2 274 1 231 2 275 1 358 1 17 2 21 1 129 1 362 1 22 1 238 6 365 1 26 2 368 1 286 2 287 1 288 1 33 1 35 2 325 1 36 1 371 1 38 2 191 2 291 1 331 1 144 2 292 1 146 1 294 2 93 2 44 1 197 2 339 1 151 1 100 1 153 2 344 2 49 5 
90 1 26 1 368 1 51 1 121 1 306 1 146 1 170 1 287 1 288 1 339 1 215 2 36 1 100 1 371 1 57 3 21 1 129 1 362 1 22 1 49 3 238 2 
90 1 144 1 292 1 368 1 51 1 121 1 306 1 146 1 170 1 287 1 288 1 339 1 215 3 217 1 36 1 100 1 371 1 57 3 21 1 129 1 362 1 22 1 49 3 238 1 
368 1 26 1 51 1 306 1 287 1 288 1 215 3 217 1 36 1 371 1 57 3 90 1 144 1 292 1 146 1 121 1 170 1 339 1 17 1 100 1 21 1 22 1 362 1 129 1 49 3 238 2 
306 1 51 3 3 1 215 6 54 1 217 4 57 5 12 1 121 1 170 1 273 1 274 1 123 2 17 4 21 1 129 1 362 1 22 1 238 7 243 1 26 4 368 1 79 1 287 1 288 1 33 1 35 1 36 1 371 1 191 2 331 1 90 1 144 5 292 5 146 1 294 2 44 1 93 2 197 1 339 1 96 1 100 1 153 2 49 5 
306 1 51 2 2 2 3 1 215 4 54 1 217 2 57 4 121 1 170 1 274 1 123 2 17 2 21 1 129 1 362 1 22 1 238 4 368 1 26 2 287 1 288 1 33 1 35 1 36 1 371 1 191 2 331 1 144 2 292 1 146 1 294 2 44 1 93 2 197 1 339 1 151 1 100 1 153 2 49 4 
26 2 368 1 51 2 306 1 3 1 79 1 287 1 288 1 33 1 215 4 35 1 54 1 217 2 36 1 371 1 57 4 191 2 331 1 144 1 292 1 12 1 146 1 121 1 294 2 170 1 93 2 123 2 274 1 44 1 197 1 339 1 17 2 96 1 100 1 153 2 21 1 22 1 362 1 129 1 49 4 238 4 
26 2 368 1 51 2 306 1 3 1 79 1 287 1 288 1 33 1 215 4 35 1 54 1 217 2 36 1 371 1 57 4 191 2 331 1 144 1 292 1 12 1 146 1 121 1 294 2 170 1 93 2 123 2 274 1 44 1 197 1 339 1 17 2 96 1 100 1 153 2 21 1 22 1 362 1 129 1 49 4 238 4 
26 2 368 1 51 2 306 1 2 2 3 1 79 1 134 1 287 1 288 1 33 1 215 4 35 1 54 1 217 2 346 2 36 1 371 1 140 1 57 4 191 2 331 1 144 1 292 1 146 1 121 1 294 2 170 1 272 1 44 1 197 1 339 1 71 2 17 2 100 1 21 1 22 1 362 1 129 1 49 4 238 4 
368 1 26 3 51 2 306 1 3 1 79 1 287 1 288 1 33 1 215 5 35 1 54 1 217 3 36 1 371 1 57 4 191 2 331 1 144 1 292 1 12 1 146 1 121 1 294 2 170 1 93 2 123 2 274 1 44 1 273 1 197 1 339 1 17 3 96 1 100 1 153 2 21 1 22 1 362 1 129 1 49 4 238 5 
368 1 26 3 51 2 306 1 3 1 79 1 287 1 288 1 33 1 215 5 35 1 54 1 217 3 36 1 371 1 57 4 191 2 331 1 144 1 292 1 12 1 146 1 121 1 294 2 170 1 93 2 123 2 274 1 44 1 273 1 197 1 339 1 17 3 96 1 100 1 153 2 21 1 22 1 362 1 129 1 49 4 238 5 
306 1 51 2 2 2 3 1 215 4 54 1 346 2 217 2 57 4 121 1 170 1 71 2 17 2 21 1 129 1 362 1 22 1 238 4 368 1 26 2 134 1 287 1 288 1 33 1 35 1 36 1 371 1 191 2 331 1 144 1 292 1 146 1 294 2 44 1 197 1 339 1 151 1 100 1 49 4 
202 1 207 1 208 4 245 2 137 2 82 1 31 1 370 1 290 1 9 3 372 1 168 1 143 1 11 1 192 8 316 1 350 1 270 1 66 1 195 1 337 1 296 1 175 1 276 3 258 1 127 4 259 1 
156 1 244 3 205 1 207 11 208 8 245 1 369 2 136 1 137 4 82 2 370 2 112 1 290 11 9 2 58 1 269 1 192 14 316 2 350 2 195 1 376 1 337 2 232 1 296 1 276 1 175 1 95 3 297 1 127 6 258 2 19 1 259 4 280 2 
365 1 320 1 1 1 208 1 286 1 82 1 308 1 137 2 288 2 309 1 325 1 329 1 164 1 371 2 38 1 58 1 269 1 192 2 350 1 316 1 13 1 334 1 193 1 337 1 231 1 276 1 175 1 176 1 361 1 258 1 127 1 19 1 100 1 259 1 178 1 75 1 344 1 154 1 
202 1 205 2 207 7 208 11 108 1 308 1 309 2 8 2 164 2 9 11 58 1 166 2 168 1 269 1 11 1 316 3 350 3 270 1 13 2 66 1 230 1 231 1 276 3 175 3 176 2 127 11 19 1 178 1 237 2 75 2 280 2 76 1 320 2 365 2 182 2 245 6 286 3 369 2 137 6 82 3 288 3 370 3 325 2 290 7 371 3 38 3 372 1 192 22 375 2 193 1 195 5 337 3 296 3 258 3 100 1 152 1 259 7 344 3 154 1 
208 1 308 1 6 1 309 4 58 1 224 1 350 2 316 2 13 3 65 1 171 2 353 1 354 1 231 2 358 1 175 2 360 1 127 1 19 1 178 1 76 1 365 3 320 1 286 7 82 2 137 4 32 1 84 1 288 1 31 1 83 1 189 1 325 4 371 1 38 6 39 1 192 2 333 1 337 2 258 2 100 1 344 7 154 1 
305 1 205 1 207 1 208 1 245 1 369 1 212 1 137 2 82 1 288 1 370 1 290 1 371 1 9 1 269 1 192 3 316 1 350 1 337 1 296 1 277 1 175 1 258 1 127 2 100 1 259 1 178 1 154 1 280 1 
203 1 192 2 207 1 350 1 316 1 208 2 195 1 82 1 137 2 31 1 337 1 370 1 175 1 258 1 290 1 9 1 259 1 280 1 
192 2 205 1 207 1 350 1 316 1 245 1 82 1 137 2 31 1 337 1 296 1 175 1 258 1 127 2 290 1 9 1 259 1 347 1 
205 1 208 2 207 2 245 1 369 1 137 2 82 1 370 1 31 1 290 2 9 1 192 4 316 1 350 1 337 1 296 1 175 1 258 1 127 2 259 2 280 1 
203 1 192 2 333 1 207 1 350 1 316 1 208 2 195 1 82 1 137 2 337 1 370 1 175 1 258 1 290 1 9 1 259 1 280 1 
192 2 333 1 205 1 207 1 350 1 316 1 245 1 82 1 137 2 337 1 296 1 175 1 258 1 127 2 290 1 9 1 259 1 347 1 
192 4 205 1 333 1 207 2 350 1 316 1 208 2 245 1 195 1 369 1 82 1 137 2 337 1 370 1 296 1 175 1 127 2 258 1 290 2 9 2 259 2 280 1 
205 1 208 2 207 2 245 1 369 1 137 2 82 1 370 1 290 2 9 1 192 4 316 1 350 1 337 1 296 1 175 1 258 1 127 2 259 2 280 1 
365 1 320 1 208 1 286 1 82 1 137 2 288 1 309 1 325 1 8 1 164 1 371 1 38 1 58 1 192 2 350 1 316 1 13 1 337 1 231 1 276 1 175 1 176 1 258 1 127 1 19 1 75 1 344 1 
320 1 365 1 13 1 286 1 288 1 231 1 309 1 176 1 325 1 268 1 219 1 371 1 38 1 344 1 141 1 
205 1 208 2 207 2 245 1 369 1 137 2 82 1 370 1 290 2 9 1 269 1 192 4 316 1 350 1 337 1 296 1 175 1 258 1 127 2 259 2 280 1 
182 1 8 1 75 1 324 1 
205 1 208 2 207 1 369 1 212 1 137 2 82 1 288 1 370 1 310 1 290 1 371 1 9 1 269 1 192 3 316 1 350 1 195 1 337 1 296 1 277 1 175 1 127 1 258 1 100 1 178 1 259 1 154 1 280 1 
281 1 156 3 205 1 106 1 244 2 208 8 52 1 29 1 369 2 247 1 137 4 82 2 370 2 289 1 9 2 88 1 314 2 192 16 316 2 350 2 195 2 149 1 337 2 296 1 232 1 95 4 127 8 300 1 280 2 364 2 
281 1 156 1 205 1 106 1 244 1 208 7 245 1 52 1 29 1 369 2 247 1 137 4 82 2 370 2 9 3 88 1 314 2 192 13 316 2 350 2 195 2 149 1 337 2 296 1 232 1 95 2 127 6 280 2 364 1 
202 1 281 1 156 2 106 1 244 1 205 1 208 8 245 2 29 1 369 1 137 2 82 1 370 2 289 1 9 3 372 1 168 1 314 1 11 1 192 17 316 1 350 1 270 1 195 1 66 1 149 1 337 1 232 1 296 2 95 3 127 9 280 1 364 1 
281 1 156 1 205 1 106 1 244 1 208 6 245 1 29 1 369 2 247 1 137 4 82 2 370 2 7 1 9 2 88 1 314 1 192 11 316 2 350 2 195 1 149 1 337 2 296 1 232 1 95 2 127 5 280 2 364 1 
314 1 281 1 156 2 192 5 244 1 106 1 208 2 350 1 316 1 29 2 82 1 137 2 337 1 149 1 95 2 289 1 127 3 364 2 
124 1 359 1 199 1 169 1 55 1 37 1 159 1 188 1 187 1 89 1 
102 1 373 1 
124 1 359 1 62 1 190 1 169 1 37 1 295 1 187 1 89 1 
144 1 77 1 169 1 186 2 159 1 122 1 188 1 187 1 124 1 357 1 359 1 55 1 37 1 99 1 57 1 23 1 49 1 89 1 
144 1 77 1 169 1 186 2 159 1 122 1 188 1 187 1 124 1 357 1 359 1 55 1 37 1 99 1 57 1 23 1 49 1 89 1 
144 1 77 1 169 1 186 2 159 1 122 1 188 1 187 1 124 1 357 1 359 1 55 1 37 1 99 1 57 1 23 1 49 1 89 1 
204 1 131 1 98 1 
204 1 131 1 98 1 
97 1 246 1 
204 1 97 1 246 1 
271 1 59 1 
102 1 261 1 186 1 160 1 187 1 288 2 371 2 37 1 57 1 59 1 89 1 373 1 271 1 169 1 226 1 69 1 124 1 70 1 357 1 276 1 359 1 378 1 99 1 100 2 178 2 49 1 154 2 
131 1 98 1 
204 1 97 1 246 1 
365 1 0 1 208 1 286 2 82 1 137 2 288 2 189 1 309 1 216 1 325 1 371 2 38 2 39 1 58 1 118 1 269 1 192 2 41 1 350 1 316 1 13 1 317 1 171 2 337 1 175 1 258 1 127 1 19 1 100 2 344 2 
119 1 332 1 342 1 326 1 115 1 286 1 38 1 227 1 344 1 324 1 76 1 
332 1 119 1 321 1 13 1 286 1 174 1 229 1 309 1 342 1 326 1 302 1 56 1 38 1 344 1 40 2 76 1 240 1 
365 1 332 1 224 1 13 1 286 1 231 1 248 1 358 1 309 1 325 1 115 1 116 1 38 1 344 1 
332 1 119 1 321 1 13 1 286 1 227 1 174 1 229 1 309 1 342 1 326 1 115 1 302 1 56 1 38 1 344 1 40 2 76 1 
304 1 
197 1 143 1 144 1 181 1 24 1 292 1 35 1 
51 1 2 1 33 1 35 1 54 1 57 1 331 1 144 2 292 1 93 1 123 1 274 1 44 1 197 1 153 1 49 1 238 1 
205 2 51 3 2 12 309 2 54 4 312 1 163 3 220 2 57 5 222 2 349 2 13 1 68 2 231 1 73 1 237 2 280 2 238 5 365 1 320 1 181 1 24 1 283 1 183 1 286 1 369 2 287 2 324 1 370 2 33 4 138 2 35 8 325 6 87 1 328 6 38 1 291 1 331 4 144 8 374 2 292 2 91 6 293 2 44 4 93 6 196 2 198 2 197 9 296 2 344 1 49 5 
156 1 244 1 205 2 51 1 28 1 284 1 2 6 369 2 370 2 33 2 54 2 35 5 85 1 289 1 328 5 86 1 220 1 57 1 291 1 331 2 144 5 222 2 292 2 91 5 293 1 44 2 93 3 197 8 296 2 95 1 303 1 49 1 280 2 239 1 238 1 
202 1 288 1 370 2 33 1 54 1 35 2 371 1 57 1 331 1 222 2 270 1 293 1 170 1 66 1 14 1 336 1 44 1 197 2 296 1 256 1 277 1 298 1 96 1 235 1 100 1 178 1 49 1 154 1 
144 1 24 1 181 1 292 1 44 1 197 1 33 1 54 1 35 1 331 1 
144 5 222 2 205 2 91 5 293 1 2 10 369 2 93 5 370 2 197 5 296 2 35 5 328 5 237 1 280 2 
144 1 292 1 51 1 57 1 49 1 238 1 
365 1 367 1 183 1 51 2 132 1 286 4 33 1 309 1 54 2 35 2 325 1 220 2 38 4 57 3 165 1 331 2 291 2 224 1 13 1 44 2 231 2 197 2 275 1 358 1 179 2 344 4 49 3 363 1 238 4 
320 1 365 1 286 1 137 2 82 1 288 3 309 1 325 1 8 1 371 3 252 1 164 1 38 1 192 1 316 1 350 1 13 1 336 1 337 1 231 1 276 1 277 2 175 1 176 1 127 1 258 1 19 1 100 2 178 2 344 1 75 1 154 2 
144 4 292 2 91 2 2 4 93 2 44 1 197 1 33 1 35 2 54 1 328 2 220 1 168 1 331 1 291 1 
169 1 37 1 185 1 
169 1 37 1 185 1 
271 1 169 1 114 1 37 1 159 1 
169 1 37 1 185 1 
150 1 169 1 37 1 
150 1 169 1 37 1 
150 1 169 1 37 1 
169 1 37 1 
187 1 89 1 
202 1 156 1 244 1 106 1 208 5 245 2 137 2 82 1 370 1 289 1 9 3 372 1 168 1 192 10 11 1 316 1 350 1 270 1 66 1 195 1 337 1 296 1 95 1 127 5 
202 1 156 1 106 1 244 1 208 7 245 2 369 1 137 4 82 2 370 2 289 1 9 4 372 1 168 1 11 1 192 13 316 2 350 2 270 1 318 1 66 1 195 2 337 2 296 1 232 1 95 2 127 6 280 1 
156 1 244 1 106 1 205 1 208 7 28 1 245 1 322 2 369 2 137 8 82 4 370 2 289 1 86 1 9 3 192 12 316 4 350 4 318 1 195 2 337 4 296 1 95 1 127 5 303 1 280 2 239 1 
156 1 244 1 106 1 205 1 208 7 28 1 245 2 322 2 369 2 137 8 82 4 370 2 289 1 86 1 9 3 192 12 316 4 350 4 318 1 195 1 337 4 296 1 95 1 127 5 303 1 280 2 239 1 
202 1 156 1 244 1 106 1 208 5 245 2 137 2 82 1 370 1 289 1 9 3 372 1 168 1 192 10 11 1 316 1 350 1 270 1 66 1 195 1 337 1 296 1 95 1 127 5 
156 1 244 1 106 1 205 1 208 7 28 1 245 2 322 2 369 2 137 6 82 3 370 2 289 1 86 1 9 4 192 12 316 3 350 3 195 2 337 3 296 1 95 1 127 5 303 1 280 2 239 1 
202 1 156 1 106 1 244 1 205 1 208 11 28 1 245 3 322 2 369 2 137 8 82 4 370 3 289 1 86 1 9 5 372 1 168 1 11 1 192 20 316 4 350 4 270 1 318 1 66 1 195 2 337 4 296 2 95 1 127 9 303 1 280 2 239 1 
156 1 106 1 244 1 205 1 208 7 28 1 245 2 369 2 247 1 137 4 82 2 370 2 289 1 86 1 9 4 192 12 316 2 350 2 195 2 337 2 296 1 95 1 127 5 303 1 280 2 239 1 
11 2 192 4 208 2 270 2 245 2 66 2 195 2 127 2 9 4 372 1 
202 1 156 1 106 1 244 1 205 1 208 11 28 1 245 3 322 2 369 2 247 1 137 8 82 4 370 3 289 1 86 1 9 5 372 1 168 1 11 1 192 20 316 4 350 4 270 1 66 1 195 2 337 4 296 2 95 1 127 9 303 1 280 2 239 1 
202 1 192 8 11 1 208 4 350 2 316 2 270 1 245 2 195 1 66 1 322 1 82 2 137 4 370 1 337 2 296 1 127 4 9 3 372 1 168 1 
143 1 202 1 11 1 192 8 208 4 270 1 245 2 66 1 195 1 370 1 296 1 127 4 9 3 372 1 168 1 
192 4 205 1 350 1 316 1 208 2 245 1 318 1 195 1 369 1 82 1 137 2 337 1 370 1 296 1 127 2 9 2 280 1 
156 1 192 7 205 1 244 1 208 3 245 1 195 1 369 1 370 1 296 1 232 1 95 2 127 4 9 2 280 1 
202 1 244 2 205 2 208 11 245 5 322 2 369 2 136 1 82 2 137 4 370 3 34 1 9 9 372 1 168 1 11 1 192 23 350 2 316 2 270 2 66 2 195 4 376 1 337 2 232 1 296 3 95 2 127 12 280 2 
192 1 95 1 127 1 
192 1 244 1 208 1 
192 6 205 1 316 1 350 1 208 3 318 1 245 2 195 2 369 1 137 2 82 1 337 1 370 1 296 1 127 3 9 4 237 1 280 1 
156 1 244 1 106 1 205 1 208 7 28 1 245 2 369 2 137 2 82 1 370 2 289 1 86 1 9 4 192 12 316 1 350 1 195 2 337 1 296 1 95 1 127 5 303 1 280 2 239 1 
202 1 192 6 208 3 270 1 245 1 66 1 195 1 370 1 296 1 127 3 9 2 
11 1 192 3 208 1 350 1 316 1 270 1 245 1 195 1 66 1 322 1 82 1 137 2 337 1 34 1 127 2 9 2 372 1 
202 1 192 10 208 5 270 1 245 2 66 1 195 2 370 2 296 2 235 1 127 5 9 4 
192 2 106 1 350 1 316 1 208 2 195 1 82 1 137 2 337 1 370 1 9 1 280 1 
192 4 106 1 205 1 350 1 316 1 208 2 245 1 369 1 82 1 137 2 337 1 370 1 296 1 127 2 9 1 280 1 
192 2 106 1 350 1 316 1 208 1 270 1 245 1 66 1 195 1 82 1 137 2 337 1 127 1 9 2 
202 2 156 1 106 1 244 3 205 2 208 17 78 1 245 6 322 2 369 3 264 1 247 1 137 10 82 5 370 5 34 1 311 1 9 12 372 1 168 1 11 1 192 34 316 5 350 5 270 3 318 1 66 3 195 6 337 5 232 1 296 4 95 4 127 17 280 3 
276 1 145 1 368 1 371 1 100 1 330 1 288 1 
145 1 368 1 158 1 172 1 173 1 288 1 276 1 267 1 47 1 100 1 371 1 330 1 
365 1 143 1 231 1 358 1 309 1 224 1 13 1 325 1 286 1 38 1 344 1 
365 1 320 1 13 1 286 1 308 1 288 2 231 1 276 1 176 1 309 1 325 1 100 1 371 2 164 1 178 1 38 1 344 1 154 1 
365 2 320 2 13 1 306 1 170 1 286 1 308 1 288 2 338 1 339 1 276 1 176 1 309 1 325 3 100 2 371 2 164 1 178 2 38 1 179 1 344 1 180 1 154 1 
365 2 320 2 13 1 306 1 107 1 170 1 286 2 308 1 288 2 338 1 339 1 276 1 176 1 309 1 325 3 219 1 100 2 371 2 178 2 38 2 179 1 344 2 180 1 154 1 
365 1 320 1 144 1 292 1 13 1 107 1 286 3 287 1 323 1 231 1 338 1 138 1 309 1 325 4 163 1 221 1 57 2 38 3 179 1 344 3 180 1 49 2 238 1 
365 1 320 1 144 1 292 1 13 1 107 1 286 3 287 1 68 1 231 1 338 1 138 1 309 1 325 4 163 1 57 2 38 3 179 1 344 3 180 1 49 2 238 1 
309 1 13 1 286 1 38 1 344 1 354 1 
365 2 320 1 155 1 286 6 84 1 83 1 32 1 6 1 309 3 325 3 87 1 38 5 39 1 13 2 171 1 354 1 231 2 360 1 344 6 76 1 
269 1 316 1 350 1 137 2 308 1 82 1 324 1 337 1 288 1 175 1 216 1 258 1 100 1 371 1 178 1 154 1 
181 1 24 1 183 1 51 1 286 1 287 1 160 1 33 2 138 1 35 1 54 2 325 2 163 1 38 1 57 3 331 2 144 1 349 1 292 1 44 2 68 1 196 1 197 1 231 1 198 1 344 1 49 3 238 2 
320 1 365 1 283 1 13 1 286 1 324 1 354 1 138 1 309 2 325 2 87 1 38 1 344 1 
365 1 320 1 13 1 65 1 286 1 353 1 84 1 324 1 231 1 358 1 360 1 309 2 325 1 38 1 344 1 
320 1 365 1 13 1 65 1 286 2 353 1 84 1 360 1 309 2 325 1 152 1 38 2 179 1 344 2 
229 1 231 1 309 1 13 1 56 1 286 1 38 1 344 1 174 1 40 1 
286 1 38 1 344 1 76 1 324 1 
231 1 286 1 38 1 344 1 324 1 
231 1 147 1 286 1 38 1 39 1 344 1 324 1 
365 1 320 1 13 1 286 1 308 1 288 2 231 1 276 1 176 1 309 1 325 1 219 1 100 1 371 2 178 1 38 1 344 1 154 1 
155 1 320 1 365 1 13 1 286 1 84 1 360 1 309 2 325 1 87 1 38 1 179 1 344 1 
125 1 276 1 64 1 74 1 15 1 
144 1 315 1 64 1 292 1 306 1 170 1 67 1 287 1 15 2 160 1 228 1 94 1 339 1 125 2 276 1 57 2 21 1 74 2 49 2 
64 1 41 1 317 1 371 1 100 1 118 1 74 1 15 1 288 1 
94 1 64 1 228 1 
356 1 143 1 307 1 253 1 
356 1 278 1 257 1 307 1 48 1 210 1 253 1 
278 1 335 1 200 1 
356 1 278 3 223 2 18 1 257 3 307 1 48 1 210 1 352 1 263 1 253 1 10 1 
356 1 278 2 257 2 307 1 48 1 210 1 253 1 92 1 201 1 
229 1 356 1 278 1 257 1 128 1 48 1 210 1 352 1 302 1 148 1 40 1 
356 1 278 1 257 1 307 1 48 1 210 1 352 1 
278 1 257 1 307 2 48 1 210 1 352 1 253 1 
25 1 307 1 352 1 210 2 109 1 356 1 110 1 278 2 257 2 48 2 
307 1 352 1 210 1 148 1 356 2 278 3 53 1 139 1 257 3 161 1 48 1 253 1 201 2 
321 1 307 1 352 1 210 1 174 1 356 1 229 1 249 1 278 2 257 2 48 1 302 1 253 1 40 2 201 1 
307 1 352 1 210 2 285 1 92 1 148 1 356 2 278 4 139 1 257 4 48 2 253 1 201 2 
356 1 278 1 257 1 307 1 48 1 210 1 352 1 253 1 
223 1 307 2 210 1 263 1 148 1 356 3 233 1 278 4 139 1 18 1 257 4 48 1 253 2 201 2 
157 1 307 1 352 1 210 1 356 1 278 2 257 2 341 1 48 1 327 1 253 1 201 1 
223 2 307 1 352 1 210 1 263 2 356 1 278 3 18 1 257 3 48 1 348 1 253 1 
356 1 30 1 211 1 
278 1 257 1 48 1 210 1 352 1 130 1 
356 1 53 1 278 2 257 2 307 1 48 1 210 1 352 1 253 1 201 1 
206 1 
356 1 278 1 257 1 307 1 48 1 210 1 352 1 253 1 
356 1 53 1 278 3 223 1 257 3 307 1 48 1 210 1 352 1 253 1 201 1 
356 1 233 1 139 1 148 1 
356 1 307 1 

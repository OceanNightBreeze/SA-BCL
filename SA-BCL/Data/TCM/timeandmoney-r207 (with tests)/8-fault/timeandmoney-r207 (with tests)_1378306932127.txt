#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testAllocate1()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver2()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver10()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 270 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 270 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (192,306) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (192,306) 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (192,306) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (192,306) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (192,306) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (192,306) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (192,306) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (192,306) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (192,306) 135 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (192,306) 135 183 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 270 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 270 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 270 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 276 350 259 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 270 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 270 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 270 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 174 (52,239) (52,239) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 3976 | stmt -> ;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1326 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | != -> ==
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONSTANT | 6207 | 1 -> 0
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification; | RETURN | 587 | return null
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | CONDITION | 675 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7967 | stmt -> ;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
26 1 59 2 108 3 166 1 52 1 167 1 184 3 63 1 208 1 266 1 275 2 286 1 174 1 239 1 
26 4 50 2 108 9 52 1 184 9 206 1 208 3 266 6 226 1 161 1 286 1 209 1 89 1 59 2 166 1 167 1 273 1 143 1 345 2 63 2 347 1 301 1 275 2 348 2 174 4 150 1 102 2 323 1 239 1 
26 4 50 2 108 9 52 1 184 9 206 1 208 3 266 6 226 1 161 1 286 1 209 1 89 1 59 2 166 1 167 1 273 1 143 1 345 2 63 2 347 1 301 1 275 2 348 2 174 4 150 1 102 2 323 1 239 1 
26 4 50 2 108 9 52 1 184 9 206 1 208 3 266 6 226 1 161 1 286 1 209 1 89 1 59 2 166 1 167 1 273 1 143 1 345 2 63 2 347 1 301 1 275 2 348 2 174 4 150 1 102 2 323 1 239 1 
26 3 50 1 108 7 52 1 184 7 206 1 208 2 266 4 226 1 161 1 286 1 209 1 89 1 59 2 166 1 167 1 273 1 143 1 345 2 63 2 347 1 301 1 275 2 348 2 174 3 102 2 323 1 239 1 
26 2 50 2 108 4 52 1 184 4 266 3 208 1 226 1 89 1 59 1 166 1 167 1 345 1 275 1 348 1 174 2 150 1 102 1 239 1 
59 1 108 2 166 1 263 1 52 1 167 1 273 1 184 2 345 1 63 1 301 1 275 1 348 1 279 1 251 1 239 1 
26 4 50 2 108 9 52 1 184 9 208 3 266 7 286 1 209 1 226 1 89 1 187 1 316 1 59 2 166 1 167 1 143 1 345 1 63 1 275 2 348 1 174 4 150 1 102 1 239 1 
26 4 50 2 108 9 52 1 184 9 208 3 266 7 286 1 209 1 226 1 89 1 187 1 316 1 59 2 166 1 167 1 143 1 345 1 63 1 275 2 348 1 174 4 150 1 102 1 239 1 
177 1 217 1 325 1 232 1 233 1 14 1 296 1 310 1 160 1 175 1 101 1 335 1 151 1 268 1 
298 1 
261 1 314 1 101 2 335 1 151 2 11 1 298 1 17 1 
240 1 22 2 95 1 23 1 261 1 109 1 11 1 298 1 31 1 256 1 224 1 172 1 237 2 321 2 314 2 101 5 280 1 335 2 151 5 
270 1 
317 1 331 2 298 1 
177 2 160 2 217 2 232 1 233 2 281 1 14 2 296 2 
177 3 327 2 49 1 328 1 281 1 156 1 309 1 204 1 86 1 7 1 160 2 34 1 186 1 90 2 334 1 230 1 56 1 69 1 58 1 217 2 232 1 233 2 341 1 121 1 14 2 98 2 60 1 73 2 235 1 296 3 220 1 198 1 45 2 349 1 46 1 21 1 83 1 
177 1 160 1 310 1 217 1 232 1 233 1 175 1 14 1 296 1 268 1 
177 1 241 1 153 1 261 1 296 1 298 1 159 1 160 1 311 1 175 1 101 1 304 1 151 1 305 1 
177 1 153 1 217 1 233 1 261 1 14 1 296 1 298 1 160 1 311 1 175 1 101 2 151 2 304 1 305 1 
314 1 182 1 101 1 335 1 151 1 
261 1 314 1 101 2 335 1 151 2 66 1 11 1 298 1 
314 1 101 1 151 1 
177 2 24 1 217 1 233 1 281 2 14 1 296 2 32 1 160 2 
185 1 285 1 215 1 
177 1 327 1 49 1 339 1 281 1 341 1 98 1 156 1 60 1 296 1 86 1 198 1 186 1 90 1 349 1 334 1 
177 2 49 1 233 1 327 1 341 1 141 1 60 1 14 1 98 1 156 1 86 1 296 2 285 1 160 1 198 1 186 1 90 1 334 1 278 1 349 1 
270 1 
177 3 160 3 217 1 233 3 278 1 281 1 14 3 296 3 
177 1 160 1 233 1 175 1 14 1 296 1 268 1 
177 1 32 1 160 1 24 1 217 1 233 1 175 1 14 1 296 1 
177 4 153 1 49 1 327 1 328 1 281 1 156 1 309 1 86 1 32 1 160 3 34 1 311 1 186 1 90 1 334 1 56 1 69 1 217 2 232 1 233 3 341 1 141 1 121 1 60 1 14 3 98 1 73 2 235 1 296 4 220 1 274 1 198 1 45 1 278 1 349 1 46 1 175 1 101 1 304 1 151 1 152 1 305 1 83 1 
177 2 159 1 160 2 233 1 278 1 281 1 14 1 93 1 296 2 
177 3 153 1 217 1 233 3 141 1 14 3 296 3 298 1 32 1 274 1 160 3 265 1 311 1 278 2 101 1 175 1 151 1 304 1 305 1 
177 2 217 1 233 2 14 2 296 2 185 1 32 1 160 2 285 1 278 1 
177 1 327 1 49 1 281 1 341 1 98 1 156 1 60 1 296 1 86 1 198 1 186 1 90 1 349 1 334 1 
177 1 129 1 327 1 49 1 42 1 281 1 341 1 98 1 296 1 86 1 198 1 186 1 90 1 349 1 334 1 
65 1 330 1 309 1 185 2 285 2 33 1 34 2 228 1 230 2 56 1 215 2 231 1 40 1 119 1 194 1 121 1 73 2 235 1 220 1 144 1 45 4 46 1 80 1 82 1 
177 1 160 1 171 1 233 1 175 1 14 1 304 1 296 1 
177 5 165 1 217 1 233 4 281 1 141 1 14 4 296 5 32 1 159 1 160 5 225 1 278 2 93 1 
177 2 160 2 171 1 233 2 175 1 14 2 296 2 268 1 
70 1 192 1 
70 1 192 1 
70 1 192 1 
70 1 192 1 
247 1 306 1 
247 1 306 1 
247 1 306 1 
70 1 192 1 
70 1 192 1 
70 1 192 1 
70 1 192 1 
70 1 192 1 
70 1 192 1 
70 1 135 1 242 1 192 1 
70 1 135 1 101 1 242 1 151 1 183 1 192 1 
345 2 315 1 279 1 102 1 354 2 
345 1 348 1 102 1 
345 1 348 1 279 1 
345 3 315 1 279 1 102 2 283 1 354 1 
345 2 238 1 315 1 279 1 102 1 354 1 
22 1 23 3 179 2 261 1 109 1 181 1 331 3 8 1 11 1 54 1 228 1 314 1 335 4 36 1 38 1 57 2 337 1 40 1 41 1 317 1 71 1 118 1 194 1 298 2 277 2 321 1 237 1 199 1 101 5 280 2 151 5 82 1 
258 1 101 1 335 1 151 1 
22 1 23 3 179 2 261 1 181 1 331 4 31 1 54 1 228 1 335 2 38 1 57 1 40 1 41 1 317 2 71 1 118 1 194 1 298 3 321 1 237 1 277 2 101 3 280 2 151 3 82 1 
177 1 1 1 179 2 261 1 181 1 310 1 54 1 228 1 268 1 57 1 232 1 317 2 233 1 194 1 14 1 237 1 321 1 277 2 101 3 280 2 151 3 22 1 23 3 325 1 331 4 31 1 160 1 116 1 335 2 38 2 40 1 217 1 41 1 118 1 71 1 294 1 296 1 298 3 175 1 82 1 
212 1 
270 1 
198 1 142 1 
198 1 186 1 
198 3 186 1 223 1 218 1 86 1 105 2 
198 1 186 1 86 1 
198 1 44 1 
231 2 202 1 119 3 293 1 194 1 155 1 344 1 246 2 284 1 113 1 195 1 123 1 34 3 45 7 228 1 288 1 230 4 191 1 
202 2 2 3 155 2 309 1 110 1 284 1 246 3 113 1 205 1 207 1 34 15 54 3 228 4 288 5 230 16 191 1 231 5 40 3 120 1 119 10 293 2 194 4 73 2 344 1 235 1 168 4 195 2 220 1 62 1 45 31 46 1 149 1 125 1 82 3 
202 1 262 1 155 1 309 2 246 2 284 1 113 1 207 1 34 4 228 1 288 1 230 5 191 1 231 3 140 1 119 4 293 1 194 1 73 4 235 2 195 1 220 2 45 9 46 2 
231 2 202 1 119 3 293 1 194 1 155 1 344 1 246 2 284 1 113 1 195 1 34 3 45 7 228 1 288 1 230 4 191 1 
231 2 202 1 119 3 293 1 194 1 155 1 344 1 246 2 284 1 113 1 195 1 34 3 45 7 228 1 288 1 230 4 191 1 
324 1 307 2 260 2 49 1 59 1 327 1 108 1 341 1 98 1 329 1 6 1 184 1 18 1 63 2 198 1 275 1 186 1 312 1 124 1 90 1 349 1 148 1 104 2 
307 1 260 1 3 1 327 1 49 1 108 1 283 1 184 1 134 1 90 1 214 1 193 1 59 1 340 1 166 1 341 1 98 1 295 1 16 1 345 2 63 1 275 1 348 1 279 1 102 1 104 1 
307 1 260 1 3 1 327 1 49 1 108 2 52 1 283 1 9 1 184 2 134 1 266 1 90 1 214 1 193 1 59 1 166 1 341 1 98 1 295 1 167 1 16 1 345 2 63 1 275 1 348 1 279 1 102 1 239 1 104 1 
307 1 260 1 3 1 327 1 49 1 108 3 52 1 283 1 184 3 134 1 266 2 313 1 90 1 214 1 193 1 59 1 340 1 341 1 98 1 295 1 167 1 18 1 345 2 63 1 275 1 348 1 279 1 102 1 239 1 104 1 
307 1 260 1 327 1 49 1 108 2 52 1 283 1 184 2 134 1 266 2 313 1 90 1 214 1 340 1 341 1 98 1 295 1 167 1 345 2 63 1 348 1 279 1 102 1 239 1 104 1 
100 1 
177 1 178 2 49 1 261 1 51 2 180 2 6 1 11 3 87 1 227 2 311 1 186 1 88 1 90 2 91 1 314 6 317 2 98 2 196 2 198 1 20 1 237 1 321 1 148 1 64 2 101 5 280 2 151 5 22 1 241 1 153 1 23 2 327 2 109 1 331 2 159 1 160 1 115 2 287 1 289 1 250 1 117 4 118 1 341 1 296 1 298 2 169 1 173 1 349 2 47 1 175 1 77 1 304 1 127 1 305 1 
177 1 153 1 241 1 178 1 11 1 160 1 159 1 311 1 88 1 91 1 314 2 250 1 117 2 296 1 17 1 101 3 175 1 77 1 151 3 304 1 127 1 305 1 
177 1 153 1 241 1 261 1 11 1 160 1 159 1 311 1 115 1 88 1 91 1 314 1 250 1 117 3 296 1 298 1 17 1 101 3 175 1 77 1 151 3 304 1 127 1 305 1 
177 1 153 1 241 1 178 1 261 1 11 1 160 1 159 1 311 1 115 1 88 1 91 1 314 2 250 1 117 3 296 1 17 1 298 1 101 3 175 1 64 1 77 1 151 3 304 1 127 1 305 1 
177 1 178 4 261 5 51 2 180 2 11 3 311 1 227 2 88 1 91 1 314 7 269 1 317 2 17 1 196 2 237 1 321 1 64 4 101 5 280 1 151 5 22 1 153 1 241 1 23 1 109 1 112 1 159 1 160 1 115 4 35 1 289 1 250 1 292 1 117 6 296 1 298 5 169 1 257 1 175 1 77 1 304 1 127 1 305 1 
177 1 178 2 261 1 51 2 180 2 11 2 311 1 227 2 88 1 91 1 314 4 317 2 196 2 237 1 321 1 20 1 101 4 64 2 280 1 151 4 22 1 153 1 241 1 23 1 109 1 331 2 160 1 159 1 115 2 289 1 250 1 117 4 296 1 298 2 169 1 175 1 77 1 304 1 127 1 305 1 
177 1 22 1 153 1 241 1 178 2 23 1 261 1 51 2 180 2 109 1 11 2 160 1 159 1 115 2 227 2 311 1 88 1 35 1 91 1 314 4 289 1 250 1 269 1 117 4 317 2 296 1 298 1 196 2 169 1 321 1 257 1 237 1 64 2 101 4 175 1 77 1 280 1 151 4 304 1 127 1 305 1 
177 1 22 1 153 1 241 1 178 2 23 1 261 1 51 2 180 2 109 1 11 2 160 1 159 1 115 2 227 2 311 1 88 1 35 1 91 1 314 4 289 1 250 1 269 1 117 4 317 2 296 1 298 1 196 2 169 1 321 1 257 1 237 1 64 2 101 4 175 1 77 1 280 1 151 4 304 1 127 1 305 1 
177 1 22 1 130 1 153 1 241 1 178 2 23 1 261 1 51 2 109 1 131 1 331 2 11 2 160 1 159 1 115 2 311 1 88 1 91 1 314 4 250 1 269 1 117 4 342 1 296 1 298 1 196 2 169 1 299 2 321 1 237 1 64 2 101 4 175 1 77 1 176 2 280 1 151 4 304 1 127 1 305 1 
22 1 177 1 153 1 241 1 23 1 178 3 261 1 51 2 180 2 109 1 112 1 11 2 160 1 159 1 227 2 311 1 115 3 88 1 35 1 91 1 314 5 289 1 250 1 269 1 117 5 317 2 296 1 298 1 196 2 169 1 321 1 237 1 257 1 101 4 175 1 64 3 77 1 280 1 151 4 304 1 127 1 305 1 
22 1 177 1 153 1 241 1 23 1 178 3 261 1 51 2 180 2 109 1 112 1 11 2 160 1 159 1 227 2 311 1 115 3 88 1 35 1 91 1 314 5 289 1 250 1 269 1 117 5 317 2 296 1 298 1 196 2 169 1 321 1 237 1 257 1 101 4 175 1 64 3 77 1 280 1 151 4 304 1 127 1 305 1 
177 1 130 1 178 2 261 1 51 2 11 2 311 1 88 1 91 1 314 4 196 2 237 1 321 1 20 1 101 4 64 2 280 1 151 4 22 1 153 1 241 1 23 1 109 1 331 2 160 1 159 1 115 2 250 1 117 4 296 1 298 1 169 1 299 2 175 1 77 1 176 2 304 1 127 1 305 1 
177 1 49 2 327 8 309 2 6 1 7 2 9 1 160 1 33 1 53 1 34 1 186 2 90 8 230 1 56 2 253 1 233 1 340 1 341 2 14 1 98 7 121 2 319 1 73 4 296 1 235 2 75 1 220 2 236 1 198 3 145 1 45 2 278 1 349 2 46 2 148 1 21 1 352 1 83 1 
177 1 309 1 185 1 32 1 285 1 160 1 34 2 54 1 228 1 230 1 56 1 215 1 231 1 217 1 40 1 233 1 119 1 14 1 121 1 194 1 73 2 235 1 296 1 220 1 45 3 46 1 76 1 126 1 82 1 
220 1 33 1 270 1 46 1 121 1 73 2 309 1 235 1 56 1 
2 3 281 1 309 2 185 4 285 11 34 6 54 2 228 2 288 1 230 8 139 1 56 1 215 11 231 1 40 2 120 1 119 2 254 1 121 2 194 1 73 4 235 2 168 3 99 1 220 2 62 1 45 14 303 1 46 2 76 1 21 1 83 1 82 1 
177 2 49 1 327 1 154 1 281 1 156 1 309 1 86 1 185 1 160 1 34 1 186 1 90 1 334 1 230 1 56 1 336 1 233 1 339 1 341 1 141 1 60 1 98 1 121 1 14 1 73 2 296 2 235 1 220 1 198 1 45 2 146 1 349 1 278 1 46 1 76 1 21 1 83 1 
177 3 84 2 49 2 309 3 86 2 185 7 54 2 186 2 90 3 228 3 229 2 230 10 56 3 191 1 231 4 233 1 141 1 194 3 98 3 14 1 60 2 15 2 235 3 198 2 278 1 21 1 201 2 202 1 327 3 281 2 156 2 246 1 284 1 113 1 160 1 285 7 34 10 68 1 334 2 288 4 69 2 215 7 40 2 340 1 119 8 293 1 341 2 121 3 73 6 296 3 122 1 220 3 221 1 45 20 349 1 46 3 76 1 83 1 82 2 
40 1 119 1 121 1 309 1 73 2 235 1 185 1 220 1 285 1 33 1 144 1 45 2 228 1 288 1 46 1 230 2 56 1 215 1 
231 1 119 1 121 1 194 1 309 1 73 2 330 1 235 1 185 1 220 1 285 1 33 1 34 2 45 2 46 1 56 1 215 1 82 1 
309 1 185 2 285 2 33 1 34 2 54 1 228 1 288 1 230 2 56 1 215 2 231 1 40 1 119 2 121 1 194 1 73 2 235 1 220 1 45 4 46 1 82 1 
40 1 119 1 121 1 309 1 73 2 235 1 185 1 220 1 285 1 144 1 145 1 45 2 228 1 288 1 46 1 230 2 56 1 215 1 
231 1 119 1 121 1 194 1 309 1 73 2 330 1 235 1 185 1 220 1 285 1 34 2 145 1 45 2 46 1 56 1 215 1 82 1 
309 1 185 2 285 2 34 2 54 1 228 1 288 1 230 2 56 1 215 2 231 1 40 1 119 2 121 1 194 1 73 2 235 1 220 1 145 1 45 4 46 1 82 1 
231 1 40 1 119 2 194 1 121 1 309 1 73 2 235 1 185 2 220 1 285 2 34 2 54 1 45 4 228 1 288 1 46 1 230 2 56 1 215 2 82 1 
177 1 49 1 327 1 281 1 156 1 309 1 86 1 34 1 186 1 90 1 334 1 230 1 56 1 69 1 341 1 60 1 98 1 121 1 73 2 296 1 235 1 220 1 198 1 45 2 349 1 46 1 21 1 83 1 
177 1 129 1 49 1 327 1 281 1 309 1 86 1 34 1 186 1 90 1 334 1 230 1 56 1 42 1 341 1 98 1 121 1 73 2 296 1 235 1 220 1 346 1 198 1 45 2 349 1 46 1 21 1 83 1 
309 1 185 2 285 2 34 2 54 1 228 1 288 1 230 2 56 1 215 2 231 1 40 1 119 2 121 1 194 1 73 2 235 1 220 1 45 4 46 1 76 1 82 1 
177 1 49 1 327 1 156 1 309 1 86 1 9 1 185 2 285 2 34 2 54 1 186 1 90 1 228 1 334 1 288 1 230 2 229 1 56 1 215 2 69 1 231 1 40 1 119 2 341 1 194 1 60 1 98 1 121 1 73 2 296 1 235 1 220 1 198 1 45 4 46 1 82 1 
177 1 309 1 32 1 185 1 160 1 285 1 34 1 54 1 228 1 288 1 230 2 56 1 215 1 217 1 40 1 233 1 119 1 194 1 14 1 121 1 73 2 235 1 296 1 220 1 45 3 46 1 76 1 79 1 82 1 
2 1 25 1 326 2 309 2 34 10 54 3 333 1 136 1 228 3 288 3 92 1 190 1 230 9 252 2 291 1 231 3 140 1 40 3 120 1 119 6 194 3 73 4 235 2 168 2 220 2 62 1 45 19 46 2 353 1 82 3 
259 1 2 2 326 4 309 3 133 1 207 2 34 12 54 3 333 2 136 1 228 3 288 2 92 1 213 1 190 1 55 1 230 14 252 1 231 2 140 1 40 3 119 4 120 2 194 2 73 6 235 3 168 2 220 3 276 1 45 26 350 1 46 3 353 2 82 2 
259 1 2 3 309 3 133 1 54 4 136 1 228 5 92 1 230 20 55 1 190 1 191 1 231 4 140 1 194 5 235 3 62 1 276 1 202 1 326 4 284 1 246 1 113 1 207 1 34 21 333 1 288 4 213 1 291 1 252 1 40 4 119 8 120 3 293 1 73 6 168 4 74 1 220 3 45 41 46 3 350 1 82 4 353 2 
259 1 202 1 2 3 326 4 309 4 246 1 284 1 113 1 133 1 207 2 34 18 54 4 333 1 136 1 228 5 288 3 213 1 92 1 190 1 55 1 230 20 191 1 252 1 291 1 231 4 140 1 40 4 120 3 119 7 293 1 194 4 73 8 235 4 168 4 74 1 220 4 62 1 276 1 45 38 350 1 46 4 353 2 82 3 
259 1 202 1 2 4 326 4 309 2 246 1 284 1 113 1 133 1 207 1 34 25 54 7 333 1 136 1 228 8 288 7 213 1 92 1 190 1 55 1 230 27 139 2 191 1 252 1 231 7 140 1 40 7 120 2 119 14 293 1 194 8 73 4 235 2 168 4 220 2 62 2 276 1 45 52 350 1 46 2 353 1 82 7 
177 2 49 1 327 2 309 1 7 2 160 2 34 1 267 1 186 1 210 1 90 2 189 1 230 1 56 1 37 1 43 1 341 1 121 1 98 2 73 2 296 2 235 1 220 1 236 1 198 1 45 2 46 1 76 1 21 1 352 1 83 1 
307 1 49 1 327 1 341 1 97 1 98 1 6 1 245 1 198 1 186 1 312 1 90 1 349 1 148 1 
307 1 193 1 327 1 49 1 340 1 271 1 341 1 98 1 295 1 283 1 245 1 345 2 134 1 348 1 90 1 279 1 102 1 48 1 
307 1 193 1 49 1 327 2 340 1 271 1 341 1 98 2 295 1 283 1 245 1 9 1 345 2 134 1 348 1 90 2 279 1 102 1 48 1 
307 1 193 1 107 1 327 1 49 1 340 1 341 1 98 1 295 1 283 1 345 2 134 1 348 1 90 1 279 1 102 1 48 1 
297 1 
22 1 240 1 23 1 261 1 109 1 298 1 256 1 237 1 321 1 280 1 
40 2 23 5 179 5 317 5 194 2 331 10 298 5 54 2 277 5 228 2 188 1 322 2 280 5 201 1 82 2 
261 1 314 1 101 1 151 1 11 1 298 1 
0 1 22 2 23 2 49 1 327 4 308 1 109 1 6 1 87 2 11 2 31 1 186 1 90 4 287 1 314 4 118 2 341 1 72 2 98 4 61 1 198 1 321 2 237 2 349 2 47 1 148 1 101 3 280 2 151 3 
270 1 
22 1 23 1 261 1 109 1 180 1 331 1 11 1 227 1 314 1 289 1 317 1 298 2 321 1 237 1 101 1 280 1 151 1 
179 6 49 3 261 2 4 2 86 3 9 1 10 2 87 1 11 3 54 2 186 3 90 3 228 2 314 5 188 2 94 2 317 6 234 1 98 3 194 2 61 1 142 3 198 10 237 4 321 4 277 6 101 5 322 2 280 8 151 5 201 2 105 2 240 1 22 4 23 9 327 3 109 4 282 2 331 12 39 1 40 2 118 2 44 2 341 4 218 1 72 1 298 8 256 1 170 2 302 1 349 1 81 2 305 2 82 2 
259 1 22 2 23 5 2 1 179 4 261 1 109 2 331 6 11 1 133 1 54 1 228 1 314 1 213 1 40 1 317 3 120 1 255 1 194 1 168 1 298 4 276 1 277 4 321 2 237 2 350 1 101 1 322 1 280 3 151 1 82 1 
177 1 22 1 202 1 23 2 325 1 109 1 113 1 310 1 160 1 228 2 188 1 268 1 217 1 232 1 233 1 293 1 194 1 14 1 296 1 321 1 237 1 257 1 175 1 101 1 322 2 280 2 151 1 103 1 
177 3 327 1 49 1 328 1 281 1 156 1 309 1 86 1 160 2 34 1 186 1 90 1 334 1 56 1 69 1 217 2 232 1 233 2 341 1 98 1 14 2 60 1 121 1 73 2 235 1 296 3 220 1 198 1 45 1 349 1 46 1 83 1 
22 1 23 1 179 2 317 2 118 1 261 2 109 1 331 4 246 1 87 1 298 4 277 2 237 1 321 1 280 2 
147 1 243 1 272 1 219 1 128 1 
200 1 219 1 128 1 
200 1 219 1 128 1 
200 1 219 1 128 1 
203 1 219 1 128 1 
203 1 219 1 128 1 
203 1 219 1 128 1 
219 1 128 1 
70 1 192 1 
231 3 202 2 140 1 119 5 293 2 194 2 73 2 309 1 235 1 113 1 220 1 34 5 45 10 228 2 46 1 288 2 230 5 103 1 
140 1 40 1 119 1 309 1 73 2 235 1 220 1 45 2 228 1 46 1 288 1 230 2 
231 1 140 1 40 1 119 2 194 1 309 1 73 2 235 1 220 1 34 2 54 1 45 4 228 1 46 1 288 1 230 2 82 1 
291 1 231 1 202 1 140 1 119 2 293 1 309 3 73 6 29 1 235 3 220 3 207 1 34 2 45 3 46 3 288 1 230 1 
202 3 2 3 309 5 110 1 29 1 246 1 284 1 113 2 207 2 34 18 54 3 228 5 288 5 230 16 191 1 291 1 231 7 140 1 40 3 120 1 119 12 293 3 194 5 73 10 235 5 168 4 220 5 62 1 300 1 45 34 46 5 125 1 149 1 82 3 
259 1 202 1 2 1 309 1 246 1 284 1 113 1 34 4 228 1 230 4 191 1 231 2 140 1 120 1 119 2 293 1 194 1 73 2 235 1 168 1 220 1 45 8 46 1 
259 1 202 1 2 1 309 2 246 1 284 1 113 1 34 5 54 1 228 2 288 1 230 6 191 1 231 2 140 1 40 1 120 1 119 3 293 1 194 1 73 4 235 2 168 2 220 2 62 1 300 1 45 11 46 2 
259 1 202 1 2 1 309 3 246 1 284 1 113 1 133 1 207 1 34 10 54 2 228 3 288 1 213 1 230 9 191 1 231 3 140 1 40 2 120 1 119 4 293 1 194 3 73 6 235 3 168 1 220 3 300 1 276 1 45 19 46 3 350 1 82 2 
259 1 202 1 2 1 309 3 246 1 284 1 113 1 133 1 207 1 34 7 54 2 228 3 288 2 213 1 230 10 191 1 231 3 140 1 40 2 120 1 119 5 293 1 194 2 73 6 235 3 168 1 220 3 300 1 276 1 45 17 46 3 350 1 82 1 
259 1 202 1 2 1 309 1 246 1 284 1 113 1 34 4 228 1 230 4 191 1 231 2 140 1 120 1 119 2 293 1 194 1 73 2 235 1 168 1 220 1 45 8 46 1 
259 1 2 1 309 1 133 1 34 6 54 2 228 2 288 1 213 1 230 6 231 1 140 1 40 2 120 1 119 2 194 2 73 2 235 1 168 1 220 1 276 1 45 12 46 1 350 1 82 2 
259 1 202 1 2 1 309 4 246 1 284 1 113 1 133 1 207 2 34 8 54 2 228 3 288 2 213 1 230 10 191 1 231 3 140 1 40 2 120 1 119 5 293 1 194 2 73 8 235 4 168 1 220 4 300 1 276 1 45 18 350 1 46 4 82 1 
259 1 2 1 309 4 133 1 207 2 34 7 54 3 228 3 288 3 213 1 230 9 291 1 231 3 140 1 40 3 120 1 119 6 194 2 73 8 235 4 168 1 220 4 276 1 45 16 350 1 46 4 82 2 
231 3 202 3 119 6 293 3 194 1 284 1 113 1 34 4 45 7 228 1 288 3 230 3 191 2 
259 1 202 1 2 1 309 4 246 1 284 1 113 1 133 1 207 2 34 8 54 2 228 3 288 1 213 1 230 10 191 1 291 1 231 3 140 1 40 2 120 1 119 4 293 1 194 2 73 8 235 4 168 1 220 4 276 1 45 18 350 1 46 4 82 1 
231 2 202 1 119 3 293 1 194 1 309 2 73 4 235 2 246 1 284 1 113 1 220 2 207 1 34 4 45 8 228 1 288 1 46 2 230 4 191 1 
270 1 
231 1 40 1 119 2 194 1 309 1 73 2 235 1 220 1 34 2 300 1 54 1 45 4 228 1 46 1 288 1 230 2 82 1 
231 1 2 1 40 1 120 1 119 2 194 1 168 2 62 1 34 4 54 1 45 7 228 1 288 1 230 3 82 1 
202 2 2 2 309 2 29 1 246 1 284 1 113 1 207 2 34 12 54 2 228 3 288 4 230 11 139 1 191 1 231 5 40 2 119 9 293 2 194 3 73 4 235 2 168 2 99 1 220 2 62 1 45 23 46 2 82 2 
34 1 45 1 168 1 
2 1 45 1 230 1 
231 2 40 1 119 3 194 1 73 2 309 1 235 1 220 1 300 1 34 3 54 1 45 6 228 1 46 1 288 1 230 3 201 1 82 1 
259 1 2 1 309 1 133 1 34 6 54 2 228 2 288 1 213 1 230 6 231 1 140 1 40 2 120 1 119 2 194 2 73 2 235 1 168 1 220 1 276 1 45 12 46 1 350 1 82 2 
231 1 202 1 119 2 293 1 194 1 113 1 34 3 45 6 228 1 288 1 230 3 
231 1 202 1 119 2 293 1 309 1 73 2 29 1 235 1 284 1 220 1 207 1 34 2 45 3 288 1 46 1 230 1 191 1 
177 1 160 1 159 1 281 1 93 1 296 1 132 1 
177 1 106 1 281 1 296 1 132 1 158 1 12 1 159 1 160 1 162 1 138 1 93 1 
327 4 49 1 341 1 98 4 6 1 9 1 197 1 114 1 198 1 186 1 90 4 349 1 148 1 
327 2 49 1 318 1 338 1 341 2 72 1 98 2 86 1 19 1 198 1 186 1 90 2 68 1 78 1 
345 1 49 1 327 1 348 1 90 1 349 1 341 1 98 1 279 1 295 1 
327 2 49 1 340 1 43 1 341 1 98 2 9 1 198 1 186 1 90 2 352 1 
253 1 327 5 49 2 341 2 72 1 98 4 6 1 9 1 197 1 198 3 53 1 186 2 90 5 349 1 148 1 352 1 
327 5 49 2 96 1 341 2 72 1 98 4 6 1 9 1 197 1 198 3 53 1 186 2 90 5 349 1 148 1 352 1 
270 1 327 1 90 1 349 1 98 1 
177 2 233 1 327 1 49 1 281 1 341 1 14 1 98 1 60 1 86 1 296 2 160 1 198 1 186 1 90 1 334 1 278 1 349 1 
177 2 49 1 327 1 4 1 281 1 86 2 160 2 311 1 186 2 90 1 334 1 233 2 44 1 341 1 60 1 98 1 72 1 14 1 296 2 198 3 278 1 175 1 304 1 
177 2 129 1 49 1 327 2 4 1 281 1 86 2 160 2 114 1 311 1 186 2 90 2 334 1 233 2 44 1 341 1 98 2 72 1 14 1 296 2 198 3 278 1 175 1 304 1 
327 3 49 1 261 1 4 1 44 1 341 1 72 1 98 3 86 1 111 1 142 1 298 1 114 1 198 4 332 1 186 1 90 3 349 1 314 1 101 2 151 2 305 1 105 1 
327 3 49 1 261 1 4 1 44 1 341 1 72 1 98 3 86 1 142 1 298 1 114 1 170 1 198 4 186 1 90 3 349 1 314 1 101 2 151 2 305 1 105 1 
49 1 327 1 90 1 341 1 98 1 319 1 
253 1 327 7 49 2 318 1 338 1 340 1 218 1 341 3 98 6 319 1 7 1 86 1 9 1 30 1 75 1 53 1 198 3 186 2 90 7 349 2 352 1 
177 2 202 1 84 1 49 1 327 1 281 2 156 1 309 2 86 1 246 1 284 1 9 1 113 1 185 1 285 1 160 1 34 3 267 1 186 1 90 1 228 1 334 1 230 3 229 1 56 2 191 1 215 1 69 1 231 2 233 1 119 2 293 1 341 1 194 1 121 2 14 1 98 1 60 1 73 4 296 2 235 2 220 2 198 1 45 6 278 1 46 2 76 1 
240 1 22 2 23 1 327 1 261 1 109 2 10 1 11 1 90 1 314 2 335 1 94 1 98 1 61 1 142 1 298 1 256 1 170 1 198 2 321 2 237 2 349 1 101 3 280 1 151 3 81 1 305 1 105 1 
327 2 49 1 218 1 341 2 98 2 319 1 86 1 9 1 198 2 186 1 90 2 105 1 39 1 
177 2 129 1 233 1 327 1 49 1 281 1 341 1 14 1 98 1 86 1 296 2 160 1 198 1 186 1 90 1 334 1 278 1 349 1 
327 1 49 1 318 1 338 1 218 1 341 2 72 1 98 1 86 1 30 1 198 1 186 1 90 1 
177 1 160 1 210 1 189 1 5 1 296 1 164 1 37 1 351 1 
137 1 5 1 264 1 
281 1 244 1 5 1 164 1 351 1 
153 1 261 1 281 1 5 1 244 2 298 1 264 1 274 1 311 1 137 1 175 1 101 2 335 1 304 1 290 1 151 2 164 2 351 2 305 1 
59 1 108 1 166 1 52 1 167 1 184 1 275 1 239 1 
26 1 59 1 108 3 52 1 167 2 184 3 266 2 208 1 275 1 174 1 239 1 
59 1 27 1 108 2 166 1 343 1 52 1 167 1 184 2 266 1 275 1 187 1 239 1 
59 1 13 1 108 2 166 1 52 1 167 1 157 1 273 1 184 2 275 1 239 1 
211 2 163 1 174 2 28 1 
275 1 59 1 108 1 166 1 85 1 184 1 
59 1 108 2 166 1 52 1 167 1 184 2 143 1 266 1 275 1 239 1 
216 1 
59 1 108 1 166 1 52 1 167 1 184 1 275 1 239 1 
270 1 
59 1 108 1 52 1 167 1 184 1 275 1 239 1 
63 1 260 1 108 1 
59 1 222 1 13 1 108 2 166 1 52 1 167 1 273 1 184 2 275 1 239 1 
59 1 50 1 108 2 52 1 167 1 184 2 266 1 275 1 239 1 
26 1 59 1 108 1 166 1 184 1 345 1 275 1 226 1 348 1 174 1 102 1 
275 1 59 1 108 1 166 1 239 1 184 1 
275 1 59 1 108 1 174 1 166 1 52 1 239 1 184 1 
59 2 108 2 166 1 67 1 184 2 320 1 275 2 248 1 239 1 
26 1 59 1 108 3 166 1 52 1 167 1 184 3 143 1 266 2 208 1 275 1 209 1 174 1 239 1 
59 1 108 2 166 1 52 1 283 1 167 1 184 2 345 2 266 1 275 1 348 1 279 1 102 1 249 1 239 1 
26 1 59 1 50 1 108 3 166 1 52 1 167 1 184 3 266 2 208 1 275 1 174 1 150 1 239 1 
59 1 108 2 166 1 52 1 167 1 273 1 184 2 275 1 239 1 
208 1 26 1 174 1 167 1 
239 1 

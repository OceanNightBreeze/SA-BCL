#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 296 93 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 296 93 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (6,31) (6,31) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (6,31) 247 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (6,31) (6,31) 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | CONSTANT | 8014 | 0 -> 1
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 7053 | = null
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> %
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isPositive()Z | CONSTANT | 5332 | 0 -> -1
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1894 | return null
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 12316 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1740 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 4001 | = null
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
41 1 61 4 358 2 116 1 88 1 208 6 233 2 277 1 313 1 96 2 50 9 121 1 236 1 193 1 154 1 262 3 181 1 222 5 294 1 199 2 104 2 35 1 246 1 161 9 16 1 252 2 204 2 166 1 
41 1 61 4 358 2 116 1 88 1 208 6 233 2 277 1 313 1 96 2 50 9 121 1 236 1 193 1 154 1 262 3 181 1 222 5 294 1 199 2 104 2 35 1 246 1 161 9 16 1 252 2 204 2 166 1 
41 1 61 5 358 2 116 1 88 1 208 7 233 2 277 1 313 1 96 2 50 10 121 1 236 1 193 1 154 1 262 4 181 1 222 6 294 1 199 2 104 2 35 1 246 1 161 10 16 1 252 2 204 2 166 1 
41 1 61 3 358 2 116 1 88 1 208 4 233 2 277 1 313 1 96 2 50 7 236 1 193 1 154 1 262 2 181 1 222 4 294 1 199 1 104 2 35 1 246 1 161 7 16 1 252 2 204 2 166 1 
193 1 41 1 61 2 358 1 154 1 262 1 208 3 222 3 233 1 294 1 199 2 104 1 161 4 50 4 121 1 252 1 236 1 204 1 
193 1 152 1 358 1 154 1 77 1 222 1 233 1 313 1 161 2 96 1 50 2 297 1 252 1 236 1 204 1 166 1 
193 1 61 1 154 1 262 1 208 1 222 2 233 2 246 1 161 3 96 1 50 3 252 2 236 1 
61 4 41 1 358 1 208 7 233 2 96 1 50 9 121 1 236 1 193 1 154 1 262 3 125 1 181 1 222 5 294 1 199 2 104 1 246 1 83 1 161 9 16 1 252 2 204 1 
61 4 41 1 358 1 208 7 233 2 96 1 50 9 121 1 236 1 193 1 154 1 262 3 125 1 181 1 222 5 294 1 199 2 104 1 246 1 83 1 161 9 16 1 252 2 204 1 
312 1 141 1 209 1 
159 1 127 2 209 1 
171 1 191 2 150 2 259 1 320 2 118 2 2 2 197 2 
273 1 169 1 20 1 21 1 210 1 2 2 257 1 190 2 171 1 69 2 191 2 214 1 364 1 118 2 235 2 282 1 365 1 146 1 98 1 342 1 150 2 259 1 261 1 320 3 344 1 34 1 197 3 57 1 270 1 271 1 135 1 85 2 111 1 112 1 39 2 137 1 203 1 
259 1 150 1 151 1 320 1 2 1 197 1 191 1 187 1 118 1 162 1 
316 1 141 1 367 1 320 1 209 1 288 1 132 1 197 1 67 1 118 1 145 1 26 1 162 1 284 1 
259 1 141 1 150 2 367 1 151 1 320 2 209 1 2 2 288 1 132 2 197 2 67 1 191 2 187 1 118 2 145 2 162 2 284 1 97 1 
62 1 109 1 145 1 12 1 132 1 
62 1 141 1 371 1 100 1 145 2 209 1 12 1 132 2 
145 1 12 1 132 1 
62 1 259 1 150 1 151 1 320 1 2 1 132 1 197 1 191 1 187 1 145 1 118 1 162 1 97 1 
209 1 
62 1 141 1 371 1 145 2 209 1 220 1 12 1 132 2 
62 2 318 2 141 1 42 1 153 1 275 1 334 2 209 1 132 5 267 1 80 2 371 1 145 5 27 1 120 1 12 2 122 1 202 1 340 1 
342 1 150 1 21 1 261 1 320 2 2 1 343 1 257 1 190 1 197 2 79 1 69 1 108 1 364 1 135 1 118 1 85 1 146 1 111 1 98 1 
171 1 312 1 
168 1 150 1 320 2 2 1 345 1 360 1 197 2 171 1 191 1 118 2 162 1 
206 1 245 1 108 1 
342 1 21 1 261 1 320 1 257 1 190 1 197 1 310 1 171 1 69 1 135 1 364 1 85 1 146 1 111 1 98 1 
150 4 330 1 320 5 2 4 47 1 343 2 360 1 197 5 171 1 79 1 191 1 118 5 26 1 110 1 
150 1 187 1 320 1 118 1 162 1 2 1 197 1 
171 1 191 1 150 3 320 3 118 3 2 3 343 1 197 3 
150 1 187 1 320 1 118 1 162 1 2 1 197 1 
150 1 320 1 2 1 345 1 360 1 197 1 191 1 118 1 162 1 
20 1 21 1 2 3 257 1 190 1 360 1 171 1 67 1 69 1 191 2 214 1 364 1 118 3 145 1 235 1 282 1 365 1 146 1 284 1 98 1 342 1 150 3 367 1 259 1 261 1 320 4 288 1 241 1 344 1 343 1 34 1 132 1 197 4 79 1 57 1 270 1 36 1 135 1 85 1 162 1 111 1 112 1 39 2 203 1 
168 1 150 1 320 2 2 1 343 1 47 1 197 2 171 1 118 2 26 1 162 1 
367 1 150 3 320 3 209 1 2 3 241 1 288 1 343 2 360 1 132 1 197 3 79 1 67 1 191 1 145 1 118 3 162 1 354 1 284 1 
206 1 150 2 320 2 2 2 343 1 360 1 197 2 191 1 108 1 118 2 
342 1 261 1 21 1 320 1 257 1 190 1 197 1 171 1 69 1 135 1 364 1 85 1 146 1 111 1 98 1 
342 1 177 1 21 1 320 1 257 1 190 1 197 1 171 1 69 1 95 1 135 1 364 1 85 1 111 1 98 1 
167 1 304 1 206 2 169 2 20 1 305 1 255 1 91 1 282 1 235 4 215 1 365 1 176 1 219 1 344 1 290 1 34 2 131 1 158 1 245 2 108 2 112 1 39 2 203 1 
150 1 320 1 2 1 197 1 67 1 48 1 118 1 162 1 
335 1 287 1 
335 1 287 1 
229 1 339 1 
229 1 339 1 
229 1 339 1 
335 1 287 1 256 1 
335 1 287 1 248 1 
229 1 335 2 287 2 279 1 327 1 339 1 
335 1 287 1 256 1 
335 1 287 1 256 1 
335 1 287 1 175 1 
335 1 287 1 175 1 
335 1 287 1 175 1 
140 1 230 1 2 2 142 1 171 1 335 1 9 1 212 1 145 1 118 2 237 1 150 2 287 1 320 2 221 1 132 1 182 1 197 2 244 1 351 1 352 1 248 1 250 1 357 1 
113 1 114 2 287 2 209 1 180 1 132 2 182 1 142 3 78 1 335 2 244 2 160 1 17 1 145 2 327 1 250 2 374 1 237 2 357 2 
104 1 358 1 204 1 
358 1 152 1 204 1 
104 2 213 1 81 1 152 1 130 1 204 3 
104 1 213 1 81 1 152 1 44 1 204 2 
104 1 213 2 81 1 152 1 204 2 
62 4 304 1 42 2 207 1 141 1 305 1 1 2 230 1 334 1 209 2 91 1 9 1 145 5 12 1 318 1 176 1 55 2 127 3 128 1 293 1 132 5 156 1 267 1 80 1 371 1 351 1 159 1 269 1 353 1 87 2 38 1 202 3 
62 7 304 3 42 6 141 1 207 1 305 3 1 6 230 4 308 1 334 2 209 5 91 3 7 1 145 9 12 6 318 2 368 1 176 3 124 5 30 1 153 1 55 6 127 9 128 2 132 9 267 1 80 2 371 1 106 1 159 3 353 3 109 5 299 1 38 2 202 8 
62 2 141 1 304 1 42 2 305 1 230 1 1 2 334 1 209 3 91 1 145 3 318 1 176 1 153 1 55 2 127 4 128 1 293 1 132 3 80 1 159 2 269 1 353 1 87 1 38 1 202 3 
62 3 141 1 304 2 42 4 305 2 1 4 230 2 308 1 334 1 209 4 91 2 145 4 318 1 368 1 176 2 55 4 153 1 127 7 128 1 132 4 293 1 80 1 106 1 159 3 269 1 353 2 87 2 38 1 202 5 
312 1 21 1 28 1 
21 1 84 1 
306 1 
21 1 364 1 98 1 
21 1 60 1 
21 1 364 1 
21 3 364 1 201 1 71 1 28 2 98 1 
304 1 169 4 176 1 255 2 231 1 179 1 4 1 170 1 34 3 68 1 348 1 157 1 347 2 235 7 215 3 147 1 53 1 
304 1 169 4 176 1 255 2 231 1 179 1 4 1 170 1 34 3 68 1 348 1 157 1 347 2 235 7 215 3 147 1 53 1 
304 1 169 4 176 1 255 2 231 1 179 1 4 1 170 1 34 3 68 1 348 1 157 1 103 1 347 2 235 7 215 3 147 1 53 1 
304 4 169 16 305 3 20 1 231 1 255 5 3 1 4 1 170 1 91 3 68 5 282 1 235 31 215 10 52 1 147 2 366 3 53 2 176 4 179 1 344 1 33 4 34 15 264 1 348 2 157 2 347 3 58 1 373 1 353 3 326 1 112 1 39 2 227 1 
304 1 169 5 20 2 176 1 231 1 255 3 179 1 117 1 4 1 344 2 34 4 348 1 157 1 68 1 347 2 58 1 235 9 282 2 215 4 147 1 39 4 112 2 238 1 53 1 
205 1 358 1 307 1 208 1 190 1 233 1 23 1 69 1 96 1 50 2 283 1 236 1 216 1 193 1 342 1 152 1 154 1 56 1 155 1 222 1 130 1 104 1 107 1 161 2 135 1 85 1 252 1 40 1 204 2 253 1 
205 1 358 1 45 1 307 1 208 2 190 1 233 1 23 1 69 1 96 1 50 3 283 1 236 1 216 1 342 1 194 1 152 1 154 1 56 1 222 1 292 1 130 1 104 1 107 1 161 3 135 1 85 1 252 1 40 1 204 2 
205 1 358 1 307 1 208 2 190 1 69 1 96 1 50 2 283 1 236 1 216 1 342 1 194 1 152 1 154 1 56 1 222 1 292 1 130 1 104 1 107 1 161 2 135 1 85 1 204 2 
205 2 115 1 21 1 45 1 257 1 190 1 233 1 69 1 8 1 96 2 364 1 50 1 283 2 216 2 342 1 291 1 223 1 295 1 135 1 161 1 85 1 252 1 355 1 
205 1 358 1 307 1 190 1 233 1 23 1 69 1 96 1 50 1 283 1 216 1 193 1 342 1 194 1 152 1 56 1 155 1 130 1 104 1 107 1 161 1 135 1 85 1 252 1 40 1 204 2 
338 1 
318 1 334 1 257 1 190 1 132 1 267 1 69 1 80 1 93 1 296 1 145 1 85 1 12 1 202 1 38 1 
64 2 232 1 278 1 67 1 118 1 145 3 26 1 119 1 281 1 12 2 284 1 316 1 367 1 240 1 320 1 220 1 288 1 132 3 197 1 371 1 249 1 162 1 
141 1 64 3 232 1 209 1 278 1 67 1 118 1 145 3 26 1 119 1 281 1 12 1 284 1 316 1 367 1 320 1 220 1 288 1 132 3 197 1 371 1 249 1 162 1 302 1 
141 1 64 3 232 1 209 1 278 1 67 1 118 1 145 3 26 1 119 1 281 1 12 2 284 1 316 1 367 1 240 1 320 1 220 1 76 1 288 1 132 3 197 1 371 1 249 1 162 1 302 1 
141 5 42 1 334 1 232 1 276 2 278 1 145 5 281 1 11 1 12 7 284 1 285 2 286 2 54 1 240 4 288 1 195 2 197 1 159 2 249 1 162 1 301 1 202 1 302 4 303 1 64 6 209 5 67 1 118 1 70 1 119 1 26 1 316 1 318 1 367 1 320 1 76 4 220 1 132 5 267 1 80 1 371 3 372 1 188 1 
303 1 141 1 42 1 334 1 64 4 209 2 232 1 276 2 278 1 67 1 145 4 118 1 119 1 26 1 281 1 12 4 284 1 285 2 316 1 286 2 318 1 367 1 240 2 101 1 320 1 127 2 76 2 195 2 288 1 132 4 267 1 197 1 80 1 371 2 159 2 249 1 162 1 188 1 202 1 302 2 
303 1 141 1 42 1 334 1 64 4 209 1 232 1 276 2 278 1 67 1 118 1 145 4 70 1 11 1 26 1 119 1 281 1 12 4 284 1 285 2 316 1 286 2 318 1 367 1 240 2 320 1 76 2 195 2 288 1 132 4 197 1 267 1 80 1 371 2 159 2 372 1 249 1 162 1 188 1 202 1 302 2 
303 1 141 1 42 1 334 1 64 4 209 1 232 1 276 2 278 1 67 1 118 1 145 4 70 1 11 1 26 1 119 1 281 1 12 4 284 1 285 2 316 1 286 2 318 1 367 1 240 2 320 1 76 2 195 2 288 1 132 4 197 1 267 1 80 1 371 2 159 2 372 1 249 1 162 1 188 1 202 1 302 2 
303 1 141 1 42 1 334 1 64 4 209 1 232 1 276 2 278 1 67 1 144 1 118 1 145 4 11 1 26 1 119 1 281 1 12 4 284 1 316 1 318 1 367 1 240 2 320 1 127 2 76 2 195 2 288 1 132 4 266 1 197 1 267 1 105 1 80 1 371 2 349 2 249 1 162 1 202 1 302 2 138 2 
303 1 141 1 42 1 334 1 64 5 209 1 232 1 276 2 278 1 67 1 70 1 118 1 145 4 11 1 26 1 119 1 281 1 12 5 284 1 285 2 316 1 286 2 318 1 367 1 54 1 240 3 320 1 76 3 195 2 288 1 132 4 267 1 197 1 80 1 371 2 159 2 372 1 249 1 162 1 188 1 202 1 302 3 
303 1 141 1 42 1 334 1 64 5 209 1 232 1 276 2 278 1 67 1 70 1 118 1 145 4 11 1 26 1 119 1 281 1 12 5 284 1 285 2 316 1 286 2 318 1 367 1 54 1 240 3 320 1 76 3 195 2 288 1 132 4 267 1 197 1 80 1 371 2 159 2 372 1 249 1 162 1 188 1 202 1 302 3 
303 1 141 1 42 1 334 1 64 4 209 1 232 1 276 2 278 1 67 1 144 1 145 4 118 1 119 1 26 1 281 1 12 4 284 1 316 1 318 1 367 1 240 2 101 1 320 1 127 2 76 2 195 2 288 1 132 4 267 1 197 1 80 1 371 2 349 2 249 1 162 1 202 1 302 2 138 2 
206 1 304 1 20 1 169 3 231 1 255 2 4 1 312 1 171 2 282 1 235 6 215 2 365 1 176 1 179 1 344 1 290 1 34 3 157 1 348 1 347 1 245 1 108 1 112 1 39 2 203 1 
206 4 304 1 20 2 169 8 305 2 255 1 91 1 171 1 68 1 282 2 235 14 215 2 365 1 52 1 192 1 366 3 176 2 33 3 344 2 34 6 245 11 350 1 373 1 270 1 108 11 353 2 112 2 39 4 137 1 203 2 19 1 165 1 328 1 
206 1 20 1 169 1 21 1 2 1 257 1 190 1 310 1 171 1 69 1 364 1 118 1 282 1 235 2 174 1 146 1 365 1 192 1 98 1 342 1 150 1 319 1 261 1 320 2 343 1 344 1 34 1 197 2 79 1 370 1 270 1 135 1 85 1 111 1 39 2 112 1 203 1 137 1 
43 1 231 1 89 1 2 1 4 1 190 3 5 2 91 2 282 3 235 20 146 2 192 1 98 2 341 2 342 2 150 1 194 1 344 3 343 1 197 3 243 2 347 1 348 1 157 1 57 2 245 7 108 7 353 2 111 2 112 3 203 3 304 3 206 7 20 3 305 2 169 10 21 2 255 4 359 2 257 1 171 2 69 3 68 4 364 2 118 1 215 8 258 1 365 3 176 3 261 2 320 3 179 1 34 10 79 1 270 1 135 2 85 3 39 6 137 1 
329 1 273 2 331 1 20 2 169 1 21 3 2 1 257 2 190 7 69 8 8 1 364 2 118 1 282 2 235 2 51 1 365 2 73 1 148 1 342 2 150 1 194 1 123 1 320 1 290 1 343 1 344 2 34 1 197 1 270 1 135 2 85 8 300 1 112 2 39 4 203 2 137 1 355 1 253 1 
191 1 150 1 320 1 118 1 2 1 360 1 197 1 218 1 
206 1 20 1 305 1 169 2 176 1 290 1 344 1 68 1 158 1 245 1 108 1 235 2 282 1 215 1 365 1 39 2 112 1 203 1 
206 1 304 1 20 1 255 1 290 1 344 1 34 2 131 1 91 1 245 1 108 1 235 2 282 1 215 1 365 1 39 2 112 1 203 1 
206 2 304 1 169 2 305 1 20 1 255 1 91 1 68 1 282 1 235 4 215 2 365 1 176 1 344 1 290 1 34 2 245 2 108 2 353 1 112 1 39 2 203 1 
206 1 20 1 305 1 169 2 176 1 344 1 68 1 158 1 245 1 108 1 235 2 282 1 215 1 51 1 365 1 39 2 112 1 203 1 
206 1 304 1 20 1 255 1 344 1 34 2 131 1 91 1 245 1 108 1 235 2 282 1 215 1 51 1 365 1 39 2 112 1 203 1 
206 2 304 1 169 2 305 1 20 1 255 1 91 1 68 1 282 1 235 4 51 1 215 2 365 1 176 1 344 1 34 2 245 2 108 2 353 1 112 1 39 2 203 1 
206 2 304 1 169 2 305 1 20 1 255 1 91 1 68 1 235 4 282 1 215 2 365 1 176 1 344 1 34 2 245 2 108 2 353 1 112 1 39 2 203 1 
169 1 20 1 21 1 257 1 190 1 171 1 69 1 364 1 235 2 282 1 146 1 365 1 98 1 342 1 261 1 320 1 344 1 34 1 197 1 57 1 270 1 135 1 85 1 111 1 39 2 112 1 137 1 203 1 
169 1 20 1 21 1 257 1 190 1 171 1 69 1 95 1 364 1 235 2 282 1 365 1 98 1 342 1 177 1 320 1 32 1 344 1 34 1 197 1 270 1 135 1 85 1 111 1 39 2 112 1 137 1 203 1 
206 2 304 1 169 2 305 1 20 1 255 1 91 1 68 1 282 1 235 4 215 2 365 1 192 1 176 1 344 1 34 2 245 2 108 2 353 1 112 1 39 2 203 1 
304 1 206 2 169 2 305 1 20 1 21 1 255 1 190 1 91 1 68 1 69 1 364 1 235 4 282 1 215 2 146 1 365 1 98 1 342 1 341 1 176 1 261 1 320 1 344 1 34 2 197 1 57 1 245 2 108 2 135 1 353 1 85 1 111 1 39 2 112 1 203 1 253 1 
304 1 206 1 20 1 305 1 169 2 2 1 91 1 360 1 68 1 191 1 118 1 282 1 235 3 215 1 365 1 192 1 150 1 176 1 320 1 344 1 34 1 197 1 245 1 108 1 353 1 298 1 112 1 39 2 203 1 
0 1 304 1 20 2 169 4 305 1 255 1 91 1 68 1 336 1 362 1 282 2 235 9 215 2 52 1 366 1 238 1 176 1 260 1 33 2 344 2 34 5 82 1 373 1 353 1 18 1 136 1 251 1 112 2 39 4 
0 1 304 1 20 2 169 4 305 1 255 1 91 1 68 1 336 1 362 1 282 2 235 9 215 2 52 1 366 1 238 1 176 1 260 1 33 2 344 2 34 5 82 1 373 1 353 1 18 1 136 1 251 1 112 2 39 4 
0 1 304 7 20 2 169 24 305 6 231 1 255 6 4 1 91 6 68 6 234 1 362 3 282 2 235 46 215 12 52 2 366 4 238 1 29 1 176 7 260 1 179 1 129 1 289 1 33 4 344 2 34 22 133 1 347 1 348 1 157 1 82 1 58 1 373 2 353 6 18 1 136 1 251 1 112 2 39 4 164 1 165 2 
0 1 304 1 20 2 169 4 305 1 255 1 91 1 68 1 336 1 362 1 282 2 235 9 215 2 52 1 366 1 238 1 176 1 260 1 33 2 344 2 34 5 82 1 373 1 353 1 18 1 189 1 251 1 112 2 39 4 
0 2 304 1 20 3 169 11 305 2 255 1 91 1 68 1 234 1 362 3 282 3 235 20 215 2 366 2 238 1 29 1 176 2 260 1 129 1 344 3 33 2 289 1 34 9 133 1 82 1 58 2 373 2 353 2 18 1 136 1 251 2 112 3 39 6 164 1 
335 1 268 1 113 1 244 1 287 1 327 1 250 1 180 1 237 1 357 1 
212 1 248 1 
335 1 211 1 244 1 287 1 49 1 250 1 237 1 149 1 357 1 
13 1 256 1 
279 1 63 1 175 1 
113 1 114 1 287 1 209 1 180 1 182 1 132 1 142 2 78 1 335 1 244 1 160 1 17 1 145 1 327 1 250 1 237 1 357 1 
113 1 114 1 287 1 209 1 180 1 182 1 132 1 142 2 78 1 335 1 244 1 160 1 17 1 145 1 327 1 250 1 237 1 357 1 
113 1 114 1 287 1 209 1 180 1 182 1 132 1 142 2 78 1 335 1 244 1 160 1 17 1 145 1 327 1 250 1 237 1 357 1 
279 1 13 1 256 1 
279 1 13 1 256 1 
63 1 175 1 
279 1 63 1 175 1 
352 1 221 1 
62 1 140 1 114 1 230 1 2 2 142 1 171 1 335 1 9 1 212 1 145 1 118 2 237 1 150 2 287 1 320 2 221 1 132 1 197 2 78 1 244 1 351 1 352 1 248 1 250 1 375 1 357 1 
254 1 273 2 20 1 169 1 21 1 309 1 190 2 69 2 280 1 364 1 118 2 282 1 235 2 365 1 192 1 148 1 342 1 320 2 263 1 344 1 34 1 197 2 270 1 135 1 85 2 37 1 300 1 39 2 112 1 203 1 137 1 
342 1 194 1 358 1 152 1 307 1 56 1 190 2 14 1 265 1 130 1 183 1 69 2 104 1 135 1 85 2 216 1 204 2 40 1 253 1 
342 1 194 1 358 1 152 1 307 1 56 1 190 1 265 1 130 1 69 1 104 1 135 1 85 1 225 1 216 1 204 2 40 1 
342 1 21 1 75 1 257 1 223 1 190 1 183 1 69 1 8 1 135 1 364 1 85 1 216 1 355 1 
342 1 194 1 358 1 152 1 307 1 56 1 190 1 14 1 265 1 130 1 183 1 69 1 104 1 135 1 85 1 216 1 204 2 40 1 
102 1 
312 1 141 1 42 1 275 1 209 1 120 1 202 1 
42 1 141 1 334 1 209 2 145 1 12 1 285 1 286 1 318 1 127 1 132 1 267 1 80 1 371 1 159 1 188 1 202 1 
139 2 141 2 42 8 1 6 332 2 275 1 334 4 190 3 5 2 91 2 94 2 145 5 12 5 98 3 342 3 55 6 159 6 15 2 200 2 353 2 202 9 163 2 60 2 253 1 304 2 305 2 21 10 65 1 209 8 257 1 311 1 69 3 364 3 120 1 71 1 28 2 318 4 367 2 176 2 178 2 127 12 323 1 369 1 132 5 267 4 80 4 134 2 371 3 324 1 84 3 135 4 85 3 38 2 228 1 
42 5 304 2 141 2 305 2 1 5 334 2 209 5 91 2 234 1 145 1 12 1 315 1 366 1 29 1 318 2 178 1 176 2 55 5 126 1 127 6 33 1 289 1 132 1 267 2 133 1 80 2 371 1 324 1 159 3 200 2 373 1 353 2 38 1 202 8 164 1 
42 2 304 1 334 1 2 1 4 1 191 1 70 1 145 1 118 1 97 1 318 1 259 1 150 1 151 1 178 1 176 2 320 1 132 1 197 1 267 1 348 1 157 1 80 1 187 1 200 2 162 1 272 1 202 2 
318 1 42 1 141 1 275 1 334 1 209 1 267 1 80 1 120 1 202 1 
42 5 304 2 305 2 178 1 176 2 55 5 1 5 127 10 209 5 5 1 91 2 159 5 200 2 353 2 202 5 
141 1 371 1 145 1 209 1 12 1 132 1 
318 1 334 1 257 1 190 1 267 1 69 1 80 1 93 1 85 1 296 1 12 1 202 1 38 1 228 1 
20 1 21 1 2 2 257 1 190 1 171 1 69 1 191 2 214 1 364 1 118 2 235 1 282 1 146 1 365 1 98 1 342 1 150 2 259 1 261 1 320 3 344 1 34 1 197 3 57 1 270 1 135 1 85 1 111 1 112 1 39 2 203 1 
318 1 42 2 141 2 55 2 1 2 127 4 334 1 209 4 267 1 347 1 80 1 159 2 324 1 38 1 202 1 
25 1 250 1 237 1 
113 1 314 1 221 1 250 1 237 1 
25 1 250 1 237 1 
25 1 250 1 237 1 
250 1 66 1 237 1 
250 1 66 1 237 1 
250 1 66 1 237 1 
250 1 237 1 
335 1 287 1 
304 1 20 1 169 4 231 1 255 2 4 1 235 8 282 1 215 2 366 1 238 1 176 1 179 1 33 1 344 1 34 4 347 1 157 1 348 1 373 1 112 1 39 2 164 1 
304 1 20 2 169 6 305 1 255 2 231 1 4 1 68 1 235 11 282 2 215 3 52 1 366 1 238 1 217 1 176 2 179 1 33 2 344 2 34 5 347 1 348 1 157 1 373 1 353 1 112 2 39 4 164 1 
304 3 20 3 169 9 305 2 231 1 255 3 4 1 91 2 68 1 234 1 235 19 282 3 215 4 366 1 217 1 238 1 29 1 176 3 179 1 33 1 344 3 289 1 34 10 133 1 347 1 348 1 157 1 58 1 373 1 353 2 112 3 39 6 164 1 
304 2 20 3 169 10 305 2 231 1 255 3 4 1 91 1 68 2 234 1 235 17 282 3 215 5 366 1 217 1 238 1 29 1 176 3 179 1 33 1 344 3 289 1 34 7 133 1 347 1 348 1 157 1 58 1 373 1 353 2 112 3 39 6 164 1 
304 1 20 1 169 4 231 1 255 2 4 1 235 8 282 1 215 2 366 1 238 1 176 1 179 1 33 1 344 1 34 4 347 1 157 1 348 1 373 1 112 1 39 2 164 1 
304 2 20 1 169 6 305 2 255 1 91 2 68 1 234 1 235 12 282 1 215 2 366 1 238 1 29 1 176 2 33 1 344 1 289 1 34 6 133 1 373 1 353 2 112 1 39 2 164 1 
304 2 20 4 169 10 305 2 231 1 255 3 4 1 91 1 68 2 234 1 235 18 282 4 215 5 366 1 217 1 238 1 29 1 176 3 179 1 33 1 344 4 289 1 34 8 133 1 347 1 348 1 157 1 58 2 373 1 353 2 112 4 39 8 164 1 
304 2 20 4 169 9 305 3 255 3 91 2 68 3 234 1 336 1 235 16 282 4 215 6 366 1 238 1 29 1 176 3 33 1 344 4 289 1 34 7 133 1 58 2 373 1 353 3 112 4 39 8 164 1 
304 1 169 3 176 1 231 1 255 3 179 2 4 1 34 4 157 3 348 3 68 3 235 7 215 6 
304 2 20 4 169 10 305 2 231 1 255 3 4 1 91 1 68 1 234 1 336 1 235 18 282 4 215 4 366 1 238 1 29 1 176 3 179 1 33 1 344 4 289 1 34 8 133 1 347 1 348 1 157 1 58 2 373 1 353 2 112 4 39 8 164 1 
304 1 169 4 20 2 176 1 255 2 231 1 179 1 4 1 344 2 34 4 347 1 68 1 157 1 348 1 58 1 235 8 282 2 215 3 39 4 112 2 
304 1 169 3 176 1 231 1 255 2 179 1 4 1 34 3 347 1 312 1 157 1 348 1 235 6 215 2 
304 1 20 1 305 1 169 2 176 1 255 1 344 1 34 2 91 1 68 1 353 1 282 1 235 4 215 2 39 2 112 1 217 1 
304 1 169 3 305 1 176 1 255 1 33 2 34 4 91 1 68 1 373 1 353 1 235 7 215 2 52 1 366 1 
304 3 305 2 169 11 20 2 231 1 255 5 4 1 91 2 68 4 235 23 282 2 215 9 52 1 366 2 176 3 179 1 33 2 344 2 34 12 242 1 347 1 348 2 157 2 58 2 353 2 39 4 112 2 165 1 328 1 
235 1 33 1 34 1 
169 1 235 1 366 1 
304 1 20 1 305 1 169 3 176 1 255 2 344 1 5 1 34 3 91 1 68 1 353 1 282 1 235 6 215 3 112 1 39 2 217 1 
304 2 20 1 169 6 305 2 255 1 91 2 68 1 234 1 235 12 282 1 215 2 366 1 238 1 29 1 176 2 33 1 344 1 289 1 34 6 133 1 373 1 353 2 112 1 39 2 164 1 
304 1 169 3 176 1 255 1 4 1 34 3 157 1 348 1 68 1 235 6 215 2 
169 1 20 1 255 1 231 1 179 1 344 1 242 1 34 2 68 1 348 1 157 1 58 1 235 3 282 1 215 2 39 2 112 1 
304 2 20 1 169 5 176 2 255 3 344 1 4 1 34 5 157 2 348 2 68 2 282 1 235 10 272 1 215 5 112 1 39 2 238 1 
20 1 305 1 169 2 176 1 344 1 68 1 282 1 235 2 215 1 39 2 112 1 238 1 
304 1 20 1 305 1 169 2 176 1 255 1 344 1 34 2 91 1 68 1 353 1 282 1 235 4 215 2 39 2 112 1 238 1 
20 3 169 1 255 1 344 3 242 1 34 2 157 1 348 1 68 1 336 1 58 1 235 3 282 3 215 2 39 6 112 3 238 1 
304 5 20 5 169 16 305 3 231 1 255 7 4 2 91 3 68 5 336 1 282 5 235 34 215 12 52 1 366 3 217 1 238 1 176 5 179 1 33 4 344 5 242 1 34 18 264 1 347 1 348 3 157 3 58 2 373 1 353 3 326 1 112 5 39 10 227 1 
171 1 320 1 118 1 26 1 173 1 47 1 197 1 
320 1 322 1 47 1 197 1 184 1 171 1 337 1 363 1 10 1 118 1 173 1 26 1 
342 1 312 1 69 1 8 1 21 1 135 1 364 1 85 1 257 1 190 1 355 1 
342 1 150 1 21 1 261 1 320 2 2 1 343 1 257 1 190 1 197 2 171 1 69 1 364 1 135 1 118 1 85 1 111 1 98 1 
168 1 21 3 2 2 190 1 171 1 69 1 67 1 364 2 118 2 284 1 98 2 342 1 150 1 261 1 320 2 343 1 369 1 197 2 134 1 135 1 85 1 162 2 111 1 60 1 
168 1 21 3 2 2 190 1 171 1 69 1 67 1 95 1 364 2 118 2 284 1 98 2 342 1 150 1 320 2 343 1 369 1 197 2 134 1 135 1 85 1 162 2 111 1 60 1 
141 1 21 4 333 1 209 1 257 1 190 3 69 3 364 1 145 2 12 1 28 1 98 1 342 1 367 1 369 1 132 2 198 1 186 1 134 1 84 1 135 1 85 3 60 1 
139 1 342 1 141 1 367 1 21 4 209 1 257 1 190 3 132 2 369 1 69 3 186 1 134 1 364 1 135 1 84 1 145 2 85 3 12 1 98 1 28 1 60 1 
342 1 69 1 135 1 85 1 73 1 190 1 
342 1 69 1 31 1 21 1 135 1 364 1 85 1 71 1 257 1 190 1 98 1 6 1 
231 1 2 1 4 1 190 1 280 1 282 2 235 6 146 1 192 1 98 1 341 1 342 1 150 1 344 2 343 1 197 2 243 1 157 1 348 1 347 1 57 1 245 1 108 1 111 1 112 2 203 2 253 1 206 1 304 1 20 2 169 3 21 1 255 2 69 1 171 2 364 1 118 1 215 2 365 2 176 1 261 1 320 2 179 1 34 3 135 1 85 1 39 4 
139 1 62 1 141 1 42 1 21 2 332 1 275 1 334 2 209 1 257 1 190 1 69 1 94 1 145 3 120 1 12 2 28 1 318 2 367 1 132 3 267 2 80 2 371 1 15 1 84 1 85 1 202 1 228 1 
342 1 21 2 323 1 190 2 69 2 364 1 135 2 85 2 71 1 73 1 28 1 98 1 253 1 
342 1 21 1 22 1 257 1 190 4 69 4 8 1 186 1 135 1 364 1 85 4 355 1 253 1 
342 1 69 1 31 1 21 1 274 1 135 1 364 1 247 1 85 1 89 1 190 1 98 1 
342 1 69 1 358 1 152 1 135 1 85 1 56 1 257 1 190 1 204 1 
342 1 69 2 194 1 21 1 135 1 364 1 85 2 263 1 300 1 190 2 253 1 
342 2 329 1 123 1 21 3 22 1 257 1 190 4 369 1 69 5 8 1 364 2 135 2 85 5 300 1 355 1 253 1 
342 2 123 1 21 3 22 1 257 1 190 4 369 1 69 5 172 1 8 1 364 2 135 2 85 5 300 1 355 1 253 1 
342 1 150 1 21 1 320 2 2 1 343 1 257 1 190 1 197 2 171 1 69 1 95 1 364 1 135 1 118 1 85 1 111 1 98 1 
342 1 69 1 31 1 21 1 135 1 364 1 85 1 71 1 190 1 98 1 369 1 6 1 
171 1 92 1 143 1 325 1 99 1 
62 1 141 1 209 1 2 1 46 1 92 1 67 1 191 1 143 1 118 1 145 2 284 1 97 1 99 1 317 1 150 1 259 1 367 1 151 1 320 1 288 1 241 1 132 2 197 1 187 1 325 1 162 2 226 1 
254 1 143 1 325 1 320 1 118 1 37 1 309 1 197 1 99 1 
317 1 46 1 99 1 
312 1 154 1 222 1 236 1 
154 1 161 1 50 1 222 1 252 1 233 1 236 1 
205 1 96 1 50 1 
193 1 154 1 222 1 233 1 196 1 161 3 50 3 72 1 252 1 74 1 236 1 166 2 
199 1 154 1 161 2 50 2 208 1 222 1 252 1 233 1 236 1 
61 1 41 1 193 1 104 1 358 1 161 1 50 1 222 1 252 1 233 1 204 1 
193 1 161 1 50 1 222 1 252 1 233 1 236 1 
193 1 154 1 161 1 50 1 252 1 233 1 236 2 
193 1 233 1 185 1 161 1 50 1 252 1 59 1 
193 1 61 1 154 1 262 1 208 2 181 1 222 2 233 1 161 3 16 1 50 3 252 1 236 1 
193 1 152 1 358 1 154 1 208 1 222 1 233 1 130 1 104 1 161 2 50 2 252 1 236 1 204 2 356 1 
193 1 61 1 154 1 262 1 208 2 222 2 233 2 199 1 161 4 50 4 121 1 252 2 236 1 
193 1 154 1 161 1 50 1 222 1 252 1 233 1 236 1 
61 1 154 2 262 1 208 2 222 3 196 1 233 1 346 1 161 4 50 4 72 1 252 1 236 2 166 1 
193 1 154 1 161 2 125 1 50 2 208 1 86 1 222 1 90 1 252 1 233 1 236 1 
193 1 154 1 161 3 50 3 72 1 222 1 196 2 252 1 233 1 236 1 166 2 361 1 
224 1 222 1 24 1 
193 1 161 1 50 1 321 1 252 1 233 1 
193 1 154 1 16 1 161 2 50 2 208 1 222 1 252 1 233 1 236 1 
239 1 
193 1 154 1 161 1 50 1 222 1 252 1 233 1 236 1 
193 1 154 1 208 1 222 1 233 1 161 3 16 1 50 3 252 1 236 1 166 1 
61 1 262 1 222 1 346 1 
222 1 236 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (292,317) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 220 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3603 | 1 -> 0
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 5921 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2985 | if (x) -> if (!x)
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 0
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 3976 | stmt -> ;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3384 | = null
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 3080 | = null
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 772 | 0 -> -1
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
328 2 183 3 0 2 1 1 161 1 5 2 283 1 360 1 335 1 237 1 364 1 214 9 241 6 82 2 265 1 14 1 290 5 291 1 370 1 107 1 86 1 127 2 111 1 129 1 322 2 152 4 349 2 179 9 
328 2 183 3 0 2 1 1 161 1 5 2 283 1 360 1 335 1 237 1 364 1 214 9 241 6 82 2 265 1 14 1 290 5 291 1 370 1 107 1 86 1 111 1 127 2 129 1 322 2 152 4 349 2 179 9 
328 2 183 4 0 2 1 1 161 1 5 2 283 1 360 1 335 1 237 1 364 1 214 10 241 7 82 2 265 1 14 1 290 6 291 1 370 1 107 1 86 1 111 1 127 2 129 1 322 2 152 5 349 2 179 10 
328 2 183 2 0 2 161 1 5 2 283 1 360 1 335 1 237 1 364 1 214 7 241 4 82 2 265 1 14 1 290 4 291 1 370 1 107 1 86 1 111 1 127 1 129 1 322 2 152 3 349 2 179 7 
370 1 328 1 183 1 0 1 1 1 111 1 127 2 161 1 322 1 335 1 237 1 152 2 349 1 214 4 241 3 82 1 179 4 290 3 
370 1 328 1 144 1 279 1 86 1 111 1 161 1 322 1 5 1 349 1 214 2 82 1 65 1 265 1 179 2 290 1 
370 1 183 1 111 1 161 1 283 1 5 1 152 1 349 2 214 3 241 1 82 2 179 3 290 2 
328 1 183 3 0 1 1 1 161 1 5 1 283 1 335 1 237 1 214 9 241 7 82 2 290 5 291 1 370 1 107 1 111 1 127 2 322 1 152 4 131 1 349 2 51 1 179 9 
328 1 183 3 0 1 1 1 161 1 5 1 283 1 335 1 237 1 214 9 241 7 82 2 290 5 291 1 370 1 107 1 111 1 127 2 322 1 152 4 131 1 349 2 51 1 179 9 
224 1 303 1 77 1 
224 1 134 1 188 2 
182 2 33 2 336 2 153 1 192 2 340 2 332 1 275 2 
182 3 277 1 232 1 160 1 120 1 332 1 136 1 359 1 189 1 190 1 336 2 7 1 338 2 27 1 192 2 340 2 243 1 125 2 217 1 13 1 316 1 33 2 295 1 109 2 172 1 40 1 88 1 67 2 114 2 268 1 153 1 71 1 176 1 177 1 92 1 255 1 275 3 
33 1 182 1 97 1 298 1 336 1 153 1 285 1 192 1 340 1 275 1 
182 2 303 1 330 1 55 1 305 1 97 1 361 1 60 1 336 1 285 2 192 1 340 1 141 1 33 2 319 1 108 1 298 1 347 1 224 1 153 1 275 2 
182 2 303 1 330 2 55 1 97 1 361 1 60 1 336 2 285 2 192 2 340 2 141 1 33 2 319 1 298 1 347 2 224 1 153 1 275 2 
347 1 223 1 330 1 247 1 213 1 
347 2 223 1 224 1 303 1 330 2 110 1 213 1 126 1 
347 1 223 1 330 1 
33 1 182 1 330 1 55 1 213 1 298 1 97 1 347 1 336 1 285 1 153 1 192 1 340 1 275 1 
224 1 
347 2 223 1 224 1 303 1 330 2 37 1 213 1 126 1 
303 1 330 5 148 2 213 2 3 1 345 1 121 1 162 1 267 2 347 5 202 2 223 2 224 1 216 1 343 1 289 1 29 1 352 1 126 1 
77 1 332 1 
33 2 182 2 332 1 336 1 285 1 192 1 340 1 22 1 83 1 218 1 275 2 
317 1 56 1 311 1 
182 1 25 1 295 1 232 1 109 1 332 1 136 1 67 1 190 1 7 1 338 1 27 1 71 1 255 1 275 1 316 1 
33 1 182 2 295 1 56 1 232 1 109 1 136 1 67 1 44 1 190 1 7 1 336 1 338 1 27 1 372 1 71 1 192 1 255 1 316 1 275 2 
33 3 182 3 332 1 44 1 336 3 285 1 192 3 340 1 275 3 218 1 
182 1 33 1 336 1 285 1 192 1 298 1 275 1 
33 1 182 1 336 1 285 1 192 1 340 1 83 1 22 1 275 1 
182 4 277 1 330 1 232 1 332 1 136 1 190 1 336 3 60 1 7 1 338 1 285 2 192 3 340 2 141 1 243 1 295 1 109 1 66 1 67 1 347 1 114 2 153 1 71 1 255 1 76 1 120 1 160 1 359 1 361 1 27 1 125 1 83 1 217 1 218 1 316 1 33 3 319 1 172 1 44 1 372 1 177 1 176 1 92 1 275 4 
182 2 33 2 44 1 336 1 192 1 325 1 332 1 305 1 275 2 
33 3 182 3 211 1 76 1 319 1 330 1 347 1 361 1 44 2 336 3 60 1 224 1 372 1 285 1 192 3 340 1 141 1 83 1 275 3 
33 2 182 2 317 1 56 1 44 1 336 2 192 2 340 1 83 1 275 2 
182 1 295 1 232 1 109 1 332 1 136 1 67 1 190 1 7 1 338 1 27 1 71 1 255 1 275 1 316 1 
182 1 109 1 332 1 136 1 67 1 89 1 190 1 7 1 338 1 27 1 71 1 194 1 255 1 275 1 316 1 
292 1 277 1 317 2 56 2 185 1 186 1 120 1 321 1 172 1 234 1 88 2 359 1 114 2 151 1 176 1 311 2 273 1 125 4 92 1 351 1 217 2 73 1 314 1 313 1 
361 1 182 1 33 1 336 1 285 1 192 1 205 1 275 1 
33 2 182 2 332 1 44 1 336 2 285 1 192 2 340 1 83 1 218 1 275 2 
182 2 33 2 336 2 285 1 192 2 205 1 298 1 275 2 
250 1 195 1 
250 1 195 1 
312 1 369 1 
312 1 369 1 
312 1 369 1 
250 1 81 1 195 1 
250 1 175 1 195 1 
250 2 36 1 38 1 312 1 195 2 369 1 
250 1 81 1 195 1 
250 1 81 1 195 1 
250 1 294 1 195 1 
250 1 294 1 195 1 
250 1 294 1 195 1 
168 2 318 1 36 1 330 2 281 1 128 1 296 2 297 3 113 2 250 2 347 2 224 1 253 2 117 1 374 1 286 1 254 1 287 2 195 2 
182 2 33 2 318 1 147 1 330 1 87 1 170 1 332 1 296 1 297 1 248 1 113 1 333 1 347 1 250 1 336 2 175 1 348 1 253 1 192 2 47 1 287 1 195 1 275 2 
328 1 0 1 322 1 
328 1 279 1 322 1 
328 3 279 1 28 1 0 2 222 1 18 1 
328 2 279 1 28 1 0 1 57 1 222 1 
328 2 279 1 0 1 28 1 222 2 
303 1 330 5 213 4 94 1 234 1 162 1 188 3 333 1 260 1 365 2 264 1 342 1 289 3 126 1 313 1 169 1 170 1 148 1 321 1 199 1 248 1 267 1 347 5 202 1 223 1 68 2 224 2 155 1 178 1 134 1 274 2 352 2 351 1 
230 1 303 1 330 9 213 7 3 1 234 3 162 1 188 9 308 1 337 1 61 5 365 6 264 3 342 1 289 8 126 1 313 3 169 3 148 2 321 3 247 5 248 4 267 2 347 9 115 1 223 6 202 2 19 1 68 6 224 5 154 1 155 2 178 2 134 3 352 6 351 3 
182 1 303 1 330 3 55 1 213 2 94 1 3 1 97 1 234 1 188 4 336 1 285 1 192 1 365 2 340 1 264 1 289 3 313 1 33 1 169 1 148 1 321 1 298 1 199 1 248 1 267 1 347 3 202 1 68 2 224 3 153 1 155 1 178 1 134 2 274 1 208 1 351 1 352 2 275 1 
182 1 330 4 55 1 94 1 3 1 234 2 97 1 188 7 336 1 337 1 285 1 192 1 340 1 289 5 148 1 298 1 199 1 248 2 347 4 202 1 115 1 68 4 153 1 155 1 154 1 352 4 351 2 208 1 303 1 213 3 365 4 264 2 313 2 33 1 169 2 321 2 267 1 224 4 178 1 274 2 134 3 275 1 
77 1 341 1 255 1 
191 1 255 1 
334 1 
27 1 255 1 
43 1 27 1 71 1 341 2 306 1 255 3 
27 1 71 1 255 1 
49 1 255 1 
16 2 184 1 197 1 321 1 186 3 234 1 88 4 282 1 116 1 300 1 375 1 263 1 125 6 217 2 30 1 12 1 314 2 
16 2 184 1 197 1 321 1 186 3 234 1 88 4 282 1 116 1 300 1 375 1 263 1 125 7 30 1 12 1 217 3 314 2 
16 2 184 1 197 1 321 1 186 3 234 1 201 1 88 4 282 1 116 1 300 1 375 1 263 1 125 6 217 2 30 1 12 1 314 2 
74 1 210 3 184 1 120 1 186 13 234 5 282 1 310 1 263 2 264 2 125 38 142 1 12 1 30 3 217 19 314 8 313 2 15 3 16 3 197 5 321 5 172 1 173 1 88 19 114 2 116 2 300 2 375 3 176 1 376 1 92 1 350 1 351 2 276 1 
184 1 186 5 120 2 234 1 99 1 263 1 125 10 217 5 12 1 30 1 314 4 16 2 197 1 321 1 172 2 88 5 114 4 116 1 300 1 176 2 375 1 133 1 376 1 92 2 
159 1 328 2 279 1 0 1 353 1 355 1 161 1 26 1 136 1 5 1 7 1 338 1 214 2 261 1 241 1 82 1 11 1 290 1 103 1 370 1 34 1 109 1 111 1 322 1 18 1 67 1 42 1 349 1 179 2 180 1 
159 1 328 2 279 1 0 1 353 1 355 1 161 1 26 1 136 1 258 1 5 1 7 1 338 1 214 3 261 1 241 2 82 1 11 1 290 1 84 1 103 1 370 1 109 1 322 1 18 1 67 1 42 1 269 1 349 1 179 3 
159 1 328 2 279 1 0 1 355 1 161 1 26 1 136 1 5 1 7 1 338 1 214 2 261 1 241 2 11 1 290 1 84 1 370 1 109 1 322 1 18 1 67 1 42 1 269 1 179 2 
280 1 109 1 26 2 4 1 136 1 164 1 258 1 67 1 5 2 42 2 190 1 7 1 20 1 338 1 27 1 63 1 349 1 214 1 82 1 288 1 255 1 179 1 11 2 
159 1 328 2 279 1 0 1 353 1 355 1 26 1 136 1 5 1 7 1 338 1 214 1 261 1 82 1 11 1 103 1 109 1 111 1 322 1 18 1 67 1 42 1 269 1 349 1 179 1 180 1 
101 1 
182 1 330 5 331 2 136 1 188 2 58 1 236 1 190 2 284 1 7 1 60 1 338 2 62 2 285 1 240 1 141 1 289 2 143 1 146 1 108 1 148 1 109 2 67 2 251 1 347 5 202 1 299 4 20 1 204 1 207 2 255 1 352 2 303 3 305 1 162 1 164 1 361 1 259 1 27 1 215 2 32 2 126 3 33 1 319 1 171 1 267 1 41 2 223 6 224 4 324 1 270 1 178 1 134 2 228 2 275 1 
33 1 182 1 303 2 319 1 108 1 330 3 37 1 305 1 236 1 361 1 347 3 223 2 284 1 299 2 259 1 60 1 224 2 62 1 285 1 204 1 324 1 141 1 126 1 275 1 
33 1 182 1 303 2 319 1 108 1 330 2 305 1 236 1 41 1 361 1 347 2 284 1 299 3 259 1 60 1 224 2 285 1 204 1 324 1 141 1 275 1 
182 1 303 3 330 3 305 1 236 1 361 1 259 1 284 1 60 1 285 1 62 1 141 1 126 1 33 1 108 1 319 1 37 1 347 3 41 1 299 3 223 2 224 3 204 1 324 1 207 1 275 1 
182 2 330 5 55 1 331 2 97 1 58 1 236 1 284 1 336 1 60 1 285 2 62 4 192 1 340 1 141 1 289 1 108 1 148 1 112 1 298 1 347 5 251 1 299 5 202 1 153 1 70 1 204 1 207 4 352 1 158 1 303 4 354 1 305 1 162 1 361 1 259 1 215 2 126 3 32 2 33 2 319 1 37 1 266 1 267 1 41 3 223 7 224 4 324 1 134 2 228 2 275 2 
182 1 330 4 331 2 58 1 188 2 236 1 284 1 60 1 285 1 62 2 240 1 141 1 289 1 108 1 148 1 347 4 251 1 299 4 202 1 204 1 207 2 352 1 303 3 305 1 162 1 361 1 259 1 215 2 32 2 126 2 33 1 319 1 267 1 41 2 223 4 224 4 324 1 134 2 228 2 275 1 
182 1 303 3 330 4 354 1 331 2 305 1 162 1 58 1 236 1 361 1 259 1 284 1 60 1 62 2 285 1 215 2 141 1 289 1 126 2 32 2 33 1 108 1 319 1 148 1 112 1 267 1 41 2 251 1 347 4 223 4 202 1 299 4 224 3 204 1 324 1 207 2 134 2 228 2 352 1 158 1 275 1 
182 1 303 3 330 4 354 1 331 2 305 1 162 1 58 1 236 1 361 1 259 1 284 1 60 1 62 2 285 1 215 2 141 1 289 1 126 2 32 2 33 1 108 1 319 1 148 1 112 1 267 1 41 2 251 1 347 4 223 4 202 1 299 4 224 3 204 1 324 1 207 2 134 2 228 2 352 1 158 1 275 1 
182 1 93 1 329 1 303 3 330 4 305 1 162 1 188 2 236 1 361 1 259 1 284 1 60 1 62 2 8 2 285 1 140 1 141 1 289 1 126 2 32 2 33 1 108 1 319 1 148 1 267 1 41 2 251 1 347 4 223 4 202 1 299 4 224 3 204 1 324 1 271 2 207 2 228 2 352 1 158 1 275 1 
182 1 303 3 330 4 354 1 331 2 305 1 162 1 58 1 236 1 361 1 259 1 284 1 60 1 285 1 62 3 215 2 141 1 289 1 126 2 32 2 33 1 108 1 319 1 148 1 112 1 267 1 251 1 41 3 347 4 202 1 299 5 223 5 224 3 70 1 204 1 324 1 134 2 207 3 228 2 352 1 158 1 275 1 
182 1 303 3 330 4 354 1 331 2 305 1 162 1 58 1 236 1 361 1 259 1 284 1 60 1 285 1 62 3 215 2 141 1 289 1 126 2 32 2 33 1 108 1 319 1 148 1 112 1 267 1 251 1 41 3 347 4 202 1 299 5 223 5 224 3 70 1 204 1 324 1 134 2 207 3 228 2 352 1 158 1 275 1 
182 1 303 3 330 4 305 1 162 1 188 2 236 1 361 1 284 1 259 1 60 1 62 2 8 2 285 1 240 1 140 1 141 1 289 1 126 2 32 2 33 1 108 1 319 1 148 1 267 1 41 2 251 1 347 4 223 4 202 1 299 4 224 3 204 1 324 1 271 2 207 2 228 2 352 1 275 1 
277 1 77 1 56 1 184 1 185 1 120 1 186 1 332 2 234 1 359 1 311 1 125 5 30 1 12 1 217 2 314 1 317 1 16 1 321 1 172 1 88 3 114 2 116 1 176 1 375 1 92 1 
210 3 277 2 53 1 56 11 160 1 186 2 120 2 332 1 78 1 234 2 359 1 238 1 311 11 264 2 125 14 217 6 314 1 313 1 15 3 317 4 197 1 321 1 172 2 149 1 88 8 114 4 174 1 268 1 176 2 92 2 351 2 276 1 229 1 
33 1 182 1 277 1 317 1 320 1 120 1 172 1 149 1 88 1 359 1 114 2 44 1 268 1 336 1 372 1 192 1 176 1 10 1 125 1 92 1 275 1 
182 1 277 1 120 1 160 1 359 1 190 1 336 1 338 1 192 1 125 1 217 1 33 1 220 1 109 1 172 1 149 1 67 1 114 2 44 1 372 1 176 1 92 1 275 1 
182 1 277 2 185 1 304 1 120 2 160 1 96 1 136 2 359 2 189 2 164 1 190 2 336 1 7 2 338 8 27 2 192 1 262 1 125 2 217 1 33 1 293 1 145 1 34 1 109 7 172 2 200 1 88 1 67 8 114 4 44 1 268 1 20 1 269 1 176 2 48 1 255 3 92 2 275 1 
182 1 277 1 231 1 56 1 186 1 120 1 234 1 359 1 336 1 192 1 340 1 311 1 264 1 125 3 83 1 217 2 314 1 313 1 33 1 317 1 321 1 172 1 149 1 88 1 114 2 176 1 92 1 351 1 275 1 
277 1 317 1 56 1 185 1 197 1 186 1 120 1 172 1 234 1 88 2 359 1 114 2 176 1 311 1 125 2 92 1 351 1 73 1 
277 1 317 1 56 1 185 1 186 1 120 1 321 1 172 1 359 1 114 2 176 1 311 1 273 1 125 2 92 1 217 2 314 1 313 1 
277 1 185 1 56 2 120 1 186 2 234 1 359 1 264 1 311 2 125 4 217 2 313 1 314 1 317 2 197 1 321 1 172 1 88 2 114 2 176 1 92 1 351 1 
293 1 277 1 317 1 56 1 197 1 186 1 120 1 172 1 234 1 88 2 359 1 114 2 176 1 311 1 125 2 92 1 351 1 73 1 
293 1 277 1 317 1 56 1 186 1 120 1 321 1 172 1 359 1 114 2 176 1 311 1 273 1 125 2 92 1 217 2 314 1 313 1 
277 1 56 2 120 1 186 2 234 1 359 1 264 1 311 2 125 4 217 2 313 1 314 1 293 1 317 2 197 1 321 1 172 1 88 2 114 2 176 1 92 1 351 1 
277 1 317 2 56 2 197 1 321 1 186 2 120 1 172 1 234 1 88 2 359 1 114 2 176 1 311 2 264 1 92 1 125 4 217 2 351 1 314 1 313 1 
182 1 277 1 232 1 120 1 160 1 332 1 136 1 359 1 190 1 7 1 338 1 27 1 243 1 125 2 217 1 316 1 295 1 109 1 172 1 88 1 67 1 114 2 268 1 71 1 176 1 255 1 92 1 275 1 
182 1 277 1 120 1 160 1 332 1 136 1 359 1 362 1 190 1 7 1 338 1 27 1 194 1 125 2 217 1 316 1 109 1 172 1 88 1 89 1 67 1 114 2 268 1 71 1 176 1 255 1 92 1 275 1 
277 1 56 2 120 1 186 2 234 1 359 1 264 1 311 2 125 4 217 2 313 1 314 1 317 2 197 1 321 1 172 1 149 1 88 2 114 2 176 1 92 1 351 1 
182 1 277 1 56 2 232 1 186 2 120 1 234 1 136 1 359 1 7 1 338 1 27 1 311 2 264 1 243 1 125 4 217 2 314 1 313 1 316 1 317 2 106 1 34 1 295 1 197 1 109 1 321 1 172 1 88 2 67 1 114 2 71 1 176 1 255 1 92 1 351 1 275 1 
182 1 277 1 56 1 186 1 120 1 307 1 234 1 359 1 336 1 192 1 340 1 264 1 311 1 125 3 217 1 83 1 313 1 33 1 317 1 197 1 321 1 172 1 149 1 88 2 114 2 176 1 92 1 351 1 275 1 
118 1 210 1 24 1 357 1 120 2 186 6 234 3 99 1 264 3 125 19 217 10 196 2 314 3 313 3 15 2 105 1 244 1 197 3 321 3 172 2 150 2 88 9 114 4 174 1 72 1 176 2 92 2 157 1 351 3 276 1 
118 1 210 2 24 1 2 1 212 1 186 4 120 3 233 1 234 3 99 1 264 3 125 26 217 12 314 2 196 4 313 2 105 1 15 2 197 2 321 2 172 3 150 1 88 14 249 1 114 6 72 2 21 1 46 1 176 3 376 2 92 3 157 2 351 3 276 2 
118 1 210 3 24 1 184 1 2 1 212 1 120 3 186 9 233 1 234 5 99 1 264 4 125 41 30 1 12 1 217 21 196 4 314 5 313 4 219 1 15 4 105 1 244 1 16 1 197 4 321 5 172 3 150 1 88 20 249 1 114 6 174 1 116 1 21 1 72 2 375 1 46 1 176 3 376 1 92 3 157 1 351 4 276 3 
118 1 210 3 24 1 184 1 2 1 212 1 120 4 186 8 233 1 234 5 99 1 264 4 125 39 30 1 12 1 217 19 196 4 314 5 313 3 219 1 15 4 105 1 244 1 16 1 197 3 321 4 172 4 150 1 88 20 249 1 114 8 174 1 116 1 21 1 72 2 375 1 46 1 176 4 376 2 92 4 157 1 351 4 276 3 
118 1 210 4 24 1 184 1 2 1 212 1 120 2 186 15 233 1 78 2 234 8 99 1 264 7 125 53 30 1 12 1 217 26 196 4 314 8 313 7 15 4 105 1 16 1 197 7 321 8 172 2 150 1 88 27 249 1 114 4 174 2 116 1 21 1 72 1 375 1 46 1 176 2 376 1 92 2 157 1 351 7 276 2 
250 1 36 1 253 1 281 1 374 1 287 1 296 1 195 1 113 1 130 1 
175 1 47 1 
250 1 323 1 253 1 100 1 287 1 296 1 163 1 195 1 113 1 
168 1 318 1 36 1 330 1 281 1 128 1 296 1 297 2 113 1 347 1 250 1 224 1 253 1 374 1 286 1 254 1 287 1 195 1 
168 1 318 1 36 1 330 1 281 1 128 1 296 1 297 2 113 1 347 1 250 1 224 1 253 1 374 1 286 1 254 1 287 1 195 1 
168 1 318 1 36 1 330 1 281 1 128 1 296 1 297 2 113 1 347 1 250 1 224 1 253 1 374 1 286 1 254 1 287 1 195 1 
35 1 38 1 81 1 
35 1 38 1 81 1 
294 1 59 1 
294 1 38 1 59 1 
147 1 87 1 
182 2 330 1 213 1 332 1 333 1 336 2 192 2 287 1 195 1 33 2 168 1 147 1 87 1 170 1 128 1 296 1 297 1 113 1 248 1 347 1 250 1 175 1 252 1 348 1 253 1 47 1 275 2 
35 1 81 1 
294 1 38 1 59 1 
52 1 182 2 277 1 120 1 160 1 96 1 136 1 359 1 189 2 98 1 7 1 338 2 27 1 125 2 217 1 166 1 33 2 246 1 109 2 172 1 149 1 88 1 67 2 114 2 268 1 176 1 48 1 50 1 255 1 92 1 275 2 
328 2 159 1 279 1 34 1 0 1 353 1 109 2 322 1 18 1 136 1 67 2 42 1 7 1 338 2 269 1 261 1 301 1 206 1 326 1 
328 2 159 1 279 1 0 1 353 1 109 1 322 1 18 1 136 1 67 1 42 1 7 1 338 1 269 1 261 1 206 1 368 1 
280 1 109 1 136 1 67 1 164 1 42 1 190 1 7 1 338 1 20 1 27 1 301 1 255 1 181 1 
328 2 159 1 279 1 0 1 353 1 109 1 322 1 18 1 136 1 67 1 42 1 7 1 338 1 269 1 261 1 301 1 206 1 326 1 
245 1 
224 1 303 1 77 1 343 1 121 1 289 1 352 1 
303 1 330 1 331 1 162 1 58 1 188 1 215 1 289 1 126 1 148 1 267 1 347 1 202 1 223 1 224 2 134 1 352 1 
54 1 330 2 234 1 136 2 188 6 138 1 190 1 7 1 338 1 191 2 64 1 339 1 341 1 141 1 289 4 344 1 148 2 109 1 17 1 67 1 347 2 202 2 68 3 71 1 255 4 302 1 351 1 352 3 208 1 162 2 27 1 365 3 264 1 126 1 313 1 169 1 321 1 267 2 43 1 223 2 226 1 224 3 178 1 134 3 
210 1 303 2 330 1 2 1 212 1 233 1 162 2 234 2 188 6 365 5 264 2 289 8 126 1 143 1 313 2 85 1 15 1 169 1 148 2 321 2 249 1 267 2 347 1 223 1 202 2 68 5 224 5 21 1 272 1 178 1 134 3 208 2 352 5 351 2 276 1 
182 1 330 1 55 1 162 1 234 2 97 1 336 1 285 1 192 1 340 1 289 2 30 1 33 1 169 1 148 1 321 1 112 1 298 1 267 1 347 1 202 1 116 1 153 1 375 1 208 2 350 1 352 2 275 1 
303 1 148 1 121 1 162 1 267 1 202 1 224 1 343 1 289 1 352 1 
169 1 321 1 234 1 188 4 68 2 224 2 365 2 264 1 289 2 134 2 208 1 351 1 352 2 313 1 
347 1 223 1 224 1 303 1 330 1 126 1 
75 1 330 3 3 1 162 1 136 1 137 1 164 1 190 2 7 1 338 4 27 1 9 1 289 2 126 2 143 2 146 1 148 2 109 4 371 2 67 4 267 2 347 3 202 2 223 4 20 1 270 1 178 2 255 1 352 2 
182 3 277 1 232 1 160 1 120 1 332 1 136 1 359 1 190 1 336 2 7 1 338 1 27 1 192 2 340 2 243 1 125 1 217 1 316 1 33 2 295 1 109 1 172 1 67 1 114 2 153 1 71 1 176 1 177 1 92 1 255 1 275 3 
303 1 148 1 162 1 188 2 267 1 202 1 68 1 224 2 178 1 134 1 289 1 352 1 143 1 
6 1 253 1 287 1 
147 1 253 1 281 1 287 1 315 1 
6 1 253 1 287 1 
6 1 253 1 287 1 
203 1 253 1 287 1 
203 1 253 1 287 1 
203 1 253 1 287 1 
253 1 287 1 
250 1 195 1 
16 1 184 1 197 1 321 1 186 2 120 2 172 2 234 1 88 4 114 4 116 1 176 2 375 1 376 1 125 7 92 2 217 3 12 1 30 1 314 1 
16 1 77 1 184 1 186 1 321 1 234 1 88 3 116 1 375 1 125 5 217 2 12 1 30 1 314 1 
197 1 321 1 186 2 120 1 172 1 234 1 88 2 114 2 309 1 176 1 264 1 92 1 125 4 217 2 351 1 314 1 313 1 
15 2 210 1 197 1 321 1 186 2 234 1 88 3 174 1 264 1 125 7 217 4 351 1 314 1 313 1 276 1 
210 2 184 1 186 8 120 2 234 3 78 1 264 2 125 22 30 2 12 1 217 11 313 2 314 4 15 2 16 1 197 4 321 3 172 2 88 11 114 4 174 1 116 1 375 2 176 2 376 2 92 2 351 2 23 1 229 1 
15 1 125 1 217 1 
210 1 125 1 88 1 
197 1 120 1 186 3 321 1 172 1 234 1 88 3 138 1 114 2 309 1 176 1 264 1 92 1 125 6 217 3 351 1 313 1 314 2 
210 1 2 1 120 1 186 2 212 1 233 1 234 2 99 1 264 2 125 12 217 6 313 2 314 1 15 1 197 1 321 2 172 1 88 6 249 1 114 2 21 1 176 1 92 1 351 2 276 1 
197 1 321 1 186 2 234 1 88 3 116 1 375 1 125 6 217 3 30 1 314 1 
184 1 197 1 186 2 120 1 172 1 88 1 114 2 375 1 176 1 376 1 125 3 92 1 30 1 23 1 217 2 12 1 314 1 
197 2 120 1 186 5 321 2 172 1 234 2 88 5 114 2 99 1 116 1 176 1 375 2 92 1 125 10 350 1 30 2 217 5 314 3 
197 1 120 1 186 1 172 1 234 1 88 2 114 2 99 1 176 1 92 1 125 2 351 1 
197 1 321 1 186 2 120 1 172 1 234 1 88 2 114 2 99 1 176 1 264 1 92 1 125 4 217 2 351 1 314 1 313 1 
244 1 197 1 120 3 186 2 172 3 88 1 114 6 99 1 176 3 375 1 376 1 125 3 92 3 23 1 217 2 30 1 314 1 
210 3 184 1 120 5 186 11 234 5 99 1 309 1 310 1 264 3 142 1 125 33 30 3 12 1 217 17 313 3 314 6 15 4 16 1 244 1 197 5 321 5 172 5 173 1 88 16 114 10 174 1 116 2 375 3 176 5 376 2 92 5 23 1 351 3 276 1 
210 1 184 1 2 1 120 1 186 1 234 1 99 1 125 7 217 3 12 1 30 1 314 1 15 1 16 1 321 1 172 1 88 4 114 2 116 1 176 1 375 1 92 1 276 1 
210 1 184 1 2 1 120 2 186 2 234 2 99 1 309 1 264 1 125 10 30 1 12 1 217 4 314 1 15 2 16 1 197 1 321 1 172 2 88 6 114 4 174 1 116 1 375 1 176 2 92 2 351 1 276 1 
210 1 184 1 2 1 212 1 120 3 186 3 233 1 234 3 99 1 309 1 264 2 125 18 30 1 12 1 217 9 313 2 314 2 15 1 16 1 197 1 321 3 172 3 88 9 249 1 114 6 116 1 21 1 375 1 176 3 376 1 92 3 351 2 276 1 
210 1 184 1 2 1 120 3 186 4 212 1 233 1 234 3 99 1 309 1 264 2 125 16 30 1 12 1 217 6 313 1 314 2 15 1 16 1 197 2 321 2 172 3 88 10 249 1 114 6 116 1 21 1 375 1 176 3 376 1 92 3 351 2 276 1 
210 1 184 1 2 1 120 1 186 1 234 1 99 1 125 7 217 3 12 1 30 1 314 1 15 1 16 1 321 1 172 1 88 4 114 2 116 1 176 1 375 1 92 1 276 1 
210 1 2 1 120 1 186 2 212 1 233 1 234 2 99 1 264 2 125 12 217 6 313 2 314 1 15 1 197 1 321 2 172 1 88 6 249 1 114 2 21 1 176 1 92 1 351 2 276 1 
210 1 184 1 2 1 212 1 120 4 186 4 233 1 234 3 99 1 309 1 264 2 125 17 30 1 12 1 217 7 313 1 314 2 15 1 16 1 197 2 321 2 172 4 88 10 249 1 114 8 116 1 21 1 375 1 176 4 376 2 92 4 351 2 276 1 
210 1 2 1 212 1 120 4 186 6 233 1 234 3 99 1 264 3 125 16 217 7 313 2 314 3 15 1 244 1 197 3 321 2 172 4 88 9 249 1 114 8 21 1 176 4 376 2 92 4 351 3 276 1 
184 2 197 3 321 1 186 6 234 1 88 3 116 1 375 3 125 7 217 4 12 1 30 3 314 3 
210 1 184 1 2 1 212 1 120 4 186 3 233 1 234 3 99 1 264 2 125 17 30 1 12 1 217 7 313 1 314 2 15 1 16 1 244 1 197 1 321 2 172 4 88 10 249 1 114 8 116 1 21 1 375 1 176 4 376 2 92 4 351 2 276 1 
182 1 33 1 325 1 332 1 305 1 95 1 275 1 
33 1 182 1 332 1 221 1 95 1 305 1 225 1 239 1 325 1 209 1 135 1 275 1 
190 1 7 1 20 1 338 1 27 1 77 1 109 1 255 1 136 1 164 1 67 1 
33 1 182 2 295 1 109 1 332 1 136 1 67 1 44 1 190 1 336 1 7 1 338 1 27 1 71 1 192 1 255 1 316 1 275 2 
33 2 182 2 319 1 295 1 109 1 332 1 136 1 371 1 67 1 361 1 44 1 336 2 7 1 338 1 27 2 285 1 71 2 192 1 49 1 193 1 255 3 316 1 275 2 
182 2 332 1 136 1 361 1 7 1 336 2 338 2 27 2 285 1 192 1 194 1 193 1 167 1 316 1 33 2 319 1 109 2 371 1 67 2 44 1 71 2 49 1 255 3 275 2 
182 1 303 1 330 2 55 1 256 1 97 1 136 1 336 1 7 1 338 1 191 1 27 1 285 1 192 1 340 1 341 1 193 1 141 1 33 1 109 1 298 1 371 1 67 1 347 2 223 1 224 1 153 1 71 1 227 1 49 1 255 4 275 1 
182 1 303 1 330 2 55 1 97 1 136 1 336 1 7 1 338 1 191 1 27 1 285 1 192 1 340 1 341 1 193 1 141 1 33 1 344 1 109 1 298 1 371 1 67 1 347 2 223 1 224 1 153 1 71 1 49 1 255 4 275 1 
7 1 338 1 109 1 200 1 136 1 67 1 
145 1 34 1 304 1 109 6 198 1 346 1 200 1 96 1 136 3 189 1 67 7 190 2 43 1 7 2 338 7 269 1 27 2 71 1 262 1 132 1 255 3 
182 2 277 2 232 1 184 1 56 1 186 1 332 2 234 1 136 1 336 1 7 1 338 1 192 1 243 1 12 1 106 1 16 1 295 1 109 1 149 1 67 1 114 4 116 1 71 1 255 1 120 2 359 2 27 1 311 1 367 1 125 5 30 1 217 2 314 1 316 1 33 1 317 1 34 1 321 1 172 2 88 3 44 1 176 2 375 1 50 1 92 2 275 2 
182 1 330 3 55 1 234 2 97 1 137 1 190 1 336 1 338 1 191 1 285 1 64 1 192 1 340 1 341 1 141 1 343 1 289 4 344 1 148 2 109 1 17 1 298 1 67 1 347 3 202 2 116 1 153 1 255 2 352 5 350 1 208 2 303 2 213 1 121 1 162 2 126 1 30 1 33 1 169 1 321 2 267 2 223 2 226 1 224 2 375 1 275 1 
34 1 109 2 200 1 136 2 67 2 43 1 7 1 338 2 27 1 71 1 339 1 341 1 255 2 
34 1 109 4 136 1 67 4 164 1 190 1 7 1 122 1 338 4 20 1 27 1 255 1 167 1 
109 2 358 1 198 1 346 1 371 1 136 2 67 2 7 1 338 2 27 1 71 1 123 1 255 1 327 1 
328 1 190 1 7 1 279 1 338 1 261 1 109 1 322 1 136 1 67 1 
34 1 109 2 96 1 136 1 67 2 7 1 338 2 269 1 27 1 255 1 166 1 
34 1 145 1 109 4 96 1 371 1 136 2 164 1 67 5 190 1 7 2 122 1 20 1 338 5 27 2 262 1 255 3 
34 1 145 1 109 4 96 1 371 1 136 2 164 1 67 5 190 1 7 2 122 1 20 1 338 5 27 2 91 1 255 3 
33 1 182 2 109 1 332 1 136 1 67 1 44 1 190 1 336 1 7 1 338 1 27 1 71 1 192 1 194 1 255 1 316 1 275 2 
109 1 198 1 346 1 371 1 136 2 67 1 43 1 7 1 338 1 27 1 71 1 132 1 255 1 
69 1 366 1 80 1 332 1 242 1 
182 1 76 1 303 1 330 2 55 1 213 1 97 1 235 1 361 1 336 1 60 1 363 1 285 2 192 1 366 1 80 1 340 1 242 1 141 1 33 1 319 1 298 1 90 1 347 2 69 1 224 1 153 1 275 1 
182 1 33 1 52 1 69 1 246 1 80 1 242 1 275 1 98 1 
363 1 80 1 90 1 
370 1 77 1 161 1 290 1 
370 1 349 1 214 1 161 1 82 1 179 1 290 1 
214 1 26 1 5 1 
370 1 111 1 161 1 45 1 349 1 214 3 156 1 82 1 179 3 265 2 290 1 104 1 
370 1 349 1 214 2 241 1 127 1 161 1 82 1 179 2 290 1 
328 1 0 1 111 1 322 1 237 1 152 1 349 1 214 1 82 1 179 1 290 1 
349 1 214 1 111 1 161 1 82 1 179 1 290 1 
370 1 349 1 214 1 111 1 161 2 82 1 179 1 
356 1 111 1 161 1 349 2 214 2 82 2 124 1 31 1 179 2 290 1 
291 1 370 1 107 1 183 1 111 1 161 1 152 1 349 1 214 3 241 2 82 1 179 3 290 2 
370 1 328 2 279 1 0 1 119 1 111 1 161 1 322 1 18 1 349 1 214 2 241 1 82 1 179 2 290 1 
370 1 183 1 1 1 111 1 127 1 161 1 152 1 349 2 214 4 241 2 82 2 179 4 290 2 
370 1 349 1 214 1 111 1 161 1 82 1 179 1 290 1 
370 2 278 1 183 1 161 2 152 1 45 1 349 1 214 4 241 2 82 1 265 1 179 4 104 1 290 3 
370 1 111 1 161 1 187 1 257 1 131 1 349 1 214 2 241 1 82 1 179 2 290 1 
370 1 111 1 161 1 45 2 373 1 349 1 214 3 82 1 179 3 265 2 104 1 290 1 
139 1 165 1 102 2 290 2 
349 1 214 1 39 1 111 1 82 1 179 1 
370 1 107 1 349 1 214 2 241 1 111 1 161 1 82 1 179 2 290 1 
79 1 
370 1 349 1 214 1 111 1 161 1 82 1 179 1 290 1 
370 1 107 1 111 1 161 1 349 1 214 3 241 1 82 1 179 3 265 1 290 1 
278 1 152 1 183 1 290 1 
161 1 290 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 230 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 10 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 308 361 367 284 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.ClassCastException (110,313) 252 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.ClassCastException (110,313) 218 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.ClassCastException (110,313) 218 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.ClassCastException (110,313) 252 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | CONDITION | 1071 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1474 | return null
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 3555 | = null
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 5921 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4739 | if (x) -> if (!x)
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z | STATEMENT | 1492 | stmt -> ;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1740 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
161 2 25 3 26 2 79 5 134 1 301 2 163 1 277 1 7 2 8 1 106 9 326 9 305 1 328 4 355 2 61 1 307 1 142 1 37 2 288 1 40 1 182 1 224 6 290 2 268 1 381 1 152 1 343 1 
161 2 25 3 26 2 79 5 134 1 163 1 301 2 277 1 7 2 8 1 106 9 326 9 305 1 328 4 355 2 61 1 307 1 142 1 37 2 288 1 40 1 182 1 224 6 290 2 268 1 381 1 152 1 343 1 
161 2 25 4 26 2 79 6 134 1 163 1 301 2 277 1 7 2 8 1 106 10 326 10 305 1 328 5 355 2 61 1 307 1 142 1 37 2 288 1 40 1 182 1 224 7 290 2 268 1 381 1 152 1 343 1 
161 2 25 2 26 2 79 4 134 1 163 1 301 1 277 1 7 2 8 1 106 7 326 7 305 1 328 3 355 2 61 1 307 1 142 1 37 2 288 1 40 1 224 4 290 2 268 1 381 1 152 1 343 1 
142 1 37 1 161 1 25 1 26 1 79 3 163 1 301 2 277 1 182 1 224 3 7 1 326 4 106 4 328 2 355 1 61 1 343 1 
142 1 144 1 37 1 288 1 161 1 79 1 26 1 40 1 277 1 290 1 326 2 106 2 82 1 281 1 355 1 343 1 
142 1 37 2 161 2 25 1 79 2 277 1 224 1 8 1 290 1 326 3 106 3 328 1 343 1 
307 1 142 1 37 2 161 2 25 3 26 1 79 5 301 2 163 1 277 1 182 1 224 7 7 1 8 1 290 1 234 1 326 9 106 9 379 1 305 1 328 4 355 1 61 1 343 1 
307 1 142 1 37 2 161 2 25 3 26 1 79 5 301 2 163 1 277 1 182 1 224 7 7 1 8 1 290 1 234 1 326 9 106 9 379 1 305 1 328 4 355 1 61 1 343 1 
137 1 58 1 10 1 
137 1 27 1 76 2 
73 2 74 2 204 2 319 2 269 1 56 2 215 2 321 1 
73 2 53 1 74 3 319 2 2 2 3 2 133 2 56 3 321 1 164 1 323 1 191 1 193 1 59 1 83 1 107 1 215 2 283 1 285 1 216 2 331 1 15 1 35 2 114 1 335 1 178 1 363 1 312 1 226 1 66 1 204 2 269 1 48 1 20 1 342 1 315 1 274 1 
73 1 57 1 74 1 359 1 204 1 319 1 269 1 56 1 215 1 273 1 
52 1 73 1 97 1 74 1 359 1 132 1 56 1 347 1 299 1 137 1 58 1 260 1 357 1 154 1 
52 1 73 1 97 2 74 1 359 1 319 1 132 2 56 1 347 1 299 1 137 1 58 1 260 1 204 1 215 1 
97 1 185 1 132 1 254 1 184 1 
137 1 97 2 58 1 231 1 185 1 240 1 132 2 184 1 
97 1 132 1 184 1 
73 1 97 1 185 1 74 1 359 1 319 1 132 1 56 1 57 1 204 1 373 1 269 1 215 1 273 1 
137 1 
137 1 97 2 58 1 185 1 240 1 132 2 223 1 184 1 
237 1 97 5 229 1 185 2 240 1 174 2 132 5 334 2 257 1 6 1 137 1 58 1 167 2 44 1 339 1 93 1 169 1 71 1 184 2 
10 1 321 1 
73 2 74 2 36 1 319 1 56 2 321 2 204 1 215 1 109 1 
190 1 95 1 300 1 
74 1 331 1 15 1 35 1 24 1 133 1 56 1 178 1 321 1 164 1 363 1 107 1 48 1 342 1 315 1 216 1 
73 1 74 2 331 1 15 1 35 1 133 1 56 2 178 1 164 1 311 1 190 1 363 1 204 1 107 1 48 1 215 1 139 1 342 1 315 1 216 1 
73 5 74 5 36 1 319 1 56 5 117 1 321 1 311 2 204 4 215 4 139 1 357 1 85 1 248 1 
73 2 74 2 359 1 204 2 56 2 215 2 202 1 273 1 
73 3 74 3 204 3 319 1 56 3 215 3 321 1 311 1 
73 1 74 1 359 1 204 1 56 1 215 1 273 1 
73 1 74 1 359 1 204 1 36 1 319 1 56 1 215 1 109 1 
52 1 73 3 53 1 97 1 74 4 319 2 2 1 132 1 3 2 133 1 56 4 347 1 299 1 321 1 164 1 191 1 193 1 260 1 59 1 107 1 215 3 283 1 139 1 285 1 216 1 196 1 331 1 15 1 332 1 359 1 36 1 35 1 335 1 178 1 311 1 363 1 312 1 226 1 66 1 204 3 269 1 48 1 342 1 315 1 
73 2 74 2 204 1 56 2 215 1 357 1 321 1 85 1 311 1 
52 1 73 3 196 1 97 1 74 3 359 1 36 1 319 1 132 1 78 1 56 3 347 1 299 1 311 2 137 1 260 1 204 3 215 3 139 1 
190 1 73 2 74 2 204 2 36 1 319 1 56 2 215 2 95 1 311 1 
74 1 331 1 15 1 35 1 133 1 56 1 178 1 321 1 164 1 363 1 107 1 48 1 342 1 315 1 216 1 
74 1 331 1 15 1 35 1 133 1 56 1 178 1 321 1 212 1 43 1 363 1 107 1 48 1 342 1 216 1 
53 1 143 1 55 1 2 2 335 1 3 2 39 1 300 1 201 1 190 1 191 1 193 1 66 1 283 1 285 2 271 1 
73 1 74 1 359 1 204 1 56 1 215 1 299 1 202 1 
13 1 75 1 
13 1 75 1 
14 1 309 1 
14 1 309 1 
14 1 309 1 
104 1 13 1 75 1 
13 2 14 1 313 1 75 2 309 1 110 1 
13 1 75 1 131 1 
104 1 13 1 75 1 
104 1 13 1 75 1 
13 1 75 1 348 1 
13 1 75 1 348 1 
13 1 75 1 348 1 
73 2 97 1 74 2 75 1 131 1 99 1 132 1 253 1 56 2 298 1 321 1 255 1 215 2 263 1 13 1 219 1 181 1 151 1 204 2 91 1 293 1 126 1 208 1 209 1 
73 1 97 2 74 1 75 2 129 1 319 1 132 2 56 1 303 1 322 1 57 1 373 1 215 1 263 2 13 2 219 2 359 1 86 1 181 2 204 1 91 2 70 1 269 1 293 2 21 1 125 1 273 1 126 1 
7 1 26 1 355 1 
144 1 26 1 355 1 
344 1 7 2 244 1 144 1 289 1 355 3 
344 1 7 1 244 1 144 1 60 1 355 2 
344 2 7 1 244 1 144 1 355 2 
51 2 97 5 185 4 55 1 76 3 251 2 132 5 253 1 320 2 298 1 349 1 6 1 165 1 27 1 137 2 167 1 58 1 306 1 214 1 308 1 240 1 361 1 174 1 334 1 241 1 39 1 88 1 377 1 339 2 93 3 208 1 184 1 
51 2 97 6 55 1 253 2 254 3 56 1 349 1 6 1 165 1 57 1 58 1 167 1 306 1 215 1 214 1 308 1 359 1 174 1 361 1 269 1 123 1 366 1 273 1 184 4 73 1 74 1 185 5 76 3 319 1 132 6 320 2 276 3 81 1 137 3 27 1 373 1 240 1 334 1 39 1 204 1 339 2 93 3 
51 2 97 3 185 2 55 1 251 1 76 4 132 3 253 1 320 2 349 1 165 1 137 3 27 2 58 1 167 1 214 1 169 1 308 1 174 1 361 1 334 1 39 1 88 1 377 1 339 2 93 3 
51 4 97 4 185 3 55 2 76 7 251 2 132 4 253 2 346 1 320 4 349 1 165 1 137 4 27 3 58 1 167 1 372 1 214 2 169 1 308 2 174 1 361 2 334 1 39 2 88 1 377 1 339 4 93 5 314 1 
317 1 15 1 10 1 
15 1 19 1 
105 1 
363 1 15 1 48 1 
15 1 42 1 
15 1 48 1 
230 1 
112 1 55 1 295 1 54 1 0 1 114 4 2 6 101 1 80 2 278 2 233 3 376 1 138 1 354 1 214 1 285 2 316 1 
112 1 55 1 295 1 54 1 0 1 114 4 2 7 101 1 80 2 278 2 233 3 376 1 138 1 354 1 214 1 285 3 316 1 
112 1 55 1 295 1 54 1 0 1 114 4 2 6 101 1 80 2 278 2 233 3 376 1 45 1 138 1 354 1 214 1 285 2 316 1 
53 1 295 1 54 2 55 5 0 2 186 3 2 38 3 2 101 2 80 8 233 13 278 3 136 1 258 1 193 1 370 1 138 3 354 3 214 5 285 19 112 1 308 2 198 1 361 2 145 1 114 19 335 1 39 2 376 1 243 3 66 1 292 1 153 1 316 5 
53 2 157 1 55 1 54 1 295 1 0 1 2 10 3 4 101 1 80 4 233 5 278 2 193 2 138 1 354 1 214 1 285 5 145 1 114 5 335 2 376 1 66 2 68 1 316 1 
161 1 133 1 79 1 26 1 277 1 7 1 106 2 326 2 259 1 107 1 355 2 262 1 216 1 170 1 358 1 142 1 265 1 144 1 35 1 37 1 289 1 178 1 224 1 290 1 378 1 124 1 340 1 341 1 343 1 382 1 
161 1 133 1 79 1 26 1 4 1 7 1 106 3 326 3 259 1 107 1 282 1 355 2 216 1 170 1 358 1 142 1 265 1 144 1 35 1 37 1 289 1 178 1 224 2 290 1 378 1 124 1 246 1 340 1 343 1 382 1 
133 1 79 1 4 1 26 1 7 1 106 2 326 2 107 1 282 1 355 2 216 1 358 1 142 1 265 1 144 1 35 1 289 1 178 1 224 2 290 1 378 1 124 1 340 1 343 1 382 1 
141 1 15 1 37 1 35 1 220 1 161 1 133 1 178 1 337 1 290 2 166 1 326 1 106 1 352 1 107 1 246 1 124 2 48 1 270 1 340 2 342 1 216 1 382 2 
161 1 133 1 26 1 277 1 7 1 106 1 326 1 259 1 107 1 282 1 355 2 216 1 170 1 358 1 265 1 144 1 35 1 37 1 289 1 178 1 290 1 378 1 124 1 340 1 341 1 382 1 
12 1 
52 1 97 5 56 1 347 1 299 1 349 1 6 1 58 1 166 1 167 1 260 1 107 1 168 1 357 1 216 2 15 1 359 1 174 1 115 1 175 1 62 2 176 2 178 1 180 4 18 1 121 2 122 1 69 1 365 1 184 6 73 1 74 1 76 2 132 5 133 2 137 2 27 2 279 2 29 1 30 1 28 1 84 1 236 2 240 3 35 2 334 1 200 1 203 2 337 1 339 2 93 2 48 1 342 2 49 2 154 1 
52 1 73 1 97 3 74 1 132 3 56 1 347 1 299 1 260 1 28 1 84 1 357 1 359 1 240 1 200 1 175 1 180 2 223 1 121 1 69 1 154 1 184 2 
52 1 73 1 97 3 74 1 132 3 56 1 347 1 299 1 137 1 58 1 260 1 28 1 84 1 357 1 359 1 240 1 200 1 175 1 62 1 180 3 223 1 69 1 154 1 184 1 
52 1 73 1 97 3 74 1 132 3 56 1 347 1 299 1 137 1 58 1 260 1 28 1 84 1 357 1 236 1 359 1 240 1 200 1 175 1 62 1 223 1 180 3 121 1 69 1 154 1 184 2 
52 1 155 1 97 5 56 1 347 1 299 1 6 1 58 5 167 1 260 1 168 1 357 1 359 1 174 1 175 1 62 4 17 1 176 2 180 6 223 1 18 1 121 4 69 1 184 7 73 1 74 1 132 5 232 1 137 5 27 2 279 2 28 1 329 1 84 1 236 4 375 1 240 3 200 1 334 1 203 2 339 1 93 1 49 2 154 1 
52 1 97 4 56 1 347 1 299 1 6 1 167 1 58 1 260 1 168 1 357 1 359 1 174 1 175 1 176 2 62 2 180 4 18 1 121 2 69 1 365 1 184 4 73 1 74 1 76 2 132 4 27 2 137 2 279 2 28 1 84 1 236 2 240 2 334 1 200 1 203 2 339 1 93 1 49 2 154 1 
52 1 155 1 73 1 97 4 74 1 132 4 56 1 347 1 299 1 232 1 6 1 137 1 27 2 58 1 167 1 260 1 279 2 168 1 28 1 84 1 357 1 236 2 359 1 240 2 174 1 334 1 200 1 175 1 62 2 176 2 17 1 180 4 203 2 18 1 121 2 339 1 69 1 93 1 49 2 154 1 184 4 
52 1 155 1 73 1 97 4 74 1 132 4 56 1 347 1 299 1 232 1 6 1 137 1 27 2 58 1 167 1 260 1 279 2 168 1 28 1 84 1 357 1 236 2 359 1 240 2 174 1 334 1 200 1 175 1 62 2 176 2 17 1 180 4 203 2 18 1 121 2 339 1 69 1 93 1 49 2 154 1 184 4 
52 1 73 1 97 4 74 1 76 2 132 4 56 1 347 1 299 1 232 1 256 1 6 1 137 1 325 1 368 1 58 1 167 1 260 1 28 1 356 2 84 1 357 1 236 2 111 2 359 1 240 2 174 1 334 1 200 1 175 1 62 2 176 2 180 4 18 1 121 2 339 1 69 1 93 1 49 2 154 1 184 4 
155 1 52 1 73 1 97 4 74 1 132 4 56 1 347 1 299 1 232 1 6 1 137 1 27 2 58 1 167 1 260 1 279 2 168 1 28 1 84 1 357 1 236 3 375 1 359 1 240 2 174 1 334 1 200 1 175 1 176 2 62 3 17 1 180 5 203 2 18 1 121 3 339 1 69 1 93 1 49 2 154 1 184 5 
155 1 52 1 73 1 97 4 74 1 132 4 56 1 347 1 299 1 232 1 6 1 137 1 27 2 58 1 167 1 260 1 279 2 168 1 28 1 84 1 357 1 236 3 375 1 359 1 240 2 174 1 334 1 200 1 175 1 176 2 62 3 17 1 180 5 203 2 18 1 121 3 339 1 69 1 93 1 49 2 154 1 184 5 
52 1 97 4 56 1 347 1 299 1 6 1 167 1 58 1 260 1 356 2 357 1 111 2 359 1 174 1 175 1 176 2 62 2 180 4 18 1 121 2 69 1 365 1 184 4 73 1 74 1 76 2 132 4 325 1 137 1 28 1 84 1 236 2 240 2 334 1 200 1 339 1 93 1 49 2 154 1 
53 1 295 1 55 1 0 1 2 5 3 2 80 1 300 1 321 2 233 1 278 1 190 1 191 1 193 1 10 1 138 1 354 1 214 1 283 1 285 2 114 3 335 1 376 1 66 1 271 1 
53 2 186 2 2 9 3 4 300 7 321 1 102 1 190 7 191 2 193 2 214 2 283 1 285 3 32 1 308 2 359 1 361 2 114 6 310 1 335 2 41 1 120 1 226 1 243 2 66 2 47 1 95 5 127 1 
73 1 53 1 74 2 296 1 24 1 2 2 133 1 3 2 56 2 321 1 164 1 102 1 191 1 193 1 83 1 107 1 215 1 283 1 139 1 285 1 216 1 331 1 15 1 287 1 35 1 114 1 335 1 178 1 311 1 363 1 226 1 204 1 66 1 48 1 342 1 95 1 315 1 50 1 
73 1 53 2 74 2 2 5 3 4 133 1 56 2 300 2 164 1 102 1 190 2 191 2 193 2 107 1 280 1 214 1 215 1 283 2 139 1 285 2 216 1 195 1 308 1 33 1 331 1 113 1 15 1 35 1 361 1 267 1 114 3 335 2 178 1 311 1 363 1 312 1 226 1 204 1 66 2 48 1 342 1 315 1 
73 1 294 1 53 2 74 1 2 2 133 8 3 4 56 1 189 1 191 2 166 1 193 2 83 1 107 2 282 1 215 1 283 2 262 1 140 1 285 1 216 8 197 1 15 3 360 1 35 7 114 1 335 2 178 2 311 1 337 1 226 1 204 1 66 2 380 1 48 2 342 2 271 1 23 1 274 2 
73 1 53 1 74 1 55 1 319 1 211 1 2 3 3 2 56 1 80 1 300 1 102 1 233 1 190 1 191 1 193 1 215 1 214 1 283 1 285 2 308 1 36 1 361 1 114 1 335 1 39 1 204 1 66 1 95 1 
53 1 308 1 2 2 114 2 335 1 3 2 275 1 300 1 190 1 191 1 193 1 66 1 214 1 283 1 271 1 
53 1 55 1 2 2 335 1 3 2 39 1 300 1 201 1 190 1 191 1 193 1 66 1 283 1 271 1 285 2 
53 1 308 1 361 1 2 2 114 2 335 1 3 2 300 1 190 1 191 1 193 1 66 1 214 1 283 1 271 1 
294 1 53 1 308 1 2 2 114 2 335 1 3 2 275 1 300 1 190 1 191 1 193 1 66 1 214 1 283 1 
294 1 53 1 55 1 2 2 335 1 3 2 39 1 300 1 201 1 190 1 191 1 193 1 66 1 283 1 285 2 
294 1 53 1 308 1 361 1 2 2 114 2 335 1 3 2 300 1 190 1 191 1 193 1 66 1 214 1 283 1 
53 1 308 1 361 1 114 2 2 2 335 1 3 2 300 1 190 1 191 1 193 1 66 1 214 1 283 1 
53 1 74 1 2 2 133 1 3 2 56 1 321 1 164 1 191 1 193 1 83 1 107 1 283 1 285 1 216 1 331 1 15 1 35 1 114 1 335 1 178 1 363 1 312 1 226 1 66 1 48 1 342 1 315 1 
53 1 74 1 2 2 133 1 3 2 56 1 321 1 212 1 191 1 193 1 83 1 107 1 283 1 285 1 216 1 217 1 331 1 15 1 35 1 114 1 335 1 178 1 43 1 363 1 226 1 66 1 48 1 342 1 
53 1 308 1 361 1 2 2 114 2 335 1 3 2 300 1 102 1 190 1 191 1 193 1 66 1 214 1 283 1 
53 1 74 1 2 2 133 1 3 2 56 1 300 1 164 1 190 1 191 1 193 1 107 1 214 1 283 1 262 1 216 1 308 1 331 1 15 1 35 1 267 1 361 1 114 2 335 1 178 1 363 1 312 1 66 1 48 1 315 1 
73 1 53 1 74 1 319 1 2 2 3 2 56 1 300 1 102 1 233 1 190 1 191 1 193 1 215 1 214 1 283 1 308 1 36 1 361 1 114 2 335 1 204 1 66 1 227 1 95 1 316 1 
96 1 53 2 55 2 250 1 186 1 2 13 3 4 367 1 80 2 233 4 136 1 193 2 214 2 284 1 31 1 285 7 286 1 308 2 238 1 361 2 114 6 310 1 335 2 39 2 118 1 243 2 66 2 68 1 316 2 
96 2 53 3 55 2 250 4 186 2 2 26 3 6 100 1 162 1 5 1 367 1 80 2 233 4 136 2 193 3 261 1 214 3 31 1 285 12 308 3 173 1 238 2 145 2 361 3 114 14 335 3 39 2 177 1 118 1 150 1 243 2 66 3 68 1 316 2 
96 2 53 3 55 5 295 1 250 4 0 1 2 41 3 6 100 1 162 1 5 1 261 1 354 1 214 5 308 4 173 1 361 4 310 1 114 20 177 1 118 1 66 3 68 1 316 4 186 3 80 5 367 1 233 9 278 1 136 3 193 3 138 1 31 1 285 21 286 1 238 1 34 1 145 1 335 3 39 4 150 1 376 1 243 4 
96 2 53 4 295 1 55 4 0 1 250 4 186 3 2 39 3 8 100 1 162 1 5 1 367 1 80 5 278 1 233 8 136 3 193 4 138 1 261 1 354 1 214 5 31 1 285 19 286 1 308 4 173 1 34 1 238 1 145 2 361 4 114 20 310 1 335 4 39 3 177 1 118 1 376 1 150 1 243 4 66 4 68 1 316 3 
96 1 53 2 295 1 55 8 0 1 250 4 186 4 2 53 3 4 100 1 162 1 5 1 367 1 80 8 278 1 233 15 136 2 193 2 138 1 261 1 354 1 214 8 31 1 285 26 308 7 173 1 238 1 145 1 361 7 114 27 310 2 335 2 39 7 177 1 118 1 120 2 376 1 150 1 243 4 66 2 68 1 316 7 
210 1 13 1 149 1 219 1 369 1 75 1 91 1 293 1 110 1 181 1 
131 1 209 1 
72 1 13 1 225 1 219 1 75 1 91 1 293 1 272 1 181 1 
104 1 218 1 
313 1 252 1 348 1 
73 1 97 1 74 1 75 1 129 1 319 1 132 1 56 1 303 1 322 1 57 1 373 1 215 1 263 2 13 1 219 1 359 1 86 1 181 1 204 1 91 1 70 1 269 1 293 1 21 1 125 1 273 1 126 1 
73 1 97 1 74 1 75 1 129 1 319 1 132 1 56 1 303 1 322 1 57 1 373 1 215 1 263 2 13 1 219 1 359 1 86 1 181 1 204 1 91 1 70 1 269 1 293 1 21 1 125 1 273 1 126 1 
73 1 97 1 74 1 75 1 129 1 319 1 132 1 56 1 303 1 322 1 57 1 373 1 215 1 263 2 13 1 219 1 359 1 86 1 181 1 204 1 91 1 70 1 269 1 293 1 21 1 125 1 273 1 126 1 
104 1 218 1 313 1 
104 1 218 1 313 1 
252 1 348 1 
313 1 252 1 348 1 
151 1 99 1 
73 2 97 1 74 2 185 1 75 1 158 1 131 1 99 1 132 1 253 1 56 2 298 1 321 1 255 1 303 1 215 2 263 1 13 1 219 1 181 1 151 1 204 2 91 1 293 1 21 1 208 1 209 1 
73 2 53 1 74 2 2 2 133 2 3 2 56 2 102 1 191 1 371 1 193 1 83 1 107 1 283 1 285 1 216 2 197 1 15 1 35 2 114 1 147 1 335 1 221 1 178 1 63 1 226 1 66 1 380 1 48 1 22 1 274 2 
144 1 265 1 35 2 289 1 133 2 26 1 178 1 7 1 291 1 378 1 259 1 206 1 107 1 247 1 355 2 282 1 340 1 262 1 216 2 
144 1 265 1 35 1 130 1 289 1 133 1 26 1 178 1 7 1 378 1 259 1 247 1 107 1 355 2 282 1 340 1 216 1 
15 1 159 1 35 1 220 1 133 1 178 1 337 1 291 1 166 1 107 1 48 1 340 1 342 1 216 1 
144 1 265 1 35 1 289 1 133 1 26 1 178 1 7 1 291 1 378 1 259 1 206 1 247 1 107 1 355 2 282 1 340 1 216 1 
119 1 
137 1 58 1 339 1 10 1 93 1 71 1 257 1 
97 1 76 1 132 1 6 1 27 1 137 2 167 1 58 1 279 1 168 1 240 1 174 1 334 1 203 1 339 1 93 1 184 1 
156 2 51 6 249 1 97 5 55 2 1 2 347 2 349 2 257 1 6 4 213 1 58 2 9 2 167 4 304 2 107 3 214 2 262 1 216 3 308 2 172 2 15 10 113 2 174 4 361 2 178 4 363 3 364 2 19 3 71 1 184 5 317 2 76 12 318 1 132 5 133 3 188 2 320 6 27 6 137 8 327 2 29 1 239 1 35 3 240 3 199 1 334 4 39 2 42 2 90 1 339 8 93 9 48 3 342 1 
51 5 97 1 55 2 1 2 76 6 186 1 132 1 100 1 162 1 320 5 5 1 349 1 6 2 136 1 27 3 137 5 167 2 58 2 261 1 29 1 353 1 214 2 172 1 308 2 240 1 174 2 361 2 334 2 39 2 179 1 150 1 243 1 339 5 93 8 184 1 
155 1 73 1 97 1 74 1 55 1 0 1 1 2 319 1 132 1 56 1 6 1 57 1 167 1 373 1 138 1 354 1 214 2 215 1 172 1 359 1 174 1 334 1 339 2 204 1 269 1 93 2 273 1 153 1 
174 1 334 1 257 1 6 1 137 1 167 1 58 1 339 1 93 1 71 1 
51 5 172 1 308 2 55 2 113 1 1 2 76 10 361 2 320 5 39 2 27 5 137 5 339 5 93 5 214 2 
137 1 97 1 58 1 240 1 132 1 184 1 
249 2 97 3 132 3 133 4 349 2 6 1 167 2 166 1 107 1 30 1 29 2 169 1 216 4 15 1 239 1 35 4 240 2 174 2 334 2 16 1 178 1 64 1 337 1 339 2 122 1 93 2 48 1 342 2 184 4 
73 2 53 1 74 3 319 2 2 1 3 2 133 1 56 3 321 1 164 1 191 1 193 1 59 1 107 1 215 2 283 1 285 1 216 1 331 1 15 1 35 1 335 1 178 1 312 1 363 1 226 1 66 1 204 2 269 1 48 1 342 1 315 1 
51 2 1 1 76 4 320 2 349 1 6 1 278 1 137 4 27 2 58 2 167 1 29 1 174 1 334 1 339 2 93 2 
293 1 350 1 181 1 
171 1 369 1 99 1 293 1 181 1 
293 1 350 1 181 1 
293 1 350 1 181 1 
65 1 293 1 181 1 
65 1 293 1 181 1 
65 1 293 1 181 1 
293 1 181 1 
13 1 75 1 
53 2 55 1 295 1 0 1 145 1 2 7 114 4 335 2 3 4 80 1 278 1 233 2 376 1 193 2 66 2 138 1 354 1 214 1 285 3 316 1 
295 1 55 1 0 1 114 3 2 5 80 1 278 1 233 1 376 1 10 1 138 1 354 1 214 1 285 2 
53 1 308 1 55 1 361 1 114 2 2 4 335 1 3 2 39 1 80 1 233 2 193 1 66 1 235 1 214 1 285 2 316 1 
308 1 55 1 186 1 361 1 2 7 114 3 310 1 39 1 80 1 233 2 136 1 243 2 214 1 285 4 316 1 
53 2 295 1 55 3 0 1 186 2 2 22 3 4 80 4 278 1 233 8 193 2 138 2 354 2 214 3 285 11 308 2 361 2 145 2 310 1 114 11 335 2 39 2 148 1 120 1 376 1 243 2 66 2 316 4 127 1 
243 1 2 1 285 1 
186 1 2 1 114 1 
53 1 308 1 55 1 113 1 361 1 2 6 114 3 3 2 335 1 39 1 80 2 233 3 193 1 66 1 235 1 214 1 285 3 316 1 
53 1 55 2 186 1 2 12 3 2 100 1 162 1 5 1 80 1 233 2 136 1 193 1 261 1 214 2 285 6 308 2 361 2 114 6 335 1 39 2 150 1 243 1 66 1 68 1 316 1 
55 1 0 1 114 3 2 6 80 1 233 2 138 1 354 1 214 1 285 3 316 1 
53 1 295 1 145 1 114 1 2 3 335 1 3 2 80 1 148 1 233 2 376 1 193 1 66 1 138 1 354 1 285 2 316 1 
53 1 55 2 0 1 114 5 2 10 3 2 335 1 80 3 233 5 193 1 66 1 68 1 138 2 354 2 214 2 285 5 153 1 316 2 
53 1 308 1 114 2 2 2 335 1 3 2 233 1 193 1 66 1 68 1 214 1 316 1 
53 1 308 1 55 1 361 1 114 2 2 4 335 1 3 2 39 1 80 1 233 2 193 1 66 1 68 1 214 1 285 2 316 1 
286 1 53 3 145 1 2 3 114 1 335 3 3 6 80 1 148 1 233 2 193 3 66 3 68 1 138 1 354 1 285 2 316 1 
53 5 295 1 55 5 0 2 186 3 2 33 3 10 80 6 278 1 233 11 258 1 136 1 370 1 193 5 138 3 235 1 354 3 214 5 285 17 286 1 308 3 198 1 145 2 361 3 114 16 310 1 335 5 39 3 148 1 376 1 243 4 66 5 68 1 316 5 
53 1 55 1 295 1 0 1 186 1 2 7 3 2 100 1 80 1 278 1 233 1 136 1 193 1 138 1 354 1 214 1 285 3 114 4 335 1 376 1 243 1 66 1 68 1 
53 2 55 1 295 1 0 1 186 1 2 10 3 4 100 1 80 1 278 1 233 2 136 1 193 2 138 1 235 1 354 1 214 2 285 4 308 1 361 1 114 6 310 1 335 2 376 1 243 2 66 2 68 1 316 1 
53 3 295 1 55 3 0 1 186 1 2 18 3 6 100 1 162 1 5 1 80 2 278 1 233 3 136 1 193 3 138 1 261 1 235 1 354 1 214 3 285 9 308 2 361 2 145 1 114 9 335 3 39 2 376 1 150 1 243 1 66 3 68 1 316 1 
53 3 295 1 55 2 0 1 186 1 2 16 3 6 100 1 162 1 5 1 80 2 278 1 233 4 136 1 193 3 138 1 261 1 235 1 354 1 214 3 285 6 308 2 145 1 361 2 114 10 335 3 39 1 376 1 150 1 243 1 66 3 68 1 316 2 
53 1 55 1 295 1 0 1 186 1 2 7 3 2 100 1 80 1 278 1 233 1 136 1 193 1 138 1 354 1 214 1 285 3 114 4 335 1 376 1 243 1 66 1 68 1 
53 1 55 2 186 1 2 12 3 2 100 1 162 1 5 1 80 1 233 2 136 1 193 1 261 1 214 2 285 6 308 2 361 2 114 6 335 1 39 2 150 1 243 1 66 1 68 1 316 1 
53 4 295 1 55 2 0 1 186 1 2 17 3 8 100 1 162 1 5 1 80 2 278 1 233 4 136 1 193 4 138 1 261 1 235 1 354 1 214 3 285 7 308 2 361 2 145 2 114 10 335 4 39 1 376 1 150 1 243 1 66 4 68 1 316 2 
53 4 55 2 186 1 2 16 3 8 100 1 162 1 5 1 80 3 233 6 136 1 193 4 261 1 214 3 285 7 286 1 308 3 361 3 145 2 114 9 335 4 39 2 150 1 243 1 66 4 68 1 316 3 
55 1 295 1 0 1 2 7 114 3 80 3 233 6 376 2 138 3 354 3 214 1 285 4 316 3 
53 4 295 1 55 2 0 1 186 1 2 17 3 8 100 1 162 1 5 1 80 2 278 1 233 3 136 1 193 4 138 1 261 1 354 1 214 3 285 7 286 1 308 2 361 2 145 2 114 10 335 4 39 1 376 1 150 1 243 1 66 4 68 1 316 1 
73 1 74 1 338 1 56 1 357 1 321 1 85 1 
73 1 74 1 336 1 56 1 38 1 321 1 135 1 324 1 338 1 94 1 357 1 85 1 
337 1 166 1 15 1 10 1 35 1 107 1 133 1 48 1 342 1 178 1 216 1 
73 1 74 2 331 1 15 1 35 1 133 1 56 2 178 1 321 1 311 1 363 1 204 1 107 1 48 1 215 1 342 1 315 1 216 1 
73 2 249 1 74 2 331 1 359 1 15 3 35 1 133 1 56 2 299 1 178 1 321 1 42 1 311 1 363 2 364 1 260 1 204 1 107 1 48 2 215 2 315 1 216 1 
73 2 249 1 74 2 133 2 56 2 299 1 321 1 260 1 107 1 11 1 215 2 216 2 331 1 15 3 359 1 35 2 178 1 311 1 42 1 43 1 363 2 364 1 204 1 48 2 
97 2 249 1 317 1 15 4 35 3 132 2 133 3 347 1 178 1 42 1 363 1 137 1 58 1 364 1 183 1 92 1 19 1 107 1 48 1 11 1 342 1 216 3 184 1 
97 2 249 1 317 1 15 4 35 3 132 2 133 3 347 1 178 1 42 1 363 1 137 1 58 1 364 1 327 1 19 1 107 1 48 1 11 1 342 1 216 3 184 1 
35 1 360 1 107 1 133 1 178 1 216 1 
197 1 15 3 360 1 35 6 266 1 133 7 189 1 178 3 89 1 363 1 213 1 107 2 282 1 48 2 342 2 262 1 140 1 216 7 274 1 23 1 264 1 
53 2 295 1 55 3 0 2 2 13 3 4 56 2 300 1 164 1 102 1 107 1 354 2 215 1 214 3 262 1 216 1 359 1 15 1 267 1 114 7 178 1 311 1 312 1 363 1 66 2 315 1 316 1 73 1 74 2 133 1 80 3 321 3 233 4 278 1 190 1 191 2 193 2 138 2 280 1 283 2 285 6 32 1 331 1 35 1 147 1 335 2 376 1 204 1 48 1 153 1 
97 3 317 1 185 1 132 3 133 1 188 1 347 1 257 1 6 2 137 1 58 1 167 2 9 1 304 1 327 1 216 1 15 2 35 1 239 1 240 1 174 2 334 2 339 1 93 1 19 1 342 1 71 1 184 2 
317 1 15 2 360 1 35 2 199 1 133 2 178 2 363 1 213 1 107 1 48 1 262 1 216 2 
15 1 35 4 133 4 178 1 337 1 166 1 205 1 107 1 48 1 11 1 342 1 262 1 216 4 
345 1 249 1 15 1 35 2 333 1 266 1 133 2 362 1 178 2 89 1 363 1 107 1 48 1 216 2 
378 1 144 1 35 1 107 1 133 1 26 1 355 1 342 1 178 1 216 1 
197 1 15 1 35 2 133 2 63 1 178 1 107 1 282 1 48 1 262 1 216 2 
249 1 197 1 15 3 35 4 133 5 178 2 189 1 337 1 166 1 205 1 107 2 48 2 342 1 262 1 216 5 23 1 
249 1 197 1 15 3 35 4 133 5 178 2 189 1 337 1 192 1 166 1 205 1 107 2 48 2 342 1 262 1 216 5 
73 1 74 2 331 1 15 1 35 1 133 1 56 2 178 1 321 1 311 1 43 1 363 1 204 1 107 1 48 1 215 1 342 1 216 1 
249 1 15 1 35 1 266 1 133 1 178 2 89 1 363 1 213 1 107 1 48 1 216 1 264 1 
330 1 77 1 108 1 242 1 321 1 
330 2 52 1 196 1 97 2 185 1 128 1 359 1 77 1 187 1 132 2 87 1 347 1 299 1 242 2 321 1 137 1 58 1 260 1 108 2 
73 1 74 1 77 1 56 1 221 1 242 1 371 1 108 1 22 1 
128 1 77 1 87 1 
142 1 10 1 79 1 343 1 
142 1 106 1 326 1 37 1 161 1 79 1 343 1 
290 1 106 1 124 1 
142 1 37 1 160 1 288 2 161 1 79 1 277 1 351 1 326 3 106 3 46 1 343 1 
224 1 142 1 106 2 326 2 37 1 161 1 79 1 301 1 343 1 
37 1 161 1 79 1 26 1 277 1 7 1 326 1 106 1 328 1 355 1 61 1 
106 1 326 1 37 1 161 1 79 1 343 1 277 1 
142 1 106 1 326 1 37 1 161 1 343 2 277 1 
37 2 161 2 297 1 79 1 277 1 103 1 326 2 106 2 245 1 343 1 
307 1 142 1 37 1 161 1 25 1 79 2 277 1 224 2 326 3 106 3 305 1 328 1 343 1 
142 1 144 1 37 1 161 1 289 1 79 1 26 1 277 1 224 1 7 1 326 2 106 2 355 2 343 1 194 1 
142 1 37 2 161 2 25 1 79 2 301 1 277 1 182 1 224 2 326 4 106 4 328 1 343 1 
142 1 106 1 326 1 37 1 161 1 79 1 343 1 277 1 
142 2 37 1 288 1 161 1 25 1 79 3 351 1 224 2 326 4 106 4 46 1 328 1 374 1 343 2 
142 1 37 1 98 1 161 1 79 1 222 1 277 1 224 1 234 1 326 2 106 2 343 1 
142 1 37 1 288 2 161 1 116 1 79 1 277 1 351 2 326 3 106 3 46 1 343 1 
67 2 146 1 79 2 207 1 
106 1 326 1 37 1 161 1 302 1 277 1 
224 1 307 1 142 1 106 2 326 2 37 1 161 1 79 1 343 1 277 1 
228 1 
142 1 106 1 326 1 37 1 161 1 79 1 343 1 277 1 
307 1 142 1 37 1 288 1 161 1 79 1 277 1 224 1 326 3 106 3 343 1 
328 1 25 1 374 1 79 1 
79 1 343 1 

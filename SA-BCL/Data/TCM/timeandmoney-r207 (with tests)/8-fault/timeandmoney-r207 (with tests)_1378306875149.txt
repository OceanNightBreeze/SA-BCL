#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (348,372) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (348,372) (348,372) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (348,372) (348,372) 252 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 274 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (348,372) (348,372) 252 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | RETURN | 1328 | return null
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> ==
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2585 | return null
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | ASSIGN | 1327 | = null
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> ==
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | ASSIGN | 815 | = null
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2132 | = null
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1146 | 1 -> -1
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
359 2 361 1 362 1 297 1 299 2 55 1 80 1 251 1 271 1 59 2 9 6 62 1 330 2 11 3 367 1 370 5 17 1 258 2 213 2 337 1 137 4 238 1 118 9 170 2 99 9 221 1 100 1 48 1 
359 2 361 1 362 1 297 1 299 2 55 1 80 1 251 1 271 1 59 2 9 6 62 1 330 2 11 3 367 1 370 5 17 1 258 2 337 1 213 2 137 4 238 1 118 9 170 2 99 9 221 1 100 1 48 1 
359 2 361 1 362 1 297 1 299 2 55 1 80 1 251 1 271 1 59 2 9 7 62 1 330 2 11 4 367 1 370 6 17 1 258 2 337 1 213 2 137 5 238 1 118 10 170 2 99 10 221 1 100 1 48 1 
359 2 361 1 297 1 299 2 55 1 80 1 251 1 271 1 59 2 9 4 62 1 330 2 11 2 367 1 370 4 17 1 258 2 337 1 213 1 137 3 238 1 118 7 170 2 99 7 221 1 100 1 48 1 
359 1 362 1 370 3 297 1 299 1 258 1 80 1 213 2 137 2 238 1 170 1 118 4 59 1 9 3 11 1 99 4 48 1 367 1 
370 1 297 1 299 1 55 1 258 1 363 1 238 1 328 1 118 2 170 1 59 1 46 1 330 1 99 2 100 1 48 1 
370 2 297 1 258 2 137 1 238 1 118 3 271 1 59 2 9 1 330 1 99 3 11 1 48 1 
359 1 361 1 362 1 297 1 299 1 80 1 251 1 269 1 271 1 59 2 9 7 330 1 11 3 367 1 370 5 258 2 70 1 213 2 137 4 238 1 118 9 170 1 99 9 48 1 
359 1 361 1 362 1 297 1 299 1 80 1 251 1 269 1 271 1 59 2 9 7 330 1 11 3 367 1 370 5 258 2 70 1 213 2 137 4 238 1 118 9 170 1 99 9 48 1 
128 1 242 1 300 1 
184 2 54 1 300 1 
160 1 52 2 249 2 287 2 331 1 163 2 275 2 366 2 
52 3 249 2 178 2 156 1 6 1 7 1 107 1 108 1 365 1 331 1 182 1 37 2 275 2 366 2 159 2 310 1 160 1 351 1 336 1 89 1 134 1 112 1 163 2 260 1 116 1 43 1 141 1 121 1 286 2 72 2 196 1 287 3 47 1 198 1 358 1 292 1 294 1 
372 1 
52 1 300 1 225 1 105 1 373 1 272 1 242 1 57 1 354 1 287 1 321 1 289 1 366 1 308 1 
249 1 52 1 300 1 225 1 163 1 272 1 242 1 354 2 57 1 287 1 321 1 275 1 289 1 366 1 308 2 
140 1 354 1 130 1 314 1 308 1 
242 1 354 2 96 1 300 1 130 1 314 1 29 1 308 2 
354 1 314 1 308 1 
354 1 372 1 130 1 348 1 308 1 
300 1 
242 1 354 2 96 1 344 1 300 1 130 1 314 1 308 2 
323 2 77 1 325 2 130 2 300 2 253 1 252 1 348 1 157 2 35 3 158 2 308 5 333 1 209 1 311 1 279 4 133 1 372 1 186 1 314 2 239 2 119 1 242 2 354 5 96 1 378 1 97 1 143 1 
128 1 331 1 
200 1 89 1 345 1 52 2 112 1 163 1 6 1 107 1 7 1 121 1 286 1 72 1 287 2 198 1 182 1 380 1 275 1 366 1 159 1 294 1 
52 2 249 1 163 1 287 2 74 1 331 2 229 1 275 1 366 2 
345 1 176 1 135 1 
89 1 52 1 236 1 112 1 6 1 7 1 107 1 121 1 286 1 72 1 287 1 331 1 198 1 182 1 159 1 294 1 
249 1 52 3 287 3 331 1 380 1 163 3 275 3 366 3 
1 1 57 1 52 1 287 1 163 1 275 1 366 1 
57 1 52 1 249 1 287 1 74 1 229 1 163 1 275 1 366 1 
200 1 249 2 52 4 225 1 178 1 272 1 156 1 6 1 107 1 7 1 57 1 8 1 108 1 365 1 331 1 182 1 37 2 275 3 366 3 308 1 159 1 160 1 351 1 89 1 134 1 112 1 163 3 260 1 116 1 43 1 354 1 121 1 95 1 286 1 72 1 74 1 287 4 47 1 198 1 321 1 380 1 289 1 292 1 294 1 
52 2 287 2 331 1 163 1 380 1 275 1 366 2 373 1 339 1 
200 1 249 1 52 3 300 1 225 1 163 3 284 1 272 1 354 1 57 1 8 1 74 1 287 3 380 2 321 1 275 3 289 1 308 1 366 3 
249 1 52 2 345 1 135 1 163 2 74 1 287 2 380 1 275 2 366 2 
89 1 52 1 112 1 7 1 107 1 6 1 121 1 286 1 72 1 287 1 331 1 198 1 182 1 159 1 294 1 
52 1 112 1 240 1 107 1 6 1 121 1 286 1 72 1 287 1 331 1 198 1 131 1 182 1 159 1 294 1 
345 2 329 1 178 4 5 1 156 1 82 1 61 1 83 1 37 2 68 1 134 1 135 2 260 1 116 2 43 1 239 1 189 1 119 1 241 1 141 2 20 1 176 2 47 1 292 1 
57 1 52 1 287 1 28 1 163 1 289 1 275 1 366 1 
200 1 78 1 52 5 249 1 163 4 373 1 339 1 194 1 287 5 74 1 331 1 380 2 275 4 366 5 
1 1 57 1 52 2 287 2 28 1 163 2 275 2 366 2 
319 1 30 1 
319 1 30 1 
232 1 338 1 
232 1 338 1 
232 1 338 1 
53 1 319 1 30 1 
53 1 319 1 30 1 
161 1 319 1 30 1 
24 1 232 1 319 2 338 1 30 2 264 1 
53 1 319 1 30 1 
223 1 319 1 30 1 
223 1 319 1 30 1 
223 1 319 1 30 1 
50 2 51 2 103 1 300 1 129 1 166 3 282 1 30 2 44 1 31 2 191 1 303 1 192 2 58 1 354 2 319 2 64 2 308 2 264 1 
50 1 161 1 51 1 52 2 129 1 150 1 163 2 164 1 166 1 168 1 30 1 31 1 139 1 192 1 94 1 354 1 287 2 319 1 331 1 275 2 145 1 366 2 308 1 102 1 
359 1 299 1 170 1 
299 1 328 1 170 1 
359 2 79 1 204 1 350 1 328 1 170 3 
359 1 79 1 355 1 204 1 328 1 170 2 
359 1 79 1 204 2 328 1 170 2 
323 1 265 1 54 1 130 4 4 2 300 2 329 1 179 2 82 1 157 1 35 2 36 1 158 1 308 5 184 3 210 1 279 3 353 1 186 1 314 1 167 2 168 1 239 1 139 1 119 1 375 1 242 1 354 5 96 1 173 1 376 1 145 1 
323 2 77 1 265 2 54 3 2 1 130 7 300 5 329 3 179 6 82 3 157 2 35 6 36 3 109 1 158 2 308 9 86 5 184 9 233 1 279 8 186 1 314 6 42 1 167 6 168 4 239 3 190 1 119 3 140 5 242 1 375 1 354 9 96 1 376 2 381 1 
323 1 77 1 265 1 54 2 300 3 130 2 4 1 329 1 179 2 82 1 157 1 35 2 36 1 158 1 308 3 184 4 279 3 353 1 168 1 167 2 239 1 242 1 119 1 354 3 173 1 376 1 
323 1 77 1 265 1 54 3 2 1 300 4 4 2 130 3 329 2 179 4 82 2 157 1 35 4 36 2 158 1 308 4 184 7 279 5 353 1 42 1 167 4 168 2 239 2 242 1 119 2 354 4 173 1 376 1 381 1 
128 1 6 1 288 1 
6 1 317 1 
360 1 
6 1 121 1 
6 3 69 1 121 1 288 2 182 1 65 1 
6 1 121 1 182 1 
6 1 124 1 
209 1 68 3 133 1 116 3 316 1 239 1 189 2 178 7 119 1 172 2 141 4 356 1 207 1 110 1 87 1 67 1 333 1 
209 1 68 3 133 1 116 3 316 1 239 1 189 2 178 7 119 1 172 2 141 4 356 1 207 1 110 1 87 1 67 1 333 1 
209 1 68 3 133 1 116 3 302 1 316 1 239 1 189 2 178 7 119 1 172 2 141 4 207 1 356 1 110 1 87 1 67 1 333 1 
250 1 327 1 178 31 329 3 82 3 156 1 207 1 36 3 37 2 276 1 110 2 87 2 333 2 67 5 209 1 68 10 133 2 91 1 134 1 260 1 316 1 116 15 93 3 239 4 189 5 172 3 119 4 285 1 141 16 377 1 220 4 122 1 356 1 292 1 
327 1 178 9 156 2 207 1 37 4 110 1 87 1 67 1 333 1 209 1 68 4 14 1 133 1 134 2 260 2 116 4 239 1 189 3 119 1 172 2 141 5 98 1 356 1 292 2 
359 1 248 1 297 1 266 1 299 1 328 1 107 1 59 1 33 1 9 1 330 1 85 1 159 1 38 1 350 1 370 1 278 1 258 1 115 1 281 1 238 1 118 2 170 2 120 1 243 1 286 1 72 1 99 2 48 1 294 1 
359 1 266 1 299 1 328 1 107 1 59 1 33 1 9 2 330 1 85 1 350 1 159 1 38 1 370 1 258 1 115 1 280 1 281 1 238 1 340 1 118 3 170 2 120 1 243 1 286 1 342 1 72 1 99 3 48 1 294 1 
359 1 299 1 328 1 107 1 33 1 9 2 330 1 85 1 159 1 38 1 350 1 370 1 115 1 280 1 281 1 238 1 118 2 170 2 120 1 286 1 342 1 72 1 99 2 48 1 294 1 
56 1 107 1 6 1 59 1 33 2 10 1 330 2 159 1 258 1 115 2 215 1 340 1 118 1 120 2 45 1 121 1 286 1 72 1 198 1 99 1 322 1 126 1 294 1 
359 1 248 1 297 1 266 1 299 1 258 1 115 1 281 1 328 1 170 2 118 1 107 1 120 1 243 1 59 1 33 1 342 1 286 1 72 1 330 1 99 1 85 1 350 1 38 1 159 1 294 1 
151 1 
323 1 265 1 52 1 225 1 105 1 272 1 107 1 6 1 57 1 157 1 35 1 274 1 307 1 158 1 366 1 308 3 88 1 159 2 279 1 186 1 314 2 214 1 373 1 193 2 45 1 354 3 96 1 121 1 219 1 286 2 174 1 72 2 287 1 144 1 198 2 321 1 289 1 146 1 291 1 126 1 294 1 
344 1 52 1 225 1 314 2 214 1 105 1 373 1 272 1 217 1 193 2 57 1 354 3 96 1 219 1 287 1 307 1 321 1 289 1 308 3 366 1 88 1 146 1 
344 1 52 1 300 1 225 1 314 1 214 1 105 1 373 1 272 1 242 1 193 3 57 1 354 3 96 1 219 1 287 1 13 1 307 1 321 1 289 1 308 3 366 1 88 1 146 1 
344 1 52 1 225 1 26 1 300 1 105 1 272 1 57 1 307 1 13 1 366 1 308 3 88 1 314 2 214 1 373 1 193 3 217 1 242 1 354 3 96 1 219 1 287 1 321 1 289 1 146 1 
344 1 202 1 52 1 54 2 300 5 105 1 153 1 154 1 57 1 157 1 60 2 307 1 13 4 158 1 308 5 314 7 315 1 214 1 217 4 354 5 219 1 321 1 323 1 26 4 225 1 272 1 35 1 366 1 88 1 368 1 277 2 279 1 40 2 90 1 186 1 187 1 373 1 193 6 242 5 96 3 287 1 289 1 245 2 146 1 
323 1 52 1 54 2 300 2 26 2 225 1 105 1 255 1 272 1 57 1 157 1 60 2 35 1 13 2 307 1 158 1 308 4 366 1 88 1 184 2 277 2 40 2 279 1 90 1 186 1 187 1 314 4 214 1 373 1 242 1 217 2 193 4 354 4 96 2 219 1 287 1 321 1 289 1 245 2 146 1 
323 1 202 1 52 1 54 2 300 1 26 2 225 1 105 1 153 1 272 1 154 1 57 1 157 1 60 2 35 1 13 2 307 1 158 1 366 1 308 4 88 1 277 2 40 2 279 1 90 1 186 1 187 1 314 4 214 1 373 1 242 1 217 2 193 4 354 4 96 2 219 1 287 1 321 1 289 1 245 2 146 1 
323 1 202 1 52 1 54 2 300 1 26 2 225 1 105 1 153 1 272 1 154 1 57 1 157 1 60 2 35 1 13 2 307 1 158 1 366 1 308 4 88 1 277 2 40 2 279 1 90 1 186 1 187 1 314 4 214 1 373 1 242 1 217 2 193 4 354 4 96 2 219 1 287 1 321 1 289 1 245 2 146 1 
323 1 25 2 177 1 52 1 300 1 26 2 225 1 105 1 267 2 153 1 272 1 57 1 157 1 35 1 13 2 307 1 158 1 208 1 366 1 308 4 88 1 184 2 277 2 279 1 90 1 186 1 314 4 214 1 373 1 242 1 217 2 193 4 171 1 354 4 96 2 219 1 287 1 321 1 289 1 245 2 146 1 
323 1 202 1 52 1 54 2 300 1 225 1 26 3 105 1 153 1 272 1 154 1 57 1 157 1 60 2 35 1 307 1 13 3 158 1 366 1 308 4 88 1 368 1 277 2 40 2 279 1 90 1 186 1 187 1 314 5 214 1 373 1 242 1 193 5 217 3 354 4 96 2 219 1 287 1 321 1 289 1 245 2 146 1 
323 1 202 1 52 1 54 2 300 1 225 1 26 3 105 1 153 1 272 1 154 1 57 1 157 1 60 2 35 1 307 1 13 3 158 1 366 1 308 4 88 1 368 1 277 2 40 2 279 1 90 1 186 1 187 1 314 5 214 1 373 1 242 1 193 5 217 3 354 4 96 2 219 1 287 1 321 1 289 1 245 2 146 1 
323 1 25 2 52 1 300 1 26 2 225 1 105 1 267 2 255 1 272 1 57 1 157 1 35 1 13 2 307 1 158 1 308 4 366 1 208 1 88 1 184 2 277 2 279 1 90 1 186 1 314 4 214 1 373 1 242 1 217 2 193 4 354 4 96 2 219 1 287 1 321 1 289 1 245 2 146 1 
128 1 345 1 178 6 5 1 156 1 331 2 207 1 37 2 333 1 209 1 68 2 133 1 134 1 135 1 260 1 116 3 43 1 189 2 239 1 119 1 172 1 141 3 176 1 47 1 356 1 292 1 
345 8 3 1 178 10 329 1 155 1 156 1 82 2 36 2 37 2 67 1 68 2 335 1 185 1 91 1 134 1 259 1 135 3 260 1 116 4 43 1 189 1 93 2 239 1 119 2 141 6 220 2 176 8 47 1 292 1 
200 1 52 2 178 2 6 1 107 1 7 1 156 1 331 1 182 1 275 1 37 2 366 1 159 1 185 1 351 1 336 1 89 1 112 1 236 1 134 1 135 1 313 1 163 1 260 1 116 1 43 1 138 1 121 1 141 1 286 1 72 1 287 2 198 1 47 1 380 1 292 1 294 1 147 1 
200 1 149 2 52 3 345 7 347 2 156 3 7 2 107 2 6 2 207 1 159 3 67 4 209 1 68 8 351 1 16 2 112 2 163 1 260 3 116 10 169 1 172 1 119 3 121 2 72 3 176 7 320 1 356 1 178 20 329 2 81 2 82 2 365 2 181 1 331 2 182 2 36 2 37 6 275 1 366 1 333 1 185 1 336 1 89 2 133 1 134 3 135 7 43 3 189 4 239 3 141 10 342 1 286 3 287 3 198 1 47 3 380 1 292 3 294 2 
298 1 52 1 152 1 178 2 5 1 107 2 6 3 156 2 228 1 275 1 37 4 366 1 159 8 351 1 336 1 278 1 134 2 212 1 163 1 260 2 165 1 116 1 43 2 261 1 45 1 141 1 121 2 342 1 286 8 72 7 73 1 287 1 198 2 47 2 380 1 358 2 292 2 126 1 294 2 
345 1 249 1 52 1 178 3 329 1 156 1 82 1 36 1 275 1 37 2 366 1 68 1 185 1 134 1 135 1 163 1 260 1 116 2 43 1 189 1 239 1 119 1 244 1 141 1 176 1 74 1 287 1 47 1 292 1 
68 1 345 1 134 1 135 1 260 1 43 1 178 2 5 1 156 1 82 1 119 1 141 2 20 1 176 1 47 1 37 2 292 1 67 1 
68 1 345 1 134 1 135 1 260 1 116 2 43 1 189 1 178 2 329 1 239 1 5 1 156 1 241 1 176 1 47 1 37 2 292 1 
345 2 178 4 329 1 5 1 82 1 156 1 36 1 37 2 67 1 68 2 134 1 135 2 260 1 116 2 43 1 239 1 189 1 119 1 141 2 176 2 47 1 292 1 
68 1 345 1 134 1 135 1 260 1 43 1 178 2 156 1 82 1 119 1 141 2 228 1 20 1 176 1 47 1 37 2 292 1 67 1 
68 1 345 1 134 1 135 1 260 1 116 2 43 1 189 1 178 2 329 1 239 1 156 1 241 1 228 1 176 1 47 1 37 2 292 1 
345 2 178 4 329 1 82 1 156 1 228 1 36 1 37 2 67 1 68 2 134 1 135 2 260 1 116 2 43 1 239 1 189 1 119 1 141 2 176 2 47 1 292 1 
345 2 178 4 329 1 82 1 156 1 36 1 37 2 67 1 68 2 134 1 135 2 260 1 116 2 43 1 239 1 189 1 119 1 141 2 176 2 47 1 292 1 
52 1 178 2 107 1 7 1 6 1 156 1 365 1 331 1 182 1 37 2 159 1 351 1 336 1 89 1 112 1 134 1 260 1 116 1 43 1 141 1 121 1 286 1 72 1 287 1 198 1 47 1 292 1 294 1 
351 1 134 1 136 1 260 1 116 1 43 1 178 1 156 1 57 1 286 1 262 1 72 1 331 1 198 1 47 1 37 2 159 1 292 1 
345 2 178 4 329 1 82 1 156 1 36 1 37 2 67 1 68 2 185 1 134 1 135 2 260 1 116 2 43 1 239 1 189 1 119 1 141 2 176 2 47 1 292 1 
149 1 345 2 52 1 329 1 178 4 82 1 107 1 7 1 6 1 156 1 365 1 182 1 36 1 37 2 159 1 67 1 68 2 89 1 278 1 112 1 134 1 135 2 260 1 116 2 43 1 189 1 239 1 119 1 141 2 121 1 286 1 72 1 176 2 287 1 47 1 292 1 294 1 
249 1 52 1 345 1 329 1 178 3 156 1 82 1 36 1 275 1 37 2 366 1 332 1 67 1 68 1 185 1 134 1 135 1 163 1 260 1 116 1 43 1 239 1 119 1 141 2 74 1 287 1 176 1 47 1 292 1 
203 1 346 1 156 3 257 1 305 1 207 1 67 4 209 1 68 8 14 1 15 1 211 1 260 3 116 21 119 5 172 1 19 2 220 4 318 1 122 3 356 1 23 1 127 4 324 1 327 1 268 1 329 4 178 41 82 4 364 1 36 4 37 6 333 1 132 1 133 1 91 1 134 3 41 1 239 5 93 3 189 4 141 20 292 3 
203 1 324 1 346 1 327 2 268 1 178 38 329 3 156 4 82 4 257 1 364 1 305 1 207 1 36 4 37 8 333 1 67 3 209 1 68 7 132 1 14 1 15 1 133 1 91 1 41 1 134 4 211 1 260 4 116 18 189 4 93 3 239 4 172 1 119 5 141 20 19 2 318 1 220 4 122 3 356 1 23 1 292 4 127 4 
203 1 324 1 3 2 327 1 268 1 178 52 329 7 156 2 82 7 257 1 364 1 305 1 207 1 36 7 37 4 333 1 67 7 209 1 68 14 132 1 14 1 133 1 91 2 41 1 134 2 211 1 260 2 116 25 189 7 93 4 239 8 172 1 119 8 141 27 19 1 318 1 220 4 122 2 356 1 23 1 292 2 127 4 
203 1 324 1 326 1 178 19 329 3 156 2 82 3 305 1 36 3 37 4 67 3 68 6 132 1 14 1 15 1 91 1 134 2 260 2 116 10 189 3 93 1 239 3 119 3 141 9 19 1 318 2 220 2 122 1 292 2 127 2 
203 1 324 1 327 2 268 1 178 26 329 2 156 3 82 3 257 1 364 1 305 2 36 3 37 6 67 2 68 4 132 1 14 1 41 1 134 3 211 1 260 3 116 12 189 2 239 2 93 2 119 3 141 14 19 2 318 1 220 2 122 2 292 3 23 1 127 4 
192 1 50 1 51 1 103 1 319 1 254 1 30 1 44 1 264 1 31 1 
161 1 150 1 
270 1 374 1 192 1 50 1 51 1 319 1 231 1 30 1 31 1 
50 1 51 1 103 1 300 1 129 1 166 2 282 1 30 1 44 1 31 1 191 1 303 1 192 1 354 1 319 1 64 1 308 1 264 1 
50 1 51 1 103 1 300 1 129 1 166 2 282 1 30 1 44 1 31 1 191 1 303 1 192 1 354 1 319 1 64 1 308 1 264 1 
50 1 51 1 103 1 300 1 129 1 166 2 282 1 30 1 44 1 31 1 191 1 303 1 192 1 354 1 319 1 64 1 308 1 264 1 
24 1 53 1 21 1 
24 1 53 1 21 1 
223 1 34 1 
223 1 24 1 34 1 
94 1 164 1 
50 1 51 1 52 2 130 1 150 1 30 1 31 1 331 1 64 1 275 2 308 1 366 2 161 1 163 2 164 1 166 1 168 1 191 1 139 1 192 1 354 1 94 1 175 1 287 2 319 1 145 1 102 1 
53 1 21 1 
223 1 24 1 34 1 
52 2 104 1 178 2 107 1 6 1 156 1 12 1 37 2 366 2 159 2 369 1 185 1 351 1 336 1 134 1 212 1 260 1 116 1 43 1 261 1 195 1 121 1 141 1 286 2 72 2 287 2 47 1 358 2 101 1 292 1 294 1 
359 1 111 1 278 1 299 1 115 1 281 1 301 1 328 1 170 2 107 1 243 1 342 1 286 2 72 2 306 1 85 1 350 1 159 2 294 1 
359 1 299 1 115 1 281 1 301 1 328 1 170 2 256 1 107 1 243 1 342 1 286 1 72 1 85 1 350 1 159 1 294 1 
111 1 115 1 215 1 107 1 6 1 45 1 121 1 286 1 72 1 180 1 198 1 159 1 126 1 294 1 
359 1 111 1 299 1 115 1 281 1 301 1 328 1 170 2 107 1 243 1 342 1 286 1 72 1 306 1 85 1 350 1 159 1 294 1 
206 1 
128 1 242 1 143 1 279 1 300 1 35 1 253 1 
323 1 184 1 40 1 279 1 54 1 300 2 186 1 187 1 314 1 242 1 354 1 96 1 157 1 60 1 35 1 158 1 308 1 
54 6 300 8 253 1 347 2 205 1 107 4 6 10 157 4 65 1 158 4 308 5 159 3 162 2 314 5 216 2 167 6 317 3 218 2 119 2 354 5 121 3 72 3 263 1 124 2 357 2 22 1 222 2 323 4 265 2 325 2 225 2 179 6 329 2 82 2 35 8 182 3 36 2 184 12 278 1 279 9 235 1 186 4 239 2 242 2 96 3 143 1 286 3 197 1 198 1 288 2 290 2 291 1 294 3 148 2 
323 2 265 1 325 2 54 3 300 5 268 1 179 5 329 2 82 2 157 2 364 1 35 5 36 2 158 2 308 1 334 1 184 6 352 1 279 8 41 1 186 2 211 1 314 1 167 5 93 1 239 2 119 2 242 2 354 1 96 1 220 1 122 1 290 1 291 1 23 1 
209 1 323 1 202 1 279 2 133 1 325 2 372 1 186 1 252 1 348 1 239 1 119 1 354 1 157 1 35 1 158 1 308 1 333 1 
323 1 279 1 300 1 186 1 253 1 242 1 157 1 143 1 35 1 158 1 
184 10 325 2 279 5 54 5 300 5 347 1 167 5 179 5 329 2 239 2 82 2 119 2 35 5 36 2 290 1 
242 1 354 1 96 1 300 1 314 1 308 1 
323 2 77 1 265 2 205 1 107 1 6 1 157 2 35 2 158 2 308 3 159 4 279 2 186 1 314 4 45 1 354 3 121 1 96 2 142 1 174 1 286 4 72 4 144 1 198 2 75 1 22 2 291 2 126 1 294 1 
52 3 249 2 178 1 7 1 107 1 6 1 156 1 108 1 365 1 331 1 182 1 37 2 275 2 366 2 159 1 160 1 351 1 89 1 134 1 112 1 163 2 260 1 116 1 43 1 121 1 286 1 72 1 287 3 198 1 47 1 292 1 294 1 
323 1 184 4 265 1 279 1 54 2 300 4 186 1 167 2 179 2 172 1 242 2 157 1 35 2 158 1 291 1 
192 1 341 1 31 1 
192 1 341 1 31 1 
192 1 92 1 164 1 44 1 31 1 
192 1 341 1 31 1 
192 1 84 1 31 1 
192 1 84 1 31 1 
192 1 84 1 31 1 
192 1 31 1 
319 1 30 1 
209 1 68 3 133 1 134 2 260 2 116 4 327 1 239 1 178 8 189 2 172 1 119 1 156 2 141 4 356 1 207 1 37 4 292 2 67 1 333 1 
128 1 209 1 68 2 133 1 116 3 189 2 178 6 239 1 172 1 119 1 141 3 356 1 207 1 333 1 
68 2 134 1 260 1 116 2 189 1 239 1 329 1 178 4 156 1 82 1 119 1 141 2 36 1 37 2 230 1 292 1 67 1 
68 2 91 1 116 4 189 1 239 1 329 1 178 7 93 1 82 1 119 1 141 3 220 2 122 1 36 1 67 1 
3 1 327 2 178 23 329 2 82 2 156 2 207 1 36 2 37 4 333 2 67 4 209 1 68 9 335 1 133 2 91 1 134 2 260 2 116 12 237 1 93 2 239 3 189 5 172 1 119 3 141 11 220 2 356 1 292 2 
178 1 220 1 116 1 
178 1 93 1 141 1 
68 3 134 1 260 1 347 1 116 3 178 6 329 1 239 1 189 2 156 1 82 1 119 1 141 3 36 1 37 2 230 1 292 1 67 1 
268 1 178 12 329 2 156 1 82 2 364 1 36 2 37 2 67 1 68 2 14 1 134 1 41 1 211 1 260 1 116 6 93 1 239 2 189 1 119 2 141 6 220 1 122 1 23 1 292 1 
209 1 68 2 133 1 116 3 178 6 239 1 189 1 119 1 141 3 333 1 67 1 
68 2 133 1 134 1 260 1 116 2 237 1 327 1 189 1 178 3 156 1 141 1 207 1 356 1 37 2 292 1 67 1 333 1 
178 8 156 1 207 1 37 2 333 1 209 1 68 2 14 1 133 1 134 1 260 1 116 4 239 1 93 1 189 2 172 1 119 1 141 4 220 1 122 1 356 1 23 1 292 1 
178 11 156 2 82 1 207 1 36 1 37 4 230 1 333 1 67 1 209 1 68 3 14 1 133 1 91 1 134 2 260 2 116 5 239 1 189 2 93 1 172 1 119 2 141 6 220 2 122 1 356 1 23 1 292 2 
327 1 268 1 178 19 329 2 156 3 82 2 364 1 207 1 36 2 37 6 230 1 333 1 67 1 209 1 68 4 14 1 133 1 134 3 41 1 211 1 260 3 116 10 93 1 239 3 189 3 172 1 119 3 141 9 220 1 122 1 356 1 23 1 292 3 
327 1 268 1 178 17 329 1 156 3 82 2 364 1 207 1 36 2 37 6 230 1 333 1 67 2 209 1 68 5 14 1 133 1 134 3 41 1 211 1 260 3 116 7 93 1 239 2 189 3 172 1 119 3 141 10 220 1 122 1 356 1 23 1 292 3 
178 8 156 1 207 1 37 2 333 1 209 1 68 2 14 1 133 1 134 1 260 1 116 4 239 1 93 1 189 2 172 1 119 1 141 4 220 1 122 1 356 1 23 1 292 1 
268 1 178 12 329 2 156 1 82 2 364 1 36 2 37 2 67 1 68 2 14 1 134 1 41 1 211 1 260 1 116 6 93 1 239 2 189 1 119 2 141 6 220 1 122 1 23 1 292 1 
327 2 268 1 178 18 329 1 156 4 82 2 364 1 207 1 36 2 37 8 230 1 333 1 67 2 209 1 68 5 14 1 133 1 41 1 134 4 211 1 260 4 116 8 93 1 239 2 189 3 172 1 119 3 141 10 220 1 122 1 356 1 23 1 292 4 
327 2 268 1 178 16 329 2 156 4 82 3 364 1 36 3 37 8 67 3 68 6 14 1 15 1 41 1 134 4 211 1 260 4 116 7 93 1 239 2 189 3 119 3 141 9 220 1 122 1 23 1 292 4 
209 1 68 6 133 3 116 4 239 1 178 7 189 3 119 1 141 3 356 1 207 2 333 3 67 3 
327 2 268 1 178 18 329 1 156 4 82 2 364 1 207 1 36 2 37 8 333 1 67 1 209 1 68 4 14 1 15 1 133 1 41 1 134 4 211 1 260 4 116 8 93 1 239 2 189 3 172 1 119 3 141 10 220 1 122 1 356 1 23 1 292 4 
209 1 68 5 14 1 133 2 134 1 252 1 260 1 116 5 189 3 178 10 239 2 156 1 119 2 141 5 37 2 292 1 333 2 67 2 
68 1 14 1 134 1 260 1 178 2 156 1 82 1 119 1 141 2 37 2 292 1 67 1 
68 2 14 1 134 1 260 1 116 2 189 1 239 1 329 1 178 4 156 1 82 1 119 1 141 2 36 1 37 2 292 1 67 1 
68 2 14 1 15 1 133 1 134 3 260 3 116 2 327 1 237 1 178 3 189 1 156 3 141 1 37 6 292 3 333 1 67 1 
250 1 327 2 178 34 329 3 156 5 82 3 207 1 36 3 37 10 276 1 230 1 333 3 67 5 209 2 68 12 14 1 15 1 133 3 91 1 134 5 260 5 116 18 237 1 93 3 239 5 189 7 172 1 285 1 119 5 141 16 220 4 122 1 356 1 292 5 
183 1 52 1 287 1 331 1 366 1 373 1 339 1 
0 1 312 1 224 1 136 1 188 1 32 1 57 1 331 1 
128 1 107 1 6 1 45 1 121 1 286 1 72 1 198 1 159 1 126 1 294 1 
52 2 112 1 163 1 6 1 107 1 7 1 121 1 286 1 72 1 287 2 331 1 198 1 182 1 380 1 275 1 366 1 159 1 294 1 
52 2 272 1 7 1 107 1 6 3 57 1 331 1 182 2 275 1 366 2 159 1 112 1 163 2 218 1 121 2 286 1 72 1 287 2 124 1 380 1 289 1 22 1 294 1 
52 2 272 1 107 1 6 3 57 1 331 1 131 1 182 2 275 1 366 2 159 2 112 1 163 2 218 1 121 2 286 2 72 2 287 2 124 1 380 1 289 1 22 1 293 1 294 1 
225 1 300 1 6 4 107 1 349 1 182 1 308 2 159 3 314 1 317 1 218 1 242 1 354 2 121 1 286 3 72 3 288 1 124 1 198 1 22 1 293 1 294 1 76 1 
300 1 225 1 314 1 317 1 242 1 218 1 107 1 6 4 354 2 121 1 286 3 72 3 198 1 124 1 288 1 182 1 308 2 22 1 159 3 293 1 222 1 294 1 
107 1 286 1 72 1 73 1 159 1 294 1 
298 1 278 1 212 1 114 1 165 1 152 1 6 3 107 3 121 2 342 1 286 7 72 6 73 1 198 2 379 1 65 1 182 1 358 1 247 1 159 7 294 2 
149 1 345 1 52 2 178 6 81 1 6 1 107 1 156 2 7 1 365 1 331 2 207 1 182 1 275 1 37 4 366 1 159 1 333 1 209 1 68 2 185 1 278 1 89 1 133 1 112 1 134 2 135 1 163 1 260 2 116 3 43 2 239 1 189 2 172 1 119 1 141 3 121 1 286 1 72 1 176 1 287 2 47 2 356 1 380 1 101 1 292 2 294 1 
323 2 300 1 130 1 225 1 253 1 205 1 6 2 157 2 35 1 158 2 308 3 159 1 162 1 279 1 186 2 314 2 216 1 317 1 242 1 354 3 96 1 143 1 286 1 72 1 198 1 288 1 357 1 222 1 
278 1 6 2 107 2 121 1 286 2 72 2 73 1 288 1 263 1 65 1 182 1 159 2 294 1 
371 1 278 1 107 1 45 1 6 1 121 1 286 4 72 4 198 1 159 4 126 1 293 1 294 1 
114 1 6 1 107 2 121 1 286 2 71 1 72 2 343 1 320 1 379 1 182 1 22 1 159 2 294 1 
107 1 286 1 299 1 72 1 198 1 85 1 159 1 328 1 170 1 294 1 
278 1 212 1 6 1 107 1 121 1 286 2 342 1 72 2 12 1 159 2 294 1 
298 1 371 1 278 1 212 1 152 1 45 1 6 3 107 2 121 2 286 5 72 4 198 1 22 1 159 5 126 1 294 2 
371 1 278 1 27 1 212 1 152 1 45 1 6 3 107 2 121 2 286 5 72 4 198 1 22 1 159 5 126 1 294 2 
52 2 112 1 163 1 6 1 107 1 121 1 286 1 72 1 287 2 331 1 198 1 182 1 380 1 131 1 275 1 366 1 159 1 294 1 
114 1 6 1 107 2 121 1 286 1 72 1 379 1 65 1 182 1 22 1 247 1 159 1 294 1 
296 1 18 1 234 1 331 1 283 1 
295 1 296 2 234 2 300 1 225 1 130 1 117 1 283 2 272 1 242 1 57 1 354 2 18 1 227 1 8 1 331 1 321 1 289 1 308 2 
369 1 195 1 296 1 18 1 52 1 234 1 287 1 104 1 366 1 
295 1 18 1 117 1 
128 1 370 1 48 1 238 1 
370 1 59 1 258 1 99 1 48 1 238 1 118 1 
33 1 330 1 99 1 
370 1 297 1 258 1 55 2 238 1 118 3 106 1 226 1 59 1 99 3 48 1 49 1 
370 1 59 1 9 1 258 1 99 2 213 1 48 1 238 1 118 2 
359 1 370 1 297 1 299 1 258 1 80 1 137 1 118 1 170 1 59 1 99 1 
370 1 59 1 297 1 258 1 99 1 48 1 118 1 
59 1 297 1 258 1 99 1 48 2 238 1 118 1 
370 1 297 1 258 2 118 2 59 2 63 1 304 1 99 2 199 1 48 1 
361 1 370 2 297 1 258 1 251 1 137 1 238 1 118 3 59 1 9 2 99 3 11 1 48 1 
359 1 370 1 297 1 201 1 299 1 258 1 238 1 328 1 170 2 118 2 59 1 9 1 99 2 48 1 350 1 
362 1 370 2 297 1 258 2 213 1 137 1 238 1 118 4 59 2 9 2 99 4 11 1 48 1 
370 1 59 1 297 1 258 1 99 1 48 1 238 1 118 1 
370 3 55 1 258 1 137 1 238 2 118 4 106 1 59 1 9 2 99 4 11 1 48 2 309 1 49 1 
370 1 39 1 297 1 258 1 70 1 238 1 118 2 59 1 9 1 99 2 48 1 66 1 
106 1 370 1 59 1 297 1 55 2 258 1 99 3 246 1 48 1 238 1 49 2 118 3 
370 1 273 1 125 1 
59 1 297 1 258 1 123 1 99 1 118 1 
370 1 59 1 297 1 9 1 258 1 99 2 251 1 48 1 238 1 118 2 
113 1 
370 1 59 1 297 1 258 1 99 1 48 1 238 1 118 1 
370 1 59 1 297 1 9 1 55 1 258 1 99 3 251 1 48 1 238 1 118 3 
370 1 11 1 137 1 309 1 
370 1 48 1 

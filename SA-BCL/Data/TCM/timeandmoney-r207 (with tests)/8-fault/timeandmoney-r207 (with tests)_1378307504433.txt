#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 191 (31,177) (31,177) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 191 (31,177) (31,177) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 191 (31,177) (31,177) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (39,96,290) (39,96,290) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (39,96,290) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 119 294 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (39,96,290) 157 16 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (39,96,290) 157 64 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (39,96,290) (39,96,290) 239 78 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (39,96,290) (39,96,290) 239 78 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (39,96,290) (39,96,290) 239 78 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (39,96,290) (39,96,290) 239 78 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (39,96,290) (39,96,290) 239 78 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (39,96,290) (39,96,290) 239 78 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (39,96,290) (39,96,290) 239 78 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (39,96,290) (39,96,290) 239 78 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (39,96,290) (39,96,290) 239 78 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (39,96,290) (39,96,290) 239 78 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (39,96,290) (39,96,290) 239 78 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (39,96,290) (39,96,290) 239 78 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 127 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 127 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 357 28 (238,332) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 357 28 (80,230) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (39,96,290) 157 243 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9794 | == -> !=
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | RETURN | 5414 | return null
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 664 | 0 -> 1
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1058 | = null
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> <
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1788 | return null
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval; | CONSTANT | 5642 | 1 -> 0
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | RETURN | 5148 | return null
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
191 1 44 7 110 4 224 1 139 1 73 7 140 3 172 2 228 2 142 1 26 2 231 3 8 2 176 1 177 1 277 2 253 1 300 1 31 1 325 1 309 2 81 1 257 2 314 1 101 1 
191 1 31 1 44 7 110 4 325 1 309 2 139 1 224 1 81 1 73 7 140 3 257 2 314 1 172 2 101 1 228 2 142 1 26 2 231 3 176 1 8 2 177 1 277 2 300 1 253 1 
191 1 31 1 44 7 110 4 325 1 309 2 139 1 224 1 81 1 73 7 140 3 257 2 314 1 172 2 101 1 228 2 142 1 26 2 231 3 176 1 8 2 177 1 277 2 300 1 253 1 
191 1 44 7 110 4 224 1 139 1 73 7 140 3 172 2 228 2 142 1 26 2 231 4 273 1 8 2 176 1 177 1 277 2 253 1 300 1 31 1 325 1 309 2 81 1 257 2 314 1 101 1 355 1 
191 1 44 4 110 3 309 1 224 1 73 4 140 2 83 1 314 1 172 1 101 2 228 1 355 1 26 1 231 3 273 1 8 1 277 1 
44 2 325 1 309 1 139 1 224 1 73 2 257 1 172 1 227 1 355 1 26 1 231 1 273 1 8 1 246 1 234 1 
44 3 110 1 224 1 73 3 257 1 140 1 172 2 355 1 26 2 231 2 273 1 176 1 277 1 
191 1 44 9 110 7 224 1 73 9 140 4 172 2 91 1 228 1 142 1 26 2 231 5 273 1 176 1 202 1 8 1 277 3 300 1 309 1 257 1 83 1 314 1 101 2 355 1 
191 1 44 9 110 7 224 1 73 9 140 4 172 2 91 1 228 1 142 1 26 2 231 5 273 1 176 1 202 1 8 1 277 3 300 1 309 1 257 1 83 1 314 1 101 2 355 1 
48 1 127 1 109 1 
0 2 84 1 109 1 
92 1 68 2 185 2 13 2 104 2 93 2 15 1 107 2 
88 1 68 2 221 1 344 1 71 1 229 2 346 1 92 1 200 1 93 2 28 1 233 1 54 1 278 1 205 1 280 1 182 1 13 3 55 1 100 1 15 1 147 1 209 2 353 2 150 1 102 1 17 2 332 1 185 2 104 3 358 1 293 1 131 1 107 2 341 1 108 2 318 1 66 1 133 1 
21 1 68 1 185 1 182 1 13 1 104 1 323 1 93 1 15 1 107 1 
185 1 182 1 13 1 104 1 60 1 39 1 263 1 288 1 290 1 
68 1 185 1 182 1 13 1 104 1 93 1 263 1 288 1 107 1 290 1 
211 1 69 1 167 1 96 1 134 1 
204 1 211 1 69 1 48 1 30 1 96 2 109 1 134 2 
211 1 96 1 134 1 
21 1 68 1 182 1 13 1 69 1 15 1 185 1 104 1 323 1 93 1 338 1 107 1 96 1 134 1 
109 1 
211 1 69 1 48 1 268 1 30 1 96 2 109 1 134 2 
279 1 87 1 237 1 119 1 162 1 69 1 294 1 96 2 134 2 
92 1 127 1 
68 1 13 2 311 1 92 2 185 2 104 2 93 1 107 1 302 1 
350 1 195 1 5 1 
13 1 55 1 100 1 147 1 17 1 229 1 102 1 92 1 332 1 104 1 28 1 293 1 40 1 341 1 108 1 318 1 
13 2 55 1 100 1 242 1 5 1 147 1 102 1 17 1 229 1 332 1 185 1 104 2 93 1 28 1 10 1 293 1 341 1 107 1 108 1 318 1 
68 1 13 5 163 1 242 1 311 1 173 1 92 1 118 1 185 5 60 1 104 5 93 4 10 2 107 4 
291 1 185 2 182 1 13 2 104 2 323 1 93 2 107 2 
68 1 92 1 185 3 13 3 104 3 93 3 10 1 107 3 
185 1 182 1 13 1 104 1 323 1 93 1 107 1 
68 1 185 1 182 1 13 1 104 1 93 1 107 1 311 1 302 1 
68 1 182 1 13 2 242 1 288 1 311 1 16 1 157 1 290 1 185 2 104 2 93 2 263 1 10 1 107 2 
92 1 185 2 60 1 13 2 104 2 93 1 163 1 10 1 107 1 
182 1 13 1 242 1 288 1 157 1 290 1 185 1 104 1 93 1 263 1 10 1 107 1 64 1 
68 1 13 2 195 1 5 1 311 1 185 2 104 2 93 2 10 1 107 2 
13 1 55 1 100 1 147 1 17 1 229 1 102 1 92 1 332 1 104 1 28 1 293 1 341 1 108 1 318 1 
13 1 55 1 100 1 147 1 17 1 229 1 102 1 92 1 230 1 104 1 28 1 9 1 341 1 108 1 318 1 
88 1 222 1 344 1 5 2 195 2 250 1 346 1 117 1 200 2 324 1 52 1 299 1 146 1 54 1 205 1 305 1 181 1 350 2 353 2 209 4 208 1 356 1 358 2 66 1 
291 1 185 1 182 1 13 1 104 1 93 1 288 1 107 1 
77 1 57 1 
77 1 57 1 
240 1 27 1 
240 1 27 1 
240 1 27 1 
77 1 57 1 149 1 
77 1 57 1 149 1 
343 1 77 1 57 1 
77 2 244 1 240 1 27 1 57 2 215 1 
77 1 57 1 149 1 
77 1 226 1 57 1 
77 1 226 1 57 1 
77 1 226 1 57 1 
219 1 343 1 136 1 112 1 196 1 75 1 6 1 347 1 92 1 77 1 93 2 96 1 281 1 14 1 13 2 99 1 57 1 128 1 185 2 104 2 107 2 360 1 43 1 134 1 
219 3 136 2 14 2 111 1 296 2 46 1 72 1 287 1 57 2 196 1 345 1 128 2 198 1 77 2 244 1 96 2 109 1 43 2 134 2 
309 1 8 1 228 1 
309 1 8 1 234 1 
331 1 45 1 309 3 312 1 228 2 234 1 
331 1 309 2 29 1 312 1 228 1 234 1 
331 2 309 2 312 1 228 1 234 1 
0 3 87 1 112 1 69 4 193 1 113 1 116 2 48 1 225 3 75 1 6 1 144 1 324 1 52 1 146 1 30 1 178 1 96 5 279 1 237 1 32 2 326 1 313 1 84 1 211 1 356 1 59 1 213 1 339 2 265 2 134 5 109 2 
0 9 87 2 192 1 112 4 69 7 113 3 48 1 225 8 324 3 159 1 52 3 146 3 30 1 178 2 96 9 279 2 237 2 282 5 123 1 32 6 162 1 125 1 326 2 313 1 84 3 211 6 356 3 213 1 165 1 339 6 167 5 19 1 265 6 134 9 109 5 
0 4 87 1 112 1 69 2 48 1 225 3 116 1 113 1 144 1 324 1 52 1 146 1 178 1 96 3 279 1 237 1 32 2 162 1 326 1 84 2 356 1 59 1 339 2 265 2 109 3 134 3 
0 7 87 1 192 1 112 2 69 3 48 1 225 5 116 2 113 2 144 1 324 2 52 2 146 2 178 1 96 4 279 1 237 1 123 1 32 4 162 1 125 1 326 1 84 3 356 2 59 1 339 4 265 4 109 4 134 4 
168 1 127 1 318 1 
22 1 318 1 
132 1 
100 1 318 1 102 1 
322 1 318 1 
318 1 102 1 
100 1 130 1 168 2 41 1 318 3 102 1 
115 2 200 7 121 2 324 3 175 1 160 2 251 1 252 1 255 1 181 4 33 1 207 2 310 1 82 1 209 15 208 5 356 3 358 8 
115 2 200 7 121 2 324 3 175 1 251 3 160 2 252 1 255 1 181 4 33 1 207 2 310 1 82 1 209 15 208 7 356 3 358 8 
247 1 115 2 200 7 121 2 324 3 175 1 251 1 160 2 252 1 255 1 181 4 207 2 33 1 310 1 82 1 209 15 208 5 356 3 358 8 
344 1 23 1 115 3 113 3 158 1 174 1 200 20 175 1 121 3 324 6 52 3 160 2 146 3 251 7 252 1 54 1 179 1 205 1 255 2 181 7 33 1 207 3 310 1 82 2 353 2 209 41 208 14 356 6 333 1 153 4 105 1 358 21 216 1 66 1 67 3 
189 1 344 2 23 1 115 2 200 8 175 1 324 3 121 2 251 2 160 2 54 2 236 1 205 2 255 1 181 5 207 2 33 1 310 1 82 1 353 4 209 17 208 7 356 3 358 9 66 2 
44 2 89 1 45 1 110 1 138 1 224 1 73 2 269 1 172 1 228 1 229 1 26 1 231 1 273 1 8 1 234 1 235 1 309 2 184 1 257 1 147 1 17 1 316 1 355 1 58 1 212 1 261 1 341 1 108 1 20 1 
44 3 45 1 110 2 138 1 73 3 269 1 172 1 228 1 229 1 141 1 26 1 231 1 273 1 7 1 8 1 234 1 235 1 309 2 184 1 257 1 147 1 17 1 316 1 355 1 212 1 261 1 262 1 341 1 108 1 20 1 
44 2 45 1 110 2 138 1 73 2 229 1 141 1 228 1 231 1 273 1 8 1 234 1 309 2 184 1 257 1 147 1 17 1 316 1 355 1 212 1 261 1 262 1 341 1 108 1 20 1 
44 1 138 2 156 1 248 1 73 1 74 1 172 1 229 1 143 1 26 1 7 1 161 1 55 1 257 2 147 1 17 1 102 1 316 2 212 2 61 1 341 1 108 1 318 1 
44 1 45 1 138 1 224 1 73 1 269 1 172 1 228 1 229 1 26 1 8 1 234 1 235 1 309 2 184 1 257 1 147 1 17 1 316 1 58 1 212 1 261 1 262 1 341 1 108 1 20 1 
126 1 
87 1 225 1 271 1 229 2 78 1 201 1 276 1 30 1 178 1 96 2 279 1 237 1 239 1 182 1 13 1 161 1 55 2 32 1 288 1 147 1 313 1 290 1 17 2 102 1 211 2 185 1 37 1 104 1 60 1 39 1 263 1 214 1 61 1 341 1 108 2 318 1 134 2 
239 1 182 1 13 1 288 1 271 1 290 1 185 1 78 1 39 1 60 1 104 1 263 1 214 1 96 1 134 1 
239 1 182 1 13 1 288 1 271 1 290 1 185 1 78 1 39 1 60 1 104 1 263 1 214 1 96 1 134 1 
239 1 182 1 13 1 288 1 271 1 290 1 185 1 78 1 39 1 60 1 104 1 263 1 214 1 96 1 134 1 
239 1 182 1 13 1 268 1 288 1 271 1 290 1 211 1 185 1 104 1 78 1 39 1 60 1 263 1 214 1 30 1 96 2 134 2 
279 1 237 1 87 1 239 1 182 1 13 1 288 1 313 1 271 1 290 1 185 1 104 1 60 1 78 1 39 1 263 1 214 1 96 1 134 1 
239 1 182 1 13 1 288 1 271 1 290 1 185 1 78 1 39 1 60 1 104 1 263 1 214 1 96 1 134 1 
239 1 182 1 13 1 288 1 271 1 290 1 185 1 78 1 39 1 60 1 104 1 263 1 214 1 96 1 134 1 
239 1 182 1 13 1 288 1 271 1 290 1 185 1 78 1 39 1 60 1 104 1 263 1 214 1 96 1 134 1 
239 1 182 1 13 1 288 1 271 1 290 1 185 1 78 1 39 1 60 1 104 1 263 1 214 1 96 1 134 1 
239 1 182 1 13 1 288 1 271 1 290 1 185 1 78 1 39 1 60 1 104 1 263 1 214 1 96 1 134 1 
279 1 237 1 87 1 239 1 182 1 13 1 288 1 313 1 271 1 290 1 185 1 104 1 60 1 78 1 39 1 263 1 214 1 96 1 134 1 
88 1 344 1 115 1 195 1 5 1 346 1 92 2 200 3 121 1 324 1 299 1 160 1 54 1 205 1 181 2 350 1 33 1 207 1 310 1 127 1 353 2 208 2 209 6 356 1 358 3 66 1 
88 1 221 1 344 2 267 1 113 2 5 11 195 4 346 2 92 1 200 6 324 1 79 1 52 1 251 1 146 2 54 2 205 2 181 1 350 11 329 1 208 2 353 4 209 14 150 1 356 2 333 1 153 3 358 8 85 1 217 1 216 1 66 2 67 3 
88 1 221 1 344 1 195 1 229 1 346 1 92 1 200 1 93 1 28 1 10 1 53 1 54 1 205 1 13 2 55 1 100 1 242 1 147 1 259 1 353 2 209 2 102 1 17 1 150 1 36 1 332 1 185 1 104 2 358 1 293 1 40 1 85 1 341 1 107 1 108 1 318 1 66 1 
88 3 221 1 5 7 171 1 229 1 92 3 93 1 175 1 324 5 10 1 52 2 233 1 146 2 54 3 278 2 181 6 182 1 13 3 55 1 100 2 242 1 147 2 150 1 17 1 102 2 332 2 185 1 104 3 293 2 107 1 341 2 63 2 65 2 108 1 66 3 344 3 115 2 113 2 195 7 346 3 200 14 121 2 28 2 251 1 160 2 205 3 206 1 256 2 350 7 207 1 33 1 34 2 310 1 208 7 353 6 209 28 356 5 358 14 85 1 318 2 
266 1 55 1 108 1 229 1 17 1 
68 1 88 1 344 1 137 1 113 1 195 1 5 1 346 1 200 2 93 1 324 1 52 1 146 1 54 1 205 1 181 1 13 1 350 1 311 1 208 1 353 2 209 3 185 1 356 1 104 1 358 1 85 1 107 1 66 1 
88 1 205 1 344 1 350 1 195 1 5 1 208 1 209 2 353 2 346 1 117 1 356 1 358 2 299 1 251 1 146 1 54 1 66 1 
88 1 205 1 181 1 344 1 350 1 195 1 5 1 208 1 209 2 353 2 250 1 346 1 200 2 324 1 299 1 52 1 54 1 66 1 
88 1 205 1 181 1 344 1 350 2 113 1 195 2 5 2 208 2 209 4 353 2 346 1 356 1 200 2 324 1 358 2 52 1 299 1 251 1 146 1 54 1 66 1 
266 1 
266 1 
266 1 
88 1 205 1 181 1 344 1 350 2 113 1 195 2 5 2 208 2 353 2 209 4 346 1 356 1 200 2 324 1 358 2 52 1 251 1 146 1 54 1 66 1 
88 1 221 1 344 1 229 1 346 1 92 1 200 1 28 1 54 1 278 1 205 1 13 1 55 1 100 1 147 1 209 2 353 2 102 1 17 1 150 1 332 1 104 1 358 1 293 1 341 1 108 1 318 1 66 1 
88 1 221 1 344 1 229 1 346 1 92 1 230 1 200 1 28 1 9 1 54 1 205 1 13 1 55 1 100 1 147 1 209 2 353 2 102 1 17 1 150 1 104 1 358 1 166 1 341 1 108 1 318 1 66 1 
88 1 205 1 181 1 344 1 350 2 113 1 195 2 5 2 208 2 209 4 353 2 346 1 356 1 200 2 324 1 358 2 52 1 251 1 146 1 85 1 54 1 66 1 
88 1 89 1 344 1 113 1 195 2 5 2 229 1 346 1 200 2 324 1 28 1 52 1 251 1 146 1 54 1 278 1 205 1 181 1 13 1 256 1 350 2 100 1 147 1 208 2 209 4 353 2 17 1 102 1 332 1 356 1 104 1 358 2 293 1 341 1 108 1 318 1 66 1 
68 1 88 1 344 1 113 1 5 1 195 1 346 1 200 1 93 1 324 1 52 1 251 1 146 1 54 1 205 1 13 1 349 1 350 1 311 1 208 1 353 2 209 3 185 1 356 1 104 1 358 2 85 1 107 1 66 1 
189 1 344 2 113 3 197 1 200 10 274 1 324 3 275 1 52 3 146 3 251 3 54 2 122 1 205 2 181 3 308 1 98 1 352 1 148 2 353 4 209 19 208 6 152 2 356 3 333 1 153 2 358 9 216 1 66 2 67 1 
189 1 344 3 155 1 23 2 24 1 113 3 200 12 324 2 274 1 275 2 52 2 251 2 146 3 94 1 54 3 122 2 205 3 181 2 98 1 352 1 148 1 208 4 353 6 209 26 152 4 356 3 333 2 153 2 358 14 245 1 319 1 218 1 66 3 67 2 
324 5 274 1 52 4 275 1 146 4 94 1 54 3 181 3 98 1 286 1 148 1 152 4 333 3 153 4 245 1 67 3 66 3 189 1 344 3 155 1 23 1 113 4 24 1 115 1 200 21 121 1 251 4 160 1 122 2 205 3 308 1 33 1 207 1 310 1 352 1 208 7 209 41 353 6 356 5 358 20 216 1 319 1 218 1 
324 4 274 1 52 3 275 1 146 4 94 1 54 4 181 4 98 1 286 1 148 1 152 4 333 3 153 4 245 1 67 3 66 4 189 1 344 4 155 1 23 2 113 4 24 1 115 1 200 18 121 1 251 3 160 1 122 2 205 4 308 1 33 1 207 1 310 1 352 1 208 7 209 38 353 8 356 5 358 20 216 1 319 1 218 1 
189 1 344 2 155 1 267 2 23 1 115 1 24 1 113 7 200 25 121 1 274 1 324 8 275 1 52 7 160 1 146 7 251 7 94 1 54 2 122 1 205 2 181 6 98 1 207 1 33 1 310 1 352 1 148 1 353 4 209 52 208 13 152 4 356 8 333 2 153 4 245 1 358 27 319 1 216 2 218 1 66 2 67 4 
330 1 136 1 77 1 14 1 244 1 111 1 57 1 345 1 128 1 43 1 
347 1 343 1 
136 1 77 1 14 1 3 1 340 1 270 1 57 1 128 1 43 1 
303 1 149 1 
226 1 215 1 304 1 
219 2 136 1 14 1 111 1 296 1 46 1 72 1 287 1 196 1 57 1 345 1 128 1 77 1 244 1 96 1 109 1 134 1 43 1 
219 2 136 1 14 1 111 1 296 1 46 1 72 1 287 1 196 1 57 1 345 1 128 1 77 1 244 1 96 1 109 1 134 1 43 1 
219 2 136 1 14 1 111 1 296 1 46 1 72 1 287 1 196 1 57 1 345 1 128 1 77 1 244 1 96 1 109 1 134 1 43 1 
215 1 303 1 149 1 
215 1 303 1 149 1 
226 1 304 1 
226 1 215 1 304 1 
99 1 360 1 
219 1 343 1 136 1 112 1 296 1 69 1 72 1 75 1 6 1 347 1 92 1 77 1 93 2 97 1 96 1 281 1 13 2 14 1 99 1 57 1 128 1 185 2 104 2 107 2 360 1 134 1 43 1 
88 1 190 1 221 1 344 1 114 1 229 2 346 1 76 1 200 1 298 1 54 1 205 1 13 2 147 1 35 1 315 1 353 2 209 2 102 1 150 1 17 2 210 1 185 2 104 2 358 1 85 1 341 1 131 2 108 2 318 1 66 1 
45 1 89 1 309 2 138 1 184 1 147 1 269 1 228 1 17 2 229 2 354 1 151 1 262 1 8 1 341 1 188 1 108 2 20 1 234 1 
45 1 309 2 138 1 241 1 184 1 269 1 147 1 228 1 17 1 229 1 354 1 262 1 8 1 341 1 108 1 20 1 234 1 
135 1 161 1 55 1 138 1 147 1 74 1 102 1 17 1 229 1 61 1 341 1 188 1 108 1 318 1 
45 1 309 2 138 1 184 1 269 1 147 1 228 1 17 1 229 1 354 1 151 1 262 1 8 1 341 1 188 1 108 1 20 1 234 1 
4 1 
120 1 32 1 225 1 48 1 321 1 127 1 109 1 
279 1 87 1 237 1 32 1 225 1 56 1 313 1 
0 12 87 4 1 2 89 1 320 2 223 2 48 2 225 9 321 1 322 2 229 3 324 2 145 1 52 2 276 1 146 2 178 2 96 5 279 4 237 4 238 2 55 1 100 3 327 1 147 3 102 3 17 3 18 1 339 6 341 4 65 2 108 3 109 8 22 3 113 2 297 2 120 1 30 3 254 1 307 1 348 2 32 8 313 4 84 6 211 5 38 2 356 2 357 2 130 1 264 2 168 2 318 10 265 6 134 5 
0 6 87 2 220 1 155 1 223 1 225 8 113 2 48 2 324 2 52 2 276 1 146 2 94 1 30 1 178 1 96 1 180 1 279 2 237 2 32 5 313 2 84 3 211 1 38 2 356 2 333 1 153 1 245 1 339 5 265 5 319 1 218 1 134 1 109 5 67 1 
21 1 87 1 68 1 295 1 223 1 115 1 225 2 323 1 93 1 121 1 175 1 324 1 160 1 96 1 279 1 237 1 182 1 13 1 32 2 15 1 313 1 38 2 356 2 185 1 104 1 338 1 107 1 134 1 
279 1 87 1 237 1 120 1 32 1 225 1 48 1 321 1 313 1 109 1 
0 10 32 5 223 1 113 2 225 5 84 5 38 2 356 2 324 2 52 2 146 2 339 5 65 1 265 5 109 5 
211 1 48 1 30 1 96 1 109 1 134 1 
87 2 225 2 49 1 229 4 50 1 201 1 145 1 276 2 30 2 178 2 96 3 279 2 237 2 307 2 161 1 55 2 32 2 162 1 147 1 313 1 102 1 17 4 211 4 37 1 61 1 341 1 108 4 318 1 134 3 
68 2 88 1 344 1 229 1 346 1 92 1 200 1 93 2 28 1 54 1 278 1 205 1 280 1 13 3 55 1 15 1 100 1 147 1 209 1 353 2 150 1 17 1 102 1 332 1 185 2 104 3 293 1 107 2 341 1 108 1 318 1 66 1 
0 4 279 1 237 1 87 1 32 2 207 1 225 1 48 2 313 1 84 2 339 2 276 1 178 1 265 2 109 4 
199 1 136 1 43 1 
199 1 136 1 43 1 
136 1 99 1 25 1 345 1 43 1 
199 1 136 1 43 1 
136 1 170 1 43 1 
136 1 170 1 43 1 
136 1 170 1 43 1 
136 1 43 1 
77 1 57 1 
344 2 23 1 115 2 200 9 175 1 121 2 324 3 251 3 160 2 54 2 205 2 181 4 33 1 207 1 310 1 353 4 208 7 209 18 356 3 358 9 66 2 
181 2 207 1 33 1 310 1 115 1 127 1 208 2 209 6 356 1 200 3 121 1 324 1 358 3 160 1 
205 1 181 1 344 1 113 1 258 1 208 2 353 2 209 4 356 1 200 2 324 1 358 2 52 1 146 1 251 1 54 1 66 1 
181 1 113 1 209 7 208 2 356 1 333 1 200 4 153 2 324 1 358 3 52 1 146 1 251 1 216 1 67 1 
344 1 267 1 23 1 115 2 113 2 200 13 175 1 121 2 324 5 52 2 160 2 146 2 251 2 54 1 205 1 181 5 207 1 33 1 310 1 329 1 209 26 208 7 353 2 356 5 153 2 358 13 216 1 67 2 66 1 
200 1 153 1 209 1 
358 1 209 1 67 1 
205 1 181 2 344 1 113 1 258 1 353 2 209 6 208 3 356 1 200 3 324 1 358 3 52 1 146 1 251 1 65 1 54 1 66 1 
189 1 344 1 155 1 113 2 200 6 324 2 52 2 251 1 146 2 94 1 54 1 205 1 181 1 209 12 353 2 208 2 356 2 333 1 153 1 245 1 358 6 319 1 67 1 66 1 218 1 
181 1 115 1 209 6 208 2 356 1 200 3 324 1 121 1 358 3 160 1 251 1 
205 1 181 1 344 1 33 1 23 1 115 1 310 1 208 2 209 3 353 2 200 2 121 1 358 1 251 1 95 1 54 1 66 1 
189 1 205 1 181 3 344 1 115 2 353 2 208 5 209 10 356 2 200 5 175 1 121 2 324 2 358 5 251 2 160 1 54 1 66 1 
189 1 205 1 344 1 353 2 209 2 208 1 356 1 358 2 146 1 251 1 54 1 66 1 
189 1 205 1 181 1 344 1 113 1 208 2 353 2 209 4 356 1 200 2 324 1 358 2 52 1 146 1 251 1 54 1 66 1 
189 1 205 3 181 1 344 3 308 1 23 1 115 1 209 3 353 6 208 2 200 2 121 1 358 1 251 1 95 1 54 3 66 3 
189 1 344 4 23 1 115 2 113 2 158 1 174 1 200 16 175 1 121 2 324 5 52 2 160 2 146 2 251 4 54 4 205 4 181 5 308 1 207 1 33 1 310 1 258 1 353 8 209 32 208 9 356 5 333 1 153 3 105 1 358 16 66 4 67 3 
189 1 344 1 115 2 200 8 175 1 324 3 121 2 251 1 160 2 54 1 205 1 181 4 207 1 33 1 310 1 209 16 353 2 208 5 356 3 333 1 153 1 245 1 358 8 67 1 66 1 
189 1 344 2 115 2 113 1 200 9 175 1 324 3 121 2 160 2 146 1 251 2 54 2 205 2 181 4 207 1 33 1 310 1 258 1 209 19 353 4 208 6 356 4 333 1 153 2 245 1 358 10 216 1 66 2 67 1 
189 1 344 3 155 1 23 1 115 2 113 2 200 14 175 1 121 2 324 5 52 2 160 2 251 2 146 2 94 1 54 3 205 3 181 5 207 1 33 1 310 1 258 1 209 27 353 6 208 7 356 5 333 1 153 1 245 1 358 13 319 1 218 1 67 1 66 3 
189 1 344 3 155 1 23 1 115 2 113 2 200 11 175 1 121 2 324 4 52 1 160 2 251 4 146 2 94 1 54 3 205 3 181 5 207 1 33 1 310 1 258 1 209 25 353 6 208 9 356 5 333 1 153 1 245 1 358 14 319 1 67 1 66 3 218 1 
189 1 344 1 115 2 200 8 175 1 324 3 121 2 251 1 160 2 54 1 205 1 181 4 207 1 33 1 310 1 209 16 353 2 208 5 356 3 333 1 153 1 245 1 358 8 67 1 66 1 
189 1 344 1 155 1 113 2 200 6 324 2 52 2 251 1 146 2 94 1 54 1 205 1 181 1 209 12 353 2 208 2 356 2 333 1 153 1 245 1 358 6 319 1 67 1 66 1 218 1 
189 1 344 4 155 1 23 2 115 2 113 2 200 12 175 1 121 2 324 4 52 1 160 2 251 2 146 2 94 1 54 4 205 4 181 5 207 1 33 1 310 1 258 1 209 26 353 8 208 7 356 5 333 1 153 1 245 1 358 14 319 1 218 1 66 4 67 1 
189 1 344 4 155 1 23 2 113 3 200 7 324 2 52 2 251 3 146 3 94 1 54 4 205 4 181 3 308 1 209 16 353 8 208 6 356 3 333 1 153 1 245 1 358 9 319 1 218 1 66 4 67 1 
181 3 33 2 310 1 115 3 209 7 208 6 356 1 200 4 324 1 121 3 358 3 251 3 160 1 
189 1 344 4 155 1 23 2 115 2 113 2 200 12 175 1 121 2 324 4 52 1 160 2 251 2 146 2 94 1 54 4 205 4 181 5 308 1 207 1 33 1 310 1 209 26 353 8 208 7 356 5 333 1 153 1 245 1 358 14 319 1 218 1 66 4 67 1 
92 1 185 1 13 1 104 1 60 1 283 1 163 1 
283 1 13 1 163 1 249 1 92 1 185 1 60 1 104 1 164 1 359 1 86 1 42 1 
161 1 55 1 61 1 147 1 341 1 127 1 108 1 318 1 102 1 229 1 17 1 
13 2 55 1 100 1 147 1 102 1 17 1 229 1 92 1 332 1 185 1 104 2 93 1 28 1 10 1 341 1 107 1 108 1 318 1 
182 1 13 1 307 1 100 2 288 1 147 1 322 1 102 2 17 1 229 1 332 1 185 1 357 1 104 1 93 1 28 1 263 1 10 1 341 1 107 1 108 1 318 3 
182 1 13 1 307 1 100 2 288 1 147 1 322 1 102 2 17 1 229 1 230 1 185 1 357 1 104 1 93 1 28 1 263 1 10 1 341 1 107 1 108 1 318 3 
80 1 307 1 348 1 55 1 124 1 100 1 22 1 48 1 147 1 322 1 102 1 17 3 229 3 211 1 357 1 301 1 341 1 108 3 168 1 96 2 318 4 109 1 134 2 
238 1 307 1 348 1 55 1 124 1 100 1 22 1 48 1 147 1 322 1 102 1 17 3 229 3 211 1 357 1 341 1 108 3 168 1 96 2 318 4 109 1 134 2 
194 1 147 1 341 1 108 1 229 1 17 1 
89 1 2 1 55 2 70 1 100 1 194 1 147 2 90 1 17 6 229 7 102 2 210 1 232 1 103 1 262 1 106 1 130 1 131 1 341 3 108 7 318 3 
88 2 89 1 5 1 229 1 92 3 93 1 175 1 324 3 10 1 233 1 54 2 278 1 181 4 182 1 13 2 100 1 147 1 17 1 102 1 332 1 185 1 104 2 293 1 107 1 341 1 108 1 66 2 344 2 115 2 195 1 346 2 200 7 28 1 121 2 251 1 160 2 205 2 256 1 350 1 33 1 207 1 34 1 310 1 35 1 353 4 208 5 209 14 356 3 358 7 85 1 318 1 
87 2 320 1 69 1 22 1 225 1 48 1 321 1 229 1 297 1 120 1 145 1 30 1 96 3 279 2 237 2 238 1 348 1 32 1 55 1 313 2 17 1 211 2 108 1 264 1 168 1 318 2 109 1 134 3 
89 1 100 1 194 1 147 1 17 2 229 2 102 1 130 1 341 2 168 1 108 2 254 1 318 2 
89 1 161 1 55 1 124 1 147 1 289 1 17 4 229 4 102 1 61 1 341 1 108 4 318 1 
12 1 307 1 100 1 169 1 147 1 90 1 17 2 229 2 102 1 103 1 317 1 341 2 108 2 318 1 
309 1 55 1 8 1 184 1 147 1 341 1 108 1 234 1 229 1 17 1 
210 1 89 1 262 1 147 1 341 1 108 2 318 1 315 1 102 1 229 2 17 2 
89 1 307 1 161 1 2 1 55 1 147 2 289 1 17 4 229 5 102 2 210 1 106 1 61 1 341 2 108 5 318 3 
89 1 307 1 161 1 284 1 2 1 55 1 147 2 289 1 17 4 229 5 102 2 210 1 61 1 341 2 108 5 318 3 
13 2 55 1 100 1 147 1 102 1 17 1 229 1 92 1 230 1 185 1 104 2 93 1 28 1 10 1 341 1 107 1 108 1 318 1 
307 1 70 1 100 1 147 1 90 1 17 1 229 1 102 1 103 1 130 1 341 2 108 1 318 1 
92 1 260 1 306 1 183 1 335 1 
243 1 260 1 154 1 306 1 182 1 186 1 183 1 69 1 335 1 263 1 288 1 157 1 96 1 290 1 134 1 
306 1 13 1 114 1 260 1 76 1 185 1 104 1 298 1 335 1 
243 1 186 1 335 1 
355 1 231 1 273 1 127 1 
355 1 44 1 26 1 231 1 273 1 73 1 172 1 
212 1 73 1 257 1 
342 1 355 1 129 1 44 3 26 1 231 1 273 1 337 1 139 2 224 1 73 3 172 1 
355 1 44 2 26 1 231 1 110 1 273 1 73 2 172 1 101 1 
44 1 26 1 231 1 309 1 8 1 224 1 73 1 140 1 314 1 172 1 228 1 
44 1 26 1 231 1 273 1 224 1 73 1 172 1 
355 1 44 1 26 1 273 2 224 1 73 1 172 1 
44 2 351 1 224 1 73 2 172 2 272 1 26 2 231 1 273 1 203 1 
44 3 110 2 224 1 73 3 140 1 172 1 142 1 355 1 26 1 231 2 273 1 277 1 300 1 
44 2 45 1 110 1 309 2 224 1 73 2 172 1 228 1 355 1 26 1 292 1 231 1 273 1 8 1 234 1 
44 4 110 2 224 1 73 4 140 1 83 1 172 2 101 1 355 1 26 2 231 2 273 1 277 1 
355 1 44 1 26 1 231 1 273 1 224 1 73 1 172 1 
342 1 44 4 110 2 139 1 73 4 140 1 172 1 129 1 355 2 26 1 231 3 273 2 334 1 277 1 
44 2 110 1 224 1 73 2 328 1 172 1 26 1 355 1 231 1 273 1 202 1 62 1 
342 2 44 3 224 1 139 2 73 3 172 1 129 1 26 1 355 1 231 1 51 1 273 1 
231 2 187 1 336 2 11 1 
44 1 26 1 224 1 47 1 73 1 172 1 
142 1 355 1 44 2 26 1 231 1 110 1 273 1 224 1 73 2 172 1 
285 1 
355 1 44 1 26 1 231 1 273 1 224 1 73 1 172 1 
44 3 110 1 224 1 139 1 73 3 172 1 142 1 26 1 355 1 231 1 273 1 
231 1 334 1 140 1 277 1 
231 1 273 1 

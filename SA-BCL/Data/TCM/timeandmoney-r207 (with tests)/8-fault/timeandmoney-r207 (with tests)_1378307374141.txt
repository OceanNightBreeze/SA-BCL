#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 11810 | stmt -> ;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> -1
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONSTANT | 6207 | 1 -> 0
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1146 | 1 -> -1
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> >>>
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9723 | ^ -> &
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 5914 | = null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | RETURN | 1328 | return null
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
174 1 61 2 322 1 237 1 365 1 376 1 55 1 183 1 85 2 170 3 334 3 326 1 202 2 
77 1 174 1 61 2 222 2 353 1 195 1 322 1 237 1 157 1 365 1 376 4 55 1 181 1 169 1 183 7 85 2 170 9 280 1 334 9 326 3 304 1 229 1 202 5 250 1 
77 1 174 1 61 2 222 2 353 1 195 1 322 1 237 1 157 1 365 1 376 4 55 1 181 1 169 1 183 7 85 2 170 9 280 1 334 9 326 3 304 1 229 1 202 5 250 1 
234 1 322 1 237 1 365 1 55 1 169 1 241 1 170 9 85 2 280 1 326 3 304 2 31 1 202 5 250 1 283 1 174 2 61 2 222 2 353 1 157 1 376 4 181 2 183 6 333 1 334 9 162 1 229 2 
234 1 322 1 237 1 365 1 55 1 169 1 241 1 170 9 85 2 280 1 326 3 304 2 31 1 202 5 250 1 283 1 174 2 61 2 222 2 353 1 157 1 376 4 181 2 183 6 333 1 334 9 162 1 229 2 
234 1 322 1 237 1 365 1 55 1 169 1 241 1 170 10 85 2 280 1 326 4 304 2 31 1 202 6 250 1 283 1 174 2 61 2 222 2 353 1 157 1 376 5 181 2 183 7 333 1 334 10 162 1 229 2 
234 1 322 1 237 1 365 1 55 1 169 1 241 1 170 7 85 2 280 1 326 2 304 2 31 1 202 4 250 1 283 1 174 2 61 2 222 1 157 1 376 3 181 2 183 4 333 1 334 7 162 1 229 2 
61 1 222 2 353 1 322 1 365 1 376 2 55 1 181 1 183 3 85 1 170 4 326 1 334 4 280 1 304 1 229 1 202 3 250 1 
283 1 174 1 61 1 322 1 178 1 365 1 55 1 181 1 85 1 170 2 334 2 7 1 162 1 229 1 293 1 202 1 
270 1 114 1 254 1 299 1 155 1 257 1 329 1 260 1 286 1 30 1 362 1 212 1 245 1 230 1 
228 1 
96 1 228 1 24 1 155 2 255 1 14 1 257 1 30 2 
270 1 126 1 233 1 299 1 150 2 24 2 217 1 345 1 362 1 167 1 30 5 129 1 301 2 82 2 130 2 132 4 245 1 348 2 171 5 114 1 134 1 254 1 155 5 255 2 257 2 286 1 260 1 329 1 65 1 212 1 96 1 67 1 228 2 186 1 316 1 189 2 230 1 359 1 
120 1 228 1 255 1 
172 1 227 2 228 1 
270 2 254 1 299 2 310 1 286 2 260 2 230 2 329 2 
0 1 270 2 127 1 299 2 48 1 78 2 218 1 277 1 4 1 109 1 368 1 58 1 373 1 32 1 254 1 374 2 284 1 310 1 309 1 177 2 139 1 94 1 286 3 260 3 329 2 95 1 225 2 143 1 19 1 267 1 355 1 123 1 187 1 98 1 295 1 230 2 125 2 
212 1 270 1 114 1 254 1 299 1 286 1 260 1 230 1 329 1 362 1 
114 1 299 1 155 1 255 1 235 1 16 1 285 1 260 1 286 1 276 1 30 1 38 1 228 1 91 1 
38 1 270 1 114 1 299 1 228 1 155 2 255 1 285 1 16 1 276 1 286 1 260 1 230 1 329 1 30 2 
1 1 24 1 155 1 257 1 30 1 
263 1 96 1 228 1 24 1 155 2 255 1 257 1 30 2 
24 1 155 1 30 1 
270 1 114 1 299 2 310 1 196 1 260 2 286 2 329 1 142 1 364 1 230 1 
215 1 192 1 248 1 
32 1 0 1 374 1 48 1 310 1 177 1 286 1 260 1 95 1 225 1 4 1 143 1 267 1 187 1 188 1 98 1 
120 1 310 1 
231 2 270 4 299 5 310 1 273 1 196 1 260 5 286 5 329 1 152 1 313 1 131 1 91 1 230 4 
212 1 270 1 114 1 299 1 286 1 260 1 230 1 
32 1 0 1 231 1 270 1 374 1 299 1 48 1 192 1 177 1 95 1 152 1 260 2 286 2 225 1 4 1 143 1 267 1 187 1 98 1 230 1 
231 1 270 3 299 3 310 1 329 1 286 3 260 3 230 3 
212 1 270 1 114 1 299 1 286 1 260 1 230 1 
270 1 114 1 299 1 196 1 286 1 260 1 230 1 329 1 142 1 
231 1 0 1 299 3 48 1 196 1 152 1 4 1 109 1 58 1 114 2 254 1 155 1 309 1 310 1 12 1 16 1 260 4 19 1 267 1 125 1 270 3 127 1 78 2 218 1 276 1 30 1 364 1 368 1 32 1 374 1 284 1 177 1 94 1 285 1 286 4 329 2 95 1 225 1 38 1 143 1 185 1 98 1 187 1 230 3 295 1 
231 1 270 1 114 1 299 2 310 1 260 2 286 2 364 1 313 1 230 1 91 1 
231 2 270 3 114 1 299 3 155 1 12 1 196 1 16 1 285 1 329 1 152 1 260 3 286 3 276 1 30 1 38 1 228 1 43 1 230 3 
231 1 270 2 299 2 192 1 196 1 329 1 260 2 286 2 248 1 230 2 
32 1 0 1 374 1 48 1 310 1 177 1 286 1 260 1 95 1 225 1 4 1 143 1 267 1 98 1 187 1 
0 1 374 1 48 1 310 1 177 1 51 1 286 1 260 1 95 1 225 1 4 1 143 1 367 1 98 1 187 1 
215 2 192 2 78 2 82 1 301 1 109 2 133 1 58 1 248 2 173 1 205 1 62 1 33 1 284 1 309 1 93 1 94 1 256 1 19 1 123 2 45 1 295 1 75 1 125 4 
270 1 114 1 299 1 260 1 286 1 276 1 72 1 230 1 
381 1 308 1 247 1 
179 1 314 1 381 2 308 2 2 1 124 1 
381 1 308 1 
381 1 308 1 
314 1 124 1 
314 1 124 1 
314 1 124 1 
381 1 308 1 144 1 
381 1 308 1 144 1 
381 1 308 1 144 1 
381 1 308 1 21 1 
381 1 308 1 21 1 
381 1 308 1 21 1 
270 2 299 2 238 1 30 1 168 1 5 1 279 1 370 1 247 1 281 1 136 1 155 1 308 1 310 1 35 1 260 2 286 2 117 1 262 1 66 1 213 1 381 1 230 2 74 1 
350 1 136 2 155 2 308 2 275 1 117 3 30 2 179 1 168 2 54 1 228 1 66 2 242 2 5 2 381 2 279 1 219 1 201 1 246 1 
252 2 304 1 229 2 178 1 76 1 
181 1 304 1 229 1 
181 1 229 1 178 1 
252 1 304 2 229 3 178 1 76 1 312 1 
252 1 290 1 304 1 229 2 178 1 76 1 
24 1 194 1 345 1 238 1 30 5 366 2 301 1 82 1 130 1 132 3 370 1 244 1 88 1 171 2 348 1 172 1 205 1 307 1 155 5 255 1 35 1 256 1 257 4 158 2 226 1 227 3 330 2 96 1 228 2 161 1 122 1 189 1 
1 5 233 1 23 1 24 6 194 2 345 1 30 9 301 3 82 3 130 2 132 8 111 1 88 3 249 1 171 6 348 2 172 3 205 3 155 9 255 1 176 1 35 4 256 3 257 7 158 6 226 1 227 9 159 1 330 6 96 1 228 5 122 2 291 5 189 2 297 1 
233 1 194 1 30 3 366 1 301 1 82 1 130 1 132 3 244 1 88 1 348 1 171 2 172 2 205 1 155 3 255 1 35 1 257 2 256 1 158 2 227 4 330 2 228 3 161 1 122 1 189 1 
233 1 23 1 194 1 30 4 366 2 301 2 82 2 130 1 132 5 244 1 88 2 249 1 348 1 171 4 172 3 205 2 155 4 255 1 35 2 257 3 256 2 158 4 227 7 330 4 159 1 228 4 161 1 122 1 189 1 
209 1 
265 1 120 1 187 1 
306 1 187 1 
4 1 0 1 187 1 
320 1 187 1 
0 1 187 1 
4 1 0 1 265 2 187 3 327 1 258 1 
318 1 173 3 65 1 28 1 167 1 128 1 141 1 301 1 82 1 41 1 199 2 109 3 186 1 57 1 133 2 123 4 99 1 125 7 
318 1 78 2 344 4 28 1 167 1 128 2 82 4 301 4 108 1 199 3 109 15 57 2 243 1 133 5 86 1 88 3 173 10 137 3 205 3 284 1 309 1 11 1 94 1 256 3 65 2 18 1 41 5 186 2 123 16 356 1 99 1 295 1 357 1 125 31 
318 1 78 4 300 1 360 1 28 1 128 1 167 1 301 1 82 1 199 2 57 1 109 4 133 3 173 4 284 2 309 2 94 2 65 1 18 1 41 1 186 1 123 5 295 2 125 9 
318 1 173 3 65 1 28 1 167 1 128 1 301 1 82 1 41 1 199 2 109 3 186 1 57 1 133 2 123 4 99 1 125 7 
318 1 173 3 65 1 28 1 167 1 128 1 301 1 82 1 41 1 199 2 109 3 186 1 57 1 133 2 123 4 99 1 125 7 
0 1 319 1 101 1 48 1 79 1 323 1 170 1 85 1 135 2 374 1 174 2 61 1 177 1 116 1 17 2 225 1 143 1 334 1 98 1 338 1 187 1 147 2 146 1 
151 1 48 1 365 1 170 1 85 1 304 1 89 1 251 1 135 1 374 1 174 1 61 1 177 1 140 1 17 1 225 1 261 1 178 1 312 1 181 1 288 1 334 1 335 1 98 1 229 2 147 1 
148 1 151 1 48 1 322 1 365 1 55 1 170 2 85 1 304 1 202 1 89 1 251 1 135 1 374 1 174 1 61 1 177 1 140 1 17 1 225 1 261 1 178 1 312 1 181 1 183 1 334 2 335 1 98 1 229 2 147 1 
151 1 48 1 322 1 323 1 55 1 170 3 85 1 304 1 202 1 89 1 251 1 135 1 374 1 174 1 61 1 177 1 64 1 17 1 225 1 261 1 178 1 312 1 181 1 288 1 183 2 334 3 335 1 98 1 229 2 147 1 
48 1 322 1 55 1 170 2 304 1 202 1 89 1 251 1 135 1 374 1 174 1 177 1 64 1 17 1 225 1 261 1 178 1 312 1 181 1 288 1 183 2 334 2 98 1 229 2 147 1 
351 1 
299 1 103 2 235 1 345 1 53 3 56 2 348 1 114 1 155 4 115 1 255 1 311 1 16 1 15 1 260 1 160 1 269 1 317 1 24 5 26 2 276 1 30 4 324 1 130 1 132 1 91 1 171 1 172 2 138 1 285 1 286 1 38 1 182 3 96 2 228 1 42 1 145 3 336 2 292 5 337 1 189 1 190 1 
299 1 24 5 103 2 26 2 235 1 345 1 276 1 53 3 30 4 56 2 324 1 130 1 132 1 171 1 348 1 91 1 172 2 114 1 138 1 115 1 155 4 255 1 311 1 15 1 16 1 285 1 286 1 260 1 38 1 182 3 96 2 228 1 160 1 42 1 336 2 145 3 337 1 292 5 189 1 269 1 190 1 317 1 
299 1 24 4 103 2 235 1 345 1 276 1 53 2 30 4 130 1 369 1 220 2 171 1 348 1 91 1 114 1 138 1 155 4 255 1 311 1 16 1 285 1 260 1 286 1 38 1 227 2 119 1 182 2 96 2 228 1 160 1 71 2 145 2 336 2 292 4 189 1 269 1 190 1 317 1 
340 1 0 1 299 1 48 1 103 2 235 1 345 1 53 2 56 2 240 1 348 1 349 1 114 1 155 5 255 1 311 1 16 1 15 1 260 1 119 1 160 1 122 1 269 1 317 1 24 6 26 2 79 1 276 1 30 5 130 1 132 2 171 2 91 1 172 2 374 2 138 1 177 2 285 1 286 1 225 2 38 1 227 2 143 2 182 2 96 3 228 2 145 2 336 2 187 1 98 1 292 4 189 1 190 1 296 1 146 1 
299 1 24 2 235 1 276 1 30 3 91 1 114 1 155 3 311 1 14 1 16 1 285 1 286 1 260 1 38 1 182 1 96 1 160 1 292 2 269 1 190 1 317 1 
299 1 24 1 235 1 276 1 53 1 30 3 91 1 114 1 155 3 255 1 311 1 14 1 16 1 285 1 286 1 260 1 38 1 96 1 160 1 228 1 292 3 269 1 190 1 317 1 
299 1 24 2 235 1 276 1 53 1 30 3 91 1 114 1 155 3 255 1 14 1 311 1 16 1 285 1 286 1 260 1 38 1 182 1 96 1 160 1 228 1 145 1 292 3 269 1 190 1 317 1 
299 1 103 2 235 1 345 1 53 4 56 2 348 1 114 1 155 5 115 1 255 5 14 1 311 1 16 1 15 1 260 1 160 1 269 1 317 1 24 7 26 2 276 1 30 5 324 1 130 1 132 1 91 1 171 1 172 2 138 1 285 1 286 1 37 1 38 1 182 4 96 3 228 5 42 1 145 4 336 2 292 6 337 1 189 1 190 1 
299 1 24 4 103 2 26 2 235 1 345 1 276 1 53 2 30 4 56 2 130 1 132 1 171 1 348 1 91 1 172 2 114 1 138 1 155 4 255 1 311 1 16 1 285 1 15 1 260 1 286 1 38 1 227 2 119 1 182 2 96 2 228 2 160 1 145 2 336 2 292 4 189 1 269 1 190 1 317 1 
299 1 24 4 103 2 26 2 235 1 276 1 345 1 53 2 30 4 56 2 130 1 132 1 171 1 91 1 348 1 172 2 114 1 138 1 115 1 155 4 255 1 311 1 15 1 16 1 285 1 286 1 260 1 38 1 182 2 96 2 228 1 160 1 42 1 145 2 336 2 292 4 337 1 189 1 269 1 190 1 317 1 
299 1 24 4 103 2 26 2 235 1 276 1 345 1 53 2 30 4 56 2 130 1 132 1 171 1 91 1 348 1 172 2 114 1 138 1 115 1 155 4 255 1 311 1 15 1 16 1 285 1 286 1 260 1 38 1 182 2 96 2 228 1 160 1 42 1 145 2 336 2 292 4 337 1 189 1 269 1 190 1 317 1 
299 1 24 4 103 2 235 1 276 1 345 1 53 2 30 4 130 1 369 1 220 2 171 1 91 1 348 1 114 1 138 1 115 1 155 4 255 1 63 1 311 1 16 1 285 1 286 1 260 1 38 1 227 2 182 2 96 2 228 1 160 1 71 2 97 1 145 2 336 2 292 4 189 1 269 1 190 1 317 1 
148 1 270 1 231 1 0 2 191 1 299 1 48 2 78 4 218 1 79 1 277 1 325 1 109 1 58 2 221 1 374 8 34 1 284 2 206 1 177 8 309 2 94 2 286 1 260 1 225 7 39 1 180 1 143 2 19 2 288 1 355 2 123 1 98 2 187 3 230 1 295 2 75 1 125 2 146 1 
270 1 215 1 299 1 192 1 78 2 52 1 196 1 81 1 82 1 301 1 109 2 133 1 88 1 58 1 248 1 173 1 205 1 284 1 309 1 94 1 256 1 329 1 260 1 286 1 19 1 123 1 295 1 230 1 125 3 
318 1 215 1 192 1 78 2 28 1 167 1 82 1 301 1 199 1 109 3 133 2 58 1 248 1 173 2 284 1 309 1 310 2 94 1 65 1 120 1 19 1 186 1 123 3 295 1 75 1 125 6 
165 1 215 11 271 1 192 11 342 1 78 4 344 3 218 1 52 1 277 1 82 2 301 1 109 6 243 1 133 1 88 2 58 2 248 4 173 2 137 3 205 1 284 2 310 1 309 2 11 1 94 2 256 2 19 1 41 1 184 1 123 8 295 2 125 14 
0 1 270 1 231 1 299 1 48 1 78 2 52 1 218 1 152 1 3 1 277 1 105 1 4 1 84 1 109 1 58 1 248 1 32 1 374 1 284 1 310 1 177 1 309 1 94 1 95 1 286 2 260 2 225 1 143 1 19 1 267 1 123 1 187 1 98 1 188 1 230 1 295 1 125 2 
341 1 231 1 0 2 299 1 48 2 192 7 52 1 152 1 346 2 4 2 301 3 199 1 109 10 200 2 58 3 248 7 205 2 310 2 309 3 256 2 65 1 260 3 211 2 19 3 267 2 123 10 125 20 318 1 270 1 215 7 78 6 218 1 28 1 277 1 167 1 82 3 368 2 133 4 371 2 88 2 32 2 173 8 374 3 284 3 177 3 94 3 286 3 95 2 225 3 143 1 288 1 41 4 186 1 98 2 187 2 295 3 230 1 339 1 47 1 
173 1 215 1 192 1 284 1 309 1 78 2 93 1 94 1 256 1 19 1 82 1 41 1 123 2 58 1 248 1 295 1 125 2 75 1 
173 1 215 1 62 1 205 1 192 1 284 1 309 1 78 2 94 1 19 1 301 1 109 2 133 1 58 1 248 1 295 1 125 2 75 1 
215 2 192 2 78 2 82 1 301 1 109 2 133 1 88 1 58 1 248 2 173 2 205 1 284 1 309 1 94 1 256 1 19 1 41 1 123 2 295 1 75 1 125 4 
173 1 215 1 34 1 192 1 284 1 309 1 78 2 93 1 94 1 256 1 19 1 82 1 41 1 123 2 58 1 248 1 295 1 125 2 
173 1 215 1 34 1 62 1 205 1 192 1 284 1 309 1 78 2 94 1 19 1 301 1 109 2 133 1 58 1 248 1 295 1 125 2 
215 2 192 2 78 2 82 1 301 1 109 2 133 1 88 1 58 1 248 2 173 2 34 1 205 1 284 1 309 1 94 1 256 1 19 1 41 1 123 2 295 1 125 4 
173 2 215 2 205 1 192 2 284 1 309 1 78 2 94 1 256 1 301 1 19 1 82 1 41 1 109 2 133 1 123 2 88 1 58 1 248 2 295 1 125 4 
0 1 48 1 78 2 218 1 277 1 4 1 109 1 368 1 58 1 32 1 374 1 284 1 310 1 177 1 309 1 94 1 95 1 260 1 286 1 225 1 143 1 19 1 267 1 123 1 98 1 187 1 295 1 125 2 
0 1 48 1 78 2 51 1 218 1 277 1 4 1 367 1 109 1 113 1 58 1 374 1 284 1 310 1 177 1 309 1 94 1 95 1 260 1 286 1 225 1 143 1 19 1 123 1 98 1 187 1 295 1 125 2 
215 2 192 2 78 2 52 1 82 1 301 1 109 2 133 1 88 1 58 1 248 2 173 2 205 1 284 1 309 1 94 1 256 1 19 1 41 1 123 2 295 1 125 4 
148 1 0 1 215 2 48 1 192 2 78 2 4 1 301 1 82 1 109 2 368 1 133 1 200 1 88 1 58 1 248 2 32 1 173 2 374 1 205 1 284 1 177 1 309 1 94 1 256 1 95 1 260 1 286 1 225 1 19 1 41 1 267 1 123 2 98 1 187 1 295 1 125 4 
270 1 215 1 299 1 192 1 78 2 52 1 196 1 301 1 82 1 109 1 87 1 88 1 58 1 248 1 173 1 205 1 284 1 309 1 94 1 256 1 329 1 260 1 286 1 19 1 41 1 123 2 295 1 230 1 125 3 
232 1 100 1 102 2 193 1 78 4 300 1 344 2 236 2 363 1 82 3 301 3 109 10 133 3 243 1 88 3 173 6 137 1 205 3 284 2 309 2 11 1 352 1 94 2 224 1 256 3 289 1 41 3 123 9 295 2 125 19 
232 1 100 1 102 1 78 6 300 1 50 1 344 2 236 4 363 2 301 2 82 3 83 1 109 12 133 2 243 2 88 3 9 1 173 4 137 2 205 2 284 3 309 3 328 1 223 1 352 1 94 3 256 3 18 2 41 2 289 2 123 14 268 1 295 3 125 26 
100 1 232 1 193 1 102 1 300 1 344 4 50 1 236 4 301 5 199 1 109 21 243 3 9 1 205 4 309 3 11 1 352 1 256 4 65 1 18 1 123 20 268 1 125 41 318 1 78 6 28 1 167 1 363 1 82 5 83 1 133 4 88 4 173 8 137 3 284 3 175 1 328 1 223 1 94 3 41 4 289 2 186 1 295 3 
318 1 232 1 100 1 102 1 193 1 78 8 300 1 50 1 344 4 236 4 28 1 167 1 363 1 82 5 301 4 83 1 199 1 109 18 133 4 243 3 88 4 9 1 173 7 137 3 205 3 284 4 175 1 309 4 328 1 11 1 223 1 352 1 94 4 256 4 65 1 18 2 289 2 41 3 186 1 123 20 268 1 295 4 125 38 
318 1 165 2 232 1 100 1 102 1 78 6 300 1 50 1 344 4 236 4 28 1 167 1 363 1 82 8 301 8 83 1 199 1 109 26 133 8 243 2 88 7 9 1 173 15 137 4 205 7 284 3 309 3 328 1 11 2 223 1 352 1 94 3 256 7 65 1 18 2 289 1 41 7 186 1 123 27 268 1 295 3 125 53 
179 1 168 1 136 1 216 1 66 1 381 1 5 1 308 1 201 1 275 1 
247 1 281 1 
168 1 136 1 66 1 354 1 381 1 5 1 308 1 343 1 372 1 
121 1 144 1 
2 1 112 1 21 1 
350 1 136 1 155 1 308 1 275 1 117 2 30 1 179 1 168 1 54 1 228 1 66 1 242 1 279 1 5 1 381 1 201 1 246 1 
350 1 136 1 155 1 308 1 275 1 117 2 30 1 179 1 168 1 54 1 228 1 66 1 242 1 279 1 5 1 381 1 201 1 246 1 
350 1 136 1 155 1 308 1 275 1 117 2 30 1 179 1 168 1 54 1 228 1 66 1 242 1 279 1 5 1 381 1 201 1 246 1 
121 1 2 1 144 1 
121 1 2 1 144 1 
112 1 21 1 
2 1 112 1 21 1 
262 1 213 1 
270 2 299 2 238 1 30 1 54 1 168 1 347 1 242 1 5 1 370 1 247 1 281 1 136 1 155 1 308 1 310 1 35 1 257 1 286 2 260 2 117 1 262 1 66 1 213 1 381 1 230 2 74 1 
0 1 164 1 299 2 48 1 321 1 78 2 52 1 218 1 277 1 325 1 109 1 58 1 203 1 204 1 221 1 374 2 154 1 284 1 177 2 309 1 94 1 286 2 260 2 225 2 19 1 355 2 123 1 98 1 187 1 295 1 125 2 
0 1 374 1 101 1 48 1 25 1 177 1 79 1 225 1 143 1 40 1 98 1 187 1 147 1 146 1 
374 1 48 1 177 1 178 1 225 1 261 1 312 1 181 1 288 1 40 1 378 1 302 1 335 1 304 1 98 1 229 2 147 1 251 1 
148 1 374 2 48 1 177 2 178 1 225 2 261 1 312 1 181 1 288 1 40 1 378 1 302 1 335 1 304 1 98 1 229 2 147 1 251 1 
374 1 48 1 177 1 178 1 225 1 261 1 312 1 181 1 288 1 302 1 335 1 304 1 98 1 229 2 46 1 147 1 251 1 
49 1 
129 1 134 1 130 1 228 1 132 1 255 1 189 1 171 1 348 1 345 1 
172 5 205 2 256 2 158 5 227 10 330 5 82 2 301 2 228 5 132 5 371 1 88 2 171 5 
96 1 228 1 24 1 155 1 255 1 30 1 
340 2 0 1 233 1 48 1 24 4 79 1 345 1 29 1 30 3 107 1 240 1 130 2 132 2 348 2 171 2 349 1 59 1 374 4 155 3 177 4 225 4 143 2 331 2 96 2 122 2 98 1 187 1 189 2 146 1 
270 2 0 1 127 1 299 2 48 1 78 2 218 1 4 1 109 1 368 1 58 1 32 1 374 1 254 1 284 1 310 1 177 1 309 1 94 1 286 3 260 3 329 2 95 1 225 1 143 1 19 1 267 1 98 1 187 1 295 1 230 2 125 1 
340 1 172 1 255 1 345 1 158 1 227 2 130 1 228 2 132 1 122 1 189 1 171 1 348 1 
129 1 134 1 120 1 228 1 132 1 255 1 171 1 
24 1 26 1 345 1 30 1 56 1 130 1 132 1 171 1 348 1 172 1 155 1 255 1 15 1 227 1 96 1 228 2 189 1 
340 1 0 1 48 1 345 3 197 2 4 1 301 2 6 1 348 3 306 3 205 2 155 5 255 1 13 2 256 2 258 1 158 6 210 2 265 2 122 2 163 2 24 5 272 1 30 5 82 2 130 3 132 8 371 2 88 2 282 1 171 7 172 6 374 1 177 1 225 1 38 2 143 1 227 12 330 6 96 3 228 7 98 2 187 6 44 2 189 3 
340 1 150 2 24 1 344 1 345 2 30 1 82 2 301 2 83 1 130 2 132 8 243 1 88 2 348 2 171 5 9 1 172 3 137 1 205 2 155 1 255 2 328 1 223 1 256 2 158 5 227 6 330 5 20 1 96 1 228 5 315 1 122 1 268 1 189 2 359 1 
270 1 126 1 150 2 299 1 345 1 30 1 167 1 362 1 82 2 301 1 130 1 132 2 245 1 348 1 171 2 114 1 254 1 155 1 286 1 260 1 65 1 329 1 212 1 186 1 337 1 189 1 230 1 359 1 
262 1 168 1 66 1 68 1 201 1 
168 1 66 1 303 1 
168 1 66 1 303 1 
168 1 66 1 303 1 
168 1 214 1 66 1 
168 1 214 1 66 1 
168 1 214 1 66 1 
168 1 66 1 
381 1 308 1 
126 1 173 5 284 1 78 2 309 1 300 1 94 1 65 2 167 1 82 2 301 2 41 2 186 2 109 5 133 3 123 5 295 1 125 10 
173 1 284 1 300 1 309 1 78 2 94 1 256 1 82 1 41 1 123 2 295 1 125 2 
173 2 205 1 284 1 300 1 309 1 78 2 94 1 256 1 301 1 82 1 41 1 109 2 133 1 123 2 88 1 295 1 125 4 
173 2 193 1 284 3 300 1 309 3 78 6 94 3 65 1 18 1 41 1 109 2 186 1 133 1 123 1 295 3 125 3 22 1 
318 1 193 1 78 10 300 1 344 4 28 1 167 2 80 1 82 5 301 5 199 1 108 1 109 18 243 1 133 7 88 3 173 12 137 3 205 3 284 5 309 5 11 1 94 5 256 3 65 3 18 2 41 5 186 3 356 1 123 16 357 1 295 5 125 34 22 1 
318 1 78 2 300 1 344 1 28 1 167 1 301 1 82 1 83 1 199 1 109 4 243 1 133 2 173 2 137 1 284 1 309 1 94 1 65 1 186 1 123 4 295 1 125 8 
318 1 300 1 78 4 344 2 28 1 167 1 80 1 301 1 82 2 83 1 199 1 109 5 133 2 243 1 88 1 173 3 137 1 284 2 309 2 11 1 94 2 256 1 65 1 41 1 186 1 123 6 295 2 125 11 
318 1 78 6 300 1 344 1 28 1 167 1 80 1 82 3 301 3 83 1 199 1 109 10 243 1 133 3 88 2 9 1 173 4 137 1 205 2 284 3 309 3 328 1 223 1 94 3 256 2 65 1 18 1 41 1 186 1 123 9 268 1 295 3 125 19 
78 8 300 1 344 1 80 1 82 2 301 1 83 1 109 5 243 1 133 2 88 2 9 1 173 3 137 1 205 1 284 4 309 4 328 1 223 1 94 4 256 2 18 2 41 1 123 7 268 1 295 4 125 12 
318 1 78 2 300 1 344 1 28 1 167 1 301 1 82 1 83 1 199 1 109 4 243 1 133 2 173 2 137 1 284 1 309 1 94 1 65 1 186 1 123 4 295 1 125 8 
78 4 300 1 344 1 82 2 301 2 83 1 109 7 243 1 133 2 88 2 9 1 173 3 137 1 205 2 284 2 309 2 328 1 223 1 94 2 256 2 18 1 41 1 123 6 268 1 295 2 125 13 
318 1 78 8 300 1 344 1 28 1 167 1 80 1 82 3 301 2 83 1 199 1 109 8 243 1 133 3 88 2 9 1 173 5 137 1 205 1 284 4 309 4 328 1 223 1 94 4 256 2 65 1 18 2 41 2 186 1 123 10 268 1 295 4 125 18 
193 1 300 1 78 8 344 1 82 3 301 2 83 1 109 7 243 1 133 3 88 3 9 1 173 6 137 1 205 2 284 4 309 4 328 1 223 1 94 4 256 3 18 2 41 3 123 9 268 1 295 4 125 16 
318 2 173 6 28 1 65 3 167 1 301 1 82 1 41 3 109 4 186 3 133 3 123 3 125 7 
318 1 193 1 300 1 78 8 344 1 28 1 167 1 82 3 301 2 83 1 199 1 109 8 243 1 133 3 88 2 9 1 173 4 137 1 205 1 284 4 309 4 328 1 223 1 94 4 256 2 65 1 18 2 41 1 186 1 123 10 268 1 295 4 125 18 
318 1 173 3 284 2 309 2 78 4 94 2 28 1 65 1 167 1 18 1 301 1 82 1 41 1 199 1 109 4 186 1 123 4 133 2 295 2 125 8 
318 1 173 2 28 1 65 1 167 1 120 1 82 1 301 1 199 1 109 3 186 1 133 2 123 3 125 6 
173 2 205 1 284 1 309 1 78 2 94 1 256 1 80 1 301 1 82 1 41 1 109 2 133 1 123 2 88 1 295 1 125 4 
173 2 205 1 137 1 11 1 344 2 256 1 301 1 82 1 41 1 109 4 133 1 243 1 123 3 88 1 125 7 
318 1 165 1 78 4 344 2 28 1 167 1 82 3 301 3 199 1 109 12 133 5 88 2 173 9 137 2 205 2 284 2 309 2 11 1 94 2 256 2 65 2 18 2 41 4 184 1 186 2 123 11 295 2 125 23 22 1 
109 1 344 1 125 1 
137 1 123 1 125 1 
173 3 205 1 284 1 78 2 309 1 94 1 256 1 80 1 82 1 301 1 41 1 109 3 123 3 133 2 371 1 88 1 295 1 125 6 
78 4 300 1 344 1 82 2 301 2 83 1 109 7 243 1 133 2 88 2 9 1 173 3 137 1 205 2 284 2 309 2 328 1 223 1 94 2 256 2 18 1 41 1 123 6 268 1 295 2 125 13 
173 2 65 1 167 1 82 1 301 1 41 1 109 3 186 1 123 3 133 1 125 6 
318 1 173 2 284 1 309 1 78 2 94 1 65 1 28 1 18 1 41 1 186 1 109 2 123 1 133 1 295 1 125 3 22 1 
313 1 299 1 310 1 208 1 286 1 260 1 91 1 
114 1 60 1 375 1 310 1 156 1 364 1 70 1 90 1 
148 1 0 1 374 4 48 1 177 4 274 1 79 1 225 4 143 1 69 1 98 1 187 1 146 1 
0 1 298 1 374 2 48 1 177 2 27 1 225 2 4 1 331 1 187 1 98 2 382 1 294 1 47 1 
143 1 181 1 374 1 48 1 177 1 98 1 229 1 178 1 225 1 251 1 
148 1 164 1 0 1 374 2 48 1 177 2 225 2 325 1 288 1 187 1 98 1 
148 1 0 2 374 5 191 1 48 2 177 5 274 1 79 1 225 4 143 1 180 1 325 1 331 1 187 3 98 2 146 1 
148 1 0 2 374 5 191 1 48 2 177 5 274 1 79 1 225 4 143 1 325 1 331 1 110 1 187 3 98 2 146 1 
0 1 143 1 120 1 374 1 48 1 177 1 98 1 187 1 79 1 225 1 146 1 
0 1 231 1 270 1 374 1 299 1 48 1 310 1 177 1 95 1 260 2 286 2 225 1 4 1 143 1 267 1 187 1 98 1 230 1 
270 1 231 1 0 2 320 1 299 2 48 1 276 1 364 1 4 2 278 1 114 2 374 1 310 1 177 1 285 1 286 2 260 2 95 1 225 1 267 1 331 1 98 1 187 3 230 2 
270 1 231 1 0 2 320 1 299 2 48 1 276 1 364 1 4 2 278 1 367 1 114 2 374 1 310 1 177 1 285 1 286 2 260 2 95 1 225 1 331 1 98 1 187 3 230 2 
0 1 320 1 374 3 306 1 24 1 48 1 155 2 255 1 177 3 104 1 225 3 30 2 38 1 4 1 143 1 287 1 278 1 265 1 331 1 228 1 69 1 98 1 187 4 
0 1 320 1 374 3 306 1 24 1 48 1 155 2 255 1 177 3 225 3 30 2 38 1 4 1 143 1 278 1 265 1 331 1 228 1 69 1 98 1 44 1 187 4 
39 1 374 1 48 1 177 1 98 1 225 1 
148 1 0 2 298 1 374 7 191 1 48 2 206 1 177 7 27 1 258 1 225 6 4 1 39 1 180 1 143 2 325 1 288 1 380 1 355 1 187 3 98 3 
318 1 0 1 270 1 231 1 148 1 215 1 299 1 48 1 192 1 78 4 52 1 28 1 167 1 4 1 301 1 82 1 199 1 109 3 368 1 133 2 200 1 58 2 248 1 32 1 203 1 173 2 374 1 284 2 310 2 309 2 177 1 94 2 65 1 95 1 286 2 260 2 225 1 211 1 19 2 267 1 186 1 123 3 187 1 98 1 230 1 295 2 125 6 
24 2 345 2 29 1 30 3 129 1 130 2 132 1 171 1 348 2 134 1 374 1 306 1 155 3 255 1 177 1 13 1 257 1 225 1 210 1 38 1 143 1 265 1 96 1 228 1 44 1 187 2 189 2 163 1 
148 1 0 1 374 2 48 1 177 2 258 1 225 2 4 1 39 1 265 1 187 2 98 2 282 1 
0 1 231 1 270 1 374 1 299 1 48 1 310 1 177 1 95 1 260 2 286 2 225 1 4 1 143 1 367 1 187 1 98 1 230 1 
0 1 298 1 374 1 48 1 177 1 27 1 258 1 225 1 4 1 331 1 380 1 187 1 98 2 
10 1 204 1 154 1 299 1 321 1 260 1 286 1 264 1 198 1 
253 1 10 1 379 1 
10 1 264 1 198 1 310 1 332 1 
270 1 299 1 276 1 30 2 362 1 198 1 245 1 253 1 10 1 114 2 254 1 155 2 255 1 12 1 16 1 257 1 285 1 286 1 260 1 329 1 259 1 38 1 212 1 264 1 379 1 228 1 332 1 230 1 
365 1 55 1 61 1 170 1 85 1 334 1 322 1 202 1 
305 1 283 1 61 1 92 1 322 2 376 1 55 2 183 2 170 4 85 1 334 4 326 1 73 1 202 3 
365 1 55 1 77 1 183 1 61 1 170 2 85 1 207 1 334 2 322 1 202 1 358 1 
166 1 283 2 61 1 92 1 322 1 365 1 55 1 85 1 170 3 334 3 73 2 202 1 
266 1 202 2 361 2 36 1 
365 1 106 1 61 1 170 1 85 1 334 1 
365 1 55 1 183 1 61 1 170 2 85 1 334 2 322 1 202 1 157 1 
239 1 
365 1 55 1 61 1 170 1 85 1 334 1 322 1 202 1 
365 1 55 1 283 1 183 1 61 1 170 3 85 1 334 3 322 1 202 1 157 1 
305 1 376 1 326 1 202 1 
322 1 202 1 
55 1 120 1 322 1 202 1 
55 1 61 1 170 1 85 1 334 1 322 1 202 1 
174 1 170 1 17 1 
283 2 61 1 92 1 322 1 365 1 55 1 85 1 170 3 334 3 8 1 73 1 202 1 
55 1 183 1 61 1 170 2 85 1 222 1 334 2 322 1 202 1 
376 1 365 1 181 1 61 1 170 1 85 1 280 1 334 1 304 1 229 1 202 1 
365 1 61 1 170 1 85 1 334 1 322 1 202 1 
365 1 55 1 61 1 170 1 85 1 334 1 322 2 
365 1 149 1 377 1 153 1 61 2 170 2 85 2 334 2 322 1 202 1 
376 1 365 1 55 1 169 1 183 2 61 1 170 3 85 1 326 1 334 3 322 1 202 2 157 1 
61 1 322 1 178 1 312 1 365 1 118 1 55 1 181 1 183 1 85 1 170 2 334 2 304 1 229 2 202 1 
61 2 222 1 353 1 322 1 365 1 376 1 55 1 183 2 85 2 170 4 334 4 326 1 202 2 

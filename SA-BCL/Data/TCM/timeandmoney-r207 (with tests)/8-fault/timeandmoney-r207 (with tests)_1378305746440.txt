#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 323 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 323 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.RuntimeException 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2973 | 1 -> 0
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4918 | > -> <
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String; | RETURN | 2871 | return null
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | OPERATOR | 6134 | && -> ||
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3693 | if (x) -> if (!x)
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> <<
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String; | RETURN | 1613 | return null
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
195 6 19 1 363 1 365 1 265 1 346 3 95 5 219 1 97 2 175 2 154 9 7 1 209 2 372 2 373 1 34 4 351 9 336 1 107 1 338 1 44 1 379 1 292 2 318 1 254 2 111 1 18 1 141 2 
195 6 19 1 363 1 365 1 265 1 346 3 95 5 219 1 97 2 175 2 154 9 7 1 209 2 372 2 373 1 34 4 351 9 336 1 107 1 338 1 44 1 379 1 292 2 318 1 254 2 111 1 18 1 141 2 
195 7 19 1 363 1 365 1 265 1 346 4 95 6 219 1 97 2 175 2 154 10 7 1 209 2 372 2 373 1 34 5 351 10 336 1 107 1 338 1 44 1 379 1 292 2 318 1 254 2 111 1 18 1 141 2 
195 4 363 1 365 1 265 1 346 2 95 4 219 1 97 2 175 2 154 7 7 1 209 2 372 2 373 1 34 3 351 7 336 1 107 1 338 1 44 1 379 1 292 2 318 1 254 1 111 1 18 1 141 2 
195 3 19 1 351 4 107 1 44 1 265 1 346 1 292 1 95 3 97 1 219 1 175 1 254 2 154 4 18 1 209 1 372 1 34 2 
252 1 351 2 132 1 44 1 265 1 95 1 292 1 219 1 97 1 318 1 175 1 154 2 373 1 372 1 126 1 141 1 
195 1 351 3 44 1 265 1 292 2 346 1 95 2 219 1 154 3 111 1 372 2 34 1 141 1 
195 7 19 1 351 9 21 1 363 1 75 1 107 1 44 1 265 1 379 1 95 5 292 2 346 3 97 1 219 1 175 1 254 2 154 9 111 1 209 1 18 1 372 2 34 4 141 1 
195 7 19 1 351 9 21 1 363 1 75 1 107 1 44 1 265 1 379 1 95 5 292 2 346 3 97 1 219 1 175 1 254 2 154 9 111 1 209 1 18 1 372 2 34 4 141 1 
59 1 323 1 67 1 
161 1 67 1 78 2 
361 2 258 2 48 1 213 2 104 2 262 2 192 2 230 1 
361 3 258 2 20 1 262 2 117 1 280 1 91 2 148 1 217 1 248 1 266 1 123 1 176 1 68 1 330 2 159 1 160 1 310 1 102 1 184 1 163 1 104 2 352 1 106 1 230 1 47 1 48 1 213 3 190 2 380 2 275 1 276 1 51 1 83 1 381 2 192 2 382 1 
361 1 258 1 14 1 48 1 181 1 213 1 340 1 104 1 262 1 192 1 
361 1 181 1 59 1 162 1 104 1 242 1 354 1 355 1 187 1 213 1 153 1 67 1 371 1 278 1 
258 1 361 1 181 1 59 1 162 1 104 1 262 1 242 1 355 2 354 2 213 1 153 1 67 1 192 1 371 1 
17 1 1 1 355 1 354 1 113 1 
274 1 339 1 59 1 67 1 1 1 355 2 354 2 113 1 
355 1 354 1 113 1 
258 1 361 1 181 1 104 1 262 1 1 1 28 1 354 1 355 1 14 1 48 1 213 1 340 1 192 1 
67 1 
339 1 165 1 59 1 67 1 1 1 355 2 354 2 113 1 
374 1 222 1 59 1 228 1 261 1 241 2 24 1 1 2 354 5 355 5 42 1 289 1 339 1 67 1 255 1 268 1 256 2 86 2 113 2 
323 1 230 1 
361 2 258 1 128 1 104 2 262 1 230 2 49 1 213 2 192 1 
271 1 220 1 35 1 
361 1 102 1 163 1 352 1 230 1 280 1 213 1 190 1 380 1 51 1 266 1 381 1 123 1 68 1 349 1 382 1 
361 3 258 3 213 3 104 3 262 1 192 3 230 1 12 1 
361 1 258 1 181 1 213 1 340 1 104 1 192 1 
361 1 258 1 128 1 49 1 181 1 213 1 104 1 262 1 192 1 
361 4 258 3 20 1 262 2 242 1 117 1 280 1 300 1 91 2 217 1 248 1 266 1 307 1 153 1 123 1 176 1 68 1 330 1 371 1 160 1 310 1 181 1 102 1 162 1 163 1 104 3 352 1 230 1 12 1 354 1 355 1 188 1 47 1 49 1 48 1 213 4 190 1 380 1 276 1 51 1 83 1 381 1 192 3 382 1 
361 2 258 1 100 1 213 2 104 2 192 1 230 1 278 1 12 1 
258 3 361 3 181 1 332 1 162 1 104 3 262 1 242 1 12 2 355 1 354 1 188 1 49 1 213 3 307 1 153 1 67 1 192 3 371 1 
361 2 258 2 49 1 213 2 271 1 104 2 262 1 220 1 192 2 12 1 
361 1 102 1 163 1 352 1 230 1 280 1 213 1 190 1 380 1 266 1 51 1 381 1 123 1 68 1 382 1 
361 1 102 1 313 1 352 1 230 1 280 1 213 1 190 1 380 1 266 1 51 1 381 1 123 1 382 1 54 1 
20 1 240 1 117 1 201 1 91 2 31 1 148 2 217 1 248 1 348 1 176 2 220 2 330 4 35 2 156 1 157 1 310 1 271 2 286 1 335 1 47 1 191 1 164 1 234 1 
361 1 258 1 181 1 213 1 104 1 153 1 319 1 192 1 
258 1 361 2 102 1 163 1 104 1 352 1 280 1 12 1 188 1 213 2 190 1 380 1 51 1 266 1 123 1 381 1 68 1 220 1 192 1 382 1 
258 4 361 5 100 1 225 1 104 5 262 1 12 2 230 1 188 1 49 1 213 5 218 1 192 4 278 1 
361 2 258 2 181 1 213 2 340 1 104 2 319 1 192 2 
116 1 309 1 
116 1 309 1 
182 1 359 1 
182 1 359 1 
182 1 359 1 
116 1 367 1 309 1 
116 1 143 1 309 1 
322 1 182 1 116 2 359 1 199 1 309 2 
116 1 367 1 309 1 
116 1 367 1 309 1 
116 1 294 1 309 1 
116 1 294 1 309 1 
116 1 294 1 309 1 
179 2 158 1 343 2 127 2 116 2 210 1 199 1 90 1 40 1 77 1 39 3 354 2 355 2 189 2 33 1 52 2 67 1 85 1 309 2 
258 2 361 2 343 1 116 1 143 1 298 1 168 1 33 1 309 1 179 1 127 1 104 2 37 1 39 1 230 1 355 1 354 1 189 1 81 1 213 2 317 1 295 1 192 2 87 1 
97 1 175 1 209 1 
252 1 97 1 175 1 
252 1 72 1 103 1 247 1 97 3 209 2 
252 1 72 1 103 1 150 1 97 2 209 1 
252 1 72 2 103 1 97 2 209 1 
142 1 362 1 260 1 59 1 23 2 241 1 216 1 1 4 201 1 168 1 245 1 246 2 122 1 348 1 67 2 161 1 286 1 131 1 228 3 37 1 78 3 355 5 354 5 42 2 377 1 289 1 231 2 339 1 164 1 256 1 87 1 86 1 113 1 
258 1 59 1 61 1 262 1 216 2 1 7 168 4 119 1 122 1 306 1 348 3 67 5 181 1 228 8 78 9 354 9 355 9 14 1 15 1 17 5 192 1 86 2 361 1 320 1 142 3 362 3 241 2 23 6 201 3 28 1 245 2 246 6 151 5 374 1 161 3 286 3 104 1 45 1 289 1 42 6 48 1 339 1 213 1 340 1 164 3 256 2 113 6 
142 1 362 1 59 1 241 1 23 2 216 1 1 2 201 1 168 1 245 1 246 2 348 1 67 3 284 1 374 1 161 2 131 1 286 1 228 3 78 4 355 3 354 3 377 1 42 2 231 1 164 1 256 1 86 1 
142 2 362 1 59 1 23 4 241 1 61 1 216 1 1 3 201 2 168 2 119 1 245 1 246 4 348 2 67 5 374 1 161 4 131 1 286 2 228 5 78 8 355 4 354 4 377 1 42 4 231 2 15 1 164 2 256 1 86 1 
212 1 323 1 51 1 
51 1 326 1 
263 1 
51 1 266 1 
212 2 172 1 51 3 266 1 352 1 174 1 
51 1 266 1 352 1 
51 1 134 1 
312 1 240 5 185 1 201 3 337 1 171 2 135 1 148 8 5 2 283 2 267 1 348 3 176 6 125 1 308 2 330 14 156 4 177 1 
312 3 240 7 185 1 201 3 337 1 171 2 135 1 148 8 5 2 283 2 267 1 348 3 176 6 125 1 308 2 330 14 156 4 177 1 
240 5 279 1 201 3 171 2 148 8 283 2 5 2 267 1 348 3 125 1 176 6 330 14 308 2 177 1 156 4 312 1 185 1 337 1 135 1 
115 1 142 3 20 1 240 14 144 4 117 1 201 6 91 2 171 2 148 21 217 1 5 3 283 3 96 1 267 1 348 6 176 19 125 2 370 1 308 3 330 40 9 1 177 1 156 7 310 1 286 3 312 7 185 1 337 2 109 1 80 1 135 1 46 1 164 3 277 3 
20 2 240 7 117 2 201 3 91 4 171 2 148 9 217 2 283 2 5 2 267 1 348 3 125 1 176 7 330 16 308 2 9 1 156 5 99 1 310 2 312 2 185 1 337 1 135 1 360 1 
195 1 364 1 145 1 169 1 280 1 265 1 247 1 95 1 219 1 97 2 175 1 152 1 154 2 209 1 8 1 372 1 252 1 351 2 102 1 272 1 311 1 11 1 38 1 44 1 190 1 380 1 292 1 381 1 53 1 141 1 
195 2 364 1 169 1 280 1 265 1 368 1 327 1 247 1 95 1 97 2 175 1 152 1 154 3 209 1 8 1 372 1 252 1 351 3 102 1 311 1 11 1 74 1 38 1 44 1 190 1 380 1 292 1 381 1 53 1 141 1 
195 2 364 1 169 1 280 1 265 1 368 1 247 1 95 1 97 2 152 1 175 1 154 2 209 1 252 1 351 2 102 1 11 1 74 1 38 1 44 1 190 1 380 1 381 1 53 1 141 1 
351 1 180 1 197 1 102 1 38 2 299 1 280 1 264 1 327 1 190 1 341 1 292 1 380 1 51 1 266 1 152 2 381 1 154 1 84 1 53 2 372 1 382 1 141 2 
364 1 169 1 280 1 247 1 219 1 97 2 175 1 152 1 154 1 209 1 8 1 372 1 252 1 351 1 102 1 272 1 311 1 11 1 74 1 38 1 190 1 380 1 292 1 381 1 53 1 141 1 
291 1 
344 1 59 1 62 1 3 2 264 1 303 1 170 1 266 1 65 1 67 2 70 2 221 2 350 1 269 1 181 1 228 2 78 2 354 5 355 5 187 1 190 2 16 1 82 2 84 1 86 1 278 1 361 1 241 1 242 1 280 1 29 2 202 2 32 2 245 1 92 1 153 1 371 1 36 1 161 2 102 1 162 1 104 1 253 4 42 2 289 1 339 3 110 1 213 1 380 2 342 1 51 1 381 2 256 1 382 2 113 6 
361 1 165 1 344 1 242 1 29 1 170 1 92 1 153 1 371 1 350 1 181 1 162 1 104 1 253 2 355 3 354 3 187 1 339 1 110 1 213 1 278 1 113 2 
361 1 165 1 344 1 59 1 242 1 170 1 92 1 153 1 67 1 371 1 70 1 350 1 181 1 162 1 104 1 253 3 355 3 354 3 187 1 339 1 110 1 213 1 278 1 113 1 
361 1 165 1 344 1 59 1 242 1 29 1 202 1 170 1 92 1 153 1 67 1 371 1 70 1 350 1 181 1 162 1 104 1 253 3 355 3 354 3 187 1 339 1 110 1 213 1 278 1 113 2 
258 1 165 1 296 1 344 1 59 1 262 1 3 2 301 1 170 1 4 1 67 1 70 2 221 2 350 1 181 2 269 1 228 1 354 5 355 5 187 1 14 1 82 2 192 1 278 1 86 1 140 1 361 2 241 1 242 1 28 1 29 4 202 4 32 2 92 1 153 1 371 1 161 2 162 1 104 2 253 4 289 1 42 1 48 1 339 3 110 1 213 2 340 1 342 1 214 1 256 1 113 7 
344 1 59 1 3 2 303 1 170 1 67 2 70 2 221 2 350 1 181 1 269 1 228 1 78 2 354 4 355 4 187 1 82 2 278 1 86 1 361 1 241 1 242 1 29 2 32 2 202 2 92 1 153 1 371 1 161 2 162 1 104 1 253 4 289 1 42 1 339 2 110 1 213 1 342 1 256 1 113 4 
361 1 344 1 59 1 241 1 242 1 3 2 29 2 301 1 202 2 32 2 170 1 92 1 153 1 67 1 70 2 371 1 221 2 350 1 269 1 181 1 161 2 162 1 228 1 104 1 253 4 355 4 354 4 42 1 289 1 187 1 339 2 110 1 213 1 342 1 82 2 214 1 256 1 278 1 86 1 113 4 140 1 
361 1 344 1 59 1 241 1 242 1 3 2 29 2 301 1 202 2 32 2 170 1 92 1 153 1 67 1 70 2 371 1 221 2 350 1 269 1 181 1 161 2 162 1 228 1 104 1 253 4 355 4 354 4 42 1 289 1 187 1 339 2 110 1 213 1 342 1 82 2 214 1 256 1 278 1 86 1 113 4 140 1 
361 1 344 1 59 1 241 1 242 1 200 1 3 2 29 2 301 1 202 2 32 2 170 1 203 1 92 1 153 1 67 1 70 2 371 1 350 1 269 1 181 1 226 2 162 1 228 1 104 1 41 2 78 2 253 4 355 4 354 4 42 1 289 1 187 1 339 2 136 1 110 1 213 1 256 1 278 1 86 1 113 4 
258 1 296 1 344 1 59 1 262 1 3 2 301 1 170 1 67 1 70 3 221 2 350 1 181 2 269 1 228 1 354 4 355 4 187 1 14 1 82 2 192 1 278 1 86 1 140 1 361 2 241 1 242 1 28 1 29 3 202 3 32 2 92 1 153 1 371 1 161 2 162 1 104 2 253 5 289 1 42 1 48 1 339 2 110 1 213 2 340 1 342 1 214 1 256 1 113 5 
258 1 296 1 344 1 59 1 262 1 3 2 301 1 170 1 67 1 70 3 221 2 350 1 181 2 269 1 228 1 354 4 355 4 187 1 14 1 82 2 192 1 278 1 86 1 140 1 361 2 241 1 242 1 28 1 29 3 202 3 32 2 92 1 153 1 371 1 161 2 162 1 104 2 253 5 289 1 42 1 48 1 339 2 110 1 213 2 340 1 342 1 214 1 256 1 113 5 
344 1 59 1 3 2 303 1 170 1 67 1 70 2 350 1 181 1 269 1 226 2 228 1 78 2 354 4 355 4 187 1 278 1 86 1 361 1 241 1 242 1 200 1 29 2 32 2 202 2 92 1 153 1 371 1 162 1 104 1 253 4 41 2 289 1 42 1 339 2 110 1 213 1 256 1 113 4 
20 1 310 1 240 2 323 1 185 1 335 1 117 1 201 1 230 2 91 2 171 1 135 1 47 1 148 3 217 1 283 1 5 1 248 1 348 1 176 2 330 5 308 1 156 2 
142 2 20 2 240 2 144 3 117 2 201 1 91 4 304 1 244 1 148 8 217 2 248 2 96 1 348 2 176 6 220 11 330 14 156 1 35 11 310 2 101 1 73 1 333 1 286 2 271 4 312 1 230 1 46 1 47 1 275 1 276 1 164 1 277 3 
361 2 258 1 20 1 117 1 280 1 91 2 244 1 148 1 217 1 248 1 266 1 123 1 347 1 68 1 176 1 349 1 330 2 310 1 102 1 271 1 163 1 104 1 352 1 230 1 12 1 288 1 188 1 47 1 190 1 213 2 380 1 233 1 51 1 276 1 275 1 381 1 192 1 382 1 
258 1 117 3 171 2 217 3 5 2 266 2 267 1 123 2 348 5 176 13 68 2 69 2 220 6 308 2 181 1 310 3 183 1 271 6 312 1 185 1 352 2 230 3 12 1 188 1 135 1 316 2 190 1 275 1 276 1 192 1 138 2 139 2 361 3 142 2 20 3 240 7 201 5 280 2 91 6 244 1 148 14 283 1 248 3 207 1 330 27 35 6 156 6 160 2 102 2 286 2 163 2 104 1 108 1 47 3 213 3 380 1 51 2 164 2 381 1 382 1 
361 1 258 1 20 2 297 1 26 1 145 1 117 2 280 2 264 1 91 4 148 1 217 2 248 2 266 2 176 1 330 2 285 1 310 2 102 2 184 2 74 1 104 1 335 1 79 1 12 1 47 2 213 1 190 8 358 1 380 7 51 3 275 1 276 1 293 1 381 8 84 1 192 1 236 1 382 2 
258 1 361 1 142 1 20 1 240 1 325 1 262 1 117 1 201 1 91 2 244 1 148 1 217 1 248 1 348 1 176 2 220 1 330 3 156 1 35 1 310 1 271 1 286 1 104 1 49 1 47 1 213 1 164 1 192 1 
20 1 310 1 271 1 286 1 240 1 312 1 335 1 117 1 91 2 31 1 47 1 148 2 217 1 248 1 348 1 220 1 330 2 35 1 
20 1 310 1 271 1 240 1 335 1 117 1 201 1 91 2 47 1 217 1 248 1 234 1 164 1 176 2 220 1 330 2 156 1 35 1 
142 1 20 1 240 2 117 1 201 1 91 2 148 2 217 1 248 1 348 1 176 2 220 2 330 4 35 2 156 1 310 1 286 1 271 2 312 1 335 1 47 1 164 1 
20 1 310 1 271 1 286 1 240 1 312 1 117 1 91 2 31 1 47 1 148 2 217 1 248 1 293 1 348 1 220 1 330 2 35 1 
20 1 310 1 271 1 240 1 117 1 201 1 91 2 47 1 217 1 248 1 293 1 234 1 164 1 176 2 220 1 330 2 156 1 35 1 
142 1 20 1 240 2 117 1 201 1 91 2 148 2 217 1 248 1 348 1 176 2 220 2 330 4 35 2 156 1 310 1 286 1 271 2 312 1 47 1 293 1 164 1 
142 1 20 1 310 1 271 2 286 1 240 2 312 1 117 1 201 1 91 2 47 1 148 2 217 1 248 1 164 1 348 1 176 2 220 2 330 4 156 1 35 2 
361 1 20 1 117 1 280 1 91 2 148 1 217 1 248 1 266 1 123 1 68 1 176 1 330 2 160 1 310 1 102 1 163 1 352 1 230 1 47 1 190 1 213 1 380 1 275 1 51 1 276 1 381 1 382 1 
361 1 20 1 324 1 117 1 280 1 91 2 148 1 217 1 248 1 266 1 123 1 176 1 330 2 310 1 102 1 313 1 352 1 230 1 47 1 190 1 213 1 380 1 275 1 51 1 276 1 381 1 382 1 54 1 
142 1 20 1 240 2 117 1 201 1 91 2 244 1 148 2 217 1 248 1 348 1 176 2 220 2 330 4 35 2 156 1 310 1 286 1 271 2 312 1 47 1 164 1 
361 1 142 1 20 1 240 2 145 1 117 1 201 1 280 1 91 2 148 2 217 1 248 1 266 1 348 1 123 1 176 2 68 1 220 2 330 4 156 1 35 2 160 1 310 1 102 1 271 2 286 1 312 1 163 1 352 1 316 1 47 1 190 1 213 1 380 1 51 1 164 1 381 1 
258 1 361 1 142 1 20 1 240 1 262 1 117 1 201 1 91 2 244 1 148 2 217 1 248 1 348 1 176 1 220 1 330 3 35 1 310 1 286 1 271 1 312 1 376 1 104 1 49 1 47 1 213 1 164 1 192 1 
215 1 142 3 88 1 20 2 0 2 240 6 144 2 60 1 117 2 201 3 302 2 91 4 148 9 217 2 96 1 348 3 176 10 330 19 71 1 156 3 310 2 130 1 286 3 312 3 287 1 46 1 50 1 164 3 360 1 277 1 
215 2 142 3 88 1 89 1 20 3 240 4 0 4 198 1 60 2 144 2 117 3 201 2 302 1 91 6 148 14 149 1 94 1 217 3 369 1 348 3 176 12 330 26 9 2 156 2 310 3 286 3 312 2 287 1 46 2 50 1 164 2 360 1 235 1 277 2 
215 2 142 4 89 1 88 1 238 1 20 3 0 4 240 8 198 1 144 4 60 1 117 3 201 5 302 1 91 6 171 1 149 1 148 20 94 1 217 3 283 1 5 1 96 1 369 1 348 5 176 21 308 1 330 41 71 1 9 1 156 4 310 3 286 4 312 4 185 1 287 1 135 1 46 3 50 1 164 4 360 1 235 1 277 3 
215 2 142 4 89 1 88 1 238 1 20 4 0 4 240 7 198 1 144 4 60 1 117 4 201 4 302 1 91 8 171 1 149 1 148 20 94 1 217 4 283 1 5 1 96 1 369 1 348 5 176 18 308 1 330 38 71 1 9 2 156 4 310 4 286 4 312 3 185 1 287 1 135 1 46 3 50 1 164 3 360 1 235 1 277 3 
215 1 142 7 89 1 88 1 20 2 0 4 240 14 198 1 144 4 60 1 117 2 201 8 302 1 91 4 304 2 171 1 149 1 148 27 94 1 217 2 283 1 5 1 96 2 369 1 348 8 176 25 308 1 330 52 9 1 156 7 310 2 286 7 312 7 185 1 287 1 135 1 46 2 50 1 164 7 360 1 235 1 277 4 
179 1 57 1 189 1 158 1 127 1 343 1 116 1 199 1 40 1 309 1 
143 1 295 1 
179 1 10 1 189 1 378 1 127 1 343 1 281 1 116 1 309 1 
179 1 158 1 343 1 127 1 116 1 210 1 199 1 40 1 77 1 39 2 354 1 355 1 33 1 189 1 52 1 67 1 85 1 309 1 
179 1 158 1 343 1 127 1 116 1 210 1 199 1 40 1 77 1 39 2 354 1 355 1 33 1 189 1 52 1 67 1 85 1 309 1 
179 1 158 1 343 1 127 1 116 1 210 1 199 1 40 1 77 1 39 2 354 1 355 1 33 1 189 1 52 1 67 1 85 1 309 1 
204 1 322 1 367 1 
204 1 322 1 367 1 
270 1 294 1 
322 1 270 1 294 1 
81 1 317 1 
361 2 258 2 343 1 116 1 143 1 167 1 298 1 1 1 168 1 309 1 179 1 127 1 210 1 104 2 37 1 39 1 230 1 355 1 354 1 189 1 81 1 213 2 317 1 52 1 295 1 192 2 87 1 
204 1 367 1 
322 1 270 1 294 1 
196 1 361 2 20 1 345 1 297 1 27 1 117 1 280 1 91 2 244 1 148 1 217 1 248 1 266 1 124 1 176 1 330 2 331 1 310 1 102 1 184 2 104 2 47 1 190 2 213 2 358 1 380 2 51 1 275 1 276 1 381 2 
252 1 102 1 311 1 11 1 364 1 74 1 145 1 280 1 63 1 232 1 190 2 247 1 380 2 97 2 175 1 381 2 250 1 209 1 53 1 
114 1 252 1 102 1 311 1 11 1 364 1 74 1 280 1 63 1 190 1 247 1 380 1 97 2 175 1 381 1 209 1 53 1 
102 1 299 1 280 1 264 1 232 1 190 1 380 1 51 1 266 1 249 1 381 1 84 1 53 1 382 1 
252 1 102 1 311 1 11 1 364 1 74 1 280 1 63 1 232 1 190 1 247 1 380 1 97 2 175 1 381 1 250 1 209 1 53 1 
155 1 
59 1 323 1 228 1 261 1 24 1 67 1 42 1 
161 1 59 1 241 1 228 1 78 1 355 1 354 1 289 1 42 1 339 1 342 1 82 1 67 2 256 1 86 1 113 1 221 1 
259 2 59 1 62 1 266 1 174 1 6 2 348 2 67 7 69 2 228 8 352 1 78 12 354 5 355 5 190 1 86 3 194 1 142 2 362 2 241 3 23 6 25 1 201 2 280 2 326 3 245 2 206 2 246 6 282 2 93 1 284 2 102 1 161 6 162 2 286 2 289 3 42 7 212 2 339 3 380 1 51 6 164 2 381 1 256 3 112 2 382 1 113 5 
142 2 89 1 362 2 59 2 198 1 23 5 144 1 241 2 62 1 201 2 30 1 245 1 246 5 149 1 94 1 369 1 348 2 67 5 284 1 161 3 133 1 286 2 228 8 78 6 355 1 354 1 289 2 42 5 46 1 339 1 164 2 256 2 277 1 86 2 113 1 
361 1 258 1 362 2 241 1 262 1 201 1 28 1 171 1 5 1 267 1 348 2 284 1 308 1 181 1 228 2 104 1 355 1 354 1 289 1 42 2 14 1 48 1 213 1 340 1 256 1 192 1 86 1 140 1 
59 1 241 1 261 1 228 1 24 1 289 1 42 1 67 1 256 1 86 1 
142 1 362 1 161 2 286 1 228 2 23 2 201 1 78 4 42 2 246 2 164 1 348 1 67 2 284 1 
339 1 59 1 67 1 355 1 354 1 113 1 
55 1 166 1 241 2 62 2 280 3 264 1 245 2 266 2 65 1 178 2 36 1 374 1 102 2 334 1 228 2 352 1 211 1 314 1 354 3 355 3 43 1 289 1 42 2 339 2 190 4 380 4 51 2 381 4 256 2 84 1 193 1 86 2 382 2 113 4 
361 3 258 2 20 1 262 2 117 1 280 1 91 2 217 1 248 1 266 1 123 1 176 1 68 1 330 1 160 1 310 1 102 1 163 1 104 2 352 1 230 1 48 1 47 1 190 1 213 3 380 1 276 1 51 1 381 1 83 1 192 2 382 1 
161 2 59 2 23 2 241 1 228 1 62 1 78 4 42 2 289 1 245 1 246 2 283 1 67 4 256 1 86 1 
127 1 343 1 375 1 
81 1 158 1 127 1 343 1 208 1 
127 1 343 1 375 1 
127 1 343 1 375 1 
127 1 343 1 237 1 
127 1 343 1 237 1 
127 1 343 1 237 1 
127 1 343 1 
116 1 309 1 
20 2 310 2 312 3 240 7 185 1 117 2 201 3 91 4 171 2 135 1 148 9 217 2 283 1 5 2 267 1 348 3 176 8 330 17 308 2 9 1 156 4 
323 1 240 2 185 1 201 1 135 1 171 1 148 3 283 1 5 1 348 1 176 2 308 1 330 5 156 2 
142 1 20 1 310 1 239 1 286 1 240 2 312 1 117 1 201 1 91 2 148 2 217 1 164 1 348 1 176 2 330 4 156 1 
142 1 286 1 312 1 240 2 144 2 201 1 46 1 148 3 96 1 164 1 348 1 176 4 330 7 277 1 156 1 
142 2 20 1 240 7 144 2 117 1 201 5 91 2 304 1 171 2 148 13 217 1 283 1 5 2 96 1 267 1 348 5 176 12 308 2 330 25 9 1 156 5 310 1 101 1 286 2 312 2 185 1 135 1 164 2 277 2 
144 1 176 1 330 1 
148 1 330 1 277 1 
142 1 310 1 20 1 239 1 286 1 312 1 240 3 117 1 201 1 91 2 148 3 217 1 164 1 348 1 176 3 69 1 330 6 156 2 
142 2 89 1 20 1 240 2 144 1 198 1 117 1 201 2 91 2 148 6 149 1 217 1 94 1 369 1 348 2 176 6 330 12 156 1 310 1 286 2 312 1 46 1 164 2 360 1 277 1 
240 2 312 1 201 1 171 1 148 3 5 1 348 1 176 3 330 6 308 1 156 1 
20 1 310 1 312 1 240 2 185 1 117 1 353 1 91 2 135 1 148 1 217 1 5 1 176 2 308 1 330 3 9 1 156 1 
310 1 20 1 240 5 312 2 117 1 201 2 91 2 171 1 148 5 217 1 5 2 267 1 348 2 360 1 176 5 308 2 330 10 156 3 
20 1 310 1 286 1 312 1 240 1 117 1 91 2 148 2 217 1 348 1 360 1 330 2 
142 1 20 1 310 1 286 1 240 2 312 1 117 1 201 1 91 2 148 2 217 1 164 1 348 1 176 2 360 1 330 4 156 1 
20 3 310 3 240 2 312 1 117 3 353 1 91 6 148 1 217 3 5 1 176 2 360 1 330 3 308 1 9 1 71 1 156 1 
142 2 20 4 239 1 240 9 144 3 117 4 201 5 91 8 171 2 148 16 217 4 283 1 5 2 267 1 348 5 176 15 370 1 308 2 330 31 9 1 71 1 156 5 310 4 286 2 312 4 185 1 109 1 80 1 135 1 46 1 164 2 360 1 277 3 
89 1 20 1 240 5 144 1 117 1 201 3 91 2 171 2 148 8 217 1 283 1 5 2 267 1 348 3 176 7 330 15 308 2 156 4 310 1 312 1 185 1 46 1 135 1 360 1 277 1 
142 1 89 1 20 2 239 1 240 6 144 2 117 2 201 3 91 4 171 2 148 10 217 2 283 1 5 2 96 1 267 1 348 4 176 8 308 2 330 18 156 4 310 2 286 1 312 2 185 1 135 1 46 1 360 1 277 1 
142 2 89 1 20 3 239 1 240 7 144 1 198 1 117 3 201 5 91 6 171 2 148 13 149 1 94 1 217 3 283 1 5 2 267 1 369 1 348 5 176 13 308 2 330 26 9 1 156 5 310 3 286 2 312 2 185 1 135 1 46 1 164 2 360 1 277 1 
142 2 89 1 20 3 239 1 240 9 144 1 198 1 117 3 201 4 91 6 171 2 148 14 149 1 217 3 94 1 283 1 5 2 267 1 369 1 348 5 176 10 308 2 330 24 9 1 156 5 310 3 286 2 312 4 185 1 135 1 46 1 164 1 360 1 277 1 
89 1 20 1 240 5 144 1 117 1 201 3 91 2 171 2 148 8 217 1 283 1 5 2 267 1 348 3 176 7 330 15 308 2 156 4 310 1 312 1 185 1 46 1 135 1 360 1 277 1 
142 2 89 1 20 1 240 2 144 1 198 1 117 1 201 2 91 2 148 6 149 1 217 1 94 1 369 1 348 2 176 6 330 12 156 1 310 1 286 2 312 1 46 1 164 2 360 1 277 1 
142 2 89 1 20 4 239 1 240 7 198 1 144 1 117 4 201 4 91 8 171 2 148 14 149 1 94 1 217 4 283 1 5 2 267 1 369 1 348 5 176 11 308 2 330 25 9 2 156 5 310 4 286 2 312 2 185 1 135 1 46 1 164 1 360 1 277 1 
142 3 89 1 20 4 240 6 198 1 144 1 117 4 201 2 91 8 148 9 149 1 94 1 217 4 369 1 348 3 176 7 330 16 71 1 9 2 156 3 310 4 286 3 312 3 46 1 164 2 360 1 277 1 
240 6 312 3 185 1 201 1 135 2 171 1 148 3 5 3 348 1 176 4 330 7 308 3 156 3 
142 2 89 1 20 4 240 7 198 1 144 1 117 4 201 4 91 8 171 2 148 14 149 1 94 1 217 4 283 1 5 2 267 1 369 1 348 5 176 11 308 2 330 25 71 1 9 2 156 5 310 4 286 2 312 2 185 1 135 1 46 1 164 1 360 1 277 1 
361 1 100 1 213 1 64 1 104 1 230 1 278 1 
315 1 120 1 223 1 22 1 328 1 
102 1 190 1 323 1 380 1 51 1 266 1 381 1 84 1 280 1 264 1 382 1 
258 1 361 2 102 1 163 1 104 1 352 1 230 1 280 1 12 1 213 2 190 1 380 1 51 1 266 1 123 1 381 1 192 1 382 1 
361 2 258 1 242 1 280 1 305 1 266 2 153 1 123 1 178 1 181 1 102 1 163 1 104 2 352 2 230 1 12 1 134 1 190 1 213 2 380 1 51 3 381 1 192 2 
361 2 258 1 242 1 280 1 305 1 266 2 153 1 123 1 178 1 181 1 102 1 313 1 104 2 352 2 230 1 12 1 134 1 356 1 190 2 213 2 380 2 51 3 381 2 192 2 
102 1 59 1 162 1 352 1 273 1 280 1 354 2 355 2 326 1 134 1 356 1 305 1 212 1 173 1 190 3 380 3 266 1 51 4 381 3 67 1 382 1 178 1 113 1 
102 1 59 1 162 1 352 1 280 1 354 2 355 2 326 1 134 1 356 1 305 1 212 1 190 3 380 3 266 1 51 4 381 3 67 1 112 1 382 1 178 1 113 1 
102 1 190 1 380 1 381 1 26 1 280 1 
285 1 102 2 184 1 74 1 297 1 352 1 26 1 145 1 79 1 280 3 13 1 43 1 190 7 380 6 266 2 51 3 174 1 381 7 236 1 193 1 382 2 
258 1 117 2 171 2 217 2 5 2 266 1 267 1 123 1 348 3 68 1 176 6 308 2 181 1 310 2 183 1 312 1 352 1 185 1 12 1 230 3 135 1 316 1 190 1 192 1 139 1 361 2 20 2 240 5 145 1 27 1 201 3 280 1 91 4 244 1 148 7 248 2 283 1 330 13 156 4 160 1 102 1 163 1 104 1 47 2 213 2 380 1 51 1 381 1 
259 1 59 1 166 1 261 1 241 2 24 1 1 1 326 1 206 1 6 1 67 1 162 1 228 1 355 3 354 3 42 1 289 2 212 1 339 1 190 1 380 1 51 2 381 1 256 2 112 1 86 2 382 1 113 2 
102 1 352 1 145 1 26 1 280 2 212 1 190 2 93 1 380 2 266 1 51 2 174 1 381 2 
102 1 76 1 145 1 280 1 264 1 356 1 190 4 380 4 266 1 51 1 381 4 84 1 382 1 
102 1 334 1 211 1 352 1 243 1 280 2 43 1 190 2 380 2 266 1 51 1 381 2 193 1 178 1 
252 1 102 1 190 1 364 1 380 1 97 1 175 1 381 1 280 1 382 1 
102 1 74 1 297 1 145 1 280 1 190 2 380 2 266 1 51 1 381 2 124 1 
285 1 102 2 297 1 76 1 145 1 280 2 264 1 190 5 380 4 266 2 51 3 381 5 84 1 236 1 178 1 382 1 
102 2 297 1 76 1 145 1 280 2 264 1 190 5 380 4 266 2 51 3 381 5 84 1 137 1 236 1 178 1 382 1 
258 1 361 2 102 1 104 1 313 1 352 1 230 1 280 1 12 1 213 2 190 1 380 1 51 1 266 1 123 1 381 1 192 1 382 1 
102 1 352 1 280 2 13 1 43 1 190 1 380 1 266 1 51 1 174 1 381 1 193 1 178 1 
196 1 361 1 58 1 345 1 104 1 186 1 357 1 213 1 331 1 
321 1 58 1 105 1 
357 1 121 1 58 1 186 1 230 1 
321 1 181 1 58 1 59 1 162 1 229 1 105 1 242 1 1 1 186 2 230 1 354 2 355 2 357 2 121 2 153 1 307 1 67 1 371 1 
265 1 95 1 323 1 44 1 
265 1 351 1 95 1 292 1 154 1 372 1 44 1 
152 1 154 1 141 1 
351 3 2 1 44 1 265 1 329 1 95 1 292 1 219 1 66 1 154 3 372 1 373 2 
265 1 195 1 351 2 95 1 292 1 254 1 154 2 372 1 44 1 
351 1 292 1 95 1 219 1 97 1 175 1 154 1 18 1 209 1 372 1 34 1 
265 1 351 1 95 1 292 1 219 1 154 1 372 1 
265 2 351 1 292 1 219 1 154 1 372 1 44 1 
351 2 224 1 118 1 265 1 95 1 292 2 219 1 154 2 372 2 98 1 
195 2 351 3 363 1 44 1 265 1 379 1 292 1 346 1 95 2 219 1 154 3 372 1 34 1 
195 1 252 1 351 2 129 1 44 1 265 1 247 1 95 1 292 1 97 2 219 1 175 1 154 2 209 1 372 1 
195 2 351 4 19 1 44 1 265 1 292 2 346 1 95 2 219 1 254 1 154 4 372 2 34 1 
265 1 351 1 95 1 292 1 219 1 154 1 372 1 44 1 
195 2 351 4 2 1 44 2 265 2 292 1 346 1 95 3 66 1 154 4 373 1 372 1 34 1 257 1 
195 1 351 2 21 1 227 1 366 1 44 1 265 1 95 1 292 1 219 1 154 2 372 1 
351 3 2 1 44 1 147 1 265 1 95 1 292 1 219 1 66 2 154 3 372 1 373 2 
56 2 95 2 251 1 290 1 
205 1 351 1 292 1 219 1 154 1 372 1 
265 1 195 1 351 2 379 1 95 1 292 1 219 1 154 2 372 1 44 1 
146 1 
265 1 351 1 95 1 292 1 219 1 154 1 372 1 44 1 
195 1 351 3 44 1 265 1 379 1 292 1 95 1 219 1 154 3 372 1 373 1 
95 1 346 1 34 1 257 1 
265 1 95 1 

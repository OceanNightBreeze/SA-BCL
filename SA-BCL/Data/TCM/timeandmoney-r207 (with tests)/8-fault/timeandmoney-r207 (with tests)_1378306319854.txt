#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (89,120) 224 (355,360) (355,360) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (89,120) 224 (355,360) (355,360) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (89,120) 224 (355,360) (355,360) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (89,120) 224 (355,360) (355,360) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 201 (15,63,299,378) 81 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException 201 189 (89,120) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException 201 189 (89,120) 51 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException 201 189 (89,120) 51 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 128 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (186,359) 114 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (172,309) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (172,309) (172,309) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (172,309) (172,309) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 128 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (186,359) 114 65 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 128 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 147 115 196 369 262 148 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (172,309) (172,309) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 128 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (212,315) 31 147 115 196 174 103 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 147 115 196 369 290 301 12 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 147 115 196 369 290 301 12 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 147 115 196 369 290 301 12 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 147 115 196 369 290 301 12 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 128 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (172,309) (172,309) 298 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (186,359) 114 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 128 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 147 115 196 369 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 147 115 196 174 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 147 115 196 369 262 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 147 115 196 369 160 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 128 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (172,309) (172,309) 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 128 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 201 (15,63,299,378) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 201 189 123 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 201 189 156 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 201 189 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> %
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | ASSIGN | 629 | = null
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1213 | stmt -> ;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8289 | = null
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5730 | return null
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3809 | return null
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> -1
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
355 1 89 1 360 1 58 1 90 1 235 1 335 1 165 1 125 1 224 1 34 1 
355 1 89 1 360 1 58 1 90 1 235 1 335 1 165 1 125 1 224 1 34 1 
355 1 89 1 360 1 58 1 90 1 235 1 335 1 165 1 125 1 224 1 34 1 
355 1 89 1 360 1 58 1 90 1 235 1 335 1 165 1 125 1 224 1 34 1 
58 1 236 1 235 1 335 2 217 1 299 1 366 1 125 1 319 1 34 2 81 1 201 1 
90 1 235 1 104 1 197 1 34 2 3 1 157 1 95 1 14 1 58 1 48 1 248 1 335 2 217 1 165 1 125 1 
189 1 58 2 236 1 235 1 335 2 217 1 165 1 125 2 34 2 120 1 201 1 
189 1 63 1 236 1 235 1 34 3 120 1 201 1 58 2 335 3 217 1 165 1 51 1 125 2 319 1 
189 1 63 1 236 1 235 1 34 3 120 1 201 1 58 2 335 3 217 1 165 1 51 1 125 2 319 1 
128 1 
164 1 292 2 218 1 
324 1 266 1 106 1 225 1 4 1 47 1 111 1 307 1 8 1 43 1 
99 2 23 1 206 1 186 1 136 2 346 1 266 1 114 1 269 2 62 1 
172 1 266 1 
30 1 207 1 208 1 73 1 210 1 74 1 198 1 106 1 162 1 111 1 8 1 336 1 218 1 43 1 
207 1 73 2 208 1 210 1 74 1 266 1 198 1 106 1 225 1 4 1 47 1 172 1 111 1 8 1 336 2 309 1 218 1 43 1 
73 1 272 1 7 1 336 1 339 1 
207 1 73 2 168 1 7 1 336 2 339 1 218 1 35 1 
73 1 7 1 336 1 
172 1 73 1 336 1 266 1 309 1 339 1 
218 1 
323 1 207 1 73 2 7 1 336 2 339 1 218 1 35 1 
204 1 276 1 233 1 207 1 73 5 234 2 153 1 143 1 177 2 376 2 35 1 171 1 184 1 295 1 7 2 336 5 339 2 218 1 314 1 
128 1 
205 1 324 1 106 2 225 1 4 1 47 1 111 1 307 1 8 2 138 1 43 2 
31 1 212 1 259 1 
99 1 324 1 206 1 106 1 368 1 269 1 240 1 124 1 50 1 112 1 136 1 310 1 80 1 221 1 312 1 43 1 
99 1 206 1 155 1 212 1 106 2 368 1 225 1 269 1 240 1 47 1 50 1 124 1 8 1 136 1 80 1 310 1 312 1 221 1 167 1 43 2 
4 1 47 4 162 1 324 1 205 1 279 1 155 1 8 5 195 1 303 1 106 5 225 4 167 2 43 5 
47 1 111 1 8 1 294 1 106 1 225 1 43 1 
4 1 47 3 324 1 8 3 106 3 167 1 225 3 43 3 
47 1 111 1 8 1 294 1 106 1 225 1 43 1 
205 1 106 1 225 1 4 1 47 1 111 1 8 1 138 1 43 1 
65 1 198 1 225 2 4 1 47 2 8 2 99 1 205 1 206 1 208 1 73 1 210 1 155 1 74 1 266 1 106 2 269 1 186 1 111 1 336 1 136 1 114 1 84 1 167 1 43 2 
324 1 279 1 106 2 225 1 47 1 162 1 111 1 307 1 8 2 167 1 43 2 
205 1 73 1 208 1 210 1 74 1 155 1 198 1 106 3 225 3 4 1 47 3 111 1 336 1 8 3 218 1 167 2 330 1 84 1 43 3 
205 1 106 2 212 1 225 2 259 1 4 1 47 2 8 2 167 1 43 2 
99 1 324 1 206 1 106 1 368 1 269 1 240 1 124 1 50 1 136 1 310 1 80 1 221 1 312 1 43 1 
99 1 324 1 206 1 19 1 106 1 368 1 269 1 240 1 50 1 352 1 136 1 80 1 221 1 312 1 43 1 
17 1 348 1 255 1 199 2 170 1 283 1 258 1 259 2 45 2 147 1 286 1 329 1 315 1 152 1 31 2 105 1 316 4 333 1 212 2 129 1 13 1 273 2 16 1 113 1 
210 1 106 1 225 1 47 1 111 1 8 1 219 1 43 1 
190 1 32 1 
190 1 32 1 
302 1 239 1 
302 1 239 1 
302 1 239 1 
190 1 32 1 257 1 
322 1 190 1 32 1 
86 1 190 2 32 2 302 1 372 1 239 1 
190 1 32 1 257 1 
190 1 32 1 257 1 
190 1 243 1 32 1 
190 1 243 1 32 1 
190 1 243 1 32 1 
190 1 322 1 277 1 363 1 324 1 91 1 365 1 225 2 47 2 231 1 8 2 176 1 265 1 9 1 291 1 73 1 32 1 106 2 33 1 246 1 336 1 251 1 43 2 341 1 
190 2 9 2 265 2 277 2 44 1 73 2 154 1 296 1 32 2 334 2 271 1 246 3 231 2 336 2 218 1 328 1 251 1 372 1 311 1 
95 1 248 1 187 1 
95 1 248 1 104 1 
185 1 248 3 187 2 353 1 104 1 27 1 
183 1 248 2 187 1 353 1 104 1 27 1 
248 2 187 1 353 1 104 1 27 2 
275 1 278 1 91 1 67 1 147 1 7 1 329 1 314 3 204 2 207 1 291 1 234 1 73 5 292 3 105 1 357 1 333 1 376 1 177 1 55 2 35 1 295 1 214 2 164 1 336 5 339 4 60 1 218 2 115 1 61 1 220 2 188 1 341 1 
252 1 67 3 147 3 7 6 329 3 314 8 204 6 233 1 291 4 207 1 73 9 234 2 101 1 374 1 292 9 267 1 105 3 317 1 333 3 177 2 376 2 35 1 159 1 295 1 133 5 214 6 164 3 272 5 336 9 339 7 60 2 218 5 115 3 61 1 220 6 188 2 
275 1 278 1 67 1 147 1 329 1 314 3 204 2 233 1 207 1 291 1 234 1 73 3 292 4 105 1 376 1 177 1 55 1 333 1 214 2 164 2 336 3 339 2 60 1 218 3 115 1 188 1 220 2 
275 1 278 1 67 2 147 2 329 2 314 5 204 4 233 1 207 1 291 2 234 1 73 4 101 1 292 7 374 1 105 2 376 1 177 1 55 2 333 2 159 1 214 4 164 3 336 4 60 1 339 3 218 4 115 2 220 4 188 1 
128 1 
240 1 261 1 
118 1 
240 1 368 1 312 1 
240 1 242 1 
240 1 368 1 
240 3 78 2 102 1 40 1 368 1 312 1 
87 1 53 1 54 1 105 1 316 7 333 1 199 4 268 1 94 1 56 1 273 3 97 1 16 2 71 1 113 3 288 2 28 1 
87 1 53 1 54 1 105 1 316 7 333 1 199 4 268 1 94 1 56 1 273 3 97 1 16 2 71 1 113 3 288 2 28 1 
87 1 53 1 54 1 105 1 316 7 333 1 178 1 199 4 268 1 56 1 94 1 273 3 97 1 16 2 71 1 113 3 288 2 28 1 
53 1 316 5 196 1 333 1 199 4 200 1 147 1 6 1 369 1 273 1 148 1 71 2 262 1 115 1 288 1 
87 1 17 2 199 5 283 2 45 4 94 1 96 1 97 1 71 1 288 2 53 1 152 2 54 1 105 1 316 9 333 1 268 1 129 2 318 1 56 1 134 1 273 4 16 3 113 4 
194 1 20 1 145 1 46 1 95 1 48 1 26 1 125 1 150 1 99 1 29 1 235 1 104 1 34 2 269 1 182 1 185 1 14 1 58 1 248 2 335 2 217 1 187 1 136 1 165 1 80 1 319 1 139 1 116 1 221 1 
194 1 20 1 145 1 46 1 95 1 228 1 48 1 26 1 125 1 150 1 99 1 11 1 104 1 34 3 269 1 185 1 14 1 58 1 248 2 335 3 217 1 187 1 136 1 337 1 165 1 80 1 139 1 319 2 116 1 221 1 
20 1 145 1 46 1 95 1 228 1 48 1 26 1 150 1 99 1 104 1 34 2 269 1 185 1 14 1 248 2 335 2 217 1 136 1 337 1 187 1 165 1 80 1 139 1 319 2 221 1 
253 1 343 1 368 1 70 1 26 2 149 1 125 1 150 2 99 1 206 1 11 1 34 1 269 1 240 1 58 1 216 1 335 1 136 1 80 1 165 2 139 2 221 1 340 1 
194 1 20 1 145 1 46 1 95 1 26 1 125 1 150 1 99 1 235 1 104 1 34 1 269 1 182 1 185 1 58 1 248 2 335 1 187 1 136 1 337 1 165 1 80 1 139 1 116 1 221 1 
158 1 
342 1 141 1 2 2 198 1 260 1 7 6 8 1 263 1 149 1 313 4 314 2 204 2 99 2 264 2 207 1 206 2 208 1 210 1 106 1 269 2 107 1 162 1 57 2 164 2 111 1 59 1 60 1 218 2 166 1 221 1 280 2 364 1 119 1 368 1 70 1 30 1 331 2 73 5 234 1 292 2 293 1 375 2 74 1 177 1 376 1 35 3 179 1 127 1 240 1 295 1 247 2 336 5 136 2 80 1 43 1 
30 1 141 1 323 1 208 1 73 3 210 1 74 1 119 1 2 1 198 1 106 1 35 1 260 1 107 1 162 1 111 1 7 2 336 3 8 1 166 1 313 2 43 1 
30 1 141 1 323 1 207 1 208 1 73 3 210 1 375 1 74 1 119 1 198 1 106 1 35 1 260 1 107 1 162 1 111 1 7 1 336 3 8 1 218 1 166 1 313 3 43 1 
141 1 323 1 119 1 198 1 2 1 260 1 7 2 8 1 313 3 30 1 207 1 73 3 208 1 210 1 74 1 375 1 106 1 35 1 162 1 107 1 111 1 247 1 336 3 166 1 218 1 43 1 
141 1 323 1 117 1 119 1 198 1 2 2 281 1 260 1 172 1 7 3 8 1 309 1 313 2 30 1 207 1 73 3 208 1 210 1 74 1 266 1 106 1 35 1 162 1 107 1 111 1 247 2 336 3 218 1 166 1 43 1 
141 1 342 1 198 1 2 2 260 1 7 4 8 1 313 4 314 1 204 1 264 2 207 1 208 1 210 1 106 1 162 1 107 1 57 2 111 1 164 2 166 1 218 2 280 2 119 1 30 1 73 4 234 1 331 2 292 2 74 1 375 2 293 1 177 1 376 1 127 1 35 2 295 1 247 2 336 4 43 1 
321 1 342 1 141 1 88 1 280 2 119 1 2 2 198 1 260 1 7 4 8 1 313 4 314 1 204 1 30 1 264 2 207 1 331 2 234 1 73 4 208 1 210 1 375 2 74 1 106 1 177 1 376 1 35 2 127 1 162 1 107 1 295 1 57 2 247 2 164 2 111 1 135 1 336 4 218 1 166 1 43 1 
321 1 342 1 141 1 88 1 280 2 119 1 2 2 198 1 260 1 7 4 8 1 313 4 314 1 204 1 30 1 264 2 207 1 331 2 234 1 73 4 208 1 210 1 375 2 74 1 106 1 177 1 376 1 35 2 127 1 162 1 107 1 295 1 57 2 247 2 164 2 111 1 135 1 336 4 218 1 166 1 43 1 
342 1 141 1 119 1 2 2 198 1 260 1 7 4 370 2 8 1 175 1 313 4 314 1 204 1 30 1 264 2 207 1 331 2 234 1 73 4 208 1 292 2 211 1 210 1 375 2 74 1 106 1 177 1 376 1 35 2 162 1 107 1 295 1 247 2 111 1 274 1 135 1 336 4 137 2 218 1 166 1 43 1 
321 1 342 1 141 1 88 1 280 2 119 1 198 1 2 3 281 1 260 1 7 5 8 1 313 5 314 1 204 1 30 1 264 2 207 1 331 2 234 1 73 4 208 1 210 1 74 1 375 3 376 1 177 1 106 1 35 2 127 1 295 1 162 1 107 1 57 2 164 2 111 1 247 3 135 1 336 4 218 1 166 1 43 1 
321 1 342 1 141 1 88 1 280 2 119 1 198 1 2 3 281 1 260 1 7 5 8 1 313 5 314 1 204 1 30 1 264 2 207 1 331 2 234 1 73 4 208 1 210 1 74 1 375 3 376 1 177 1 106 1 35 2 127 1 295 1 162 1 107 1 57 2 164 2 111 1 247 3 135 1 336 4 218 1 166 1 43 1 
141 1 342 1 198 1 2 2 260 1 7 4 8 1 313 4 314 1 204 1 264 2 207 1 208 1 211 1 210 1 106 1 162 1 107 1 111 1 166 1 218 1 119 1 370 2 30 1 73 4 234 1 331 2 292 2 74 1 375 2 293 1 177 1 376 1 35 2 295 1 247 2 336 4 137 2 43 1 
45 2 17 1 152 1 286 1 348 1 128 1 283 1 129 1 258 1 
17 1 152 1 31 4 103 1 348 1 196 1 316 4 333 1 199 3 212 4 283 1 258 1 129 1 200 1 45 2 147 1 6 1 37 1 273 1 174 1 115 1 
17 1 324 1 348 1 199 1 368 1 225 1 283 1 259 1 258 1 284 1 47 1 45 2 230 1 50 1 124 1 8 1 310 1 312 1 99 1 152 1 206 1 155 1 316 2 106 2 269 1 129 1 240 1 131 1 37 1 79 1 273 1 112 1 136 1 80 1 221 1 167 1 82 1 43 2 
87 4 348 3 300 2 144 1 199 10 258 3 259 7 94 1 45 6 47 1 147 2 50 2 8 1 97 1 310 2 312 2 99 3 152 3 206 1 155 1 54 1 105 3 316 20 106 3 359 2 212 7 268 1 269 3 56 1 273 10 16 4 113 8 115 2 167 1 221 2 17 3 324 2 283 3 225 1 368 2 284 1 285 1 124 2 288 1 329 2 31 7 333 3 129 3 240 2 181 2 37 1 186 2 337 1 136 3 80 2 250 2 83 1 82 1 43 3 
222 1 223 1 17 2 0 1 346 2 348 2 199 1 225 1 283 2 368 2 258 2 284 1 22 1 47 1 45 4 226 1 286 1 70 1 8 1 149 1 29 1 99 8 152 2 206 2 316 2 106 1 269 8 129 2 240 3 161 1 110 1 273 1 337 1 136 7 80 2 167 1 221 2 82 1 43 1 
17 1 348 1 93 1 199 1 283 1 225 1 259 1 258 1 4 1 47 1 45 2 147 1 8 1 329 1 152 1 205 1 31 1 316 3 105 1 212 1 106 1 333 1 129 1 37 1 273 2 16 1 113 1 115 1 43 1 
87 1 17 1 152 1 31 1 348 1 316 2 255 1 212 1 333 1 199 2 283 1 259 1 258 1 129 1 45 2 147 1 286 1 113 1 
17 1 152 1 31 1 348 1 316 2 105 1 212 1 170 1 283 1 259 1 258 1 129 1 45 2 286 1 273 2 16 1 113 1 329 1 
87 1 17 1 348 1 199 2 283 1 258 1 259 2 45 2 147 1 286 1 329 1 152 1 31 2 316 4 105 1 333 1 212 2 129 1 273 2 16 1 113 2 115 1 
87 1 222 1 17 1 152 1 31 1 348 1 316 2 255 1 212 1 333 1 199 2 283 1 259 1 258 1 129 1 45 2 147 1 113 1 
222 1 17 1 152 1 31 1 348 1 316 2 105 1 212 1 170 1 283 1 259 1 258 1 129 1 45 2 273 2 329 1 
222 1 17 1 152 1 31 2 348 1 105 1 316 4 212 2 333 1 199 2 283 1 259 2 258 1 129 1 45 2 147 1 273 2 115 1 329 1 
87 1 17 1 152 1 31 2 348 1 105 1 316 4 212 2 333 1 199 2 283 1 259 2 258 1 129 1 45 2 147 1 273 2 16 1 113 2 115 1 329 1 
17 1 324 1 348 1 199 1 368 1 283 1 258 1 284 1 45 2 50 1 124 1 310 1 312 1 99 1 152 1 206 1 316 2 106 1 269 1 129 1 240 1 186 1 273 1 136 1 80 1 82 1 221 1 43 1 
17 1 324 1 19 1 348 1 199 1 368 1 283 1 258 1 284 1 45 2 50 1 352 1 312 1 99 1 152 1 206 1 316 2 106 1 269 1 129 1 240 1 273 1 136 1 80 1 249 1 82 1 221 1 43 1 
87 1 17 1 348 1 199 2 283 1 258 1 259 2 45 2 147 1 329 1 152 1 31 2 316 4 105 1 333 1 212 2 129 1 37 1 273 2 16 1 113 2 115 1 
87 1 17 1 348 1 199 2 368 1 283 1 259 2 258 1 45 2 147 1 50 1 124 1 310 1 329 1 312 1 99 1 29 1 152 1 31 2 105 1 316 4 212 2 333 1 359 1 106 1 269 1 129 1 240 1 186 1 273 2 136 1 16 1 80 1 113 2 115 1 221 1 43 1 
87 1 17 1 348 1 199 2 283 1 225 1 258 1 259 1 4 1 47 1 45 2 147 1 8 1 329 1 373 1 152 1 205 1 31 1 105 1 316 3 106 1 333 1 212 1 129 1 37 1 273 1 113 1 115 1 43 1 
85 1 17 2 152 2 290 1 12 1 196 1 316 6 301 1 333 1 199 4 283 2 129 2 200 1 45 4 147 1 6 1 369 1 273 2 134 1 203 1 287 1 115 1 
362 1 85 1 87 2 17 3 1 1 301 2 199 14 367 1 283 3 200 2 45 6 6 2 147 3 369 2 306 1 287 4 329 2 290 2 152 3 12 1 356 1 75 1 105 2 316 26 333 3 129 3 160 1 318 2 273 12 134 1 338 1 16 2 113 4 115 3 
85 1 17 2 152 2 290 1 12 1 196 1 316 6 301 1 333 1 199 4 283 2 129 2 200 1 45 4 147 1 6 1 369 1 273 2 134 1 203 1 287 1 115 1 
85 1 17 2 152 2 290 1 12 1 196 1 316 6 301 1 333 1 199 4 283 2 129 2 200 1 45 4 147 1 6 1 369 1 273 2 134 1 203 1 287 1 115 1 
85 1 17 1 196 1 301 1 199 7 283 1 200 1 45 2 94 1 6 1 147 1 369 1 97 1 287 1 288 1 290 1 152 1 12 1 54 1 105 1 316 11 333 2 268 1 129 1 56 1 134 1 273 4 16 1 113 1 115 1 
190 1 265 1 9 1 277 1 154 1 231 1 296 1 32 1 358 1 372 1 
322 1 33 1 
190 1 265 1 9 1 277 1 72 1 231 1 32 1 320 1 304 1 
173 1 257 1 
86 1 243 1 25 1 
190 1 9 1 265 1 277 1 73 1 154 1 296 1 32 1 334 1 271 1 246 2 231 1 336 1 218 1 328 1 251 1 372 1 311 1 
190 1 9 1 265 1 277 1 73 1 154 1 296 1 32 1 334 1 271 1 246 2 231 1 336 1 218 1 328 1 251 1 372 1 311 1 
190 1 9 1 265 1 277 1 73 1 154 1 296 1 32 1 334 1 271 1 246 2 231 1 336 1 218 1 328 1 251 1 372 1 311 1 
86 1 173 1 257 1 
86 1 173 1 257 1 
243 1 25 1 
86 1 243 1 25 1 
176 1 365 1 
190 1 322 1 277 1 363 1 324 1 91 1 365 1 225 2 47 2 231 1 8 2 328 1 176 1 265 1 9 1 291 1 73 1 209 1 32 1 106 2 33 1 334 1 246 1 336 1 339 1 43 2 341 1 
17 1 0 1 346 2 348 1 199 1 368 1 283 1 258 1 284 1 45 2 308 1 8 2 126 1 99 2 152 1 316 2 106 2 269 2 129 1 240 1 161 1 37 1 244 1 213 1 361 1 273 1 136 2 80 1 221 1 82 1 43 2 
99 2 29 1 151 1 194 1 104 1 269 2 145 1 46 1 95 1 185 1 163 1 248 2 187 1 337 1 136 2 80 1 232 1 221 1 150 1 
99 1 151 1 194 1 104 1 269 1 145 1 46 1 95 1 185 1 248 2 327 1 187 1 337 1 136 1 80 1 221 1 150 1 
99 1 206 1 343 1 368 1 269 1 240 1 122 1 70 1 136 1 80 1 232 1 149 1 221 1 150 1 
99 1 151 1 194 1 104 1 269 1 145 1 46 1 95 1 185 1 163 1 248 2 187 1 337 1 136 1 80 1 232 1 221 1 150 1 
377 1 
128 1 
280 1 7 1 314 1 204 1 207 1 234 1 73 1 292 1 376 1 177 1 127 1 35 1 295 1 57 1 164 1 336 1 218 2 
192 2 193 1 345 1 143 1 300 2 5 1 147 2 305 2 7 5 261 3 312 3 314 9 99 3 204 8 207 2 206 1 102 1 105 2 269 3 214 6 164 6 59 1 60 2 218 8 115 2 221 3 220 6 276 1 368 3 67 2 68 2 227 1 329 2 29 1 234 4 73 5 292 12 74 2 237 2 177 4 376 4 333 2 76 1 180 2 35 3 240 10 242 2 295 4 78 2 245 2 336 5 136 3 80 4 41 2 
344 1 1 1 367 1 200 1 68 1 67 3 6 1 147 2 369 1 49 1 7 1 306 1 329 2 314 8 204 5 207 2 73 1 234 2 292 6 75 1 105 2 376 2 177 2 333 2 35 1 160 1 295 2 214 5 164 3 336 1 59 1 60 1 218 5 115 2 220 5 
204 1 321 1 73 1 234 1 266 1 54 1 298 1 105 1 333 1 177 1 376 1 268 1 67 2 295 1 172 1 336 1 309 1 97 1 314 2 
204 1 276 1 207 1 234 1 143 1 177 1 376 1 295 1 218 1 314 1 
204 5 292 10 300 1 105 2 333 2 68 1 67 2 147 2 214 5 164 5 218 5 115 2 220 5 329 2 314 5 
207 1 73 1 7 1 336 1 218 1 35 1 
364 1 193 1 368 1 5 2 7 4 70 1 263 1 149 1 314 2 99 4 204 2 233 1 206 2 234 2 73 3 376 2 177 2 35 2 269 4 240 1 36 1 132 1 295 1 336 3 136 4 60 2 59 2 80 1 221 1 
99 1 206 1 186 1 136 1 266 1 114 1 269 1 
204 2 207 2 234 1 292 4 177 1 376 1 295 1 214 2 164 2 60 1 59 1 218 4 288 1 220 2 314 1 
265 1 231 1 77 1 
176 1 265 1 229 1 231 1 296 1 
265 1 231 1 77 1 
265 1 231 1 77 1 
270 1 265 1 231 1 
270 1 265 1 231 1 
270 1 265 1 231 1 
265 1 231 1 
190 1 32 1 
87 1 17 2 152 2 54 1 105 1 316 8 333 1 199 4 283 2 268 1 129 2 318 1 45 4 94 1 56 1 273 4 97 1 16 2 113 3 288 1 
128 1 
17 1 152 1 191 1 105 1 316 4 333 1 199 2 283 1 129 1 45 2 147 1 273 2 16 1 113 1 115 1 329 1 
147 1 6 1 369 1 273 1 196 1 316 4 115 1 333 1 199 3 200 1 
147 1 6 1 273 1 174 1 196 1 316 4 115 1 333 1 199 3 200 1 
273 1 316 1 200 1 
6 1 316 1 199 1 
87 2 17 1 152 1 191 1 300 1 316 6 105 1 333 1 199 3 283 1 129 1 45 2 147 1 273 3 16 1 113 3 115 1 329 1 
87 1 17 1 1 1 199 6 367 1 283 1 200 1 45 2 6 1 147 2 369 1 306 1 329 2 152 1 75 1 316 12 105 2 333 2 160 1 129 1 273 6 134 1 16 1 113 2 115 2 
87 1 54 1 316 6 105 1 333 1 199 3 268 1 273 3 97 1 16 1 113 2 
87 1 17 1 152 1 66 1 316 3 199 1 268 1 283 1 129 1 318 1 56 1 45 2 94 1 273 2 97 1 16 1 113 2 
87 2 17 1 152 1 298 1 54 1 316 10 105 2 199 5 333 2 283 1 268 2 129 1 45 2 134 1 273 5 97 2 16 3 113 5 
87 1 17 1 152 1 316 2 333 1 199 2 283 1 129 1 45 2 147 1 134 1 113 1 
87 1 17 1 152 1 105 1 316 4 333 1 199 2 283 1 129 1 45 2 147 1 273 2 134 1 16 1 113 2 115 1 329 1 
87 1 17 3 152 3 66 1 316 3 199 1 283 3 268 1 129 3 318 1 45 6 273 2 134 1 203 1 97 1 16 1 113 2 
87 2 17 4 191 1 196 1 199 13 283 4 200 3 94 1 45 8 6 3 147 3 326 1 369 1 203 1 97 1 262 1 288 1 329 2 152 4 100 1 54 1 316 24 105 3 333 4 268 1 129 4 318 1 56 1 273 11 134 1 16 3 113 5 115 3 
17 1 199 4 283 1 200 1 45 2 94 1 6 1 369 1 97 1 288 1 152 1 54 1 105 1 316 8 333 1 268 1 160 1 129 1 56 1 273 4 134 1 16 2 113 2 
17 2 152 2 191 1 196 1 316 4 333 1 199 3 283 2 129 2 160 1 200 1 45 4 147 1 6 1 369 1 134 1 273 1 115 1 
87 1 17 3 191 1 1 1 199 9 367 1 283 3 200 1 94 1 45 6 6 1 147 2 369 1 306 1 97 1 288 1 329 2 152 3 75 1 54 1 316 19 105 3 333 3 268 1 160 1 129 3 318 1 56 1 273 10 134 1 16 4 113 5 115 2 
87 2 17 3 191 1 1 1 199 10 367 1 283 3 200 1 94 1 45 6 6 1 147 2 369 1 306 1 97 1 288 1 329 1 152 3 75 1 54 1 316 17 105 2 333 3 268 1 160 1 129 3 318 1 56 1 273 7 134 1 16 2 113 4 115 2 
17 1 199 4 283 1 200 1 45 2 94 1 6 1 369 1 97 1 288 1 152 1 54 1 105 1 316 8 333 1 268 1 160 1 129 1 56 1 273 4 134 1 16 2 113 2 
87 1 17 1 1 1 199 6 367 1 283 1 200 1 45 2 6 1 147 2 369 1 306 1 329 2 152 1 75 1 316 12 105 2 333 2 160 1 129 1 273 6 134 1 16 1 113 2 115 2 
87 2 17 4 191 1 1 1 199 10 367 1 283 4 200 1 94 1 45 8 6 1 147 2 369 1 306 1 97 1 288 1 329 1 152 4 75 1 54 1 316 18 105 2 333 3 268 1 160 1 129 4 318 2 56 1 273 8 134 1 16 3 113 5 115 2 
87 2 17 3 1 1 199 7 367 1 283 3 200 1 45 6 6 1 147 2 369 1 203 1 306 1 329 1 152 3 75 1 316 11 105 1 333 2 160 1 129 3 318 1 273 4 134 1 113 2 115 2 
87 3 54 1 105 1 316 7 333 1 199 3 268 3 94 1 56 2 273 4 97 3 16 3 113 6 
87 1 17 4 1 1 199 10 367 1 283 4 200 1 94 1 45 8 6 1 147 2 369 1 203 1 306 1 97 1 288 1 329 1 152 4 75 1 54 1 316 18 105 2 333 3 268 1 160 1 129 4 318 2 56 1 273 8 134 1 16 3 113 4 115 2 
162 1 324 1 279 1 8 1 106 1 282 1 43 1 
354 1 10 1 324 1 279 1 238 1 106 1 282 1 121 1 162 1 351 1 8 1 43 1 
99 1 206 1 136 1 128 1 269 1 
99 1 324 1 206 1 106 2 368 1 225 1 269 1 240 1 47 1 50 1 124 1 8 1 136 1 80 1 312 1 167 1 221 1 43 2 
324 1 225 2 368 2 5 1 47 1 124 1 50 1 307 1 8 2 312 2 99 1 208 1 210 1 106 2 269 1 240 3 242 1 245 1 111 2 136 1 80 1 221 1 167 1 43 2 
324 1 19 1 225 2 368 2 5 1 47 1 50 1 307 1 8 2 312 2 99 1 208 1 210 1 106 2 269 1 240 3 242 1 245 1 111 2 136 1 80 1 221 1 167 1 43 2 
99 3 206 1 207 1 73 2 74 1 92 1 368 1 21 1 269 3 242 1 240 4 5 1 78 1 245 1 7 1 336 2 136 3 261 1 218 1 80 1 52 1 312 1 221 1 
99 3 206 1 207 1 73 2 74 1 92 1 368 1 180 1 269 3 242 1 240 4 5 1 78 1 245 1 7 1 336 2 136 3 261 1 218 1 80 1 312 1 221 1 
99 1 22 1 136 1 80 1 221 1 269 1 
29 1 99 7 223 1 206 2 102 1 346 1 368 2 269 7 22 1 240 3 161 1 146 1 226 1 110 1 349 1 337 1 136 6 80 3 312 1 221 2 98 1 
348 2 199 3 259 1 258 2 45 4 47 1 94 1 50 1 8 1 97 1 310 1 312 1 99 1 152 2 54 1 316 6 105 1 359 1 106 2 212 1 268 1 269 1 56 1 361 1 273 3 16 2 113 2 167 1 221 1 17 2 324 2 283 2 225 1 368 1 124 1 288 1 29 1 31 1 333 1 129 2 240 1 37 1 186 1 136 1 80 1 250 1 43 2 
276 1 192 1 193 1 143 1 305 1 7 2 261 1 314 1 204 1 99 1 207 1 206 1 234 2 73 3 74 1 237 1 376 2 177 2 180 1 35 1 269 1 240 2 295 2 78 1 336 3 136 1 339 1 218 1 
29 1 99 2 102 1 76 1 368 1 269 2 22 1 240 2 78 1 136 2 80 2 312 1 221 1 
99 4 29 1 206 1 92 1 368 1 269 4 240 1 350 1 70 1 136 4 80 1 149 1 221 1 
99 2 140 1 332 1 368 1 269 2 240 1 5 1 146 1 136 2 80 2 83 1 312 1 221 1 98 1 
99 1 46 1 95 1 206 1 248 1 136 1 104 1 80 1 221 1 269 1 
240 1 99 2 29 1 161 1 337 1 136 2 80 1 126 1 221 1 368 1 269 2 
99 5 29 1 206 1 368 2 269 5 240 3 5 1 161 1 226 1 110 1 350 1 70 1 136 4 80 2 149 1 221 2 
99 5 29 1 206 1 64 1 368 2 269 5 240 3 5 1 161 1 226 1 350 1 70 1 136 4 80 2 149 1 221 2 
99 1 324 1 206 1 19 1 106 2 368 1 225 1 269 1 240 1 47 1 50 1 8 1 136 1 80 1 312 1 167 1 221 1 43 2 
99 1 102 1 368 1 269 1 240 1 5 1 146 1 349 1 136 1 80 2 312 1 221 1 98 1 
24 1 130 1 324 1 39 1 42 1 
207 1 208 1 73 2 210 1 74 1 266 1 297 1 142 1 198 1 130 1 24 1 172 1 108 1 111 1 39 1 336 2 309 1 339 1 218 1 42 1 84 1 
106 1 24 1 130 1 244 1 213 1 39 1 308 1 8 1 43 1 
130 1 142 1 297 1 
128 1 
14 1 58 1 48 1 335 1 217 1 125 1 34 1 
26 1 335 1 165 1 
69 1 14 1 58 1 48 1 215 1 235 1 335 3 217 1 347 1 197 2 125 1 34 3 
14 1 58 1 48 1 335 2 217 1 366 1 125 1 319 1 34 2 
58 1 236 1 235 1 335 1 217 1 299 1 125 1 34 1 201 1 
58 1 48 1 235 1 335 1 217 1 125 1 34 1 
14 1 58 1 48 2 235 1 335 1 125 1 34 1 
241 1 38 1 58 2 48 1 235 1 335 2 217 1 125 2 371 1 34 2 
189 1 289 1 58 1 123 1 236 1 235 1 335 2 217 1 125 1 319 1 34 2 201 1 
254 1 235 1 104 1 34 2 185 1 95 1 14 1 58 1 48 1 248 2 335 2 217 1 187 1 125 1 319 1 
189 1 58 1 236 1 235 1 335 2 217 1 156 1 366 1 125 1 319 1 34 2 201 1 
14 1 58 1 48 1 235 1 335 1 217 1 125 1 34 1 
189 1 58 1 236 2 335 2 217 1 125 1 34 2 319 1 201 1 
63 1 235 1 34 2 378 1 14 1 58 1 48 1 15 1 335 2 217 1 125 1 319 1 
169 1 235 1 197 2 34 3 69 2 14 1 58 1 215 1 48 1 335 3 217 1 125 1 
109 2 325 1 217 2 256 1 
202 1 58 1 235 1 335 1 125 1 34 1 
289 1 14 1 58 1 48 1 235 1 335 2 217 1 125 1 319 1 34 2 
18 1 
14 1 58 1 48 1 235 1 335 1 217 1 125 1 34 1 
289 1 235 1 197 1 34 3 14 1 58 1 48 1 335 3 217 1 125 1 319 1 
189 1 335 1 217 1 34 1 319 1 201 1 
48 1 217 1 

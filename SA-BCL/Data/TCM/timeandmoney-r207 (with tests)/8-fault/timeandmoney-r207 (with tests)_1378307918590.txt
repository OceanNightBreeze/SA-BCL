#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 69 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 279 111 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5772 | 0 -> -1
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 2
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 4646 | return null
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification; | RETURN | 587 | return null
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3533 | stmt -> ;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 11341 | stmt -> ;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10911 | return null
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
30 1 137 2 4 1 201 6 261 1 5 1 144 2 203 1 99 1 57 5 13 1 187 2 127 9 232 1 36 1 234 1 207 4 273 2 358 1 63 3 24 1 212 1 280 1 213 2 305 2 45 9 47 1 158 2 
30 1 137 2 4 1 201 6 261 1 5 1 144 2 203 1 99 1 57 5 13 1 187 2 127 9 232 1 36 1 234 1 207 4 273 2 358 1 63 3 24 1 212 1 213 2 280 1 45 9 305 2 47 1 158 2 
30 1 137 2 4 1 201 7 261 1 5 1 144 2 203 1 99 1 57 6 13 1 187 2 127 10 232 1 36 1 234 1 207 5 273 2 358 1 63 4 24 1 212 1 213 2 280 1 45 10 305 2 47 1 158 2 
137 2 4 1 201 4 261 1 5 1 144 2 203 1 99 1 57 4 13 1 187 2 127 7 232 1 36 1 234 1 207 3 273 2 358 1 63 2 24 1 212 1 213 2 280 1 45 7 305 1 47 1 158 2 
30 1 137 1 207 2 201 3 5 1 273 1 358 1 63 1 57 3 24 1 13 1 280 1 213 1 187 1 45 4 305 2 158 1 127 4 
73 1 137 1 261 1 273 1 358 1 144 1 303 1 345 1 57 1 212 1 13 1 280 1 45 2 187 1 127 2 158 1 
234 1 137 2 207 1 201 1 273 2 358 1 144 1 63 1 57 2 13 1 280 1 45 3 127 3 
30 1 137 2 4 1 201 7 5 1 144 1 57 5 13 1 164 1 187 1 127 9 232 1 234 1 238 1 207 4 273 2 358 1 63 3 24 1 280 1 213 1 45 9 305 2 158 1 
30 1 137 2 4 1 201 7 5 1 144 1 57 5 13 1 164 1 187 1 127 9 232 1 234 1 238 1 207 4 273 2 358 1 63 3 24 1 280 1 213 1 45 9 305 2 158 1 
169 1 229 1 271 1 
317 1 168 2 229 1 
216 2 311 2 121 2 53 1 253 2 132 2 125 2 100 1 
216 3 0 2 252 2 308 2 53 1 349 1 253 2 200 1 285 1 311 2 121 2 147 1 125 2 100 1 58 1 101 1 126 2 35 1 84 1 107 1 108 1 272 1 37 1 323 1 17 1 109 1 342 2 62 1 344 1 93 1 132 3 134 1 94 1 347 1 27 1 366 1 95 1 
216 1 311 1 231 1 121 1 53 1 253 1 11 1 132 1 125 1 338 1 
216 1 229 1 271 1 118 1 239 1 18 1 143 1 202 1 131 1 193 1 121 1 32 1 132 1 338 1 
216 1 229 1 271 1 253 1 118 2 239 1 143 1 202 1 131 1 311 1 121 1 32 2 125 1 132 1 338 1 
123 1 32 1 118 1 130 1 119 1 
229 1 271 1 123 1 245 1 32 2 118 2 119 1 259 1 
123 1 32 1 118 1 
216 1 231 1 53 1 118 1 253 1 119 1 8 1 311 1 121 1 32 1 11 1 125 1 132 1 338 1 
229 1 
229 1 170 1 271 1 123 1 32 2 118 2 119 1 259 1 
229 1 29 1 271 1 72 1 118 5 357 1 119 2 259 1 218 1 192 1 32 5 123 2 195 2 248 2 33 1 156 2 196 1 214 1 316 1 
169 1 100 1 
216 2 129 1 138 1 253 1 311 1 121 2 132 2 125 1 100 2 
189 1 243 1 256 1 
216 1 84 1 252 1 308 1 37 1 349 1 323 1 109 1 342 1 344 1 132 1 100 1 157 1 134 1 94 1 366 1 
311 1 216 3 121 3 253 3 132 3 125 3 100 1 19 1 
216 1 231 1 121 1 253 1 132 1 125 1 338 1 
216 1 311 1 129 1 121 1 138 1 253 1 132 1 125 1 338 1 
216 4 0 1 252 1 308 1 53 1 349 1 253 3 118 1 285 1 143 1 202 1 311 2 221 1 121 3 32 1 147 1 125 3 100 1 126 2 338 1 35 1 84 1 107 1 129 1 237 1 37 1 272 1 323 1 239 1 17 1 109 1 19 1 342 1 131 1 62 1 344 1 211 1 132 4 134 1 94 1 347 1 27 1 366 1 95 1 
216 2 193 1 235 1 121 2 253 1 132 2 125 1 100 1 19 1 
216 3 229 1 129 1 237 1 118 1 253 3 239 1 324 1 19 2 143 1 202 1 131 1 311 1 221 1 121 3 32 1 125 3 132 3 338 1 
216 2 189 1 129 1 253 2 256 1 19 1 311 1 121 2 125 2 132 2 
216 1 84 1 344 1 252 1 308 1 349 1 37 1 323 1 132 1 100 1 109 1 342 1 134 1 94 1 366 1 
216 1 84 1 252 1 308 1 159 1 349 1 323 1 109 1 342 1 274 1 344 1 132 1 100 1 134 1 94 1 
0 4 217 1 256 2 80 1 102 1 126 2 128 1 35 1 189 2 107 1 320 1 108 2 38 1 17 1 174 1 62 1 243 2 175 1 277 1 347 1 27 1 95 2 
216 1 43 1 121 1 253 1 132 1 125 1 131 1 338 1 
216 2 84 1 252 1 308 1 349 1 37 1 253 1 323 1 256 1 109 1 19 1 342 1 221 1 344 1 121 1 125 1 132 2 134 1 94 1 366 1 
216 5 129 1 235 1 253 4 19 2 311 1 221 1 193 1 121 5 278 1 125 4 132 5 314 1 100 1 
43 1 216 2 231 1 121 2 253 2 132 2 125 2 338 1 
90 1 70 1 
90 1 70 1 
9 1 103 1 
9 1 103 1 
9 1 103 1 
90 1 208 1 70 1 
90 1 208 1 70 1 
90 1 110 1 70 1 
90 2 15 1 65 1 9 1 103 1 70 2 
90 1 208 1 70 1 
228 1 90 1 70 1 
228 1 90 1 70 1 
228 1 90 1 70 1 
15 1 229 1 298 2 87 1 74 1 199 1 118 2 350 2 206 1 287 2 90 2 359 1 264 2 182 1 32 2 112 2 133 3 185 1 70 2 
48 1 216 2 298 1 118 1 253 2 40 1 350 1 287 1 219 1 61 1 90 1 110 1 121 2 182 1 32 1 112 1 362 1 132 2 133 1 125 2 100 1 282 1 59 1 70 1 
213 1 187 1 158 1 
345 1 187 1 158 1 
86 1 352 1 198 1 345 1 213 2 158 3 
86 1 352 1 345 1 213 1 158 2 22 1 
86 1 352 2 345 1 213 1 158 2 
48 1 217 1 72 1 329 2 118 5 257 1 119 4 259 1 120 1 80 1 123 1 32 5 10 1 59 1 104 2 316 2 317 1 168 3 229 2 320 1 271 1 192 3 175 1 248 1 195 1 156 1 363 1 177 1 282 1 250 1 283 2 116 1 
32 1 118 1 119 1 288 1 
216 1 48 1 217 1 29 1 53 1 329 2 253 1 118 3 119 2 8 1 120 1 311 1 80 1 121 1 32 3 11 1 125 1 104 1 316 2 338 1 317 2 168 4 231 1 229 3 271 1 320 1 192 3 175 1 132 1 248 1 195 1 156 1 363 1 177 1 250 1 116 1 283 2 
48 2 216 1 217 1 284 1 329 3 53 1 8 1 11 1 104 2 338 1 148 1 231 1 229 3 16 1 192 3 195 1 248 1 156 1 250 1 116 1 29 1 118 4 253 1 119 3 120 2 311 1 80 2 121 1 32 4 125 1 316 4 168 5 317 2 320 2 271 1 175 1 132 1 363 1 177 1 283 3 
169 1 344 1 96 1 
344 1 279 1 
41 1 
344 1 323 1 
84 1 270 1 344 3 96 2 323 1 266 1 
84 1 344 1 323 1 
344 1 172 1 
269 1 0 7 217 1 328 1 233 1 77 1 108 4 341 1 240 1 88 1 242 1 360 1 80 1 205 2 295 3 337 2 95 3 
269 1 0 7 217 1 328 1 233 1 77 1 108 4 341 1 240 1 88 1 242 1 360 1 80 1 205 2 295 3 337 2 95 3 
269 1 50 1 0 7 217 1 328 1 233 1 77 1 108 4 240 1 341 1 88 1 242 1 360 1 80 1 205 2 295 3 337 2 95 3 
0 8 217 1 320 1 233 2 321 1 77 1 108 4 171 1 88 1 120 1 175 1 80 1 205 1 295 1 336 2 69 1 25 1 365 1 95 4 
269 1 0 9 217 1 328 1 233 1 107 2 77 1 108 5 240 1 341 1 17 2 88 1 20 1 360 1 80 1 205 2 246 1 247 1 295 4 337 3 126 4 27 2 347 2 95 4 
252 1 308 1 137 1 198 1 201 1 331 1 144 1 146 1 56 1 57 1 294 1 13 1 187 1 127 2 296 1 106 1 109 1 342 1 273 1 358 1 325 1 275 1 276 1 113 1 345 1 213 1 280 1 45 2 94 1 158 2 
252 1 308 1 75 1 198 1 137 1 201 2 331 1 144 1 56 1 57 1 294 1 13 1 187 1 127 3 296 1 106 1 109 1 342 1 273 1 358 1 325 1 275 1 276 1 345 1 68 1 213 1 281 1 45 3 94 1 158 2 
252 1 308 1 75 1 198 1 201 2 331 1 144 1 56 1 57 1 294 1 13 1 187 1 127 2 106 1 109 1 342 1 358 1 325 1 276 1 345 1 68 1 213 1 45 2 94 1 158 2 
117 1 252 1 308 1 137 1 323 1 310 1 140 1 109 1 180 1 342 1 331 2 273 1 144 2 344 1 325 2 56 2 281 1 165 1 45 1 134 1 94 1 127 1 251 1 
252 1 308 1 137 1 198 1 331 1 144 1 146 1 56 1 294 1 187 1 127 1 296 1 106 1 109 1 342 1 273 1 325 1 275 1 276 1 345 1 68 1 213 1 280 1 45 1 94 1 158 2 
265 1 
135 2 216 1 178 1 143 1 290 1 293 1 188 4 226 2 338 1 339 1 229 2 297 2 105 1 190 1 239 1 109 1 342 2 18 1 192 2 343 1 152 1 344 1 193 1 195 1 248 1 156 1 250 1 117 1 252 2 72 1 308 2 348 1 76 2 118 5 259 3 202 1 121 1 204 1 123 6 32 5 124 2 351 2 165 1 316 2 168 2 317 2 319 1 271 1 322 1 323 1 131 1 326 2 132 1 134 2 94 1 
216 1 135 1 348 1 118 3 178 1 259 1 143 1 202 1 121 1 32 3 123 2 293 1 188 2 338 1 105 1 170 1 322 1 239 1 18 1 131 1 193 1 132 1 
216 1 348 1 118 3 178 1 259 1 143 1 202 1 121 1 123 1 32 3 124 1 293 1 188 3 338 1 105 1 229 1 170 1 271 1 322 1 239 1 18 1 131 1 193 1 132 1 
216 1 135 1 348 1 76 1 118 3 178 1 259 1 143 1 202 1 121 1 32 3 123 2 124 1 293 1 188 3 338 1 170 1 105 1 229 1 271 1 322 1 239 1 18 1 131 1 193 1 132 1 
135 3 216 2 1 1 53 1 178 1 143 1 8 1 11 1 293 1 186 1 188 3 338 2 226 1 231 1 229 1 105 1 297 1 239 1 18 1 343 1 192 1 193 1 195 1 248 1 156 1 306 1 307 1 348 1 72 1 76 3 253 1 118 4 259 2 202 1 311 1 121 2 32 4 123 5 204 1 351 1 124 1 125 1 316 1 317 1 170 1 271 1 322 1 131 1 92 1 326 1 132 2 
216 1 135 2 178 1 143 1 293 1 188 4 338 1 226 2 105 1 297 2 229 2 239 1 18 1 343 1 192 1 152 1 193 1 195 1 248 1 156 1 72 1 348 1 76 2 118 4 259 2 202 1 121 1 32 4 204 1 123 4 351 2 124 2 316 1 317 2 168 2 271 1 322 1 131 1 326 2 132 1 
216 2 135 1 53 1 178 1 143 1 8 1 11 1 293 1 186 1 188 3 338 2 226 1 231 1 105 1 297 1 229 1 239 1 18 1 343 1 192 1 193 1 195 1 248 1 156 1 307 1 72 1 348 1 76 1 253 1 118 3 259 1 202 1 311 1 121 2 32 3 204 1 123 2 351 1 124 1 125 1 316 1 317 1 271 1 322 1 131 1 92 1 326 1 132 2 
216 2 135 1 53 1 178 1 143 1 8 1 11 1 293 1 186 1 188 3 338 2 226 1 231 1 105 1 297 1 229 1 239 1 18 1 343 1 192 1 193 1 195 1 248 1 156 1 307 1 72 1 348 1 76 1 253 1 118 3 259 1 202 1 311 1 121 2 32 3 204 1 123 2 351 1 124 1 125 1 316 1 317 1 271 1 322 1 131 1 92 1 326 1 132 2 
216 2 135 1 53 1 178 1 143 1 8 1 333 1 11 1 293 1 188 3 338 2 226 1 231 1 105 1 229 1 239 1 18 1 192 1 151 1 193 1 154 1 195 1 248 1 156 1 26 1 307 1 72 1 348 1 76 1 253 1 118 3 259 1 202 1 311 1 121 2 32 3 204 1 123 2 351 1 124 1 125 1 316 1 168 1 271 1 322 1 131 1 42 1 132 2 
135 2 216 2 1 1 53 1 178 1 143 1 8 1 11 1 293 1 186 1 188 4 338 2 226 1 231 1 105 1 297 1 229 1 239 1 18 1 343 1 192 1 193 1 195 1 248 1 156 1 307 1 348 1 72 1 76 2 253 1 118 3 259 1 202 1 311 1 121 2 123 3 32 3 204 1 124 2 351 1 125 1 316 1 317 1 271 1 322 1 131 1 92 1 326 1 132 2 
135 2 216 2 1 1 53 1 178 1 143 1 8 1 11 1 293 1 186 1 188 4 338 2 226 1 231 1 105 1 297 1 229 1 239 1 18 1 343 1 192 1 193 1 195 1 248 1 156 1 307 1 348 1 72 1 76 2 253 1 118 3 259 1 202 1 311 1 121 2 123 3 32 3 204 1 124 2 351 1 125 1 316 1 317 1 271 1 322 1 131 1 92 1 326 1 132 2 
216 1 135 2 178 1 143 1 293 1 188 4 338 1 226 2 105 1 229 1 239 1 18 1 192 1 151 2 152 1 193 1 195 1 248 1 156 1 26 1 72 1 348 1 76 2 118 4 259 2 202 1 121 1 32 4 204 1 123 4 351 2 124 2 316 1 168 2 271 1 322 1 131 1 42 2 132 1 
0 6 217 1 328 1 256 1 80 1 205 1 100 2 295 2 337 2 126 2 128 1 35 1 269 1 189 1 169 1 107 1 108 3 240 1 341 1 17 1 62 1 243 1 360 1 347 1 27 1 95 3 
0 14 327 1 217 1 256 11 200 1 120 2 80 2 147 1 100 1 295 1 336 3 167 1 315 1 126 4 35 2 189 4 230 1 107 2 320 2 321 1 108 8 171 1 17 2 88 1 62 1 243 11 175 1 114 1 25 3 347 2 27 2 95 6 
216 2 0 2 252 1 308 1 349 1 253 1 200 1 221 1 121 1 125 1 147 1 100 1 353 1 126 2 268 1 35 1 84 1 189 1 107 1 37 1 108 1 323 1 109 1 17 1 342 1 19 1 62 1 344 1 132 2 157 1 114 1 134 1 249 1 94 1 366 1 27 1 347 1 95 1 
216 2 0 7 217 1 285 1 142 1 221 1 292 1 147 1 295 1 337 1 189 3 107 2 108 3 17 2 109 1 342 1 19 1 62 2 243 3 344 1 114 1 347 2 27 2 252 1 28 1 308 1 349 1 253 1 256 3 260 1 262 1 120 1 80 1 121 1 125 1 126 4 35 2 84 1 320 1 37 1 323 1 175 1 132 2 134 1 94 1 366 1 95 4 
216 1 0 2 117 1 252 7 308 8 253 1 200 1 55 1 223 1 121 1 125 1 147 1 184 1 165 1 126 4 128 1 35 2 107 2 108 1 323 2 109 2 17 2 19 1 342 8 241 1 62 2 344 3 66 1 91 1 93 2 113 1 132 1 68 1 134 2 46 1 94 2 347 2 27 2 95 1 
216 1 0 3 217 1 253 1 256 1 120 1 311 1 80 1 121 1 125 1 126 2 35 1 189 1 129 1 107 1 320 1 108 1 17 1 62 1 300 1 243 1 175 1 132 1 114 1 347 1 27 1 95 2 
35 1 189 1 0 2 107 1 320 1 108 2 256 1 17 1 88 1 62 1 243 1 80 1 277 1 295 1 126 2 27 1 347 1 128 1 
35 1 189 1 0 2 217 1 107 1 256 1 17 1 174 1 62 1 243 1 175 1 126 2 27 1 347 1 128 1 95 2 
0 4 217 1 256 2 120 1 80 1 126 2 128 1 35 1 189 2 320 1 107 1 108 2 17 1 62 1 243 2 175 1 347 1 27 1 95 2 
35 1 189 1 0 2 107 1 320 1 108 2 256 1 17 1 88 1 62 1 243 1 80 1 277 1 295 1 46 1 126 2 27 1 347 1 
35 1 189 1 0 2 217 1 107 1 256 1 17 1 174 1 62 1 243 1 175 1 46 1 126 2 27 1 347 1 95 2 
0 4 217 1 256 2 120 1 80 1 295 1 126 2 35 1 189 2 320 1 107 1 108 2 17 1 88 1 62 1 243 2 175 1 46 1 347 1 27 1 95 2 
35 1 189 2 0 4 217 1 107 1 320 1 108 2 256 2 17 1 120 1 62 1 243 2 175 1 80 1 126 2 27 1 347 1 95 2 
216 1 0 2 252 1 308 1 349 1 200 1 285 1 147 1 100 1 126 2 35 1 84 1 107 1 108 1 37 1 323 1 109 1 17 1 342 1 62 1 344 1 132 1 134 1 94 1 366 1 27 1 347 1 95 1 
216 1 0 2 252 1 308 1 159 1 349 1 200 1 97 1 147 1 100 1 126 2 35 1 84 1 107 1 108 1 323 1 109 1 17 1 342 1 62 1 274 1 344 1 132 1 134 1 94 1 27 1 347 1 95 1 
0 4 217 1 256 2 120 1 80 1 126 2 35 1 189 2 320 1 107 1 108 2 17 1 62 1 243 2 175 1 114 1 347 1 27 1 95 2 
216 1 0 4 217 1 252 1 308 1 349 1 256 2 285 1 262 1 120 1 80 1 126 2 35 1 189 2 84 1 320 1 107 1 108 2 37 1 323 1 109 1 17 1 342 1 62 1 243 2 175 1 344 1 113 1 132 1 94 1 366 1 27 1 347 1 95 2 
216 1 0 3 217 1 253 1 256 1 120 1 311 1 80 1 121 1 125 1 295 1 126 2 35 1 189 1 129 1 107 1 320 1 108 2 17 1 88 1 62 1 243 1 175 1 153 1 132 1 114 1 347 1 27 1 95 1 
0 41 217 5 328 1 54 1 286 1 291 1 295 6 336 4 337 2 14 1 60 2 107 3 108 20 341 1 240 1 17 3 20 1 247 1 67 1 25 3 27 3 347 3 31 1 160 4 120 4 162 1 80 5 205 1 313 1 83 1 354 1 126 6 269 1 318 1 320 4 321 1 356 1 171 3 89 1 88 4 175 4 360 1 95 21 
0 38 217 4 328 1 54 1 286 1 291 1 295 5 336 4 337 2 14 1 60 2 107 4 108 20 341 1 240 1 17 4 20 1 247 2 67 1 25 3 27 4 347 4 31 1 160 4 120 4 162 1 80 5 205 1 313 1 83 1 354 1 126 8 269 1 318 1 320 4 321 1 356 1 171 3 89 1 88 3 175 3 360 1 95 18 
0 37 217 5 328 1 31 1 160 4 286 1 120 4 162 1 80 5 205 1 291 1 313 1 83 1 295 4 336 3 337 2 354 1 126 4 14 1 269 1 60 1 318 1 107 2 320 4 321 1 108 18 356 1 171 2 240 1 341 1 17 2 88 2 20 1 360 1 175 4 247 1 67 1 25 2 347 2 27 2 95 19 
0 13 217 2 54 1 31 1 160 1 120 2 162 1 80 2 336 2 295 1 354 1 126 4 14 1 60 1 107 2 320 2 321 1 108 6 171 1 17 2 209 1 20 1 88 1 175 2 25 1 347 2 27 2 95 7 
0 26 217 2 31 2 160 4 286 1 120 3 162 1 80 3 291 1 313 1 83 1 295 3 336 2 337 1 354 1 126 6 14 1 60 2 318 1 107 3 320 3 108 14 356 1 171 2 17 3 88 2 20 1 175 2 247 2 67 1 25 2 347 3 27 3 95 12 
216 2 0 2 252 2 308 2 330 1 200 1 7 1 223 1 121 2 122 1 147 1 126 2 35 1 107 1 236 1 108 1 323 1 109 1 17 1 342 2 62 1 344 1 66 1 176 1 93 2 132 2 114 1 94 1 27 1 347 1 95 1 
252 2 106 1 308 2 198 1 309 1 299 1 109 1 342 2 302 1 275 1 56 1 345 1 113 1 294 1 68 1 213 1 187 1 94 1 158 2 
252 1 106 1 308 1 198 1 309 1 258 1 109 1 342 1 275 1 56 1 345 1 294 1 68 1 213 1 187 1 94 1 158 2 
117 1 252 1 308 1 323 1 299 1 140 1 109 1 150 1 342 1 344 1 56 1 134 1 165 1 94 1 
252 1 106 1 308 1 198 1 309 1 299 1 109 1 342 1 302 1 275 1 56 1 345 1 294 1 68 1 213 1 187 1 94 1 158 2 
98 1 
169 1 229 1 271 1 357 1 33 1 316 1 192 1 
72 1 118 1 259 1 123 1 32 1 316 1 317 1 168 1 297 1 229 2 271 1 192 1 343 1 326 1 248 1 195 1 156 1 
84 1 270 1 252 1 72 1 308 1 323 1 109 2 342 1 263 1 344 1 111 1 279 1 195 1 248 1 156 1 134 1 94 1 
217 2 72 2 136 1 329 5 118 1 259 1 286 1 120 2 80 2 291 1 32 1 123 1 313 1 336 1 316 5 168 6 317 3 318 1 229 5 320 2 271 2 356 1 171 1 190 1 191 1 21 2 192 8 301 1 175 2 248 2 195 2 156 2 25 1 250 1 283 5 
216 1 217 1 328 1 72 1 136 1 53 1 118 1 253 1 8 1 311 1 80 2 121 1 32 1 11 1 125 1 316 2 338 1 269 1 231 1 39 1 21 2 192 2 360 1 92 1 132 1 248 1 195 1 156 1 
229 1 72 1 271 1 357 1 192 1 195 1 248 1 33 1 156 1 316 1 
168 4 317 2 229 2 217 1 320 1 329 2 120 1 192 2 175 1 80 1 316 2 283 2 
229 1 271 1 32 1 123 1 118 1 259 1 
51 2 117 1 29 1 252 4 72 1 308 4 118 3 78 1 259 2 123 4 32 3 82 1 165 1 316 2 339 1 319 1 323 1 190 2 109 1 173 1 342 4 192 2 344 1 248 2 195 2 156 2 134 2 94 1 250 2 
216 3 0 1 252 1 308 1 53 1 349 1 253 2 285 1 311 2 121 2 147 1 125 2 100 1 126 2 35 1 84 1 107 1 272 1 37 1 323 1 17 1 109 1 342 1 62 1 344 1 132 3 134 1 94 1 347 1 366 1 27 1 95 1 
317 2 168 4 229 4 72 1 271 2 329 2 190 1 192 1 205 1 195 1 248 1 156 1 316 2 250 1 283 2 
298 1 161 1 287 1 
298 1 161 1 287 1 
298 1 2 1 185 1 287 1 61 1 
298 1 161 1 287 1 
298 1 163 1 287 1 
298 1 163 1 287 1 
298 1 163 1 287 1 
298 1 287 1 
90 1 70 1 
0 12 217 1 286 1 120 2 80 2 291 1 313 1 336 1 295 2 337 1 126 6 318 1 107 3 320 2 108 7 356 1 171 1 17 3 88 1 20 1 175 1 247 2 25 1 347 3 27 3 95 5 
0 15 217 1 286 1 120 3 80 3 291 1 313 1 183 1 336 2 295 3 337 1 126 8 318 1 107 4 320 3 321 1 108 9 356 1 171 1 17 4 20 1 88 2 175 1 247 2 25 1 347 4 27 4 95 6 
0 19 217 3 328 1 286 1 120 2 80 3 205 1 291 1 313 1 183 1 336 1 295 4 337 3 126 6 269 1 318 1 107 3 320 2 108 9 356 1 171 1 240 1 341 1 17 3 88 1 20 1 360 1 175 2 247 1 25 1 347 3 27 3 95 10 
0 12 217 1 286 1 120 2 80 2 291 1 313 1 183 1 336 1 295 2 337 1 126 8 318 1 107 4 320 2 108 7 356 1 171 1 17 4 88 1 20 1 175 1 247 2 25 1 347 4 27 4 95 5 
0 12 217 1 286 1 120 2 80 2 291 1 313 1 336 1 295 2 337 1 126 6 318 1 107 3 320 2 108 7 356 1 171 1 17 3 88 1 20 1 175 1 247 2 25 1 347 3 27 3 95 5 
0 13 217 2 286 1 120 2 80 2 291 1 313 1 336 1 295 2 337 1 126 4 318 1 107 2 320 2 108 6 356 1 171 1 17 2 88 1 20 1 175 2 247 1 25 1 347 2 27 2 95 7 
0 18 217 2 328 1 286 1 120 2 80 3 205 1 291 1 313 1 183 1 336 1 295 5 337 3 126 8 269 1 318 1 107 4 320 2 108 10 356 1 171 1 240 1 341 1 17 4 88 2 20 1 360 1 175 1 247 2 25 1 347 4 27 4 95 8 
0 16 217 2 54 1 286 1 120 3 80 3 291 1 313 1 336 1 295 4 337 1 126 8 318 1 107 4 320 3 108 9 356 1 171 1 17 4 88 3 20 1 175 2 247 2 25 1 347 4 27 4 95 7 
269 1 0 7 217 1 328 3 108 3 341 1 240 2 88 3 360 3 80 1 295 6 337 3 95 4 
0 18 217 2 328 1 54 1 286 1 120 2 80 3 205 1 291 1 313 1 336 1 295 4 337 3 126 8 269 1 318 1 107 4 320 2 108 10 356 1 171 1 240 1 341 1 17 4 88 1 20 1 360 1 175 1 247 2 25 1 347 4 27 4 95 8 
269 1 0 8 217 1 107 2 328 1 108 4 341 1 240 1 17 2 88 1 360 1 80 1 205 1 247 1 295 3 337 2 126 4 27 2 347 2 95 4 
269 1 169 1 0 6 217 1 328 1 108 3 341 1 240 1 360 1 80 1 205 1 295 2 337 2 95 3 
0 4 217 1 107 1 320 1 108 2 17 1 88 1 120 1 175 1 80 1 183 1 295 1 126 2 27 1 347 1 95 2 
0 7 217 1 320 1 321 1 108 3 171 1 88 1 120 1 175 1 80 1 336 2 295 1 25 1 95 4 
0 25 217 5 327 1 328 2 120 2 80 5 205 1 336 2 295 8 337 4 315 1 126 2 269 2 320 2 107 1 321 1 108 13 39 1 240 1 341 1 17 1 88 4 360 2 175 2 247 1 25 2 27 1 347 1 95 12 
0 1 336 1 95 1 
0 1 108 1 25 1 
0 6 28 1 217 1 320 1 108 3 88 1 120 1 175 1 80 1 295 2 337 1 95 3 
0 13 217 2 286 1 120 2 80 2 291 1 313 1 336 1 295 2 337 1 126 4 318 1 107 2 320 2 108 6 356 1 171 1 17 2 88 1 20 1 175 2 247 1 25 1 347 2 27 2 95 7 
269 1 0 6 217 1 328 1 108 3 88 1 360 1 80 1 295 2 337 1 95 3 
0 3 328 1 107 1 108 1 240 1 341 1 17 1 88 1 79 1 360 1 247 1 295 2 337 1 126 2 27 1 347 1 95 2 
269 1 0 10 217 2 107 1 328 2 108 5 39 1 17 1 20 1 88 2 360 2 80 2 295 5 337 3 126 2 347 1 27 1 95 5 
0 2 107 1 320 1 108 2 17 1 20 1 88 1 80 1 295 1 126 2 27 1 347 1 
0 4 217 1 107 1 320 1 108 2 17 1 20 1 120 1 175 1 80 1 126 2 27 1 347 1 95 2 
0 3 107 3 328 1 54 1 108 1 17 3 20 1 88 1 79 1 360 1 247 1 295 2 337 1 126 6 27 3 347 3 95 2 
0 12 217 2 328 1 54 1 80 2 183 1 295 4 336 1 337 2 126 6 269 1 107 3 108 6 171 1 39 1 341 1 240 1 17 3 88 2 20 1 360 1 25 1 365 1 347 3 27 3 95 6 
216 1 193 1 121 1 235 1 132 1 100 1 71 1 
216 1 267 1 193 1 145 1 121 1 235 1 81 1 197 1 132 1 100 1 71 1 34 1 
117 1 169 1 344 1 252 1 308 1 323 1 109 1 165 1 342 1 134 1 94 1 
216 2 84 1 252 1 308 1 349 1 253 1 323 1 109 1 19 1 342 1 344 1 121 1 125 1 132 2 100 1 134 1 94 1 366 1 
216 2 84 2 51 1 252 1 308 1 349 1 253 1 323 2 172 1 109 1 19 1 342 1 131 1 202 1 344 3 121 2 244 1 125 2 132 2 100 1 94 1 366 1 338 1 
216 2 84 2 51 1 252 2 308 2 349 1 253 1 323 2 172 1 109 1 19 1 342 2 131 1 202 1 274 1 344 3 121 2 244 1 125 2 132 2 100 1 12 1 94 1 338 1 
84 1 51 1 229 1 252 3 271 1 308 3 96 1 118 2 323 1 239 1 172 1 109 1 342 3 332 1 64 1 344 4 244 1 32 2 123 1 279 1 12 1 134 1 94 1 
84 1 51 1 229 1 252 3 271 1 308 3 96 1 118 2 323 1 239 1 172 1 109 1 342 3 344 4 244 1 32 2 123 1 279 1 12 1 134 1 115 1 94 1 
252 1 308 1 184 1 109 1 342 1 94 1 
270 1 84 1 252 6 308 7 149 1 323 2 109 3 342 7 55 1 241 1 6 1 344 3 223 1 91 1 93 1 113 1 184 1 68 1 346 1 134 2 94 2 
216 2 0 6 217 1 328 1 285 1 100 2 295 2 337 2 189 1 107 2 108 3 341 1 240 1 17 2 109 1 342 1 19 1 62 2 243 1 344 1 113 1 114 1 347 2 27 2 252 1 308 1 349 1 253 1 256 1 260 1 262 1 80 1 121 1 205 1 125 1 126 4 35 2 269 1 84 1 37 1 323 1 360 1 176 1 132 2 94 1 366 1 95 3 
252 1 72 2 308 1 96 1 118 3 255 1 119 1 259 1 181 1 32 3 123 2 33 1 316 1 229 1 271 1 239 1 357 1 173 1 342 1 192 1 344 2 194 1 279 1 248 2 195 2 156 2 134 1 115 1 
270 1 84 1 252 1 96 1 308 1 323 1 109 2 342 1 41 1 263 1 344 1 184 1 94 1 
117 1 252 4 308 4 323 1 109 1 342 4 344 1 113 1 12 1 304 1 134 1 165 1 94 1 
49 1 51 1 84 1 252 2 308 2 323 1 109 2 342 2 6 1 220 1 344 1 23 1 346 1 94 1 
106 1 252 1 308 1 345 1 109 1 187 1 342 1 134 1 94 1 158 1 
252 2 308 2 323 1 109 1 342 2 344 1 223 1 122 1 113 1 68 1 94 1 
51 1 117 1 252 4 308 5 323 2 109 2 342 5 241 1 55 1 344 3 223 1 113 1 304 1 165 1 134 1 94 2 
51 1 117 1 252 4 308 5 323 2 109 2 342 5 55 1 312 1 344 3 223 1 113 1 304 1 165 1 134 1 94 2 
216 2 84 1 252 1 308 1 349 1 253 1 323 1 109 1 19 1 342 1 274 1 344 1 121 1 125 1 132 2 100 1 134 1 94 1 
51 1 270 1 84 1 252 1 308 1 149 1 323 1 109 2 342 1 6 1 344 1 346 1 94 1 
216 1 121 1 236 1 132 1 334 1 330 1 166 1 7 1 210 1 
225 1 166 1 289 1 
139 1 100 1 334 1 166 1 210 1 
229 1 271 1 237 1 118 2 254 1 139 2 239 1 119 1 143 1 131 1 202 1 289 1 210 2 32 2 100 1 334 2 225 1 166 1 338 1 
169 1 57 1 13 1 358 1 
137 1 57 1 13 1 45 1 127 1 273 1 358 1 
325 1 127 1 144 1 
137 1 179 1 261 2 273 1 358 1 361 1 57 1 280 1 13 1 45 3 127 3 227 1 
137 1 57 1 201 1 13 1 305 1 45 2 127 2 273 1 358 1 
137 1 207 1 273 1 57 1 24 1 280 1 213 1 45 1 187 1 127 1 158 1 
137 1 57 1 280 1 45 1 127 1 273 1 358 1 
137 1 13 1 280 1 45 1 127 1 273 1 358 2 
52 1 137 2 155 1 57 1 335 1 280 1 45 2 127 2 273 2 358 1 
232 1 137 1 4 1 207 1 201 2 273 1 358 1 63 1 57 2 13 1 280 1 45 3 127 3 
137 1 198 1 201 1 273 1 358 1 345 1 57 1 13 1 280 1 213 1 45 2 187 1 158 2 127 2 215 1 
30 1 137 2 207 1 201 2 273 2 358 1 63 1 57 2 13 1 280 1 45 4 305 1 127 4 
137 1 57 1 13 1 280 1 45 1 127 1 273 1 358 1 
137 1 179 1 207 1 201 2 261 1 273 1 358 2 63 1 361 1 57 3 13 2 45 4 364 1 127 4 
85 1 137 1 238 1 3 1 201 1 273 1 358 1 57 1 280 1 13 1 45 2 127 2 
137 1 179 2 261 2 273 1 358 1 222 1 361 1 57 1 280 1 13 1 45 3 127 3 
340 1 44 1 57 2 355 2 
137 1 280 1 141 1 45 1 127 1 273 1 
137 1 57 1 4 1 201 1 13 1 280 1 45 2 127 2 273 1 358 1 
224 1 
137 1 57 1 13 1 280 1 45 1 127 1 273 1 358 1 
137 1 4 1 57 1 201 1 13 1 261 1 280 1 45 3 127 3 273 1 358 1 
57 1 207 1 364 1 63 1 
57 1 358 1 

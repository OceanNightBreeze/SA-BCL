#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (51,79) (51,79) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (231,259) 2 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (155,193) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (77,110,151) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (155,193) (155,193) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 127 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 247 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (1,10,350) (80,132,338) (80,132,338) (80,132,338) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (1,10,350) (80,132,338) (80,132,338) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (1,10,350) (80,132,338) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (1,10,350) (80,132,338) (80,132,338) (80,132,338) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (155,193) (155,193) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (155,193) (155,193) 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (155,193) (155,193) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 127 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 58 140 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (231,259) (231,259) (99,131) 326 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 345 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (231,259) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 286 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (231,259) (231,259) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 249 213 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 249 213 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 249 213 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 249 213 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 249 213 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (1,10,350) (1,10,350) (1,10,350) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (1,10,350) (1,10,350) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (1,10,350) (1,10,350) (1,10,350) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (155,193) (155,193) 35 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (231,259) 2 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 5 354 3 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 5 354 3 12 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 114 (163,172) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 114 (163,172) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 114 (70,86) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 114 (70,86) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 102 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 38 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1501 | = null
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2440 | return null
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 3884 | return null
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | CONSTANT | 5361 | 0 -> 1
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3693 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | RETURN | 2431 | return null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
214 2 327 2 92 2 66 1 181 1 333 2 275 1 199 2 313 9 145 2 278 2 166 1 48 1 120 9 280 6 341 1 228 4 301 3 82 1 154 5 212 1 59 1 265 1 191 1 108 1 87 1 27 1 174 1 
214 2 327 2 92 2 66 1 181 1 333 2 199 2 275 1 313 9 145 2 166 1 278 2 48 1 120 9 280 6 341 1 228 4 301 3 82 1 154 5 212 1 59 1 265 1 191 1 108 1 87 1 27 1 174 1 
214 2 327 2 92 2 66 1 181 1 333 2 199 2 275 1 313 10 145 2 166 1 278 2 48 1 120 10 280 7 341 1 228 5 301 4 82 1 154 6 212 1 59 1 265 1 191 1 108 1 87 1 27 1 174 1 
214 2 327 2 92 2 66 1 181 1 333 2 199 2 275 1 313 7 145 2 166 1 278 1 120 7 280 4 341 1 228 3 301 2 82 1 154 4 212 1 59 1 265 1 191 1 108 1 87 1 27 1 174 1 
214 1 327 1 92 1 228 2 301 1 181 1 199 1 154 3 313 4 145 1 59 1 278 2 108 1 265 1 48 1 120 4 280 3 27 1 
313 1 327 1 92 1 79 1 42 1 66 1 120 1 181 1 51 1 333 1 
327 2 92 2 228 1 301 1 181 1 333 1 154 2 313 3 59 1 120 3 280 1 341 1 27 1 
214 1 327 2 92 2 181 1 333 1 199 1 313 9 145 1 166 1 278 2 280 7 120 9 48 1 341 1 149 1 228 4 301 3 82 1 154 5 59 1 108 1 265 1 27 1 270 1 
214 1 327 2 92 2 181 1 333 1 199 1 313 9 145 1 166 1 278 2 280 7 120 9 48 1 341 1 149 1 228 4 301 3 82 1 154 5 59 1 108 1 265 1 27 1 270 1 
282 1 112 1 127 1 
282 1 162 1 253 2 
119 2 73 1 159 2 
227 2 2 1 231 1 260 1 246 2 119 1 339 2 266 1 41 1 95 1 73 1 159 1 
119 1 73 1 159 1 193 1 
282 1 77 1 243 1 319 1 116 1 322 1 151 1 5 1 23 1 288 1 110 1 89 1 112 1 13 1 
77 1 119 1 159 1 
235 1 292 1 81 1 151 1 89 1 
282 1 235 1 316 1 81 1 151 2 89 2 112 1 64 1 
235 1 151 1 89 1 
155 1 119 1 73 1 81 1 151 1 159 1 89 1 193 1 
282 1 
282 1 235 1 316 1 81 1 151 2 63 1 89 2 112 1 
282 1 117 1 320 1 303 1 81 2 312 1 151 5 332 2 299 1 183 1 235 2 24 2 316 1 50 1 173 1 89 5 112 1 185 1 271 2 
127 1 
0 1 243 1 319 1 17 1 322 1 198 1 119 1 288 1 157 1 159 1 
227 1 76 1 119 1 339 1 321 1 41 1 246 1 
76 1 0 1 179 1 243 1 98 1 319 1 17 1 321 2 322 1 5 1 119 4 288 1 354 1 159 1 
119 1 
119 3 321 1 159 1 
119 1 
0 1 119 1 157 1 159 1 
76 1 0 1 119 2 321 1 159 1 
243 1 319 1 17 1 321 1 322 1 5 1 119 1 288 1 354 1 
76 1 119 1 321 1 
0 1 119 1 159 1 
227 1 339 1 41 1 246 1 
227 1 339 1 41 1 246 1 
144 1 336 2 242 1 229 1 61 1 245 1 304 1 211 1 
119 1 44 1 
143 1 148 1 
143 1 148 1 
217 1 344 1 
217 1 344 1 
217 1 344 1 
143 1 57 1 148 1 
143 1 160 1 148 1 
143 2 217 1 279 1 261 1 148 2 344 1 
143 1 57 1 148 1 
143 1 57 1 148 1 
143 1 121 1 148 1 
143 1 121 1 148 1 
143 1 121 1 148 1 
160 1 101 1 180 1 18 1 136 1 151 1 103 1 142 1 143 1 324 1 251 1 119 2 164 1 109 1 88 1 8 1 207 1 89 1 148 1 
282 1 187 1 274 1 101 3 136 2 261 1 151 2 143 2 142 1 85 1 314 1 251 2 39 1 109 2 169 2 88 2 309 1 148 2 89 2 
214 1 145 1 199 1 
42 1 
42 1 
42 1 
42 1 
216 1 117 3 65 1 197 1 180 1 162 1 138 1 332 1 312 1 298 2 222 2 316 1 253 3 50 2 282 2 318 1 16 1 257 1 258 1 81 4 151 5 103 1 235 1 324 1 24 1 268 1 353 1 239 2 355 1 89 5 112 1 271 1 
91 1 328 1 117 8 65 3 197 2 162 3 138 3 312 1 332 2 298 6 299 1 316 1 226 1 253 9 50 6 97 1 282 5 318 1 348 5 257 2 258 3 81 7 151 9 103 4 235 6 129 1 24 2 353 3 239 6 292 5 62 1 355 3 89 9 112 1 271 2 
216 1 117 3 65 1 197 1 162 2 138 1 332 1 298 2 299 1 222 1 50 2 253 4 282 3 16 1 257 1 258 1 81 2 151 3 103 1 24 1 353 1 239 2 89 3 355 1 112 1 271 1 
91 1 216 1 328 1 117 5 65 2 197 1 162 3 138 2 332 1 298 4 299 1 222 2 253 7 50 4 282 4 16 1 257 1 258 2 81 3 151 4 103 2 129 1 24 1 353 2 239 4 89 4 355 2 112 1 271 1 
218 1 135 1 127 1 
135 1 147 1 
346 1 
32 1 135 1 240 1 
135 1 225 1 
32 1 135 1 
32 1 218 2 135 3 302 1 190 1 240 1 
195 2 175 7 170 1 65 1 123 1 138 1 43 1 182 1 37 1 202 1 236 1 107 1 352 2 238 4 192 1 111 3 53 3 
195 2 175 7 170 1 65 1 123 1 138 1 43 1 182 1 37 1 202 1 236 1 107 1 352 2 238 4 192 1 111 3 53 3 
195 2 175 7 170 1 65 1 123 1 138 1 43 1 182 1 37 1 128 1 202 1 236 1 107 1 352 2 238 4 192 1 111 3 53 3 
195 1 175 20 230 1 65 3 123 2 329 1 67 1 138 3 258 3 182 1 247 1 126 1 156 1 287 3 168 1 352 1 238 10 353 3 111 4 192 3 355 3 133 4 53 10 
175 11 195 3 242 1 65 2 138 2 43 1 182 1 45 1 144 1 336 2 202 1 53 5 170 1 123 1 35 1 304 1 211 1 37 1 156 1 107 1 267 1 352 1 238 6 111 5 192 2 
227 1 90 1 15 1 327 1 92 1 1 1 42 1 134 1 181 1 80 1 246 1 333 1 335 1 84 1 153 1 313 1 325 1 338 1 106 1 339 1 120 1 132 1 
227 1 90 1 15 1 327 1 92 1 1 1 56 1 42 1 134 1 80 1 349 1 246 1 333 1 335 1 84 1 153 1 313 2 104 1 325 1 339 1 280 1 120 2 132 1 
227 1 90 1 15 1 1 1 56 1 42 1 134 1 80 1 246 1 333 1 335 1 153 1 313 1 104 1 325 1 339 1 280 1 120 1 
90 2 227 1 15 1 32 1 327 1 115 1 92 1 135 1 134 2 349 1 246 1 333 2 323 1 153 2 313 1 201 1 325 1 339 1 120 1 25 1 41 1 307 1 74 1 
227 1 90 1 15 1 327 1 92 1 1 1 42 1 134 1 181 1 80 1 246 1 333 1 335 1 84 1 153 1 313 1 104 1 325 1 338 1 339 1 120 1 132 1 
215 1 
176 1 135 1 312 1 5 1 47 1 224 1 316 3 50 2 13 1 282 2 227 2 54 1 15 1 319 1 100 1 322 1 151 5 323 1 235 6 325 1 60 1 24 1 23 1 288 1 26 1 110 1 112 1 243 1 117 2 116 1 197 1 162 2 332 1 246 2 297 2 250 4 118 2 339 2 340 2 206 2 253 2 74 1 77 1 32 1 254 1 210 1 124 2 305 1 262 2 264 1 351 1 41 2 89 5 310 2 271 1 
243 1 116 1 5 1 250 2 47 1 316 1 13 1 77 1 254 1 319 1 100 1 322 1 151 3 235 2 351 1 23 1 288 1 110 1 26 1 89 3 63 1 310 1 
243 1 116 1 297 1 5 1 250 3 47 1 316 1 13 1 77 1 282 1 254 1 319 1 100 1 322 1 151 3 235 1 351 1 23 1 288 1 110 1 26 1 89 3 63 1 112 1 
243 1 116 1 297 1 5 1 250 3 47 1 316 1 206 1 13 1 77 1 282 1 254 1 319 1 100 1 322 1 151 3 235 2 351 1 23 1 288 1 110 1 26 1 63 1 89 3 310 1 112 1 
93 1 312 1 94 1 5 1 47 1 316 3 50 1 13 1 52 1 282 1 54 1 100 1 319 1 322 1 151 5 155 1 235 7 288 1 23 1 24 1 26 1 110 1 159 1 63 1 193 1 112 1 243 1 116 1 117 1 162 2 332 1 297 2 250 4 118 2 119 1 165 1 340 2 206 4 73 1 77 1 254 1 210 1 124 2 262 2 351 1 308 1 89 5 310 4 271 1 
312 1 5 1 47 1 316 2 224 1 50 1 13 1 54 1 282 2 100 1 319 1 322 1 151 4 235 4 288 1 23 1 24 1 26 1 110 1 112 1 243 1 116 1 117 1 162 2 332 1 297 2 250 4 118 2 340 2 206 2 253 2 77 1 254 1 210 1 124 2 262 2 351 1 89 4 310 2 271 1 
243 1 93 1 117 1 116 1 162 2 312 1 332 1 297 2 5 1 250 4 118 2 47 1 165 1 340 2 316 2 206 2 50 1 13 1 52 1 282 1 54 1 77 1 254 1 319 1 100 1 210 1 124 2 322 1 151 4 262 2 235 4 351 1 23 1 288 1 24 1 110 1 26 1 89 4 112 1 310 2 271 1 
243 1 93 1 117 1 116 1 162 2 312 1 332 1 297 2 5 1 250 4 118 2 47 1 165 1 340 2 316 2 206 2 50 1 13 1 52 1 282 1 54 1 77 1 254 1 319 1 100 1 210 1 124 2 322 1 151 4 262 2 235 4 351 1 23 1 288 1 24 1 110 1 26 1 89 4 112 1 310 2 271 1 
272 2 243 1 117 1 116 1 312 1 332 1 297 2 5 1 250 4 31 1 47 1 165 1 316 2 206 2 253 2 50 1 13 1 282 1 77 1 254 1 319 1 100 1 210 1 232 2 124 2 19 1 322 1 151 4 262 2 152 1 235 4 351 1 23 1 288 1 24 1 110 1 26 1 89 4 112 1 310 2 271 1 
93 1 312 1 5 1 47 1 316 2 50 1 13 1 52 1 54 1 282 1 100 1 319 1 322 1 151 4 155 1 235 5 288 1 23 1 24 1 26 1 110 1 159 1 193 1 112 1 243 1 116 1 117 1 162 2 332 1 297 3 250 5 118 2 119 1 165 1 340 2 206 3 73 1 77 1 254 1 210 1 124 2 262 2 351 1 308 1 89 4 310 3 271 1 
93 1 312 1 5 1 47 1 316 2 50 1 13 1 52 1 54 1 282 1 100 1 319 1 322 1 151 4 155 1 235 5 288 1 23 1 24 1 26 1 110 1 159 1 193 1 112 1 243 1 116 1 117 1 162 2 332 1 297 3 250 5 118 2 119 1 165 1 340 2 206 3 73 1 77 1 254 1 210 1 124 2 262 2 351 1 308 1 89 4 310 3 271 1 
272 2 312 1 5 1 47 1 316 2 224 1 50 1 13 1 282 1 100 1 319 1 232 2 19 1 322 1 151 4 235 4 288 1 23 1 24 1 26 1 110 1 112 1 243 1 116 1 117 1 332 1 297 2 250 4 206 2 253 2 77 1 254 1 210 1 124 2 262 2 351 1 89 4 310 2 271 1 
175 2 195 1 242 1 229 1 170 1 138 1 43 1 245 1 211 1 304 1 127 1 37 1 336 2 144 1 202 1 107 1 352 1 61 1 238 2 111 1 
175 2 242 1 245 1 211 1 304 1 140 1 306 1 287 1 336 2 144 1 58 1 61 1 238 1 133 1 53 1 
175 2 76 1 242 1 33 1 321 1 245 1 211 1 304 1 248 1 306 1 336 2 144 1 200 1 119 1 61 1 238 1 96 1 53 1 
175 1 227 1 76 1 242 1 99 1 231 1 321 1 259 1 245 1 211 1 304 1 246 1 248 1 306 1 336 2 144 1 119 1 339 1 61 1 326 1 41 1 53 1 
175 1 227 1 345 1 242 1 245 1 211 1 304 1 246 1 336 2 144 1 200 1 339 1 71 1 61 1 238 1 41 1 
175 2 0 1 242 1 65 1 138 1 245 1 144 1 336 2 119 1 53 1 258 1 304 1 211 1 306 1 237 1 61 1 238 1 353 1 159 1 355 1 
175 1 242 1 229 1 138 1 245 1 258 1 211 1 304 1 336 2 144 1 252 1 61 1 238 1 
175 1 242 1 229 1 65 1 245 1 211 1 304 1 29 1 336 2 144 1 61 1 353 1 53 1 
175 2 242 1 229 1 65 1 138 1 245 1 258 1 211 1 304 1 336 2 144 1 61 1 238 1 353 1 355 1 53 1 
175 1 242 1 138 1 245 1 258 1 211 1 304 1 336 2 144 1 252 1 71 1 61 1 238 1 
175 1 242 1 65 1 245 1 211 1 304 1 29 1 336 2 144 1 71 1 61 1 353 1 53 1 
175 2 242 1 65 1 138 1 245 1 258 1 211 1 304 1 336 2 144 1 71 1 61 1 238 1 353 1 355 1 53 1 
175 2 242 1 65 1 138 1 245 1 258 1 211 1 304 1 336 2 144 1 61 1 238 1 353 1 355 1 53 1 
227 1 339 1 231 1 41 1 246 1 
227 1 339 1 41 1 286 1 246 1 
175 2 242 1 65 1 138 1 245 1 258 1 211 1 304 1 306 1 336 2 144 1 61 1 238 1 353 1 355 1 53 1 
227 1 106 1 339 1 231 1 259 1 246 1 
175 2 0 1 242 1 65 1 138 1 245 1 144 1 336 2 119 1 53 1 34 1 258 1 304 1 211 1 306 1 61 1 238 1 353 1 159 1 355 1 
337 1 144 1 336 2 294 1 242 1 267 1 304 1 211 1 213 1 249 1 
337 1 144 1 336 2 294 1 242 1 267 1 304 1 211 1 213 1 249 1 
337 1 144 1 336 2 294 1 242 1 267 1 304 1 211 1 213 1 249 1 
337 1 144 1 336 2 294 1 242 1 267 1 304 1 211 1 213 1 249 1 
337 1 144 1 336 2 294 1 242 1 267 1 304 1 211 1 213 1 249 1 
143 1 187 1 85 1 251 1 109 1 136 1 49 1 88 1 261 1 148 1 
160 1 18 1 
143 1 251 1 289 1 109 1 136 1 88 1 148 1 343 1 276 1 
184 1 57 1 
279 1 167 1 121 1 
282 1 187 1 274 1 101 2 136 1 261 1 151 1 142 1 143 1 85 1 314 1 251 1 39 1 109 1 169 1 88 1 89 1 148 1 
282 1 187 1 274 1 101 2 136 1 261 1 151 1 142 1 143 1 85 1 314 1 251 1 39 1 109 1 169 1 88 1 89 1 148 1 
282 1 187 1 274 1 101 2 136 1 261 1 151 1 142 1 143 1 85 1 314 1 251 1 39 1 109 1 169 1 88 1 89 1 148 1 
184 1 279 1 57 1 
184 1 279 1 57 1 
167 1 121 1 
279 1 167 1 121 1 
8 1 207 1 
160 1 274 1 101 1 180 1 18 1 136 1 81 1 20 1 151 1 103 1 143 1 324 1 251 1 119 2 164 1 109 1 169 1 88 1 8 1 207 1 148 1 89 1 
175 2 242 1 243 2 161 1 135 1 245 1 246 2 248 1 277 1 336 2 144 1 200 1 339 2 204 1 95 2 53 1 227 2 15 1 32 1 186 1 345 1 319 2 284 1 211 1 322 2 304 1 306 1 325 1 189 1 61 1 238 1 
227 2 90 1 15 1 1 1 42 1 256 1 246 2 335 1 84 1 104 1 325 1 350 1 106 1 339 2 10 1 
84 1 90 1 227 1 15 1 104 1 325 1 1 1 196 1 42 1 339 1 246 1 10 1 335 1 
227 1 90 1 15 1 32 1 115 1 135 1 256 1 246 1 323 1 325 1 339 1 130 1 41 1 74 1 
227 1 90 1 15 1 1 1 42 1 256 1 246 1 335 1 84 1 104 1 325 1 350 1 339 1 10 1 
75 1 
282 1 117 1 320 1 50 1 112 1 185 1 127 1 
117 1 162 1 332 1 312 1 118 1 340 1 316 1 50 1 253 1 54 1 282 2 151 1 235 1 24 1 89 1 112 1 271 1 
311 1 218 2 135 10 220 2 138 2 312 4 221 2 147 3 225 2 316 3 50 8 9 2 185 1 13 2 227 3 282 8 15 3 55 1 320 1 188 1 233 2 151 5 235 5 325 4 106 1 60 1 24 4 239 6 240 3 112 2 293 1 117 9 197 2 65 2 162 6 330 2 332 4 246 3 28 2 298 6 339 3 253 12 32 3 209 2 302 1 258 2 172 2 40 1 131 2 41 1 353 2 89 5 355 2 271 4 
273 1 117 8 197 1 65 2 67 1 330 1 162 3 138 2 332 2 312 2 141 1 298 5 203 1 316 1 205 1 253 6 50 5 282 5 209 2 347 1 283 1 258 2 151 1 125 1 287 1 235 1 60 1 24 2 239 5 353 2 89 1 133 1 355 2 112 2 271 2 
209 2 117 2 170 1 65 1 138 1 43 1 35 1 151 1 312 1 332 1 155 1 119 1 24 1 107 1 73 1 50 1 159 1 89 1 193 1 52 1 271 1 
282 1 117 1 320 1 312 1 332 1 24 1 50 1 112 1 185 1 271 1 
282 5 209 2 117 5 65 2 330 1 138 2 162 5 258 2 298 5 239 5 353 2 50 5 253 10 9 1 355 2 
282 1 235 1 316 1 151 1 89 1 112 1 
176 1 311 1 117 2 135 1 197 2 332 2 312 1 246 4 299 1 339 4 6 1 316 2 50 2 281 1 74 1 227 4 15 1 32 1 55 2 305 1 151 3 323 1 235 4 325 1 24 2 60 2 41 2 89 3 271 2 
227 1 119 1 339 1 2 1 231 1 41 1 73 1 246 1 159 1 
282 4 117 1 197 1 162 2 312 1 332 1 298 2 24 1 60 1 352 1 239 2 253 4 50 2 112 2 271 1 
109 1 88 1 334 1 
187 1 109 1 88 1 8 1 11 1 
109 1 88 1 334 1 
109 1 88 1 334 1 
22 1 109 1 88 1 
22 1 109 1 88 1 
22 1 109 1 88 1 
109 1 88 1 
143 1 148 1 
195 2 175 10 242 1 65 2 43 1 138 2 144 1 336 2 202 1 53 5 170 1 35 1 304 1 211 1 37 1 156 1 107 1 238 5 111 4 192 2 
195 2 175 6 170 1 65 1 43 1 138 1 127 1 37 1 202 1 107 1 352 1 238 3 111 2 53 3 
195 1 175 4 242 1 65 1 138 1 258 1 211 1 304 1 30 1 336 2 144 1 238 2 353 1 111 2 192 1 355 1 53 2 
195 1 175 7 65 1 67 1 138 1 258 1 126 1 287 1 238 3 353 1 192 1 111 2 133 2 355 1 53 4 
175 20 195 3 65 4 43 1 138 4 139 1 202 1 53 10 170 1 258 2 35 1 126 1 37 1 287 2 156 1 58 1 107 1 238 10 353 2 111 5 192 2 355 2 133 2 
175 1 133 1 53 1 
175 1 287 1 238 1 
175 6 195 2 242 1 65 1 138 1 258 1 304 1 211 1 30 1 144 1 336 2 238 3 353 1 192 1 111 3 9 1 355 1 53 3 
175 12 195 1 242 1 65 2 67 1 138 2 144 1 336 2 203 1 205 1 53 6 283 1 347 1 258 2 304 1 211 1 125 1 287 1 267 1 238 6 353 2 192 1 111 2 133 1 355 2 
175 6 195 1 170 1 65 1 138 1 43 1 107 1 238 3 111 2 192 1 53 3 
175 1 156 1 36 1 53 1 
195 3 175 10 242 1 170 1 65 2 43 2 138 2 35 1 304 1 211 1 144 1 336 2 107 2 267 1 238 5 111 5 192 2 53 5 
175 2 242 1 138 1 258 1 211 1 304 1 336 2 144 1 267 1 238 2 192 1 111 1 
195 1 175 4 242 1 65 1 138 1 258 1 211 1 304 1 336 2 144 1 267 1 238 2 353 1 111 2 192 1 355 1 53 2 
175 3 195 1 78 1 242 2 43 1 211 2 304 2 36 1 156 1 336 4 144 2 107 1 267 1 238 1 111 2 192 1 53 2 
195 3 175 24 242 3 329 1 65 4 67 1 43 1 138 4 30 1 144 3 336 6 202 1 168 1 53 12 78 1 170 1 230 1 35 1 258 2 304 3 211 3 37 1 156 1 287 3 107 1 267 1 238 12 353 2 192 3 111 6 133 3 355 2 
175 8 195 2 242 1 65 1 67 1 138 1 43 1 144 1 336 2 202 1 203 1 53 4 170 1 304 1 211 1 37 1 287 1 107 1 352 1 267 1 238 4 111 2 133 1 
195 2 175 11 242 2 65 1 67 1 43 1 138 2 30 1 144 2 336 4 202 1 203 1 53 5 170 1 258 1 304 2 211 2 126 1 37 1 287 1 107 1 352 1 267 1 238 6 192 1 111 3 133 2 355 1 
175 13 195 1 242 2 65 2 67 1 138 2 30 1 144 2 336 4 203 1 205 1 53 7 283 1 347 1 258 2 304 2 211 2 125 1 287 1 156 1 267 1 238 6 353 2 192 1 111 2 133 1 355 2 
175 11 195 1 242 2 65 1 67 1 138 2 30 1 144 2 336 4 203 1 205 1 53 4 283 1 347 1 258 2 304 2 211 2 125 1 156 1 287 1 267 1 238 7 353 1 192 1 111 2 133 1 355 2 
175 8 195 2 242 1 65 1 67 1 138 1 43 1 144 1 336 2 202 1 203 1 53 4 170 1 304 1 211 1 37 1 287 1 107 1 352 1 267 1 238 4 111 2 133 1 
175 12 195 1 242 1 65 2 67 1 138 2 144 1 336 2 203 1 205 1 53 6 283 1 347 1 258 2 304 1 211 1 125 1 287 1 267 1 238 6 353 2 192 1 111 2 133 1 355 2 
175 12 195 1 242 2 65 1 67 1 138 2 30 1 144 2 336 4 203 1 205 1 53 5 347 1 283 1 258 2 304 2 211 2 125 1 287 1 156 2 267 1 238 7 353 1 192 1 111 2 133 1 355 2 
175 12 195 2 242 2 65 1 67 1 138 2 144 2 336 4 203 1 205 1 53 5 78 1 347 1 283 1 258 2 304 2 211 2 125 1 287 1 156 2 267 1 238 7 353 1 192 2 111 4 133 1 355 2 
175 7 195 3 170 1 65 1 43 3 138 1 37 2 202 1 107 3 238 3 111 6 192 3 53 4 
175 12 195 1 242 2 65 1 67 1 138 2 144 2 336 4 203 1 205 1 53 5 78 1 347 1 283 1 258 2 304 2 211 2 125 1 287 1 156 2 267 1 238 7 353 1 192 1 111 2 133 1 355 2 
3 1 354 1 5 1 
122 1 3 1 354 1 12 1 342 1 21 1 296 1 5 1 
227 1 15 1 32 1 325 1 135 1 339 1 41 1 246 1 74 1 323 1 127 1 
227 1 15 1 32 1 114 1 135 1 321 1 246 1 163 1 325 1 119 1 339 1 41 1 240 1 
227 1 15 1 32 1 55 1 114 1 135 1 321 1 246 1 163 1 325 1 119 1 339 1 240 1 
227 1 15 1 32 1 55 1 114 1 135 1 321 1 246 1 325 1 119 1 70 1 339 1 240 1 
282 1 227 3 32 1 15 1 55 1 218 1 135 4 137 1 28 1 151 2 246 3 235 1 325 1 339 3 223 1 86 1 225 1 147 1 41 1 240 1 89 2 112 1 13 1 
282 1 227 3 32 1 15 1 55 1 218 1 135 4 28 1 151 2 246 3 172 1 235 1 325 1 339 3 223 1 225 1 147 1 41 1 240 1 89 2 112 1 13 1 
227 1 15 1 325 1 339 1 246 1 317 1 
227 7 186 1 208 1 32 2 15 2 150 1 135 3 171 1 302 1 246 7 4 1 104 1 105 1 325 3 106 1 339 6 72 1 95 1 41 2 240 1 317 1 
119 1 321 1 
311 1 218 1 117 1 135 2 332 2 312 2 246 1 221 1 339 1 147 1 316 1 50 1 185 1 13 1 282 1 227 1 320 1 81 1 151 3 233 1 172 1 235 2 24 2 41 1 131 1 89 3 112 1 271 2 
227 2 293 1 32 1 15 1 218 1 135 2 302 1 246 2 325 2 106 1 339 2 240 1 317 1 
227 4 15 1 32 1 325 1 106 1 135 1 339 4 223 1 255 1 41 1 246 4 74 1 323 1 
227 2 32 1 15 1 55 1 150 1 219 1 135 1 246 2 4 1 146 1 325 2 339 2 290 1 240 1 
227 1 15 1 325 1 42 1 339 1 41 1 246 1 335 1 
227 2 15 1 32 1 186 1 104 1 325 1 161 1 106 1 135 1 339 2 246 2 
227 5 208 1 186 1 32 2 15 2 55 1 135 3 171 1 255 1 246 5 323 1 325 2 106 1 339 4 41 1 74 1 
227 5 186 1 32 2 15 2 55 1 135 3 171 1 255 1 246 5 323 1 325 2 106 1 315 1 339 4 41 1 74 1 
227 1 15 1 32 1 114 1 135 1 321 1 246 1 325 1 119 1 70 1 339 1 41 1 240 1 
227 1 32 1 15 1 55 1 150 1 135 1 302 1 246 1 4 1 105 1 325 2 339 1 240 1 
14 1 241 1 291 1 83 1 
14 1 241 1 291 1 285 1 331 1 81 1 151 1 83 1 89 1 102 1 
14 1 241 1 243 1 189 1 319 1 204 1 291 1 322 1 277 1 
241 1 285 1 102 1 
154 1 59 1 27 1 127 1 
154 1 313 1 327 1 92 1 59 1 120 1 27 1 
134 1 120 1 333 1 
154 1 46 1 313 3 327 1 92 1 59 1 87 2 120 3 181 1 27 1 300 1 263 1 
154 1 313 2 327 1 92 1 59 1 278 1 280 1 120 2 27 1 
214 1 154 1 313 1 327 1 145 1 92 1 228 1 265 1 120 1 181 1 199 1 
154 1 313 1 327 1 92 1 120 1 181 1 27 1 
313 1 327 1 92 1 59 1 120 1 181 1 27 2 
327 2 92 2 181 1 244 1 154 1 313 2 120 2 7 1 27 1 194 1 
327 1 92 1 228 1 301 1 181 1 82 1 154 2 313 3 59 1 166 1 120 3 280 2 27 1 
313 1 327 1 92 1 42 1 120 1 181 1 38 1 
327 2 92 2 228 1 301 1 181 1 154 2 313 4 59 1 278 1 120 4 48 1 280 2 27 1 
154 1 313 1 327 1 92 1 59 1 120 1 181 1 27 1 
327 1 92 1 228 1 301 1 263 1 154 3 46 1 313 4 59 2 87 1 280 2 120 4 269 1 27 2 
154 1 113 1 313 2 327 1 92 1 59 1 280 1 120 2 181 1 27 1 69 1 270 1 
327 1 92 1 181 1 295 1 263 2 154 1 46 1 313 3 59 1 120 3 87 2 27 1 
154 2 178 1 68 2 234 1 
313 1 327 1 92 1 120 1 181 1 158 1 
154 1 313 2 327 1 92 1 59 1 280 1 120 2 181 1 27 1 82 1 
177 1 
154 1 313 1 327 1 92 1 59 1 120 1 181 1 27 1 
327 1 92 1 181 1 82 1 154 1 313 3 59 1 280 1 120 3 87 1 27 1 
154 1 228 1 301 1 269 1 
154 1 27 1 

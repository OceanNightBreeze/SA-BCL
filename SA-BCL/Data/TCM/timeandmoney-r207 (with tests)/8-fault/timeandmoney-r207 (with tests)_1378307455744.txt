#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (151,175,245,264,306) (33,198) (33,198) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 184 341 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 184 341 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 184 341 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 184 173 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 184 341 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 168 127 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | ASSIGN | 2623 | = null
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9723 | ^ -> &
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1902 | = null
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6370 | stmt -> ;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | STATEMENT | 3734 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3635 | 1 -> 2
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
162 9 161 1 213 2 44 3 2 1 97 5 216 1 337 2 237 1 318 6 264 1 28 1 75 1 104 1 196 4 222 1 265 2 14 1 15 2 272 2 226 2 56 1 206 1 18 1 330 2 302 9 157 1 210 1 
162 9 161 1 213 2 44 3 2 1 97 5 216 1 337 2 237 1 318 6 264 1 28 1 75 1 104 1 196 4 222 1 265 2 14 1 272 2 15 2 226 2 56 1 206 1 18 1 330 2 302 9 157 1 210 1 
162 10 161 1 213 2 44 4 2 1 97 6 216 1 337 2 237 1 318 7 264 1 28 1 75 1 104 1 196 5 222 1 265 2 14 1 272 2 15 2 226 2 56 1 206 1 18 1 330 2 302 10 157 1 210 1 
162 7 161 1 213 1 44 2 2 1 97 4 216 1 337 2 237 1 318 4 264 1 28 1 75 1 104 1 196 3 222 1 265 2 14 1 272 2 15 2 226 2 206 1 18 1 330 2 302 7 157 1 210 1 
162 4 213 2 44 1 15 1 272 1 97 3 216 1 337 1 226 1 56 1 330 1 318 3 75 1 104 1 302 4 196 2 222 1 210 1 
33 1 162 1 15 1 264 1 2 1 302 1 104 1 177 1 337 1 265 1 226 1 198 1 
162 3 161 1 44 1 15 2 97 2 216 1 226 2 318 1 75 1 104 1 302 3 196 1 265 1 
161 1 162 9 213 2 44 3 97 5 216 1 337 1 318 7 28 1 75 1 104 1 196 4 265 1 10 1 222 1 15 2 272 1 226 2 56 1 330 1 302 9 229 1 157 1 210 1 
161 1 162 9 213 2 44 3 97 5 216 1 337 1 318 7 28 1 75 1 104 1 196 4 265 1 10 1 222 1 15 2 272 1 226 2 56 1 330 1 302 9 229 1 157 1 210 1 
121 1 338 1 140 1 
94 2 140 1 266 1 
62 2 356 2 357 2 183 2 65 1 9 1 60 2 329 2 
179 1 62 2 361 1 183 2 65 1 186 1 258 2 69 1 340 2 342 1 344 1 190 1 369 1 219 1 9 1 29 1 105 2 290 1 169 1 34 1 108 1 227 1 109 1 152 1 329 2 355 1 356 2 357 3 88 1 380 1 129 1 277 2 209 1 60 3 156 1 134 2 160 1 
62 1 356 1 191 1 79 1 357 1 183 1 9 1 291 1 60 1 329 1 
295 1 53 1 95 1 125 1 35 1 140 1 329 1 379 1 121 1 276 1 357 1 102 1 60 1 291 1 
62 1 53 1 183 1 95 1 125 2 35 1 140 1 329 1 379 1 121 1 356 1 357 1 102 2 60 1 291 1 
125 1 102 1 284 1 248 1 22 1 
121 1 260 1 125 2 102 2 284 1 289 1 140 1 22 1 
125 1 102 1 22 1 
62 1 181 1 79 1 183 1 125 1 284 1 329 1 191 1 356 1 357 1 102 1 9 1 291 1 60 1 
140 1 
121 1 125 2 102 2 284 1 289 1 140 1 22 1 353 1 
149 2 125 5 136 1 284 2 311 1 140 1 166 1 121 1 261 1 25 2 102 5 50 1 20 1 57 1 322 1 289 1 11 1 22 2 171 2 
179 1 62 1 361 1 183 1 34 1 108 1 258 1 313 1 152 1 340 1 329 1 85 1 355 1 357 2 369 1 128 1 219 1 380 1 60 2 105 1 
65 1 338 1 
62 1 42 1 54 1 183 1 65 2 329 2 356 1 357 2 60 2 
86 1 242 1 313 1 
179 1 361 1 34 1 65 1 108 1 258 1 340 1 152 1 71 1 355 1 357 1 369 1 380 1 219 1 60 1 105 1 
85 1 62 3 356 1 357 3 183 3 65 1 60 3 329 3 
62 1 79 1 357 1 183 1 291 1 60 1 329 1 
62 1 356 1 357 1 42 1 54 1 183 1 291 1 60 1 329 1 
179 1 62 3 361 1 42 1 183 3 95 1 65 1 186 1 258 1 340 1 342 1 344 1 369 1 102 1 219 1 9 1 29 1 290 1 291 1 105 1 292 1 169 1 53 1 125 1 34 1 108 1 35 1 227 1 152 1 329 3 379 1 85 1 355 1 356 2 357 4 88 1 128 1 380 1 89 1 277 2 209 1 60 4 134 1 160 1 
62 1 85 1 276 1 357 2 183 1 65 1 235 1 60 2 329 2 
62 3 53 1 42 1 95 1 183 3 125 1 35 1 140 1 329 3 379 1 85 2 356 1 357 3 102 1 128 1 291 1 60 3 292 1 122 1 
62 2 42 1 183 2 313 1 329 2 85 1 86 1 356 1 357 2 60 2 
179 1 361 1 34 1 65 1 108 1 258 1 340 1 152 1 355 1 357 1 369 1 380 1 219 1 60 1 105 1 
179 1 119 1 34 1 65 1 108 1 215 1 258 1 340 1 152 1 275 1 355 1 357 1 369 1 219 1 291 1 60 1 105 1 
51 1 242 2 186 1 217 1 312 1 228 1 227 1 313 2 86 2 344 2 190 2 238 1 207 1 246 1 88 1 8 1 277 2 381 1 209 1 29 1 240 1 92 1 134 4 160 1 
62 1 357 1 183 1 35 1 112 1 291 1 60 1 329 1 
62 4 42 1 183 4 350 1 65 1 235 1 6 1 329 5 85 2 356 1 276 1 357 5 128 1 60 5 
62 2 79 1 357 2 183 2 112 1 291 1 60 2 329 2 
223 1 68 1 
223 1 68 1 
268 1 131 1 
268 1 131 1 
268 1 131 1 
189 1 223 1 68 1 
189 1 223 1 68 1 
223 1 255 1 68 1 
268 1 223 2 193 1 374 1 131 1 68 2 
189 1 223 1 68 1 
107 1 223 1 68 1 
107 1 223 1 68 1 
107 1 223 1 68 1 
201 1 32 3 243 2 223 2 55 1 125 2 68 2 140 1 218 2 368 2 102 2 74 1 193 1 144 1 347 2 130 1 371 1 21 1 254 2 
62 2 183 2 65 1 255 1 68 1 218 1 368 1 102 1 347 1 195 1 197 1 12 1 32 1 223 1 243 1 349 1 125 1 329 2 274 1 154 1 357 2 59 1 21 1 60 2 
330 1 272 1 337 1 
330 1 177 1 337 1 
135 1 72 1 224 1 272 2 177 1 337 3 
135 1 224 1 272 1 177 1 337 2 211 1 
135 2 224 1 272 1 177 1 337 2 
94 3 307 1 41 2 284 4 140 2 70 1 121 1 25 1 261 1 238 1 102 5 289 1 322 3 11 2 12 1 172 1 266 1 171 1 149 1 125 5 376 2 84 1 274 1 38 1 207 1 19 2 381 1 59 1 92 1 303 1 132 1 22 1 
94 9 307 2 41 6 362 1 136 1 284 7 165 1 336 1 140 5 121 1 261 1 25 2 238 3 102 9 289 1 322 8 30 5 11 6 266 3 171 2 149 2 125 9 376 6 274 4 38 2 207 3 90 1 248 5 381 3 92 3 61 1 303 1 132 3 22 6 305 1 
94 4 307 1 41 2 136 1 284 2 140 3 70 1 121 1 25 1 238 1 102 3 322 3 11 2 266 2 171 1 149 1 125 3 376 2 84 1 274 1 38 1 207 1 19 1 381 1 92 1 132 1 
94 7 307 1 41 4 136 1 284 3 165 1 140 4 70 1 121 1 25 1 238 2 102 4 322 5 11 4 266 3 171 1 149 1 125 4 376 4 84 1 274 2 38 1 207 2 19 2 90 1 381 2 92 2 132 2 305 1 
179 1 78 1 338 1 
179 1 81 1 
174 1 
179 1 152 1 
179 3 355 1 78 2 282 1 220 1 152 1 
179 1 355 1 152 1 
179 1 262 1 
52 1 0 1 309 1 283 1 217 2 344 3 190 4 207 1 246 3 370 1 358 1 381 1 158 1 159 2 134 7 77 1 199 1 
52 1 0 1 309 1 283 1 217 2 344 3 190 4 207 1 246 3 370 1 358 1 381 1 158 1 159 2 134 7 77 1 199 1 
52 1 0 1 309 1 283 1 217 2 344 3 190 4 207 1 246 3 370 1 358 1 381 1 158 1 252 1 159 2 134 7 77 1 199 1 
309 1 0 2 283 2 186 1 217 5 344 15 190 16 238 3 370 2 29 1 146 1 77 2 293 1 199 1 267 1 294 1 52 5 83 1 377 4 227 1 300 3 207 4 358 1 246 10 277 2 381 4 209 1 178 1 158 1 92 3 134 31 159 3 132 3 93 1 
0 1 283 1 186 2 217 3 314 1 344 4 190 5 7 1 370 1 29 2 77 1 199 1 52 1 83 1 227 2 207 1 246 4 358 1 381 1 277 4 209 2 158 1 134 9 159 2 
162 2 43 1 335 1 97 1 216 1 258 1 188 1 120 1 337 2 340 1 47 1 72 1 318 1 346 1 75 1 104 1 105 1 265 1 272 1 15 1 34 1 82 1 108 1 226 1 153 1 299 1 330 1 302 2 177 1 115 1 
162 3 335 1 97 1 216 1 258 1 188 1 337 2 340 1 99 1 47 1 72 1 318 2 346 1 75 1 221 1 105 1 265 1 200 1 272 1 15 1 34 1 82 1 108 1 226 1 153 1 299 1 330 1 302 3 177 1 115 1 
162 2 335 1 97 1 216 1 258 1 337 2 340 1 99 1 72 1 318 2 346 1 75 1 221 1 105 1 265 1 34 1 272 1 82 1 108 1 153 1 299 1 330 1 302 2 177 1 115 1 
179 1 162 1 231 1 233 1 258 1 340 1 369 1 27 1 319 1 105 1 265 2 324 1 170 1 200 1 15 1 34 1 108 1 82 2 226 1 152 1 153 2 302 1 115 2 
162 1 43 1 335 1 258 1 188 1 337 2 340 1 47 1 72 1 346 1 104 1 221 1 105 1 265 1 272 1 15 1 34 1 82 1 108 1 226 1 153 1 299 1 330 1 302 1 177 1 115 1 
286 1 
94 2 179 1 95 1 185 1 3 1 285 2 140 2 340 2 287 1 48 1 102 5 192 2 289 3 105 2 291 1 11 2 295 1 53 1 149 1 108 1 297 1 204 1 17 2 16 2 152 1 301 1 357 1 114 2 60 1 22 6 304 1 163 2 308 1 363 4 258 2 259 1 121 1 261 1 25 1 369 2 27 1 263 1 322 2 170 1 266 2 171 1 373 1 125 5 34 1 35 1 329 1 379 1 38 1 276 1 230 2 
295 1 53 1 95 1 308 1 125 3 363 2 35 1 297 1 353 1 379 1 329 1 301 1 276 1 357 1 102 3 263 1 289 1 230 1 291 1 60 1 22 2 373 1 
295 1 53 1 95 1 308 1 125 3 363 3 35 1 297 1 285 1 353 1 140 1 379 1 329 1 121 1 301 1 276 1 357 1 102 3 263 1 289 1 291 1 60 1 22 1 373 1 
95 1 308 1 363 3 285 1 140 1 121 1 102 3 192 1 263 1 289 1 291 1 373 1 295 1 53 1 125 3 35 1 297 1 353 1 329 1 379 1 301 1 357 1 276 1 60 1 230 1 22 2 
95 1 285 4 140 5 139 1 102 5 48 1 192 4 289 3 291 1 11 1 295 1 53 1 149 1 297 1 203 1 353 1 16 2 17 2 301 1 357 1 114 2 60 1 22 7 304 1 308 1 163 2 363 6 121 5 261 1 25 1 263 1 322 1 76 1 373 1 171 1 266 2 125 5 35 1 379 1 329 1 276 1 87 1 230 4 332 1 
94 2 95 1 163 2 308 1 363 4 285 2 140 2 121 1 287 1 25 1 261 1 48 1 102 4 192 2 263 1 289 2 322 1 291 1 11 1 266 2 373 1 171 1 295 1 53 1 149 1 125 4 35 1 297 1 17 2 16 2 329 1 379 1 301 1 276 1 357 1 114 2 230 2 60 1 22 4 304 1 
95 1 163 2 308 1 363 4 285 2 140 1 139 1 121 1 261 1 25 1 48 1 102 4 192 2 263 1 289 2 322 1 291 1 11 1 266 2 171 1 373 1 295 1 53 1 149 1 125 4 35 1 203 1 297 1 17 2 16 2 329 1 379 1 301 1 357 1 276 1 114 2 230 2 60 1 332 1 22 4 304 1 
95 1 163 2 308 1 363 4 285 2 140 1 139 1 121 1 261 1 25 1 48 1 102 4 192 2 263 1 289 2 322 1 291 1 11 1 266 2 171 1 373 1 295 1 53 1 149 1 125 4 35 1 203 1 297 1 17 2 16 2 329 1 379 1 301 1 357 1 276 1 114 2 230 2 60 1 332 1 22 4 304 1 
94 2 95 1 64 1 308 1 363 4 285 2 140 1 121 1 143 2 261 1 25 1 48 1 102 4 192 2 263 1 289 2 322 1 291 1 11 1 171 1 373 1 295 1 53 1 149 1 125 4 35 1 203 1 297 1 16 2 329 1 379 1 301 1 357 1 276 1 208 1 250 2 114 2 230 2 60 1 251 1 22 4 
95 1 163 2 308 1 363 5 285 3 140 1 139 1 121 1 25 1 261 1 48 1 102 4 192 3 263 1 289 2 322 1 291 1 11 1 76 1 266 2 171 1 373 1 295 1 53 1 149 1 125 4 35 1 203 1 297 1 17 2 16 2 329 1 379 1 301 1 357 1 276 1 114 2 60 1 230 3 332 1 22 5 304 1 
95 1 163 2 308 1 363 5 285 3 140 1 139 1 121 1 25 1 261 1 48 1 102 4 192 3 263 1 289 2 322 1 291 1 11 1 76 1 266 2 171 1 373 1 295 1 53 1 149 1 125 4 35 1 203 1 297 1 17 2 16 2 329 1 379 1 301 1 357 1 276 1 114 2 60 1 230 3 332 1 22 5 304 1 
94 2 95 1 308 1 64 1 363 4 285 2 140 1 121 1 143 2 287 1 25 1 261 1 48 1 102 4 192 2 263 1 289 2 322 1 291 1 11 1 373 1 171 1 295 1 53 1 149 1 125 4 35 1 297 1 16 2 329 1 379 1 301 1 276 1 357 1 250 2 114 2 230 2 60 1 22 4 
242 1 65 2 186 1 217 2 338 1 228 1 227 1 313 1 86 1 344 3 190 3 207 1 246 2 88 1 358 1 370 1 381 1 277 2 209 1 29 1 158 1 159 1 134 6 77 1 199 1 160 1 
182 1 65 1 186 2 217 1 313 11 342 1 344 6 190 8 238 1 321 1 29 2 326 1 52 1 242 11 377 3 227 2 300 3 86 4 207 2 246 2 88 2 129 1 277 4 381 1 209 2 178 1 92 2 253 1 134 14 132 2 360 1 93 1 160 1 
179 1 62 1 361 1 212 1 183 1 65 1 186 1 258 1 340 1 342 1 71 1 344 1 190 1 369 1 219 1 105 1 29 1 106 1 202 1 34 1 108 1 227 1 152 1 329 1 86 1 85 1 355 1 357 2 88 1 128 1 380 1 129 1 277 2 209 1 60 2 253 1 134 2 160 1 
179 2 183 1 186 3 340 3 342 1 344 10 190 10 238 2 105 3 290 2 199 1 242 7 52 4 108 2 244 1 152 2 355 2 357 3 207 3 358 1 246 8 209 3 60 3 158 1 159 1 253 1 160 3 62 1 361 2 65 2 258 3 217 4 167 1 313 7 24 2 369 1 26 2 370 1 219 2 221 1 29 3 77 1 34 2 375 2 227 3 329 1 85 1 86 7 128 1 88 3 380 2 129 1 381 3 277 6 331 2 92 2 134 20 132 2 40 1 
62 1 179 3 183 1 45 1 187 1 186 2 258 7 23 1 120 1 340 8 342 1 344 1 190 1 73 1 288 1 369 2 27 1 221 1 105 8 29 2 323 1 170 1 123 1 34 2 108 2 228 1 227 2 109 2 152 2 329 1 85 1 357 1 88 2 129 1 277 4 209 2 60 1 134 2 160 2 
62 1 42 1 183 1 186 1 217 1 313 1 344 2 190 1 238 1 49 1 29 1 242 1 227 1 329 1 86 1 356 1 357 1 207 1 246 1 88 1 277 2 381 1 209 1 60 1 92 1 253 1 132 1 134 3 160 1 
52 1 242 1 186 1 228 1 227 1 312 1 313 1 86 1 190 2 207 1 246 1 88 1 277 2 209 1 29 1 92 1 134 2 160 1 
242 1 186 1 217 1 228 1 227 1 313 1 86 1 344 2 238 1 246 1 88 1 277 2 381 1 209 1 29 1 240 1 134 2 160 1 
52 1 242 2 186 1 217 1 228 1 227 1 313 2 86 2 344 2 190 2 238 1 207 1 246 2 88 1 381 1 277 2 209 1 29 1 92 1 134 4 132 1 160 1 
52 1 242 1 186 1 227 1 312 1 313 1 86 1 190 2 207 1 246 1 88 1 277 2 209 1 29 1 92 1 134 2 323 1 160 1 
242 1 186 1 217 1 227 1 313 1 86 1 344 2 238 1 246 1 88 1 277 2 381 1 209 1 29 1 240 1 134 2 323 1 160 1 
52 1 242 2 186 1 217 1 227 1 313 2 86 2 344 2 190 2 238 1 207 1 246 2 88 1 381 1 277 2 209 1 29 1 92 1 134 4 323 1 132 1 160 1 
52 1 242 2 186 1 217 1 227 1 313 2 86 2 344 2 190 2 238 1 207 1 246 2 88 1 381 1 277 2 209 1 29 1 92 1 132 1 134 4 160 1 
179 1 361 1 65 1 186 1 258 1 340 1 342 1 344 1 190 1 369 1 219 1 290 1 105 1 29 1 34 1 108 1 227 1 152 1 355 1 357 1 88 1 380 1 129 1 277 2 209 1 60 1 134 2 160 1 
179 1 119 1 65 1 215 1 186 1 258 1 340 1 342 1 344 1 369 1 219 1 291 1 105 1 29 1 34 1 108 1 227 1 152 1 205 1 275 1 355 1 357 1 88 1 277 2 209 1 60 1 134 1 160 1 
52 1 242 2 186 1 217 1 227 1 313 2 86 2 344 2 190 2 238 1 207 1 246 2 88 1 381 1 277 2 209 1 29 1 92 1 134 4 253 1 132 1 160 1 
179 1 361 1 186 1 258 1 217 1 120 1 313 2 340 1 344 2 190 2 238 1 26 1 219 1 290 1 105 1 29 1 52 1 242 2 34 1 108 1 227 1 152 1 86 2 355 1 357 1 207 1 246 2 88 1 380 1 381 1 277 2 209 1 60 1 92 1 134 4 132 1 160 1 
62 1 42 1 183 1 186 1 313 1 344 1 190 2 238 1 29 1 52 1 242 1 148 1 227 1 329 1 86 1 356 1 357 1 207 1 246 1 88 1 381 1 277 2 209 1 60 1 92 1 253 1 132 1 134 3 160 1 
184 1 186 2 67 1 217 1 341 1 344 5 190 4 7 1 238 1 29 2 241 1 325 1 52 1 328 1 36 1 377 2 227 2 300 1 207 1 246 2 277 4 381 1 249 1 209 2 178 1 92 1 134 9 132 1 93 1 
184 1 186 2 67 1 217 1 341 1 344 5 190 4 7 1 238 1 29 2 241 1 325 1 52 1 328 1 36 1 377 2 227 2 300 1 207 1 246 2 277 4 381 1 249 1 209 2 178 1 92 1 134 9 132 1 93 1 
180 1 118 1 232 1 184 1 186 2 67 1 217 6 46 1 341 1 344 22 190 24 7 1 238 6 370 1 321 2 372 1 29 2 77 1 325 1 199 1 52 6 328 1 83 1 36 3 377 4 227 2 300 4 207 7 358 1 246 12 277 4 381 7 249 1 209 2 178 2 158 1 92 6 159 1 116 1 134 46 132 6 93 2 
184 1 186 2 67 1 217 1 344 5 190 4 7 1 238 1 29 2 241 1 325 1 52 1 328 1 173 1 36 1 377 2 227 2 300 1 207 1 246 2 277 4 381 1 249 1 209 2 178 1 92 1 134 9 132 1 93 1 
180 1 118 1 232 1 184 1 186 3 67 1 217 1 46 1 341 1 344 9 190 11 7 1 238 1 372 1 29 3 325 1 52 1 328 2 83 2 36 3 377 2 227 3 300 2 207 2 246 2 381 1 277 6 249 2 209 3 92 2 116 1 134 20 132 2 93 2 
368 1 150 1 223 1 243 1 74 1 193 1 347 1 130 1 68 1 218 1 
154 1 255 1 
368 1 280 1 317 1 223 1 243 1 347 1 164 1 68 1 218 1 
201 1 32 2 243 1 223 1 55 1 125 1 68 1 140 1 218 1 368 1 102 1 74 1 193 1 144 1 347 1 130 1 21 1 254 1 
201 1 32 2 243 1 223 1 55 1 125 1 68 1 140 1 218 1 368 1 102 1 74 1 193 1 144 1 347 1 130 1 21 1 254 1 
201 1 32 2 243 1 223 1 55 1 125 1 68 1 140 1 218 1 368 1 102 1 74 1 193 1 144 1 347 1 130 1 21 1 254 1 
189 1 374 1 91 1 
189 1 374 1 91 1 
107 1 194 1 
107 1 374 1 194 1 
349 1 197 1 
62 2 183 2 65 1 284 1 255 1 68 1 218 1 368 1 102 1 144 1 347 1 195 1 197 1 12 1 32 1 223 1 243 1 349 1 125 1 378 1 329 2 274 1 154 1 357 2 59 1 60 2 254 1 
189 1 91 1 
107 1 374 1 194 1 
179 1 214 1 364 1 186 1 258 2 340 2 342 1 344 1 190 1 288 1 105 2 29 1 123 1 124 1 34 1 108 1 298 1 227 1 109 2 152 1 329 2 111 1 357 2 88 1 129 1 277 2 209 1 60 2 253 1 134 2 160 1 
234 1 272 1 34 1 108 1 335 1 351 1 126 1 258 2 188 1 337 2 120 1 340 2 299 1 72 1 330 1 177 1 221 1 105 2 115 1 
272 1 34 1 335 1 108 1 351 1 257 1 258 1 188 1 337 2 340 1 299 1 72 1 330 1 177 1 221 1 105 1 115 1 
179 1 234 1 34 1 108 1 310 1 258 1 152 1 340 1 369 1 27 1 105 1 115 1 324 1 170 1 
234 1 272 1 34 1 108 1 335 1 351 1 126 1 258 1 188 1 337 2 340 1 299 1 72 1 330 1 177 1 221 1 105 1 115 1 
281 1 
121 1 20 1 322 1 311 1 338 1 140 1 11 1 
94 1 149 1 125 1 163 1 140 2 17 1 121 1 261 1 25 1 102 1 289 1 322 1 22 1 11 1 171 1 304 1 266 1 
179 10 94 12 41 6 95 2 333 2 1 2 3 1 140 8 340 3 141 1 345 2 238 2 102 5 289 3 105 3 11 8 149 4 108 4 352 1 152 3 110 2 355 3 155 2 207 2 247 2 20 1 22 5 117 1 311 1 365 1 258 3 120 1 121 2 24 2 261 4 25 4 369 1 316 2 262 2 220 1 322 9 171 4 266 6 269 1 78 2 125 5 34 3 81 3 376 6 225 2 38 2 381 2 92 2 132 2 
94 6 180 1 41 5 232 1 96 1 333 2 3 1 140 5 46 1 121 2 25 2 261 2 315 1 238 2 102 1 289 1 322 8 372 1 11 5 171 2 266 3 149 2 125 1 376 5 225 1 377 1 300 1 38 1 207 2 381 2 92 2 116 1 22 1 132 2 93 1 
62 1 181 1 183 1 333 2 139 1 25 1 261 1 191 1 370 1 102 1 9 1 322 2 291 1 11 1 77 1 171 1 149 1 79 1 125 1 225 1 329 1 356 1 357 1 207 1 381 1 60 1 279 1 
121 1 25 1 261 1 149 1 20 1 322 1 311 1 140 1 11 1 171 1 
94 10 41 5 333 2 376 5 225 1 140 5 24 1 238 2 207 2 381 2 322 5 92 2 132 2 11 5 266 5 
121 1 125 1 102 1 289 1 140 1 22 1 
179 1 136 1 185 1 3 2 365 1 258 4 340 4 25 2 261 1 369 2 102 3 27 1 322 2 289 2 105 4 11 2 170 1 171 2 31 1 149 2 125 3 34 1 108 1 204 1 352 2 152 1 38 2 278 1 22 4 
62 2 179 1 361 1 183 2 65 1 186 1 258 1 340 1 342 1 344 1 369 1 219 1 9 1 29 1 105 1 290 1 169 1 34 1 108 1 227 1 152 1 329 2 355 1 356 2 357 3 88 1 380 1 277 2 209 1 60 3 134 1 160 1 
94 4 41 2 149 1 376 2 3 1 140 4 121 2 261 1 25 1 38 1 322 1 159 1 11 2 266 2 171 1 
347 1 137 1 218 1 
347 1 137 1 218 1 
349 1 74 1 347 1 147 1 218 1 
347 1 137 1 218 1 
103 1 347 1 218 1 
103 1 347 1 218 1 
103 1 347 1 218 1 
347 1 218 1 
223 1 68 1 
180 1 186 1 217 2 344 4 190 4 7 1 370 1 29 1 77 1 199 1 377 1 227 1 300 1 207 1 358 1 246 2 381 1 277 2 209 1 158 1 159 1 134 8 93 1 
180 1 186 2 217 2 344 5 190 6 7 1 370 1 29 2 77 1 199 1 52 1 327 1 377 2 227 2 300 1 207 2 358 1 246 3 381 1 277 4 209 2 178 1 158 1 92 1 159 1 134 11 132 1 93 1 
180 1 232 1 186 3 217 3 46 1 344 10 190 9 7 1 238 2 370 1 372 1 29 3 77 1 199 1 52 1 327 1 83 1 377 1 227 3 300 1 207 3 358 1 246 4 277 6 381 3 209 3 158 1 92 2 159 1 134 19 132 2 116 1 93 1 
180 1 232 1 186 3 217 3 46 1 344 7 190 10 7 1 238 1 370 1 29 3 372 1 77 1 199 1 52 2 327 1 83 1 377 1 227 3 300 1 207 3 358 1 246 5 277 6 381 2 209 3 158 1 92 2 159 1 134 17 132 2 116 1 93 1 
180 1 186 1 217 2 344 4 190 4 7 1 370 1 29 1 77 1 199 1 377 1 227 1 300 1 207 1 358 1 246 2 381 1 277 2 209 1 158 1 159 1 134 8 93 1 
180 1 232 1 186 1 217 1 46 1 344 6 190 6 7 1 238 2 29 1 372 1 52 1 377 1 227 1 300 1 207 2 246 2 277 2 381 2 209 1 92 2 134 12 132 2 116 1 93 1 
180 1 232 1 186 4 217 3 46 1 344 8 190 10 7 1 238 1 370 1 372 1 29 4 77 1 199 1 52 2 327 1 83 2 377 1 227 4 300 1 207 3 358 1 246 5 277 8 381 2 209 4 158 1 92 2 159 1 116 1 134 18 132 2 93 1 
180 1 232 1 186 4 217 3 46 1 344 7 190 9 7 1 238 2 372 1 29 4 241 1 52 3 83 2 377 1 227 4 300 1 207 3 246 6 277 8 381 2 209 4 92 3 116 1 134 16 132 3 93 1 
52 3 217 3 344 4 190 3 207 1 358 1 370 3 246 6 381 1 158 2 134 7 77 3 199 1 
180 1 232 1 186 4 217 3 46 1 344 8 190 10 7 1 238 1 370 1 372 1 29 4 241 1 77 1 199 1 52 1 83 2 377 1 227 4 300 1 207 3 358 1 246 4 277 8 381 2 209 4 158 1 92 2 159 1 116 1 134 18 132 2 93 1 
52 1 83 1 186 2 217 2 227 2 344 4 190 4 207 1 246 3 358 1 370 1 381 1 277 4 209 2 29 2 158 1 159 1 134 8 77 1 199 1 
338 1 217 2 344 3 190 3 207 1 358 1 370 1 246 2 381 1 158 1 159 1 134 6 77 1 199 1 
52 1 327 1 186 1 217 1 227 1 344 2 190 2 238 1 207 1 246 2 381 1 277 2 209 1 29 1 92 1 132 1 134 4 
52 1 377 2 217 1 300 1 344 4 190 3 238 1 207 1 246 2 381 1 178 1 92 1 134 7 132 1 93 1 
186 2 217 5 98 1 344 12 190 11 238 2 370 2 321 1 29 2 77 2 199 1 52 4 83 2 377 2 227 2 300 2 207 3 358 1 246 9 381 3 277 4 209 2 178 1 158 1 92 2 159 1 132 2 134 23 360 1 
344 1 377 1 134 1 
300 1 190 1 134 1 
52 1 327 1 186 1 217 2 227 1 24 1 344 3 190 3 238 1 207 1 246 3 277 2 381 1 209 1 29 1 92 1 134 6 132 1 
180 1 232 1 186 1 217 1 46 1 344 6 190 6 7 1 238 2 29 1 372 1 52 1 377 1 227 1 300 1 207 2 246 2 277 2 381 2 209 1 92 2 134 12 132 2 116 1 93 1 
52 1 344 3 190 3 207 1 246 2 370 1 381 1 217 1 134 6 77 1 199 1 
52 1 83 1 186 1 217 1 227 1 98 1 344 2 190 1 246 2 370 1 358 1 277 2 209 1 29 1 158 1 134 3 77 1 
52 2 186 1 217 2 227 1 344 3 190 3 7 1 207 1 370 1 246 4 277 2 381 1 209 1 29 1 134 6 279 1 77 1 
52 1 186 1 227 1 190 2 7 1 207 1 246 1 277 2 209 1 29 1 92 1 134 2 
52 1 186 1 217 1 227 1 344 2 190 2 238 1 7 1 207 1 246 2 381 1 277 2 209 1 29 1 92 1 132 1 134 4 
52 1 83 1 186 3 217 1 227 3 98 1 344 2 190 1 7 1 370 1 246 2 277 6 209 3 29 3 241 1 134 3 77 1 
186 5 217 7 98 1 344 18 190 16 7 1 238 3 370 3 29 5 241 1 77 3 293 1 199 2 267 1 294 1 52 5 327 1 83 2 377 4 227 5 300 3 207 5 358 1 246 12 277 10 381 5 209 5 178 1 158 1 92 3 159 1 134 34 132 3 93 1 
168 1 357 1 276 1 65 1 235 1 60 1 329 1 
168 1 80 1 359 1 334 1 4 1 127 1 
179 1 369 1 27 1 34 1 108 1 105 1 258 1 338 1 170 1 152 1 340 1 
179 1 62 1 361 1 183 1 34 1 65 1 108 1 258 1 152 1 340 1 329 1 85 1 355 1 357 2 369 1 219 1 60 2 105 1 
62 1 179 3 361 1 183 2 65 1 1 1 258 1 340 1 262 1 219 1 105 1 291 1 34 1 108 1 35 1 352 1 152 2 329 2 379 1 85 1 355 2 357 2 60 2 
62 1 179 3 183 2 65 1 1 1 215 1 258 1 340 1 262 1 219 1 105 1 291 2 34 1 108 1 35 1 352 1 152 2 329 2 379 1 275 1 85 1 355 2 357 2 60 2 
62 1 179 4 181 1 183 1 95 1 1 1 258 2 140 1 340 2 121 1 367 1 191 1 369 1 102 2 262 1 9 1 291 1 105 2 79 1 78 1 125 2 34 1 81 1 108 1 273 1 352 1 152 1 329 1 355 1 356 1 357 1 60 1 22 1 
179 4 78 1 95 1 125 2 34 1 1 1 108 1 81 1 138 1 258 3 140 1 352 1 152 1 340 3 121 1 355 1 369 1 262 1 102 2 247 1 105 3 22 1 
34 1 108 1 105 1 258 1 23 1 340 1 
179 3 63 1 34 2 108 3 45 1 187 1 258 6 23 1 120 1 109 1 340 7 152 2 354 1 355 1 73 1 369 2 220 1 221 1 39 1 105 7 123 1 
179 1 183 1 186 2 340 1 344 3 190 3 290 1 105 1 199 1 242 1 108 1 298 1 152 1 355 1 357 2 207 1 358 1 246 2 209 2 60 2 158 1 253 1 159 1 160 2 62 1 361 1 65 2 258 1 120 1 217 2 313 1 26 1 370 1 219 1 29 2 77 1 34 1 227 2 329 1 86 1 85 1 88 2 380 1 331 1 277 4 381 1 134 6 
179 2 95 1 284 1 311 1 258 1 365 1 140 1 340 1 121 1 25 2 261 2 345 1 369 1 102 3 322 1 289 1 105 1 11 1 171 2 149 2 78 1 125 3 81 1 110 1 155 1 247 1 20 1 22 2 
179 2 78 1 269 1 34 1 108 2 258 2 120 1 23 1 340 2 152 1 355 1 220 1 105 2 
179 1 34 1 108 1 66 1 138 1 258 4 120 1 340 4 152 1 369 1 27 1 105 4 170 1 
179 1 63 1 34 1 108 2 258 2 352 1 167 1 340 2 339 1 152 1 355 1 348 1 39 1 105 2 
330 1 369 1 34 1 108 1 335 1 177 1 105 1 258 1 337 1 340 1 
179 1 111 1 34 1 108 1 221 1 105 2 258 2 120 1 152 1 340 2 123 1 
179 3 34 2 108 2 45 1 66 1 187 1 258 4 120 1 352 1 340 5 152 2 369 1 27 1 105 5 170 1 123 1 
179 3 34 2 108 2 45 1 66 1 258 4 120 1 352 1 340 5 152 2 369 1 27 1 113 1 105 5 170 1 123 1 
62 1 179 1 183 1 65 1 215 1 258 1 340 1 369 1 219 1 105 1 291 1 34 1 108 1 152 1 329 1 275 1 85 1 355 1 357 2 60 2 
179 1 63 1 34 1 108 2 258 1 352 1 340 1 152 1 354 1 355 1 220 1 39 1 105 1 
124 1 271 1 214 1 364 1 5 1 329 1 176 1 357 1 60 1 
176 1 270 1 256 1 
176 1 271 1 65 1 5 1 366 1 
53 1 95 1 270 1 125 2 271 2 65 1 35 1 284 1 5 2 256 1 140 1 379 1 366 2 121 1 176 1 102 2 291 1 292 1 13 1 
97 1 75 1 216 1 338 1 
162 1 15 1 97 1 75 1 302 1 216 1 226 1 
82 1 302 1 265 1 
162 3 15 1 97 1 216 1 226 1 175 1 151 1 245 1 264 2 104 1 302 3 75 1 
162 2 213 1 318 1 15 1 97 1 75 1 302 2 216 1 226 1 
162 1 330 1 272 1 15 1 97 1 302 1 104 1 337 1 196 1 222 1 226 1 
162 1 15 1 97 1 75 1 302 1 104 1 226 1 
162 1 15 1 75 2 302 1 104 1 216 1 226 1 
162 2 15 2 97 1 226 2 37 1 75 1 145 1 104 1 302 2 133 1 
162 3 44 1 15 1 97 2 216 1 226 1 318 2 28 1 75 1 104 1 302 3 157 1 196 1 
162 2 15 1 272 1 97 1 216 1 337 2 226 1 343 1 72 1 330 1 318 1 75 1 104 1 302 2 177 1 
162 4 213 1 44 1 15 2 97 2 216 1 226 2 56 1 318 2 75 1 104 1 302 4 196 1 
162 1 15 1 97 1 75 1 302 1 104 1 216 1 226 1 
162 4 44 1 15 1 97 3 216 2 175 1 226 1 151 1 101 1 318 2 264 1 75 2 302 4 196 1 
162 2 15 1 97 1 216 1 226 1 142 1 318 1 75 1 104 1 302 2 239 1 10 1 
306 1 162 3 15 1 97 1 216 1 226 1 175 2 151 1 264 2 104 1 302 3 75 1 
100 1 97 2 58 1 236 2 
296 1 162 1 15 1 302 1 104 1 226 1 
162 2 318 1 15 1 97 1 75 1 302 2 104 1 216 1 157 1 226 1 
320 1 
162 1 15 1 97 1 75 1 302 1 104 1 216 1 226 1 
162 3 15 1 97 1 216 1 226 1 318 1 264 1 104 1 302 3 75 1 157 1 
101 1 44 1 97 1 196 1 
97 1 75 1 

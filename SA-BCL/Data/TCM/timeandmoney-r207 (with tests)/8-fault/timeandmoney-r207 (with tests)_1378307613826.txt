#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 270 210 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 270 257 70 255 (22,183) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 245 86 315 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 245 86 315 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 245 86 315 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 245 86 315 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 245 86 315 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 114 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 270 156 2 208 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 270 210 95 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 270 210 180 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 245 267 266 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 245 23 157 226 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 245 23 157 164 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 270 257 70 255 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 245 23 157 226 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 245 23 157 164 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 270 257 70 255 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 245 23 157 226 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 245 23 157 226 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 270 210 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 270 210 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 245 23 157 226 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 245 23 157 226 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 245 23 157 226 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 270 286 135 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 270 286 135 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 270 286 135 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 270 286 135 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 270 286 135 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 245 267 266 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 199 321 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 270 210 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 74 229 71 (228,281) (228,281) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 114 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 245 23 157 226 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 270 156 125 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 270 156 2 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V ERROR java.lang.NullPointerException 270 156 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V ERROR java.lang.NullPointerException 245 19 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 270 287 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 270 156 125 212 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 245 23 7 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 270 6 
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 74 229 71 46 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V ERROR java.lang.NullPointerException 245 23 157 
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 245 23 157 226 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 74 229 71 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 270 156 125 296 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 270 156 125 212 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 270 156 125 212 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 270 156 125 212 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 270 156 125 212 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 270 156 125 212 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 270 156 125 212 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 270 156 125 212 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 270 156 125 212 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 74 229 71 (228,281) (228,281) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 270 156 125 212 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 74 229 71 (228,281) (228,281) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 93 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONSTANT | 948 | 1 -> 2
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >=
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> >>>
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11832 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | RETURN | 891 | return null
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V | STATEMENT | 1947 | stmt -> ;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 2

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
329 2 106 1 193 1 62 2 195 6 16 1 85 3 310 1 176 2 239 1 18 2 138 2 139 9 221 2 158 1 223 4 288 9 250 1 51 1 121 1 122 5 25 1 293 1 27 1 209 1 58 1 347 1 328 2 
329 2 106 1 193 1 195 6 62 2 16 1 85 3 310 1 176 2 239 1 18 2 138 2 139 9 221 2 158 1 223 4 288 9 250 1 51 1 121 1 122 5 25 1 293 1 27 1 209 1 58 1 347 1 328 2 
329 2 106 1 193 1 195 7 62 2 16 1 85 4 310 1 176 2 239 1 18 2 138 2 139 10 221 2 158 1 223 5 288 10 250 1 51 1 121 1 122 6 25 1 293 1 27 1 209 1 58 1 347 1 328 2 
329 2 106 1 193 1 195 4 62 1 16 1 85 2 176 2 239 1 18 2 138 2 139 7 221 2 158 1 223 3 288 7 250 1 51 1 121 1 122 4 25 1 293 1 27 1 209 1 58 1 347 1 328 2 
329 1 288 4 106 1 51 1 62 2 195 3 122 3 25 1 85 1 310 1 176 1 239 1 18 1 138 1 139 4 221 1 58 1 223 2 
329 1 288 2 106 1 193 1 235 1 122 1 51 1 25 1 176 1 18 1 139 2 221 1 209 1 230 1 35 1 328 1 
329 2 288 3 106 1 51 1 121 1 122 2 195 1 25 1 85 1 139 3 221 2 223 1 328 1 
329 2 106 1 195 7 62 2 85 3 176 1 310 1 239 1 18 1 138 1 139 9 221 2 223 4 288 9 344 1 120 1 250 1 51 1 121 1 122 5 25 1 293 1 58 1 328 1 
329 2 106 1 195 7 62 2 85 3 176 1 310 1 239 1 18 1 138 1 139 9 221 2 223 4 288 9 344 1 120 1 250 1 51 1 121 1 122 5 25 1 293 1 58 1 328 1 
114 1 116 1 182 1 
28 2 258 1 116 1 
168 2 187 2 240 2 140 2 98 1 326 1 191 2 190 2 
280 1 107 2 213 2 39 1 177 1 240 2 140 3 285 1 21 1 185 2 163 1 187 2 203 1 24 1 270 1 190 2 10 1 126 1 168 3 101 1 322 1 325 1 326 1 210 1 191 2 275 1 80 1 14 1 302 1 
168 1 187 1 240 1 140 1 326 1 12 1 191 1 190 1 41 1 111 1 
187 1 289 1 205 1 333 1 168 1 198 1 140 1 179 1 115 1 13 1 12 1 116 1 182 1 79 1 
187 2 289 1 205 2 190 2 333 1 41 1 111 1 168 2 240 2 198 2 140 2 179 1 326 1 327 1 115 1 191 2 12 2 116 1 182 1 
198 1 15 1 339 1 205 1 269 1 
198 2 9 1 15 1 339 1 205 2 116 1 182 1 260 1 
198 1 339 1 205 1 
187 1 15 1 205 1 190 1 41 1 111 1 168 1 198 1 240 1 140 1 326 1 327 1 12 1 191 1 
116 1 
187 1 15 1 9 1 205 2 190 1 41 1 111 1 168 1 240 1 198 2 140 1 326 1 339 1 327 1 12 1 191 1 348 1 182 1 116 1 
227 1 8 2 9 1 15 2 50 1 147 1 205 5 188 1 215 1 218 1 198 5 262 2 44 1 56 2 339 2 116 1 182 1 103 1 72 1 
98 1 114 1 
187 2 330 1 98 1 190 1 168 2 240 1 263 1 140 2 12 1 191 1 145 1 
153 1 22 1 118 1 
280 1 107 1 213 1 203 1 39 1 98 1 168 1 140 1 101 1 322 1 275 1 80 1 185 1 14 1 163 1 174 1 
107 1 213 1 298 1 185 1 80 1 
132 1 168 3 187 3 240 3 140 3 98 1 191 3 190 1 
168 1 187 1 240 1 140 1 12 1 191 1 111 1 
330 1 187 1 190 1 168 1 240 1 140 1 263 1 191 1 12 1 
168 1 187 1 240 1 330 1 140 1 298 1 191 1 190 1 
132 1 187 2 98 1 168 2 240 1 140 2 12 1 191 1 13 1 145 1 192 1 
298 1 
132 1 330 1 187 2 190 1 168 2 240 2 140 2 191 2 22 1 118 1 
280 1 107 1 213 1 203 1 39 1 98 1 168 1 140 1 101 1 322 1 275 1 80 1 185 1 14 1 163 1 
280 1 107 1 248 1 213 1 203 1 98 1 168 1 140 1 322 1 275 1 80 1 185 1 14 1 163 1 314 1 
257 1 325 1 285 1 183 1 270 1 70 1 284 1 255 1 302 1 
187 1 168 1 240 1 140 1 323 1 115 1 191 1 12 1 
132 1 187 2 330 1 98 1 190 1 168 2 240 2 140 2 298 1 12 1 191 2 145 1 
168 1 187 1 240 1 140 1 12 1 191 1 111 1 
241 1 68 1 
241 1 68 1 
184 1 283 1 
184 1 283 1 
184 1 283 1 
105 1 241 1 68 1 
40 1 241 1 68 1 
305 1 45 1 241 2 68 2 184 1 283 1 
105 1 241 1 68 1 
105 1 241 1 68 1 
241 1 68 1 33 1 
241 1 68 1 33 1 
241 1 68 1 33 1 
317 1 305 1 38 1 320 1 292 2 205 2 165 1 99 1 198 2 274 2 241 2 4 2 142 1 68 2 116 1 265 3 301 1 202 2 5 2 
38 1 282 1 40 1 175 1 64 1 65 1 155 1 240 2 198 1 140 2 4 1 241 1 68 1 242 1 265 1 202 1 187 2 49 1 98 1 292 1 205 1 168 2 274 1 191 2 
138 1 176 1 18 1 
230 1 176 1 18 1 
138 2 232 1 261 1 97 1 230 1 18 3 
138 1 261 1 345 1 97 1 230 1 18 2 
138 1 261 1 97 2 230 1 18 2 
257 1 15 4 282 1 258 1 65 1 20 2 262 1 198 5 157 1 339 1 242 1 182 1 116 2 70 1 23 1 226 1 227 2 246 2 8 1 9 1 147 1 50 3 205 5 251 1 28 3 56 1 31 1 254 1 278 1 82 1 231 2 83 1 
257 3 15 7 258 3 110 1 198 9 262 2 157 3 339 6 242 4 182 1 116 5 70 3 23 3 226 3 227 6 246 6 8 2 9 1 290 1 147 1 50 8 188 1 205 9 148 1 269 5 166 5 251 2 55 1 28 9 252 1 56 2 278 2 231 6 60 1 83 1 
257 1 15 2 258 2 20 1 262 1 198 3 157 1 242 1 182 1 116 3 70 1 23 1 226 1 227 2 8 1 246 2 50 3 205 3 188 1 251 1 28 4 56 1 31 1 278 1 82 1 231 2 
257 2 15 3 258 3 110 1 20 2 262 1 198 4 157 2 242 2 182 1 116 4 70 2 23 2 226 2 227 4 246 4 8 1 290 1 50 5 205 4 188 1 251 1 55 1 28 7 56 1 31 1 278 1 82 1 231 4 
114 1 275 1 171 1 
199 1 275 1 
214 1 
322 1 275 1 
322 1 275 3 196 1 171 2 14 1 277 1 
322 1 275 1 14 1 
108 1 275 1 
315 1 136 1 245 1 86 1 
315 1 136 1 245 1 86 1 
315 1 136 1 245 1 86 1 123 1 
315 1 136 1 245 1 86 1 
315 1 136 1 245 1 86 1 
329 1 106 1 280 1 232 1 107 1 213 1 61 1 195 1 309 1 176 1 87 1 18 2 112 1 138 1 139 2 221 1 47 1 185 1 288 2 203 1 119 1 204 1 122 1 51 1 25 1 206 1 26 1 169 1 230 1 328 1 
329 1 106 1 232 1 280 1 107 1 213 1 61 1 195 2 197 1 309 1 176 1 137 1 87 1 18 2 138 1 139 3 221 1 47 1 185 1 288 3 203 1 119 1 204 1 122 1 51 1 206 1 169 1 230 1 104 1 328 1 
106 1 280 1 232 1 107 1 213 1 61 1 195 2 197 1 309 1 176 1 87 1 18 2 138 1 139 2 47 1 185 1 288 2 203 1 119 1 204 1 122 1 51 1 230 1 328 1 104 1 
329 1 288 1 280 1 107 1 203 1 213 1 119 2 204 2 237 1 137 1 216 1 167 1 139 1 141 1 322 1 221 1 78 1 47 2 275 1 80 1 185 1 92 1 328 2 
329 1 280 1 232 1 107 1 213 1 61 1 309 1 176 1 87 1 18 2 138 1 139 1 221 1 47 1 185 1 288 1 203 1 119 1 204 1 25 1 206 1 26 1 169 1 230 1 104 1 328 1 
67 1 
304 1 256 4 213 2 258 2 259 2 262 1 140 1 179 1 141 1 182 1 264 1 185 2 186 1 227 2 8 1 187 1 48 1 9 3 50 2 147 1 52 1 189 2 272 2 322 1 56 1 102 2 13 1 12 1 275 1 279 2 280 1 107 2 333 1 198 5 336 2 338 1 339 6 115 1 340 1 116 2 243 2 203 1 249 1 289 1 205 5 251 1 28 2 76 1 168 1 77 1 78 1 80 2 79 1 303 1 131 1 
304 1 256 2 333 1 198 3 179 1 140 1 338 1 339 2 115 1 264 1 187 1 48 1 9 1 289 1 205 3 189 1 168 1 76 1 348 1 13 1 12 1 79 1 
304 1 187 1 256 3 48 1 9 1 289 1 205 3 259 1 333 1 76 1 168 1 198 3 140 1 179 1 338 1 339 1 115 1 348 1 12 1 13 1 116 1 182 1 264 1 79 1 
304 1 256 3 259 1 333 1 198 3 179 1 140 1 338 1 339 2 115 1 264 1 187 1 48 1 9 1 289 1 205 3 189 1 168 1 76 1 272 1 348 1 13 1 12 1 79 1 
304 1 256 4 0 1 84 1 258 2 259 2 41 1 178 1 262 1 179 1 140 2 91 1 182 1 264 1 227 1 187 2 8 1 48 1 9 3 147 1 50 1 189 4 190 1 272 4 56 1 326 1 327 1 102 2 191 1 12 2 13 1 279 2 154 1 333 1 111 1 240 1 198 5 338 1 336 2 339 7 115 1 116 1 243 2 289 1 249 1 205 5 168 2 76 1 348 1 79 1 131 1 
304 1 256 4 258 2 259 2 333 1 262 1 198 4 140 1 179 1 336 2 338 1 339 4 115 1 182 1 116 2 243 2 264 1 186 1 227 1 8 1 187 1 48 1 9 2 249 1 289 1 50 1 147 1 205 4 189 2 28 2 76 1 168 1 272 2 56 1 102 2 13 1 12 1 79 1 279 2 131 1 
304 1 0 1 256 4 154 1 84 1 258 2 259 2 333 1 198 4 262 1 179 1 140 1 336 2 338 1 339 4 115 1 116 1 182 1 243 2 264 1 227 1 8 1 187 1 48 1 9 2 249 1 289 1 50 1 147 1 205 4 189 2 168 1 76 1 272 2 56 1 102 2 13 1 12 1 79 1 279 2 131 1 
304 1 0 1 256 4 154 1 84 1 258 2 259 2 333 1 198 4 262 1 179 1 140 1 336 2 338 1 339 4 115 1 116 1 182 1 243 2 264 1 227 1 8 1 187 1 48 1 9 2 249 1 289 1 50 1 147 1 205 4 189 2 168 1 76 1 272 2 56 1 102 2 13 1 12 1 79 1 279 2 131 1 
304 1 0 1 256 4 259 2 333 1 198 4 262 1 179 1 140 1 336 2 338 1 339 4 115 1 224 1 116 1 182 1 264 1 227 1 8 1 187 1 318 2 48 1 9 2 249 1 289 1 50 1 147 1 205 4 189 2 295 1 28 2 168 1 76 1 207 1 272 2 56 1 13 1 12 1 79 1 279 2 81 2 
304 1 0 1 256 5 154 1 84 1 258 2 259 3 333 1 262 1 198 4 178 1 179 1 140 1 336 2 338 1 339 5 115 1 116 1 182 1 243 2 264 1 227 1 8 1 187 1 48 1 9 2 249 1 289 1 50 1 147 1 205 4 189 3 168 1 76 1 56 1 272 3 102 2 13 1 12 1 79 1 279 2 131 1 
304 1 0 1 256 5 154 1 84 1 258 2 259 3 333 1 262 1 198 4 178 1 179 1 140 1 336 2 338 1 339 5 115 1 116 1 182 1 243 2 264 1 227 1 8 1 187 1 48 1 9 2 249 1 289 1 50 1 147 1 205 4 189 3 168 1 76 1 56 1 272 3 102 2 13 1 12 1 79 1 279 2 131 1 
304 1 256 4 259 2 333 1 262 1 198 4 140 1 179 1 336 2 338 1 339 4 115 1 224 1 116 1 182 1 264 1 186 1 227 1 8 1 187 1 318 2 48 1 9 2 249 1 289 1 50 1 147 1 205 4 189 2 28 2 76 1 168 1 272 2 56 1 13 1 12 1 79 1 279 2 81 2 
229 1 281 1 114 1 325 1 285 1 228 1 74 1 71 1 284 1 302 1 
156 1 2 1 208 1 325 1 285 1 270 1 53 1 302 1 
95 1 325 1 285 1 298 1 210 1 270 1 53 1 302 1 
107 1 180 1 213 1 325 1 285 1 298 1 210 1 185 1 80 1 270 1 53 1 302 1 
107 1 213 1 325 1 285 1 312 1 185 1 80 1 266 1 245 1 267 1 302 1 
226 1 330 1 187 1 332 1 53 1 190 1 168 1 240 1 140 1 157 1 285 1 325 1 191 1 245 1 23 1 302 1 
157 1 164 1 325 1 285 1 245 1 23 1 284 1 302 1 
257 1 325 1 285 1 270 1 70 1 284 1 255 1 302 1 
226 1 157 1 325 1 285 1 245 1 23 1 284 1 302 1 
157 1 164 1 325 1 285 1 312 1 245 1 23 1 302 1 
257 1 325 1 285 1 312 1 270 1 70 1 255 1 302 1 
226 1 157 1 325 1 285 1 312 1 245 1 23 1 302 1 
226 1 157 1 325 1 285 1 245 1 23 1 302 1 
280 1 107 1 213 1 203 1 39 1 270 1 126 1 168 1 140 1 101 1 322 1 325 1 285 1 210 1 275 1 80 1 185 1 14 1 163 1 302 1 
280 1 107 1 248 1 213 1 203 1 270 1 168 1 140 1 322 1 325 1 285 1 210 1 275 1 80 1 185 1 276 1 14 1 163 1 302 1 314 1 
226 1 157 1 325 1 285 1 245 1 23 1 53 1 302 1 
226 1 280 1 107 1 213 1 203 1 39 1 126 1 168 1 112 1 140 1 157 1 101 1 322 1 325 1 285 1 275 1 185 1 170 1 14 1 245 1 23 1 163 1 302 1 
226 1 330 1 187 1 53 1 190 1 168 1 240 1 140 1 157 1 285 1 325 1 313 1 191 1 245 1 23 1 302 1 
146 1 135 1 286 1 244 1 270 1 268 1 88 1 302 1 
146 1 135 1 286 1 244 1 270 1 268 1 88 1 302 1 
146 1 135 1 286 1 244 1 270 1 268 1 88 1 302 1 
146 1 135 1 286 1 244 1 270 1 268 1 88 1 302 1 
146 1 135 1 286 1 244 1 270 1 268 1 88 1 302 1 
317 1 305 1 90 1 4 1 241 1 274 1 292 1 68 1 99 1 202 1 
155 1 40 1 
234 1 4 1 241 1 274 1 299 1 292 1 68 1 172 1 202 1 
317 1 305 1 38 1 320 1 292 1 205 1 165 1 99 1 198 1 274 1 241 1 4 1 68 1 116 1 265 2 301 1 202 1 5 1 
317 1 305 1 38 1 320 1 292 1 205 1 165 1 99 1 198 1 274 1 241 1 4 1 68 1 116 1 265 2 301 1 202 1 5 1 
317 1 305 1 38 1 320 1 292 1 205 1 165 1 99 1 198 1 274 1 241 1 4 1 68 1 116 1 265 2 301 1 202 1 5 1 
105 1 45 1 297 1 
105 1 45 1 297 1 
219 1 33 1 
219 1 45 1 33 1 
49 1 64 1 
15 1 282 1 40 1 175 1 64 1 65 1 155 1 198 1 240 2 140 2 4 1 241 1 68 1 242 1 265 1 5 1 202 1 187 2 49 1 320 1 98 1 292 1 205 1 168 2 127 1 274 1 191 2 
105 1 297 1 
219 1 45 1 33 1 
187 2 53 1 11 1 168 2 140 2 3 1 285 1 325 1 144 1 266 1 245 1 267 1 117 1 302 1 
232 1 280 1 107 2 203 1 213 2 306 1 204 1 61 1 176 1 87 1 18 2 112 1 138 1 169 1 300 1 185 2 230 1 161 1 104 1 
152 1 232 1 280 1 107 1 213 1 203 1 204 1 61 1 176 1 87 1 18 2 138 1 169 1 185 1 230 1 161 1 104 1 
280 1 107 1 203 1 213 1 306 1 204 1 291 1 216 1 141 1 322 1 78 1 275 1 80 1 185 1 
232 1 280 1 107 1 213 1 306 1 203 1 204 1 61 1 176 1 87 1 18 2 138 1 169 1 300 1 185 1 230 1 161 1 104 1 
335 1 
227 1 50 1 114 1 116 1 182 1 218 1 72 1 
227 1 8 1 9 1 147 1 50 1 258 1 205 1 28 1 198 1 262 1 56 1 339 1 102 1 182 1 243 1 116 2 131 1 
280 1 8 1 107 1 203 1 213 1 147 1 73 1 321 1 262 1 199 1 322 1 56 1 275 1 80 1 185 1 14 1 277 1 
212 1 233 1 257 2 258 3 19 1 156 1 262 1 220 1 157 2 181 1 116 4 182 1 70 2 23 2 226 2 316 1 227 4 246 5 8 1 50 7 147 1 125 1 28 6 56 1 231 5 
257 1 154 1 194 1 41 1 111 1 262 1 198 1 240 1 140 1 46 1 23 2 71 1 227 2 8 1 7 1 187 1 147 1 50 2 205 1 190 1 54 2 168 1 229 1 56 1 326 1 327 1 12 1 191 1 
227 1 8 1 147 1 50 1 218 1 262 1 56 1 182 1 116 1 72 1 
287 1 226 2 227 5 246 5 257 2 50 5 194 1 258 5 54 2 28 10 157 2 116 5 70 2 23 2 231 5 
198 1 9 1 339 1 205 1 116 1 182 1 
280 1 107 4 213 4 42 1 262 2 198 3 141 1 339 4 340 1 185 4 343 2 227 2 8 2 203 1 9 2 147 1 50 2 188 1 205 3 251 2 149 1 29 1 77 1 322 1 56 2 78 1 275 1 80 2 303 2 
280 1 107 1 213 1 39 1 177 1 240 2 140 3 285 1 185 1 163 1 187 2 203 1 270 1 190 2 126 1 168 3 101 1 322 1 326 1 325 1 210 1 191 2 275 1 80 1 14 1 302 1 
227 2 246 2 8 1 147 1 50 1 258 2 251 1 86 1 28 4 262 1 56 1 182 2 116 4 231 2 303 1 
324 1 4 1 292 1 
4 1 292 1 99 1 211 1 64 1 
324 1 4 1 292 1 
324 1 4 1 292 1 
94 1 4 1 292 1 
94 1 4 1 292 1 
94 1 4 1 292 1 
4 1 292 1 
241 1 68 1 
229 1 281 1 253 1 228 1 74 1 71 1 302 2 
229 1 281 1 114 1 228 1 74 1 71 1 
226 1 157 1 341 1 245 1 23 1 302 1 
156 1 270 1 125 1 
156 1 2 1 270 1 
156 1 270 1 
245 1 19 1 
287 1 270 1 
156 1 212 1 146 1 270 1 125 1 302 1 
7 1 245 1 23 1 
270 1 6 1 
229 1 46 1 74 1 71 1 
146 1 157 1 245 1 23 1 302 1 
226 1 146 1 157 1 245 1 23 1 302 1 
229 1 146 1 74 1 71 1 302 1 
156 1 271 1 146 1 341 1 270 1 296 1 125 1 302 3 
156 1 212 1 146 1 270 1 125 1 302 1 
156 1 212 1 146 1 341 1 270 1 125 1 302 2 
156 1 212 1 146 1 270 1 125 1 302 1 
156 1 212 1 146 1 270 1 125 1 302 1 
156 1 212 1 146 1 270 1 125 1 302 1 
156 1 212 1 146 1 270 1 125 1 302 1 
156 1 212 1 146 1 341 1 270 1 125 1 302 2 
156 1 212 1 271 1 146 1 270 1 125 1 302 2 
229 1 281 1 228 1 74 1 71 1 
156 1 212 1 271 1 146 1 270 1 125 1 302 2 
168 1 187 1 140 1 98 1 13 1 34 1 192 1 
187 1 98 1 238 1 124 1 168 1 140 1 200 1 222 1 13 1 342 1 34 1 192 1 
280 1 107 1 203 1 141 1 213 1 322 1 78 1 114 1 275 1 185 1 80 1 
132 1 280 1 187 1 107 1 213 1 203 1 98 1 168 2 240 1 140 2 101 1 322 1 191 1 275 1 80 1 185 1 14 1 163 1 
132 1 280 1 107 1 213 1 108 1 240 2 140 2 159 1 115 1 145 1 185 1 163 1 343 1 187 2 203 1 289 1 98 1 168 2 101 1 322 2 191 1 12 2 275 3 14 2 
132 1 280 1 107 1 213 1 108 1 240 2 140 2 159 1 115 1 145 1 185 1 163 1 343 1 314 1 187 2 203 1 289 1 98 1 168 2 322 2 191 1 12 2 275 3 14 2 
280 1 107 3 213 3 203 1 108 1 205 2 333 1 198 2 66 1 199 1 322 1 159 1 32 1 339 1 160 1 116 1 182 1 275 4 80 1 185 3 171 1 14 1 343 1 
280 1 107 3 213 3 203 1 108 1 205 2 294 1 333 1 198 2 199 1 322 1 159 1 339 1 160 1 116 1 182 1 275 4 80 1 185 3 171 1 14 1 343 1 
280 1 107 1 203 1 213 1 129 1 185 1 
280 3 107 7 213 7 203 2 24 1 133 1 236 1 100 1 112 1 334 1 30 1 322 2 129 1 143 1 59 1 275 3 80 2 185 6 277 1 14 1 104 1 
132 1 280 1 107 1 213 1 281 1 39 1 112 1 240 1 140 2 285 2 144 1 185 1 163 1 71 1 187 1 203 1 228 1 53 1 74 1 126 1 168 2 229 1 101 1 322 1 325 2 191 1 275 1 170 1 14 1 36 1 302 2 
107 1 213 1 15 1 307 1 333 1 218 1 42 1 262 2 198 3 199 1 339 2 116 1 182 1 185 1 225 1 72 1 227 1 8 2 9 1 50 1 147 2 205 3 294 1 150 1 56 2 275 2 80 1 171 1 
280 1 107 1 213 1 203 1 214 1 73 1 322 1 129 1 275 1 171 1 185 1 277 1 14 1 
280 1 107 4 213 4 203 1 319 1 112 1 141 1 322 1 78 1 160 1 275 1 80 1 185 4 
280 2 107 2 213 2 203 1 236 1 308 1 109 1 30 1 322 1 57 1 275 1 185 2 14 1 343 1 
280 1 107 1 203 1 213 1 185 1 80 1 230 1 176 1 87 1 18 1 
100 1 112 1 280 1 107 2 203 1 213 2 322 1 275 1 185 2 104 1 217 1 
280 2 107 5 213 5 203 2 319 1 133 1 112 1 100 1 334 1 141 1 322 2 78 1 275 3 80 1 185 4 343 1 
280 2 107 5 213 5 203 2 319 1 133 1 112 1 100 1 141 1 322 2 78 1 128 1 275 3 80 1 185 4 343 1 
132 1 280 1 187 1 107 1 213 1 203 1 98 1 168 2 240 1 140 2 322 1 191 1 275 1 80 1 185 1 14 1 163 1 314 1 
280 2 107 1 213 1 203 1 236 1 30 1 322 1 59 1 275 1 185 1 277 1 14 1 343 1 
43 1 69 1 346 1 63 1 
1 1 43 1 198 1 15 1 201 1 205 1 69 1 346 1 63 1 93 1 
187 1 346 1 63 1 11 1 168 1 43 1 140 1 3 1 117 1 
201 1 346 1 93 1 
106 1 114 1 122 1 51 1 
288 1 329 1 106 1 139 1 221 1 122 1 51 1 
139 1 119 1 328 1 
329 1 288 3 106 1 193 2 122 1 51 1 25 1 17 1 139 3 221 1 337 1 130 1 
288 2 329 1 106 1 139 2 221 1 122 1 51 1 195 1 62 1 
329 1 288 1 122 1 25 1 176 1 239 1 18 1 138 1 139 1 221 1 223 1 
288 1 329 1 106 1 139 1 221 1 122 1 25 1 
288 1 329 1 106 2 139 1 221 1 51 1 25 1 
288 2 329 2 106 1 139 2 113 1 151 1 221 2 122 1 25 1 173 1 
329 1 288 3 106 1 250 1 51 1 195 2 122 2 25 1 293 1 85 1 139 3 221 1 223 1 
329 1 288 2 106 1 232 1 331 1 122 1 51 1 195 1 25 1 176 1 18 2 138 1 139 2 221 1 230 1 
329 2 288 4 106 1 51 1 62 1 195 2 122 2 25 1 85 1 310 1 139 4 221 2 223 1 
288 1 329 1 106 1 139 1 221 1 122 1 51 1 25 1 
288 4 329 1 106 2 193 1 51 2 195 2 122 3 85 1 17 1 139 4 221 1 337 1 223 1 162 1 
329 1 288 2 106 1 134 1 120 1 122 1 195 1 51 1 25 1 139 2 221 1 273 1 
329 1 288 3 106 1 193 2 122 1 51 1 25 1 17 2 311 1 139 3 221 1 337 1 
247 2 89 1 122 2 75 1 
288 1 329 1 37 1 139 1 221 1 25 1 
288 2 329 1 106 1 139 2 221 1 122 1 51 1 195 1 293 1 25 1 
96 1 
288 1 329 1 106 1 139 1 221 1 122 1 51 1 25 1 
329 1 288 3 106 1 193 1 195 1 51 1 122 1 25 1 293 1 139 3 221 1 
223 1 122 1 85 1 162 1 
106 1 122 1 

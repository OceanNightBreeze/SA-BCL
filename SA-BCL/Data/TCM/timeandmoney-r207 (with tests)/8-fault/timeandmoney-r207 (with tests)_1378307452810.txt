#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 286 225 44 79 254 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 171 225 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 171 225 30 205 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 186 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 286 225 44 79 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8887 | = null
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V | STATEMENT | 842 | stmt -> ;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 4096 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2408 | if (x) -> if (!x)
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3455 | < -> >
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z | OPERATOR | 2861 | != -> ==
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5189 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
211 5 355 2 356 6 357 1 4 2 233 2 9 1 46 1 307 2 218 1 287 1 126 1 110 1 200 1 237 2 238 1 180 3 224 1 266 9 317 9 227 2 292 1 89 1 297 1 296 1 187 4 348 2 153 1 
211 5 356 6 355 2 357 1 4 2 233 2 9 1 46 1 307 2 218 1 287 1 126 1 110 1 200 1 237 2 238 1 180 3 224 1 266 9 317 9 227 2 292 1 89 1 297 1 296 1 187 4 348 2 153 1 
211 6 356 7 355 2 357 1 4 2 233 2 9 1 46 1 307 2 218 1 287 1 126 1 110 1 200 1 237 2 238 1 180 4 224 1 266 10 317 10 227 2 292 1 89 1 297 1 296 1 187 5 348 2 153 1 
211 4 356 4 355 1 357 1 4 2 233 2 9 1 46 1 307 2 218 1 287 1 126 1 110 1 200 1 237 2 238 1 180 2 224 1 266 7 317 7 227 2 292 1 89 1 297 1 296 1 187 3 348 2 
211 3 110 1 238 1 355 2 356 3 180 1 4 1 227 1 317 4 266 4 233 1 9 1 89 1 296 1 187 2 307 1 348 1 153 1 
211 1 237 1 96 1 227 1 317 2 266 2 233 1 292 1 9 1 295 1 89 1 296 1 307 1 348 1 287 1 375 1 
211 2 237 1 356 1 180 1 227 2 317 3 266 3 233 2 9 1 89 1 296 1 187 1 218 1 
211 5 356 7 355 2 4 1 233 2 9 1 46 1 218 1 307 1 34 1 110 1 200 1 237 1 238 1 180 3 266 9 317 9 227 2 89 1 187 4 272 1 296 1 348 1 153 1 
211 5 356 7 355 2 4 1 233 2 9 1 46 1 218 1 307 1 34 1 110 1 200 1 237 1 238 1 180 3 266 9 317 9 227 2 89 1 187 4 272 1 296 1 348 1 153 1 
347 1 270 1 232 1 
312 2 270 1 151 1 
157 1 51 2 124 2 115 2 202 2 323 1 182 2 168 2 
157 1 94 1 122 1 277 1 164 1 68 1 25 2 362 1 168 2 194 1 124 2 6 2 305 1 308 1 145 1 172 1 219 1 220 1 311 1 32 1 221 1 51 3 314 1 290 1 182 2 341 1 343 2 149 1 344 1 84 1 115 2 202 3 17 1 299 2 323 1 135 1 154 2 
51 1 124 1 58 1 115 1 202 1 284 1 323 1 332 1 182 1 168 1 
51 1 232 1 147 1 16 1 55 1 168 1 183 1 38 1 85 1 58 1 202 1 270 1 309 1 376 1 
51 1 232 1 147 1 182 1 16 1 55 2 168 1 183 1 85 2 124 1 115 1 58 1 202 1 270 1 376 1 
85 1 19 1 47 1 139 1 55 1 
85 2 270 1 232 1 47 1 139 1 226 1 148 1 55 2 
85 1 47 1 55 1 
51 1 65 1 139 1 332 1 182 1 55 1 168 1 85 1 124 1 58 1 115 1 202 1 284 1 323 1 
270 1 
85 2 270 1 232 1 47 1 67 1 139 1 226 1 55 2 
18 1 232 1 222 2 111 2 139 2 241 1 226 1 55 5 23 1 184 1 85 5 283 1 364 1 270 1 47 2 230 2 209 1 50 1 156 1 
157 1 347 1 
51 2 2 1 277 1 290 1 182 1 360 1 168 1 343 1 149 1 194 1 344 1 124 1 202 2 6 1 17 1 299 1 219 1 189 1 311 1 221 1 
51 2 157 2 182 1 214 1 168 2 124 1 115 1 202 2 119 1 
352 1 2 1 5 1 
157 1 51 1 277 1 290 1 343 1 194 1 149 1 344 1 202 1 6 1 17 1 271 1 299 1 219 1 311 1 221 1 
51 5 157 1 288 1 372 1 182 4 360 2 168 5 38 1 124 4 115 1 202 5 189 1 351 1 119 1 
51 2 124 2 58 1 202 2 217 1 332 1 182 2 168 2 
157 1 51 3 124 3 115 1 202 3 182 3 360 1 168 3 
51 1 124 1 58 1 202 1 332 1 182 1 168 1 
51 1 124 1 58 1 115 1 202 1 182 1 214 1 168 1 119 1 
157 1 328 1 122 1 277 1 68 1 360 1 25 2 362 1 168 3 194 1 124 3 6 1 308 1 145 1 172 1 219 1 220 1 311 1 221 1 177 1 51 4 147 1 314 1 290 1 16 1 182 3 55 1 341 1 183 1 343 1 149 1 344 1 85 1 115 2 58 1 202 4 17 1 299 1 189 1 323 1 135 1 154 1 119 1 376 1 
157 1 51 2 124 1 202 2 372 1 182 1 360 1 168 2 38 1 
51 3 328 1 147 1 223 1 182 3 16 1 55 1 360 2 168 3 183 1 85 1 124 3 115 1 58 1 202 3 270 1 189 1 119 1 376 1 
51 2 2 1 5 1 182 2 360 1 168 2 124 2 115 1 202 2 119 1 
157 1 51 1 277 1 290 1 343 1 194 1 149 1 344 1 202 1 6 1 17 1 299 1 219 1 311 1 221 1 
157 1 51 1 277 1 343 1 194 1 149 1 73 1 101 1 202 1 6 1 17 1 299 1 219 1 311 1 221 1 
94 1 352 1 275 1 161 1 2 1 278 1 5 1 68 1 25 2 362 1 361 1 195 1 145 1 308 2 172 1 171 1 286 1 314 1 129 1 150 1 248 1 135 1 273 1 154 3 
51 1 124 1 58 1 202 1 217 1 147 1 182 1 168 1 
120 1 322 1 
120 1 322 1 
198 1 264 1 
198 1 264 1 
120 1 322 1 198 1 264 1 
120 1 322 1 192 1 
120 1 322 1 192 1 
120 1 322 1 192 1 
120 1 322 1 337 1 
120 2 42 1 198 1 322 2 349 1 264 1 
120 1 322 1 201 1 
120 1 322 1 201 1 
120 1 322 1 201 1 
157 1 120 1 329 1 66 1 95 1 193 1 69 1 168 2 124 2 363 1 336 1 337 1 51 2 182 2 55 1 342 1 85 1 202 2 246 1 90 1 188 1 322 1 118 1 326 1 
120 2 52 1 121 1 66 1 130 1 55 2 82 1 70 2 342 2 363 2 85 2 320 1 270 1 90 3 322 2 188 2 336 2 349 1 310 1 
307 1 348 1 4 1 
307 1 348 1 96 1 
179 1 307 3 4 2 96 1 207 1 98 1 
307 2 4 1 109 1 96 1 207 1 98 1 
307 2 4 1 96 1 207 1 98 2 
232 1 1 1 95 1 193 1 139 4 123 1 140 1 333 1 256 1 282 1 105 1 106 1 171 1 47 1 286 1 312 1 222 1 111 1 225 1 226 1 241 3 55 5 56 2 85 5 270 1 248 1 230 1 209 1 273 1 326 1 156 1 
19 5 0 1 232 1 95 4 138 5 139 7 123 2 140 3 333 2 141 1 282 1 283 1 105 3 171 3 47 6 286 3 261 1 312 3 128 1 222 2 111 2 225 3 226 1 241 8 55 9 293 1 132 1 85 9 270 2 248 3 230 2 209 3 273 3 156 1 
232 1 1 1 95 1 139 2 123 1 140 1 333 1 256 1 283 1 105 1 171 1 286 1 312 2 222 1 111 1 225 1 241 3 55 3 56 1 85 3 270 2 248 1 151 1 230 1 273 1 209 1 
232 1 1 1 95 2 123 1 139 3 140 2 333 1 141 1 256 1 283 1 105 2 171 2 286 2 312 3 222 1 111 1 225 2 241 5 55 4 56 2 293 1 132 1 85 4 270 2 248 2 151 1 230 1 273 2 209 2 
347 1 59 1 17 1 
252 1 17 1 
331 1 
17 1 277 1 311 1 
57 1 17 1 
17 1 277 1 
59 2 17 3 277 1 240 1 311 1 304 1 
250 1 94 3 127 1 370 1 291 1 36 1 242 1 195 3 257 2 86 1 150 2 308 1 11 1 298 1 273 1 154 4 
250 1 94 3 127 1 370 1 291 1 36 1 242 1 195 3 257 2 86 1 150 2 308 1 11 1 298 1 273 1 154 4 
250 1 94 3 127 1 370 1 165 1 291 1 36 1 242 1 195 3 257 2 86 1 150 2 308 1 11 1 298 1 273 1 154 4 
250 1 94 5 225 2 79 1 213 2 254 1 195 1 257 1 86 2 44 1 150 1 259 1 28 1 308 6 171 2 248 2 286 2 273 2 154 11 125 2 
94 4 250 1 159 1 68 2 25 4 362 2 234 1 257 2 195 4 145 2 308 2 11 1 370 1 36 1 291 1 242 1 345 1 86 1 150 3 298 1 135 2 273 1 154 6 
211 1 356 1 4 1 279 1 96 1 24 1 233 1 6 1 9 1 107 1 307 2 236 1 12 1 221 1 369 1 146 1 237 1 179 1 54 1 266 2 317 2 227 1 343 1 149 1 318 1 89 1 296 1 299 1 348 1 155 1 
211 1 40 1 356 2 4 1 279 1 96 1 233 1 142 1 6 1 9 1 107 1 307 2 236 1 12 1 221 1 146 1 237 1 179 1 54 1 266 3 317 3 227 1 343 1 149 1 318 1 89 1 299 1 348 1 325 1 155 1 
211 1 146 1 40 1 237 1 179 1 356 2 4 1 54 1 279 1 96 1 317 2 266 2 343 1 149 1 142 1 6 1 9 1 89 1 307 2 299 1 348 1 236 1 12 1 221 1 155 1 
249 1 276 1 277 1 167 1 72 1 194 1 233 1 6 1 236 2 221 1 146 2 237 2 14 1 54 2 340 1 266 1 317 1 227 1 343 1 149 1 17 1 299 1 325 1 
40 1 4 1 279 1 96 1 24 1 233 1 6 1 107 1 307 2 236 1 12 1 221 1 146 1 237 1 179 1 54 1 266 1 317 1 227 1 343 1 149 1 318 1 296 1 299 1 348 1 155 1 
174 1 
232 1 276 1 330 1 41 2 277 1 280 1 97 1 333 1 194 2 99 2 102 1 45 1 6 2 334 1 335 2 285 1 47 6 51 1 147 1 289 1 111 1 241 2 16 1 55 5 343 2 149 1 58 1 202 1 17 1 299 2 300 1 151 2 209 2 156 1 249 1 162 2 20 1 168 1 309 1 31 1 221 1 312 2 371 2 222 1 315 1 226 3 183 1 38 1 85 5 319 4 88 2 270 2 229 2 230 1 376 1 
330 1 280 1 67 1 97 1 168 1 47 2 309 1 31 1 51 1 147 1 315 1 16 1 226 1 55 3 183 1 38 1 85 3 319 2 58 1 202 1 229 1 376 1 
232 1 330 1 280 1 67 1 97 1 168 1 99 1 47 1 309 1 31 1 51 1 147 1 315 1 16 1 226 1 55 3 183 1 38 1 85 3 319 3 58 1 202 1 270 1 376 1 
232 1 330 1 41 1 67 1 280 1 97 1 168 1 99 1 47 2 309 1 31 1 51 1 147 1 315 1 226 1 16 1 55 3 183 1 38 1 85 3 319 3 58 1 202 1 270 1 229 1 376 1 
232 5 330 1 41 4 280 1 97 1 99 4 144 1 10 1 335 2 47 7 51 1 147 1 289 1 111 1 16 1 241 1 55 5 58 1 202 1 300 1 151 2 209 1 156 1 353 1 162 2 67 1 168 1 170 1 309 1 31 1 263 1 371 2 222 1 315 1 226 3 183 1 38 1 319 6 85 5 88 2 270 5 229 4 230 1 376 1 
232 1 330 1 41 2 280 1 97 1 99 2 45 1 335 2 47 4 51 1 147 1 289 1 111 1 16 1 241 1 55 4 58 1 202 1 300 1 151 2 209 1 156 1 162 2 168 1 309 1 31 1 312 2 371 2 222 1 315 1 226 2 183 1 38 1 319 4 85 4 88 2 270 2 229 2 230 1 376 1 
232 1 162 2 330 1 41 2 280 1 97 1 168 1 99 2 170 1 335 2 10 1 47 4 309 1 31 1 263 1 51 1 371 2 147 1 289 1 222 1 111 1 315 1 226 2 241 1 16 1 55 4 183 1 38 1 85 4 319 4 58 1 202 1 88 2 270 1 229 2 300 1 151 2 230 1 209 1 376 1 156 1 
232 1 162 2 330 1 41 2 280 1 97 1 168 1 99 2 170 1 335 2 10 1 47 4 309 1 31 1 263 1 51 1 371 2 147 1 289 1 222 1 111 1 315 1 226 2 241 1 16 1 55 4 183 1 38 1 85 4 319 4 58 1 202 1 88 2 270 1 229 2 300 1 151 2 230 1 209 1 376 1 156 1 
232 1 330 1 41 2 280 1 97 1 168 1 99 2 100 2 170 1 335 2 47 4 309 1 31 1 74 1 312 2 51 1 371 2 147 1 289 1 222 1 111 1 315 1 226 2 241 1 16 1 55 4 183 1 38 1 85 4 319 4 58 1 202 1 270 1 61 1 229 2 230 1 206 2 209 1 210 1 376 1 156 1 
353 1 232 1 162 2 330 1 41 3 280 1 97 1 168 1 99 3 170 1 335 2 10 1 47 5 309 1 31 1 263 1 51 1 371 2 147 1 289 1 222 1 111 1 315 1 226 2 241 1 16 1 55 4 183 1 38 1 85 4 319 5 58 1 202 1 88 2 270 1 229 3 300 1 151 2 230 1 209 1 156 1 376 1 
353 1 232 1 162 2 330 1 41 3 280 1 97 1 168 1 99 3 170 1 335 2 10 1 47 5 309 1 31 1 263 1 51 1 371 2 147 1 289 1 222 1 111 1 315 1 226 2 241 1 16 1 55 4 183 1 38 1 85 4 319 5 58 1 202 1 88 2 270 1 229 3 300 1 151 2 230 1 209 1 156 1 376 1 
232 1 330 1 41 2 280 1 97 1 100 2 99 2 45 1 335 2 47 4 51 1 147 1 289 1 111 1 16 1 241 1 55 4 58 1 202 1 206 2 210 1 209 1 156 1 168 1 309 1 31 1 312 2 371 2 222 1 315 1 226 2 183 1 38 1 319 4 85 4 270 1 229 2 230 1 376 1 
157 1 352 1 94 2 370 1 2 1 314 1 291 1 36 1 5 1 68 1 25 2 242 1 361 1 362 1 257 1 195 2 347 1 150 2 308 1 145 1 298 1 172 1 135 1 154 3 273 1 
157 1 352 10 94 6 122 1 39 1 2 10 213 3 5 2 68 2 25 4 362 2 169 1 195 1 259 1 305 1 28 1 308 8 145 2 172 1 171 2 286 2 368 1 125 3 314 2 225 2 245 1 150 1 248 2 135 2 154 14 273 2 302 1 
157 1 94 1 122 1 277 1 5 1 68 1 360 1 25 2 168 1 362 1 194 1 124 1 103 1 6 1 8 1 305 1 145 1 308 1 219 1 172 1 311 1 221 1 51 2 290 1 314 1 182 1 343 1 112 1 149 1 344 1 202 2 17 1 271 1 299 1 189 1 135 1 154 2 302 1 
94 7 2 5 3 1 277 2 5 5 194 1 195 4 6 1 145 3 286 2 51 3 339 1 290 2 291 1 242 1 341 2 343 1 113 2 149 2 344 2 202 3 150 4 17 2 298 1 299 1 248 2 154 15 302 1 157 1 158 2 352 5 122 1 358 2 360 1 68 3 25 6 362 3 168 1 257 1 124 1 305 1 308 8 29 2 172 3 219 2 171 2 311 2 221 2 370 1 314 3 225 2 36 1 182 1 189 1 135 3 273 3 
94 1 249 1 40 1 122 1 354 1 276 1 303 1 277 2 360 1 68 2 25 4 361 1 168 1 362 2 194 2 124 1 216 1 196 1 6 8 143 1 305 1 145 2 308 1 172 2 221 2 369 1 51 1 314 2 182 1 343 8 228 1 149 2 84 2 202 1 203 1 17 3 299 7 135 2 154 2 
51 1 94 2 35 1 314 1 225 1 182 1 68 1 25 2 168 1 362 1 124 1 115 1 202 1 145 1 171 1 172 1 135 1 154 2 273 1 302 1 119 1 
94 1 314 1 278 1 68 1 25 2 361 1 362 1 145 1 172 1 171 1 135 1 154 1 273 1 
352 1 2 1 314 1 129 1 5 1 68 1 25 2 361 1 362 1 195 1 150 1 145 1 308 2 172 1 248 1 286 1 135 1 154 2 
94 1 352 1 2 1 5 1 68 1 25 2 362 1 361 1 195 1 145 1 308 2 171 1 172 1 286 1 314 1 225 1 150 1 248 1 135 1 273 1 154 3 
94 1 314 1 278 1 68 1 25 2 362 1 143 1 145 1 172 1 171 1 135 1 154 1 273 1 
352 1 2 1 314 1 129 1 5 1 68 1 25 2 362 1 195 1 150 1 143 1 145 1 308 2 172 1 248 1 286 1 135 1 154 2 
94 1 352 1 2 1 5 1 68 1 25 2 362 1 195 1 143 1 145 1 308 2 171 1 172 1 286 1 314 1 225 1 150 1 248 1 135 1 273 1 154 3 
94 1 352 1 2 1 5 1 68 1 25 2 362 1 195 1 145 1 308 2 171 1 172 1 286 1 314 1 225 1 150 1 248 1 135 1 154 3 273 1 
157 1 94 1 122 1 277 1 68 1 25 2 362 1 194 1 6 1 305 1 145 1 308 1 219 1 172 1 311 1 221 1 51 1 290 1 314 1 341 1 343 1 149 1 344 1 202 1 17 1 299 1 135 1 154 2 
157 1 94 1 122 1 277 1 68 1 25 2 362 1 194 1 101 1 73 1 6 1 305 1 145 1 308 1 219 1 172 1 311 1 221 1 51 1 314 1 343 1 149 1 202 1 17 1 299 1 135 1 152 1 154 2 
94 1 352 1 2 1 5 1 68 1 25 2 362 1 195 1 145 1 308 2 171 1 172 1 286 1 314 1 225 1 150 1 248 1 135 1 273 1 154 3 302 1 
352 1 94 1 2 1 277 1 5 1 68 1 25 2 362 1 195 1 6 1 308 2 145 1 171 1 219 1 172 1 286 1 311 1 221 1 369 1 51 1 290 1 314 1 225 1 341 1 113 1 343 1 149 1 344 1 202 1 150 1 17 1 299 1 248 1 135 1 154 3 273 1 
94 1 231 1 68 1 25 2 362 1 168 1 124 1 145 1 308 1 172 1 171 1 286 1 51 1 314 1 225 1 182 1 115 1 202 1 248 1 135 1 273 1 154 2 119 1 302 1 
251 2 94 5 213 2 68 2 25 4 362 2 234 1 195 1 104 1 259 1 28 1 145 2 308 8 171 2 366 1 286 2 125 1 176 1 265 1 225 2 83 1 150 1 60 1 248 2 135 2 208 1 154 13 273 2 
251 2 94 5 213 2 68 2 25 4 362 2 234 1 195 1 104 1 259 1 28 1 145 2 308 8 171 2 366 1 286 2 125 1 176 1 265 1 225 2 83 1 150 1 60 1 248 2 135 2 208 1 154 13 273 2 
251 3 94 17 213 4 359 1 68 1 25 2 362 1 234 1 257 1 195 6 104 1 259 2 28 2 145 1 308 22 171 7 366 1 286 7 30 1 125 4 76 1 265 1 370 1 178 1 313 1 225 7 291 1 36 1 242 1 83 1 245 2 150 6 60 1 298 1 205 1 248 7 135 1 208 1 154 39 273 8 
251 1 94 4 213 2 68 2 25 4 362 2 234 1 195 2 104 1 259 1 28 1 145 2 308 7 171 2 366 1 286 2 125 1 176 1 265 1 80 1 225 2 150 2 60 1 248 2 135 2 208 1 154 11 273 2 
159 1 251 4 94 10 213 2 359 1 68 2 25 4 362 2 234 1 195 1 104 1 259 2 308 14 145 2 171 3 366 2 286 3 30 1 125 2 76 1 265 1 178 1 313 1 225 3 83 1 150 1 60 2 248 3 205 1 135 2 208 1 154 24 273 3 
327 1 363 1 120 1 121 1 188 1 322 1 336 1 349 1 82 1 342 1 
329 1 337 1 
363 1 120 1 197 1 239 1 188 1 322 1 48 1 336 1 342 1 
163 1 192 1 
42 1 201 1 181 1 
120 1 52 1 121 1 66 1 130 1 55 1 82 1 70 1 342 1 85 1 363 1 270 1 90 2 322 1 188 1 336 1 349 1 310 1 
120 1 52 1 121 1 66 1 130 1 55 1 82 1 70 1 342 1 85 1 363 1 270 1 90 2 322 1 188 1 336 1 349 1 310 1 
120 1 52 1 121 1 66 1 130 1 55 1 82 1 70 1 342 1 85 1 363 1 270 1 90 2 322 1 188 1 336 1 349 1 310 1 
163 1 42 1 192 1 
163 1 42 1 192 1 
201 1 181 1 
42 1 201 1 181 1 
246 1 69 1 
157 1 120 1 329 1 95 1 193 1 139 1 69 1 70 1 168 2 363 1 124 2 336 1 337 1 51 2 130 1 182 2 55 1 342 1 85 1 202 2 246 1 90 1 188 1 322 1 247 1 118 1 326 1 
94 1 122 1 277 1 303 1 68 1 25 2 168 2 362 1 215 1 6 2 305 1 145 1 308 1 172 1 108 1 173 1 49 1 221 1 51 2 13 1 314 1 343 2 228 1 149 1 84 2 202 2 17 1 299 2 135 1 154 2 302 1 
369 1 40 1 179 1 4 1 54 1 96 1 131 1 343 2 149 1 6 2 294 1 307 2 299 2 107 1 348 1 12 1 262 1 221 1 155 1 
40 1 179 1 4 1 54 1 96 1 131 1 343 1 149 1 6 1 321 1 307 2 299 1 107 1 348 1 12 1 155 1 221 1 
249 1 276 1 277 1 54 1 343 1 72 1 149 1 194 1 6 1 17 1 299 1 367 1 262 1 221 1 
40 1 179 1 4 1 54 1 96 1 131 1 343 1 149 1 6 1 294 1 307 2 299 1 107 1 348 1 12 1 262 1 155 1 221 1 
93 1 
18 1 347 1 364 1 270 1 232 1 241 1 209 1 
162 1 232 1 47 1 312 1 222 1 111 1 241 1 226 1 55 1 85 1 88 1 270 2 300 1 151 1 230 1 209 1 156 1 
252 2 277 1 358 1 140 2 333 1 304 1 194 1 281 1 258 1 105 2 6 1 260 1 171 1 47 1 286 1 311 1 175 1 221 1 312 4 53 1 222 2 111 2 225 1 226 1 241 4 55 1 343 1 149 2 85 1 134 1 270 2 17 3 299 1 248 1 151 2 230 2 350 1 209 2 273 1 156 2 92 1 
312 4 313 1 222 1 111 1 225 1 213 1 241 2 140 3 259 1 105 3 270 2 171 1 205 1 151 2 30 1 230 1 273 1 209 3 125 1 156 1 
65 1 332 1 168 1 281 2 124 1 284 1 10 1 51 1 370 1 222 1 111 1 291 1 36 1 241 3 182 1 55 1 85 1 58 1 115 1 202 1 186 1 248 2 323 1 230 1 273 2 209 3 156 1 
18 1 232 1 222 1 111 1 241 1 364 1 270 1 230 1 209 1 156 1 
312 2 225 1 241 2 140 1 281 1 105 1 270 1 171 1 248 1 286 1 151 1 273 1 209 1 
85 1 270 1 232 1 47 1 226 1 55 1 
249 1 276 1 277 1 333 2 194 2 102 2 283 1 6 4 334 1 285 1 47 4 221 1 222 2 373 1 111 2 37 1 241 2 226 2 55 3 343 4 149 1 114 1 85 3 17 1 299 4 117 2 230 2 209 2 156 1 
157 1 122 1 277 1 68 1 25 2 362 1 168 2 194 1 124 2 6 1 308 1 145 1 219 1 172 1 220 1 311 1 221 1 51 3 290 1 314 1 182 2 341 1 343 1 149 1 344 1 115 2 202 3 17 1 299 1 323 1 135 1 154 1 
312 4 232 2 222 1 111 1 241 1 140 2 333 1 257 1 102 1 105 2 270 4 151 2 230 1 209 2 156 1 
363 1 185 1 188 1 
363 1 185 1 188 1 
363 1 185 1 188 1 
363 1 121 1 204 1 188 1 69 1 
363 1 188 1 33 1 
363 1 188 1 33 1 
363 1 188 1 33 1 
363 1 188 1 
120 1 322 1 
94 3 159 1 370 1 36 1 291 1 68 2 25 4 242 1 362 2 257 1 195 3 150 2 308 2 11 1 145 2 298 1 135 2 273 1 154 5 
94 2 370 1 36 1 291 1 242 1 195 2 257 1 347 1 150 2 308 1 298 1 273 1 154 3 
94 1 225 1 68 1 243 1 25 2 362 1 195 1 150 1 308 2 145 1 171 1 248 1 286 1 135 1 273 1 154 3 
94 2 213 2 225 1 195 1 150 1 259 1 28 1 308 4 171 1 248 1 286 1 154 6 125 1 273 1 
94 8 159 2 213 2 68 2 25 4 362 2 169 1 257 1 195 7 27 1 28 1 11 2 308 10 145 2 171 2 286 2 125 2 370 1 225 2 291 2 36 2 242 1 245 1 150 5 298 1 248 2 135 2 273 3 154 18 
308 1 213 1 154 1 
94 1 154 1 125 1 
94 2 358 1 225 1 68 1 25 2 243 1 362 1 195 2 150 2 145 1 308 3 171 1 248 1 286 1 135 1 154 5 273 1 
94 4 213 1 68 1 25 2 362 1 234 1 195 1 259 1 308 6 145 1 171 2 286 2 30 1 125 1 76 1 178 1 313 1 225 2 150 1 205 1 248 2 135 1 154 10 273 2 
94 1 370 1 154 1 273 1 
94 1 159 1 291 1 36 1 68 1 242 1 25 2 362 1 195 2 150 1 27 1 11 1 308 2 145 1 298 1 135 1 154 3 
94 3 213 1 68 1 25 2 362 1 234 1 257 1 195 2 259 1 308 2 145 1 125 1 370 1 36 1 291 1 242 1 150 2 298 1 205 1 135 1 273 1 154 5 
94 7 213 2 68 2 25 4 362 2 234 1 195 3 259 1 28 1 308 11 145 2 171 4 286 4 30 1 125 2 76 1 178 1 313 1 225 4 243 1 245 1 150 3 205 1 248 4 135 2 154 18 273 4 
94 6 159 1 213 1 68 3 25 6 362 3 234 1 257 1 195 3 259 1 308 8 145 3 171 2 286 2 30 1 125 1 76 1 370 1 178 1 313 1 225 2 291 1 36 1 242 1 243 1 150 3 298 1 205 1 248 2 135 3 154 14 273 3 
94 4 213 1 68 2 25 4 362 2 234 1 195 1 259 1 308 6 145 2 171 2 286 2 30 1 125 1 76 1 178 1 313 1 225 2 243 1 150 1 205 1 248 2 135 2 154 10 273 2 
94 3 213 1 68 1 25 2 362 1 234 1 257 1 195 2 259 1 308 2 145 1 125 1 370 1 36 1 291 1 242 1 150 2 298 1 205 1 135 1 273 1 154 5 
94 4 213 1 68 1 25 2 362 1 234 1 195 1 259 1 308 6 145 1 171 2 286 2 30 1 125 1 76 1 178 1 313 1 225 2 150 1 205 1 248 2 135 1 154 10 273 2 
94 4 159 1 213 1 68 3 25 6 362 3 234 1 195 1 259 1 308 7 145 3 171 2 286 2 30 1 125 1 76 1 178 1 313 1 225 2 243 1 150 1 205 1 248 2 135 3 154 11 273 2 
94 4 159 1 213 1 68 3 25 6 362 3 234 1 195 2 259 1 308 7 145 3 171 2 286 2 30 1 125 1 176 1 76 1 178 1 313 1 225 2 150 2 205 1 248 2 135 3 154 11 273 2 
94 4 370 2 36 2 291 2 242 1 257 1 195 7 186 1 150 4 308 2 298 1 11 3 248 1 154 6 273 3 
94 4 159 1 213 1 68 3 25 6 362 3 234 1 195 1 259 1 308 7 145 3 171 2 286 2 30 1 125 1 176 1 76 1 178 1 313 1 225 2 150 1 205 1 248 2 135 3 154 11 273 2 
94 2 370 1 36 1 291 1 195 3 186 1 150 2 308 2 11 1 248 1 273 2 154 4 
94 1 68 1 25 2 362 1 234 1 145 1 171 1 135 1 273 1 154 1 
94 1 225 1 68 1 25 2 362 1 234 1 195 1 150 1 308 2 145 1 171 1 248 1 286 1 135 1 273 1 154 3 
159 1 94 1 36 1 291 1 68 3 25 6 362 3 234 1 195 2 27 1 150 1 308 2 145 3 11 1 135 3 154 3 176 1 
94 3 225 1 79 1 213 1 68 3 25 6 243 1 362 3 234 1 44 1 259 1 145 3 308 3 171 1 248 1 286 1 135 3 273 1 125 2 154 6 176 1 
157 1 51 1 202 1 372 1 22 1 168 1 38 1 
157 1 51 1 274 1 372 1 212 1 22 1 316 1 168 1 38 1 202 1 7 1 62 1 
249 1 347 1 6 1 17 1 276 1 277 1 299 1 343 1 149 1 194 1 221 1 
157 1 51 2 277 1 290 1 182 1 360 1 168 1 343 1 149 1 194 1 124 1 202 2 6 1 17 1 299 1 219 1 311 1 221 1 
157 1 63 1 277 2 360 1 168 2 124 2 6 1 219 1 311 2 221 1 51 2 147 1 290 1 182 1 343 1 183 1 149 1 57 1 58 1 202 2 17 3 299 1 117 1 
157 1 63 1 277 2 360 1 168 2 101 1 124 2 6 2 219 1 311 2 221 1 51 2 147 1 182 1 267 1 343 2 183 1 149 1 57 1 58 1 202 2 17 3 299 2 117 1 
63 1 252 1 232 1 277 1 194 1 6 3 47 1 311 1 221 1 338 1 55 2 267 1 268 1 343 3 149 1 85 2 57 1 59 1 17 4 270 1 299 3 117 1 376 1 
252 1 232 1 65 1 332 1 168 1 124 1 6 1 284 1 175 1 51 1 182 1 55 1 343 1 85 1 58 1 115 1 202 1 17 1 270 1 299 1 117 1 323 1 
196 1 6 1 299 1 343 1 149 1 221 1 
369 1 40 1 354 1 303 1 277 2 343 7 194 2 304 1 149 3 84 1 216 1 196 1 6 7 203 1 17 3 299 6 374 1 75 1 190 1 311 1 221 2 
157 1 352 1 94 2 2 1 277 1 5 1 68 2 360 1 25 4 168 1 362 2 257 1 195 2 124 1 6 1 308 1 145 2 29 1 219 1 172 2 173 1 311 1 221 1 51 2 369 1 370 1 314 2 290 1 291 1 36 1 182 1 242 1 341 1 343 1 113 1 149 1 344 1 202 2 150 2 17 1 298 1 299 1 135 2 154 3 273 1 302 1 
232 1 139 1 332 1 194 1 281 2 6 1 284 1 47 1 51 1 111 2 291 1 241 2 55 2 343 1 244 1 58 1 115 1 202 1 17 1 299 1 248 1 350 1 209 3 156 2 18 1 252 1 65 1 168 1 124 1 258 1 364 1 175 1 370 1 222 2 37 1 36 1 226 1 182 1 85 2 186 1 270 1 323 1 230 2 273 2 92 1 
369 1 277 1 343 2 304 1 149 2 196 1 59 1 6 2 17 2 260 1 299 2 311 1 221 1 
369 1 249 1 276 1 277 1 255 1 267 1 343 4 149 1 194 1 6 4 17 1 299 4 221 1 
277 1 343 2 71 1 149 2 6 2 87 1 17 1 116 1 299 2 117 1 374 1 75 1 311 1 221 1 
6 1 307 1 299 1 348 1 96 1 343 1 149 1 194 1 221 1 155 1 
369 1 40 1 6 2 17 1 277 1 303 1 299 2 343 2 149 1 215 1 221 1 
369 1 249 1 276 1 354 1 303 1 277 2 255 1 343 5 194 1 149 2 216 1 6 5 17 3 299 4 117 1 221 2 
369 1 249 1 276 1 354 1 303 1 277 2 255 1 343 5 194 1 149 2 6 5 17 3 299 4 117 1 199 1 221 2 
157 1 51 2 277 1 182 1 360 1 168 1 343 1 149 1 194 1 124 1 101 1 202 2 6 1 17 1 299 1 219 1 311 1 221 1 
277 1 343 1 304 1 149 2 6 1 17 1 299 1 117 1 374 1 75 1 190 1 311 1 221 1 
51 1 133 1 202 1 13 1 160 1 108 1 253 1 168 1 49 1 
133 1 269 1 301 1 
157 1 133 1 160 1 166 1 253 1 
157 1 328 1 160 2 232 1 147 1 166 2 139 1 253 2 16 1 55 2 183 1 85 2 58 1 133 1 26 1 269 1 270 1 301 1 376 1 
211 1 347 1 9 1 89 1 
211 1 9 1 89 1 266 1 317 1 227 1 233 1 
237 1 236 1 266 1 
211 1 9 1 89 1 296 1 365 1 287 2 43 1 324 1 266 3 317 3 227 1 233 1 
211 1 9 1 89 1 356 1 355 1 266 2 317 2 227 1 233 1 
211 1 110 1 4 1 227 1 317 1 266 1 233 1 296 1 187 1 307 1 348 1 
211 1 9 1 296 1 266 1 317 1 227 1 233 1 
9 2 89 1 296 1 266 1 317 1 227 1 233 1 
211 1 9 1 296 1 77 1 21 1 15 1 266 2 317 2 227 2 233 2 
211 2 200 1 356 2 180 1 227 1 317 3 266 3 233 1 9 1 46 1 89 1 296 1 187 1 
211 1 179 1 356 1 78 1 4 1 96 1 227 1 317 2 266 2 233 1 9 1 89 1 296 1 307 2 348 1 
211 2 355 1 356 2 180 1 227 2 317 4 266 4 233 2 9 1 89 1 296 1 187 1 153 1 
211 1 9 1 89 1 296 1 266 1 317 1 227 1 233 1 
211 3 356 2 180 1 43 1 317 4 266 4 227 1 233 1 9 2 89 2 187 1 287 1 324 1 136 1 
211 1 34 1 356 1 227 1 317 2 266 2 233 1 9 1 296 1 89 1 235 1 137 1 
211 1 227 1 317 3 266 3 43 2 233 1 346 1 9 1 296 1 89 1 324 1 287 2 
211 2 64 1 306 2 91 1 
296 1 266 1 317 1 227 1 191 1 233 1 
211 1 9 1 46 1 89 1 356 1 296 1 266 2 317 2 227 1 233 1 
81 1 
211 1 9 1 89 1 296 1 266 1 317 1 227 1 233 1 
211 1 356 1 227 1 317 3 266 3 233 1 9 1 46 1 296 1 89 1 287 1 
211 1 187 1 180 1 136 1 
211 1 9 1 

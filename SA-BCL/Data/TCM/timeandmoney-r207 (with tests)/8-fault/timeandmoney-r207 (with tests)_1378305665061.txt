#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 28 (119,222) (119,222) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 28 (119,222) (119,222) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 28 (119,222) (119,222) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 28 (119,222) (119,222) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 171 95 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 373 264 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 171 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 235 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 246 (65,362) (65,362) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | CONSTANT | 907 | 0 -> -1
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | != -> ==
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4786 | = null
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 4427 | = null
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 2
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String; | RETURN | 4317 | return null
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12144 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
368 1 110 1 294 1 341 1 222 1 119 1 182 1 28 1 189 1 144 1 253 1 
368 1 110 1 294 1 341 1 222 1 119 1 182 1 28 1 189 1 144 1 253 1 
368 1 110 1 294 1 341 1 222 1 119 1 182 1 28 1 189 1 144 1 253 1 
368 1 110 1 294 1 341 1 222 1 119 1 182 1 28 1 189 1 144 1 253 1 
294 1 140 1 142 1 182 4 36 1 284 1 185 2 253 1 368 1 302 1 116 1 120 1 372 2 246 2 237 3 175 1 65 1 189 4 362 1 
110 1 294 1 182 2 142 1 351 1 144 1 253 1 324 1 368 1 103 1 120 1 175 1 65 1 189 2 248 1 362 1 
110 1 294 2 140 1 182 3 185 1 253 2 368 1 115 1 246 1 237 1 175 1 65 1 189 3 362 1 
182 9 36 1 185 4 284 1 316 1 253 2 237 7 65 1 189 9 238 1 362 1 110 1 294 2 140 3 142 1 299 1 115 1 368 1 11 1 116 1 302 1 246 4 372 2 120 1 175 1 
182 9 36 1 185 4 284 1 316 1 253 2 237 7 65 1 189 9 238 1 362 1 110 1 294 2 140 3 142 1 299 1 115 1 368 1 11 1 116 1 302 1 246 4 372 2 120 1 175 1 
235 1 6 1 70 1 
53 2 70 1 121 1 
274 2 111 1 276 2 352 2 1 2 166 1 177 2 262 2 
206 2 56 1 230 1 311 1 208 1 352 3 1 2 2 1 234 2 354 1 59 1 287 1 334 1 162 1 40 1 336 1 163 1 25 1 258 1 166 1 262 2 190 1 293 2 241 2 27 1 296 1 111 1 112 1 143 1 224 1 227 2 274 2 198 1 275 1 276 3 277 1 177 2 
89 1 274 1 111 1 191 1 276 1 352 1 1 1 376 1 177 1 262 1 
350 1 111 1 191 1 70 1 17 1 352 2 47 1 1 2 195 1 170 1 89 1 6 1 274 1 276 2 188 1 150 1 256 1 319 1 376 2 177 1 262 1 
111 1 191 1 70 1 17 1 47 2 352 2 1 2 195 1 170 2 89 1 6 1 274 2 276 2 188 1 256 1 319 1 376 2 177 2 262 2 
228 1 16 1 47 1 170 1 315 1 
6 1 62 1 70 1 16 1 47 2 313 1 170 2 315 1 
47 1 170 1 315 1 
191 1 111 1 16 1 17 1 47 1 352 1 1 1 170 1 89 1 274 1 276 1 376 1 177 1 262 1 
70 1 
6 1 62 1 70 1 16 1 47 2 339 1 170 2 315 1 
326 2 280 1 309 1 70 1 16 2 47 5 321 1 170 5 285 1 315 2 369 1 6 1 80 2 63 1 62 1 43 1 348 1 378 2 152 1 
235 1 166 1 
317 1 274 1 276 2 352 2 1 2 166 2 177 1 262 1 30 1 
225 1 33 1 204 1 
293 1 241 1 27 1 206 1 296 1 352 1 208 1 287 1 334 1 276 1 31 1 40 1 336 1 277 1 25 1 166 1 
293 1 241 1 27 1 296 1 206 1 208 1 352 2 1 1 252 1 225 1 287 1 186 1 334 1 40 1 276 2 336 1 277 1 25 1 177 1 262 1 
186 1 274 1 276 3 352 3 1 3 166 1 177 3 262 3 
89 1 276 1 352 1 1 1 376 1 177 1 262 1 
317 1 274 1 276 1 352 1 1 1 376 1 177 1 262 1 30 1 
1 3 2 1 234 2 186 1 287 1 334 1 188 1 40 1 336 1 190 1 241 1 293 1 296 1 47 1 342 1 143 1 195 1 300 1 198 1 206 1 352 4 208 1 311 1 252 1 354 1 59 1 162 1 256 1 163 1 25 1 319 1 166 1 262 3 27 1 111 1 224 1 170 1 227 1 30 1 274 2 276 4 277 1 376 2 229 1 177 3 
350 1 186 1 276 2 82 1 352 2 1 2 166 1 177 1 262 1 
70 1 47 1 352 3 1 3 252 1 195 1 170 1 30 1 186 2 274 1 276 3 23 1 188 1 256 1 376 1 319 1 229 1 177 3 262 3 
352 2 1 2 225 1 30 1 186 1 274 1 276 2 177 2 33 1 262 2 
293 1 241 1 27 1 206 1 296 1 352 1 208 1 287 1 334 1 276 1 40 1 336 1 277 1 25 1 166 1 
293 1 241 1 206 1 296 1 352 1 208 1 3 1 287 1 236 1 334 1 276 1 40 1 277 1 25 1 166 1 
180 1 56 2 231 1 311 1 312 1 2 1 158 1 234 2 354 1 4 1 59 1 187 1 162 1 42 1 190 1 48 1 143 2 49 1 225 2 88 1 227 4 303 1 33 2 204 2 
276 1 64 1 352 1 1 1 376 1 319 1 177 1 262 1 
350 1 352 5 1 5 252 1 233 1 30 1 186 2 274 1 276 5 41 1 82 1 177 4 166 1 262 4 
89 1 64 1 276 2 352 2 1 2 376 1 177 2 262 2 
92 1 19 1 
92 1 19 1 
363 1 218 1 
363 1 218 1 
363 1 218 1 
92 1 282 1 19 1 
92 1 282 1 19 1 
92 1 19 1 343 1 
363 1 45 1 92 2 199 1 19 2 218 1 
92 1 282 1 19 1 
160 1 92 1 19 1 
160 1 92 1 19 1 
160 1 92 1 19 1 
45 1 128 1 327 2 207 1 70 1 47 2 19 2 211 2 297 3 38 2 331 2 170 2 345 2 92 2 360 1 278 1 292 1 14 1 52 1 
128 1 327 1 352 2 19 1 1 2 283 1 329 1 211 1 331 1 38 1 166 1 67 1 262 2 261 1 268 1 47 1 297 1 343 1 170 1 92 1 276 2 347 1 177 2 307 1 
120 1 142 1 36 1 
103 1 120 1 142 1 
103 1 214 1 142 3 36 2 216 1 245 1 
155 1 103 1 142 2 36 1 216 1 245 1 
103 1 142 2 36 1 216 1 245 2 
326 1 53 3 309 1 16 4 312 1 183 1 283 1 184 1 158 1 285 2 315 1 333 2 60 1 6 1 80 1 62 1 291 2 105 2 261 1 263 1 44 1 70 2 47 5 113 1 88 1 170 5 301 1 303 1 121 1 347 1 378 1 152 3 
326 2 53 9 309 1 16 7 312 3 156 1 183 1 37 1 158 3 20 5 285 6 315 6 333 6 60 2 6 1 80 2 135 1 62 1 291 6 263 3 44 2 70 5 47 9 88 3 170 9 346 1 369 1 228 5 370 1 303 3 121 3 347 4 378 2 152 8 249 1 
326 1 53 4 16 2 312 1 184 1 158 1 285 2 60 1 333 2 6 1 80 1 291 2 105 1 263 1 44 1 70 3 47 3 88 1 170 3 301 1 369 1 303 1 121 2 347 1 378 1 152 3 
326 1 53 7 16 3 312 2 184 1 158 2 285 4 333 4 60 1 6 1 80 1 291 4 105 2 263 2 44 1 70 4 47 4 88 2 170 4 301 1 346 1 369 1 370 1 303 2 121 3 347 2 378 1 152 5 249 1 
235 1 137 1 25 1 
266 1 25 1 
174 1 
287 1 25 1 
287 1 13 1 208 1 137 2 25 3 260 1 
287 1 208 1 25 1 
25 1 322 1 
56 4 231 2 157 1 143 3 243 1 158 1 298 1 330 1 88 1 227 7 98 1 187 3 359 1 289 1 148 2 164 1 84 1 
56 4 231 2 157 1 143 3 243 1 158 1 298 1 330 1 88 1 227 7 98 1 187 3 359 1 289 1 148 2 164 1 84 1 
56 4 231 2 192 1 157 1 143 3 243 1 158 1 298 1 330 1 88 1 227 7 98 1 187 3 359 1 289 1 148 2 164 1 84 1 
154 1 0 1 54 1 56 16 231 5 311 1 312 3 157 2 2 1 158 4 330 1 234 2 98 1 354 1 359 2 187 10 289 2 8 1 164 5 263 3 84 2 190 1 86 1 243 1 143 15 298 1 226 3 227 31 88 4 196 4 303 3 148 3 173 1 32 1 
56 5 231 3 311 2 157 1 2 2 158 1 234 4 330 1 98 1 354 2 254 1 187 4 359 1 289 1 164 1 84 1 190 2 143 4 243 1 88 1 227 9 117 1 148 2 32 1 
96 1 206 1 182 2 36 1 79 1 253 1 357 1 318 1 103 1 334 1 214 1 237 1 65 1 290 1 189 2 362 1 107 1 241 1 293 1 110 1 294 1 265 1 296 1 71 1 142 2 344 1 368 1 147 1 120 1 175 1 
96 1 206 1 182 3 57 1 36 1 79 1 253 1 357 1 318 1 103 1 22 1 334 1 214 1 237 2 65 1 290 1 189 3 362 1 107 1 241 1 293 1 110 1 294 1 265 1 296 1 142 2 344 1 120 1 175 1 176 1 
96 1 206 1 182 2 79 1 36 1 357 1 318 1 103 1 22 1 334 1 214 1 237 2 65 1 290 1 189 2 362 1 110 1 241 1 293 1 265 1 296 1 142 2 120 1 175 1 176 1 
96 2 206 1 182 1 57 1 253 1 39 1 287 1 318 2 334 1 189 1 290 2 239 1 25 1 68 1 241 1 293 1 110 2 294 1 296 1 167 1 168 1 277 1 122 1 
96 1 206 1 182 1 36 1 79 1 253 1 357 1 318 1 103 1 334 1 214 1 290 1 189 1 107 1 241 1 293 1 110 1 294 1 265 1 296 1 71 1 142 2 344 1 368 1 120 1 176 1 
18 1 
326 1 1 1 285 2 287 1 6 2 80 1 334 1 188 1 136 1 7 1 240 1 44 1 293 2 241 2 296 1 47 5 195 1 150 1 306 2 152 2 53 2 15 2 350 1 309 1 206 2 352 1 315 6 58 1 99 4 358 2 62 3 256 1 25 1 165 2 319 1 68 1 108 1 221 1 168 1 70 3 29 1 270 1 367 2 170 5 273 2 325 1 76 2 276 1 118 1 121 2 277 2 376 1 124 1 378 1 125 1 
350 1 352 1 1 1 99 2 315 2 358 1 6 2 62 1 188 1 136 1 256 1 319 1 339 1 70 2 47 3 29 1 270 1 195 1 170 3 276 1 118 1 150 1 376 1 125 1 
350 1 70 2 47 2 352 1 1 1 29 1 195 1 270 1 170 2 99 3 273 1 6 2 118 1 276 1 188 1 136 1 150 1 256 1 376 1 319 1 125 1 
350 1 352 1 1 1 99 3 315 2 358 1 6 2 62 1 188 1 136 1 256 1 319 1 339 1 70 2 47 3 29 1 270 1 195 1 170 3 367 1 273 1 276 1 118 1 150 1 376 1 125 1 
326 1 130 1 1 2 285 1 6 4 80 1 188 1 136 1 240 1 339 1 191 1 47 5 195 1 89 1 146 1 150 1 306 2 152 1 250 1 15 2 350 1 309 1 17 1 352 2 99 5 315 7 358 4 213 1 62 3 256 1 319 1 165 2 262 1 221 1 111 1 70 4 29 1 270 1 114 1 170 5 367 4 273 3 274 1 76 2 118 1 276 2 121 2 376 2 177 1 378 1 125 1 
326 1 1 1 285 1 6 3 80 1 188 1 136 1 7 1 240 1 47 4 195 1 150 1 306 2 152 1 15 2 53 2 350 1 309 1 352 1 99 4 315 4 358 2 62 2 256 1 319 1 165 2 221 1 70 4 29 1 270 1 170 4 367 2 273 2 76 2 276 1 118 1 121 2 376 1 378 1 125 1 
250 1 326 1 15 2 350 1 309 1 130 1 352 1 1 1 315 4 285 1 99 4 358 2 6 3 80 1 62 2 188 1 136 1 256 1 165 2 319 1 240 1 221 1 70 3 47 4 29 1 270 1 195 1 367 2 170 4 146 1 273 2 76 2 276 1 118 1 150 1 121 2 376 1 306 2 378 1 152 1 125 1 
250 1 326 1 15 2 350 1 309 1 130 1 352 1 1 1 315 4 285 1 99 4 358 2 6 3 80 1 62 2 188 1 136 1 256 1 165 2 319 1 240 1 221 1 70 3 47 4 29 1 270 1 195 1 367 2 170 4 146 1 273 2 76 2 276 1 118 1 150 1 121 2 376 1 306 2 378 1 152 1 125 1 
326 1 53 2 15 2 350 1 309 1 352 1 1 1 159 2 315 4 285 1 99 4 358 2 6 3 80 1 62 2 188 1 136 1 256 1 165 2 319 1 259 1 295 2 221 1 70 3 47 4 29 1 270 1 195 1 367 2 170 4 146 1 273 2 304 1 276 1 118 1 150 1 376 1 378 1 152 1 125 1 34 1 
326 1 250 1 15 2 350 1 309 1 130 1 352 1 1 1 285 1 99 5 315 5 358 3 6 3 213 1 80 1 62 2 188 1 136 1 256 1 165 2 319 1 240 1 221 1 70 3 47 4 29 1 270 1 195 1 170 4 367 3 146 1 273 3 76 2 276 1 118 1 150 1 121 2 376 1 306 2 378 1 152 1 125 1 
326 1 250 1 15 2 350 1 309 1 130 1 352 1 1 1 285 1 99 5 315 5 358 3 6 3 213 1 80 1 62 2 188 1 136 1 256 1 165 2 319 1 240 1 221 1 70 3 47 4 29 1 270 1 195 1 170 4 367 3 146 1 273 3 76 2 276 1 118 1 150 1 121 2 376 1 306 2 378 1 152 1 125 1 
326 1 53 2 15 2 350 1 309 1 352 1 1 1 159 2 315 4 285 1 99 4 358 2 6 3 80 1 62 2 188 1 136 1 7 1 256 1 165 2 319 1 295 2 221 1 70 3 47 4 29 1 270 1 195 1 367 2 170 4 273 2 304 1 118 1 276 1 150 1 376 1 378 1 152 1 125 1 
56 3 231 2 311 1 2 1 158 1 330 1 234 2 98 1 354 1 59 1 235 1 359 1 187 2 162 1 42 1 166 2 84 1 190 1 243 1 143 3 225 1 227 6 88 1 148 1 33 1 204 1 
0 1 56 8 231 1 311 2 312 1 2 2 158 2 234 4 354 2 59 1 187 2 162 2 163 1 8 1 164 1 166 1 263 2 190 2 9 1 267 1 193 1 143 6 87 1 225 11 226 3 227 14 88 1 196 3 303 2 275 1 123 1 33 4 204 11 
206 1 56 1 208 1 352 2 311 1 1 1 252 1 2 1 234 2 354 1 59 1 287 1 186 1 334 1 40 1 162 1 336 1 163 1 25 1 217 1 66 1 166 1 262 1 190 1 241 1 293 1 27 1 296 1 9 1 143 1 227 2 272 1 31 1 276 2 275 1 277 1 177 1 33 1 
231 4 1 1 2 3 330 1 234 6 186 1 287 2 187 8 334 2 40 2 336 2 84 1 190 3 241 3 293 3 9 1 296 2 243 1 143 10 88 3 303 2 198 2 148 1 247 2 51 1 204 7 206 3 56 10 311 3 352 3 208 2 312 2 252 1 158 3 98 1 314 2 354 3 59 3 212 2 359 1 162 3 163 1 215 1 25 2 164 4 166 2 262 1 263 2 27 2 225 7 227 20 275 1 276 3 374 2 277 1 176 1 177 1 33 7 178 1 
126 1 206 8 35 1 56 1 352 1 311 2 1 1 2 2 234 4 354 2 59 2 186 1 287 2 104 1 334 2 162 2 24 1 42 1 163 1 25 3 262 1 68 1 190 2 241 8 293 7 320 1 296 2 168 1 112 2 143 1 227 2 74 1 147 1 276 1 275 1 93 1 277 2 176 1 177 1 
56 1 231 1 311 1 352 1 312 1 1 1 2 1 158 1 234 2 354 1 59 1 101 1 187 1 162 1 262 1 263 1 190 1 9 1 143 2 225 1 227 3 88 1 30 1 303 1 274 1 276 1 177 1 33 1 204 1 
190 1 56 2 311 1 48 1 2 1 158 1 225 1 234 2 227 2 354 1 59 1 187 1 303 1 162 1 42 1 164 1 33 1 204 1 
190 1 180 1 231 1 311 1 312 1 2 1 143 2 225 1 234 2 227 2 88 1 354 1 59 1 187 1 162 1 42 1 33 1 204 1 
56 2 231 1 311 1 312 1 2 1 158 1 234 2 354 1 59 1 187 2 162 1 42 1 164 1 263 1 190 1 143 2 225 2 227 4 88 1 303 1 33 2 204 2 
190 1 56 2 311 1 48 1 2 1 158 1 225 1 234 2 227 2 354 1 59 1 187 1 303 1 24 1 162 1 164 1 33 1 204 1 
190 1 180 1 231 1 311 1 312 1 2 1 143 2 225 1 234 2 227 2 88 1 354 1 59 1 187 1 24 1 162 1 33 1 204 1 
56 2 231 1 311 1 312 1 2 1 158 1 234 2 354 1 59 1 187 2 162 1 24 1 164 1 263 1 190 1 143 2 225 2 227 4 88 1 303 1 33 2 204 2 
190 1 56 2 231 1 311 1 312 1 143 2 2 1 158 1 225 2 234 2 88 1 227 4 354 1 59 1 187 2 303 1 162 1 164 1 33 2 263 1 204 2 
206 1 56 1 208 1 352 1 311 1 2 1 234 2 354 1 59 1 287 1 334 1 40 1 162 1 336 1 163 1 25 1 166 1 190 1 241 1 293 1 27 1 296 1 143 1 227 2 198 1 275 1 276 1 277 1 
206 1 56 1 208 1 352 1 311 1 2 1 3 1 234 2 354 1 59 1 287 1 334 1 236 1 40 1 162 1 163 1 25 1 166 1 190 1 241 1 293 1 296 1 143 1 227 2 275 1 276 1 277 1 349 1 
56 2 231 1 311 1 312 1 2 1 158 1 234 2 354 1 59 1 187 2 162 1 164 1 263 1 190 1 9 1 143 2 225 2 227 4 88 1 303 1 33 2 204 2 
206 1 56 2 231 1 208 1 352 1 311 1 312 1 2 1 158 1 234 2 354 1 59 1 212 1 287 1 187 2 334 1 40 1 162 1 336 1 164 1 25 1 263 1 190 1 241 1 293 1 27 1 296 1 143 2 225 2 88 1 227 4 303 1 198 1 147 1 276 1 33 2 204 2 
56 2 311 1 352 1 312 1 1 1 2 1 158 1 234 2 354 1 59 1 187 1 162 1 164 1 262 1 263 1 190 1 9 1 143 1 244 1 225 1 88 1 227 3 30 1 303 1 274 1 276 1 177 1 33 1 204 1 
0 1 129 2 55 1 56 9 231 3 311 2 312 3 2 2 158 3 234 4 354 2 187 6 102 2 8 1 164 3 106 1 219 1 263 3 190 2 69 1 242 1 143 10 226 1 227 19 88 3 196 2 303 3 117 1 149 1 202 1 
0 2 129 1 56 13 231 1 311 2 312 2 2 2 158 3 234 4 354 2 187 2 102 4 161 1 164 1 106 1 219 2 263 3 190 2 69 1 264 1 143 12 226 2 88 2 227 25 196 2 303 3 117 1 371 1 373 1 149 2 200 1 202 1 94 1 32 1 
153 1 0 3 129 1 55 1 56 21 231 4 311 4 312 4 2 4 158 5 330 1 234 8 98 1 354 4 359 1 187 9 102 4 161 1 8 1 164 5 106 1 219 2 263 4 84 1 190 4 69 1 264 1 243 1 143 21 226 3 227 42 88 5 196 4 303 4 371 1 117 1 148 1 373 1 149 1 200 1 94 1 202 1 32 2 
153 1 0 3 129 1 55 1 56 19 231 4 311 3 312 3 2 3 158 5 330 1 234 6 98 1 354 3 359 1 187 6 102 4 161 1 8 1 164 2 106 1 219 2 263 4 84 1 190 3 69 1 264 1 243 1 143 18 226 3 227 37 88 4 196 4 303 4 371 1 117 1 148 1 373 1 149 1 200 1 94 1 202 1 32 1 
0 2 129 1 56 27 231 7 311 2 312 7 2 2 158 8 330 1 234 4 98 1 354 2 359 1 187 14 102 4 161 1 8 2 164 7 106 1 219 1 263 7 84 1 190 2 69 1 264 1 243 1 143 25 87 2 226 4 227 52 88 8 196 4 303 7 371 1 117 1 148 1 373 1 149 1 200 1 94 1 202 1 32 1 
45 1 327 1 207 1 92 1 19 1 278 1 194 1 211 1 331 1 38 1 
329 1 343 1 
355 1 327 1 92 1 141 1 19 1 211 1 169 1 331 1 38 1 
45 1 128 1 327 1 207 1 70 1 47 1 19 1 211 1 297 2 38 1 331 1 170 1 345 1 92 1 360 1 278 1 292 1 52 1 
45 1 128 1 327 1 207 1 70 1 47 1 19 1 211 1 297 2 38 1 331 1 170 1 345 1 92 1 360 1 278 1 292 1 52 1 
45 1 128 1 327 1 207 1 70 1 47 1 19 1 211 1 297 2 38 1 331 1 170 1 345 1 92 1 360 1 278 1 292 1 52 1 
181 1 199 1 282 1 
181 1 199 1 282 1 
179 1 160 1 
179 1 160 1 199 1 
268 1 307 1 
327 1 16 1 352 2 19 1 283 1 329 1 1 2 211 1 331 1 38 1 166 1 67 1 261 1 262 2 268 1 47 1 297 1 343 1 170 1 345 1 197 1 92 1 276 2 347 1 52 1 307 1 177 2 
181 1 282 1 
179 1 160 1 199 1 
206 2 35 1 56 1 352 2 311 1 131 1 1 2 2 1 234 2 132 1 354 1 59 1 134 1 334 1 162 1 163 1 190 1 241 2 364 1 293 2 296 1 9 1 112 2 143 1 227 2 50 1 276 2 275 1 
107 1 293 2 241 2 296 1 206 2 265 1 142 2 36 1 353 1 357 1 103 1 75 1 334 1 147 1 120 1 214 1 290 1 176 1 220 1 
107 1 293 1 241 1 206 1 265 1 296 1 142 2 36 1 357 1 103 1 334 1 120 1 214 1 290 1 176 1 201 1 220 1 
293 1 241 1 296 1 206 1 168 1 353 1 271 1 287 1 334 1 277 1 290 1 25 1 122 1 68 1 
107 1 293 1 241 1 296 1 206 1 265 1 142 2 36 1 353 1 357 1 103 1 75 1 334 1 120 1 214 1 290 1 176 1 220 1 
223 1 
235 1 6 1 280 1 63 1 70 1 152 1 285 1 
326 1 53 1 309 1 285 1 315 1 6 1 80 1 62 1 240 1 70 2 47 1 170 1 76 1 121 1 378 1 306 1 152 1 
326 1 293 1 241 1 296 1 309 1 206 1 80 1 171 1 334 1 277 1 378 1 95 1 
326 2 53 6 0 1 309 2 312 2 158 2 315 1 285 5 333 5 6 1 80 2 62 1 161 1 337 1 291 5 263 2 264 1 70 4 47 1 226 1 170 1 88 2 91 1 196 1 303 2 371 1 373 1 121 3 94 1 378 2 152 7 
326 1 250 1 205 1 309 1 17 1 352 1 97 1 1 1 158 2 285 2 359 1 80 1 262 1 84 1 191 1 111 1 47 1 243 1 170 1 88 1 89 1 91 2 274 1 276 1 376 1 378 1 177 1 152 2 
326 1 280 1 309 1 70 1 285 1 6 1 80 1 63 1 378 1 152 1 
53 10 70 5 97 1 312 2 158 2 88 2 285 5 333 5 91 2 303 2 374 1 121 5 291 5 263 2 152 5 
6 1 62 1 70 1 47 1 170 1 315 1 
326 2 309 1 206 4 232 1 58 1 315 4 285 2 100 2 287 1 80 2 334 1 62 2 335 1 25 1 44 2 68 1 108 2 241 4 293 4 296 1 168 1 47 3 170 3 10 1 369 1 277 2 124 1 378 2 152 2 
206 1 311 1 352 3 208 1 1 2 2 1 234 2 354 1 59 1 287 1 334 1 40 1 162 1 336 1 163 1 25 1 166 1 262 2 190 1 241 1 293 1 27 1 296 1 111 1 143 1 224 1 227 1 274 2 198 1 276 3 277 1 177 2 
326 1 108 1 53 4 309 1 70 4 285 2 333 2 6 2 80 1 148 1 121 2 291 2 378 1 152 1 44 1 
83 1 211 1 331 1 
83 1 211 1 331 1 
207 1 77 1 211 1 307 1 331 1 
83 1 211 1 331 1 
328 1 211 1 331 1 
328 1 211 1 331 1 
328 1 211 1 331 1 
211 1 331 1 
92 1 19 1 
190 2 56 4 231 2 311 2 243 1 143 4 2 2 158 1 234 4 330 1 88 1 227 8 98 1 354 2 187 3 359 1 148 1 164 1 32 1 84 1 
56 3 231 2 143 3 243 1 158 1 330 1 98 1 227 6 88 1 235 1 359 1 187 2 148 1 84 1 
190 1 56 2 231 1 311 1 312 1 143 2 2 1 158 1 234 2 88 1 227 4 354 1 187 2 303 1 164 1 26 1 263 1 
0 1 56 3 231 1 312 1 143 4 158 1 226 1 88 1 227 7 196 2 303 1 187 2 8 1 164 1 263 1 
56 11 231 5 311 2 312 2 2 2 158 3 330 1 234 4 98 1 354 2 359 2 187 9 8 1 164 4 338 1 263 2 84 2 190 2 193 1 243 1 143 12 87 1 226 2 227 23 88 3 196 2 303 2 148 1 32 2 
196 1 143 1 227 1 
56 1 226 1 227 1 
190 1 56 3 231 2 311 1 312 1 2 1 143 3 158 1 234 2 227 6 88 1 354 1 303 1 187 3 374 1 164 1 26 1 263 1 
0 1 56 7 231 1 311 2 312 2 2 2 158 2 234 4 354 2 187 3 161 1 164 2 263 2 190 2 264 1 143 6 226 1 227 13 88 2 196 1 303 2 117 1 371 1 373 1 94 1 32 1 
56 3 231 1 243 1 143 3 158 1 227 6 88 1 359 1 187 2 164 1 84 1 
190 1 56 1 231 1 311 1 143 2 2 1 330 1 234 2 227 3 98 1 354 1 187 2 359 1 164 1 338 1 32 1 84 1 
190 1 205 1 56 5 231 3 311 1 2 1 143 5 243 1 158 2 234 2 227 10 88 2 354 1 359 2 187 5 117 1 164 2 84 2 
190 1 56 2 311 1 2 1 158 1 234 2 227 2 354 1 303 1 187 1 117 1 164 1 
190 1 56 2 231 1 311 1 312 1 143 2 2 1 158 1 234 2 88 1 227 4 354 1 187 2 303 1 117 1 164 1 263 1 
190 3 55 1 56 1 231 1 311 3 143 2 2 3 234 6 227 3 354 3 359 1 187 2 117 1 164 1 338 1 32 1 84 1 
154 1 0 1 55 1 56 16 231 7 311 5 312 3 2 5 158 5 330 1 234 10 98 1 354 5 359 3 187 12 8 1 164 5 338 1 26 1 263 3 84 3 190 5 86 1 243 2 143 18 226 3 227 34 88 5 196 4 303 3 117 1 148 1 173 1 32 2 
0 1 56 4 231 2 311 1 2 1 158 1 234 2 330 1 98 1 354 1 359 1 187 2 84 1 190 1 264 1 143 4 243 1 226 1 88 1 227 8 196 1 117 1 148 1 
0 1 56 6 231 2 311 2 2 2 158 2 330 1 234 4 98 1 354 2 359 1 187 3 8 1 164 1 26 1 263 1 84 1 190 2 264 1 243 1 143 5 226 1 88 1 227 11 196 2 303 1 117 1 148 1 
0 1 56 7 231 1 311 4 312 2 2 4 158 2 234 8 354 4 187 3 161 1 164 2 26 1 263 2 190 4 264 1 143 7 226 1 227 14 88 2 196 1 303 2 117 1 371 1 373 1 94 1 32 2 
0 1 56 6 231 1 311 2 312 1 2 2 158 2 234 4 354 2 187 1 161 1 26 1 263 2 190 2 264 1 143 4 226 1 227 10 88 1 196 1 303 2 117 1 371 1 373 1 94 1 
0 1 56 4 231 2 311 1 2 1 158 1 234 2 330 1 98 1 354 1 359 1 187 2 84 1 190 1 264 1 143 4 243 1 226 1 88 1 227 8 196 1 117 1 148 1 
0 1 56 7 231 1 311 2 312 2 2 2 158 2 234 4 354 2 187 3 161 1 164 2 263 2 190 2 264 1 143 6 226 1 227 13 88 2 196 1 303 2 117 1 371 1 373 1 94 1 32 1 
0 1 56 6 231 1 311 3 312 1 2 3 158 2 234 6 354 3 187 1 161 1 26 1 263 2 190 3 264 1 143 5 226 1 227 11 88 1 196 1 303 2 117 1 371 1 373 1 94 1 32 1 
0 1 55 1 56 6 231 2 311 3 312 1 2 3 158 2 234 6 354 3 187 3 161 1 164 1 263 2 190 3 264 1 143 5 226 1 227 11 88 1 196 1 303 2 117 1 371 1 373 1 94 1 32 1 
56 3 231 3 143 4 243 1 158 1 330 2 88 1 227 7 98 1 359 3 187 6 164 3 84 3 
0 1 55 1 56 6 231 1 311 3 312 1 2 3 158 2 234 6 354 3 187 1 161 1 263 2 190 3 264 1 143 5 226 1 227 11 88 1 196 1 303 2 117 1 371 1 373 1 94 1 32 1 
350 1 276 1 352 1 82 1 375 1 1 1 166 1 
350 1 352 1 1 1 356 1 286 1 12 1 276 1 375 1 82 1 377 1 166 1 361 1 
241 1 293 1 287 1 235 1 296 1 206 1 334 1 168 1 277 1 25 1 68 1 
293 1 241 1 296 1 206 1 208 1 352 2 1 1 287 1 186 1 334 1 40 1 276 2 336 1 277 1 25 1 166 1 177 1 262 1 
127 1 206 1 352 2 208 2 1 2 100 1 186 1 287 2 334 1 40 1 336 1 25 3 319 1 166 1 262 1 241 1 293 1 296 1 322 1 195 1 276 2 376 1 177 2 
127 1 206 2 310 1 352 2 208 2 1 2 3 1 100 1 186 1 287 2 334 1 40 1 25 3 319 1 166 1 262 1 241 2 293 2 296 1 322 1 195 1 276 2 376 1 177 2 
127 1 206 1 17 1 352 1 208 1 1 1 315 1 332 1 100 1 287 1 6 1 334 1 81 1 256 1 137 1 25 4 262 1 241 1 293 1 296 1 111 1 191 1 266 1 70 1 47 2 322 1 170 2 89 1 274 1 276 1 376 1 177 1 
127 1 206 1 17 1 352 1 208 1 1 1 315 1 100 1 287 1 6 1 334 1 256 1 137 1 25 4 262 1 241 1 293 1 296 1 111 1 191 1 266 1 70 1 46 1 47 2 322 1 170 2 89 1 274 1 276 1 376 1 177 1 
74 1 241 1 293 1 296 1 206 1 334 1 
241 1 293 1 340 1 206 1 277 1 
206 1 56 3 231 2 208 1 352 2 311 2 131 1 1 1 2 2 158 1 330 1 234 4 98 1 354 2 59 2 212 1 287 1 186 1 187 2 359 1 334 1 40 1 162 2 336 1 25 1 166 2 262 1 84 1 190 2 293 1 241 1 27 1 296 1 9 1 143 3 243 1 225 1 88 1 227 6 147 1 198 1 276 2 148 1 247 1 177 1 33 1 204 1 
326 2 280 1 1 1 285 5 6 2 80 2 335 1 137 1 84 1 293 1 241 1 191 1 46 1 47 3 243 1 88 2 89 1 91 2 305 1 152 4 205 1 206 1 309 2 16 1 17 1 352 1 97 1 158 2 315 2 359 1 62 1 63 1 256 1 25 2 262 1 266 1 111 1 70 2 366 1 170 3 274 1 276 1 277 1 376 1 78 1 378 2 177 1 
74 1 241 1 293 1 296 1 206 1 334 1 171 1 
293 4 241 4 85 1 296 1 206 4 168 1 310 1 287 1 147 1 334 1 277 1 25 1 68 1 
293 2 241 2 365 1 206 2 296 2 208 1 100 1 323 1 287 1 21 1 334 1 51 1 151 1 25 1 
241 1 293 1 357 1 103 1 296 1 206 1 334 1 120 1 142 1 277 1 
241 2 293 2 296 1 206 2 334 1 147 1 176 1 132 1 
293 4 241 5 85 1 206 5 320 1 296 2 168 1 100 1 287 2 104 1 147 1 334 2 93 1 277 1 25 3 68 1 
293 4 241 5 85 1 206 5 320 1 296 2 168 1 100 1 287 2 104 1 147 1 334 2 277 1 25 3 203 1 68 1 
293 1 241 1 296 1 206 1 208 1 352 2 1 1 3 1 287 1 186 1 334 1 40 1 276 2 277 1 25 1 166 1 177 1 262 1 
100 1 241 1 293 1 340 1 206 1 
364 1 134 1 50 1 276 1 352 1 257 1 269 1 1 1 279 1 
257 1 139 1 308 1 
288 1 269 1 257 1 166 1 279 1 
16 1 17 1 352 1 1 1 6 1 188 1 288 1 257 1 256 1 319 1 139 1 262 1 111 1 191 1 70 1 269 1 47 2 195 1 170 2 89 1 90 1 274 1 276 1 376 2 229 1 177 1 279 1 308 1 
235 1 65 1 362 1 
294 1 182 1 175 1 65 1 189 1 362 1 253 1 
110 1 96 1 182 1 
294 1 281 1 182 2 253 1 368 1 324 1 175 1 189 2 65 1 138 1 362 1 
294 1 182 2 253 1 372 1 237 1 175 1 189 2 65 1 362 1 
368 1 294 1 120 1 142 1 246 1 182 1 36 1 189 1 185 1 284 1 253 1 
368 1 294 1 182 1 65 1 189 1 253 1 
368 1 294 1 246 1 182 1 65 1 189 1 362 1 253 1 
294 2 72 1 182 2 145 1 253 2 5 1 368 1 65 1 189 2 
294 1 140 1 182 3 299 1 185 1 253 1 368 1 246 1 237 2 175 1 65 1 189 3 238 1 362 1 
294 1 142 2 182 2 209 1 36 1 253 1 368 1 103 1 214 1 120 1 237 1 175 1 65 1 189 2 362 1 
294 1 140 1 182 3 185 1 253 1 368 1 302 1 372 1 246 1 237 2 175 1 65 1 189 3 362 1 
294 1 182 1 253 1 368 1 189 1 65 1 175 1 362 1 
294 1 140 1 182 3 185 1 253 1 246 1 237 2 65 1 175 2 189 3 362 1 
294 1 182 2 73 1 253 1 368 1 11 1 61 1 237 1 175 1 65 1 189 2 362 1 
294 1 182 2 253 1 368 1 324 1 172 1 175 1 189 2 65 1 138 1 362 1 
133 1 251 2 255 1 246 2 
368 1 294 1 182 1 189 1 210 1 253 1 
294 1 182 2 299 1 253 1 368 1 237 1 175 1 189 2 65 1 362 1 
109 1 
294 1 182 1 253 1 368 1 189 1 65 1 175 1 362 1 
294 1 182 2 253 1 368 1 324 1 175 1 189 2 65 1 362 1 
140 1 246 1 175 1 185 1 
65 1 

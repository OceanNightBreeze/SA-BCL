#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (152,205) 343 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (152,205) 343 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.IndexOutOfBoundsException 167 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 55 269 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 55 269 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 55 269 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 55 269 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 55 269 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | RETURN | 2431 | return null
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 9719 | stmt -> ;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1627 | 1 -> 0
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | STATEMENT | 1463 | stmt -> ;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 4096 | stmt -> ;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money; | ASSIGN | 1235 | = null
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2944 | stmt -> ;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
205 1 295 1 255 2 3 5 352 9 324 2 152 1 233 9 155 2 329 2 331 1 261 1 90 1 36 4 336 2 304 6 244 1 340 1 245 1 141 1 75 2 49 1 173 1 247 1 99 1 364 3 250 2 228 1 
205 1 295 1 255 2 3 5 352 9 324 2 152 1 233 9 155 2 329 2 331 1 261 1 90 1 36 4 336 2 304 6 244 1 340 1 245 1 141 1 75 2 49 1 173 1 247 1 99 1 364 3 250 2 228 1 
205 1 295 1 255 2 3 6 352 10 324 2 152 1 233 10 155 2 329 2 331 1 261 1 90 1 36 5 336 2 304 7 244 1 340 1 245 1 141 1 75 2 49 1 173 1 247 1 99 1 364 4 250 2 228 1 
205 1 295 1 255 2 3 4 352 7 324 2 152 1 233 7 155 2 329 2 331 1 261 1 90 1 36 3 336 1 304 4 244 1 340 1 245 1 141 1 75 2 49 1 173 1 247 1 364 2 250 2 228 1 
295 1 255 1 340 1 3 3 324 1 352 4 245 1 233 4 155 1 261 1 75 1 173 1 36 2 99 1 364 1 250 1 336 2 304 3 
244 1 295 1 255 1 3 1 352 2 324 1 233 2 96 1 155 1 329 1 260 1 331 1 261 1 173 1 240 1 250 1 
295 1 255 2 3 2 352 3 152 1 233 3 329 1 261 1 173 1 36 1 364 1 250 2 304 1 
261 1 255 1 152 1 352 1 233 1 250 1 343 1 
261 1 255 1 152 1 352 1 233 1 250 1 343 1 
326 1 47 1 139 1 
159 2 326 1 276 1 
122 2 334 1 338 1 45 2 129 2 277 2 221 2 135 2 
206 1 4 1 30 1 298 1 88 1 277 3 334 1 188 2 10 1 189 1 191 1 129 3 369 1 281 1 135 2 370 1 39 1 371 1 338 1 45 2 312 2 218 1 95 2 374 2 315 1 199 1 221 2 122 2 74 1 291 1 22 1 272 1 124 1 174 1 293 1 251 1 82 2 
122 1 338 1 45 1 13 1 129 1 342 1 73 1 277 1 221 1 135 1 
150 1 1 1 180 1 326 1 139 1 221 1 277 1 73 1 357 1 21 1 11 1 129 1 146 1 229 1 
150 1 180 2 45 1 326 1 139 1 221 1 277 1 73 1 122 1 357 1 21 2 11 1 129 1 135 1 229 1 
21 1 180 1 143 1 354 1 373 1 
21 2 256 1 180 2 143 1 60 1 326 1 139 1 373 1 
21 1 180 1 373 1 
180 1 338 1 45 1 287 1 342 1 73 1 221 1 277 1 122 1 21 1 143 1 13 1 129 1 135 1 
326 1 
21 2 180 2 42 1 143 1 60 1 326 1 139 1 373 1 
322 1 323 2 180 5 60 1 326 1 360 1 139 1 373 2 186 2 278 1 224 1 21 5 35 1 143 2 145 2 368 1 25 1 27 1 133 1 
370 1 45 1 312 1 218 1 30 1 95 1 199 1 221 1 277 2 291 1 303 1 112 1 162 1 124 1 191 1 129 2 369 1 281 1 135 1 82 1 
334 1 47 1 
231 1 45 1 154 1 221 2 277 2 122 1 334 2 129 2 135 1 
162 1 197 1 204 1 
370 1 312 1 218 1 30 1 95 1 33 1 199 1 277 1 334 1 291 1 191 1 124 1 129 1 369 1 281 1 82 1 
122 1 334 1 112 1 45 3 129 3 277 3 221 3 135 3 
45 1 13 1 129 1 73 1 277 1 221 1 135 1 
122 1 231 1 45 1 154 1 129 1 73 1 277 1 221 1 135 1 
150 1 180 1 4 1 154 1 183 1 30 1 298 1 277 4 357 1 334 1 188 2 10 1 303 1 112 1 11 1 191 1 129 4 369 1 281 1 135 3 370 1 39 1 371 1 338 1 45 3 312 1 218 1 138 1 95 1 374 1 199 1 221 3 73 1 122 2 21 1 291 1 22 1 272 1 124 1 174 1 293 1 229 1 251 1 82 1 
334 1 112 1 45 1 129 2 313 1 146 1 277 2 221 2 135 1 
150 1 180 1 45 3 154 1 326 1 138 1 73 1 221 3 277 3 122 1 357 1 21 1 303 1 112 2 11 1 129 3 227 1 229 1 135 3 
45 2 154 1 221 2 277 2 122 1 112 1 162 1 129 2 204 1 135 2 
370 1 312 1 218 1 95 1 30 1 199 1 277 1 334 1 291 1 191 1 124 1 129 1 369 1 281 1 82 1 
370 1 275 1 312 1 95 1 30 1 199 1 277 1 334 1 9 1 291 1 124 1 129 1 369 1 281 1 82 1 
230 1 4 1 297 1 327 1 298 1 330 1 88 2 89 1 188 2 10 1 358 1 162 2 115 1 39 2 371 1 197 2 374 4 289 1 316 1 344 1 142 1 174 1 293 1 204 2 
150 1 45 1 129 1 73 1 277 1 221 1 135 1 356 1 
45 4 46 1 154 1 313 1 221 5 277 5 122 1 65 1 334 1 303 1 112 2 129 5 146 1 135 4 
45 2 13 1 129 2 356 1 73 1 277 2 221 2 135 2 
61 1 214 1 
61 1 214 1 
85 1 182 1 
85 1 182 1 
85 1 182 1 
61 1 372 1 214 1 
61 1 372 1 214 1 
187 1 61 1 214 1 
366 1 85 1 182 1 61 2 72 1 214 2 
61 1 372 1 214 1 
169 1 61 1 214 1 
169 1 61 1 214 1 
169 1 61 1 214 1 
282 2 180 2 325 1 326 1 61 2 341 2 72 1 108 1 21 2 335 1 80 3 51 1 270 2 128 2 202 1 114 1 130 1 69 2 214 2 
84 1 180 1 61 1 31 1 108 1 32 1 277 2 187 1 334 1 129 2 264 1 69 1 135 2 214 1 305 1 282 1 45 2 341 1 120 1 221 2 21 1 80 1 270 1 100 1 
75 1 324 1 155 1 
324 1 240 1 155 1 
75 2 193 1 240 1 155 3 87 1 48 1 
75 1 240 1 155 2 87 1 157 1 48 1 
75 1 240 1 155 2 87 2 48 1 
84 1 323 1 180 5 60 1 297 1 355 1 326 2 31 1 210 2 276 2 185 1 186 1 301 1 159 2 35 3 358 1 133 1 337 1 212 2 115 1 215 1 217 1 373 1 139 1 289 1 76 1 362 2 224 2 21 5 143 4 145 1 100 1 126 1 
60 1 354 4 297 3 62 1 210 6 301 1 159 6 358 3 13 1 164 1 115 3 217 2 118 1 119 4 221 1 73 1 122 1 362 6 21 8 224 6 25 1 126 2 84 4 323 2 180 8 326 5 276 6 185 3 277 1 186 2 35 8 129 1 133 1 337 3 135 1 242 1 338 1 45 1 285 1 139 1 373 5 342 1 287 1 289 3 143 6 145 2 375 1 
84 1 323 1 180 3 297 1 326 3 355 1 210 2 276 2 185 1 186 1 34 1 159 2 35 3 358 1 337 1 212 1 115 1 215 1 217 1 139 1 289 1 362 2 21 3 224 2 143 2 145 1 25 1 126 1 
297 2 355 1 62 1 210 4 159 4 13 1 358 2 164 1 212 1 115 2 215 1 217 1 73 1 221 1 122 1 362 4 224 4 21 3 25 1 126 1 84 2 323 1 180 3 326 4 276 4 277 1 186 1 185 2 35 5 129 1 337 2 135 1 338 1 45 1 285 1 139 1 287 1 342 1 289 2 143 2 145 1 
110 1 47 1 30 1 
30 1 97 1 
177 1 
30 1 199 1 
370 1 110 2 92 1 30 3 199 1 165 1 
370 1 30 1 199 1 
30 1 134 1 
115 1 39 3 168 1 350 1 232 1 297 1 327 2 17 1 330 3 374 7 109 1 88 4 300 1 235 1 147 2 94 1 348 1 
115 1 39 3 168 1 350 1 232 1 297 1 327 2 17 1 330 3 374 7 109 1 88 4 300 1 235 1 147 2 94 1 348 1 
115 1 39 3 168 1 350 1 232 1 86 1 297 1 327 2 17 1 330 3 109 1 374 7 88 4 300 1 235 1 147 2 94 1 348 1 
0 1 254 1 350 2 4 1 232 2 5 1 297 4 327 5 184 3 109 1 330 10 88 16 300 2 158 4 302 1 235 1 188 2 10 1 358 3 94 1 337 3 243 1 115 4 39 15 371 1 309 1 168 5 17 2 374 31 289 3 104 1 147 3 348 1 293 1 
167 1 371 1 188 2 10 1 350 1 4 1 232 1 196 1 374 1 147 1 293 1 88 1 
178 1 295 1 255 1 3 1 324 1 352 2 233 2 155 2 329 1 332 1 261 1 236 1 66 1 240 1 14 1 37 1 304 1 193 1 194 1 312 1 95 1 75 1 291 1 173 1 144 1 23 1 124 1 52 1 250 1 82 1 
295 1 367 1 255 1 3 1 324 1 352 3 233 3 155 2 329 1 332 1 236 1 66 1 240 1 14 1 304 2 193 1 116 1 306 1 194 1 312 1 95 1 75 1 291 1 173 1 144 1 23 1 124 1 52 1 250 1 82 1 
295 1 367 1 3 1 352 2 324 1 233 2 155 2 329 1 332 1 66 1 240 1 14 1 304 2 306 1 193 1 312 1 95 1 75 1 291 1 173 1 144 1 23 1 124 1 52 1 82 1 
116 1 255 1 339 1 43 1 352 1 312 1 30 1 233 1 95 1 209 1 156 1 329 2 199 1 211 1 332 2 8 1 291 1 124 1 52 2 14 2 250 1 369 1 82 1 
178 1 367 1 255 1 324 1 352 1 233 1 155 2 329 1 332 1 261 1 236 1 66 1 240 1 14 1 193 1 194 1 312 1 95 1 75 1 291 1 144 1 23 1 124 1 52 1 250 1 82 1 
346 1 
150 1 2 1 1 1 60 3 208 4 64 1 357 1 8 1 159 2 11 1 12 1 113 1 266 2 267 1 311 1 312 2 19 2 221 1 73 1 223 2 77 2 361 1 224 2 21 5 124 1 26 1 126 1 127 2 82 2 229 1 323 1 179 2 180 5 326 2 30 1 234 1 276 2 186 1 277 1 35 2 238 1 129 1 133 1 369 2 339 1 95 2 139 1 373 6 140 1 199 1 291 1 145 1 102 2 146 1 149 1 
150 1 180 3 2 1 1 1 42 1 60 1 208 2 373 2 140 1 234 1 73 1 221 1 277 1 357 1 21 3 238 1 11 1 113 1 129 1 146 1 127 1 229 1 
150 1 1 1 2 1 180 3 179 1 60 1 208 3 326 1 234 1 277 1 357 1 11 1 238 1 113 1 129 1 42 1 373 1 140 1 139 1 221 1 73 1 21 3 146 1 229 1 
150 1 1 1 2 1 180 3 179 1 60 1 208 3 326 1 234 1 277 1 357 1 11 1 238 1 113 1 129 1 266 1 42 1 140 1 373 2 139 1 221 1 73 1 21 3 146 1 229 1 127 1 
150 1 56 1 294 1 2 1 1 1 60 3 208 6 64 1 357 1 11 1 113 1 266 4 267 1 16 1 19 2 73 1 221 1 77 2 223 2 172 1 21 5 224 1 127 4 229 1 323 1 180 5 179 4 326 5 234 1 276 2 277 1 186 1 35 1 238 1 129 1 133 1 195 1 42 1 373 7 140 1 139 5 145 1 102 2 146 1 
150 1 2 1 1 1 60 2 208 4 64 1 357 1 159 2 11 1 113 1 267 1 266 2 19 2 73 1 221 1 77 2 223 2 21 4 224 1 26 1 229 1 127 2 323 1 180 4 179 2 326 2 234 1 276 2 277 1 186 1 35 1 238 1 129 1 133 1 140 1 373 4 139 1 145 1 102 2 146 1 
150 1 323 1 294 1 179 2 1 1 2 1 180 4 60 2 208 4 326 1 234 1 276 2 64 1 277 1 186 1 357 1 35 1 11 1 238 1 113 1 129 1 133 1 195 1 266 2 267 1 16 1 139 1 373 4 140 1 19 2 221 1 73 1 223 2 77 2 224 1 21 4 145 1 102 2 146 1 127 2 229 1 
150 1 323 1 294 1 179 2 1 1 2 1 180 4 60 2 208 4 326 1 234 1 276 2 64 1 277 1 186 1 357 1 35 1 11 1 238 1 113 1 129 1 133 1 195 1 266 2 267 1 16 1 139 1 373 4 140 1 19 2 221 1 73 1 223 2 77 2 224 1 21 4 145 1 102 2 146 1 127 2 229 1 
150 1 323 1 179 2 1 1 2 1 180 4 60 2 208 4 326 1 234 1 64 1 277 1 186 1 357 1 159 2 35 1 11 1 238 1 113 1 129 1 133 1 195 1 266 2 117 2 219 1 139 1 373 4 140 1 221 1 73 1 223 2 77 2 224 1 21 4 345 2 225 1 318 1 145 1 146 1 127 2 229 1 
150 1 56 1 323 1 294 1 1 1 2 1 180 4 179 3 60 2 208 5 326 1 234 1 276 2 64 1 186 1 277 1 357 1 35 1 11 1 238 1 113 1 129 1 133 1 195 1 267 1 266 3 16 1 139 1 140 1 373 5 19 2 221 1 73 1 223 2 77 2 224 1 21 4 145 1 102 2 146 1 229 1 127 3 
150 1 56 1 323 1 294 1 1 1 2 1 180 4 179 3 60 2 208 5 326 1 234 1 276 2 64 1 186 1 277 1 357 1 35 1 11 1 238 1 113 1 129 1 133 1 195 1 267 1 266 3 16 1 139 1 140 1 373 5 19 2 221 1 73 1 223 2 77 2 224 1 21 4 145 1 102 2 146 1 229 1 127 3 
150 1 323 1 179 2 1 1 2 1 180 4 60 2 208 4 326 1 234 1 64 1 186 1 277 1 357 1 159 2 35 1 11 1 238 1 113 1 129 1 133 1 266 2 117 2 219 1 139 1 373 4 140 1 221 1 73 1 223 2 77 2 224 1 21 4 345 2 145 1 26 1 146 1 127 2 229 1 
115 1 39 3 371 1 4 1 297 1 327 2 47 1 197 1 17 1 298 1 374 6 330 2 109 1 88 3 300 1 334 2 89 1 188 2 10 1 162 1 147 1 174 1 94 1 293 1 348 1 204 1 
206 1 181 1 4 2 5 1 297 2 327 1 298 1 63 1 184 3 330 2 88 8 158 3 334 1 188 4 10 2 162 11 358 1 38 1 68 1 337 2 243 1 115 1 39 6 371 2 168 1 197 11 374 14 289 2 272 1 319 1 174 2 293 2 204 4 
206 1 4 1 30 1 298 1 63 1 33 1 88 1 277 2 334 1 188 2 10 1 303 1 112 1 191 1 129 2 369 1 281 1 135 1 370 1 39 1 371 1 312 1 45 1 218 1 95 1 374 2 199 1 221 1 222 1 200 1 291 1 124 1 272 1 53 1 174 1 293 1 82 1 204 1 
257 2 206 1 4 3 297 3 298 3 63 1 109 1 300 1 160 1 303 1 10 3 112 1 162 7 358 2 115 3 168 4 312 3 218 2 17 1 221 1 317 2 22 2 272 1 124 2 81 2 174 3 82 3 274 1 367 1 327 4 30 2 330 8 88 10 277 3 334 2 188 6 191 2 129 3 369 1 94 1 281 2 337 2 135 1 370 2 39 10 371 3 45 1 95 3 197 7 288 1 374 20 199 2 289 2 291 2 292 2 147 1 348 1 293 3 204 7 
365 1 367 1 349 1 206 1 4 2 30 3 298 2 88 1 277 1 8 1 89 1 188 4 10 2 112 1 129 1 37 1 67 1 369 2 135 1 39 1 371 2 339 1 45 1 312 7 95 8 170 1 286 1 374 2 315 2 199 2 268 1 221 1 291 2 271 1 124 2 272 1 174 2 293 2 82 8 
4 1 29 1 154 1 297 1 327 1 298 1 63 1 330 1 88 1 277 1 188 2 10 1 162 1 358 1 129 1 337 1 135 1 115 1 39 2 371 1 45 1 197 1 374 3 289 1 221 1 122 1 174 1 293 1 204 1 
371 1 168 1 4 1 297 1 197 1 298 1 330 1 374 2 289 1 88 2 344 1 89 1 188 2 10 1 162 1 174 1 293 1 204 1 
115 1 39 2 371 1 4 1 327 1 197 1 298 1 330 1 374 2 316 1 89 1 188 2 10 1 162 1 358 1 174 1 293 1 204 1 
4 1 297 1 327 1 298 1 330 2 88 2 89 1 188 2 10 1 162 2 358 1 337 1 115 1 39 2 371 1 168 1 197 2 374 4 289 1 174 1 293 1 204 2 
371 1 168 1 4 1 297 1 197 1 170 1 298 1 330 1 374 2 289 1 88 2 344 1 188 2 10 1 162 1 174 1 293 1 204 1 
115 1 39 2 371 1 4 1 327 1 197 1 170 1 298 1 330 1 374 2 316 1 188 2 10 1 162 1 358 1 174 1 293 1 204 1 
4 1 297 1 327 1 298 1 330 2 88 2 188 2 10 1 162 2 358 1 337 1 115 1 39 2 371 1 168 1 170 1 197 2 374 4 289 1 174 1 293 1 204 2 
115 1 39 2 371 1 168 1 4 1 297 1 327 1 197 2 298 1 330 2 374 4 289 1 88 2 188 2 10 1 358 1 162 2 174 1 293 1 337 1 204 2 
206 1 4 1 30 1 298 1 88 1 277 1 334 1 188 2 10 1 191 1 129 1 369 1 281 1 370 1 39 1 371 1 312 1 218 1 95 1 374 2 199 1 291 1 22 1 124 1 272 1 174 1 293 1 82 1 
206 1 275 1 296 1 4 1 30 1 298 1 88 1 277 1 334 1 9 1 188 2 10 1 129 1 369 1 281 1 370 1 39 1 371 1 312 1 95 1 374 2 199 1 291 1 124 1 272 1 174 1 293 1 82 1 
4 1 297 1 327 1 298 1 63 1 330 2 88 2 188 2 10 1 162 2 358 1 337 1 115 1 39 2 371 1 168 1 197 2 374 4 289 1 174 1 293 1 204 2 
4 1 297 1 327 1 30 1 298 1 330 2 88 2 277 1 188 2 10 1 358 1 162 2 191 1 129 1 37 1 281 1 337 1 115 1 370 1 39 2 371 1 168 1 312 1 218 1 197 2 95 1 374 4 289 1 199 1 291 1 22 1 124 1 81 1 174 1 293 1 204 2 82 1 
106 1 4 1 154 1 297 1 298 1 63 1 330 1 88 2 277 1 188 2 10 1 358 1 162 1 129 1 337 1 135 1 115 1 39 1 371 1 168 1 45 1 197 1 374 3 289 1 221 1 122 1 174 1 293 1 204 1 
55 1 371 1 188 2 269 1 10 1 4 1 248 1 196 1 71 1 293 1 
55 1 371 1 188 2 269 1 10 1 4 1 248 1 196 1 71 1 293 1 
55 1 371 1 188 2 269 1 10 1 4 1 248 1 196 1 71 1 293 1 
55 1 371 1 188 2 269 1 10 1 4 1 248 1 196 1 71 1 293 1 
55 1 371 1 188 2 269 1 10 1 4 1 248 1 196 1 71 1 293 1 
335 1 282 1 270 1 114 1 341 1 61 1 18 1 72 1 69 1 214 1 
187 1 264 1 
282 1 190 1 270 1 341 1 61 1 226 1 321 1 69 1 214 1 
180 1 282 1 325 1 326 1 61 1 341 1 72 1 108 1 21 1 335 1 80 2 51 1 270 1 128 1 114 1 130 1 69 1 214 1 
180 1 282 1 325 1 326 1 61 1 341 1 72 1 108 1 21 1 335 1 80 2 51 1 270 1 128 1 114 1 130 1 69 1 214 1 
180 1 282 1 325 1 326 1 61 1 341 1 72 1 108 1 21 1 335 1 80 2 51 1 270 1 128 1 114 1 130 1 69 1 214 1 
366 1 372 1 148 1 
366 1 372 1 148 1 
20 1 169 1 
366 1 20 1 169 1 
120 1 32 1 
84 1 180 1 325 1 61 1 31 1 32 1 277 2 187 1 334 1 128 1 129 2 264 1 69 1 214 1 135 2 305 1 282 1 45 2 341 1 120 1 221 2 21 1 143 1 80 1 363 1 270 1 100 1 
372 1 148 1 
366 1 20 1 169 1 
107 1 349 1 59 1 206 1 4 1 30 1 298 1 63 1 88 1 277 2 188 2 10 1 129 2 166 1 39 1 371 1 312 2 95 2 374 2 315 2 199 1 268 1 221 2 78 1 291 1 124 1 272 1 174 1 105 1 293 1 82 2 
193 1 307 1 194 1 367 1 324 1 312 2 95 2 155 2 75 1 291 1 66 1 124 1 23 1 240 1 14 1 125 1 37 1 103 1 82 2 
193 1 194 1 367 1 324 1 312 1 95 1 155 2 75 1 291 1 66 1 23 1 124 1 240 1 91 1 14 1 103 1 82 1 
307 1 339 1 312 1 30 1 95 1 198 1 199 1 211 1 8 1 291 1 124 1 14 1 369 1 82 1 
193 1 307 1 194 1 367 1 324 1 312 1 95 1 155 2 75 1 291 1 66 1 124 1 23 1 240 1 14 1 125 1 103 1 82 1 
93 1 
278 1 224 1 35 1 326 1 47 1 360 1 139 1 
323 1 180 1 60 1 326 2 276 1 186 1 159 1 35 1 133 1 267 1 373 1 139 1 19 1 224 1 21 1 145 1 102 1 
60 3 297 2 210 6 110 2 159 6 12 1 161 2 358 2 115 2 312 1 362 6 21 5 224 7 124 2 126 2 176 1 82 1 229 2 323 3 180 5 326 7 30 6 276 6 186 3 185 2 34 2 333 1 35 8 92 1 133 3 369 1 337 2 370 1 95 1 139 1 97 3 373 5 98 1 199 1 289 2 290 2 291 1 249 2 145 3 201 2 292 2 203 2 
323 2 180 1 60 1 207 1 5 1 297 2 326 5 210 5 184 1 276 3 185 2 186 2 34 1 158 1 262 1 159 3 35 8 279 1 12 1 358 2 133 2 337 2 137 1 115 2 308 1 283 1 373 1 139 2 289 2 362 5 21 1 224 5 145 2 24 1 126 1 
323 1 58 1 180 1 297 2 277 1 185 2 300 1 186 1 34 1 35 2 13 1 129 1 133 1 94 1 135 1 115 1 338 1 45 1 16 1 17 1 287 1 342 1 73 1 221 1 122 1 21 1 224 2 145 1 
323 1 326 1 360 1 139 1 186 1 278 1 224 1 35 1 145 1 133 1 
115 1 297 1 326 2 210 2 289 1 276 2 185 1 34 1 362 2 224 2 159 2 35 2 358 1 337 1 
21 1 180 1 60 1 326 1 139 1 373 1 
323 2 180 3 60 2 30 1 186 2 8 1 35 2 12 2 132 1 133 1 369 2 339 1 216 1 311 1 312 4 95 4 373 4 199 1 246 2 361 1 224 2 21 3 291 1 145 2 124 1 25 1 126 2 54 1 82 4 
4 1 30 1 298 1 277 3 334 1 188 2 10 1 191 1 129 3 369 1 281 1 135 2 370 1 39 1 371 1 338 1 312 1 45 2 218 1 95 1 374 1 199 1 221 2 122 2 291 1 22 1 272 1 124 1 174 1 293 1 82 1 251 1 
323 1 326 4 210 2 139 2 276 2 186 1 362 2 159 2 224 2 35 1 145 1 12 1 126 1 147 1 133 1 
359 1 282 1 341 1 
359 1 282 1 341 1 
282 1 114 1 341 1 6 1 32 1 
359 1 282 1 341 1 
136 1 282 1 341 1 
136 1 282 1 341 1 
136 1 282 1 341 1 
282 1 341 1 
61 1 214 1 
115 1 39 4 371 2 168 1 4 2 297 1 327 2 17 1 374 8 330 3 109 1 88 4 300 1 302 1 188 4 10 2 147 1 94 1 293 2 348 1 
115 1 39 3 297 1 47 1 327 2 17 1 109 1 330 2 374 6 88 3 300 1 147 1 348 1 94 1 
115 1 39 2 70 1 371 1 168 1 4 1 297 1 327 1 330 2 374 4 289 1 88 2 188 2 10 1 358 1 293 1 337 1 
115 1 243 1 39 4 168 1 5 1 297 1 327 1 184 1 374 7 330 2 88 3 289 1 158 2 358 1 337 1 
181 1 4 2 297 3 327 5 184 2 109 1 330 9 88 11 300 2 158 2 302 2 188 4 10 2 358 2 94 1 337 2 243 1 115 3 39 12 371 2 168 4 44 1 17 2 374 23 289 2 319 1 147 1 348 1 293 2 
39 1 158 1 374 1 
184 1 374 1 88 1 
115 1 70 1 39 3 371 1 168 1 4 1 297 1 327 2 374 6 330 3 289 1 88 3 188 2 10 1 358 1 292 1 293 1 337 1 
4 1 207 1 5 1 297 2 327 1 184 1 330 2 88 6 158 1 262 1 188 2 10 1 279 1 358 2 337 2 115 2 39 6 371 1 168 1 283 1 196 1 374 12 289 2 24 1 293 1 
115 1 39 3 168 1 297 1 327 1 17 1 374 6 330 2 88 3 300 1 94 1 
39 2 371 1 168 1 44 1 4 1 327 1 17 1 330 2 109 1 374 3 88 1 300 1 302 1 188 2 10 1 293 1 348 1 
115 2 39 5 371 1 58 1 168 2 4 1 297 2 196 1 327 3 17 2 330 5 374 10 88 5 300 2 188 2 10 1 293 1 94 1 
371 1 168 1 4 1 297 1 196 1 374 2 330 1 289 1 88 2 188 2 10 1 293 1 
115 1 39 2 371 1 168 1 4 1 297 1 327 1 196 1 330 2 374 4 289 1 88 2 188 2 10 1 358 1 293 1 337 1 
39 2 371 3 168 1 44 1 4 3 196 1 327 1 17 1 374 3 330 2 88 1 300 1 302 1 188 6 10 3 293 3 265 1 
0 1 4 4 5 1 297 4 327 5 184 3 109 1 330 10 88 14 300 2 158 4 302 1 188 8 10 4 358 3 94 1 337 3 265 1 243 1 115 4 39 15 70 1 371 4 309 1 168 5 196 1 17 2 374 29 289 3 147 1 104 1 348 1 293 4 
4 1 297 1 5 1 327 2 184 1 109 1 330 2 88 4 300 1 158 1 262 1 188 2 10 1 94 1 115 1 39 4 371 1 196 1 17 1 374 8 147 1 293 1 348 1 
4 2 5 1 297 2 327 2 184 1 109 1 330 3 88 6 300 1 158 2 262 1 188 4 10 2 94 1 337 1 115 1 243 1 39 5 70 1 371 2 168 1 196 1 17 1 374 11 289 1 147 1 348 1 293 2 
207 1 4 3 5 1 297 3 327 3 184 1 109 1 330 4 88 9 300 1 158 1 262 1 302 1 188 6 10 3 279 1 358 2 94 1 337 2 115 3 70 1 39 10 371 3 168 1 283 1 196 1 17 1 374 19 289 2 24 1 147 1 348 1 293 3 
4 3 207 1 5 1 297 3 327 3 184 1 109 1 330 5 88 10 300 1 158 1 262 1 302 1 188 6 10 3 279 1 358 1 94 1 337 2 115 2 70 1 39 7 371 3 168 2 283 1 196 1 17 1 374 17 289 2 24 1 147 1 348 1 293 3 
4 1 297 1 5 1 327 2 184 1 109 1 330 2 88 4 300 1 158 1 262 1 188 2 10 1 94 1 115 1 39 4 371 1 196 1 17 1 374 8 147 1 293 1 348 1 
4 1 207 1 5 1 297 2 327 1 184 1 330 2 88 6 158 1 262 1 188 2 10 1 279 1 358 2 337 2 115 2 39 6 371 1 168 1 283 1 196 1 374 12 289 2 24 1 293 1 
207 1 4 4 5 1 297 3 327 3 184 1 109 1 330 5 88 10 300 1 158 1 262 1 302 2 188 8 10 4 279 1 358 1 94 1 337 2 115 2 39 8 70 1 371 4 168 2 283 1 196 1 17 1 374 18 289 2 24 1 147 1 348 1 293 4 
207 1 4 4 5 1 297 3 327 3 184 1 330 6 88 9 158 1 262 1 302 2 188 8 10 4 279 1 358 2 337 3 265 1 115 2 39 7 371 4 168 3 283 1 196 1 374 16 289 3 24 1 293 4 
115 1 39 4 168 3 297 1 327 3 17 3 374 7 109 2 330 6 88 3 300 3 348 1 94 1 
207 1 4 4 5 1 297 3 327 3 184 1 109 1 330 4 88 10 300 1 158 1 262 1 302 2 188 8 10 4 279 1 358 1 94 1 337 2 265 1 115 2 39 8 371 4 168 1 283 1 196 1 17 1 374 18 289 2 24 1 147 1 348 1 293 4 
40 1 334 1 129 1 313 1 146 1 277 1 221 1 
40 1 153 1 313 1 221 1 277 1 334 1 263 1 111 1 129 1 241 1 146 1 213 1 
8 1 291 1 339 1 312 1 124 1 47 1 30 1 95 1 369 1 199 1 82 1 
370 1 45 1 312 1 218 1 30 1 95 1 199 1 221 1 277 2 334 1 291 1 112 1 124 1 129 2 369 1 281 1 135 1 82 1 
150 1 370 2 45 1 312 1 218 1 30 3 95 1 121 1 199 2 73 1 221 2 277 2 246 1 334 1 291 1 11 1 112 1 124 1 129 2 134 1 281 1 135 2 82 1 
253 1 150 1 275 1 30 3 277 2 334 1 112 1 11 1 129 2 281 1 134 1 135 2 370 2 312 2 45 1 95 2 121 1 199 2 221 2 73 1 246 1 291 1 124 1 82 2 
253 1 180 2 326 1 30 4 110 1 15 1 369 1 134 1 370 1 284 1 312 3 95 3 373 1 97 1 139 1 121 1 199 1 246 1 21 2 291 1 124 1 82 3 229 1 
253 1 370 1 180 2 312 3 326 1 95 3 30 4 139 1 97 1 373 1 121 1 199 1 246 1 110 1 21 2 291 1 124 1 369 1 203 1 134 1 229 1 82 3 
365 1 291 1 312 1 124 1 95 1 82 1 
365 1 370 1 28 1 367 1 312 6 95 7 30 3 286 1 315 1 199 2 268 1 291 2 271 1 239 1 50 1 124 3 92 1 37 1 67 1 369 2 82 7 
107 1 257 1 4 2 297 1 298 2 63 1 109 1 300 1 10 2 112 1 162 1 115 1 312 1 218 1 17 1 221 1 22 1 124 1 81 1 174 2 82 1 327 2 30 1 330 2 88 3 277 2 334 2 188 4 191 1 129 2 37 1 281 1 94 1 135 1 370 1 39 3 371 2 45 1 95 1 197 1 374 6 199 1 291 1 147 1 293 2 348 1 204 1 
323 2 180 3 60 1 326 1 30 2 186 2 278 1 110 1 35 1 369 1 133 2 312 1 360 1 95 1 139 1 97 1 373 2 290 1 224 1 21 3 143 1 145 2 249 1 201 1 54 1 203 1 82 1 229 1 
365 1 370 1 312 2 95 2 30 2 98 1 199 1 110 1 291 1 124 2 92 1 37 1 82 2 
253 1 339 1 312 4 95 4 30 1 220 1 199 1 8 1 291 1 124 1 37 1 369 1 82 4 
252 1 370 1 28 1 41 1 312 2 95 2 30 1 199 1 246 1 160 1 291 1 50 1 124 2 82 2 
291 1 324 1 312 1 124 1 23 1 240 1 95 1 155 1 369 1 82 1 
367 1 59 1 312 2 95 2 30 1 199 1 268 1 291 1 124 1 37 1 82 2 
339 1 312 4 95 5 30 3 286 1 220 1 199 2 268 1 246 1 8 1 291 2 271 1 124 2 37 1 369 1 82 5 
339 1 312 4 95 5 30 3 286 1 220 1 199 2 268 1 246 1 8 1 291 2 237 1 124 2 37 1 369 1 82 5 
370 1 275 1 45 1 312 1 30 1 95 1 199 1 221 1 277 2 334 1 291 1 112 1 124 1 129 2 369 1 281 1 135 1 82 1 
370 1 28 1 312 1 95 1 30 1 199 1 246 1 291 1 239 1 50 1 124 2 92 1 82 1 
166 1 221 1 277 1 78 1 129 1 131 1 192 1 280 1 105 1 
328 1 131 1 83 1 
334 1 259 1 131 1 192 1 280 1 
150 1 57 1 180 2 326 1 138 1 328 1 139 1 259 2 73 1 357 1 334 1 21 2 143 1 11 1 131 1 192 2 280 2 229 1 83 1 
295 1 173 1 3 1 47 1 
295 1 255 1 173 1 3 1 352 1 233 1 250 1 
52 1 233 1 329 1 
244 2 255 1 295 1 3 1 351 1 352 3 233 3 7 1 261 1 79 1 173 1 250 1 
295 1 255 1 173 1 3 1 352 2 233 2 336 1 250 1 304 1 
75 1 261 1 255 1 3 1 36 1 340 1 324 1 352 1 233 1 155 1 250 1 
261 1 255 1 173 1 3 1 352 1 233 1 250 1 
261 1 295 1 255 1 173 2 352 1 233 1 250 1 
310 1 255 2 3 1 352 2 353 1 233 2 261 1 173 1 101 1 250 2 
295 1 255 1 3 2 352 3 233 3 141 1 261 1 49 1 173 1 36 1 364 1 250 1 304 2 
193 1 295 1 255 1 3 1 352 2 324 1 233 2 155 2 314 1 261 1 75 1 173 1 240 1 250 1 304 1 
295 1 255 2 3 2 352 4 233 4 261 1 173 1 36 1 99 1 364 1 250 2 336 1 304 2 
261 1 295 1 255 1 173 1 3 1 352 1 233 1 250 1 
244 1 295 2 255 1 351 1 3 3 352 4 233 4 7 1 171 1 173 2 36 1 364 1 250 1 304 2 
261 1 151 1 295 1 255 1 173 1 3 1 352 2 233 2 320 1 250 1 304 1 175 1 
244 2 255 1 295 1 351 1 3 1 352 3 233 3 258 1 7 2 261 1 173 1 250 1 
3 2 273 1 347 1 299 2 
261 1 255 1 352 1 123 1 233 1 250 1 
261 1 295 1 255 1 173 1 3 1 352 2 233 2 250 1 304 1 141 1 
163 1 
261 1 295 1 255 1 173 1 3 1 352 1 233 1 250 1 
261 1 244 1 295 1 255 1 173 1 3 1 352 3 233 3 250 1 304 1 141 1 
3 1 36 1 364 1 171 1 
173 1 3 1 

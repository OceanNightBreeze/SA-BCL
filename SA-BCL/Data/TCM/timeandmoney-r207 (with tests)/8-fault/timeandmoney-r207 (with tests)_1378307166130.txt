#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 111 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 356 (118,221,266) (93,206,228) (93,206,228) (93,206,228) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 127 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 356 (118,221,266) (118,221,266) (118,221,266) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 188 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1921 | return null
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V | STATEMENT | 842 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 5180 | return null
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String; | RETURN | 2871 | return null
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3635 | 1 -> 2
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J | OPERATOR | 2226 | * -> +
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
349 9 26 1 354 1 71 1 229 1 303 1 356 2 214 1 101 1 196 1 336 2 128 2 199 3 364 1 110 2 291 2 204 5 137 2 242 6 269 1 141 1 40 4 248 2 65 1 251 1 297 9 375 1 164 1 
349 9 26 1 354 1 71 1 229 1 303 1 356 2 214 1 101 1 196 1 336 2 128 2 199 3 364 1 110 2 291 2 204 5 137 2 242 6 269 1 141 1 40 4 248 2 65 1 251 1 297 9 375 1 164 1 
349 10 26 1 354 1 71 1 229 1 303 1 356 2 214 1 101 1 196 1 336 2 128 2 199 4 364 1 110 2 291 2 204 6 137 2 242 7 269 1 141 1 40 5 248 2 65 1 251 1 297 10 375 1 164 1 
349 7 26 1 354 1 71 1 303 1 356 2 214 1 101 1 196 1 336 1 128 2 199 2 364 1 110 2 291 2 204 4 137 2 242 4 269 1 141 1 40 3 248 2 65 1 251 1 297 7 375 1 164 1 
364 1 110 1 349 4 291 1 26 1 204 3 354 1 229 1 356 1 242 3 214 1 40 2 248 1 65 1 336 2 297 4 128 1 199 1 
364 1 110 1 349 2 291 1 204 1 280 1 137 1 354 1 356 1 305 1 270 1 248 1 65 1 251 1 297 2 375 1 
364 1 248 2 349 3 110 2 65 1 204 2 137 1 354 1 297 3 199 1 242 1 141 1 40 1 
364 1 110 2 349 9 291 1 26 1 204 5 137 1 71 1 354 1 229 1 356 1 223 1 242 7 214 1 141 1 40 4 248 2 196 1 65 1 336 2 128 1 297 9 129 1 199 3 
364 1 110 2 349 9 291 1 26 1 204 5 137 1 71 1 354 1 229 1 356 1 223 1 242 7 214 1 141 1 40 4 248 2 196 1 65 1 336 2 128 1 297 9 129 1 199 3 
274 1 344 1 98 1 
41 1 267 2 98 1 
60 1 234 1 174 2 263 2 203 2 64 2 146 2 218 2 
327 1 166 1 167 1 28 2 151 1 333 1 304 1 99 1 306 1 217 1 76 2 174 2 102 1 311 1 260 1 131 1 130 1 218 2 313 1 183 1 156 1 289 1 234 1 263 2 264 1 238 2 203 3 84 2 85 1 225 1 369 1 60 1 42 1 63 2 64 2 296 1 67 1 146 3 68 1 
289 1 368 1 60 1 262 1 174 1 263 1 203 1 64 1 146 1 218 1 
289 1 227 1 95 1 9 1 203 1 329 1 98 1 176 1 360 1 64 1 274 1 326 1 146 1 33 1 
289 1 95 2 227 1 9 1 263 1 203 1 329 1 98 1 174 1 64 1 274 1 326 2 146 1 33 1 218 1 
23 1 95 1 331 1 326 1 173 1 
95 2 11 1 274 1 331 1 326 2 173 1 98 1 125 1 
95 1 331 1 326 1 
289 1 95 1 262 1 25 1 263 1 203 1 173 1 368 1 60 1 174 1 64 1 326 1 146 1 218 1 
98 1 
95 2 236 1 274 1 331 1 326 2 173 1 98 1 125 1 
95 5 300 1 240 2 222 1 330 1 83 1 12 1 331 2 173 2 355 1 39 1 98 1 125 1 231 2 43 2 274 1 252 1 326 5 116 1 
234 1 344 1 
263 1 234 2 203 2 281 1 126 1 174 1 64 2 146 2 218 1 
103 1 7 1 77 1 
289 1 327 1 234 1 238 1 166 1 203 1 167 1 84 1 28 1 85 1 151 1 304 1 102 1 309 1 311 1 146 1 130 1 313 1 
327 1 263 1 238 1 96 1 166 1 203 2 167 1 84 1 28 1 151 1 304 1 187 1 174 1 102 1 64 1 311 1 130 1 146 2 313 1 77 1 
234 1 174 3 263 3 203 3 64 3 146 3 218 1 187 1 
289 1 262 1 174 1 263 1 203 1 64 1 146 1 
289 1 126 1 174 1 263 1 203 1 64 1 281 1 146 1 218 1 
227 1 95 1 327 1 166 1 96 1 329 1 167 1 28 1 151 1 304 1 99 1 306 1 76 2 126 1 174 3 102 1 311 1 260 1 130 1 33 1 313 1 218 2 183 1 155 1 289 1 9 1 234 1 263 3 264 1 238 1 203 4 84 1 225 1 187 1 369 1 60 1 42 1 63 1 64 3 296 1 276 1 326 1 146 4 68 1 
234 1 174 1 263 1 360 1 239 1 203 2 64 2 146 2 187 1 
289 1 95 1 227 1 9 1 263 3 96 1 203 3 329 1 187 2 98 1 126 1 174 3 64 3 276 1 326 1 146 3 33 1 218 1 78 1 
263 2 203 2 187 1 126 1 174 2 64 2 7 1 146 2 218 1 77 1 
289 1 327 1 234 1 238 1 166 1 203 1 167 1 84 1 28 1 85 1 151 1 304 1 102 1 311 1 146 1 130 1 313 1 
289 1 290 1 327 1 234 1 238 1 203 1 167 1 84 1 28 1 85 1 151 1 304 1 162 1 102 1 146 1 130 1 313 1 
70 1 1 1 172 1 99 2 306 1 217 2 76 2 103 2 7 2 260 1 77 2 233 1 202 1 136 1 264 1 157 1 82 1 161 1 369 1 246 1 42 1 63 4 296 1 345 1 
289 1 174 1 263 1 57 1 329 1 203 1 64 1 146 1 
263 4 234 1 239 1 96 1 203 5 187 2 367 1 126 1 174 4 360 1 49 1 64 5 146 5 218 1 
289 1 262 1 174 2 263 2 57 1 203 2 64 2 146 2 
343 1 92 1 
343 1 92 1 
310 1 220 1 
310 1 220 1 
310 1 220 1 
272 1 343 1 92 1 
272 1 343 1 92 1 
343 1 92 1 106 1 
62 1 353 1 310 1 343 2 92 2 220 1 
272 1 343 1 92 1 
179 1 343 1 92 1 
179 1 343 1 92 1 
179 1 343 1 92 1 
95 2 365 1 235 2 237 2 81 2 72 1 121 1 124 1 268 1 98 1 75 3 370 2 62 1 273 1 45 1 51 2 343 2 92 2 326 2 
95 1 124 1 75 1 359 1 174 2 106 1 135 1 79 1 234 1 263 2 235 1 237 1 203 2 81 1 159 1 370 1 271 1 64 2 144 1 343 1 92 1 326 1 146 2 210 1 
291 1 128 1 356 1 
291 1 280 1 356 1 
89 1 291 3 5 1 2 1 280 1 128 2 
89 1 291 2 2 1 280 1 128 1 153 1 
89 1 291 2 2 2 280 1 128 1 
95 5 165 1 255 1 330 2 331 1 172 1 173 4 257 2 125 1 98 2 30 2 232 1 231 1 133 1 107 1 79 1 202 1 136 1 240 1 82 1 205 1 159 1 86 1 267 3 321 2 41 1 271 1 43 1 274 1 252 1 326 5 116 3 
23 5 95 9 165 2 255 2 120 1 301 1 330 6 331 6 172 3 355 1 173 7 98 5 125 1 30 6 231 2 107 3 54 1 202 3 136 3 240 2 82 3 159 4 86 1 267 9 321 6 244 1 41 3 247 1 250 5 43 2 274 1 326 9 252 1 192 1 116 8 
95 3 165 1 255 1 330 2 172 1 173 2 355 1 257 1 98 3 30 2 231 1 133 1 107 1 202 1 136 1 240 1 82 1 205 1 159 1 267 4 321 2 41 2 43 1 274 1 326 3 116 3 
95 4 165 1 255 1 120 1 330 4 172 2 355 1 173 3 257 2 98 4 30 4 231 1 133 1 107 2 202 2 136 2 240 1 82 2 205 1 159 2 267 7 321 4 244 1 41 3 43 1 274 1 326 4 192 1 116 5 
283 1 102 1 344 1 
102 1 351 1 
212 1 
327 1 102 1 
283 2 335 1 327 1 175 1 102 3 151 1 
327 1 102 1 151 1 
102 1 256 1 
233 2 0 1 202 1 56 2 316 1 1 3 82 1 160 1 357 1 215 1 99 3 217 4 307 1 143 1 63 7 105 1 182 1 
233 2 0 1 202 1 56 2 316 1 1 3 82 1 160 1 357 1 215 1 99 3 217 4 307 1 143 1 63 7 105 1 182 1 
233 2 0 1 202 1 56 2 316 1 1 3 82 1 302 1 160 1 357 1 215 1 99 3 217 4 307 1 143 1 63 7 105 1 182 1 
24 1 1 6 172 3 215 1 357 4 99 11 306 1 76 2 217 11 307 1 312 1 362 1 107 3 233 2 201 1 56 1 136 3 202 3 316 2 292 4 111 1 82 3 14 1 369 1 42 1 143 1 17 3 63 22 296 1 226 1 
0 1 1 4 357 1 215 1 99 4 216 1 306 2 76 4 217 5 307 1 182 1 8 1 233 3 201 1 202 1 56 2 316 1 82 1 160 1 369 2 42 2 63 9 143 1 296 2 
118 1 349 1 350 1 228 1 280 1 168 1 28 1 354 1 356 1 304 1 100 1 5 1 128 1 180 1 313 1 132 1 110 1 238 1 291 2 84 1 137 1 206 1 140 1 248 1 297 1 93 1 
118 1 349 3 350 1 280 1 168 1 28 1 194 1 356 1 304 1 100 1 5 1 128 1 180 1 313 1 132 1 364 1 110 1 238 1 291 2 204 1 84 1 137 1 206 1 242 2 208 1 248 1 65 1 297 3 19 1 147 1 93 1 
118 1 349 2 350 1 280 1 168 1 28 1 194 1 356 1 304 1 100 1 5 1 180 1 128 1 313 1 364 1 238 1 291 2 204 1 137 1 84 1 242 2 208 1 65 1 297 2 147 1 93 1 
327 1 110 1 349 1 350 2 238 1 167 1 265 1 137 2 84 1 28 1 168 2 139 1 304 1 248 1 102 1 286 1 31 1 287 1 297 1 180 2 19 1 313 1 69 1 
118 1 349 1 350 1 228 1 280 1 168 1 28 1 354 1 356 1 304 1 100 1 5 1 128 1 180 1 313 1 132 1 110 1 238 1 291 2 84 1 137 1 206 1 208 1 248 1 297 1 93 1 
169 1 
95 5 227 1 327 1 329 1 46 1 330 2 331 6 282 1 334 1 98 2 231 1 102 1 287 1 52 2 289 1 9 1 238 2 240 1 203 1 207 1 341 4 61 2 245 2 16 2 15 1 64 1 163 1 252 1 116 2 167 2 255 1 28 2 170 2 304 1 125 3 176 1 177 1 360 1 261 1 33 1 313 1 366 1 80 1 265 1 84 2 317 1 267 2 189 2 41 2 43 1 372 1 274 1 145 2 326 5 146 1 
95 3 227 1 329 1 331 2 125 1 176 1 360 1 261 1 33 1 289 1 9 1 236 1 203 1 80 1 317 1 207 1 341 2 64 1 372 1 326 3 145 1 146 1 
95 3 227 1 329 1 331 1 98 1 125 1 176 1 360 1 261 1 33 1 289 1 9 1 236 1 203 1 80 1 317 1 207 1 341 3 16 1 64 1 372 1 274 1 326 3 146 1 
95 3 227 1 329 1 331 2 125 1 98 1 176 1 360 1 261 1 33 1 289 1 9 1 236 1 203 1 80 1 317 1 207 1 189 1 341 3 16 1 64 1 372 1 274 1 326 3 145 1 146 1 
227 1 95 5 329 1 46 1 330 1 331 7 150 1 334 1 98 5 231 1 52 2 108 1 289 1 338 1 9 1 236 1 240 1 203 1 114 1 207 1 341 6 245 2 61 2 16 4 64 1 252 1 116 1 170 2 125 3 176 1 360 1 261 1 33 1 80 1 317 1 189 4 41 2 43 1 44 1 372 1 274 5 145 4 326 5 146 1 
227 1 95 4 46 1 329 1 330 1 331 4 334 1 98 2 231 1 52 2 289 1 9 1 240 1 203 1 207 1 341 4 245 2 61 2 16 2 64 1 252 1 116 1 170 2 125 2 176 1 360 1 261 1 33 1 366 1 80 1 317 1 267 2 189 2 41 2 43 1 372 1 274 1 326 4 145 2 146 1 
95 4 227 1 46 1 329 1 330 1 331 4 170 2 150 1 334 1 98 1 125 2 231 1 176 1 360 1 261 1 33 1 52 2 108 1 289 1 338 1 9 1 240 1 203 1 80 1 317 1 207 1 189 2 341 4 61 2 245 2 41 2 16 2 43 1 64 1 372 1 274 1 145 2 326 4 252 1 146 1 116 1 
95 4 227 1 46 1 329 1 330 1 331 4 170 2 150 1 334 1 98 1 125 2 231 1 176 1 360 1 261 1 33 1 52 2 108 1 289 1 338 1 9 1 240 1 203 1 80 1 317 1 207 1 189 2 341 4 61 2 245 2 41 2 16 2 43 1 64 1 372 1 274 1 145 2 326 4 252 1 146 1 116 1 
289 1 227 1 95 2 9 1 329 1 203 1 80 1 317 1 207 1 48 1 341 2 127 1 176 1 360 1 64 1 372 1 326 2 261 1 146 1 33 1 
95 4 227 1 46 1 329 1 330 1 331 5 170 2 150 1 334 1 98 1 125 2 231 1 176 1 360 1 261 1 33 1 52 2 108 1 289 1 338 1 9 1 240 1 203 1 80 1 317 1 207 1 189 3 341 5 61 2 245 2 41 2 43 1 16 3 44 1 64 1 372 1 274 1 252 1 326 4 145 3 146 1 116 1 
95 4 227 1 46 1 329 1 330 1 331 5 170 2 150 1 334 1 98 1 125 2 231 1 176 1 360 1 261 1 33 1 52 2 108 1 289 1 338 1 9 1 240 1 203 1 80 1 317 1 207 1 189 3 341 5 61 2 245 2 41 2 43 1 16 3 44 1 64 1 372 1 274 1 252 1 326 4 145 3 146 1 116 1 
227 1 95 4 329 1 330 1 331 4 152 2 334 1 98 1 231 1 289 1 9 1 240 1 203 1 207 1 341 4 245 2 16 2 64 1 252 1 348 2 116 1 170 2 125 2 176 1 360 1 261 1 33 1 366 1 80 1 317 1 267 2 88 1 189 2 43 1 372 1 274 1 326 4 145 2 146 1 
0 1 1 2 215 1 99 3 306 1 76 2 217 3 103 1 7 1 260 1 77 1 182 1 233 2 202 1 234 2 56 1 264 1 82 1 160 1 369 1 42 1 143 1 63 6 296 1 344 1 345 1 
24 1 117 1 1 4 172 2 357 2 99 9 306 2 76 4 217 13 103 16 7 6 154 1 260 1 77 16 183 1 107 4 156 1 233 2 234 1 55 1 136 4 202 2 264 2 292 4 82 4 320 2 369 2 42 2 63 22 17 4 296 2 226 2 253 1 
327 1 96 1 148 1 151 1 99 1 102 1 7 1 156 1 289 1 234 1 238 1 203 2 63 2 64 1 296 1 117 1 166 1 167 1 28 1 171 1 73 1 304 1 306 1 217 1 76 2 174 1 309 1 311 1 260 1 130 1 313 1 183 1 263 1 264 1 84 1 85 1 187 1 369 1 42 1 146 2 
0 2 328 1 327 2 1 6 96 1 151 2 99 13 102 2 103 7 7 7 337 2 107 2 289 1 156 1 233 5 56 1 234 3 202 5 238 1 203 3 58 2 160 1 59 2 63 27 64 1 296 3 68 2 117 1 166 2 167 1 28 1 172 2 304 2 357 1 215 2 306 3 76 6 217 14 174 1 308 2 311 2 260 3 130 2 313 2 77 7 182 1 183 1 36 1 263 1 136 2 264 3 84 1 82 5 85 1 187 1 369 3 42 3 143 2 146 3 374 1 
327 2 167 1 28 2 332 1 123 1 151 1 333 1 304 2 99 1 306 1 76 2 217 1 102 2 287 1 260 1 313 3 183 1 156 1 238 2 264 1 84 2 265 1 13 1 87 1 369 1 371 1 42 1 63 2 296 1 325 1 
117 1 1 1 172 1 99 2 306 1 126 1 76 2 217 1 174 1 103 1 7 1 260 1 218 1 77 1 107 1 233 1 263 1 136 1 202 1 264 1 203 1 82 1 294 1 369 1 42 1 63 3 64 1 296 1 146 1 
136 1 264 1 1 1 82 1 357 1 369 1 306 1 76 2 246 1 217 2 42 1 63 2 103 1 7 1 296 1 345 1 260 1 77 1 
233 1 202 1 264 1 1 1 172 1 161 1 99 2 369 1 306 1 76 2 42 1 63 2 103 1 7 1 296 1 345 1 260 1 77 1 
1 2 172 1 357 1 99 2 306 1 217 2 76 2 103 2 7 2 260 1 77 2 107 1 233 1 136 1 202 1 264 1 82 1 369 1 42 1 63 4 296 1 345 1 
136 1 264 1 1 1 82 1 357 1 369 1 306 1 76 2 246 1 217 2 42 1 63 2 103 1 7 1 296 1 325 1 260 1 77 1 
233 1 202 1 264 1 1 1 172 1 161 1 99 2 369 1 306 1 76 2 42 1 63 2 103 1 7 1 296 1 325 1 260 1 77 1 
1 2 172 1 357 1 99 2 306 1 217 2 76 2 103 2 7 2 260 1 77 2 107 1 233 1 136 1 202 1 264 1 82 1 369 1 42 1 63 4 296 1 325 1 
233 1 202 1 136 1 264 1 1 2 82 1 172 1 357 1 99 2 369 1 306 1 76 2 217 2 42 1 63 4 103 2 7 2 296 1 260 1 77 2 107 1 
327 1 166 1 167 1 28 1 151 1 304 1 99 1 306 1 217 1 76 2 102 1 311 1 260 1 130 1 313 1 183 1 156 1 289 1 234 1 238 1 264 1 203 1 84 1 85 1 369 1 42 1 63 2 296 1 146 1 68 1 
327 1 167 1 28 1 151 1 304 1 99 1 306 1 76 2 102 1 260 1 130 1 313 1 183 1 289 1 290 1 234 1 37 1 238 1 264 1 203 1 84 1 85 1 162 1 369 1 42 1 63 1 296 1 146 1 
117 1 1 2 172 1 357 1 99 2 306 1 217 2 76 2 103 2 7 2 260 1 77 2 107 1 233 1 136 1 202 1 264 1 82 1 369 1 42 1 63 4 296 1 
327 1 1 1 166 1 28 1 172 1 151 1 304 1 99 2 306 1 217 2 76 2 308 1 102 1 103 2 7 2 311 1 260 1 130 1 313 1 77 2 107 1 233 1 202 1 136 1 238 1 264 1 203 1 82 1 84 1 140 1 369 1 42 1 63 4 296 1 146 1 68 1 
117 1 1 1 172 1 357 1 99 1 306 1 126 1 76 2 217 2 174 1 103 1 7 1 260 1 218 1 77 1 107 1 202 1 263 1 136 1 264 1 203 1 82 1 322 1 369 1 42 1 63 3 64 1 296 1 146 1 
278 1 24 2 1 6 29 1 172 4 357 3 99 16 306 4 76 8 217 15 361 1 32 1 104 1 181 1 288 1 107 4 201 2 233 3 8 1 136 4 202 4 10 3 292 3 339 1 82 4 112 1 369 4 190 1 42 4 63 31 17 2 324 1 90 1 296 4 226 1 20 1 
278 1 24 2 1 8 29 1 172 6 357 4 99 22 306 3 76 6 217 24 361 1 32 1 104 2 288 1 107 7 201 2 8 1 233 4 136 7 202 6 10 4 339 2 292 4 82 7 320 2 243 1 369 3 190 1 42 3 63 46 17 4 324 1 90 1 296 3 226 2 20 1 
278 1 24 3 1 10 29 1 172 5 357 6 99 21 306 4 76 8 217 25 361 1 32 1 104 1 181 1 288 1 107 7 201 2 233 4 8 1 136 7 202 5 10 4 292 5 339 2 82 7 158 1 320 2 243 1 369 4 190 1 42 4 63 46 17 5 324 1 90 1 296 4 226 2 20 1 
278 1 24 2 1 5 29 1 172 4 357 3 99 17 306 4 76 8 217 16 361 1 32 1 104 1 181 1 288 1 107 4 201 2 233 2 8 1 136 4 202 4 10 4 292 3 339 1 82 4 243 1 369 4 190 1 42 4 63 33 17 2 324 1 90 1 296 4 226 1 20 1 
278 1 0 1 24 2 1 14 29 1 172 7 215 1 357 6 99 27 306 3 76 6 217 27 361 1 32 1 104 1 288 1 182 1 107 7 201 2 233 8 8 1 56 1 136 7 202 8 10 4 292 4 339 1 82 8 160 1 320 2 243 1 369 3 190 1 42 3 143 1 63 54 17 4 324 1 90 1 296 3 226 2 20 1 
195 1 370 1 62 1 235 1 237 1 273 1 81 1 72 1 343 1 92 1 
135 1 106 1 
370 1 254 1 235 1 237 1 3 1 81 1 213 1 343 1 92 1 
95 1 365 1 235 1 237 1 81 1 72 1 124 1 268 1 98 1 75 2 370 1 62 1 273 1 45 1 51 1 343 1 326 1 92 1 
95 1 365 1 235 1 237 1 81 1 72 1 124 1 268 1 98 1 75 2 370 1 62 1 273 1 45 1 51 1 343 1 326 1 92 1 
95 1 365 1 235 1 237 1 81 1 72 1 124 1 268 1 98 1 75 2 370 1 62 1 273 1 45 1 51 1 343 1 326 1 92 1 
272 1 353 1 200 1 
272 1 353 1 200 1 
285 1 179 1 
285 1 179 1 353 1 
144 1 210 1 
95 1 173 1 75 1 359 1 174 2 51 1 106 1 135 1 79 1 234 1 235 1 263 2 237 1 203 2 81 1 159 1 370 1 271 1 323 1 64 2 45 1 144 1 343 1 326 1 92 1 146 2 210 1 
272 1 200 1 
285 1 179 1 353 1 
117 1 327 1 193 1 28 2 333 2 304 1 4 1 99 1 358 1 306 1 76 2 217 1 102 1 50 1 260 1 313 1 183 1 156 1 238 2 264 1 203 2 84 2 87 1 369 1 42 1 63 2 64 2 296 1 146 2 299 1 373 1 
118 1 221 1 291 2 238 2 350 1 280 1 84 2 28 2 356 1 266 1 304 1 140 1 208 1 100 1 5 1 128 1 313 1 34 1 132 1 
118 1 221 1 291 2 238 1 350 1 280 1 84 1 28 1 356 1 304 1 208 1 100 1 5 1 128 1 313 1 219 1 132 1 
327 1 238 1 350 1 167 1 84 1 265 1 28 1 304 1 102 1 287 1 313 1 34 1 115 1 69 1 
118 1 221 1 291 2 238 1 350 1 280 1 84 1 28 1 356 1 266 1 304 1 208 1 100 1 5 1 128 1 313 1 34 1 132 1 
38 1 
222 1 274 1 330 1 83 1 344 1 116 1 98 1 
95 1 46 1 330 1 331 1 98 2 125 1 231 1 52 1 240 1 267 1 61 1 41 1 43 1 274 1 252 1 326 1 116 1 
327 1 238 1 351 1 240 1 167 1 84 1 28 1 151 1 304 1 188 1 335 1 231 1 102 2 43 1 191 1 252 1 313 2 
95 1 24 1 255 1 330 8 331 1 29 1 282 1 172 4 125 1 98 7 30 8 231 2 361 1 32 1 198 1 107 4 136 4 202 4 292 2 240 2 82 4 267 10 320 1 321 8 41 5 249 3 43 2 17 2 342 1 90 1 274 2 18 1 326 1 252 2 226 1 20 1 116 13 
95 1 0 1 328 1 25 1 330 2 150 1 215 1 231 1 174 1 218 1 289 1 262 1 202 1 263 1 240 1 203 1 82 2 368 1 60 1 249 2 143 1 43 1 64 1 342 1 252 1 326 1 146 1 116 2 
240 1 222 1 83 1 330 1 98 1 231 1 43 1 274 1 252 1 116 1 
136 2 202 2 82 2 330 5 172 2 267 10 59 1 321 5 98 5 30 5 41 5 249 2 342 1 107 2 116 5 
95 1 274 1 331 1 326 1 98 1 125 1 
95 3 327 1 167 2 255 2 330 2 28 4 331 4 282 2 355 1 304 1 125 2 74 1 231 2 102 1 6 1 287 1 313 1 315 1 238 4 240 2 84 4 265 1 113 2 15 1 43 2 163 1 252 1 326 3 116 2 
327 1 166 1 167 1 28 1 151 1 304 1 99 1 306 1 76 2 174 2 102 1 311 1 260 1 130 1 218 2 313 1 183 1 234 1 263 2 238 1 264 1 203 3 84 1 225 1 369 1 60 1 42 1 63 1 64 2 296 1 146 3 68 1 
56 1 240 1 255 1 330 2 282 1 267 4 321 2 98 4 30 2 41 2 231 1 43 1 274 2 252 1 116 1 
258 1 235 1 81 1 
258 1 235 1 81 1 
235 1 144 1 81 1 72 1 47 1 
258 1 235 1 81 1 
235 1 81 1 363 1 
235 1 81 1 363 1 
235 1 81 1 363 1 
235 1 81 1 
343 1 92 1 
233 2 201 1 0 1 56 1 202 1 1 3 82 1 160 1 357 1 215 1 99 4 369 2 306 2 217 4 76 4 42 2 63 8 143 1 296 2 182 1 
233 2 0 1 56 1 202 1 1 2 82 1 160 1 215 1 99 3 217 3 143 1 63 6 344 1 182 1 
233 1 202 1 136 1 1 2 82 1 172 1 357 1 99 2 369 1 306 1 76 2 217 2 42 1 63 4 66 1 296 1 107 1 
233 1 24 1 136 2 202 2 1 2 292 2 82 2 172 2 320 1 357 1 99 6 217 6 63 12 17 2 226 1 107 2 
0 1 1 9 172 2 215 2 357 4 99 12 306 2 217 11 76 4 154 1 182 1 107 2 233 5 201 2 56 1 136 2 202 3 292 2 82 3 160 1 224 1 320 1 369 2 42 2 143 2 17 2 63 23 296 2 226 1 
99 1 63 1 292 1 
217 1 63 1 17 1 
233 2 136 1 202 1 1 3 82 1 172 1 59 1 357 1 99 3 306 1 369 1 76 2 217 3 42 1 63 6 66 1 296 1 107 1 
24 1 1 4 29 1 172 4 357 2 99 11 306 1 76 2 217 11 361 1 32 1 107 4 8 1 233 2 136 4 202 4 292 2 82 4 320 1 369 1 42 1 17 2 63 22 90 1 296 1 226 1 20 1 
233 1 0 1 202 1 1 2 82 1 215 1 357 1 99 3 217 3 63 6 143 1 
233 1 201 1 1 2 160 1 224 1 357 1 215 1 99 2 369 1 306 1 217 1 76 2 42 1 143 1 63 3 296 1 182 1 
8 1 233 3 0 1 328 1 202 2 1 5 82 2 215 2 357 2 99 5 306 1 369 1 76 2 217 5 42 1 143 2 63 10 296 1 
8 1 136 1 1 1 82 1 357 1 369 1 306 1 76 2 217 2 42 1 63 2 296 1 
233 1 8 1 202 1 136 1 1 2 82 1 172 1 357 1 99 2 369 1 306 1 76 2 217 2 42 1 63 4 296 1 107 1 
201 1 8 1 233 1 1 2 224 1 215 1 357 1 99 2 369 3 306 3 76 6 217 1 42 3 63 3 143 1 296 3 181 1 
0 1 24 1 328 1 1 4 357 2 215 1 99 6 306 3 76 6 217 6 181 1 362 1 182 1 233 2 8 1 202 2 292 1 82 2 160 1 369 3 42 3 63 12 17 1 143 1 66 1 296 3 
0 2 24 1 328 1 1 9 29 1 172 1 215 2 357 4 99 10 306 2 76 4 217 14 361 1 32 1 182 1 107 2 201 1 8 1 233 5 56 1 136 2 202 4 292 1 82 5 160 1 369 2 42 2 143 2 17 1 63 24 90 1 296 2 20 1 
0 1 24 1 1 3 215 1 357 1 99 5 306 2 76 4 217 6 361 1 182 1 107 1 233 2 8 1 56 1 202 1 136 1 292 2 82 2 160 1 369 2 42 2 143 1 63 11 17 1 66 1 296 2 226 1 
0 1 24 1 1 6 29 1 172 4 215 1 357 2 99 15 306 3 76 6 217 14 361 1 32 1 182 1 107 4 201 1 8 1 233 4 56 1 136 4 202 5 292 2 82 5 160 1 320 1 369 3 42 3 143 1 17 2 63 29 66 1 90 1 296 3 226 1 20 1 
0 1 24 1 1 7 29 1 172 3 215 1 357 3 99 12 306 3 76 6 217 15 361 1 32 1 182 1 107 4 201 1 8 1 233 4 56 1 136 4 202 4 292 2 82 5 160 1 320 1 369 3 42 3 143 1 17 2 63 27 66 1 90 1 296 3 226 1 20 1 
0 2 24 1 328 1 1 9 29 1 172 1 215 2 357 4 99 10 306 2 76 4 217 14 361 1 32 1 182 1 107 2 201 1 8 1 233 5 56 1 136 2 202 4 292 1 82 5 160 1 369 2 42 2 143 2 17 1 63 24 90 1 296 2 20 1 
24 1 1 4 29 1 172 4 357 2 99 11 306 1 76 2 217 11 361 1 32 1 107 4 8 1 233 2 136 4 202 4 292 2 82 4 320 1 369 1 42 1 17 2 63 22 90 1 296 1 226 1 20 1 
0 1 24 1 1 7 29 1 172 3 215 1 357 3 99 13 306 4 76 8 217 15 361 1 32 1 182 1 107 4 201 2 8 1 233 4 56 1 136 4 202 4 292 2 82 5 160 1 320 1 369 4 42 4 143 1 63 28 17 2 90 1 66 1 296 4 226 1 20 1 
24 1 1 1 172 1 99 4 306 2 76 4 217 3 361 1 181 1 107 1 8 1 233 1 136 1 202 1 292 2 82 1 369 2 42 2 63 7 17 1 296 2 226 1 
233 3 0 1 202 1 1 6 82 1 160 2 215 3 357 3 99 4 217 3 63 7 143 3 182 1 
24 1 1 1 172 1 99 4 306 2 76 4 217 3 361 1 181 1 107 1 8 1 233 1 136 1 202 1 292 2 82 1 369 2 42 2 63 7 17 1 296 2 226 1 
234 1 360 1 239 1 203 1 64 1 146 1 230 1 
22 1 234 1 184 1 239 1 352 1 203 1 230 1 360 1 178 1 64 1 346 1 146 1 
327 1 102 1 238 1 167 1 287 1 265 1 84 1 344 1 28 1 313 1 304 1 
327 1 167 1 28 1 151 1 304 1 174 1 102 1 311 1 130 1 313 1 289 1 263 1 234 1 238 1 203 2 84 1 85 1 187 1 64 1 146 2 
327 2 329 1 28 1 151 2 256 1 304 1 174 2 102 3 311 1 130 1 313 1 289 2 9 1 234 1 263 1 238 1 203 2 340 1 84 1 113 1 85 1 187 1 64 2 146 2 
327 2 329 1 28 1 151 2 256 1 304 1 174 2 102 3 130 1 313 1 289 2 9 1 234 1 263 1 238 1 203 2 340 1 84 1 113 1 85 1 187 1 162 1 64 2 146 2 
95 2 227 1 327 1 25 1 351 1 331 1 28 1 151 1 256 1 304 1 98 1 283 1 174 1 102 4 259 1 218 1 313 1 289 1 262 1 263 1 238 1 203 1 340 1 84 1 113 1 368 1 60 1 64 1 274 1 326 2 146 1 211 1 
95 2 227 1 327 1 25 1 351 1 331 1 28 1 151 1 256 1 304 1 98 1 283 1 174 1 102 4 218 1 313 1 35 1 289 1 262 1 263 1 238 1 203 1 340 1 84 1 113 1 368 1 60 1 64 1 274 1 326 2 146 1 
238 1 84 1 28 1 313 1 304 1 53 1 
327 1 238 1 167 1 84 1 28 1 138 1 151 1 123 1 304 1 335 1 371 1 102 1 313 2 
0 2 328 1 327 1 1 4 151 1 99 6 102 1 50 1 103 1 7 1 337 1 289 1 233 3 202 3 234 3 56 1 238 1 203 2 160 1 63 13 64 1 296 2 68 1 117 1 166 1 28 1 304 1 357 1 215 2 306 2 76 4 217 7 174 1 308 1 311 1 260 2 130 1 313 1 77 1 182 1 263 1 264 2 84 1 82 3 85 1 140 1 187 1 369 2 42 2 143 2 146 2 
0 1 95 1 328 1 25 1 167 1 330 4 28 1 173 1 98 1 215 1 174 1 231 1 6 1 218 1 289 1 262 1 263 1 202 2 238 1 240 1 203 1 222 1 82 2 84 1 83 1 368 1 60 1 249 2 43 1 143 1 64 1 342 1 274 1 252 1 326 1 146 1 116 4 94 1 
327 1 238 1 84 1 28 1 151 1 304 1 283 1 335 1 102 2 191 1 313 2 212 1 53 1 
327 2 238 2 167 1 84 2 265 1 28 2 332 1 123 1 151 1 13 1 304 2 140 1 371 1 102 2 287 1 313 3 
327 1 238 1 84 1 28 1 332 1 122 1 13 1 151 1 123 1 304 1 371 1 102 1 313 2 
238 1 291 1 167 1 84 1 280 1 28 1 356 1 304 1 100 1 313 1 
327 1 238 2 84 2 28 2 304 1 140 1 208 1 358 1 102 1 299 1 313 1 
327 3 279 1 167 1 28 3 332 1 151 1 123 1 304 3 358 1 102 4 287 1 313 4 238 3 84 2 265 1 13 1 140 1 371 1 209 1 
327 3 279 1 167 1 28 3 332 1 151 1 123 1 304 3 358 1 102 4 287 1 313 4 238 3 84 2 265 1 13 1 140 1 371 1 91 1 
327 1 167 1 28 1 151 1 304 1 174 1 102 1 130 1 313 1 289 1 263 1 234 1 238 1 203 2 84 1 85 1 187 1 162 1 64 1 146 2 
327 1 238 1 84 1 113 1 28 1 138 1 151 1 123 1 304 1 335 1 371 1 102 1 313 2 
234 1 142 1 27 1 197 1 318 1 
289 1 227 1 95 2 9 1 234 1 329 1 27 2 241 1 149 1 318 1 185 1 173 1 98 1 142 2 274 1 197 2 276 1 326 2 33 1 
203 1 64 1 193 1 27 1 197 1 318 1 146 1 373 1 4 1 
241 1 149 1 318 1 
364 1 65 1 204 1 344 1 
364 1 248 1 349 1 110 1 65 1 204 1 297 1 
349 1 137 1 168 1 
134 1 21 1 364 1 110 1 349 3 204 1 354 1 319 1 248 1 251 2 65 1 297 3 
364 1 248 1 349 2 110 1 65 1 204 1 336 1 297 2 242 1 
248 1 349 1 110 1 291 1 26 1 204 1 354 1 128 1 297 1 356 1 40 1 
248 1 349 1 110 1 65 1 204 1 354 1 297 1 
364 1 248 1 349 1 110 1 65 2 354 1 297 1 
284 1 248 2 349 2 110 2 65 1 204 1 354 1 297 2 186 1 314 1 
364 1 248 1 349 3 110 1 196 1 65 1 204 2 71 1 354 1 297 3 199 1 242 2 40 1 
364 1 110 1 349 2 109 1 291 2 204 1 280 1 354 1 356 1 242 1 248 1 5 1 65 1 297 2 128 1 
364 1 248 2 349 4 110 2 65 1 204 2 336 1 354 1 297 4 199 1 229 1 242 2 40 1 
364 1 248 1 349 1 110 1 65 1 204 1 354 1 297 1 
21 1 364 2 349 4 110 1 204 3 194 1 319 1 242 2 40 1 248 1 251 1 65 2 297 4 199 1 
364 1 248 1 349 2 110 1 119 1 65 1 204 1 354 1 297 2 223 1 242 1 277 1 
21 2 364 1 110 1 349 3 204 1 354 1 97 1 319 1 248 1 251 2 65 1 297 3 
295 1 293 1 204 2 347 2 
248 1 349 1 110 1 354 1 297 1 298 1 
364 1 248 1 349 2 110 1 65 1 204 1 71 1 354 1 297 2 242 1 
275 1 
364 1 248 1 349 1 110 1 65 1 204 1 354 1 297 1 
364 1 248 1 349 3 110 1 65 1 251 1 204 1 71 1 354 1 297 3 242 1 
204 1 194 1 199 1 40 1 
65 1 204 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 74 (254,348) (254,348) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 74 (254,348) (254,348) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 74 (254,348) (254,348) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 74 (254,348) (254,348) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 314 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 314 309 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2973 | 1 -> 0
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 6040 | stmt -> ;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 860 | = null
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | OPERATOR | 7412 | >= -> ==
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 0
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z | OPERATOR | 4475 | < -> >
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
57 1 295 1 30 2 78 2 89 1 261 1 234 1 248 2 202 3 319 3 290 1 204 1 56 1 
57 1 361 1 248 1 74 1 319 1 202 1 204 1 78 1 254 1 348 1 228 1 
57 1 361 1 248 1 74 1 319 1 202 1 204 1 78 1 254 1 348 1 228 1 
57 1 361 1 248 1 74 1 319 1 202 1 204 1 78 1 254 1 348 1 228 1 
57 1 361 1 248 1 74 1 319 1 202 1 204 1 78 1 254 1 348 1 228 1 
57 1 342 2 27 1 344 1 30 3 78 1 89 2 261 1 234 1 316 1 110 1 248 1 189 1 202 4 319 4 290 1 56 3 42 1 
57 1 361 1 270 1 195 1 30 1 78 1 98 1 261 1 110 1 248 1 189 1 202 2 319 2 290 1 204 1 92 1 
238 1 295 1 78 2 48 1 248 2 189 1 81 1 56 7 57 1 342 2 27 1 344 1 30 5 89 4 261 1 234 3 316 1 110 1 235 1 319 9 202 9 290 1 204 1 42 1 
238 1 295 1 78 2 48 1 248 2 189 1 81 1 56 7 57 1 342 2 27 1 344 1 30 5 89 4 261 1 234 3 316 1 110 1 235 1 319 9 202 9 290 1 204 1 42 1 
280 1 88 1 260 1 142 1 156 1 179 1 350 1 262 1 62 1 264 1 216 1 353 1 24 1 151 1 
287 1 
62 1 280 2 216 2 183 1 0 1 96 1 355 1 287 1 
87 1 280 5 7 1 138 1 374 1 96 2 330 1 287 1 210 2 246 1 364 2 180 1 62 2 216 5 226 2 112 1 183 1 355 1 291 1 
147 1 355 1 287 1 
124 1 166 2 287 1 
264 2 88 2 353 2 273 1 151 1 142 2 262 2 350 2 
94 1 43 1 121 1 122 1 19 2 273 1 142 2 223 1 301 1 125 1 332 2 51 1 366 2 80 1 83 1 85 1 334 1 278 1 252 1 151 1 192 2 279 1 311 1 257 1 88 3 258 1 315 1 262 3 350 2 264 2 14 2 353 2 37 1 67 1 236 1 114 1 18 1 
264 1 88 1 353 1 151 1 24 1 260 1 142 1 156 1 262 1 350 1 
359 1 129 1 280 1 88 1 327 1 298 1 260 1 287 1 262 1 216 1 82 1 353 1 355 1 340 1 
280 2 88 1 327 1 142 1 298 1 260 1 287 1 350 1 262 1 264 1 216 2 82 1 353 1 355 1 340 1 
62 1 280 1 216 1 96 1 354 1 
62 1 280 2 216 2 183 1 96 1 305 1 355 1 287 1 
280 1 216 1 96 1 
88 2 76 1 273 2 142 1 144 1 262 2 350 1 264 1 353 2 
193 1 21 1 231 1 
88 1 43 1 19 1 273 1 262 1 125 1 51 1 366 1 80 1 37 1 85 1 335 1 114 1 334 1 18 1 192 1 
147 1 273 1 
88 2 43 1 19 1 231 1 142 1 125 1 350 1 262 2 51 1 80 1 366 1 353 1 37 1 85 1 134 1 334 1 114 1 18 1 184 1 192 1 
264 1 88 3 353 3 273 1 142 3 184 1 262 3 350 3 
88 1 353 1 260 1 142 1 156 1 262 1 350 1 
264 1 88 1 353 1 76 1 260 1 142 1 144 1 262 1 350 1 
94 1 327 1 43 1 19 1 76 1 273 1 142 3 298 1 301 1 125 1 126 1 332 2 51 1 80 1 366 1 82 1 83 1 85 1 334 1 278 1 151 1 340 1 192 1 279 1 311 1 6 1 280 1 257 1 88 4 258 1 260 1 315 1 262 4 350 3 264 2 216 1 14 1 37 1 353 3 134 1 236 1 114 1 18 1 184 1 
129 1 88 2 353 2 273 1 142 1 47 1 184 1 262 2 350 1 
280 1 326 1 6 1 327 1 88 3 76 1 260 1 142 3 298 1 287 1 350 3 262 3 264 1 216 1 82 1 353 3 134 1 184 2 340 1 
264 1 88 1 353 1 76 1 231 1 142 1 262 1 350 1 
88 1 43 1 19 1 273 1 262 1 125 1 51 1 366 1 80 1 37 1 85 1 114 1 334 1 18 1 192 1 
219 1 88 1 43 1 19 1 273 1 262 1 125 1 51 1 366 1 306 1 85 1 114 1 334 1 18 1 192 1 
279 1 193 1 94 2 187 1 297 1 258 1 231 1 214 1 197 1 301 1 315 1 332 2 303 1 14 2 83 1 236 1 
88 1 353 1 135 1 260 1 298 1 142 1 262 1 350 1 
129 1 88 5 76 1 273 1 142 4 300 1 47 1 350 4 262 5 264 1 276 1 353 5 134 1 184 2 
88 2 353 2 135 1 260 1 142 2 156 1 262 2 350 2 
220 1 377 1 49 1 
333 1 242 1 77 1 377 2 322 1 49 2 
377 1 49 1 
377 1 49 1 
77 1 322 1 
77 1 322 1 
77 1 377 1 322 1 49 1 
377 1 227 1 49 1 
377 1 227 1 49 1 
377 1 227 1 49 1 
284 1 377 1 49 1 
284 1 377 1 49 1 
284 1 377 1 49 1 
72 1 372 2 280 2 209 1 141 2 296 2 377 2 45 1 49 2 286 1 287 1 333 1 216 2 65 1 190 2 5 2 40 1 105 3 137 1 
220 1 73 1 141 1 75 1 273 1 296 1 142 2 329 1 244 1 49 1 249 1 211 1 145 1 5 1 105 1 372 1 280 1 88 2 377 1 286 1 350 2 262 2 216 1 353 2 
35 1 27 1 189 2 270 1 148 2 
110 1 27 1 189 1 
110 1 189 1 270 1 
35 1 27 2 189 3 270 1 148 1 2 1 
35 1 27 1 189 2 270 1 148 1 245 1 
138 1 73 1 207 1 187 1 96 1 272 1 124 1 165 1 166 3 244 1 210 1 364 1 246 3 211 1 226 1 336 1 253 1 28 2 280 5 214 1 9 1 287 2 180 2 62 4 351 2 216 5 183 1 355 1 17 2 323 1 292 1 293 1 237 1 
138 1 139 1 187 3 222 5 96 6 272 3 226 2 336 3 229 1 280 9 7 1 347 1 287 5 62 7 288 1 15 1 354 5 355 1 17 6 292 3 237 2 207 3 165 1 124 3 166 9 244 4 210 2 246 8 364 2 253 2 177 1 28 6 214 3 180 6 216 9 183 1 266 1 
207 1 187 1 272 1 124 2 166 4 244 1 210 1 364 1 246 3 226 1 336 1 253 1 280 3 7 1 28 2 214 1 9 1 287 3 62 2 351 1 180 2 216 3 355 1 17 2 266 1 292 1 293 1 237 1 
139 1 207 2 187 2 272 2 124 3 166 7 244 2 210 1 364 1 246 5 226 1 336 2 253 1 28 4 280 4 7 1 214 2 9 1 287 4 351 2 62 3 180 4 288 1 216 4 15 1 355 1 17 4 266 1 292 2 293 1 237 1 
113 1 
43 1 147 1 149 1 
43 1 109 1 
51 1 43 1 
51 1 43 3 334 1 149 2 167 1 99 1 
51 1 43 1 334 1 
153 1 43 1 
94 3 281 1 187 1 163 1 46 1 178 1 12 1 199 1 34 2 14 7 170 1 307 1 104 2 252 4 321 1 292 1 119 1 341 3 
94 15 95 1 187 4 163 2 272 3 46 5 301 1 332 2 170 2 307 2 336 3 150 4 252 16 104 5 175 1 341 10 255 1 279 1 281 1 214 3 12 1 315 1 13 1 199 1 34 3 14 31 236 1 68 1 321 1 160 1 292 4 117 1 118 3 119 2 
94 4 187 1 163 1 46 1 301 2 100 1 332 4 170 1 307 1 252 5 104 3 341 4 279 2 371 1 12 1 315 2 34 2 199 1 14 9 236 2 321 1 292 1 117 1 119 1 
94 3 281 1 187 1 163 1 46 1 12 1 34 2 199 1 14 7 170 1 307 1 104 2 252 4 321 1 292 1 119 1 341 3 
94 3 281 1 187 1 163 1 46 1 12 1 34 2 199 1 14 7 170 1 307 1 104 2 252 4 321 1 292 1 119 1 341 3 
93 1 162 1 131 2 43 1 19 1 20 2 132 1 44 1 1 1 155 1 78 1 125 1 51 1 248 1 366 1 114 1 289 2 202 1 319 1 39 1 204 2 18 1 192 1 
270 1 19 1 20 1 78 1 2 1 125 1 248 1 366 1 52 1 189 2 251 1 337 1 25 1 192 1 57 1 27 1 131 1 29 1 285 1 110 1 289 1 114 1 319 1 202 1 204 1 71 1 
270 1 19 1 20 1 78 1 2 1 125 1 248 1 366 1 52 1 189 2 56 1 172 1 337 1 25 1 192 1 57 1 27 1 131 1 29 1 30 1 285 1 261 1 110 1 289 1 114 1 319 2 202 2 290 1 204 1 71 1 
93 1 270 1 19 1 20 1 78 1 2 1 125 1 248 1 366 1 52 1 189 2 251 1 56 2 337 1 25 1 192 1 27 1 131 1 30 1 285 1 32 1 261 1 110 1 289 1 114 1 319 3 202 3 290 1 204 1 71 1 
270 1 19 1 20 1 2 1 125 1 366 1 52 1 189 2 251 1 56 2 337 1 192 1 131 1 27 1 30 1 32 1 261 1 110 1 289 1 114 1 319 2 202 2 290 1 204 1 71 1 
103 1 
138 1 327 1 43 1 96 6 1 1 97 1 275 1 51 1 226 1 338 1 340 1 192 2 280 5 196 1 287 2 198 2 66 2 353 1 114 1 355 1 203 1 18 2 359 1 19 2 164 1 124 2 166 2 298 1 79 1 210 1 125 1 246 2 364 1 366 2 82 1 84 4 253 1 367 1 86 2 128 2 129 1 88 1 313 1 260 1 262 1 91 2 180 2 216 5 36 1 38 2 183 3 318 2 39 1 320 1 325 1 
359 1 129 1 280 3 327 1 88 1 0 1 96 2 164 1 260 1 298 1 275 1 262 1 91 1 36 1 216 3 82 1 183 1 353 1 84 2 320 1 338 1 340 1 
359 1 129 1 280 3 327 1 88 1 0 1 96 1 164 1 260 1 298 1 275 1 287 1 262 1 36 1 216 3 82 1 183 1 66 1 353 1 84 3 355 1 320 1 338 1 340 1 
359 1 327 1 0 1 96 2 164 1 298 1 275 1 82 1 84 3 338 1 340 1 129 1 280 3 88 1 260 1 262 1 287 1 91 1 216 3 36 1 183 1 353 1 66 1 318 1 355 1 320 1 
327 1 138 1 0 1 96 7 275 1 226 1 102 1 338 1 340 1 280 5 196 1 287 5 198 2 111 1 353 1 66 4 355 5 359 1 241 1 164 1 124 2 298 1 79 1 210 1 364 1 246 1 82 1 84 6 86 2 128 2 129 1 88 1 375 1 260 1 262 1 91 4 180 1 36 1 216 5 183 3 38 2 318 4 320 1 41 1 
327 1 138 1 96 4 275 1 226 1 338 1 340 1 280 4 196 1 198 2 287 2 353 1 66 2 355 1 359 1 164 1 124 2 298 1 166 2 79 1 210 1 364 1 246 1 82 1 84 4 86 2 128 2 129 1 88 1 313 1 260 1 262 1 180 1 91 2 36 1 216 4 38 2 183 2 318 2 320 1 
359 1 327 1 138 1 96 4 164 1 124 2 298 1 275 1 79 1 210 1 246 1 364 1 226 1 82 1 102 1 84 4 338 1 340 1 86 2 128 2 129 1 280 4 88 1 375 1 260 1 196 1 287 1 198 2 262 1 91 2 180 1 216 4 36 1 111 1 66 2 183 2 38 2 353 1 318 2 355 1 320 1 
359 1 327 1 138 1 96 4 164 1 124 2 298 1 275 1 79 1 210 1 246 1 364 1 226 1 82 1 102 1 84 4 338 1 340 1 86 2 128 2 129 1 280 4 88 1 375 1 260 1 196 1 287 1 198 2 262 1 91 2 180 1 216 4 36 1 111 1 66 2 183 2 38 2 353 1 318 2 355 1 320 1 
359 1 327 1 138 1 96 4 164 1 166 2 298 1 275 1 79 1 210 1 246 1 364 1 226 1 82 1 102 1 84 4 338 1 340 1 107 1 129 1 280 4 88 1 345 1 260 1 287 1 198 2 262 1 91 2 182 2 180 1 63 2 265 1 216 4 36 1 66 2 183 2 38 2 353 1 318 2 355 1 320 1 
359 1 138 1 327 1 241 1 96 5 164 1 124 2 298 1 275 1 79 1 210 1 246 1 364 1 226 1 82 1 102 1 84 5 338 1 340 1 86 2 128 2 129 1 280 4 88 1 375 1 260 1 196 1 287 1 198 2 262 1 180 1 91 3 216 4 36 1 111 1 183 2 38 2 353 1 66 3 318 3 355 1 320 1 
359 1 138 1 327 1 241 1 96 5 164 1 124 2 298 1 275 1 79 1 210 1 246 1 364 1 226 1 82 1 102 1 84 5 338 1 340 1 86 2 128 2 129 1 280 4 88 1 375 1 260 1 196 1 287 1 198 2 262 1 180 1 91 3 216 4 36 1 111 1 183 2 38 2 353 1 66 3 318 3 355 1 320 1 
359 1 138 1 327 1 96 4 164 1 166 2 298 1 275 1 79 1 210 1 246 1 364 1 226 1 82 1 84 4 338 1 340 1 129 1 280 4 88 1 313 1 260 1 287 1 198 2 262 1 91 2 182 2 180 1 63 2 216 4 36 1 265 1 66 2 183 2 38 2 353 1 318 2 355 1 320 1 
94 1 268 1 43 3 19 8 122 2 297 1 1 1 142 1 223 1 301 2 125 2 247 1 332 4 365 1 51 2 366 8 251 1 83 2 172 1 252 1 192 7 279 2 256 1 88 1 257 1 258 2 11 1 262 1 350 1 315 2 353 1 14 2 201 1 114 2 236 2 39 1 356 1 18 2 184 1 
94 2 187 1 21 1 76 1 272 1 142 1 301 1 332 2 83 1 336 1 104 1 252 1 341 1 191 1 279 1 193 1 88 1 258 1 231 1 214 1 315 1 350 1 262 1 264 1 353 1 14 3 236 1 292 1 379 1 
279 1 193 1 94 3 187 1 21 1 273 2 297 1 258 1 231 1 12 1 301 1 315 1 34 1 199 1 332 2 14 6 83 1 147 1 307 1 236 1 252 3 104 2 321 1 292 1 119 1 341 2 
94 3 21 6 272 2 273 1 46 1 224 1 301 2 332 4 304 1 83 2 336 2 277 1 150 2 252 6 341 1 191 1 279 2 193 7 257 1 258 1 231 7 260 1 315 2 13 1 215 1 14 9 236 2 292 2 324 1 118 2 
94 1 43 1 19 1 21 1 273 1 142 1 223 1 301 1 125 1 332 2 51 1 80 1 366 1 83 1 85 1 334 1 335 1 252 1 192 1 191 1 279 1 130 1 88 2 257 1 258 1 90 1 61 1 315 1 262 2 350 1 37 1 353 1 14 2 134 1 114 1 236 1 18 1 184 1 
94 2 43 1 272 1 142 1 332 4 51 1 334 1 336 1 104 1 192 1 191 1 341 1 279 2 193 2 231 2 350 1 353 1 14 5 236 2 114 1 18 1 205 1 292 1 294 1 120 1 19 1 21 1 299 1 301 2 125 1 366 1 80 1 83 2 85 1 252 3 26 1 311 1 257 1 88 2 258 2 262 2 315 2 37 1 134 1 184 1 
279 1 193 1 272 1 297 1 258 1 231 1 301 1 315 1 332 2 263 1 14 2 83 1 236 1 252 2 292 1 
279 1 193 1 94 2 187 1 297 1 258 1 231 1 214 1 301 1 315 1 332 2 303 1 14 2 83 1 236 1 
279 1 193 1 272 1 297 1 258 1 231 1 301 1 315 1 332 2 14 2 83 1 236 1 336 1 252 2 292 1 
279 1 193 1 272 1 258 1 231 1 301 1 315 1 247 1 332 2 263 1 14 2 83 1 236 1 252 2 292 1 
279 1 193 1 94 2 187 1 258 1 231 1 214 1 301 1 315 1 247 1 332 2 303 1 14 2 83 1 236 1 
279 1 193 1 272 1 258 1 231 1 301 1 315 1 247 1 332 2 14 2 83 1 236 1 336 1 252 2 292 1 
279 1 193 1 272 1 258 1 231 1 301 1 315 1 332 2 83 1 14 2 236 1 336 1 252 2 292 1 
94 1 43 1 19 1 273 1 223 1 301 1 125 1 332 2 51 1 80 1 366 1 83 1 85 1 334 1 252 1 192 1 311 1 279 1 88 1 257 1 258 1 262 1 315 1 14 2 37 1 114 1 236 1 18 1 
219 1 94 1 43 1 19 1 188 1 273 1 223 1 301 1 125 1 332 2 51 1 366 1 83 1 85 1 306 1 334 1 252 1 192 1 279 1 88 1 257 1 258 1 262 1 315 1 14 2 114 1 236 1 18 1 
279 1 193 1 272 1 258 1 231 1 301 1 315 1 332 2 14 2 83 1 236 1 336 1 252 2 292 1 191 1 
43 1 19 1 272 1 301 1 125 1 332 2 51 1 80 1 366 1 83 1 85 1 334 1 336 1 252 2 172 1 26 1 192 1 311 1 279 1 193 1 88 1 258 1 231 1 262 1 315 1 14 2 37 1 114 1 236 1 292 1 
76 1 272 1 21 1 142 1 46 1 301 1 332 2 83 1 336 1 252 2 341 1 191 1 279 1 193 1 88 1 258 1 231 1 315 1 350 1 262 1 264 1 217 1 353 1 14 2 236 1 292 1 
94 10 221 1 187 3 272 3 22 1 46 3 4 1 301 2 168 1 332 4 53 1 336 3 104 3 150 2 252 9 152 1 369 2 175 1 341 6 279 2 371 1 214 3 315 2 13 1 14 19 236 2 136 2 292 3 218 1 118 1 
94 12 269 1 221 1 187 2 272 3 46 2 4 1 301 3 168 2 332 6 53 2 55 1 336 3 104 2 252 14 150 2 106 1 370 1 341 4 369 4 175 2 279 3 371 1 214 2 232 1 315 3 64 1 14 26 236 3 136 1 117 2 292 3 218 1 118 2 
94 21 269 1 221 1 187 5 272 4 46 4 4 1 332 6 53 2 336 4 55 1 150 4 104 4 106 1 341 8 152 1 279 3 232 1 12 1 13 1 199 1 64 1 14 41 236 3 292 5 117 1 118 3 119 1 239 1 301 3 168 1 307 1 252 20 175 3 369 4 370 1 371 1 214 4 315 3 34 1 321 1 136 1 218 1 
239 1 94 18 269 1 221 1 187 4 272 4 46 3 4 1 301 4 168 1 332 8 53 2 307 1 55 1 336 4 104 4 150 4 252 20 106 1 152 1 370 1 369 4 175 3 341 7 279 4 371 1 214 3 232 1 12 1 315 4 13 1 34 1 199 1 64 1 14 38 236 4 321 1 136 1 117 2 292 5 218 1 118 3 119 1 
94 20 269 1 221 1 187 6 272 5 46 5 4 1 301 2 168 1 332 4 53 1 307 1 277 1 55 1 336 5 104 5 150 3 252 22 106 1 370 1 175 2 369 4 341 10 279 2 371 1 214 5 232 1 12 1 315 2 13 1 34 1 199 1 64 1 14 42 236 2 321 1 136 1 117 1 292 6 218 1 118 3 119 1 
72 1 372 1 333 1 250 1 141 1 296 1 5 1 377 1 45 1 49 1 
220 1 75 1 
372 1 169 1 141 1 376 1 296 1 5 1 377 1 363 1 49 1 
72 1 372 1 280 1 209 1 141 1 296 1 377 1 45 1 286 1 49 1 287 1 333 1 216 1 65 1 190 1 5 1 40 1 105 2 
72 1 372 1 280 1 209 1 141 1 296 1 377 1 45 1 286 1 49 1 287 1 333 1 216 1 65 1 190 1 5 1 40 1 105 2 
72 1 372 1 280 1 209 1 141 1 296 1 377 1 45 1 286 1 49 1 287 1 333 1 216 1 65 1 190 1 5 1 40 1 105 2 
242 1 227 1 302 1 
242 1 227 1 302 1 
284 1 69 1 
242 1 284 1 69 1 
249 1 329 1 
220 1 73 1 123 1 141 1 75 1 273 1 296 1 142 2 329 1 244 1 49 1 249 1 211 1 145 1 190 1 5 1 105 1 372 1 280 1 88 2 377 1 262 2 350 2 62 1 216 1 65 1 353 2 
227 1 302 1 
242 1 284 1 69 1 
94 1 43 1 19 2 122 2 223 1 301 1 125 1 332 2 365 1 51 1 366 2 83 1 252 1 339 1 191 1 192 2 279 1 58 1 88 2 257 1 154 1 258 1 11 1 262 2 315 1 159 1 353 2 14 2 114 1 236 1 70 1 
43 1 19 1 283 1 44 1 1 1 378 1 125 1 51 1 366 1 114 1 289 1 39 1 18 1 192 1 
27 1 270 1 19 1 283 1 2 1 125 1 110 1 189 2 366 1 52 1 251 1 158 1 289 1 114 1 173 1 71 1 25 1 192 1 
27 1 270 1 19 2 283 1 2 1 125 1 110 1 189 2 366 2 52 1 251 1 158 1 114 1 289 1 172 1 173 1 71 1 25 1 192 2 
27 1 270 1 19 1 328 1 2 1 125 1 110 1 189 2 366 1 52 1 251 1 289 1 114 1 173 1 71 1 25 1 192 1 
16 1 
87 1 138 1 374 1 210 1 287 1 364 1 246 1 180 1 226 1 355 1 
28 2 207 1 187 1 272 1 124 2 166 4 214 1 287 2 246 2 180 2 336 1 17 2 266 1 292 1 
280 1 216 1 183 1 96 1 355 1 287 1 
138 1 43 1 186 2 19 4 96 4 97 2 1 1 125 1 210 2 364 2 246 2 51 1 226 2 366 4 367 1 253 2 192 4 7 1 280 3 346 1 180 2 157 1 216 3 183 2 114 1 203 1 39 1 267 1 18 2 
246 1 180 1 87 1 374 1 147 1 355 1 287 1 
138 1 96 1 124 1 166 1 210 1 246 1 364 1 226 1 86 1 128 1 280 1 196 1 287 2 180 1 216 1 183 1 355 1 
138 3 327 2 43 6 187 2 96 5 272 2 97 1 3 2 331 1 51 1 226 3 101 2 334 1 336 2 149 2 192 1 280 5 230 1 109 3 287 7 114 1 355 1 17 6 18 1 292 2 120 2 207 2 19 1 124 6 166 12 125 2 210 3 167 1 246 8 364 3 366 1 308 2 253 2 312 2 28 6 259 2 214 2 31 1 180 7 216 5 183 3 266 2 
138 2 269 1 207 2 187 2 96 1 272 2 97 1 124 3 166 6 210 2 246 8 364 2 226 2 55 1 336 2 150 1 253 1 106 1 370 1 175 1 373 1 280 1 28 5 214 2 287 5 180 5 352 1 64 1 216 1 183 1 355 2 17 5 266 1 292 2 118 1 
138 1 207 2 187 1 142 1 274 1 210 1 364 1 246 2 226 1 307 1 24 1 151 1 280 1 88 1 375 1 260 1 156 1 12 1 262 1 179 1 350 1 180 2 264 1 216 1 353 1 266 1 292 2 119 1 
94 1 43 1 19 1 273 1 142 2 301 1 125 1 332 2 51 1 366 1 80 1 83 1 85 1 334 1 278 1 151 1 192 1 311 1 279 1 257 1 88 3 258 1 315 1 262 3 350 2 264 2 14 1 353 2 37 1 236 1 114 1 18 1 
28 2 138 1 124 2 97 1 166 4 210 1 287 4 34 1 364 1 246 1 180 2 226 1 355 2 17 2 253 1 
72 1 249 1 194 1 141 1 5 1 
141 1 5 1 33 1 
141 1 5 1 33 1 
141 1 5 1 33 1 
206 1 141 1 5 1 
206 1 141 1 5 1 
206 1 141 1 5 1 
141 1 5 1 
377 1 49 1 
279 1 371 1 94 5 187 2 274 1 46 2 301 1 12 1 315 1 332 2 14 10 236 1 307 2 104 3 252 5 292 2 119 2 341 5 
279 1 371 1 272 1 46 1 301 1 315 1 332 2 14 2 236 1 252 2 292 1 341 1 
279 1 94 2 371 1 187 1 272 1 214 1 46 1 301 1 315 1 332 2 14 4 236 1 336 1 104 1 252 2 292 1 341 2 
279 3 94 2 371 1 46 1 301 3 315 3 332 6 14 3 236 3 307 1 104 1 252 1 116 1 117 1 119 1 152 1 341 2 
95 1 94 18 187 5 272 3 46 5 301 5 332 10 307 3 336 3 150 4 252 16 104 7 368 1 175 1 152 1 341 12 255 1 279 5 371 1 214 3 12 2 315 5 13 1 34 1 199 1 14 34 236 5 321 1 116 1 160 1 117 2 292 5 118 3 119 3 
94 4 187 1 301 1 332 2 307 1 55 1 150 1 252 4 104 2 175 1 341 2 279 1 371 1 12 1 315 1 34 1 199 1 14 8 236 1 321 1 292 1 118 1 119 1 
94 5 187 1 272 1 46 1 301 2 332 4 307 1 55 1 336 1 104 2 150 2 252 6 368 1 175 1 341 3 279 2 371 1 12 1 315 2 13 1 34 1 199 1 14 11 236 2 321 1 292 2 118 1 119 1 
94 10 269 1 187 3 272 2 46 1 301 3 332 6 307 1 55 1 336 2 150 1 252 9 104 3 106 1 368 1 370 1 175 1 341 4 279 3 371 1 214 2 12 1 315 3 34 1 199 1 64 1 14 19 236 3 321 1 292 3 117 1 118 1 119 1 
94 7 269 1 187 2 272 2 46 2 301 3 332 6 307 1 55 1 336 2 150 1 252 10 104 3 106 1 368 1 175 1 341 5 370 1 279 3 371 1 214 1 12 1 315 3 34 1 199 1 64 1 14 17 236 3 321 1 117 1 292 3 118 1 119 1 
94 4 187 1 301 1 332 2 307 1 55 1 150 1 252 4 104 2 175 1 341 2 279 1 371 1 12 1 315 1 34 1 199 1 14 8 236 1 321 1 292 1 118 1 119 1 
94 6 269 1 187 2 272 2 46 1 301 1 332 2 55 1 336 2 150 1 252 6 104 1 106 1 175 1 341 2 370 1 279 1 371 1 214 2 315 1 64 1 14 12 236 1 292 2 118 1 
94 8 269 1 187 2 272 2 46 2 301 4 332 8 307 1 55 1 336 2 150 1 252 10 104 3 106 1 368 1 370 1 175 1 341 5 279 4 371 1 214 1 12 1 315 4 34 1 199 1 64 1 14 18 236 4 321 1 292 3 117 2 118 1 119 1 
94 7 269 1 187 2 272 3 46 3 301 4 332 8 55 1 336 3 150 1 252 9 104 3 106 1 370 1 175 1 152 1 341 6 279 4 371 1 214 2 315 4 64 1 14 16 236 4 292 3 117 2 118 1 
94 4 187 1 46 3 12 1 199 2 14 7 307 3 104 3 252 3 321 1 292 1 119 3 341 6 
94 8 269 1 187 2 272 2 46 1 301 4 332 8 307 1 55 1 336 2 150 1 252 10 104 3 106 1 370 1 175 1 152 1 341 4 279 4 371 1 214 1 12 1 315 4 34 1 199 1 64 1 14 18 236 4 321 1 292 3 117 2 118 1 119 1 
279 2 94 4 187 1 46 1 12 1 301 2 315 2 34 1 199 1 332 4 14 8 236 2 307 1 252 4 104 2 321 1 292 1 117 1 119 1 341 3 
94 3 187 1 12 1 34 1 199 1 147 1 14 6 307 1 104 2 252 3 321 1 292 1 119 1 341 2 
279 1 94 2 187 1 272 1 214 1 46 1 301 1 315 1 332 2 14 4 236 1 336 1 104 1 252 2 292 1 368 1 341 2 
94 1 14 2 252 1 150 1 118 1 175 1 
94 13 187 5 272 2 274 1 46 4 301 1 332 2 304 1 307 2 336 2 277 1 104 4 252 13 150 2 341 8 279 1 214 2 12 2 13 1 315 1 34 1 199 1 14 26 236 1 321 1 292 5 117 1 118 2 119 2 
94 1 14 1 150 1 
14 1 252 1 118 1 
279 1 94 3 187 1 272 1 214 1 46 1 301 1 315 1 332 2 14 6 236 1 336 1 252 3 104 2 292 1 368 1 120 1 341 3 
94 6 269 1 187 2 272 2 46 1 301 1 332 2 55 1 336 2 150 1 252 6 104 1 106 1 175 1 341 2 370 1 279 1 371 1 214 2 315 1 64 1 14 12 236 1 292 2 118 1 
94 3 187 1 46 1 12 1 14 6 307 1 252 3 104 1 292 1 119 1 341 2 
279 1 94 2 46 1 301 1 315 1 199 1 332 2 14 3 307 1 236 1 252 1 104 1 116 1 321 1 117 1 119 1 341 2 
358 1 129 1 88 1 353 1 273 1 47 1 262 1 
358 1 360 1 129 1 240 1 88 1 273 1 47 1 262 1 181 1 225 1 353 1 127 1 
43 1 271 1 19 4 1 1 125 1 51 1 366 4 212 1 114 1 172 1 39 1 18 1 192 4 
43 1 186 1 19 2 185 1 213 1 143 1 10 1 125 2 51 1 366 2 334 1 114 1 192 2 108 1 
110 1 189 1 270 1 52 1 366 1 19 1 114 1 18 1 125 1 192 1 
43 1 19 2 154 1 11 1 125 1 51 1 366 2 251 1 114 1 172 1 192 2 
256 1 43 3 271 1 186 1 19 5 1 1 11 1 125 2 51 2 366 5 114 2 201 1 39 1 172 1 18 1 192 4 
43 3 271 1 186 1 19 5 1 1 23 1 11 1 125 2 51 2 366 5 114 2 201 1 39 1 172 1 18 1 192 4 
51 1 366 1 43 1 147 1 19 1 114 1 1 1 39 1 18 1 125 1 192 1 
88 2 43 1 19 1 273 1 142 1 125 1 350 1 262 2 51 1 366 1 80 1 353 1 85 1 334 1 114 1 18 1 184 1 192 1 
153 1 88 2 43 3 186 1 19 1 59 1 273 1 260 1 298 1 142 1 125 1 350 2 262 2 51 2 366 1 80 1 82 1 353 2 85 1 334 2 114 1 184 1 192 1 
219 1 43 3 19 2 186 1 273 1 142 1 298 1 125 1 51 2 366 2 82 1 212 1 85 1 334 2 192 2 153 1 88 2 59 1 260 1 262 2 350 2 353 2 114 1 184 1 
153 1 280 2 327 1 43 4 186 1 19 3 59 1 96 1 243 1 109 1 287 1 125 1 349 1 51 1 216 2 366 3 212 1 334 1 114 1 355 1 149 1 18 1 192 3 
153 1 280 2 327 1 43 4 186 1 19 3 59 1 96 1 259 1 109 1 287 1 125 1 51 1 216 2 366 3 212 1 334 1 114 1 355 1 149 1 18 1 192 3 
366 1 19 1 114 1 356 1 125 1 192 1 
268 1 256 1 43 3 122 1 19 7 185 1 233 1 143 1 11 1 167 1 125 3 51 2 366 7 251 1 201 1 334 1 114 2 172 1 356 1 18 2 192 6 
94 3 43 1 187 1 19 1 21 1 273 2 142 1 301 2 125 1 332 4 51 1 366 1 80 1 83 2 85 1 307 1 334 1 252 3 104 2 172 1 26 1 341 2 191 1 192 1 279 2 311 1 193 1 58 1 88 2 258 2 231 1 12 1 315 2 262 2 350 1 34 1 199 1 14 6 353 1 37 1 114 1 236 2 321 1 292 1 184 1 119 1 294 1 
138 2 327 1 43 2 19 1 96 2 3 1 210 2 246 1 364 2 366 1 226 2 101 1 149 1 192 1 87 1 280 3 312 1 374 1 259 1 109 1 287 1 180 1 62 1 157 1 216 3 183 1 355 1 18 1 
43 2 19 2 331 1 167 1 125 2 51 1 366 2 334 1 114 1 172 1 149 1 356 1 192 2 
219 1 88 2 43 1 19 1 273 1 142 1 125 1 350 1 262 2 51 1 366 1 353 1 85 1 334 1 114 1 18 1 184 1 192 1 
43 1 186 1 19 1 185 1 233 1 143 1 167 1 125 2 51 1 366 1 334 1 114 1 192 1 
115 1 70 1 174 2 314 1 
62 1 280 1 317 1 216 1 115 1 70 1 174 2 314 1 50 1 309 1 
115 1 70 1 174 1 314 1 
174 1 50 1 309 1 
57 1 248 1 30 1 319 1 202 1 290 1 78 1 261 1 
60 1 30 3 78 1 89 1 133 1 261 2 234 1 200 1 248 1 202 4 319 4 290 2 56 2 92 1 
57 1 30 1 78 1 8 1 261 1 248 1 235 1 202 2 319 2 56 1 290 1 161 1 
57 1 30 1 78 1 133 1 261 1 200 2 248 1 202 3 319 3 290 1 357 1 92 2 
146 1 140 2 30 2 362 1 
57 1 248 1 319 1 202 1 78 1 310 1 
57 1 248 1 30 1 319 2 202 2 290 1 56 1 78 1 48 1 261 1 
343 1 
57 1 248 1 30 1 319 1 202 1 290 1 78 1 261 1 
147 1 30 1 290 1 261 1 
248 1 30 1 319 1 202 1 290 1 78 1 261 1 
20 1 319 1 204 1 
57 1 30 1 78 1 133 1 261 1 200 1 248 1 54 1 202 3 319 3 290 1 92 2 
342 1 248 1 30 1 319 2 202 2 290 1 56 1 78 1 261 1 
57 1 110 1 27 1 248 1 189 1 344 1 30 1 319 1 202 1 89 1 78 1 
57 1 248 1 30 1 319 1 202 1 78 1 261 1 
57 1 248 1 319 1 202 1 290 1 78 1 261 2 
57 1 282 1 208 1 30 1 78 2 261 1 248 2 171 1 202 2 319 2 
57 1 30 2 78 1 89 1 48 1 261 1 234 1 248 1 81 1 202 3 319 3 290 1 56 2 
57 1 27 1 270 1 30 1 78 1 2 1 261 1 110 1 248 1 189 2 202 2 319 2 290 1 56 1 176 1 
57 1 342 1 30 2 78 2 89 1 261 1 316 1 234 1 248 2 202 4 319 4 290 1 56 2 
57 1 30 1 78 1 48 1 261 1 248 1 202 3 319 3 56 1 290 1 92 1 
60 1 30 1 89 1 234 1 
30 1 261 1 

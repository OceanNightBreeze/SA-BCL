#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (21,56,275,288) (21,56,275,288) (230,268,296,312) 115 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (21,56,275,288) (21,56,275,288) (230,268,296,312) 115 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V ERROR java.lang.NullPointerException (0,221) 101 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (0,221) 101 212 342 (0,221) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 91 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (0,221) 101 274 192 110 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (0,221) 101 171 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException (0,221) 101 212 347 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException (0,221) 101 367 34 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException (0,221) 101 212 342 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException (0,221) 101 367 347 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException (0,221) 101 367 34 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException (0,221) 101 212 342 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException (0,221) 101 367 347 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException (0,221) 101 367 347 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException (0,221) 101 367 347 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (0,221) 101 367 347 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException (0,221) 101 367 347 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 367 347 242 1 293 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 367 347 242 1 293 44 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 367 347 242 1 293 44 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 367 347 242 1 293 44 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 26 103 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 367 347 242 1 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 367 347 242 1 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 367 347 242 1 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 367 347 242 1 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 367 347 242 1 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 367 347 242 1 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 367 347 242 1 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (0,221) 101 42 (119,151) (119,151) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (21,56,275,288) (21,56,275,288) (230,268,296,312) (230,268,296,312) (230,268,296,312) 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String; | RETURN | 4317 | return null
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z | STATEMENT | 5166 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4503 | 0 -> 1
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | ASSIGN | 4718 | = null
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 6922 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | ASSIGN | 5752 | = null
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 685 | return null
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V | STATEMENT | 842 | stmt -> ;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
96 1 118 1 2 1 306 5 288 6 289 2 46 1 136 9 160 2 135 2 308 2 21 2 240 1 24 1 312 1 270 1 366 1 28 1 109 1 56 9 165 1 111 1 145 4 275 2 346 3 191 1 195 2 38 1 
96 1 118 1 2 1 306 5 288 6 289 2 46 1 160 2 136 9 135 2 308 2 21 2 240 1 24 1 312 1 270 1 366 1 28 1 109 1 56 9 165 1 111 1 145 4 275 2 346 3 191 1 38 1 195 2 
96 1 118 1 2 1 306 6 288 7 289 2 46 1 160 2 136 10 135 2 308 2 21 2 240 1 24 1 312 1 270 1 366 1 28 1 109 1 56 10 165 1 111 1 145 5 275 2 346 4 191 1 38 1 195 2 
118 1 2 1 306 4 288 4 289 2 46 1 160 2 136 7 135 2 308 2 21 2 240 1 24 1 312 1 270 1 366 1 28 1 109 1 56 7 165 1 111 1 145 3 275 2 346 2 191 1 38 1 195 1 
312 1 28 1 109 1 56 4 96 1 118 1 306 3 288 3 145 2 135 1 136 4 160 1 308 1 275 1 21 1 346 1 240 1 195 2 
363 1 366 1 28 1 109 1 56 2 118 1 306 1 204 1 45 1 289 1 136 2 135 1 308 1 275 1 21 1 24 1 
270 1 28 1 109 1 56 3 118 1 306 2 145 1 288 1 289 1 136 3 275 2 21 2 346 1 
268 1 115 1 288 1 136 1 28 1 21 1 275 1 56 2 
268 1 115 1 288 1 136 1 28 1 21 1 275 1 56 2 
91 1 262 1 220 1 
125 2 262 1 243 1 
172 2 128 2 200 2 223 2 241 2 142 1 340 2 15 1 
39 1 172 3 128 2 229 1 281 1 353 1 354 1 198 1 200 2 99 1 100 1 357 1 138 1 241 2 48 2 310 2 263 1 78 1 182 2 361 1 52 2 183 1 166 1 317 1 142 1 318 1 340 2 10 1 63 1 112 1 146 1 170 1 223 3 15 1 325 2 350 1 69 1 
326 1 172 1 189 1 128 1 200 1 223 1 241 1 340 1 15 1 57 1 
81 1 326 1 172 1 269 1 108 1 175 1 330 1 220 1 62 1 238 1 262 1 241 1 223 1 49 1 
81 1 326 1 269 2 172 1 128 1 175 1 200 1 340 1 220 1 62 1 238 1 262 1 241 1 223 1 49 2 
269 1 88 1 339 1 49 1 265 1 
269 2 88 1 89 1 262 1 49 2 265 1 220 1 211 1 
269 1 49 1 265 1 
326 1 269 1 172 1 128 1 200 1 57 1 340 1 88 1 189 1 241 1 223 1 49 1 50 1 15 1 
262 1 
269 2 88 1 262 1 49 2 265 1 218 1 220 1 211 1 
139 2 269 5 29 1 231 1 177 2 84 2 220 1 331 1 356 1 88 2 47 1 249 1 149 1 262 1 49 5 225 1 265 2 211 1 250 1 
91 1 142 1 
172 2 128 1 200 1 142 2 340 1 248 1 241 2 223 2 126 1 
101 1 221 1 
39 1 172 1 198 1 353 1 142 1 179 1 63 1 112 1 357 1 223 1 48 1 310 1 361 1 69 1 52 1 183 1 
39 1 172 2 128 1 353 1 198 1 217 1 340 1 63 1 357 1 112 1 221 1 104 1 241 1 223 2 48 1 310 1 361 1 183 1 69 1 52 1 
172 5 128 4 328 1 216 1 200 1 217 2 142 1 330 1 340 4 58 1 104 1 241 5 223 5 126 1 
326 1 16 1 172 2 189 1 128 2 223 2 241 2 340 2 
172 3 128 3 200 1 223 3 241 3 142 1 217 1 340 3 
326 1 172 1 189 1 128 1 223 1 241 1 340 1 
326 1 172 1 128 1 248 1 200 1 223 1 241 1 340 1 126 1 
39 1 326 1 172 4 70 1 128 3 353 1 198 1 175 1 200 2 99 1 100 1 357 1 104 1 238 1 241 3 48 1 310 1 263 1 49 1 182 1 361 1 183 1 52 1 81 1 184 1 269 1 166 1 317 1 142 1 318 1 217 1 340 3 10 1 62 1 63 1 112 1 146 1 170 1 223 4 15 1 325 2 350 1 126 1 69 1 
172 2 128 1 223 2 241 2 142 1 217 1 330 1 340 1 58 1 
326 1 81 1 269 1 172 3 70 1 128 3 175 1 200 1 232 1 217 2 340 3 62 1 104 1 238 1 262 1 241 3 223 3 49 1 126 1 
122 1 172 2 128 2 200 1 217 1 340 2 221 1 241 2 223 2 126 1 
39 1 172 1 198 1 353 1 142 1 63 1 112 1 357 1 223 1 48 1 310 1 361 1 69 1 52 1 183 1 
39 1 172 1 353 1 31 1 142 1 85 1 63 1 357 1 223 1 48 1 310 1 361 1 69 1 52 1 183 1 
0 1 317 1 318 2 294 1 10 1 100 1 342 1 101 1 146 1 221 1 373 1 263 1 182 2 212 1 350 1 325 2 
326 1 172 1 16 1 128 1 175 1 223 1 241 1 340 1 
143 1 20 1 
143 1 20 1 
315 1 129 1 
315 1 129 1 
315 1 129 1 
224 1 143 1 20 1 
222 1 143 1 20 1 
235 1 315 1 282 1 129 1 143 2 20 2 
224 1 143 1 20 1 
224 1 143 1 20 1 
345 1 143 1 20 1 
345 1 143 1 20 1 
345 1 143 1 20 1 
172 2 128 2 94 1 305 1 20 1 257 1 3 1 334 1 241 2 49 1 269 1 271 1 316 1 142 1 8 1 340 2 143 1 273 1 87 1 247 1 36 1 222 1 223 2 114 1 
336 1 269 2 196 1 280 1 94 2 316 3 329 2 255 1 143 2 20 2 235 1 273 2 87 2 236 1 358 1 36 1 262 1 49 2 114 2 
135 1 160 1 308 1 
45 1 135 1 308 1 
364 1 45 1 160 2 135 3 30 1 40 1 
364 1 186 1 45 1 160 1 135 2 30 1 
364 2 45 1 160 1 135 2 30 1 
326 1 172 1 128 1 177 1 233 2 331 1 290 1 241 1 49 5 50 1 243 1 139 1 294 1 57 1 340 1 295 1 189 1 347 1 194 2 15 1 250 3 71 1 200 1 120 1 209 1 262 2 265 1 211 1 212 1 269 5 271 1 29 2 84 1 367 1 220 1 88 4 125 3 223 1 278 1 279 2 
326 1 172 1 128 1 177 1 233 2 331 1 290 1 241 1 49 5 50 1 243 1 139 1 339 2 294 1 340 1 57 1 295 1 189 1 347 1 15 1 250 3 200 1 258 1 120 1 209 1 262 2 265 3 212 1 211 1 362 1 269 5 271 1 29 2 84 1 367 1 220 1 88 4 125 3 223 1 37 2 279 2 
326 1 172 1 128 1 71 1 177 1 200 1 233 2 356 1 120 1 209 1 262 2 241 1 49 3 50 1 212 1 243 1 139 1 269 3 271 1 29 2 84 1 367 1 340 1 57 1 294 1 220 1 88 2 295 1 189 1 125 3 223 1 347 1 194 1 15 1 278 1 279 2 250 3 
71 1 177 1 233 4 356 1 137 1 120 2 209 1 262 4 49 4 266 1 212 2 243 3 80 1 139 1 269 4 271 2 29 4 84 1 367 2 294 2 220 1 88 3 295 1 125 7 347 2 194 2 278 1 279 4 250 5 
91 1 208 1 361 1 
361 1 210 1 
349 1 
357 1 353 1 361 1 
332 1 361 1 
353 1 361 1 
357 1 181 1 353 1 130 1 208 2 361 3 
26 1 304 1 42 2 72 1 318 3 294 1 320 1 256 1 372 3 119 1 74 2 359 1 120 1 151 1 348 1 78 4 182 7 
26 1 304 1 42 2 72 1 318 3 294 1 320 1 256 1 372 3 119 1 74 2 359 1 120 1 151 1 348 1 78 4 182 7 
26 1 304 1 42 2 72 1 318 3 294 1 320 1 256 1 372 3 119 1 74 2 359 1 120 1 148 1 151 1 348 1 78 4 182 7 
304 1 42 3 72 2 256 2 157 1 119 1 100 1 203 1 74 5 359 5 120 4 182 31 78 16 25 3 212 3 26 1 367 3 338 1 317 1 7 1 318 15 245 1 320 2 294 4 372 10 10 1 274 4 124 1 151 1 347 3 348 2 325 2 350 1 226 1 
351 1 42 2 132 1 72 1 256 1 100 2 119 1 74 3 359 1 120 1 182 9 78 5 26 1 317 2 7 1 318 4 294 1 320 1 10 2 372 4 151 1 348 1 325 4 350 2 
39 1 40 1 284 1 118 1 306 1 286 1 307 1 288 1 333 1 45 1 289 1 160 1 136 2 135 2 308 1 21 1 105 1 310 1 48 1 77 1 52 1 183 1 28 1 109 1 56 2 144 1 275 1 298 1 193 1 153 1 
39 1 117 1 40 1 284 1 118 1 306 1 286 1 288 2 45 1 289 1 160 1 136 3 135 2 308 1 21 1 105 1 310 1 48 1 77 1 52 1 183 1 109 1 56 3 32 1 144 1 275 1 298 1 150 1 193 1 153 1 
39 1 117 1 40 1 284 1 118 1 306 1 286 1 288 2 45 1 289 1 136 2 135 2 160 1 308 1 105 1 310 1 48 1 77 1 52 1 183 1 109 1 56 2 150 1 193 1 153 1 
39 1 92 1 173 1 353 1 253 1 284 2 73 1 286 2 289 2 136 1 21 1 310 1 48 1 105 2 361 1 183 1 52 1 140 1 56 1 32 1 86 1 275 1 69 1 
39 1 117 1 40 1 284 1 286 1 333 1 45 1 289 1 160 1 136 1 135 2 308 1 21 1 105 1 310 1 48 1 77 1 52 1 183 1 28 1 56 1 144 1 275 1 298 1 193 1 153 1 
299 1 
39 1 326 1 172 1 174 2 173 1 175 1 131 2 177 1 133 1 330 1 285 2 331 1 238 1 4 1 48 2 241 1 49 5 243 2 52 2 183 1 139 1 108 1 62 1 11 1 13 2 190 1 113 1 250 2 69 2 154 1 353 1 253 1 202 1 206 1 209 1 262 2 310 2 23 1 265 6 211 3 361 1 81 1 121 4 269 5 365 1 314 1 29 2 272 2 84 1 319 2 220 1 33 1 125 2 223 1 277 2 
326 1 81 1 121 2 269 3 365 1 172 1 314 1 108 1 175 1 218 1 330 1 62 1 11 1 238 1 13 1 113 1 241 1 223 1 49 3 23 1 265 2 211 1 
326 1 172 1 175 1 330 1 238 1 262 1 241 1 23 1 49 3 265 1 211 1 81 1 121 3 365 1 269 3 108 1 314 1 218 1 220 1 62 1 11 1 223 1 113 1 277 1 
326 1 172 1 175 1 330 1 238 1 262 1 241 1 23 1 49 3 265 2 211 1 81 1 121 3 365 1 269 3 108 1 314 1 218 1 319 1 220 1 62 1 11 1 13 1 223 1 113 1 277 1 
326 1 172 1 174 2 175 1 177 1 131 2 330 1 331 1 285 2 238 1 241 1 49 5 5 1 243 2 139 1 108 1 62 1 11 1 13 4 113 1 250 1 116 1 302 1 206 1 262 5 23 1 265 7 211 3 81 1 27 1 121 6 269 5 365 1 314 1 29 1 84 1 272 2 319 4 218 1 220 5 370 1 33 1 223 1 277 4 
326 1 172 1 174 2 175 1 131 2 177 1 133 1 330 1 285 2 331 1 206 1 238 1 262 2 241 1 23 1 49 4 265 4 211 2 243 2 139 1 81 1 121 4 365 1 269 4 108 1 314 1 29 1 272 2 84 1 319 2 220 1 33 1 62 1 11 1 13 2 125 2 113 1 223 1 277 2 250 1 
326 1 172 1 174 2 302 1 175 1 131 2 177 1 330 1 285 2 331 1 206 1 238 1 262 1 241 1 23 1 49 4 265 4 211 2 243 2 81 1 27 1 139 1 121 4 365 1 269 4 108 1 314 1 29 1 272 2 84 1 319 2 220 1 33 1 370 1 62 1 11 1 13 2 223 1 113 1 277 2 250 1 
326 1 172 1 174 2 302 1 175 1 131 2 177 1 330 1 285 2 331 1 206 1 238 1 262 1 241 1 23 1 49 4 265 4 211 2 243 2 81 1 27 1 139 1 121 4 365 1 269 4 108 1 314 1 29 1 272 2 84 1 319 2 220 1 33 1 370 1 62 1 11 1 13 2 223 1 113 1 277 2 250 1 
326 1 172 1 302 1 18 2 175 1 131 2 177 1 330 1 285 2 156 1 331 1 237 2 238 1 262 1 241 1 23 1 49 4 265 4 211 2 6 1 81 1 139 1 121 4 365 1 269 4 108 1 314 1 29 1 84 1 319 2 220 1 33 1 62 1 61 1 11 1 13 2 125 2 223 1 113 1 277 2 250 1 
326 1 172 1 174 2 302 1 175 1 131 2 177 1 330 1 285 2 331 1 206 1 238 1 262 1 241 1 23 1 49 4 5 1 265 5 211 2 243 2 139 1 81 1 27 1 121 5 365 1 269 4 108 1 314 1 29 1 272 2 84 1 319 3 220 1 33 1 370 1 62 1 11 1 13 3 223 1 113 1 277 3 250 1 
326 1 172 1 174 2 302 1 175 1 131 2 177 1 330 1 285 2 331 1 206 1 238 1 262 1 241 1 23 1 49 4 5 1 265 5 211 2 243 2 139 1 81 1 27 1 121 5 365 1 269 4 108 1 314 1 29 1 272 2 84 1 319 3 220 1 33 1 370 1 62 1 11 1 13 3 223 1 113 1 277 3 250 1 
326 1 172 1 18 2 175 1 131 2 177 1 133 1 330 1 285 2 331 1 156 1 237 2 238 1 262 1 241 1 23 1 49 4 265 4 211 2 139 1 81 1 121 4 365 1 269 4 108 1 314 1 29 1 84 1 319 2 220 1 33 1 62 1 11 1 13 2 125 2 113 1 223 1 277 2 250 1 
26 1 91 1 42 1 72 1 317 1 142 2 318 3 294 1 372 2 10 1 100 1 119 1 101 1 146 1 221 1 74 2 120 1 151 1 373 1 263 1 182 6 78 3 348 1 350 1 325 2 
317 1 110 1 318 1 10 1 100 1 274 1 101 1 146 1 221 1 14 1 192 1 263 1 182 1 350 1 325 2 
39 1 172 2 128 1 281 1 353 1 198 1 179 1 100 1 357 1 104 1 310 1 48 1 241 1 263 1 106 1 182 2 78 1 361 1 183 1 52 1 122 1 166 1 317 1 142 1 217 1 318 1 340 1 10 1 63 1 112 1 146 1 14 1 223 2 68 1 69 1 350 1 325 2 227 1 
39 1 172 2 128 1 353 1 198 1 99 1 100 2 357 1 101 1 104 1 241 1 48 1 310 1 263 2 182 2 51 1 361 1 183 1 52 1 267 1 164 1 166 1 317 2 217 1 318 2 340 1 10 2 63 1 112 1 146 2 221 1 12 1 14 1 223 2 171 1 350 2 325 4 69 1 
39 2 172 1 173 1 128 1 281 1 117 1 353 2 253 1 158 1 307 1 100 2 360 1 161 1 138 2 241 1 310 8 48 7 263 2 78 1 182 2 361 3 183 2 52 8 214 1 166 1 317 2 368 1 217 1 318 1 340 1 10 2 322 1 146 2 223 1 276 1 373 1 69 2 325 4 350 2 
172 1 127 1 128 1 200 1 100 1 101 1 120 1 241 1 263 1 78 1 182 3 212 1 367 1 317 1 318 2 340 1 294 1 10 1 146 1 221 1 14 1 223 1 347 1 126 1 325 2 350 1 
367 1 317 1 10 1 100 1 34 1 101 1 146 1 221 1 120 1 373 1 263 1 182 2 78 2 350 1 325 2 
317 1 318 2 294 1 10 1 100 1 342 1 101 1 146 1 221 1 373 1 263 1 182 2 212 1 350 1 325 2 
367 1 317 1 10 1 100 1 101 1 146 1 221 1 120 1 347 1 373 1 263 1 182 2 78 2 350 1 325 2 
367 1 317 1 158 1 10 1 100 1 34 1 101 1 146 1 221 1 120 1 263 1 182 2 78 2 350 1 325 2 
317 1 318 2 294 1 158 1 10 1 100 1 342 1 101 1 146 1 221 1 263 1 182 2 212 1 350 1 325 2 
367 1 317 1 158 1 10 1 100 1 101 1 146 1 221 1 120 1 347 1 263 1 182 2 78 2 350 1 325 2 
367 1 317 1 10 1 100 1 101 1 146 1 221 1 120 1 347 1 263 1 78 2 182 2 350 1 325 2 
39 1 172 1 281 1 353 1 198 1 99 1 100 1 357 1 310 1 48 1 263 1 78 1 182 2 361 1 183 1 52 1 166 1 317 1 142 1 318 1 10 1 63 1 112 1 146 1 223 1 69 1 350 1 325 2 
39 1 172 1 281 1 353 1 100 1 357 1 310 1 48 1 263 1 78 1 182 2 361 1 183 1 52 1 166 1 31 1 317 1 142 1 318 1 85 1 10 1 63 1 35 1 146 1 223 1 69 1 350 1 325 2 
367 1 317 1 10 1 100 1 101 1 146 1 221 1 120 1 14 1 347 1 263 1 182 2 78 2 350 1 325 2 
39 1 172 1 198 1 353 1 99 1 307 1 100 1 357 1 101 1 120 1 310 1 48 1 263 1 182 2 78 2 361 1 183 1 52 1 267 1 367 1 317 1 10 1 63 1 112 1 146 1 221 1 223 1 347 1 350 1 325 2 
172 1 128 1 367 1 200 1 317 1 321 1 340 1 10 1 100 1 101 1 146 1 221 1 120 1 14 1 347 1 223 1 241 1 263 1 182 2 78 2 350 1 325 2 126 1 
351 1 134 1 100 2 203 1 44 1 74 3 205 1 359 3 239 1 120 3 182 19 78 9 25 1 212 3 185 1 313 1 367 3 317 2 293 1 318 10 294 3 60 2 10 2 372 6 274 2 147 2 124 1 347 3 325 4 350 2 
1 1 351 1 313 1 367 1 317 1 293 2 318 5 10 1 180 1 274 2 100 1 203 2 44 1 205 2 120 1 147 2 347 1 78 6 182 11 25 2 242 1 350 1 325 2 
1 1 351 1 134 1 180 1 100 2 203 3 44 1 74 1 205 2 359 2 120 3 182 24 78 12 25 3 212 2 242 1 185 1 313 1 162 1 367 3 317 2 293 1 318 12 294 2 60 1 10 2 372 3 274 4 147 3 124 1 347 3 325 4 350 2 
1 1 351 1 134 1 180 1 100 2 203 3 44 1 74 2 205 2 359 2 120 3 182 24 78 12 25 3 212 2 242 1 185 1 313 1 162 1 367 3 317 2 293 1 318 12 294 2 60 1 10 2 372 4 274 4 147 3 124 1 347 3 325 4 350 2 
1 1 351 1 42 1 72 1 119 1 180 1 100 1 203 2 44 1 74 5 205 1 359 4 120 6 264 2 182 36 78 19 25 4 212 4 242 1 26 1 313 1 367 5 317 1 293 1 318 17 294 5 10 1 372 9 274 4 147 2 124 2 151 1 347 5 348 1 325 2 350 1 
235 1 273 1 87 1 358 1 344 1 94 1 255 1 143 1 114 1 20 1 
257 1 222 1 
273 1 87 1 94 1 297 1 65 1 219 1 143 1 114 1 20 1 
224 1 59 1 
282 1 345 1 141 1 
269 1 196 1 280 1 94 1 316 2 329 1 255 1 143 1 20 1 235 1 273 1 87 1 236 1 358 1 36 1 262 1 49 1 114 1 
269 1 196 1 280 1 94 1 316 2 329 1 255 1 143 1 20 1 235 1 273 1 87 1 236 1 358 1 36 1 262 1 49 1 114 1 
269 1 196 1 280 1 94 1 316 2 329 1 255 1 143 1 20 1 235 1 273 1 87 1 236 1 358 1 36 1 262 1 49 1 114 1 
282 1 224 1 59 1 
282 1 224 1 59 1 
345 1 141 1 
282 1 345 1 141 1 
247 1 8 1 
172 2 128 2 94 1 305 1 329 1 234 1 20 1 236 1 257 1 3 1 334 1 241 2 49 1 269 1 271 1 316 1 142 1 8 1 143 1 340 2 273 1 88 1 87 1 247 1 222 1 223 2 114 1 
39 1 172 2 327 1 281 1 353 1 352 1 100 1 138 2 310 2 22 1 241 2 48 2 263 1 78 1 182 2 361 1 183 1 52 2 54 1 337 1 166 1 317 1 368 1 318 1 10 1 146 1 14 1 223 2 276 1 350 1 325 2 
39 1 117 1 40 1 144 1 307 1 45 1 323 1 160 1 135 2 259 1 308 1 48 2 310 2 105 1 77 1 183 1 52 2 213 1 153 1 
39 1 117 1 40 1 144 1 45 1 123 1 160 1 135 2 259 1 308 1 48 1 310 1 105 1 77 1 52 1 153 1 183 1 
39 1 300 1 173 1 353 1 253 1 73 1 323 1 48 1 310 1 105 1 361 1 183 1 69 1 52 1 
39 1 117 1 40 1 144 1 45 1 323 1 160 1 135 2 259 1 308 1 48 1 310 1 105 1 77 1 183 1 52 1 213 1 153 1 
260 1 
91 1 29 1 249 1 262 1 225 1 220 1 250 1 
174 1 177 1 331 1 206 1 262 2 49 1 265 1 211 1 243 1 139 1 269 1 29 1 272 1 84 1 220 1 125 1 250 1 
39 3 130 1 177 4 233 6 331 4 43 2 332 2 4 1 48 3 49 5 183 4 52 3 243 6 139 4 335 2 292 2 294 2 9 1 246 2 341 1 62 2 249 1 347 2 250 9 69 1 251 2 301 2 303 1 353 3 155 2 254 1 307 1 357 3 120 2 209 2 208 2 262 8 310 3 265 5 210 3 361 10 211 3 212 2 79 2 269 5 83 1 29 8 84 4 367 2 220 2 125 12 171 2 225 1 279 6 
1 1 177 1 233 4 331 1 180 1 203 1 120 2 309 1 262 1 75 1 25 1 212 2 243 1 242 1 139 1 29 4 84 1 367 2 294 2 274 1 125 2 347 2 279 4 250 6 
26 1 139 1 269 1 29 2 177 1 84 1 72 1 294 1 331 1 370 1 43 1 103 1 120 1 49 1 348 1 250 2 
139 1 29 1 177 1 84 1 220 1 331 1 249 1 262 1 225 1 250 1 
29 5 155 1 367 2 233 5 294 2 43 2 120 2 125 10 262 5 347 2 171 1 279 5 212 2 243 5 250 5 
269 1 262 1 49 1 265 1 220 1 211 1 
39 1 154 1 173 1 303 1 353 1 177 2 253 1 331 1 356 1 202 1 287 1 209 2 4 2 310 4 48 4 49 3 265 4 361 1 211 2 183 1 52 4 139 2 269 3 29 2 84 2 341 2 67 1 69 2 250 2 
39 1 172 3 128 2 198 1 353 1 200 2 99 1 100 1 357 1 310 1 48 1 241 2 263 1 182 1 361 1 52 1 183 1 166 1 317 1 142 1 318 1 340 2 10 1 63 1 112 1 146 1 170 1 223 3 15 1 325 2 350 1 69 1 
139 1 29 2 177 1 84 1 42 1 233 2 220 2 331 1 125 4 209 1 262 4 4 1 279 2 243 2 250 1 
55 1 87 1 114 1 
247 1 87 1 291 1 255 1 114 1 
55 1 87 1 114 1 
55 1 87 1 114 1 
87 1 97 1 114 1 
87 1 97 1 114 1 
87 1 97 1 114 1 
87 1 114 1 
143 1 20 1 
26 1 42 1 317 2 7 1 72 1 318 4 294 1 372 3 10 2 100 2 119 1 74 2 359 1 120 1 151 1 182 8 78 4 348 1 350 2 325 4 
91 1 26 1 42 1 72 1 318 3 294 1 372 2 119 1 74 2 120 1 151 1 348 1 78 3 182 6 
82 1 367 1 317 1 318 2 294 1 372 2 10 1 100 1 74 1 359 1 120 1 347 1 78 2 182 4 212 1 350 1 325 2 
367 1 318 4 294 1 372 2 274 2 203 1 74 1 359 1 124 1 120 1 347 1 182 7 78 3 212 1 25 1 
42 1 72 2 119 1 100 2 74 5 359 4 120 3 264 1 78 11 182 23 25 2 212 2 26 1 53 1 367 2 7 2 317 2 318 12 294 3 372 9 10 2 274 2 124 1 151 1 347 2 192 1 348 2 350 2 325 4 
274 1 318 1 182 1 
182 1 78 1 25 1 
82 1 367 1 317 1 318 3 294 1 10 1 372 3 100 1 74 2 359 1 120 1 347 1 171 1 182 6 78 3 212 1 325 2 350 1 
351 1 1 1 367 1 317 1 318 2 10 1 180 1 100 1 274 1 203 1 120 1 347 1 78 3 182 5 25 1 242 1 350 1 325 2 
26 1 72 1 318 3 294 1 372 2 74 1 359 1 120 1 78 3 182 6 348 1 
53 1 72 1 7 1 317 1 318 2 372 2 10 1 100 1 119 1 74 1 359 1 151 1 78 1 348 1 182 3 350 1 325 2 
26 1 351 1 317 1 72 2 318 5 294 2 10 1 372 5 100 1 103 1 74 3 359 2 120 2 348 2 78 5 182 10 325 2 350 1 
351 1 367 1 317 1 10 1 372 1 100 1 359 1 120 1 78 2 182 2 350 1 325 2 
351 1 367 1 317 1 318 2 294 1 372 2 10 1 100 1 74 1 359 1 120 1 347 1 78 2 182 4 212 1 350 1 325 2 
53 1 351 1 7 1 317 3 72 1 318 2 134 1 10 3 372 2 100 3 74 1 359 1 182 3 348 1 78 1 350 3 325 6 
351 1 42 1 72 3 134 1 157 1 119 1 100 5 203 1 74 7 359 5 120 5 182 34 78 16 25 3 212 3 26 2 53 1 82 1 338 1 367 3 7 2 317 5 318 18 245 1 294 5 10 5 372 12 274 4 124 1 151 1 347 3 348 3 325 10 350 5 
26 1 351 1 1 1 42 1 72 1 317 1 318 4 294 1 372 2 10 1 119 1 100 1 274 1 203 1 74 2 120 1 151 1 348 1 78 4 182 8 25 1 350 1 325 2 
1 1 351 1 42 1 72 1 119 1 100 2 203 1 74 2 359 1 120 2 182 11 78 6 25 1 26 1 82 1 367 1 317 2 318 5 294 1 10 2 372 3 274 2 124 1 151 1 347 1 348 1 325 4 350 2 
351 1 1 1 367 1 317 1 318 2 10 1 180 1 100 1 274 1 203 1 120 1 347 1 78 3 182 5 25 1 242 1 350 1 325 2 
351 1 1 1 367 1 317 1 318 2 10 1 180 1 100 1 274 1 203 1 120 1 347 1 78 3 182 5 25 1 242 1 350 1 325 2 
26 1 351 1 1 1 42 1 72 1 317 1 318 4 294 1 372 2 10 1 119 1 100 1 274 1 203 1 74 2 120 1 151 1 348 1 78 4 182 8 25 1 350 1 325 2 
351 1 1 1 367 1 317 1 318 2 10 1 180 1 100 1 274 1 203 1 120 1 347 1 78 3 182 5 25 1 242 1 350 1 325 2 
351 1 1 1 82 1 367 1 317 2 318 2 10 2 180 1 100 2 274 1 203 1 120 1 347 1 78 3 182 5 25 1 242 1 350 2 325 4 
351 1 1 1 367 1 317 2 318 2 134 1 10 2 180 1 100 2 274 1 203 1 120 1 347 1 78 3 182 5 25 1 242 1 350 2 325 4 
26 1 72 3 318 4 294 1 372 6 119 1 74 3 359 3 120 1 151 2 182 7 348 3 78 3 
351 1 1 1 367 1 317 2 318 2 134 1 10 2 180 1 100 2 274 1 203 1 120 1 347 1 78 3 182 5 25 1 242 1 350 2 325 4 
172 1 223 1 241 1 142 1 330 1 152 1 58 1 
172 1 283 1 176 1 252 1 142 1 330 1 58 1 168 1 90 1 241 1 223 1 152 1 
39 1 91 1 173 1 353 1 253 1 310 1 48 1 361 1 183 1 52 1 69 1 
39 1 172 2 128 1 353 1 142 1 217 1 340 1 63 1 357 1 112 1 241 1 223 2 48 1 310 1 361 1 183 1 69 1 52 1 
39 1 326 1 172 2 128 2 353 2 175 1 332 1 357 2 238 1 310 1 48 1 241 2 361 3 52 1 183 1 79 1 142 1 217 1 340 1 341 1 63 1 112 1 223 2 
39 1 326 1 172 2 128 2 353 2 175 1 178 1 332 1 357 2 238 1 310 2 48 2 241 2 361 3 52 2 183 1 79 1 31 1 142 1 217 1 340 1 341 1 63 1 223 2 
79 1 39 1 269 2 353 1 178 1 369 1 220 1 62 1 332 1 341 1 357 1 102 1 208 1 262 1 48 3 310 3 49 2 265 1 210 1 361 4 69 1 183 1 52 3 
79 1 39 1 269 2 251 1 353 1 178 1 220 1 62 1 332 1 341 1 357 1 208 1 262 1 48 3 310 3 49 2 265 1 210 1 361 4 69 1 183 1 52 3 
39 1 322 1 310 1 48 1 183 1 52 1 
17 1 310 1 48 1 52 1 69 1 
39 1 172 2 128 1 353 1 198 1 42 1 72 1 99 1 119 1 100 2 307 1 357 1 101 1 74 2 120 1 22 1 241 1 48 1 310 1 263 2 182 6 78 3 361 1 183 1 52 1 26 1 267 1 317 2 142 2 318 3 217 1 294 1 340 1 372 2 10 2 63 1 112 1 146 2 221 1 12 1 151 1 14 1 223 2 348 1 350 2 325 4 
251 1 303 1 177 2 331 2 208 1 262 1 310 1 48 1 49 3 265 2 210 1 361 2 211 1 52 1 139 2 335 1 269 3 29 1 292 1 84 2 220 1 246 1 62 1 88 1 249 1 225 1 250 1 69 1 
39 1 83 1 353 1 130 1 307 1 322 1 357 1 208 1 48 2 310 2 361 2 52 2 183 2 
39 1 173 1 353 1 178 1 253 1 187 1 307 1 48 4 310 4 361 1 183 1 69 1 52 4 
39 1 353 1 163 1 355 1 167 1 341 1 357 1 207 1 48 2 310 2 76 1 361 1 52 2 183 2 
39 1 45 1 135 1 308 1 310 1 48 1 77 1 183 1 52 1 69 1 
39 1 54 1 117 1 353 1 368 1 307 1 48 2 310 2 361 1 52 2 183 1 
39 2 173 1 214 1 353 2 253 1 187 1 368 1 341 1 307 1 360 1 48 4 310 5 361 3 69 1 52 5 183 2 
39 2 173 1 353 2 253 1 187 1 368 1 341 1 307 1 188 1 360 1 48 4 310 5 361 3 69 1 52 5 183 2 
39 1 172 2 128 1 353 1 31 1 142 1 217 1 340 1 63 1 357 1 241 1 223 2 48 1 310 1 361 1 183 1 69 1 52 1 
341 1 17 1 310 1 48 1 52 1 
244 1 343 1 95 1 142 1 107 1 
326 1 244 1 81 1 269 2 70 1 175 1 41 1 95 2 142 1 220 1 98 1 62 1 201 1 88 1 343 2 238 1 262 1 49 2 107 2 
244 1 172 1 327 1 337 1 352 1 95 1 223 1 241 1 107 1 
98 1 244 1 41 1 
306 1 91 1 109 1 118 1 
306 1 136 1 21 1 275 1 109 1 56 1 118 1 
286 1 289 1 136 1 
93 1 28 1 199 1 56 3 109 1 118 1 306 1 136 3 275 1 21 1 66 1 24 2 
306 1 288 1 136 2 21 1 275 1 109 1 56 2 118 1 195 1 
306 1 312 1 145 1 135 1 160 1 136 1 28 1 308 1 21 1 275 1 56 1 
306 1 136 1 28 1 21 1 275 1 109 1 56 1 
136 1 28 1 21 1 275 1 109 2 56 1 118 1 
28 1 109 1 56 2 306 1 159 1 371 1 169 1 136 2 275 2 21 2 
28 1 109 1 56 3 118 1 306 2 111 1 288 2 145 1 136 3 275 1 21 1 346 1 191 1 
228 1 28 1 40 1 109 1 56 2 118 1 306 1 288 1 45 1 135 2 136 2 160 1 308 1 275 1 21 1 
28 1 109 1 56 4 96 1 118 1 306 2 288 2 145 1 136 4 275 2 21 2 346 1 195 1 
306 1 136 1 28 1 21 1 275 1 109 1 56 1 118 1 
93 1 199 1 109 2 56 4 118 2 306 3 288 2 145 1 136 4 275 1 21 1 346 1 311 1 24 1 
268 1 288 1 230 1 296 1 136 1 28 1 21 1 275 1 56 2 
306 1 93 1 64 1 199 2 136 3 28 1 21 1 275 1 109 1 56 3 24 2 118 1 
306 2 197 1 261 2 215 1 
136 1 28 1 21 1 275 1 56 1 19 1 
306 1 288 1 136 2 28 1 21 1 275 1 109 1 56 2 191 1 118 1 
324 1 
306 1 136 1 28 1 21 1 275 1 109 1 56 1 118 1 
306 1 288 1 136 3 28 1 21 1 275 1 109 1 56 3 191 1 24 1 118 1 
306 1 145 1 346 1 311 1 
306 1 109 1 

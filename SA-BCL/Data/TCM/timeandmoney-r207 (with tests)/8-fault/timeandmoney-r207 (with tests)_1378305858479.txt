#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 262 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 45 92 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 45 92 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 45 92 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 45 92 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 45 92 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 0 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 45 (115,122) (115,122) 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 45 (115,122) (115,122) 118 183 109 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 45 (115,122) (115,122) 118 183 109 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 45 (115,122) (115,122) 109 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 45 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 45 (115,122) (115,122) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 0 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 45 (115,122) (115,122) 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 45 (115,122) (115,122) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 45 (115,122) (115,122) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 45 (115,122) (115,122) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 45 (115,122) (115,122) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 45 (115,122) (115,122) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 45 (115,122) (115,122) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 45 (115,122) (115,122) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 45 (115,122) (115,122) 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 45 (115,122) (115,122) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | ASSIGN | 5896 | = null
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 4007 | return null
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9794 | == -> !=
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | STATEMENT | 2497 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I | OPERATOR | 1301 | ^ -> |
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 797 | stmt -> ;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
206 2 70 1 72 4 224 1 74 9 268 2 75 3 24 1 106 1 358 2 269 1 26 5 359 1 275 1 233 1 368 2 53 1 179 1 339 9 89 1 146 1 200 1 217 2 124 2 16 1 41 2 205 6 308 1 
206 2 70 1 72 4 224 1 74 9 268 2 75 3 24 1 358 2 106 1 269 1 26 5 359 1 275 1 233 1 368 2 53 1 179 1 339 9 89 1 146 1 200 1 217 2 124 2 16 1 41 2 205 6 308 1 
206 2 70 1 72 5 224 1 74 10 268 2 75 4 24 1 358 2 106 1 269 1 26 6 359 1 275 1 233 1 368 2 53 1 179 1 339 10 89 1 146 1 200 1 217 2 124 2 16 1 41 2 205 7 308 1 
206 2 70 1 72 3 224 1 74 7 268 1 75 2 358 2 106 1 269 1 26 4 359 1 275 1 233 1 368 2 53 1 179 1 339 7 89 1 146 1 200 1 217 2 124 2 16 1 41 2 205 4 308 1 
233 1 206 1 368 1 53 1 70 1 72 2 339 4 74 4 268 2 200 1 75 1 24 1 358 1 26 3 124 1 16 1 41 1 205 3 
233 1 368 1 206 1 53 1 188 1 132 1 339 2 74 2 200 1 148 1 106 1 26 1 217 1 124 1 41 1 308 1 
233 1 368 2 53 1 72 1 339 3 74 3 200 1 75 1 26 2 217 1 124 2 275 1 205 1 
206 1 70 1 72 4 224 1 74 9 268 2 75 3 24 1 358 1 26 5 359 1 275 1 333 1 367 1 233 1 368 2 53 1 339 9 200 1 217 1 124 2 16 1 205 7 41 1 
206 1 70 1 72 4 224 1 74 9 268 2 75 3 24 1 358 1 26 5 359 1 275 1 333 1 367 1 233 1 368 2 53 1 339 9 200 1 217 1 124 2 16 1 205 7 41 1 
126 1 0 1 137 1 
347 2 137 1 44 1 
62 2 22 2 102 2 208 2 221 1 158 2 116 1 232 2 
161 1 244 1 22 2 102 2 208 2 312 1 139 1 252 1 363 1 330 1 298 1 140 1 365 1 194 1 142 1 116 1 232 3 176 1 213 1 199 1 257 1 149 2 281 1 282 1 237 2 218 2 38 1 62 2 239 1 285 2 64 2 154 1 221 1 40 1 158 3 375 1 261 1 
71 1 62 1 22 1 102 1 128 1 208 1 221 1 254 1 158 1 232 1 
208 1 137 1 340 1 15 1 91 1 58 1 327 1 170 1 126 1 273 1 158 1 50 1 254 1 232 1 
22 1 102 1 208 1 137 1 340 2 91 1 327 2 58 1 126 1 62 1 273 1 158 1 50 1 254 1 232 1 
230 1 327 1 354 1 272 1 340 1 
327 2 126 1 354 1 272 1 155 1 335 1 137 1 340 2 
327 1 272 1 340 1 
71 1 354 1 22 1 102 1 208 1 340 1 327 1 60 1 62 1 128 1 221 1 254 1 158 1 232 1 
137 1 
327 2 126 1 354 1 272 1 155 1 297 1 137 1 340 2 
337 1 354 2 32 1 137 1 340 5 228 2 327 5 169 1 345 1 59 2 344 1 126 1 110 2 272 2 155 1 112 1 8 1 299 1 317 1 
0 1 116 1 
22 1 102 1 208 2 236 1 62 1 158 2 116 2 232 2 324 1 
291 1 313 1 223 1 
244 1 149 1 281 1 282 1 218 1 252 1 64 1 212 1 330 1 194 1 365 1 158 1 116 1 375 1 261 1 232 1 
244 1 291 1 102 1 208 1 149 1 281 1 282 1 218 1 252 1 271 1 62 1 64 1 330 1 365 1 194 1 348 1 158 2 261 1 375 1 232 2 
371 1 22 1 102 4 208 5 170 1 251 1 219 1 271 2 62 4 348 1 158 5 116 1 232 5 324 1 
307 1 71 1 62 2 102 2 208 2 254 1 158 2 232 2 
22 1 271 1 62 3 102 3 208 3 158 3 116 1 232 3 
71 1 62 1 102 1 208 1 254 1 158 1 232 1 
236 1 62 1 22 1 102 1 208 1 254 1 158 1 232 1 324 1 
161 1 244 1 22 2 102 3 208 3 162 1 312 1 327 1 252 1 271 1 273 1 330 1 298 1 140 1 365 1 194 1 142 1 50 1 254 1 116 1 232 4 199 1 257 1 214 1 340 1 149 1 91 1 58 1 281 1 282 1 237 1 218 1 38 1 62 3 239 1 285 2 64 1 221 1 348 1 40 1 158 4 261 1 375 1 324 1 
170 1 371 1 62 1 271 1 102 1 208 2 158 2 116 1 232 2 
22 1 310 1 102 3 208 3 162 1 137 1 340 1 91 1 327 1 58 1 271 2 62 3 273 1 348 1 254 1 158 3 50 1 324 1 232 3 
22 1 291 1 102 2 208 2 271 1 62 2 313 1 158 2 324 1 232 2 
244 1 149 1 282 1 281 1 218 1 252 1 64 1 330 1 194 1 365 1 158 1 116 1 375 1 261 1 232 1 
244 1 180 1 164 1 149 1 282 1 281 1 218 1 64 1 330 1 365 1 158 1 116 1 375 1 261 1 232 1 
69 1 46 1 161 1 73 1 309 1 291 2 312 1 140 1 313 2 142 1 316 1 301 1 213 2 199 2 302 1 319 1 283 1 237 4 38 1 239 1 285 2 349 1 223 2 260 1 
307 1 62 1 273 1 102 1 208 1 254 1 158 1 232 1 
84 1 5 1 
84 1 5 1 
190 1 249 1 
190 1 249 1 
190 1 249 1 
84 1 90 1 5 1 
295 1 84 1 5 1 
190 1 65 1 84 2 201 1 249 1 5 2 
84 1 90 1 5 1 
84 1 90 1 5 1 
185 1 84 1 5 1 
185 1 84 1 5 1 
185 1 84 1 5 1 
99 1 102 2 246 1 208 2 165 1 5 1 327 1 293 1 295 1 84 1 28 1 116 1 232 2 33 1 340 1 341 1 373 1 343 1 62 2 322 1 241 1 288 1 159 1 158 2 
33 2 304 1 246 2 23 1 134 2 137 1 340 2 5 2 341 2 79 1 280 1 327 2 373 3 65 1 67 1 84 2 28 1 315 1 159 2 
206 1 41 1 358 1 
206 1 132 1 41 1 
123 1 132 1 77 1 41 3 135 1 358 2 
132 1 178 1 77 1 41 2 135 1 358 1 
132 1 77 1 41 2 135 2 358 1 
69 1 354 4 73 1 100 1 137 2 228 1 270 1 327 5 293 1 169 2 80 1 7 2 110 1 272 1 81 1 82 1 334 1 30 2 317 3 337 1 87 2 340 5 319 1 283 1 59 1 126 1 347 3 155 1 241 1 288 1 68 1 44 1 
69 3 354 7 73 3 100 3 356 1 137 5 228 2 293 4 230 5 327 9 169 6 328 1 7 6 110 2 272 6 81 1 8 1 231 1 334 2 317 8 337 1 87 6 144 1 340 9 372 1 319 3 283 3 59 2 126 1 347 9 155 1 242 5 68 2 262 1 44 3 
69 1 71 1 354 2 22 1 73 1 100 1 102 1 208 1 137 3 228 1 270 1 327 3 293 1 169 2 110 1 7 2 82 1 8 1 254 1 334 1 30 1 232 1 317 3 87 2 340 3 319 1 60 1 59 1 283 1 126 1 62 1 128 1 347 4 221 1 68 1 158 1 44 2 
69 1 354 1 73 1 100 1 137 2 228 1 327 2 270 1 293 1 169 2 7 2 110 1 82 1 8 1 334 1 30 1 317 3 87 2 340 2 319 1 59 1 283 1 347 4 68 1 262 1 44 2 
281 1 0 1 101 1 
281 1 117 1 
9 1 
281 1 244 1 365 1 
281 1 189 1 
281 1 244 1 
281 3 244 1 101 2 365 1 157 1 287 1 
92 1 237 1 213 1 133 1 45 1 
92 1 237 1 213 1 133 1 45 1 
92 1 237 1 213 1 133 1 103 1 45 1 
92 1 237 1 213 1 133 1 45 1 
92 1 237 1 213 1 133 1 45 1 
206 1 132 1 74 2 163 1 2 1 358 1 26 1 330 1 198 1 233 1 368 1 53 1 31 1 339 2 277 1 200 1 149 1 150 1 217 1 123 1 124 1 218 1 346 1 37 1 39 1 64 1 205 1 41 2 261 1 263 1 
206 1 132 1 74 3 163 1 358 1 26 1 330 1 198 1 233 1 368 1 31 1 256 1 339 3 277 1 120 1 200 1 149 1 123 1 150 1 217 1 124 1 218 1 346 1 37 1 39 1 64 1 205 2 41 2 261 1 351 1 
206 1 132 1 74 2 163 1 358 1 26 1 330 1 233 1 31 1 256 1 339 2 277 1 200 1 149 1 217 1 150 1 123 1 218 1 37 1 39 1 64 1 205 2 41 2 261 1 351 1 
244 1 265 1 74 1 1 1 163 2 105 1 27 1 111 1 172 1 330 1 368 1 31 2 339 1 120 1 149 1 150 2 217 2 124 1 281 1 218 1 64 1 261 1 375 1 
206 1 132 1 74 1 163 1 2 1 358 1 330 1 198 1 368 1 53 1 31 1 339 1 277 1 149 1 150 1 217 1 123 1 124 1 218 1 346 1 37 1 39 1 64 1 41 2 261 1 351 1 
374 1 
244 1 48 2 208 1 209 1 3 1 105 1 107 1 327 5 168 2 169 2 170 1 110 1 111 1 330 1 174 1 50 1 254 1 337 1 11 4 13 2 121 2 340 5 15 1 58 1 59 1 126 1 218 2 64 2 17 1 347 2 68 1 261 1 352 1 20 1 266 2 137 2 228 1 361 1 193 1 272 6 273 1 317 2 232 1 276 1 149 2 34 1 91 1 281 1 286 1 94 2 155 3 158 1 43 2 375 2 44 2 
352 1 20 1 11 2 208 1 3 1 340 3 15 1 91 1 58 1 327 3 168 1 170 1 193 1 272 2 273 1 155 1 297 1 174 1 254 1 158 1 50 1 232 1 
352 1 20 1 48 1 208 1 3 1 137 1 327 3 170 1 193 1 272 1 273 1 297 1 174 1 50 1 254 1 232 1 11 3 340 3 15 1 91 1 58 1 126 1 155 1 158 1 
352 1 20 1 48 1 208 1 3 1 137 1 327 3 168 1 170 1 193 1 273 1 272 2 297 1 174 1 50 1 254 1 232 1 11 3 340 3 15 1 91 1 58 1 126 1 94 1 155 1 158 1 
352 1 20 1 48 4 266 2 208 1 3 1 137 5 228 1 327 5 169 1 168 4 170 1 110 1 193 1 171 1 272 7 273 1 297 1 174 1 29 1 50 1 254 1 85 1 317 1 232 1 276 1 337 1 11 6 13 2 121 2 258 1 340 5 15 1 91 1 58 1 59 1 126 5 286 1 94 4 155 3 204 1 158 1 43 2 44 2 
48 2 208 1 3 1 327 4 169 1 168 2 170 1 110 1 174 1 254 1 50 1 337 1 11 4 13 2 121 2 340 4 15 1 58 1 59 1 126 1 347 2 352 1 20 1 266 2 137 2 228 1 361 1 193 1 273 1 272 4 232 1 317 1 276 1 91 1 286 1 94 2 155 2 158 1 43 2 44 2 
352 1 20 1 48 2 266 2 208 1 3 1 137 1 228 1 327 4 168 2 169 1 170 1 110 1 193 1 272 4 273 1 174 1 29 1 50 1 254 1 85 1 317 1 232 1 276 1 337 1 11 4 13 2 121 2 340 4 15 1 91 1 58 1 59 1 126 1 286 1 94 2 155 2 204 1 158 1 43 2 44 2 
352 1 20 1 48 2 266 2 208 1 3 1 137 1 228 1 327 4 168 2 169 1 170 1 110 1 193 1 272 4 273 1 174 1 29 1 50 1 254 1 85 1 317 1 232 1 276 1 337 1 11 4 13 2 121 2 340 4 15 1 91 1 58 1 59 1 126 1 286 1 94 2 155 2 204 1 158 1 43 2 44 2 
352 1 20 1 21 1 48 2 208 1 3 1 137 1 228 1 327 4 168 2 169 1 170 1 110 1 193 1 272 4 273 1 173 1 174 1 29 1 50 1 254 1 317 1 232 1 276 1 337 1 338 2 11 4 13 2 121 2 340 4 15 1 91 1 58 1 59 1 126 1 238 1 94 2 155 2 347 2 222 2 158 1 
352 1 20 1 48 3 266 2 208 1 3 1 137 1 228 1 327 4 169 1 168 3 170 1 110 1 193 1 273 1 171 1 272 5 174 1 29 1 50 1 254 1 85 1 317 1 232 1 276 1 337 1 11 5 13 2 121 2 340 4 15 1 91 1 58 1 59 1 126 1 286 1 94 3 155 2 204 1 158 1 43 2 44 2 
352 1 20 1 48 3 266 2 208 1 3 1 137 1 228 1 327 4 169 1 168 3 170 1 110 1 193 1 273 1 171 1 272 5 174 1 29 1 50 1 254 1 85 1 317 1 232 1 276 1 337 1 11 5 13 2 121 2 340 4 15 1 91 1 58 1 59 1 126 1 286 1 94 3 155 2 204 1 158 1 43 2 44 2 
352 1 20 1 48 2 208 1 3 1 137 1 228 1 327 4 168 2 169 1 361 1 170 1 110 1 193 1 272 4 273 1 174 1 173 1 50 1 254 1 317 1 232 1 276 1 337 1 338 2 11 4 13 2 121 2 340 4 15 1 91 1 58 1 59 1 126 1 94 2 155 2 347 2 222 2 158 1 
69 1 161 1 301 1 199 2 213 3 309 1 0 1 55 1 122 1 229 1 312 1 283 1 237 5 153 1 38 1 285 2 239 1 140 1 115 1 260 1 142 1 116 1 45 1 
161 1 38 1 239 1 285 2 145 1 83 1 140 1 142 1 312 1 
244 1 161 1 160 1 102 1 208 1 312 1 252 1 271 1 363 1 330 1 212 1 313 1 140 1 298 1 365 1 194 1 142 1 116 1 232 2 199 1 213 1 145 1 149 1 216 1 281 1 282 1 218 1 93 1 237 2 62 1 38 1 285 2 239 1 64 1 348 1 158 2 261 1 375 1 
161 3 244 2 291 6 100 2 102 1 208 1 4 1 252 2 330 2 298 1 115 1 116 1 301 3 213 10 55 1 182 1 122 1 56 2 218 1 62 1 64 1 348 1 223 6 260 3 261 2 69 3 73 2 267 2 229 1 312 3 271 1 363 1 140 3 313 6 194 2 365 2 142 3 232 3 199 9 145 1 278 2 149 1 319 2 151 2 282 2 281 2 283 3 153 1 237 19 38 3 239 3 285 6 40 2 158 3 375 1 45 1 
244 3 161 2 102 1 208 1 105 1 111 1 330 3 298 1 51 1 175 1 176 2 213 1 218 7 62 1 64 7 261 4 263 1 351 1 309 1 225 1 191 1 357 1 312 2 192 1 271 1 363 1 140 2 365 1 142 2 232 1 199 1 149 6 35 1 320 1 281 4 237 2 38 2 285 4 239 2 321 1 158 1 375 2 290 1 
161 1 69 1 22 1 73 1 291 1 100 1 102 1 208 1 311 1 312 1 313 1 140 1 142 1 232 1 301 1 213 1 199 2 145 1 319 1 283 1 237 3 62 1 38 1 239 1 285 2 260 1 223 1 158 1 324 1 
161 1 301 1 291 1 309 1 213 2 312 1 319 1 283 1 237 2 38 1 362 1 285 2 239 1 313 1 140 1 349 1 223 1 142 1 
161 1 69 1 301 1 73 1 291 1 309 1 199 2 312 1 237 2 38 1 285 2 239 1 313 1 140 1 260 1 223 1 142 1 316 1 
161 1 69 1 73 1 309 1 291 2 100 1 312 1 362 1 140 1 313 2 142 1 301 2 213 2 199 2 319 1 283 1 237 4 38 1 239 1 285 2 223 2 260 1 
161 1 301 1 291 1 213 2 35 1 312 1 319 1 283 1 237 2 38 1 362 1 285 2 239 1 313 1 140 1 349 1 223 1 142 1 
161 1 69 1 301 1 73 1 291 1 199 2 35 1 312 1 237 2 38 1 285 2 239 1 313 1 140 1 260 1 223 1 142 1 316 1 
161 1 69 1 73 1 291 2 100 1 312 1 362 1 140 1 313 2 142 1 301 2 213 2 199 2 35 1 319 1 283 1 237 4 38 1 239 1 285 2 223 2 260 1 
161 1 69 1 73 1 291 2 100 1 312 1 362 1 140 1 313 2 142 1 301 2 213 2 199 2 319 1 283 1 237 4 38 1 239 1 285 2 223 2 260 1 
244 1 161 1 312 1 252 1 363 1 330 1 140 1 298 1 365 1 194 1 142 1 116 1 232 1 213 1 199 1 149 1 282 1 281 1 237 2 218 1 38 1 285 2 239 1 64 1 40 1 158 1 261 1 375 1 
244 1 161 1 164 1 312 1 363 1 330 1 140 1 298 1 365 1 142 1 116 1 232 1 213 1 199 1 180 1 149 1 282 1 202 1 281 1 237 2 218 1 38 1 285 2 239 1 64 1 158 1 261 1 375 1 
161 1 69 1 73 1 291 2 100 1 312 1 362 1 140 1 313 2 142 1 301 2 213 2 199 2 145 1 319 1 283 1 237 4 38 1 239 1 285 2 223 2 260 1 
69 1 244 1 161 1 73 1 291 2 100 1 312 1 252 1 362 1 330 1 313 2 140 1 365 1 194 1 142 1 232 1 301 2 199 2 213 2 149 1 319 1 282 1 151 1 281 1 283 1 237 4 218 1 38 1 285 2 239 1 64 1 40 1 260 1 223 2 158 1 261 1 263 1 
69 1 161 1 73 1 22 1 291 1 100 1 102 1 208 1 312 1 362 1 140 1 313 1 142 1 232 1 52 1 301 1 199 1 213 2 145 1 319 1 283 1 237 3 62 1 38 1 239 1 285 2 158 1 223 1 324 1 
161 2 131 1 69 3 73 3 100 3 210 1 136 1 109 1 362 3 364 1 141 2 140 2 255 1 86 1 301 6 119 2 199 10 213 9 54 2 181 1 183 1 342 1 319 3 283 3 36 1 237 19 38 2 239 2 285 4 260 3 
69 2 161 3 131 2 73 2 100 3 210 1 136 1 109 1 250 1 362 2 141 4 140 3 118 1 86 2 301 4 119 1 199 12 213 14 318 1 54 2 181 2 183 2 319 3 125 2 61 1 283 3 36 1 237 26 38 3 239 3 285 6 66 1 19 1 260 2 
161 3 100 4 210 1 109 1 250 1 115 1 118 1 255 1 301 7 119 1 213 20 54 4 181 2 55 1 183 1 122 1 61 1 125 1 66 1 260 3 19 1 69 5 131 3 73 4 136 1 229 1 362 4 364 1 140 3 141 4 86 3 199 21 318 1 319 4 283 5 237 41 36 1 153 1 38 3 285 6 239 3 42 1 45 1 
161 4 131 3 69 4 73 3 100 4 210 1 136 1 229 1 250 1 109 1 362 3 364 1 141 4 140 4 115 1 118 1 255 1 86 3 301 7 119 1 199 18 213 20 318 1 54 4 181 2 55 1 183 1 122 1 319 4 125 2 61 1 283 5 153 1 36 1 237 38 38 4 239 4 285 8 66 1 42 1 19 1 260 4 45 1 
69 1 161 1 131 1 136 1 229 1 109 1 140 1 141 1 115 1 86 1 301 1 199 4 213 5 54 1 181 1 55 1 183 1 122 1 283 1 36 1 237 9 153 1 38 1 239 1 285 2 260 1 45 1 
33 1 264 1 65 1 67 1 246 1 84 1 315 1 159 1 341 1 5 1 
295 1 165 1 
33 1 246 1 130 1 147 1 156 1 84 1 159 1 341 1 5 1 
294 1 90 1 
185 1 201 1 300 1 
33 1 304 1 246 1 134 1 137 1 340 1 5 1 341 1 79 1 280 1 327 1 373 2 65 1 67 1 84 1 28 1 315 1 159 1 
33 1 304 1 246 1 134 1 137 1 340 1 5 1 341 1 79 1 280 1 327 1 373 2 65 1 67 1 84 1 28 1 315 1 159 1 
33 1 304 1 246 1 134 1 137 1 340 1 5 1 341 1 79 1 280 1 327 1 373 2 65 1 67 1 84 1 28 1 315 1 159 1 
294 1 201 1 90 1 
294 1 201 1 90 1 
185 1 300 1 
185 1 201 1 300 1 
343 1 322 1 
354 1 99 1 102 2 246 1 208 2 134 1 165 1 79 1 5 1 327 1 293 1 295 1 84 1 114 1 116 1 232 2 33 1 340 1 341 1 373 1 343 1 62 2 322 1 241 1 288 1 158 2 159 1 
244 1 161 1 325 1 208 2 167 1 312 1 108 1 363 1 330 1 140 1 298 1 142 1 232 2 175 1 176 2 213 1 199 1 145 1 279 1 149 2 281 1 218 2 237 2 38 1 285 2 239 1 64 2 158 2 261 1 350 1 290 1 
206 1 96 1 132 1 355 1 149 2 358 1 123 1 150 1 218 2 37 1 39 1 64 2 330 1 259 1 41 2 261 1 263 1 351 1 198 1 
206 1 234 1 132 1 355 1 149 1 358 1 123 1 150 1 218 1 37 1 39 1 64 1 330 1 41 2 261 1 351 1 198 1 
244 1 149 1 105 1 150 1 281 1 218 1 127 1 64 1 111 1 330 1 259 1 172 1 261 1 375 1 
206 1 96 1 132 1 355 1 149 1 358 1 123 1 150 1 218 1 37 1 39 1 64 1 259 1 330 1 41 2 261 1 351 1 198 1 
63 1 
169 1 345 1 126 1 0 1 112 1 137 1 317 1 
337 1 266 1 340 1 137 2 228 1 327 1 169 1 59 1 126 1 110 1 272 1 286 1 155 1 347 1 43 1 317 1 44 1 
244 1 101 2 100 2 107 1 327 5 169 8 110 4 7 6 329 2 330 1 112 1 117 3 337 4 10 2 305 2 184 1 340 5 58 2 345 1 59 4 126 2 218 3 64 3 347 12 68 2 261 2 263 1 69 2 73 2 78 1 137 8 228 4 272 5 365 1 195 1 366 2 196 1 317 9 87 6 88 2 278 2 235 2 149 3 319 2 281 6 283 2 155 3 323 1 157 1 95 2 375 1 44 6 
131 1 69 2 73 2 100 2 137 5 107 1 228 2 327 1 250 1 6 1 169 5 7 5 110 2 272 1 317 8 337 2 87 5 86 1 369 1 88 1 318 1 54 1 340 1 319 2 59 2 61 1 283 2 126 2 155 1 347 6 66 1 68 1 19 1 95 2 44 3 
69 1 71 1 22 1 102 1 208 1 228 1 229 1 327 1 169 2 110 1 254 1 232 1 317 2 337 1 88 1 55 1 340 1 203 1 59 1 283 2 60 1 153 1 62 1 128 1 221 1 204 1 158 1 95 2 
337 1 137 1 228 1 169 1 59 1 345 1 110 1 126 1 112 1 317 1 
87 5 69 2 73 2 88 1 100 2 278 1 137 5 319 2 169 5 283 2 7 5 347 10 95 2 44 5 317 5 
327 1 126 1 272 1 155 1 137 1 340 1 
244 1 105 1 228 2 107 2 327 3 169 2 360 1 110 2 272 4 111 1 274 1 330 1 8 1 196 2 317 2 337 1 149 4 340 3 34 1 281 1 59 2 218 4 17 1 64 4 155 2 323 1 68 2 261 1 375 2 
244 1 161 1 22 2 102 2 208 2 312 1 252 1 330 1 298 1 140 1 194 1 365 1 142 1 116 1 232 3 199 1 257 1 149 1 282 1 281 1 237 1 218 1 38 1 62 2 239 1 285 2 64 1 221 1 40 1 158 3 375 1 261 1 
337 1 87 1 137 2 228 1 107 1 169 2 59 1 7 1 110 1 126 1 347 2 68 1 45 1 44 1 317 1 
33 1 197 1 341 1 
343 1 33 1 67 1 332 1 341 1 
33 1 197 1 341 1 
33 1 197 1 341 1 
33 1 76 1 341 1 
33 1 76 1 341 1 
33 1 76 1 341 1 
33 1 341 1 
84 1 5 1 
69 1 161 2 301 2 199 3 213 4 55 1 122 1 229 1 283 1 125 1 237 7 153 1 38 2 362 1 285 4 239 2 140 2 115 1 260 1 45 1 
69 1 301 1 199 2 0 1 213 3 55 1 122 1 229 1 283 1 153 1 237 5 115 1 260 1 45 1 
69 1 161 1 301 2 73 1 199 2 213 2 100 1 319 1 283 1 152 1 237 4 38 1 285 2 239 1 362 1 140 1 260 1 
69 1 86 1 131 1 301 2 73 1 199 4 213 3 100 1 54 2 319 1 283 1 237 7 362 1 364 1 260 1 
69 3 131 2 161 1 73 2 100 2 247 1 229 1 362 1 364 1 140 1 115 1 143 1 301 3 213 9 199 8 54 2 55 1 122 1 319 2 283 3 125 1 153 1 237 17 38 1 285 2 239 1 260 2 45 1 
237 1 199 1 54 1 
131 1 237 1 213 1 
161 1 69 1 301 3 73 1 199 3 213 3 100 1 278 1 319 1 283 1 152 1 237 6 38 1 239 1 285 2 362 1 140 1 260 2 
131 1 161 1 69 2 73 2 100 2 250 1 362 1 140 1 86 1 301 2 199 6 213 6 318 1 54 1 319 2 61 1 283 2 237 12 36 1 38 1 239 1 285 2 66 1 260 1 19 1 
69 1 301 2 213 3 199 3 55 1 229 1 283 1 237 6 153 1 362 1 260 1 
161 1 301 2 353 1 213 1 199 2 55 1 122 1 125 1 153 1 237 3 38 1 362 1 285 2 239 1 140 1 115 1 260 1 
161 1 69 2 301 5 213 5 199 5 55 2 229 1 203 1 283 2 36 1 153 2 237 10 38 1 239 1 285 2 362 2 140 1 260 3 
161 1 301 1 213 2 319 1 283 1 36 1 237 2 38 1 285 2 239 1 362 1 140 1 
69 1 161 1 301 2 73 1 199 2 213 2 100 1 319 1 283 1 36 1 237 4 38 1 285 2 239 1 362 1 140 1 260 1 
255 1 161 3 353 1 301 2 199 2 213 1 55 1 125 1 237 3 36 1 153 1 38 3 285 6 239 3 362 1 140 3 260 1 
161 4 131 3 69 3 73 2 100 2 229 1 362 2 140 4 115 1 255 1 86 1 301 4 199 10 213 11 54 3 303 1 55 1 122 1 215 1 306 1 319 2 125 1 283 3 153 1 152 1 36 1 237 21 38 4 239 4 285 8 260 2 45 1 
69 1 131 1 161 1 229 1 250 1 140 1 115 1 86 1 301 1 199 3 213 4 54 1 55 1 122 1 283 1 237 7 36 1 153 1 38 1 239 1 285 2 260 1 45 1 
69 1 161 2 131 1 100 1 229 1 250 1 362 1 364 1 140 2 115 1 86 1 301 2 199 4 213 6 54 2 55 1 122 1 319 1 283 2 153 1 237 10 36 1 152 1 38 2 239 2 285 4 260 1 45 1 
131 1 161 3 69 3 73 2 100 2 229 1 250 1 362 1 140 3 115 1 86 1 301 3 199 9 213 9 318 1 54 1 55 1 122 1 319 2 61 1 283 3 125 1 153 1 152 1 237 18 36 1 38 3 239 3 285 6 66 1 260 2 19 1 45 1 
131 1 161 3 69 2 73 1 100 2 229 1 250 1 362 2 140 3 115 1 86 1 301 4 199 6 213 10 318 1 54 1 55 1 122 1 319 2 125 1 61 1 283 3 153 1 152 1 237 16 36 1 38 3 239 3 285 6 66 1 260 2 19 1 45 1 
69 1 131 1 161 1 229 1 250 1 140 1 115 1 86 1 301 1 199 3 213 4 54 1 55 1 122 1 283 1 237 7 36 1 153 1 38 1 239 1 285 2 260 1 45 1 
131 1 161 1 69 2 73 2 100 2 250 1 362 1 140 1 86 1 301 2 199 6 213 6 318 1 54 1 319 2 61 1 283 2 237 12 36 1 38 1 239 1 285 2 66 1 260 1 19 1 
161 4 131 1 69 2 73 1 100 2 229 1 250 1 362 1 140 4 115 1 86 1 301 3 199 7 213 10 318 1 54 1 55 1 122 1 319 2 61 1 283 3 125 2 153 1 237 17 152 1 36 1 38 4 239 4 285 8 66 1 19 1 260 2 45 1 
161 4 131 1 69 2 73 2 100 3 250 1 362 3 140 4 255 1 86 1 301 6 199 7 213 9 318 1 54 1 319 3 61 1 283 3 125 2 237 16 36 1 38 4 239 4 285 8 66 1 19 1 260 3 
69 1 301 6 199 4 213 3 55 3 122 1 229 1 283 1 237 7 153 3 362 3 115 2 260 3 
161 4 131 1 69 2 73 1 100 2 229 1 250 1 362 1 140 4 115 1 255 1 86 1 301 3 199 7 213 10 318 1 54 1 55 1 122 1 319 2 61 1 283 3 125 2 153 1 237 17 36 1 38 4 239 4 285 8 66 1 19 1 260 2 45 1 
170 1 98 1 371 1 208 1 158 1 116 1 232 1 
98 1 371 1 208 1 326 1 25 1 170 1 296 1 331 1 158 1 116 1 187 1 232 1 
281 1 244 1 218 1 0 1 111 1 64 1 330 1 261 1 105 1 149 1 375 1 
244 1 102 1 208 1 149 1 281 1 282 1 218 1 271 1 62 1 64 1 330 1 365 1 194 1 158 2 116 1 261 1 375 1 232 2 
244 2 189 1 102 2 208 2 271 1 273 1 330 1 194 1 365 2 196 1 254 1 116 1 232 2 12 1 149 1 91 1 282 1 281 3 218 1 62 1 64 1 158 2 261 1 
97 1 244 2 189 1 102 2 208 2 164 1 271 1 273 1 330 1 365 2 196 1 254 1 116 1 232 2 12 1 149 2 91 1 282 1 281 3 218 2 62 1 64 2 158 2 261 1 
71 1 22 1 102 1 208 1 137 1 327 1 254 1 196 1 117 1 232 1 149 1 340 1 281 1 60 1 126 1 218 1 62 1 220 1 64 1 128 1 221 1 158 1 
71 1 22 1 102 1 208 1 137 1 327 1 254 1 196 1 117 1 232 1 305 1 149 1 340 1 281 1 60 1 126 1 218 1 62 1 64 1 128 1 221 1 158 1 
218 1 64 1 330 1 129 1 261 1 149 1 
175 1 244 2 176 1 191 1 149 5 320 1 192 1 281 3 218 6 321 1 64 6 330 2 49 1 365 1 157 1 375 2 261 3 263 1 351 1 51 1 
69 1 244 1 161 2 102 1 208 1 267 1 229 1 312 2 252 1 271 1 330 1 140 2 365 1 194 1 115 1 142 2 116 1 232 2 301 1 199 2 213 3 145 1 55 1 149 1 122 1 281 1 282 1 151 1 283 1 237 5 153 1 218 1 62 1 38 2 285 4 239 2 64 1 40 1 260 1 158 2 261 1 263 1 45 1 350 1 
354 1 101 1 137 1 228 2 327 3 169 1 110 2 272 2 329 1 112 1 366 1 117 1 317 1 337 2 305 1 149 1 340 3 235 1 58 1 281 2 345 1 59 2 126 1 218 1 64 1 155 1 323 1 375 1 
244 1 101 1 78 1 149 2 281 2 218 2 64 2 330 1 129 1 365 1 157 1 261 2 263 1 
97 1 244 1 149 4 105 1 281 1 218 4 64 4 111 1 330 1 261 1 375 1 336 1 263 1 
244 1 225 1 191 1 357 1 149 2 281 1 218 2 64 2 330 1 365 1 196 1 289 1 261 2 51 1 
206 1 218 1 132 1 39 1 64 1 330 1 41 1 261 1 149 1 375 1 
281 1 244 1 175 1 218 2 325 1 64 2 330 1 261 1 149 2 263 1 351 1 
175 1 244 2 105 1 149 4 320 1 192 1 281 3 218 5 111 1 64 5 330 2 196 1 375 1 261 2 336 1 263 1 
175 1 244 2 370 1 105 1 149 4 320 1 281 3 218 5 111 1 64 5 330 2 196 1 375 1 261 2 336 1 263 1 
244 1 102 1 208 1 164 1 149 1 281 1 282 1 218 1 271 1 62 1 64 1 330 1 365 1 158 2 116 1 261 1 375 1 232 2 
244 1 191 1 149 1 281 1 218 1 64 1 330 1 49 1 365 1 157 1 196 1 261 2 51 1 
248 1 243 1 116 1 292 1 186 1 
354 1 162 1 248 2 137 1 292 1 340 2 14 1 91 1 58 1 327 2 126 1 211 1 273 1 18 1 254 1 243 2 50 1 116 1 186 2 
208 1 279 1 167 1 292 1 108 1 243 1 158 1 186 1 232 1 
18 1 292 1 14 1 
233 1 0 1 200 1 26 1 
233 1 368 1 124 1 74 1 339 1 200 1 26 1 
217 1 31 1 74 1 
368 1 233 1 53 1 339 3 74 3 200 1 226 1 227 1 57 1 26 1 124 1 308 2 
233 1 368 1 124 1 74 2 339 2 268 1 200 1 205 1 26 1 
368 1 206 1 53 1 72 1 339 1 74 1 358 1 26 1 124 1 16 1 41 1 
368 1 124 1 53 1 74 1 339 1 200 1 26 1 
233 1 368 1 124 1 53 1 74 1 339 1 200 2 
368 2 53 1 177 1 339 2 74 2 200 1 26 1 124 2 314 1 113 1 
233 1 368 1 53 1 224 1 72 1 339 3 74 3 200 1 75 1 26 2 124 1 359 1 205 2 
233 1 368 1 206 1 53 1 132 1 339 2 74 2 245 1 200 1 358 1 26 1 123 1 124 1 41 2 205 1 
233 1 368 2 53 1 72 1 339 4 74 4 268 1 200 1 75 1 24 1 26 2 124 2 205 2 
233 1 368 1 124 1 53 1 74 1 339 1 200 1 26 1 
233 2 368 1 72 1 339 4 74 4 200 2 75 1 226 1 227 1 26 3 124 1 240 1 205 2 308 1 
233 1 138 1 368 1 124 1 53 1 47 1 74 2 339 2 200 1 205 1 367 1 26 1 
233 1 368 1 124 1 53 1 74 3 339 3 200 1 166 1 308 2 226 2 227 1 26 1 
284 2 253 1 376 1 26 2 
368 1 124 1 53 1 74 1 339 1 104 1 
233 1 368 1 359 1 124 1 53 1 74 2 339 2 200 1 205 1 26 1 
207 1 
233 1 368 1 124 1 53 1 74 1 339 1 200 1 26 1 
233 1 368 1 359 1 124 1 53 1 74 3 339 3 200 1 205 1 308 1 26 1 
72 1 240 1 75 1 26 1 
200 1 26 1 

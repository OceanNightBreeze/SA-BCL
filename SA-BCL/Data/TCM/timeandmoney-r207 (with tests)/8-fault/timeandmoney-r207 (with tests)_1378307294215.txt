#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 320 (93,200,349) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 113 16 226 2 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 255 238 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 138 328 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 86 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 148 195 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration; | RETURN | 1684 | return null
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONSTANT | 1198 | 0 -> 1
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2311 | stmt -> ;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration; | RETURN | 3400 | return null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | STATEMENT | 5650 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11444 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 906 | stmt -> ;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 821 | < -> !=
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
68 1 300 1 325 1 50 1 124 1 126 1 34 5 329 2 235 2 190 1 74 1 107 1 217 6 287 1 57 9 56 9 134 1 137 2 60 2 362 4 363 1 249 2 145 1 275 1 254 1 366 2 207 2 368 3 
68 1 300 1 325 1 50 1 124 1 126 1 34 5 235 2 329 2 190 1 74 1 107 1 217 6 287 1 57 9 56 9 134 1 137 2 60 2 362 4 363 1 249 2 145 1 275 1 254 1 366 2 207 2 368 3 
68 1 300 1 325 1 50 1 124 1 126 1 34 6 235 2 329 2 190 1 74 1 107 1 217 7 287 1 57 10 56 10 134 1 137 2 60 2 362 5 363 1 249 2 145 1 275 1 254 1 366 2 207 2 368 4 
68 1 300 1 325 1 50 1 124 1 34 4 235 2 329 1 190 1 74 1 107 1 217 4 287 1 57 7 56 7 134 1 137 2 60 2 362 3 363 1 249 2 145 1 275 1 254 1 366 2 207 2 368 2 
56 4 57 4 134 1 137 1 325 1 126 1 362 2 34 3 235 1 329 2 363 1 249 1 74 1 145 1 366 1 207 1 368 1 217 3 
287 1 56 2 57 2 68 1 137 1 325 1 34 1 60 1 235 1 363 1 74 1 308 1 163 1 366 1 207 1 367 1 
56 3 57 3 300 1 325 1 60 1 362 1 34 2 235 2 363 1 74 1 366 2 368 1 217 1 
300 1 325 1 34 5 126 1 235 2 329 2 74 1 107 1 217 7 57 9 56 9 134 1 137 1 179 1 362 4 60 1 363 1 249 1 145 1 274 1 275 1 366 2 207 1 368 3 
300 1 325 1 34 5 126 1 235 2 329 2 74 1 107 1 217 7 57 9 56 9 134 1 137 1 179 1 362 4 60 1 363 1 249 1 145 1 274 1 275 1 366 2 207 1 368 3 
13 1 307 1 296 1 
113 2 13 1 40 1 
142 1 340 2 208 2 136 1 225 2 246 2 29 2 167 2 
25 1 208 2 120 1 212 2 70 1 29 2 262 1 128 1 173 2 267 2 79 1 285 1 132 1 55 2 244 1 290 2 136 1 359 1 160 1 246 3 219 1 220 1 182 1 221 1 142 1 340 3 43 1 143 1 293 1 250 1 222 1 224 1 225 2 44 1 62 1 66 1 167 2 
119 1 340 1 208 1 210 1 136 1 225 1 246 1 29 1 167 1 241 1 
280 1 13 1 336 1 337 1 115 1 29 1 246 1 85 1 125 1 340 1 129 1 296 1 36 1 241 1 
208 1 280 1 13 1 337 1 115 2 29 1 246 1 125 2 340 1 129 1 225 1 296 1 36 1 167 1 241 1 
229 1 125 1 47 1 115 1 260 1 
229 1 46 1 125 2 47 1 13 1 103 1 296 1 115 2 
229 1 125 1 115 1 
119 1 47 1 208 1 210 1 136 1 115 1 29 1 246 1 339 1 125 1 340 1 225 1 167 1 241 1 
13 1 
229 1 46 1 125 2 47 1 323 1 13 1 296 1 115 2 
46 1 229 2 47 2 356 1 194 1 49 2 13 1 271 1 15 1 115 5 125 5 302 2 282 1 215 1 172 1 296 1 64 2 131 1 297 1 
55 1 208 1 98 1 29 1 246 2 220 1 262 1 182 1 340 2 143 1 128 1 222 1 250 1 318 1 224 1 225 1 44 1 206 1 173 1 267 1 
142 1 307 1 
208 1 155 1 48 1 29 2 246 2 340 2 142 2 225 1 167 1 
257 1 111 1 318 1 
55 1 211 1 246 1 220 1 262 1 182 1 142 1 340 1 143 1 128 1 250 1 222 1 224 1 44 1 173 1 267 1 
208 4 48 1 336 1 348 1 98 2 29 5 246 5 340 5 142 1 341 1 225 4 206 1 240 1 167 1 
119 1 340 2 208 2 144 1 225 2 246 2 29 2 241 1 
142 1 340 3 208 3 225 3 98 1 246 3 29 3 167 1 
119 1 340 1 208 1 225 1 246 1 29 1 241 1 
340 1 208 1 155 1 48 1 225 1 246 1 29 1 167 1 241 1 
208 3 120 1 48 1 280 1 212 2 70 1 29 3 98 1 262 1 125 1 128 1 129 1 36 1 173 1 267 1 241 1 79 1 285 1 132 1 55 1 244 1 58 1 290 1 136 1 337 1 115 1 359 1 160 1 246 4 220 1 182 1 142 1 340 4 43 1 143 1 293 1 222 1 250 1 224 1 225 3 44 1 206 1 166 1 167 2 
142 1 340 2 208 1 336 1 225 1 246 2 29 2 98 1 240 1 
208 3 48 1 209 1 280 1 13 1 337 1 115 1 98 2 29 3 246 3 125 1 340 3 129 1 225 3 36 1 206 1 167 1 166 1 241 1 
257 1 208 2 48 1 98 1 29 2 246 2 340 2 318 1 225 2 167 1 
55 1 246 1 220 1 262 1 182 1 142 1 340 1 143 1 128 1 250 1 222 1 224 1 44 1 173 1 267 1 
55 1 246 1 220 1 262 1 142 1 340 1 143 1 128 1 213 1 222 1 224 1 273 1 44 1 173 1 267 1 
257 2 111 2 168 1 1 1 244 1 37 1 120 1 290 3 122 1 358 1 70 1 212 2 160 1 359 1 99 1 180 1 198 1 221 2 43 1 202 1 318 2 79 1 255 1 
340 1 208 1 280 1 225 1 144 1 246 1 29 1 241 1 
38 1 349 1 
38 1 349 1 
200 1 320 1 
200 1 320 1 
200 1 320 1 
7 1 38 1 349 1 
93 1 38 1 349 1 
200 1 38 1 320 1 349 1 
7 1 38 1 349 1 
7 1 38 1 349 1 
38 1 324 1 349 1 
38 1 324 1 349 1 
38 1 324 1 349 1 
208 2 93 1 230 1 29 2 100 1 349 1 125 1 189 1 73 1 10 1 309 1 311 1 112 1 38 1 312 1 157 1 115 1 246 2 142 1 340 2 314 1 225 2 277 1 256 1 
38 2 322 1 230 2 39 2 114 1 13 1 357 1 115 2 100 2 84 1 349 2 248 1 125 2 73 3 264 1 10 1 309 2 276 1 277 2 
249 1 137 1 207 1 
137 1 207 1 367 1 
35 1 249 2 201 1 137 3 232 1 367 1 
35 1 249 1 137 2 232 1 176 1 367 1 
35 1 249 1 137 2 232 2 367 1 
229 1 46 1 47 4 26 1 49 1 302 1 125 5 189 1 238 1 330 1 76 1 354 1 283 1 131 2 112 1 113 3 194 2 312 1 13 2 40 1 15 1 358 1 196 2 115 5 20 2 202 1 23 1 296 1 45 2 64 1 255 1 
229 6 46 1 0 1 47 7 49 2 260 5 125 9 302 2 236 5 238 3 51 1 352 1 330 2 215 1 283 2 131 5 113 9 218 1 194 6 312 4 13 5 40 3 15 1 358 3 115 9 20 6 162 1 202 3 23 1 296 1 45 6 64 2 117 1 255 3 
47 2 26 1 49 1 302 1 125 3 238 1 330 1 76 1 215 1 283 1 131 2 113 4 312 1 194 2 13 3 40 2 196 1 358 1 115 3 20 2 202 1 296 1 45 2 64 1 255 1 
47 3 26 1 49 1 302 1 125 4 238 2 51 1 352 1 330 1 76 1 215 1 283 1 131 3 113 7 312 2 194 4 13 4 40 3 196 2 358 2 115 4 20 4 202 2 296 1 45 4 64 1 117 1 255 2 
269 1 307 1 262 1 
262 1 291 1 
183 1 
143 1 128 1 262 1 
69 1 262 1 
143 1 262 1 
143 1 269 2 128 1 6 1 262 3 361 1 
259 2 244 3 37 3 121 1 290 7 358 1 3 1 97 1 59 1 263 1 198 2 221 4 350 1 150 1 239 1 284 1 216 1 
259 2 244 3 37 3 121 1 290 7 358 1 3 1 97 1 59 1 263 1 198 2 221 4 350 1 150 1 239 1 284 1 216 1 
259 2 244 3 37 3 121 1 290 7 358 1 3 1 97 1 59 1 83 1 263 1 198 2 221 4 350 1 150 1 239 1 284 1 216 1 
221 1 259 1 121 1 306 1 290 1 150 1 97 2 
259 2 120 2 3 1 212 4 70 2 97 1 327 1 263 1 350 1 150 1 239 1 284 1 216 1 79 2 244 4 37 4 290 9 358 1 59 1 359 2 198 3 221 5 321 1 298 1 
325 1 32 1 34 1 235 1 305 1 74 1 173 1 105 1 267 1 217 1 55 1 153 1 81 1 57 2 56 2 156 1 137 2 139 1 220 1 60 1 363 1 249 1 201 1 204 1 222 1 253 1 227 1 366 1 207 1 367 1 
325 1 32 1 34 1 235 1 305 1 173 1 105 1 267 1 217 2 55 1 153 1 81 1 57 3 56 3 137 2 220 1 60 1 184 1 363 1 292 1 249 1 201 1 204 1 222 1 253 1 227 1 366 1 207 1 228 1 367 1 
325 1 32 1 34 1 305 1 173 1 105 1 267 1 217 2 55 1 81 1 57 2 56 2 137 2 220 1 60 1 184 1 363 1 292 1 201 1 249 1 204 1 222 1 227 1 207 1 367 1 
55 1 56 1 57 1 288 1 220 1 262 1 30 1 32 2 72 1 60 2 235 1 143 1 305 2 222 1 224 1 116 1 332 1 173 1 227 2 165 1 366 1 267 1 228 1 
32 1 235 1 305 1 74 1 173 1 105 1 267 1 55 1 153 1 81 1 57 1 56 1 156 1 137 2 220 1 60 1 292 1 249 1 201 1 204 1 222 1 253 1 227 1 366 1 207 1 367 1 
353 1 
46 3 229 6 49 1 280 1 188 1 283 1 109 2 242 1 241 1 55 2 113 2 288 1 335 1 194 2 13 2 15 1 336 1 337 1 16 1 115 5 246 1 338 1 18 1 17 1 340 1 342 1 296 1 165 1 64 1 118 1 171 2 123 1 29 1 261 2 262 1 33 2 125 5 302 1 304 2 129 1 173 2 36 1 267 2 131 2 174 1 40 2 140 1 220 1 85 1 181 4 143 1 223 2 222 1 224 2 90 2 
118 1 229 2 46 1 280 1 323 1 29 1 123 1 125 3 304 1 129 1 36 1 241 1 337 1 336 1 115 3 246 1 140 1 338 1 18 1 85 1 181 2 340 1 
229 1 118 1 46 1 280 1 323 1 29 1 123 1 171 1 125 3 129 1 36 1 241 1 13 1 337 1 336 1 115 3 246 1 140 1 338 1 18 1 85 1 181 3 340 1 296 1 
46 1 118 1 229 2 323 1 280 1 29 1 123 1 171 1 261 1 125 3 304 1 129 1 36 1 241 1 13 1 337 1 336 1 115 3 246 1 140 1 338 1 18 1 85 1 181 3 340 1 296 1 
118 1 229 7 46 3 186 1 49 1 323 1 280 1 171 4 29 1 123 1 261 4 33 2 302 1 125 5 304 4 129 1 54 1 36 1 109 2 131 1 241 1 335 1 194 1 13 5 40 2 15 1 336 1 337 1 16 1 115 5 246 1 140 1 338 1 247 1 18 1 85 1 181 6 340 1 223 2 296 5 226 1 90 2 64 1 344 1 
46 2 229 4 280 1 49 1 109 2 241 1 242 1 113 2 335 1 194 1 13 2 337 1 336 1 15 1 115 4 16 1 246 1 338 1 18 1 340 1 296 1 64 1 118 1 29 1 123 1 171 2 261 2 33 2 125 4 302 1 304 2 129 1 36 1 131 1 40 2 140 1 181 4 85 1 223 2 90 2 
229 4 46 2 118 1 280 1 49 1 171 2 29 1 123 1 261 2 33 2 302 1 125 4 304 2 129 1 36 1 109 2 131 1 241 1 335 1 194 1 13 1 40 2 337 1 336 1 15 1 16 1 115 4 246 1 140 1 338 1 247 1 18 1 85 1 181 4 340 1 223 2 296 1 226 1 90 2 344 1 64 1 
229 4 46 2 118 1 280 1 49 1 171 2 29 1 123 1 261 2 33 2 302 1 125 4 304 2 129 1 36 1 109 2 131 1 241 1 335 1 194 1 13 1 40 2 337 1 336 1 15 1 16 1 115 4 246 1 140 1 338 1 247 1 18 1 85 1 181 4 340 1 223 2 296 1 226 1 90 2 344 1 64 1 
118 1 280 1 49 1 2 1 29 1 123 1 33 1 302 1 125 2 129 1 36 1 109 1 131 1 241 1 113 1 194 1 175 1 337 1 336 1 15 1 16 1 115 2 246 1 140 1 338 1 18 1 85 1 181 2 340 1 226 1 164 1 365 1 64 1 
46 2 118 1 229 5 49 1 280 1 29 1 123 1 171 3 261 3 33 2 302 1 125 4 304 3 129 1 36 1 54 1 109 2 131 1 241 1 335 1 194 1 13 1 40 2 15 1 337 1 336 1 16 1 115 4 246 1 140 1 338 1 247 1 18 1 85 1 181 5 340 1 223 2 296 1 226 1 90 2 64 1 344 1 
46 2 118 1 229 5 49 1 280 1 29 1 123 1 171 3 261 3 33 2 302 1 125 4 304 3 129 1 36 1 54 1 109 2 131 1 241 1 335 1 194 1 13 1 40 2 15 1 337 1 336 1 16 1 115 4 246 1 140 1 338 1 247 1 18 1 85 1 181 5 340 1 223 2 296 1 226 1 90 2 64 1 344 1 
46 2 229 4 280 1 49 1 187 2 109 2 241 1 242 1 113 2 194 1 13 1 337 1 336 1 15 1 115 4 16 1 246 1 338 1 18 1 340 1 296 1 164 1 64 1 118 1 29 1 123 1 171 2 261 2 33 2 125 4 302 1 304 2 129 1 36 1 131 1 175 2 140 1 181 4 85 1 
257 1 259 1 120 1 212 2 70 1 263 1 350 1 307 1 239 1 284 1 216 1 79 1 111 1 244 3 37 2 290 6 358 1 59 1 359 1 160 1 180 1 198 2 221 3 142 2 43 1 318 1 
257 4 120 2 3 1 212 4 70 2 71 1 101 1 238 2 214 1 331 1 78 1 53 1 151 3 79 2 111 11 244 5 37 2 290 13 14 3 358 2 359 2 160 1 198 1 142 1 221 8 43 2 364 1 202 2 293 1 318 11 66 1 255 1 
257 1 208 1 120 1 211 1 95 1 70 1 212 2 29 1 98 1 262 1 101 1 128 1 173 1 267 1 79 1 55 1 244 1 290 2 41 1 359 1 160 1 246 2 220 1 182 1 142 1 340 2 221 1 143 1 43 1 222 1 250 1 293 1 224 1 225 1 44 1 206 1 24 1 66 1 
3 4 98 1 101 1 238 2 239 1 284 1 285 2 55 3 111 7 244 8 290 18 59 1 246 3 160 3 19 2 198 4 340 3 292 1 199 1 202 2 293 1 250 2 206 1 66 1 255 2 257 7 259 1 208 1 120 3 170 1 212 6 70 3 29 1 262 2 263 1 351 1 350 1 127 2 265 2 128 2 173 3 216 1 267 3 79 3 37 8 358 3 359 3 220 2 182 2 142 2 221 10 43 3 143 2 222 2 185 2 224 1 318 7 225 1 44 2 
25 2 208 1 120 2 212 4 70 2 29 1 98 1 262 3 233 1 173 7 106 1 267 8 79 2 55 8 244 1 288 1 290 2 197 1 139 1 82 1 246 1 359 2 160 2 220 2 141 1 180 1 340 1 221 1 292 1 43 2 143 2 222 2 293 1 205 1 224 2 225 1 148 1 165 1 66 1 
257 1 208 1 48 1 120 1 212 2 70 1 29 1 101 1 238 1 79 1 111 1 244 1 37 1 245 1 290 2 358 1 359 1 160 1 246 1 198 1 340 1 221 1 43 1 202 1 318 1 225 1 167 1 255 1 
257 1 111 1 37 1 120 1 290 2 3 1 358 1 70 1 212 2 160 1 359 1 99 1 180 1 221 2 43 1 202 1 318 1 79 1 
257 1 111 1 244 1 37 1 120 1 290 1 122 1 70 1 212 2 160 1 359 1 180 1 198 1 43 1 318 1 79 1 255 1 
257 2 120 1 3 1 212 2 70 1 238 1 79 1 111 2 244 1 37 2 290 3 358 1 359 1 160 1 180 1 198 1 221 2 43 1 202 1 318 2 255 1 
257 1 111 1 37 1 120 1 290 2 3 1 82 1 358 1 70 1 212 2 160 1 359 1 99 1 221 2 43 1 202 1 318 1 79 1 
257 1 111 1 244 1 37 1 120 1 290 1 122 1 82 1 70 1 212 2 160 1 359 1 198 1 43 1 318 1 79 1 255 1 
257 2 120 1 3 1 212 2 70 1 238 1 79 1 111 2 244 1 37 2 290 3 358 1 82 1 359 1 160 1 198 1 221 2 43 1 202 1 318 2 255 1 
257 2 111 2 244 1 37 2 120 1 290 3 3 1 358 1 70 1 212 2 160 1 359 1 198 1 221 2 43 1 238 1 202 1 318 2 255 1 79 1 
120 1 70 1 212 2 262 1 128 1 173 1 267 1 285 1 79 1 55 1 244 1 290 2 246 1 160 1 359 1 220 1 182 1 221 1 142 1 340 1 143 1 43 1 222 1 250 1 293 1 224 1 44 1 66 1 
120 1 347 1 70 1 212 2 262 1 128 1 213 1 173 1 267 1 79 1 55 1 244 1 290 2 246 1 160 1 359 1 220 1 221 1 142 1 340 1 143 1 43 1 222 1 293 1 224 1 273 1 44 1 66 1 
257 2 120 1 3 1 212 2 70 1 101 1 238 1 79 1 111 2 244 1 37 2 290 3 358 1 359 1 160 1 198 1 221 2 43 1 202 1 318 2 255 1 
257 2 120 1 3 1 70 1 212 2 262 1 238 1 128 1 265 1 173 1 267 1 285 1 79 1 111 2 55 1 244 1 37 2 290 3 358 1 139 1 246 1 160 1 359 1 220 1 198 1 182 1 221 2 340 1 143 1 43 1 202 1 222 1 250 1 318 2 44 1 255 1 
257 1 208 1 48 1 120 1 212 2 70 1 29 1 101 1 238 1 79 1 111 1 244 1 290 3 358 1 359 1 160 1 246 1 340 1 221 2 43 1 317 1 202 1 318 1 225 1 167 1 255 1 
258 1 120 3 3 3 212 6 70 3 4 1 301 1 327 1 328 1 238 4 77 2 214 3 191 1 192 3 151 4 79 3 268 1 244 13 37 5 290 28 14 3 138 1 358 4 359 3 178 1 313 1 198 2 21 1 221 15 87 1 364 1 202 4 61 1 147 1 321 1 255 4 
258 1 120 4 3 3 212 8 70 4 4 1 301 1 327 2 328 1 238 4 77 2 214 3 191 1 192 4 151 4 79 4 268 1 244 13 37 6 290 30 14 3 138 1 358 4 359 4 178 1 313 1 198 3 21 1 221 17 87 1 364 1 202 4 61 1 147 1 321 1 255 3 
259 1 258 1 120 2 3 6 212 4 70 2 301 1 263 1 327 1 328 1 350 1 238 6 77 1 214 2 239 1 78 2 191 1 284 1 192 3 216 1 151 4 79 2 268 1 244 16 37 12 290 40 14 4 138 1 358 7 59 1 359 2 178 1 198 6 21 1 221 24 87 1 364 2 202 6 61 1 147 1 321 1 255 6 
169 1 120 2 3 3 212 4 70 2 4 1 328 1 238 3 77 1 214 1 191 1 192 2 151 2 79 2 244 7 37 6 290 16 14 1 138 2 358 3 359 2 178 1 198 3 221 9 364 1 202 3 147 1 321 1 255 3 
258 1 120 3 3 1 212 6 70 3 301 1 327 2 328 1 238 3 77 2 214 2 191 1 192 3 151 2 79 3 268 1 244 9 37 2 290 22 14 2 138 1 358 3 359 3 178 1 198 1 21 1 221 13 87 1 202 3 61 1 147 2 321 1 255 2 
25 2 27 1 120 1 70 1 212 2 29 2 262 1 101 1 310 1 173 2 267 2 286 1 79 1 55 2 244 1 290 2 359 1 160 1 246 2 220 1 141 1 340 2 221 1 143 1 43 1 222 1 293 1 89 1 148 1 66 1 91 1 
55 2 243 1 81 1 137 2 139 1 220 1 31 1 234 1 292 1 249 1 201 1 222 1 253 1 173 2 105 1 227 1 267 2 207 1 367 1 
55 1 81 1 137 2 220 1 31 1 292 1 249 1 201 1 222 1 253 1 173 1 105 1 227 1 267 1 65 1 207 1 367 1 
55 1 288 1 270 1 220 1 262 1 72 1 234 1 143 1 222 1 224 1 173 1 227 1 267 1 165 1 
55 1 243 1 81 1 137 2 220 1 31 1 234 1 292 1 249 1 201 1 222 1 253 1 173 1 105 1 227 1 267 1 207 1 367 1 
22 1 
194 1 13 1 307 1 282 1 296 1 131 1 297 1 
46 1 229 1 49 1 302 1 125 1 131 1 113 1 335 1 194 1 13 2 40 1 15 1 115 1 223 1 296 1 64 1 90 1 
229 5 46 3 49 4 6 1 188 1 238 2 237 2 282 1 283 2 104 1 11 1 334 1 55 2 193 2 113 12 194 8 13 8 15 4 158 2 115 5 291 3 20 6 202 2 203 2 296 2 64 4 297 1 255 2 262 6 302 4 125 5 128 1 173 2 36 2 267 2 131 7 355 2 269 2 40 6 139 1 358 2 220 2 42 2 86 1 315 1 143 1 316 2 222 1 185 2 224 1 45 6 
229 1 46 1 258 1 49 2 301 1 125 1 302 2 238 2 237 1 214 1 151 1 131 5 268 1 113 6 194 4 135 1 13 4 14 1 15 2 40 3 358 2 115 1 20 5 21 1 202 2 61 1 296 1 45 5 64 2 255 2 
119 1 208 1 49 1 210 1 29 1 302 1 125 1 350 1 237 2 239 1 284 1 216 1 241 1 131 2 194 2 136 1 15 1 358 2 115 1 246 1 247 1 339 1 340 1 203 1 225 1 146 1 64 1 167 1 
49 1 194 1 13 1 15 1 302 1 282 1 296 1 64 1 131 1 297 1 
113 10 194 5 13 5 40 5 358 2 20 5 238 2 237 2 203 1 202 2 185 1 45 5 131 3 255 2 
125 1 229 1 46 1 13 1 296 1 115 1 
229 2 46 1 49 2 262 1 302 2 188 1 125 2 215 1 283 1 173 2 267 2 11 1 131 1 152 1 55 2 174 1 288 1 194 1 15 1 115 2 220 1 143 1 315 1 222 1 342 1 224 2 64 2 165 1 
208 2 120 1 212 2 70 1 29 2 262 1 128 1 173 1 267 1 79 1 285 1 55 1 132 1 244 1 290 1 136 1 246 3 160 1 359 1 220 1 182 1 142 1 340 3 143 1 43 1 293 1 250 1 222 1 224 1 225 2 44 1 167 2 
259 1 113 4 194 2 49 1 13 4 40 2 15 1 20 2 302 1 188 1 283 1 296 2 45 2 64 1 131 1 
230 1 159 1 277 1 
230 1 357 1 326 1 277 1 256 1 
230 1 159 1 277 1 
230 1 159 1 277 1 
230 1 277 1 110 1 
230 1 277 1 110 1 
230 1 277 1 110 1 
230 1 277 1 
38 1 349 1 
259 1 244 4 37 2 120 1 290 8 14 1 358 1 59 1 70 1 212 2 359 1 301 1 263 1 198 2 221 4 350 1 214 1 239 1 284 1 216 1 151 1 321 1 79 1 
259 1 120 2 94 1 3 1 212 4 70 2 301 1 263 1 350 1 238 1 214 1 239 1 284 1 216 1 151 2 79 2 244 5 37 3 290 11 14 1 358 2 59 1 359 2 198 2 221 6 364 1 202 1 321 1 
258 1 120 3 94 1 3 1 212 6 70 3 301 1 327 1 238 2 214 1 151 1 79 3 268 1 244 5 37 2 14 1 290 11 358 2 359 3 198 1 221 6 21 1 202 2 61 1 321 1 255 2 
258 1 120 3 94 1 3 1 212 6 70 3 301 1 327 1 238 2 214 1 151 1 79 3 268 1 244 3 37 2 14 1 290 10 358 2 359 3 198 1 221 7 21 1 202 2 61 1 321 1 255 1 
259 1 244 4 37 2 120 1 290 8 14 1 358 1 59 1 70 1 212 2 359 1 301 1 263 1 198 2 221 4 350 1 214 1 239 1 284 1 216 1 151 1 321 1 79 1 
258 1 120 1 3 1 212 2 70 1 301 1 238 2 214 1 151 1 79 1 268 1 244 4 37 2 14 1 290 10 358 2 359 1 198 1 221 6 21 1 202 2 61 1 321 1 255 2 
258 1 120 4 94 1 3 1 212 8 70 4 301 1 327 2 238 2 214 1 151 1 79 4 268 1 244 4 37 2 290 11 14 1 358 2 359 4 198 1 21 1 221 7 202 2 61 1 321 1 255 1 
258 1 120 4 3 2 212 8 70 4 301 1 4 1 327 2 238 2 214 1 151 1 79 4 268 1 244 4 37 4 290 11 14 1 358 2 359 4 198 2 21 1 221 7 202 2 61 1 321 1 255 1 
244 4 37 6 290 7 3 3 358 1 59 1 263 2 198 3 221 3 350 1 239 1 284 3 216 3 
258 1 120 4 3 1 212 8 70 4 301 1 4 1 327 2 238 2 214 1 151 1 79 4 268 1 244 4 37 2 290 11 14 1 358 2 359 4 198 1 21 1 221 7 202 2 61 1 321 1 255 1 
259 1 244 4 37 3 120 2 290 8 358 1 3 1 70 2 212 4 59 1 359 2 327 1 263 1 198 2 221 4 350 1 239 1 284 1 216 1 79 2 
259 1 244 3 37 2 290 6 358 1 59 1 263 1 198 2 221 3 350 1 307 1 239 1 284 1 216 1 
244 1 37 2 120 1 94 1 290 3 358 1 3 1 70 1 212 2 359 1 198 1 221 2 238 1 202 1 255 1 79 1 
198 1 221 3 244 3 37 2 238 1 202 1 364 1 14 1 290 6 3 1 358 1 214 1 151 2 255 1 
259 1 120 2 3 4 70 2 212 4 263 1 327 2 350 1 238 2 266 1 239 1 53 1 78 1 284 2 216 2 151 2 79 2 244 10 37 9 14 2 290 21 358 3 59 1 359 2 198 5 221 11 202 2 364 1 255 2 
244 1 290 1 151 1 
221 1 290 1 14 1 
244 2 37 3 120 1 94 1 290 5 358 1 3 1 212 2 70 1 359 1 198 2 221 3 238 1 202 1 185 1 79 1 255 1 
258 1 120 1 3 1 212 2 70 1 301 1 238 2 214 1 151 1 79 1 268 1 244 4 37 2 14 1 290 10 358 2 359 1 198 1 221 6 21 1 202 2 61 1 321 1 255 2 
244 3 37 2 290 6 358 1 3 1 198 1 221 3 350 1 239 1 284 1 216 1 
244 2 37 2 120 1 290 3 3 1 70 1 212 2 59 1 359 1 263 1 327 1 198 1 221 1 266 1 284 1 216 1 79 1 
244 5 37 5 120 1 290 10 3 2 358 2 212 2 70 1 359 1 198 3 221 5 350 2 239 1 146 1 284 2 216 2 321 1 79 1 
37 1 120 1 290 2 358 1 3 1 70 1 212 2 359 1 221 2 202 1 321 1 79 1 
244 1 37 2 120 1 290 3 358 1 3 1 70 1 212 2 359 1 198 1 221 2 238 1 202 1 321 1 255 1 79 1 
244 2 37 2 120 3 290 3 3 1 70 3 212 6 4 1 359 3 327 1 198 1 221 1 266 1 284 1 216 1 321 1 79 3 
259 1 120 5 94 1 3 5 212 10 70 5 4 1 263 1 327 2 149 1 350 2 238 3 266 1 214 1 239 2 284 3 216 3 151 4 79 5 244 15 37 12 290 31 14 3 358 5 59 1 359 5 198 7 221 16 364 1 202 3 294 1 295 1 321 1 255 3 
142 1 340 1 279 1 336 1 246 1 29 1 240 1 
133 1 279 1 336 1 29 1 246 1 142 1 340 1 281 1 333 1 319 1 240 1 92 1 
55 1 143 1 288 1 222 1 307 1 224 1 173 1 220 1 165 1 267 1 262 1 
55 1 208 1 98 1 29 1 246 2 220 1 262 1 142 1 340 2 143 1 128 1 250 1 222 1 224 1 225 1 44 1 173 1 267 1 
340 1 208 1 225 1 246 1 29 1 98 1 11 1 
340 1 208 1 225 1 246 1 29 1 98 1 11 1 
125 1 115 1 11 1 
125 1 115 1 11 1 
55 1 222 1 173 1 220 1 267 1 233 1 
25 1 55 7 231 1 197 1 139 1 5 1 6 1 220 3 262 3 233 1 292 1 143 2 128 1 222 2 205 1 224 2 173 6 148 1 106 1 63 1 267 7 
257 1 259 1 208 1 120 2 70 2 212 4 29 1 98 1 262 1 263 1 101 1 350 1 127 1 128 1 265 1 239 1 284 1 173 1 216 1 267 1 286 1 79 2 285 1 111 1 55 1 244 3 37 2 290 6 358 1 139 1 59 1 359 2 160 2 246 2 220 1 198 2 182 1 142 2 221 3 340 2 143 1 43 2 222 1 250 1 318 1 225 1 44 1 
229 2 46 1 47 1 49 2 262 2 302 2 125 3 282 1 173 1 36 1 267 1 131 1 55 1 193 1 355 1 269 1 194 1 13 1 15 2 115 3 42 1 291 1 315 1 316 1 224 1 296 1 64 2 297 1 
55 2 269 1 139 1 6 1 220 2 262 2 233 1 143 1 128 1 222 1 173 2 104 1 267 2 
55 4 288 1 139 1 220 1 262 1 143 1 102 1 222 1 224 1 52 1 173 4 267 4 165 1 
55 1 231 1 177 1 220 2 262 1 272 1 351 1 143 1 128 1 222 1 173 1 63 1 267 1 11 1 
55 1 222 1 137 1 224 1 105 1 173 1 220 1 267 1 207 1 367 1 
55 2 143 1 27 1 292 1 222 1 139 1 173 2 148 1 220 1 267 2 262 1 
55 4 288 1 139 1 197 1 220 2 262 3 143 2 222 2 205 1 224 1 52 1 173 3 148 1 165 1 267 4 11 1 
55 4 288 1 195 1 139 1 197 1 220 2 262 3 143 2 222 2 224 1 52 1 173 3 148 1 165 1 267 4 11 1 
55 1 208 1 98 1 29 1 246 2 220 1 262 1 142 1 340 2 143 1 128 1 222 1 224 1 225 1 273 1 44 1 173 1 267 1 
11 1 
142 1 278 1 289 1 108 1 345 1 
299 1 47 1 278 2 280 1 289 1 13 1 337 1 115 2 125 2 8 1 142 1 343 1 129 1 296 1 36 1 108 2 166 1 241 1 345 2 
340 1 278 1 289 1 89 1 310 1 246 1 29 1 108 1 91 1 
8 1 289 1 343 1 
34 1 363 1 307 1 325 1 
34 1 235 1 363 1 57 1 56 1 325 1 366 1 
60 1 57 1 305 1 
67 1 287 2 56 3 57 3 325 1 360 1 34 1 235 1 363 1 74 1 251 1 366 1 
34 1 329 1 235 1 363 1 57 2 56 2 325 1 366 1 217 1 
34 1 362 1 235 1 57 1 56 1 249 1 134 1 74 1 137 1 366 1 207 1 
34 1 235 1 363 1 57 1 56 1 74 1 366 1 
235 1 363 2 57 1 56 1 74 1 325 1 366 1 
56 2 57 2 346 1 34 1 235 2 363 1 74 1 252 1 366 2 130 1 
56 3 57 3 325 1 362 1 34 2 235 1 363 1 74 1 275 1 107 1 366 1 217 2 368 1 
80 1 56 2 57 2 137 2 325 1 34 1 235 1 363 1 201 1 249 1 74 1 366 1 207 1 367 1 217 1 
56 4 57 4 325 1 126 1 362 1 34 2 235 2 329 1 363 1 74 1 366 2 217 2 368 1 
34 1 235 1 363 1 57 1 56 1 74 1 325 1 366 1 
67 1 287 1 56 4 57 4 325 2 161 1 362 1 34 3 235 1 363 2 251 1 366 1 217 2 368 1 
56 2 57 2 325 1 179 1 34 1 235 1 363 1 9 1 74 1 75 1 366 1 217 1 
67 2 287 2 56 3 57 3 154 1 325 1 34 1 235 1 363 1 74 1 251 1 366 1 
34 2 303 2 12 1 96 1 
235 1 57 1 56 1 28 1 74 1 366 1 
34 1 235 1 363 1 57 2 56 2 74 1 275 1 325 1 366 1 217 1 
88 1 
34 1 235 1 363 1 57 1 56 1 74 1 325 1 366 1 
34 1 287 1 235 1 363 1 57 3 56 3 74 1 275 1 325 1 366 1 217 1 
34 1 362 1 161 1 368 1 
34 1 363 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (31,97,114,200) (31,97,114,200) (31,97,114,200) 299 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (31,97,114,200) (31,97,114,200) (31,97,114,200) 299 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (31,97,114,200) (31,97,114,200) (31,97,114,200) 299 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (31,97,114,200) (31,97,114,200) (31,97,114,200) 299 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (31,97,114,200) (31,97,114,200) (31,97,114,200) 299 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (31,97,114,200) (31,97,114,200) (31,97,114,200) 299 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (31,97,114,200) (31,97,114,200) (31,97,114,200) 299 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (31,97,114,200) (31,97,114,200) (31,97,114,200) 299 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (31,97,114,200) (31,97,114,200) (31,97,114,200) 299 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 204 125 173 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 204 125 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (31,97,114,200) (31,97,114,200) (31,97,114,200) 299 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (31,97,114,200) (31,97,114,200) (31,97,114,200) (168,172) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (31,97,114,200) (31,97,114,200) (168,172) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (31,97,114,200) (31,97,114,200) (31,97,114,200) (168,172) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (31,97,114,200) (31,97,114,200) (31,97,114,200) 299 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 17 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 187 38 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 204 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 204 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 204 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 204 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 204 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 204 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 204 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3019 | 0 -> 1
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 0
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V | STATEMENT | 809 | stmt -> ;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z | OPERATOR | 5039 | && -> ||
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
97 1 299 1 114 1 303 1 200 1 
97 1 299 1 114 1 303 1 200 1 
97 1 299 1 114 1 303 1 200 1 
97 1 299 1 114 1 303 1 200 1 
97 1 299 1 114 1 303 1 200 1 
97 1 299 1 114 1 303 1 200 1 
97 1 299 1 114 1 303 1 200 1 
97 1 299 1 114 1 303 1 200 1 
97 1 299 1 114 1 303 1 200 1 
280 1 123 1 259 1 
80 2 123 1 298 1 
110 1 243 2 61 2 276 2 90 1 135 2 12 2 66 2 
201 1 243 2 37 1 285 1 73 2 155 1 252 1 74 1 7 1 40 1 110 1 161 1 289 1 12 2 167 2 169 2 260 1 85 1 262 1 115 2 175 1 86 1 178 1 90 1 52 1 189 1 229 1 230 1 61 2 276 3 27 1 63 1 135 3 66 2 309 1 102 2 103 1 
110 1 274 1 243 1 61 1 276 1 224 1 248 1 135 1 12 1 66 1 
243 1 148 1 150 1 248 1 205 1 110 1 293 1 12 2 259 1 48 1 300 1 123 1 301 1 224 1 128 1 274 2 306 1 61 1 276 2 135 2 66 1 
243 2 300 1 148 1 150 1 123 1 224 1 301 1 248 1 205 2 110 1 274 2 61 2 276 2 66 2 12 2 135 2 293 2 259 1 48 1 
96 1 205 1 293 1 242 1 311 1 
96 1 123 1 153 1 205 2 293 2 259 1 32 1 242 1 
205 1 293 1 242 1 
243 1 301 1 224 1 248 1 205 1 110 1 274 1 96 1 61 1 276 1 293 1 66 1 12 1 135 1 
123 1 
96 1 123 1 153 1 205 2 293 2 166 1 259 1 242 1 
69 1 123 1 91 1 153 1 205 5 270 1 22 2 286 1 112 1 96 2 159 1 272 1 208 2 293 5 212 1 294 1 259 1 33 2 242 2 
280 1 90 1 
243 1 70 1 90 2 232 1 61 1 276 2 12 2 135 2 66 1 
49 1 3 1 81 1 
178 1 90 1 283 1 37 1 189 1 229 1 230 1 276 1 27 1 135 1 309 1 167 1 169 1 260 1 262 1 115 1 
49 1 142 1 178 1 37 1 19 1 189 1 229 1 230 1 61 1 276 2 27 1 309 1 66 1 12 1 135 2 167 1 169 1 260 1 262 1 115 1 
243 1 142 1 90 1 19 2 128 1 305 1 60 1 61 4 232 1 276 5 133 1 66 4 12 5 135 5 
274 1 61 2 276 2 248 1 135 2 12 2 66 2 190 1 
243 1 61 3 276 3 90 1 19 1 135 3 12 3 66 3 
274 1 61 1 276 1 248 1 135 1 12 1 66 1 
274 1 243 1 61 1 232 1 70 1 276 1 135 1 12 1 66 1 
243 2 142 1 149 1 148 1 150 1 73 1 252 1 74 1 161 1 12 3 167 1 169 1 260 1 262 1 85 1 175 1 86 1 178 1 90 1 180 1 19 1 189 1 274 2 276 4 27 1 102 2 103 1 205 1 37 1 40 1 110 1 289 1 293 1 48 1 115 1 300 1 56 1 229 1 230 1 61 3 232 1 63 1 66 3 135 4 309 1 
61 1 276 2 90 1 135 2 12 2 66 1 19 1 128 1 305 1 
243 1 300 1 142 1 148 1 150 1 123 1 205 1 19 2 56 1 271 1 274 1 232 1 61 3 276 3 293 1 66 3 12 3 135 3 48 1 
243 1 49 1 3 1 19 1 232 1 61 2 276 2 66 2 12 2 135 2 
178 1 90 1 37 1 189 1 229 1 230 1 276 1 27 1 135 1 309 1 167 1 169 1 260 1 262 1 115 1 
144 1 178 1 90 1 249 1 37 1 230 1 276 1 27 1 135 1 309 1 167 1 169 1 260 1 262 1 115 1 
279 1 1 1 3 2 72 1 73 4 155 2 74 1 40 1 161 2 81 2 290 1 85 1 175 1 49 2 267 1 181 1 183 1 23 1 195 1 63 1 138 1 102 2 103 1 104 1 
274 1 300 1 61 1 276 1 135 1 12 1 66 1 190 1 
113 1 75 1 
113 1 75 1 
238 1 227 1 
238 1 227 1 
238 1 227 1 
46 1 113 1 75 1 
275 1 113 1 75 1 
51 1 113 2 151 1 238 1 227 1 75 2 
46 1 113 1 75 1 
46 1 113 1 75 1 
113 1 124 1 75 1 
113 1 124 1 75 1 
113 1 124 1 75 1 
222 1 121 1 113 1 204 1 125 1 205 1 293 1 75 1 173 1 
222 1 121 1 113 1 204 1 125 1 75 1 
15 1 237 1 213 1 
15 1 237 1 101 1 
15 3 50 1 101 1 269 1 261 1 213 2 
15 2 50 1 101 1 54 1 261 1 213 1 
15 2 50 1 101 1 213 1 261 2 
279 1 141 1 1 1 143 1 245 1 281 1 153 1 205 5 78 1 157 2 208 1 8 1 80 3 290 1 291 1 293 5 212 1 259 1 298 1 120 1 123 2 91 2 302 2 126 2 21 1 22 1 270 3 96 4 67 1 138 1 33 1 242 1 
279 3 1 3 143 1 245 2 281 2 205 9 153 1 207 1 255 1 159 1 8 4 208 2 80 9 290 3 291 3 211 1 293 9 212 1 259 1 298 3 218 1 123 5 91 6 302 6 126 6 53 1 22 2 270 8 130 5 96 7 138 3 33 2 35 1 242 6 311 5 
279 1 1 1 245 1 281 1 205 3 78 1 157 1 159 1 208 1 8 1 80 4 290 1 291 1 293 3 259 1 298 2 120 1 123 3 91 2 302 2 126 2 22 1 270 3 96 2 138 1 33 1 
279 2 1 2 245 1 281 1 205 4 207 1 78 1 157 2 255 1 159 1 208 1 8 2 80 7 290 2 291 2 211 1 293 4 259 1 298 3 120 1 123 4 91 4 302 4 126 4 22 1 270 5 96 3 138 2 33 1 
280 1 288 1 260 1 
260 1 77 1 
16 1 
37 1 260 1 262 1 
25 1 260 1 
260 1 262 1 
288 2 88 1 236 1 37 1 260 3 262 1 
267 1 221 1 122 1 73 1 187 1 155 1 253 1 156 1 277 1 26 1 195 2 170 1 83 1 
267 1 221 1 122 1 73 1 187 1 155 1 253 1 156 1 277 1 26 1 195 2 170 1 83 1 
267 1 221 1 122 1 73 1 187 1 155 1 253 1 156 1 277 1 26 1 195 2 100 1 170 1 83 1 
36 1 279 2 1 3 73 18 155 10 74 1 253 1 111 1 161 8 290 3 291 3 162 1 170 1 83 2 85 1 175 1 119 1 221 1 267 3 122 1 184 1 185 1 186 1 187 1 24 4 26 4 195 7 63 1 64 3 102 2 138 2 
175 2 267 2 221 1 122 1 247 1 186 1 73 3 251 1 187 1 155 2 74 2 156 1 161 1 277 1 26 2 195 4 63 2 170 1 102 4 83 1 85 2 
97 1 299 1 114 1 303 1 200 1 
97 1 114 1 303 1 168 1 200 1 
114 1 303 1 31 1 172 1 
97 1 114 1 303 1 168 1 200 1 
97 1 299 1 114 1 303 1 200 1 
297 1 
245 1 146 1 148 1 150 1 153 3 6 1 154 1 9 1 80 2 163 2 12 1 11 1 165 1 257 2 167 2 169 2 259 3 260 1 262 1 176 1 179 2 178 1 91 2 92 1 270 2 22 1 274 1 276 1 27 2 33 1 106 1 205 5 39 1 208 1 292 2 293 5 212 1 48 1 298 2 216 1 115 2 117 4 300 1 123 4 127 2 128 1 231 1 230 1 306 1 233 2 134 1 135 1 241 2 68 1 242 6 
106 1 148 1 150 1 153 1 6 1 205 3 39 1 9 1 12 1 293 3 166 1 165 1 259 2 48 1 117 2 300 1 179 1 123 2 128 1 306 1 274 1 276 1 135 1 242 2 
117 3 300 1 106 1 148 1 150 1 123 2 205 2 6 1 128 1 39 1 274 1 306 1 9 1 276 1 163 1 293 2 12 1 135 1 165 1 259 2 48 1 
106 1 148 1 150 1 153 1 6 1 205 3 39 1 9 1 12 1 293 3 163 1 166 1 165 1 257 1 259 3 48 1 117 3 300 1 179 1 123 3 128 1 306 1 274 1 276 1 135 1 242 2 
243 1 148 1 150 1 248 1 153 3 6 1 154 1 9 1 12 2 163 3 165 1 166 1 257 4 259 4 266 1 176 1 179 4 91 1 22 1 270 1 274 2 276 2 33 1 106 1 205 5 109 1 39 1 110 1 208 1 292 2 293 5 212 1 48 1 298 2 117 5 300 1 123 4 224 1 301 1 225 1 127 2 128 1 306 1 59 1 61 1 233 2 66 1 135 2 241 2 310 1 242 7 
148 1 150 1 6 1 153 2 154 1 9 1 80 2 12 1 163 2 165 1 257 2 259 3 176 1 179 2 91 1 22 1 270 1 274 1 276 1 33 1 106 1 205 4 39 1 208 1 292 2 293 4 212 1 48 1 298 2 117 4 300 1 123 4 127 2 128 1 306 1 233 2 134 1 135 1 241 2 242 4 
106 1 148 1 150 1 153 2 6 1 205 4 154 1 109 1 39 1 208 1 9 1 292 2 163 2 12 1 293 4 165 1 212 1 257 2 259 3 48 1 298 2 117 4 176 1 300 1 179 2 123 3 91 1 225 1 127 2 270 1 22 1 128 1 306 1 274 1 276 1 233 2 135 1 241 2 310 1 33 1 242 4 
106 1 148 1 150 1 153 2 6 1 205 4 154 1 109 1 39 1 208 1 9 1 292 2 163 2 12 1 293 4 165 1 212 1 257 2 259 3 48 1 298 2 117 4 176 1 300 1 179 2 123 3 91 1 225 1 127 2 270 1 22 1 128 1 306 1 274 1 276 1 233 2 135 1 241 2 310 1 33 1 242 4 
117 2 300 1 106 1 148 1 150 1 17 1 123 2 205 2 6 1 128 1 39 1 274 1 306 1 9 1 276 1 293 2 12 1 135 1 165 1 259 2 48 1 
106 1 148 1 150 1 153 2 6 1 205 4 154 1 109 1 39 1 208 1 9 1 292 2 163 3 12 1 293 4 212 1 165 1 257 3 259 3 48 1 298 2 117 5 176 1 300 1 179 3 123 3 91 1 225 1 127 2 270 1 22 1 128 1 306 1 274 1 59 1 276 1 233 2 135 1 241 2 310 1 33 1 242 5 
106 1 148 1 150 1 153 2 6 1 205 4 154 1 109 1 39 1 208 1 9 1 292 2 163 3 12 1 293 4 212 1 165 1 257 3 259 3 48 1 298 2 117 5 176 1 300 1 179 3 123 3 91 1 225 1 127 2 270 1 22 1 128 1 306 1 274 1 59 1 276 1 233 2 135 1 241 2 310 1 33 1 242 5 
148 1 150 1 6 1 153 2 154 1 9 1 80 2 12 1 164 2 163 2 165 1 257 2 259 3 179 2 91 1 22 1 270 1 274 1 276 1 30 1 33 1 34 2 106 1 205 4 39 1 208 1 292 2 293 4 212 1 48 1 117 4 300 1 123 3 128 1 306 1 233 2 134 1 135 1 242 4 
175 1 280 1 267 1 122 1 181 1 187 1 74 1 156 1 40 1 277 1 26 1 195 2 63 1 102 2 103 1 85 1 
201 1 279 1 1 2 3 4 246 1 73 14 252 1 155 8 74 2 40 1 111 1 161 6 160 1 81 11 290 2 291 2 171 1 85 2 175 2 49 11 177 1 267 1 90 1 185 1 24 3 188 1 26 1 195 2 63 2 64 3 102 4 138 1 103 2 
201 1 142 1 3 1 283 1 284 1 37 1 73 2 252 1 155 1 74 1 40 1 160 1 161 1 12 1 167 1 169 1 260 1 84 1 262 1 85 1 115 1 175 1 178 1 90 1 19 1 189 1 229 1 131 1 230 1 61 1 276 2 27 1 63 1 309 1 135 2 66 1 102 2 103 1 
1 2 142 1 3 6 71 2 73 14 252 1 155 7 74 3 156 1 161 7 160 1 81 6 256 1 12 1 167 3 169 3 260 2 14 1 85 3 262 2 175 3 267 5 178 2 19 1 187 1 189 2 276 3 277 1 26 5 195 10 27 1 29 2 102 6 103 3 201 1 279 2 37 2 40 3 42 1 287 1 289 2 210 2 290 2 291 2 115 3 215 2 49 6 122 1 229 2 230 2 61 1 63 3 66 1 135 3 309 2 138 2 
201 1 2 1 250 1 73 2 155 1 252 1 74 2 40 2 161 1 10 1 12 1 167 8 169 8 260 3 14 1 85 2 262 2 115 7 216 1 116 1 175 2 178 2 18 1 181 1 19 1 52 2 191 1 230 2 61 1 276 1 27 2 62 1 63 2 135 1 66 1 136 1 102 4 103 2 68 1 
243 1 279 1 1 1 3 1 73 3 155 1 74 1 40 1 160 1 161 2 81 1 290 1 291 1 12 1 85 1 49 1 175 1 267 1 20 1 61 1 232 1 276 1 195 1 63 1 66 1 135 1 102 2 138 1 103 1 
49 1 175 1 1 1 3 1 181 1 183 1 73 2 155 2 74 1 40 1 195 1 26 1 81 1 290 1 63 1 102 2 103 1 85 1 
49 1 175 1 279 1 267 1 3 1 181 1 72 1 73 2 74 1 40 1 161 2 195 1 81 1 63 1 102 2 138 1 103 1 85 1 
279 1 1 1 3 2 73 4 155 2 74 1 40 1 161 2 81 2 290 1 291 1 85 1 175 1 49 2 267 1 181 1 195 1 63 1 102 2 138 1 103 1 
49 1 175 1 1 1 2 1 3 1 183 1 73 2 155 2 74 1 40 1 195 1 26 1 81 1 290 1 63 1 102 2 103 1 85 1 
49 1 175 1 279 1 267 1 2 1 3 1 72 1 73 2 74 1 40 1 161 2 195 1 81 1 63 1 102 2 138 1 103 1 85 1 
279 1 1 1 2 1 3 2 73 4 155 2 74 1 40 1 161 2 81 2 290 1 291 1 85 1 175 1 49 2 267 1 26 1 195 2 63 1 102 2 138 1 103 1 
279 1 1 1 3 2 73 4 155 2 74 1 40 1 161 2 81 2 290 1 291 1 85 1 175 1 49 2 267 1 195 1 63 1 102 2 138 1 103 1 
201 1 37 1 73 2 155 1 252 1 74 1 40 1 161 1 289 1 167 1 169 1 260 1 262 1 85 1 115 1 175 1 178 1 90 1 189 1 229 1 230 1 276 1 27 1 63 1 309 1 135 1 102 2 103 1 
201 1 144 1 249 1 37 1 73 2 155 1 252 1 74 1 40 1 161 1 167 1 169 1 260 1 262 1 85 1 115 1 175 1 178 1 90 1 55 1 230 1 276 1 27 1 63 1 309 1 135 1 102 2 103 1 
279 1 1 1 3 2 73 4 155 2 74 1 40 1 160 1 161 2 81 2 290 1 291 1 85 1 175 1 49 2 267 1 195 1 63 1 102 2 138 1 103 1 
279 1 1 1 3 2 37 1 73 4 155 2 74 1 40 1 161 2 289 1 81 2 290 1 291 1 167 1 169 1 260 1 262 1 85 1 215 1 115 1 116 1 49 2 175 1 267 1 178 1 189 1 229 1 230 1 276 1 195 1 63 1 309 1 135 1 138 1 102 2 103 1 
279 1 243 1 1 1 3 1 73 3 155 2 74 1 40 1 161 1 160 1 81 1 290 1 291 1 12 1 85 1 175 1 49 1 61 1 232 1 193 1 276 1 195 1 26 1 63 1 66 1 135 1 138 1 102 2 103 1 
279 1 1 2 147 1 251 1 73 11 206 1 155 6 74 2 79 1 111 1 254 1 161 5 290 2 291 2 85 2 175 2 220 1 267 1 185 1 304 1 24 2 273 1 26 1 195 2 63 2 64 1 240 1 138 1 102 4 
279 2 1 3 147 2 108 1 251 1 73 26 155 14 74 3 254 4 111 2 161 12 290 3 291 3 258 1 85 3 217 1 175 3 220 1 267 2 186 2 304 2 24 2 273 1 95 1 192 1 26 2 195 4 307 1 63 3 64 2 197 1 240 1 102 6 138 2 
1 4 147 1 73 31 251 1 155 17 74 4 156 1 254 4 161 14 258 1 85 4 175 4 267 2 185 1 186 2 187 1 24 4 95 1 273 1 192 1 277 1 195 7 26 5 196 1 197 1 102 8 279 2 108 1 206 1 111 3 290 4 291 4 217 1 220 1 122 1 304 2 307 1 63 4 64 3 240 1 138 2 
279 1 1 2 147 1 251 1 73 13 206 1 155 7 74 2 111 1 254 2 161 6 290 2 291 2 85 2 175 2 220 1 267 1 185 1 304 1 24 2 273 1 26 2 195 3 63 2 64 1 197 1 240 1 138 1 102 4 
279 3 1 4 147 1 108 1 251 1 73 29 155 15 74 2 156 1 254 3 111 2 161 14 290 4 291 4 258 1 85 2 217 1 175 2 220 1 267 4 122 1 186 1 185 1 187 1 304 1 24 3 273 1 95 1 192 1 277 1 26 4 195 8 307 1 63 2 64 2 197 1 240 1 102 4 138 3 
201 1 202 1 4 1 250 1 73 2 155 1 252 1 74 1 40 1 160 1 161 1 12 2 167 2 169 2 260 1 262 1 85 1 264 1 115 2 175 1 178 1 87 1 52 2 94 1 230 1 276 2 63 1 135 2 136 1 102 2 103 1 
15 2 116 1 118 1 244 1 178 1 269 1 230 1 209 1 194 1 237 1 101 1 167 2 169 2 213 1 214 1 14 1 296 1 115 2 263 1 
15 2 118 1 244 1 178 1 93 1 269 1 230 1 209 1 237 1 101 1 167 1 169 1 213 1 14 1 296 1 115 1 263 1 
178 1 76 1 230 1 132 1 209 1 27 1 167 1 169 1 260 1 214 1 262 1 68 1 115 1 216 1 
15 2 118 1 244 1 178 1 269 1 230 1 209 1 194 1 237 1 101 1 167 1 169 1 213 1 214 1 14 1 296 1 115 1 263 1 
139 1 
112 1 280 1 123 1 91 1 294 1 270 1 259 1 
153 1 205 1 208 1 80 1 293 1 212 1 259 1 298 1 176 1 123 2 91 1 127 1 270 1 22 1 241 1 33 1 242 1 
0 1 1 1 245 1 5 1 153 1 77 2 80 6 13 1 167 1 169 1 260 4 262 1 174 1 265 1 178 1 88 1 91 3 268 1 270 4 22 2 27 1 29 1 99 1 33 2 279 1 205 2 37 1 208 2 288 1 290 1 291 1 293 2 212 2 48 1 115 1 298 3 123 3 302 3 126 3 129 1 230 2 138 1 242 2 
0 2 279 2 1 2 245 1 205 1 153 1 111 1 208 2 80 6 290 2 291 2 293 1 212 2 47 1 258 1 259 2 298 3 217 1 123 5 91 5 302 5 126 5 270 8 22 2 24 1 57 1 231 1 58 1 95 1 192 1 307 1 64 1 138 2 33 2 242 1 
0 1 122 1 91 1 205 1 270 1 22 1 38 1 187 1 109 1 208 1 293 1 212 1 33 1 
123 1 91 1 22 1 270 1 112 1 208 1 212 1 294 1 259 1 33 1 
0 2 279 2 1 2 123 5 91 5 302 5 126 5 270 5 58 1 80 10 290 2 291 2 29 1 138 2 298 5 
123 1 205 1 153 1 293 1 259 1 242 1 
245 2 146 1 153 2 205 3 159 1 208 2 45 1 293 3 212 1 167 4 169 4 260 1 295 1 262 1 115 4 216 1 178 1 223 2 226 1 91 2 92 1 22 2 270 2 230 1 231 2 27 2 33 2 242 4 68 1 
243 2 37 1 73 1 252 1 74 1 40 1 110 1 161 1 289 1 12 2 167 1 169 1 260 1 85 1 262 1 115 1 175 1 86 1 178 1 90 1 189 1 229 1 230 1 61 2 276 3 27 1 63 1 135 3 66 2 309 1 102 2 103 1 
221 1 245 1 123 4 91 2 302 2 126 2 22 1 270 1 231 1 208 1 80 4 212 1 259 2 33 1 298 2 
222 1 204 1 
222 1 204 1 
222 1 204 1 
222 1 204 1 
222 1 204 1 
222 1 204 1 
222 1 204 1 
222 1 204 1 
113 1 75 1 
175 2 267 1 122 1 186 1 187 1 74 2 156 1 277 1 26 1 195 2 63 2 102 4 85 2 
280 1 267 1 277 1 26 1 195 2 122 1 187 1 156 1 
279 1 175 1 1 1 267 1 73 4 155 2 74 1 161 2 195 2 26 1 290 1 291 1 63 1 65 1 138 1 102 2 85 1 
279 1 1 1 267 1 185 1 73 7 155 3 24 2 111 1 161 4 26 1 195 2 290 1 291 1 64 1 138 1 
279 2 1 2 246 1 73 13 155 6 74 2 156 1 161 7 290 2 291 2 171 1 85 2 175 2 267 4 122 2 185 1 186 2 187 2 24 2 98 1 277 1 195 8 26 4 63 2 64 2 138 2 102 4 
161 1 73 1 24 1 
64 1 73 1 155 1 
175 1 279 1 1 1 267 2 73 6 155 3 74 1 161 3 26 2 195 4 290 1 291 1 63 1 29 1 65 1 102 2 138 1 85 1 
279 1 1 2 73 12 251 1 155 7 74 1 111 1 161 5 290 2 291 2 258 1 85 1 217 1 175 1 267 2 24 1 95 1 192 1 26 2 195 4 307 1 63 1 64 1 102 2 138 1 
279 1 267 1 122 1 73 4 155 2 187 1 161 2 195 2 26 1 290 1 278 1 
175 1 267 1 122 1 186 1 73 1 187 1 74 1 156 1 98 1 161 1 277 1 26 1 195 2 63 1 102 2 85 1 
267 1 26 1 195 2 122 1 187 1 38 1 
175 1 1 1 251 1 73 2 155 2 74 1 26 1 195 1 290 1 63 1 102 2 85 1 
279 1 175 1 1 1 267 1 251 1 73 4 155 2 74 1 161 2 195 1 290 1 291 1 63 1 102 2 138 1 85 1 
175 1 267 1 122 1 251 1 187 1 74 1 195 2 26 1 63 1 102 2 85 1 
36 1 279 3 1 3 206 1 251 1 73 22 155 11 74 5 156 1 111 1 161 11 290 4 291 3 162 1 85 5 175 5 119 1 267 5 122 3 186 2 185 1 187 3 24 4 98 1 277 1 26 6 195 11 63 5 65 1 64 3 102 10 138 2 278 1 
175 1 267 1 122 1 251 1 73 2 187 1 155 1 74 1 156 1 24 1 111 1 192 1 161 1 277 1 26 1 195 2 63 1 64 1 102 2 85 1 
1 1 73 5 251 1 155 3 74 2 156 1 111 1 161 2 290 1 291 1 85 2 175 2 267 1 122 1 185 1 187 1 24 2 192 1 277 1 26 2 195 3 63 2 65 1 64 1 102 4 
279 1 1 2 73 12 251 1 155 7 74 4 111 1 161 5 290 2 291 2 258 1 85 4 217 1 175 4 267 1 186 2 24 1 95 1 192 1 26 2 195 3 307 1 63 4 65 1 64 1 102 8 138 1 
279 1 1 2 73 12 251 1 155 7 74 4 111 1 161 5 290 2 291 2 258 1 85 4 217 1 175 4 267 2 186 2 24 1 95 1 192 1 26 1 195 3 307 1 63 4 65 1 64 1 102 8 138 1 
175 1 267 1 122 1 251 1 73 2 187 1 155 1 74 1 156 1 24 1 111 1 192 1 161 1 277 1 26 1 195 2 63 1 64 1 102 2 85 1 
279 1 1 2 73 12 251 1 155 7 74 3 111 1 161 5 290 2 291 2 258 1 85 3 217 1 175 3 267 2 186 2 24 1 95 1 192 1 26 2 195 4 307 1 63 3 64 1 102 6 138 1 
279 1 1 2 73 12 251 1 155 7 74 4 156 1 111 1 161 5 290 2 291 2 258 1 85 4 217 1 175 4 267 2 122 1 186 2 187 1 24 1 95 1 192 1 277 1 26 2 195 4 307 1 63 4 65 1 64 1 102 8 138 1 
279 1 1 2 73 12 251 1 206 1 155 7 74 2 111 1 161 5 290 2 291 2 258 1 85 2 217 1 175 2 267 2 24 1 95 1 192 1 26 2 195 4 307 1 63 2 64 1 102 4 138 1 
267 2 122 2 187 2 156 1 277 2 195 4 26 2 
279 1 1 2 73 12 251 1 206 1 155 7 74 4 156 1 111 1 161 5 290 2 291 2 258 1 85 4 217 1 175 4 267 2 122 1 186 2 187 1 24 1 95 1 192 1 277 1 26 2 195 4 307 1 63 4 64 1 102 8 138 1 
276 1 90 1 135 1 12 1 82 1 128 1 305 1 
219 1 158 1 276 1 44 1 145 1 234 1 90 1 135 1 12 1 82 1 128 1 305 1 
230 1 280 1 178 1 27 1 167 1 169 1 260 1 262 1 68 1 216 1 115 1 
178 1 90 1 37 1 19 1 229 1 230 1 61 1 276 2 27 1 309 1 66 1 12 1 135 2 167 1 169 1 260 1 262 1 115 1 
300 1 148 1 178 1 223 1 90 1 37 2 19 1 229 1 41 1 230 1 274 1 61 1 276 2 25 1 309 1 66 2 12 2 135 2 167 1 169 1 260 3 262 2 115 1 
300 1 144 1 148 1 178 1 223 1 90 1 37 2 19 1 41 1 230 1 274 1 61 1 276 2 25 1 28 1 309 1 66 2 12 2 135 2 167 2 169 2 260 3 262 2 115 2 
243 1 107 1 248 1 205 2 37 1 77 1 110 1 41 1 288 1 12 1 293 2 167 1 169 1 259 1 260 4 262 1 48 1 115 1 178 1 223 1 123 1 224 1 301 1 230 1 274 1 61 1 276 1 25 1 308 1 135 1 66 1 242 1 
243 1 248 1 205 2 37 1 77 1 110 1 41 1 288 1 12 1 293 2 167 1 169 1 259 1 260 4 262 1 48 1 115 1 265 1 178 1 223 1 123 1 224 1 301 1 230 1 274 1 61 1 276 1 25 1 135 1 66 1 242 1 
230 1 178 1 62 1 167 1 169 1 115 1 
116 1 178 2 88 1 282 1 18 1 182 1 52 1 37 1 191 1 230 3 10 1 27 2 62 1 136 1 167 7 169 7 260 3 14 1 262 2 199 1 115 6 
37 1 74 2 156 1 40 2 160 1 289 1 210 1 12 1 167 1 169 1 260 1 262 1 85 2 115 1 215 1 116 1 175 2 267 1 178 1 87 1 122 1 19 1 187 1 189 1 229 1 230 1 61 1 276 2 277 1 26 1 195 2 63 2 309 1 135 2 66 1 102 4 103 2 
0 2 243 1 5 1 248 1 153 1 77 1 12 1 13 1 167 1 169 1 259 3 260 2 265 1 91 6 268 1 22 2 187 1 270 5 274 1 96 1 276 1 27 1 33 2 278 1 279 2 205 3 38 1 112 1 110 1 208 2 288 1 290 2 293 3 212 2 294 1 295 1 48 1 115 1 122 1 123 3 301 1 224 1 58 1 61 1 66 1 135 1 242 2 
116 1 178 1 88 1 37 1 230 2 288 1 62 1 167 2 169 2 260 2 262 1 115 2 174 1 
116 1 140 1 178 1 230 1 27 1 28 1 167 4 169 4 260 1 68 1 262 1 115 4 216 1 
178 1 223 1 182 1 37 1 230 2 42 1 235 1 167 2 169 2 260 1 262 1 199 1 115 2 105 1 
15 1 230 1 118 1 178 1 237 1 27 1 101 1 167 1 169 1 115 1 
230 1 116 1 178 1 4 1 136 1 167 2 169 2 260 1 262 1 14 1 115 2 
116 1 140 1 178 2 223 1 191 1 230 2 10 1 27 1 136 1 167 5 169 5 260 3 68 1 262 2 216 1 115 4 
116 1 140 1 178 2 223 1 230 2 10 1 27 1 239 1 136 1 167 5 169 5 260 3 68 1 262 2 216 1 115 4 
144 1 178 1 90 1 37 1 19 1 230 1 61 1 276 2 27 1 309 1 66 1 12 1 135 2 167 1 169 1 260 1 262 1 115 1 
178 1 223 1 88 1 282 1 182 1 37 1 230 2 167 1 169 1 260 1 262 1 199 1 115 1 
203 1 90 1 89 1 198 1 228 1 
243 1 203 1 148 1 150 1 248 1 152 1 205 2 110 1 43 1 12 1 293 2 259 1 48 1 300 1 89 1 123 1 301 1 224 1 228 1 56 1 96 1 274 2 61 1 276 1 135 1 66 1 137 1 198 1 
203 1 202 1 228 1 94 1 276 1 12 1 135 1 198 1 264 1 
43 1 152 1 198 1 

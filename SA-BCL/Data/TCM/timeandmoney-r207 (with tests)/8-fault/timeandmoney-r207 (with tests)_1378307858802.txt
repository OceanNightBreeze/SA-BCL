#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (19,55,131,165,366) (90,289) (90,289) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 150 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 150 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1400 | 1 -> 0
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3154 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V | STATEMENT | 842 | stmt -> ;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3451 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6040 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | ASSIGN | 2623 | = null
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> 0
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
198 6 114 1 0 3 320 2 52 5 8 1 322 2 366 1 225 1 347 1 15 1 348 1 271 9 56 1 152 1 179 1 273 2 57 1 229 2 79 1 185 2 277 9 82 2 354 4 330 1 374 1 375 2 111 1 
198 6 114 1 0 3 320 2 52 5 8 1 322 2 366 1 225 1 347 1 15 1 348 1 271 9 56 1 152 1 179 1 273 2 57 1 229 2 79 1 185 2 277 9 82 2 354 4 330 1 374 1 375 2 111 1 
198 7 114 1 0 4 320 2 52 6 8 1 322 2 366 1 225 1 347 1 15 1 348 1 271 10 56 1 152 1 179 1 273 2 57 1 229 2 79 1 185 2 277 10 82 2 354 5 330 1 374 1 375 2 111 1 
198 4 114 1 0 2 320 2 52 4 8 1 322 2 366 1 225 1 15 1 348 1 271 7 56 1 152 1 179 1 273 1 57 1 229 2 79 1 185 2 277 7 82 2 354 3 330 1 374 1 375 2 111 1 
271 4 198 3 56 1 152 1 273 2 179 1 0 1 57 1 79 1 185 1 277 4 320 1 354 2 52 3 82 1 322 1 375 1 347 1 
271 1 8 1 229 1 366 1 90 1 375 1 79 1 185 1 277 1 289 1 246 1 320 1 
271 3 198 1 56 1 152 1 0 1 229 1 79 1 277 3 320 2 354 1 52 2 375 2 225 1 
198 7 114 1 0 3 337 1 320 2 52 5 322 1 147 1 225 1 348 1 347 1 271 9 56 1 152 1 273 2 179 1 57 1 229 1 79 1 185 1 277 9 354 4 82 1 375 2 
198 7 114 1 0 3 337 1 320 2 52 5 322 1 147 1 225 1 348 1 347 1 271 9 56 1 152 1 273 2 179 1 57 1 229 1 79 1 185 1 277 9 354 4 82 1 375 2 
314 1 222 1 150 1 
7 2 314 1 75 1 
327 2 72 2 134 2 200 2 352 2 297 1 118 1 302 2 
134 2 199 1 88 1 49 1 69 1 200 2 360 1 71 1 50 1 118 1 263 1 321 1 291 1 140 1 340 2 72 3 98 1 174 1 176 1 146 1 221 1 297 1 299 1 177 2 367 1 226 1 270 2 302 2 327 3 18 2 352 2 308 1 157 1 331 1 378 2 335 1 132 1 
163 1 327 1 72 1 134 1 276 1 200 1 352 1 324 1 118 1 302 1 
163 1 327 1 314 1 364 1 96 1 72 1 201 1 120 1 372 1 220 1 222 1 31 1 103 1 302 1 
163 1 327 1 134 1 314 1 352 1 200 1 364 1 72 1 201 1 120 1 372 2 220 1 222 1 103 2 302 1 
372 1 166 1 17 1 318 1 103 1 
372 2 166 1 314 1 222 1 318 1 170 1 103 2 133 1 
372 1 318 1 103 1 
163 1 327 1 72 1 372 1 134 1 166 1 276 1 200 1 352 1 324 1 118 1 103 1 302 1 264 1 
314 1 
142 1 372 2 166 1 314 1 222 1 318 1 103 2 133 1 
166 2 314 1 180 1 48 2 167 1 317 1 116 2 318 2 187 1 233 1 341 1 372 5 343 1 222 1 33 1 356 2 236 1 103 5 133 1 
327 2 134 1 18 1 49 1 69 1 200 1 308 1 50 1 94 1 117 1 72 2 98 1 174 1 243 1 221 1 177 1 226 1 132 1 270 1 302 1 
297 1 150 1 
327 2 134 1 352 1 200 1 72 2 192 1 298 1 297 2 302 2 
160 1 130 1 243 1 
327 1 18 1 49 1 69 1 308 1 50 1 72 1 174 1 98 1 323 1 221 1 297 1 177 1 226 1 270 1 132 1 
327 3 72 3 134 3 352 1 200 3 297 1 94 1 302 3 
163 1 327 1 72 1 134 1 200 1 324 1 302 1 
163 1 327 1 72 1 134 1 192 1 200 1 352 1 298 1 302 1 
163 1 134 3 88 1 49 1 69 1 360 1 200 3 71 1 50 1 94 1 364 1 117 1 118 1 263 1 291 1 140 1 340 1 201 1 72 4 120 1 98 1 174 1 220 1 176 1 221 1 297 1 299 1 345 1 298 1 177 1 226 1 103 1 270 1 302 3 327 4 18 1 352 2 308 1 157 1 372 1 331 1 378 2 258 1 132 1 
327 2 72 2 134 1 200 1 297 1 94 1 96 1 186 1 302 2 
163 1 327 3 16 1 134 3 314 1 352 1 200 3 364 1 94 2 117 1 72 3 201 1 120 1 372 1 220 1 298 1 345 1 103 1 302 3 
327 2 134 2 352 1 200 2 94 1 72 2 130 1 243 1 298 1 302 2 
327 1 18 1 69 1 49 1 308 1 50 1 72 1 174 1 98 1 221 1 297 1 177 1 226 1 270 1 132 1 
327 1 18 1 69 1 49 1 231 1 50 1 72 1 171 1 174 1 98 1 221 1 297 1 177 1 270 1 132 1 
315 1 88 2 316 1 362 1 263 1 321 2 140 1 340 4 12 1 176 1 243 2 223 1 299 1 326 1 351 1 156 1 157 1 81 1 160 2 373 1 331 1 130 2 378 2 380 1 
163 1 120 1 327 1 72 1 134 1 250 1 200 1 302 1 
327 5 153 1 134 4 200 4 352 1 94 2 96 1 186 1 117 1 72 5 298 1 297 1 346 1 302 5 
163 1 327 2 72 2 134 2 250 1 200 2 324 1 302 2 
173 1 379 1 
173 1 379 1 
355 1 377 1 
355 1 377 1 
355 1 377 1 
173 1 379 1 159 1 
173 1 371 1 379 1 
281 1 173 2 25 1 355 1 377 1 379 2 
173 1 379 1 159 1 
173 1 379 1 159 1 
173 1 342 1 379 1 
173 1 342 1 379 1 
173 1 342 1 379 1 
260 2 259 1 206 1 25 1 314 1 230 1 361 1 319 1 173 2 372 2 100 2 334 2 64 1 110 3 41 2 379 2 103 2 197 1 13 2 
303 1 213 1 327 2 259 1 260 1 134 2 215 1 240 1 371 1 200 2 138 1 72 2 173 1 372 1 100 1 334 1 145 1 110 1 297 1 379 1 196 1 103 1 302 2 13 1 
82 1 322 1 185 1 
322 1 185 1 246 1 
62 1 82 2 185 3 102 1 246 1 34 1 
82 1 185 2 102 1 246 1 34 1 6 1 
82 1 185 2 102 1 246 1 34 2 
166 4 240 1 315 1 314 2 48 1 136 1 3 1 116 1 318 1 28 1 29 2 7 3 365 2 343 2 145 1 74 2 222 1 296 1 223 1 75 1 33 3 103 5 303 1 368 1 350 1 187 1 81 1 372 5 257 1 356 1 380 1 133 1 
166 7 315 3 314 5 48 2 136 3 318 6 28 1 116 2 266 1 7 9 172 1 365 6 343 6 145 4 74 6 222 1 296 2 223 3 75 3 33 8 269 1 103 9 368 2 369 1 272 1 17 5 80 1 187 1 81 3 372 9 83 5 356 2 236 1 380 3 133 1 
166 2 314 3 315 1 48 1 3 1 136 1 116 1 29 1 7 4 365 2 343 2 145 1 222 1 296 1 74 2 223 1 75 2 33 3 103 3 368 1 350 1 81 1 372 3 356 1 236 1 380 1 
166 3 314 4 315 2 48 1 3 1 136 2 116 1 29 2 7 7 266 1 365 4 343 4 145 2 222 1 74 4 296 1 223 2 75 3 33 5 103 4 368 1 369 1 272 1 350 1 81 2 372 4 356 1 236 1 380 2 
280 1 49 1 150 1 
49 1 149 1 
14 1 
49 1 69 1 
280 2 98 1 49 3 69 1 235 1 309 1 
98 1 49 1 69 1 
49 1 238 1 
47 1 316 5 88 6 89 2 262 2 321 8 340 14 274 1 351 4 249 2 252 1 61 1 81 3 127 1 312 1 39 1 380 3 237 2 
47 1 316 7 88 6 89 2 262 2 321 8 340 14 274 1 351 4 249 2 252 1 61 1 81 3 127 1 312 1 39 3 380 3 237 2 
47 1 316 5 88 6 89 2 262 2 321 8 340 14 54 1 274 1 351 4 249 2 252 1 61 1 81 3 127 1 312 1 39 1 380 3 237 2 
214 1 315 3 47 1 88 19 316 14 89 3 287 1 136 3 262 3 321 21 340 40 292 1 73 1 99 3 176 1 299 1 223 3 274 1 249 2 209 1 351 7 155 4 157 1 252 2 254 1 61 2 81 6 127 1 331 1 312 1 39 7 378 2 380 6 212 1 237 3 
88 7 316 7 47 1 89 2 262 2 321 9 340 16 292 1 176 2 299 2 245 1 274 1 351 5 249 2 157 2 252 1 61 1 81 3 127 1 331 2 39 2 283 1 378 4 380 3 237 2 
198 1 286 1 50 1 95 1 4 1 320 1 52 1 141 1 322 1 244 1 177 1 32 1 270 1 246 1 178 1 271 2 56 1 77 1 152 1 18 1 229 1 79 1 185 2 277 2 126 1 62 1 82 1 234 1 375 1 132 1 
198 2 286 1 363 1 91 1 50 1 95 1 320 1 52 1 294 1 322 1 244 1 177 1 32 1 270 1 246 1 178 1 271 3 56 1 77 1 152 1 18 1 229 1 185 2 277 3 126 1 62 1 82 1 234 1 375 1 132 1 
198 2 286 1 363 1 50 1 95 1 52 1 294 1 322 1 244 1 177 1 32 1 270 1 246 1 271 2 56 1 77 1 152 1 229 1 18 1 185 2 277 2 62 1 82 1 234 1 132 1 
69 1 49 1 91 1 288 1 50 1 95 2 320 1 267 1 221 1 177 1 270 1 123 1 271 1 77 2 18 1 229 2 277 1 20 1 128 1 234 2 375 1 21 1 132 1 
271 1 77 1 286 1 229 1 18 1 79 1 363 1 50 1 185 2 4 1 95 1 277 1 126 1 320 1 62 1 82 1 322 1 375 1 234 1 244 1 32 1 177 1 246 1 132 1 270 1 178 1 
349 1 
45 1 48 1 49 1 288 1 50 1 96 1 5 1 7 2 201 1 203 1 343 2 103 5 302 1 304 1 207 2 208 2 18 2 251 1 60 1 158 1 255 1 311 2 356 1 163 1 314 2 69 1 27 2 169 2 318 6 116 1 364 1 72 1 120 1 220 1 222 1 221 2 31 1 75 2 33 2 177 2 270 2 368 1 327 1 35 1 328 1 329 2 184 1 187 1 279 4 372 5 128 1 282 2 87 1 133 3 132 1 
163 1 45 1 364 1 318 2 96 1 201 1 72 1 120 1 142 1 220 1 31 1 103 3 302 1 327 1 328 1 208 1 251 1 60 1 279 2 158 1 372 3 133 1 
163 1 45 1 314 1 318 1 364 1 96 1 201 1 72 1 120 1 142 1 220 1 31 1 222 1 103 3 302 1 327 1 328 1 207 1 251 1 60 1 279 3 158 1 372 3 133 1 
163 1 45 1 314 1 364 1 318 2 96 1 142 1 201 1 72 1 120 1 220 1 31 1 222 1 103 3 302 1 327 1 328 1 207 1 208 1 251 1 60 1 279 3 158 1 372 3 282 1 133 1 
45 1 48 1 96 1 201 1 142 1 203 1 343 1 103 5 302 1 247 1 304 1 207 4 248 1 208 4 105 1 251 1 60 1 158 1 311 2 356 1 163 1 314 5 27 2 364 1 318 7 116 1 169 2 265 1 120 1 72 1 220 1 31 1 222 5 33 1 75 2 327 1 328 1 329 2 278 1 187 1 279 6 372 5 282 4 133 3 
45 1 48 1 96 1 201 1 7 2 203 1 343 1 103 4 302 1 304 1 207 2 208 2 251 1 60 1 158 1 311 2 356 1 163 1 314 2 27 2 364 1 116 1 169 2 318 4 120 1 72 1 220 1 31 1 222 1 33 1 75 2 327 1 328 1 329 2 187 1 279 4 372 4 282 2 87 1 133 2 
163 1 45 1 314 1 48 1 27 2 318 4 169 2 364 1 116 1 96 1 265 1 201 1 72 1 120 1 203 1 220 1 343 1 222 1 31 1 75 2 33 1 103 4 302 1 247 1 304 1 327 1 207 2 328 1 208 2 329 2 251 1 60 1 278 1 187 1 279 4 158 1 372 4 311 2 282 2 356 1 133 2 
163 1 45 1 314 1 48 1 27 2 318 4 169 2 364 1 116 1 96 1 265 1 201 1 72 1 120 1 203 1 220 1 343 1 222 1 31 1 75 2 33 1 103 4 302 1 247 1 304 1 327 1 207 2 328 1 208 2 329 2 251 1 60 1 278 1 187 1 279 4 158 1 372 4 311 2 282 2 356 1 133 2 
163 1 45 1 314 1 48 1 318 4 364 1 116 1 96 1 265 1 7 2 201 1 72 1 120 1 219 2 220 1 343 1 11 1 222 1 31 1 33 1 103 4 302 1 304 1 327 1 207 2 328 1 208 2 78 1 329 2 251 1 60 1 187 1 279 4 158 1 372 4 311 2 282 2 162 2 356 1 86 1 133 2 
163 1 45 1 314 1 48 1 27 2 169 2 116 1 364 1 318 5 96 1 265 1 201 1 72 1 120 1 203 1 220 1 343 1 222 1 31 1 75 2 33 1 103 4 302 1 247 1 304 1 327 1 328 1 248 1 207 3 208 3 329 2 251 1 60 1 187 1 278 1 279 5 158 1 372 4 311 2 282 3 356 1 133 2 
163 1 45 1 314 1 48 1 27 2 169 2 116 1 364 1 318 5 96 1 265 1 201 1 72 1 120 1 203 1 220 1 343 1 222 1 31 1 75 2 33 1 103 4 302 1 247 1 304 1 327 1 328 1 248 1 207 3 208 3 329 2 251 1 60 1 187 1 278 1 279 5 158 1 372 4 311 2 282 3 356 1 133 2 
45 1 48 1 96 1 201 1 7 2 343 1 103 4 302 1 304 1 207 2 208 2 251 1 60 1 158 1 311 2 162 2 356 1 163 1 314 1 364 1 116 1 318 4 120 1 72 1 219 2 220 1 31 1 222 1 33 1 327 1 328 1 78 1 329 2 187 1 279 4 372 4 282 2 87 1 133 2 
88 2 249 1 316 2 351 2 47 1 89 1 156 1 262 1 157 1 263 1 321 3 140 1 81 1 340 5 127 1 331 1 176 1 297 2 378 2 299 1 380 1 237 1 150 1 
358 1 214 1 315 2 316 2 88 6 136 2 339 1 263 2 291 1 140 1 321 8 340 14 99 3 176 2 243 11 146 1 297 1 299 2 223 1 351 1 155 3 232 1 157 2 81 1 160 11 331 2 130 4 39 1 378 4 195 1 380 2 212 1 44 1 
134 1 88 1 49 1 69 1 200 1 50 1 94 1 117 1 263 1 140 1 291 1 321 1 340 2 72 2 119 1 98 1 174 1 323 1 176 1 221 1 146 1 297 1 177 1 299 1 226 1 270 1 302 1 327 2 18 1 308 1 59 1 157 1 38 1 130 1 331 1 378 2 195 1 132 1 
134 1 47 1 88 13 89 2 49 2 200 1 136 2 94 1 50 2 139 1 291 1 140 3 340 27 98 2 243 6 146 1 297 3 299 3 302 1 18 1 306 2 249 2 351 6 353 2 308 2 157 3 253 2 160 6 109 2 163 1 315 2 316 7 69 2 360 2 262 2 117 1 263 3 321 14 72 3 174 2 176 3 221 1 177 1 223 2 122 1 226 2 270 1 327 3 274 1 81 5 191 1 127 1 331 3 130 6 39 1 378 6 195 1 380 5 237 1 132 2 
239 1 134 1 88 1 49 3 69 2 200 1 363 1 94 1 50 2 288 1 263 2 140 2 321 1 291 1 340 2 141 1 72 1 176 2 221 2 268 1 146 1 177 8 299 2 344 1 270 7 302 1 327 1 18 8 182 1 156 1 157 2 190 1 128 1 331 2 107 1 84 1 378 4 335 2 132 2 
134 1 315 1 316 1 88 2 200 1 136 1 263 1 140 1 321 1 340 3 72 1 176 1 243 1 298 1 299 1 223 1 227 1 302 1 327 1 351 1 352 1 157 1 81 1 160 1 130 1 331 1 378 2 195 1 380 1 
326 1 315 1 316 1 156 1 157 1 263 1 140 1 321 2 340 2 160 1 130 1 331 1 176 1 39 1 243 1 378 2 299 1 380 1 
316 1 351 1 88 2 156 1 157 1 263 1 140 1 340 2 81 1 160 1 373 1 130 1 331 1 176 1 243 1 378 2 299 1 223 1 
315 1 316 2 88 2 136 1 263 1 321 2 140 1 340 4 176 1 243 2 299 1 223 1 351 1 156 1 157 1 81 1 160 2 331 1 130 2 39 1 378 2 380 1 
326 1 315 1 316 1 157 1 263 1 140 1 321 2 340 2 160 1 130 1 331 1 176 1 39 1 243 1 268 1 378 2 299 1 380 1 
316 1 351 1 88 2 157 1 263 1 140 1 340 2 81 1 160 1 373 1 130 1 331 1 176 1 243 1 268 1 378 2 299 1 223 1 
315 1 316 2 88 2 136 1 263 1 321 2 140 1 340 4 176 1 243 2 268 1 299 1 223 1 351 1 157 1 81 1 160 2 331 1 130 2 39 1 378 2 380 1 
315 1 316 2 88 2 136 1 263 1 321 2 140 1 340 4 176 1 243 2 299 1 223 1 351 1 157 1 81 1 160 2 331 1 130 2 39 1 378 2 380 1 
88 1 69 1 49 1 360 1 50 1 263 1 321 1 140 1 291 1 340 2 72 1 98 1 174 1 176 1 146 1 221 1 297 1 177 1 299 1 226 1 270 1 327 1 18 1 308 1 157 1 331 1 378 2 132 1 
88 1 69 1 49 1 50 1 263 1 321 1 140 1 291 1 340 2 171 1 72 1 98 1 174 1 176 1 146 1 221 1 297 1 177 1 299 1 270 1 327 1 18 1 231 1 157 1 189 1 331 1 378 2 132 1 
315 1 316 2 88 2 136 1 263 1 321 2 140 1 340 4 176 1 243 2 299 1 223 1 351 1 157 1 81 1 160 2 331 1 130 2 39 1 378 2 380 1 195 1 
315 1 88 2 316 2 69 1 49 1 360 1 136 1 50 1 263 1 321 2 140 1 340 4 141 1 72 1 98 1 174 1 176 1 243 2 223 1 177 1 299 1 226 1 270 1 327 1 18 1 351 1 308 1 157 1 81 1 160 2 130 2 331 1 39 1 109 1 378 2 380 1 132 1 
134 1 315 1 88 1 316 1 200 1 115 1 136 1 263 1 140 1 321 2 340 3 72 1 176 1 243 1 223 1 298 1 299 1 302 1 327 1 352 1 157 1 81 1 160 1 331 1 130 1 39 1 378 2 195 1 380 1 
22 1 214 1 67 1 315 3 88 10 316 6 68 2 92 1 136 3 321 9 340 19 99 1 176 2 204 1 299 2 223 3 245 1 305 1 351 3 155 2 157 2 188 1 81 3 333 1 332 2 331 2 39 3 378 4 380 3 212 1 
357 1 22 1 24 1 67 1 214 2 315 3 316 4 88 12 68 1 136 3 137 1 321 14 340 26 292 2 99 2 176 3 204 2 299 3 223 2 245 1 305 1 351 2 155 2 307 1 157 3 37 1 188 2 81 2 332 4 331 3 39 2 378 6 380 3 113 1 
357 1 22 1 24 1 214 3 67 1 315 4 47 1 88 21 316 8 68 1 89 1 92 1 136 4 262 1 137 1 321 20 340 41 292 1 99 3 176 3 204 2 299 3 223 4 245 1 305 1 249 1 351 4 181 1 155 4 307 1 157 3 37 1 188 1 81 5 127 1 332 4 331 3 39 4 378 6 380 5 212 1 237 1 113 1 
357 1 22 1 24 1 214 3 67 1 315 4 47 1 88 18 316 7 68 1 89 1 92 1 136 4 262 1 137 1 321 20 340 38 292 2 99 3 176 4 204 2 299 4 223 3 245 1 305 1 249 1 351 4 181 1 155 4 307 1 157 4 37 1 188 1 81 4 127 1 332 4 331 4 39 3 378 8 380 5 212 1 237 1 113 1 
357 1 22 1 24 1 214 2 67 1 315 7 47 1 88 25 316 14 68 1 89 1 136 7 262 1 137 1 321 27 340 52 292 1 99 4 176 2 204 1 299 2 223 7 245 1 305 1 249 1 351 7 155 4 307 1 157 2 37 1 188 1 81 8 127 1 332 4 331 2 39 7 378 4 380 8 212 2 237 1 113 1 44 2 
260 1 173 1 25 1 10 1 334 1 100 1 379 1 319 1 197 1 13 1 
371 1 138 1 
260 1 173 1 334 1 100 1 218 1 261 1 379 1 42 1 13 1 
259 1 260 1 206 1 25 1 314 1 230 1 319 1 173 1 372 1 100 1 334 1 64 1 110 2 41 1 379 1 103 1 197 1 13 1 
259 1 260 1 206 1 25 1 314 1 230 1 319 1 173 1 372 1 100 1 334 1 64 1 110 2 41 1 379 1 103 1 197 1 13 1 
259 1 260 1 206 1 25 1 314 1 230 1 319 1 173 1 372 1 100 1 334 1 64 1 110 2 41 1 379 1 103 1 197 1 13 1 
281 1 135 1 159 1 
281 1 135 1 159 1 
342 1 97 1 
281 1 342 1 97 1 
213 1 215 1 
260 1 213 1 166 1 134 2 240 1 215 1 200 2 138 1 72 2 173 1 100 1 145 1 297 1 103 1 13 1 302 2 303 1 327 2 206 1 210 1 371 1 372 1 334 1 41 1 110 1 379 1 196 1 
135 1 159 1 
281 1 342 1 97 1 
88 1 49 1 69 1 50 1 263 1 140 1 321 1 291 1 340 2 72 2 176 1 146 1 177 2 299 1 344 1 300 1 270 2 302 2 327 2 124 1 18 2 125 1 157 1 190 1 106 1 331 1 129 1 378 2 335 2 195 1 132 1 
18 2 363 1 50 1 185 2 95 1 126 1 62 1 82 1 141 1 322 1 193 1 244 1 148 1 177 2 32 1 336 1 246 1 132 1 270 2 
18 1 363 1 50 1 185 2 95 1 126 1 62 1 82 1 322 1 63 1 244 1 148 1 177 1 32 1 246 1 270 1 132 1 
18 1 49 1 69 1 50 1 288 1 95 1 290 1 128 1 267 1 193 1 221 1 177 1 132 1 270 1 
18 1 363 1 50 1 185 2 95 1 126 1 62 1 82 1 322 1 193 1 244 1 148 1 177 1 32 1 336 1 246 1 132 1 270 1 
101 1 
341 1 314 1 180 1 343 1 222 1 33 1 150 1 
314 2 48 1 27 1 116 1 169 1 318 1 7 1 203 1 343 1 222 1 75 1 33 1 103 1 187 1 372 1 356 1 133 1 
285 1 48 2 49 3 136 1 50 1 7 6 98 1 144 1 343 3 149 2 103 2 18 1 306 1 104 1 108 1 356 2 66 1 164 1 314 3 315 1 217 1 69 1 116 2 318 2 364 1 365 3 221 1 74 3 33 4 177 1 75 3 223 1 270 1 368 1 183 1 187 2 81 1 372 2 235 1 380 1 132 2 133 1 
357 1 24 1 214 1 314 5 315 2 48 2 136 2 318 1 116 2 137 1 7 6 365 5 99 1 343 5 74 5 222 2 33 8 75 3 223 2 103 1 368 1 155 1 307 1 183 2 184 1 187 2 81 2 372 1 376 1 211 1 356 2 380 2 133 1 65 1 113 1 
163 1 134 1 48 1 89 1 200 1 262 1 116 1 118 1 264 1 72 1 343 2 33 2 324 1 103 1 302 1 327 1 274 1 249 1 276 1 352 1 183 2 187 1 278 1 81 1 372 1 376 1 356 1 380 2 
180 1 314 1 48 1 116 1 187 1 341 1 343 1 222 1 356 1 33 1 
306 1 315 2 314 5 183 2 136 2 81 2 7 10 365 5 343 5 376 1 74 5 75 5 223 2 33 5 380 2 
372 1 314 1 222 1 318 1 103 1 133 1 
284 1 26 2 48 2 49 1 69 1 50 1 116 2 318 4 288 1 5 1 343 2 221 2 177 4 33 2 103 3 270 4 368 2 35 1 18 4 184 2 187 1 372 3 161 1 128 1 356 2 236 1 313 1 132 1 133 2 
134 2 88 1 69 1 49 1 200 2 360 1 71 1 50 1 118 1 263 1 291 1 140 1 340 1 72 3 174 1 98 1 176 1 221 1 297 1 299 1 177 1 226 1 270 1 302 2 327 3 18 1 352 2 308 1 157 1 331 1 378 2 132 1 
368 1 314 4 48 1 116 1 184 1 187 1 7 4 365 2 343 2 74 2 222 2 75 2 356 1 33 1 237 1 
23 1 260 1 334 1 
260 1 154 1 215 1 334 1 319 1 
23 1 260 1 334 1 
23 1 260 1 334 1 
260 1 334 1 112 1 
260 1 334 1 112 1 
260 1 334 1 112 1 
260 1 334 1 
173 1 379 1 
47 1 316 7 88 8 89 2 262 2 321 9 340 17 292 1 176 2 299 2 274 1 351 4 249 2 157 2 81 3 127 1 331 2 39 3 378 4 380 3 237 1 
88 2 47 1 351 2 316 2 249 1 89 1 262 1 321 3 340 5 81 1 127 1 380 1 237 1 150 1 
315 1 351 1 88 2 316 2 136 1 157 1 321 2 81 1 340 4 256 1 331 1 176 1 39 1 223 1 378 2 299 1 380 1 
214 1 315 1 351 1 88 4 316 2 155 2 136 1 321 3 81 1 340 7 99 1 39 1 223 1 380 1 212 1 
358 1 315 2 47 1 88 12 316 7 89 2 136 2 262 2 321 13 340 25 292 1 99 2 176 1 223 2 299 1 274 1 249 2 351 5 155 2 157 1 81 5 127 1 331 1 39 2 378 2 380 5 212 1 237 1 44 1 
340 1 88 1 155 1 
340 1 99 1 321 1 
306 1 315 1 88 3 316 3 351 2 136 1 157 1 321 3 340 6 81 1 256 1 331 1 176 1 39 1 299 1 378 2 223 1 380 1 
357 1 24 1 214 1 315 2 88 6 316 2 136 2 137 1 321 6 340 12 99 1 176 1 299 1 223 2 245 1 351 1 155 1 307 1 157 1 81 2 331 1 39 1 378 2 380 2 113 1 
249 1 88 3 351 1 316 2 89 1 262 1 321 3 340 6 81 1 39 1 380 1 
316 2 351 1 88 2 47 1 89 1 262 1 157 1 321 1 340 3 292 1 127 1 331 1 176 1 39 1 378 2 299 1 325 1 
274 1 351 3 316 5 88 5 249 1 89 2 157 1 262 2 321 5 340 10 81 2 331 1 176 1 39 2 299 1 378 2 380 2 245 1 
315 1 316 1 157 1 321 2 340 2 331 1 176 1 39 1 378 2 299 1 380 1 245 1 
315 1 351 1 88 2 316 2 136 1 157 1 321 2 81 1 340 4 331 1 176 1 39 1 223 1 378 2 299 1 380 1 245 1 
88 2 351 1 316 2 89 1 92 1 157 3 262 1 321 1 340 3 292 1 331 3 176 3 39 1 378 6 299 3 245 1 325 1 
214 1 315 2 47 1 88 15 316 9 89 2 287 1 92 1 136 2 262 2 321 16 340 31 292 1 73 1 99 3 176 4 299 4 223 2 245 1 274 1 249 2 351 5 155 3 157 4 254 1 81 5 127 1 256 1 331 4 39 4 378 8 380 5 237 1 
214 1 88 7 47 1 316 5 89 2 262 2 321 8 340 15 99 1 176 1 299 1 245 1 274 1 351 4 249 2 155 1 157 1 81 3 127 1 331 1 39 1 378 2 380 3 237 1 113 1 
214 1 315 1 47 1 88 8 316 6 89 2 136 1 262 2 321 10 340 18 99 1 176 2 299 2 245 1 274 1 249 2 351 4 155 2 157 2 81 3 127 1 256 1 331 2 39 2 378 4 380 4 212 1 237 1 113 1 
357 1 24 1 214 1 315 2 47 1 88 13 316 7 89 2 136 2 262 2 137 1 321 13 340 26 292 1 99 1 176 3 299 3 223 2 245 1 274 1 249 2 351 5 155 1 307 1 157 3 81 5 127 1 256 1 331 3 39 2 378 6 380 5 237 1 113 1 
357 1 24 1 214 1 315 2 47 1 88 10 316 9 89 2 136 2 262 2 137 1 321 14 340 24 292 1 99 1 176 3 299 3 223 1 245 1 274 1 249 2 351 5 155 1 307 1 157 3 81 4 127 1 256 1 331 3 39 4 378 6 380 5 237 1 113 1 
214 1 88 7 47 1 316 5 89 2 262 2 321 8 340 15 99 1 176 1 299 1 245 1 274 1 351 4 249 2 155 1 157 1 81 3 127 1 331 1 39 1 378 2 380 3 237 1 113 1 
357 1 24 1 214 1 315 2 88 6 316 2 136 2 137 1 321 6 340 12 99 1 176 1 299 1 223 2 245 1 351 1 155 1 307 1 157 1 81 2 331 1 39 1 378 2 380 2 113 1 
357 1 24 1 214 1 315 2 47 1 88 11 316 7 89 2 136 2 262 2 137 1 321 14 340 25 292 2 99 1 176 4 299 4 223 1 245 1 274 1 249 2 351 5 155 1 307 1 157 4 81 4 127 1 256 1 331 4 39 2 378 8 380 5 237 1 113 1 
357 1 24 1 214 1 315 3 88 7 316 6 92 1 136 3 137 1 321 9 340 16 292 2 99 1 176 4 299 4 223 2 245 1 351 3 155 1 307 1 157 4 81 2 331 4 39 3 378 8 380 3 113 1 
88 4 47 1 351 3 316 6 249 1 89 3 262 3 321 3 81 1 340 7 127 2 39 3 380 1 
357 1 24 1 214 1 315 2 47 1 88 11 316 7 89 2 92 1 136 2 262 2 137 1 321 14 340 25 292 2 99 1 176 4 299 4 223 1 245 1 274 1 249 2 351 5 155 1 307 1 157 4 81 4 127 1 331 4 39 2 378 8 380 5 237 1 113 1 
327 1 72 1 297 1 36 1 96 1 186 1 302 1 
327 1 370 1 36 1 96 1 186 1 72 1 310 1 40 1 53 1 297 1 228 1 302 1 
128 1 18 1 49 1 69 1 221 1 50 1 288 1 177 1 132 1 270 1 150 1 
327 2 134 1 18 1 49 1 69 1 200 1 308 1 94 1 50 1 72 2 98 1 174 1 221 1 297 1 177 1 132 1 270 1 302 1 
163 1 134 2 26 1 69 2 49 3 200 1 50 1 94 1 72 2 120 1 174 1 98 2 220 1 297 1 177 1 270 1 302 2 327 2 18 1 275 1 308 1 132 1 238 1 
163 1 134 2 26 1 69 2 49 3 200 1 50 1 94 1 72 2 120 1 174 1 98 2 220 1 297 1 177 2 270 2 302 2 327 2 18 2 275 1 58 1 231 1 132 1 238 1 
163 1 134 1 314 1 26 1 49 1 200 1 118 1 264 1 72 1 222 1 177 1 324 1 149 1 103 1 270 1 302 1 327 1 18 1 276 1 352 1 372 1 194 1 
163 1 66 1 134 1 314 1 26 1 49 1 200 1 364 1 318 1 118 1 264 1 72 1 222 1 177 1 324 1 149 1 103 2 270 1 302 1 327 1 18 1 276 1 352 1 372 2 
239 1 18 1 50 1 177 1 132 1 270 1 
76 1 239 1 18 7 182 1 69 2 49 3 363 1 51 1 50 2 190 1 141 1 98 1 9 1 107 1 84 1 235 1 221 2 335 1 177 7 270 6 132 3 
134 1 47 1 88 6 89 2 49 1 200 1 94 1 50 1 140 2 340 13 141 1 98 1 299 2 297 3 302 1 18 1 351 4 249 2 353 1 308 1 157 2 106 1 109 1 163 1 316 5 69 1 360 1 262 2 263 2 321 7 72 2 174 1 176 2 177 1 226 1 270 1 327 2 274 1 81 3 191 1 127 1 331 2 39 1 378 4 195 1 380 3 237 1 132 1 
285 1 134 1 48 2 89 1 49 1 200 1 341 1 144 1 343 5 149 1 103 3 302 1 18 1 249 1 352 1 161 1 356 2 163 1 66 1 164 1 166 1 314 2 364 1 318 2 116 2 262 1 118 1 264 1 72 1 221 1 222 2 177 1 33 4 324 1 270 1 327 1 274 1 180 1 276 1 183 2 187 2 81 2 372 3 376 1 380 2 133 1 
239 1 18 2 104 1 69 1 49 2 50 1 141 1 280 1 98 1 235 1 177 2 270 2 132 2 
18 4 58 1 69 1 49 1 288 1 50 1 141 1 293 1 128 1 221 1 177 4 132 1 270 4 
76 1 18 2 26 1 216 1 69 1 49 1 51 1 50 1 98 1 295 1 177 2 224 1 270 2 132 2 
322 1 18 1 244 1 221 1 50 1 177 1 185 1 246 1 132 1 270 1 
124 1 18 2 69 1 49 1 363 1 50 1 141 1 190 1 177 2 270 2 132 1 
18 5 26 1 69 2 49 3 288 1 50 2 141 1 190 1 293 1 128 1 107 1 84 1 221 1 177 5 270 4 132 2 
18 5 26 1 69 2 49 3 288 1 50 2 141 1 190 1 293 1 128 1 84 1 221 1 177 5 270 4 43 1 132 2 
327 2 134 1 18 1 49 1 69 1 200 1 231 1 94 1 50 1 72 2 98 1 174 1 221 1 297 1 177 1 132 1 270 1 302 1 
76 1 18 1 26 1 69 1 49 1 51 1 50 1 98 1 9 1 235 1 177 1 270 1 132 2 
202 1 70 1 297 1 338 1 301 1 
163 1 166 1 314 1 168 1 70 2 364 1 338 2 120 1 201 1 372 2 202 2 220 1 222 1 85 1 297 1 345 1 103 2 205 1 301 1 
327 1 72 1 129 1 202 1 125 1 338 1 300 1 301 1 302 1 
168 1 205 1 301 1 
52 1 56 1 152 1 150 1 
271 1 52 1 56 1 152 1 375 1 277 1 320 1 
77 1 229 1 277 1 
271 3 56 1 152 1 165 1 79 1 19 1 277 3 320 1 52 1 366 2 375 1 131 1 
198 1 271 2 52 1 56 1 152 1 273 1 375 1 277 2 320 1 
271 1 82 1 52 1 354 1 179 1 322 1 375 1 79 1 185 1 277 1 320 1 
271 1 52 1 56 1 375 1 79 1 277 1 320 1 
271 1 56 2 152 1 375 1 79 1 277 1 320 1 
271 2 56 1 79 1 241 1 277 2 320 2 52 1 242 1 375 2 30 1 
271 3 114 1 198 2 56 1 152 1 0 1 79 1 277 3 320 1 354 1 52 2 375 1 348 1 
271 2 198 1 56 1 151 1 152 1 79 1 185 2 277 2 320 1 62 1 52 1 82 1 322 1 375 1 246 1 
271 4 198 2 56 1 152 1 273 1 0 1 79 1 277 4 320 2 354 1 52 2 375 2 347 1 
271 1 52 1 56 1 152 1 375 1 79 1 277 1 320 1 
198 2 271 4 56 2 152 2 165 1 0 1 46 1 277 4 320 1 354 1 52 3 366 1 375 1 131 1 
271 2 198 1 56 1 152 1 79 1 2 1 277 2 320 1 52 1 375 1 147 1 121 1 
271 3 55 1 56 1 152 1 165 2 79 1 277 3 320 1 52 1 366 2 375 1 131 1 
52 2 1 1 359 1 175 2 
271 1 375 1 79 1 93 1 277 1 320 1 
198 1 271 2 52 1 56 1 152 1 375 1 79 1 277 2 348 1 320 1 
143 1 
271 1 52 1 56 1 152 1 375 1 79 1 277 1 320 1 
198 1 271 3 56 1 152 1 79 1 277 3 320 1 52 1 366 1 375 1 348 1 
52 1 354 1 0 1 46 1 
52 1 56 1 

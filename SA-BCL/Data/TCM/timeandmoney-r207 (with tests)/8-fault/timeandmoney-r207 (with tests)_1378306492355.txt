#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 171 (112,354) (112,354) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 171 (112,354) (112,354) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 171 (112,354) (112,354) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 171 (112,354) (112,354) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArrayIndexOutOfBoundsException 171 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException 171 47 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException 171 47 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 346 56 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 282 59 7 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z | OPERATOR | 1616 | != -> ==
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 0
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4786 | = null
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 4646 | return null
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3115 | < -> <=
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 7034 | return null
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3455 | < -> >
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7926 | stmt -> ;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
349 4 98 1 321 2 354 1 83 9 305 2 281 6 359 2 236 1 214 1 263 3 294 1 188 1 112 1 219 1 366 1 265 2 70 4 190 1 370 1 134 2 135 1 44 2 343 2 171 1 272 9 
349 4 98 1 321 2 354 1 83 9 305 2 281 6 359 2 236 1 214 1 263 3 294 1 188 1 112 1 219 1 366 1 265 2 70 4 190 1 370 1 134 2 135 1 44 2 343 2 171 1 272 9 
349 4 98 1 321 2 354 1 83 9 305 2 281 6 359 2 236 1 214 1 263 3 294 1 188 1 112 1 219 1 366 1 265 2 70 4 190 1 370 1 134 2 135 1 44 2 343 2 171 1 272 9 
349 3 98 1 321 2 354 1 83 7 305 2 281 4 359 2 236 1 214 1 263 2 294 1 188 1 112 1 219 1 366 1 265 2 70 3 190 1 370 1 134 2 44 2 343 1 171 1 272 7 
349 2 321 1 263 1 219 1 294 1 83 4 265 1 70 2 305 1 281 3 134 1 135 1 44 1 343 2 171 1 272 4 
349 1 215 1 321 1 131 1 219 1 151 1 313 1 83 2 190 1 305 1 370 1 134 1 255 1 44 1 272 2 359 1 
349 2 215 1 321 2 263 1 131 1 219 1 366 1 83 3 70 1 305 2 281 1 272 3 359 1 
236 1 47 1 349 4 214 1 321 2 263 3 294 1 219 1 366 1 265 1 83 9 314 1 70 4 305 2 281 7 134 1 135 1 44 1 343 2 171 1 272 9 359 1 
236 1 47 1 349 4 214 1 321 2 263 3 294 1 219 1 366 1 265 1 83 9 314 1 70 4 305 2 281 7 134 1 135 1 44 1 343 2 171 1 272 9 359 1 
299 1 193 1 195 1 
172 1 362 2 193 1 
88 2 372 2 158 1 141 2 60 2 337 2 367 2 288 1 
48 1 347 1 6 1 350 1 274 1 158 1 141 3 81 1 102 1 279 1 355 1 227 1 202 1 87 1 284 2 88 2 329 1 230 1 60 2 231 2 288 1 107 1 360 1 164 2 92 1 217 1 110 1 109 2 365 1 337 3 367 2 113 2 341 1 269 1 222 1 371 1 372 2 
139 1 88 1 372 1 141 1 308 1 325 1 60 1 337 1 367 1 288 1 
299 1 38 1 28 1 247 1 120 1 322 1 141 1 337 1 340 1 58 1 308 1 193 1 60 1 145 1 
299 1 28 1 247 2 120 1 141 1 367 1 337 1 340 1 88 1 372 1 58 2 308 1 193 1 60 1 145 1 
211 1 247 1 58 1 233 1 297 1 
299 1 211 1 247 2 239 1 40 1 58 2 193 1 297 1 
211 1 247 1 58 1 
139 1 247 1 141 1 325 1 367 1 337 1 88 1 372 1 58 1 308 1 27 1 60 1 288 1 297 1 
193 1 
299 1 211 1 247 2 239 1 123 1 58 2 193 1 297 1 
334 1 299 1 245 2 211 2 261 1 247 5 239 1 63 1 323 1 351 2 277 1 24 1 204 2 58 5 374 1 103 1 193 1 146 1 297 2 
158 1 195 1 
30 1 158 2 141 2 352 1 337 2 367 1 88 1 372 1 60 2 
11 1 318 1 34 1 
360 1 164 1 217 1 158 1 109 1 110 1 141 1 337 1 102 1 279 1 355 1 227 1 202 1 228 1 269 1 231 1 
360 1 157 1 164 1 217 1 110 1 109 1 141 2 102 1 367 1 337 2 34 1 279 1 355 1 227 1 202 1 269 1 372 1 60 1 231 1 244 1 
157 2 158 1 322 1 141 5 100 1 352 1 367 4 337 5 88 1 372 4 96 1 286 1 60 5 244 1 
139 1 372 2 285 1 141 2 308 1 60 2 337 2 367 2 
157 1 88 1 372 3 158 1 141 3 60 3 337 3 367 3 
139 1 372 1 141 1 308 1 60 1 337 1 367 1 
30 1 88 1 372 1 141 1 308 1 352 1 60 1 337 1 367 1 
48 1 347 1 197 1 157 1 28 1 247 1 6 1 120 1 158 1 141 4 81 1 352 1 102 1 279 1 355 1 227 1 202 1 284 2 88 2 58 1 329 1 308 1 230 1 60 3 145 1 231 1 288 1 107 1 360 1 164 1 92 1 217 1 364 1 110 1 109 1 337 4 367 3 113 1 340 1 222 1 269 1 371 1 372 3 244 1 
157 1 372 1 158 1 322 1 141 2 286 1 60 2 337 2 367 1 
157 2 28 1 247 1 364 1 120 1 141 3 352 1 367 3 337 3 340 1 88 1 372 3 58 1 308 1 193 1 145 1 60 3 128 1 244 1 
157 1 141 2 352 1 367 2 337 2 34 1 88 1 372 2 60 2 318 1 
360 1 164 1 217 1 158 1 109 1 110 1 141 1 337 1 102 1 279 1 355 1 227 1 202 1 269 1 231 1 
164 1 217 1 158 1 109 1 110 1 141 1 179 1 337 1 102 1 355 1 227 1 202 1 269 1 306 1 231 1 
48 1 347 1 320 1 92 1 6 1 81 1 34 1 11 1 53 1 113 2 284 2 192 1 371 2 89 1 329 1 330 1 318 1 234 1 298 1 
340 1 372 1 285 1 141 1 308 1 60 1 337 1 367 1 
2 1 335 1 
2 1 335 1 
148 1 91 1 
148 1 91 1 
148 1 91 1 
221 1 2 1 335 1 
221 1 2 1 335 1 
2 1 41 1 335 1 
148 1 91 1 2 2 144 1 335 2 74 1 
221 1 2 1 335 1 
2 1 335 1 296 1 
2 1 335 1 296 1 
2 1 335 1 296 1 
16 1 2 1 210 1 335 1 247 1 39 1 158 1 141 2 64 1 311 1 65 1 67 1 200 1 337 2 367 2 41 1 339 1 12 1 54 1 115 1 372 2 58 1 259 1 60 2 
2 2 210 2 335 2 247 2 64 2 311 3 166 1 65 2 8 2 369 1 12 1 327 1 155 1 115 2 72 1 121 1 58 2 193 1 74 1 
134 1 44 1 265 1 
134 1 44 1 151 1 
238 1 268 1 134 3 32 1 151 1 265 2 
238 1 117 1 134 2 32 1 151 1 265 1 
238 1 134 2 32 2 151 1 265 1 
196 1 245 1 299 1 320 1 172 1 247 5 49 1 351 1 178 1 353 2 200 1 277 2 53 1 201 2 161 1 204 1 58 5 146 1 211 1 16 1 362 3 37 1 239 1 39 1 19 1 21 1 368 1 316 1 374 3 193 2 46 2 297 4 
196 3 299 1 245 2 320 3 172 3 3 1 247 9 49 2 323 1 351 2 277 6 53 3 201 6 204 2 58 9 146 1 233 5 16 4 211 6 362 9 61 1 239 1 336 1 19 2 20 1 21 3 368 3 114 5 95 1 316 1 342 1 374 8 193 5 46 6 297 7 
299 1 245 1 196 1 320 1 172 2 247 3 49 1 178 1 351 1 323 1 353 1 277 2 53 1 201 2 204 1 58 3 16 1 37 1 362 4 19 1 21 1 368 1 374 3 193 3 46 2 297 2 
299 1 245 1 196 2 320 2 172 3 3 1 247 4 49 1 351 1 323 1 178 1 353 2 277 4 53 2 201 4 204 1 58 4 16 2 362 7 37 1 19 1 20 1 21 2 368 2 95 1 374 5 193 4 46 4 297 3 
355 1 198 1 195 1 
355 1 346 1 
43 1 
355 1 110 1 102 1 
355 1 300 1 
355 1 102 1 
355 3 76 1 122 1 110 1 198 2 102 1 
320 1 291 1 274 4 111 1 66 1 68 1 368 1 295 1 153 2 113 7 203 1 25 1 371 3 136 1 89 2 357 1 330 3 
320 1 291 1 274 4 111 1 66 1 68 1 368 1 295 1 153 2 113 7 203 1 25 1 371 3 136 1 89 2 357 1 330 3 
320 1 291 1 274 4 111 1 66 1 68 1 368 1 295 1 153 2 113 7 203 1 25 1 371 3 136 1 89 2 357 1 330 3 90 1 
196 3 320 4 6 1 274 16 81 1 303 1 84 1 53 3 203 2 284 2 89 5 357 1 329 1 330 10 209 1 289 3 291 1 92 1 93 1 111 1 66 2 68 2 21 3 368 4 266 1 153 3 295 5 113 31 243 1 25 1 71 4 371 15 136 2 273 1 
209 1 320 1 291 1 92 2 6 2 274 5 81 2 111 1 66 1 68 1 368 1 152 1 295 1 153 2 113 9 203 1 284 4 371 4 136 1 328 1 89 3 357 1 329 2 330 4 
349 1 348 1 321 1 199 1 83 2 202 1 281 1 305 1 13 1 254 1 14 1 205 1 309 1 231 1 359 1 164 1 215 1 292 1 217 1 187 1 109 1 131 1 219 1 151 1 265 1 338 1 268 1 134 2 44 1 272 2 
116 1 349 1 348 1 321 1 199 1 83 3 202 1 305 1 281 2 13 1 254 1 257 1 205 1 231 1 359 1 130 1 164 1 215 1 292 1 217 1 187 1 109 1 131 1 151 1 265 1 338 1 268 1 134 2 44 1 272 3 
116 1 349 1 83 2 202 1 281 2 13 1 254 1 257 1 205 1 231 1 359 1 164 1 215 1 292 1 217 1 187 1 109 1 131 1 151 1 265 1 338 1 268 1 134 2 44 1 272 2 
130 1 97 1 164 1 186 1 321 1 217 1 31 1 187 2 109 1 142 1 102 1 83 1 355 1 304 1 338 2 202 1 305 1 269 1 254 2 271 1 231 1 272 1 359 2 
348 1 321 1 199 1 83 1 202 1 305 1 13 1 254 1 14 1 257 1 205 1 231 1 359 1 164 1 292 1 217 1 187 1 109 1 219 1 151 1 265 1 338 1 268 1 134 2 44 1 272 1 
194 1 
0 2 172 2 97 1 99 2 225 1 173 1 322 1 141 1 174 2 102 1 277 2 52 1 283 2 182 1 58 5 287 1 231 2 60 1 145 1 146 1 105 1 333 2 15 2 186 1 239 3 109 2 19 1 69 1 337 1 340 1 193 2 299 1 245 1 28 1 301 1 247 5 120 1 159 1 351 1 355 1 202 1 204 1 308 1 129 1 260 2 211 6 262 1 362 2 164 2 38 1 217 1 312 1 269 2 315 4 374 2 
28 1 301 1 247 3 120 1 173 1 225 1 141 1 322 1 123 1 58 3 308 1 60 1 145 1 15 1 211 2 262 1 38 1 239 1 337 1 69 1 340 1 315 2 
299 1 28 1 301 1 247 3 120 1 173 1 225 1 141 1 322 1 123 1 58 3 308 1 60 1 145 1 260 1 211 1 262 1 38 1 239 1 337 1 69 1 340 1 315 3 193 1 
299 1 28 1 301 1 247 3 120 1 173 1 225 1 141 1 322 1 123 1 58 3 308 1 60 1 145 1 333 1 15 1 260 1 211 2 262 1 38 1 239 1 337 1 69 1 340 1 315 3 193 1 
0 2 245 1 299 5 172 2 28 1 301 1 247 5 99 2 173 1 225 1 120 1 78 1 322 1 141 1 174 2 351 1 277 1 52 1 283 2 123 1 204 1 57 1 58 5 308 1 60 1 145 1 105 1 146 1 185 1 333 4 260 4 15 4 211 7 262 1 38 1 62 1 149 1 239 3 69 1 337 1 340 1 315 6 374 1 193 5 
0 2 172 2 225 1 173 1 99 2 141 1 322 1 174 2 277 1 52 1 283 2 58 4 287 1 145 1 60 1 105 1 146 1 333 2 15 2 239 2 337 1 69 1 340 1 193 2 245 1 299 1 28 1 301 1 247 4 120 1 351 1 204 1 308 1 260 2 211 4 262 1 38 1 362 2 315 4 374 1 
0 2 299 1 245 1 172 2 28 1 301 1 247 4 99 2 120 1 173 1 225 1 141 1 322 1 174 2 351 1 277 1 52 1 283 2 204 1 57 1 58 4 308 1 60 1 145 1 105 1 146 1 333 2 260 2 15 2 211 4 262 1 38 1 62 1 239 2 149 1 337 1 69 1 340 1 315 4 374 1 193 1 
0 2 299 1 245 1 172 2 28 1 301 1 247 4 99 2 120 1 173 1 225 1 141 1 322 1 174 2 351 1 277 1 52 1 283 2 204 1 57 1 58 4 308 1 60 1 145 1 105 1 146 1 333 2 260 2 15 2 211 4 262 1 38 1 62 1 239 2 149 1 337 1 69 1 340 1 315 4 374 1 193 1 
0 2 299 1 245 1 138 1 28 1 301 1 247 4 120 1 173 1 225 1 141 1 322 1 351 1 277 1 52 1 283 2 204 1 258 2 57 1 58 4 308 1 60 1 145 1 146 1 333 2 260 2 15 2 237 2 211 4 262 1 362 2 38 1 239 2 165 1 337 1 69 1 340 1 315 4 374 1 193 1 224 1 
0 2 299 1 245 1 172 2 28 1 301 1 247 4 99 2 120 1 173 1 225 1 141 1 322 1 174 2 351 1 277 1 52 1 283 2 204 1 57 1 58 4 308 1 60 1 145 1 105 1 146 1 185 1 333 3 15 3 260 3 211 5 262 1 38 1 62 1 239 2 149 1 337 1 69 1 340 1 315 5 374 1 193 1 
0 2 299 1 245 1 172 2 28 1 301 1 247 4 99 2 120 1 173 1 225 1 141 1 322 1 174 2 351 1 277 1 52 1 283 2 204 1 57 1 58 4 308 1 60 1 145 1 105 1 146 1 185 1 333 3 15 3 260 3 211 5 262 1 38 1 62 1 239 2 149 1 337 1 69 1 340 1 315 5 374 1 193 1 
0 2 225 1 173 1 141 1 322 1 277 1 52 1 283 2 58 4 287 1 145 1 60 1 146 1 333 2 237 2 15 2 239 2 337 1 69 1 340 1 193 1 245 1 299 1 28 1 301 1 247 4 120 1 351 1 204 1 258 2 308 1 260 2 211 4 262 1 38 1 362 2 165 1 315 4 374 1 
48 1 347 1 320 1 6 1 274 3 158 2 81 1 34 1 11 1 203 1 284 2 89 2 357 1 329 1 330 2 234 1 291 1 92 1 111 1 368 1 153 1 113 6 371 3 136 1 195 1 318 1 
48 1 196 3 347 2 6 2 274 10 158 1 81 2 303 1 50 1 34 12 84 2 11 12 86 1 284 4 329 2 230 1 330 2 232 1 212 1 289 3 92 2 216 1 365 1 21 3 368 3 295 2 113 15 71 4 371 5 318 3 
48 1 347 1 157 1 6 1 274 1 158 1 275 1 141 2 81 1 102 1 101 1 279 1 355 1 227 1 202 1 86 1 228 1 284 2 329 1 231 1 60 1 230 1 360 1 164 1 92 1 217 1 110 1 109 1 365 1 337 2 367 1 113 2 269 1 372 1 371 1 170 1 318 1 244 1 
48 2 6 2 274 3 141 2 175 1 102 1 279 1 227 1 11 2 284 4 329 2 230 1 231 1 60 1 330 3 109 1 110 1 21 1 337 2 295 2 113 5 244 1 196 1 347 2 157 1 81 2 34 2 355 1 36 1 86 1 202 1 89 1 208 1 360 1 164 1 92 2 217 1 94 1 367 1 368 1 133 1 269 1 222 1 371 2 372 1 318 2 
319 1 48 2 347 2 157 1 97 1 6 2 350 2 274 1 141 1 81 2 276 1 102 2 355 3 202 2 284 4 257 1 163 1 329 2 309 1 60 1 231 8 230 1 234 1 213 1 164 7 363 1 92 2 186 1 217 2 109 8 365 1 337 1 367 1 113 2 269 2 372 1 371 1 26 1 223 1 
48 1 196 1 347 1 320 1 6 1 274 1 141 1 81 1 352 1 34 1 11 1 53 1 86 1 88 1 284 2 89 1 329 1 330 1 60 1 92 1 21 1 367 1 337 1 368 1 113 3 168 1 372 1 371 2 318 1 
48 1 196 1 347 1 92 1 6 1 274 2 81 1 368 1 34 1 295 1 11 1 85 1 113 2 284 2 329 1 330 1 318 1 234 1 
48 1 347 1 320 1 92 1 6 1 81 1 34 1 11 1 53 1 113 2 284 2 192 1 371 2 89 1 329 1 330 1 318 1 234 1 
196 1 48 1 347 1 320 1 6 1 274 2 81 1 34 2 11 2 53 1 284 2 89 1 329 1 330 2 234 1 92 1 21 1 368 1 295 1 113 4 371 2 318 2 
319 1 48 1 196 1 347 1 92 1 6 1 274 2 81 1 368 1 34 1 295 1 11 1 85 1 113 2 284 2 329 1 330 1 318 1 
319 1 48 1 347 1 320 1 92 1 6 1 81 1 34 1 11 1 53 1 113 2 284 2 192 1 371 2 89 1 329 1 330 1 318 1 
319 1 48 1 196 1 347 1 92 1 6 1 274 2 81 1 21 1 368 1 34 1 295 1 11 1 113 2 284 2 329 1 330 1 318 1 
48 1 196 1 347 1 92 1 6 1 274 2 81 1 21 1 368 1 34 1 295 1 11 1 113 2 284 2 329 1 330 1 318 1 
48 1 347 1 6 1 274 1 158 1 141 1 81 1 102 1 279 1 355 1 227 1 202 1 284 2 329 1 231 1 230 1 360 1 164 1 92 1 217 1 110 1 109 1 365 1 337 1 113 2 222 1 269 1 371 1 
48 1 347 1 118 1 6 1 274 1 158 1 141 1 81 1 179 1 102 1 355 1 227 1 202 1 284 2 306 1 329 1 231 1 230 1 164 1 92 1 217 1 110 1 109 1 365 1 337 1 113 2 269 1 371 1 
48 1 196 1 347 1 92 1 6 1 274 2 81 1 21 1 368 1 34 1 295 1 11 1 113 2 86 1 284 2 329 1 330 1 318 1 
196 1 48 1 347 1 6 1 274 2 141 1 175 1 81 1 102 1 34 1 279 1 355 1 11 1 227 1 202 1 284 2 329 1 309 1 330 1 231 1 360 1 164 1 92 1 217 1 110 1 109 1 21 1 368 1 337 1 295 1 113 2 222 1 318 1 
48 1 196 1 347 1 6 1 274 2 141 1 81 1 352 1 34 1 35 1 11 1 86 1 88 1 284 2 329 1 330 1 60 1 92 1 21 1 367 1 337 1 368 1 295 1 113 2 372 1 318 1 
196 2 320 2 6 2 274 6 176 1 81 2 303 1 177 1 143 1 84 1 10 1 252 1 53 2 284 4 162 1 328 1 89 1 356 1 329 2 330 2 289 1 92 2 21 2 368 2 167 1 295 1 113 13 71 2 371 7 
196 3 320 2 6 3 274 14 176 4 81 3 177 2 303 2 143 2 7 1 53 2 282 1 284 6 162 1 328 1 89 2 356 1 329 3 59 1 330 4 209 2 289 2 92 3 18 1 21 3 368 3 167 1 23 1 267 1 295 2 113 26 71 2 371 12 45 1 
320 5 6 3 274 20 176 4 177 1 143 2 7 1 53 4 282 1 284 6 328 1 329 3 330 8 59 1 289 3 291 1 18 1 111 1 21 4 22 1 23 1 295 4 153 1 113 41 71 4 196 4 81 3 303 3 84 1 252 1 203 1 162 1 89 4 356 1 357 1 209 1 92 3 368 5 167 1 267 1 371 21 136 1 45 1 
196 4 320 4 6 4 274 20 176 4 81 4 303 3 177 1 7 1 143 2 84 1 252 1 53 3 203 1 282 1 284 8 162 1 328 1 89 4 356 1 357 1 329 4 59 1 330 7 209 2 289 3 291 1 92 4 18 1 111 1 21 4 368 5 22 1 167 1 23 1 267 1 153 1 295 3 113 38 71 4 371 18 136 1 45 1 
196 7 320 8 6 2 274 27 176 4 81 2 303 2 177 1 7 1 143 1 84 2 53 7 203 1 282 1 284 4 162 1 328 1 89 7 356 1 357 1 329 2 59 1 330 14 209 1 212 2 289 4 291 1 92 2 18 1 111 1 21 7 368 8 167 1 23 1 267 1 153 1 295 7 113 52 71 4 371 25 136 1 45 1 
210 1 2 1 327 1 335 1 115 1 124 1 64 1 166 1 65 1 74 1 
41 1 339 1 
210 1 2 1 4 1 335 1 115 1 218 1 64 1 65 1 310 1 
221 1 80 1 
144 1 125 1 296 1 
2 1 210 1 335 1 247 1 64 1 311 2 166 1 65 1 8 1 369 1 12 1 327 1 115 1 72 1 121 1 58 1 193 1 74 1 
2 1 210 1 335 1 247 1 64 1 311 2 166 1 65 1 8 1 369 1 12 1 327 1 115 1 72 1 121 1 58 1 193 1 74 1 
2 1 210 1 335 1 247 1 64 1 311 2 166 1 65 1 8 1 369 1 12 1 327 1 115 1 72 1 121 1 58 1 193 1 74 1 
221 1 144 1 80 1 
221 1 144 1 80 1 
125 1 296 1 
144 1 125 1 296 1 
54 1 67 1 
2 1 247 1 158 1 141 2 200 1 8 1 54 1 58 1 259 1 126 1 60 2 210 1 16 1 335 1 39 1 64 1 311 1 65 1 67 1 337 2 367 2 339 1 41 1 72 1 115 1 372 2 297 1 
48 1 347 1 6 1 350 2 274 1 141 2 33 1 81 1 102 1 355 1 202 1 86 1 284 2 163 1 329 1 231 2 331 1 60 2 230 1 207 1 164 2 92 1 217 1 108 1 109 2 365 1 264 1 337 2 113 2 371 1 223 1 
164 2 292 1 217 1 79 1 109 2 151 1 199 1 265 1 338 1 242 1 268 1 202 1 134 2 44 1 183 1 257 1 205 1 309 1 231 2 
164 1 292 1 217 1 79 1 109 1 151 1 199 1 265 1 338 1 268 1 202 1 160 1 134 2 44 1 257 1 205 1 231 1 
164 1 97 1 186 1 217 1 31 1 109 1 102 1 355 1 338 1 202 1 269 1 183 1 231 1 147 1 
164 1 292 1 217 1 79 1 109 1 151 1 199 1 265 1 338 1 242 1 268 1 202 1 134 2 44 1 183 1 257 1 205 1 231 1 
226 1 
334 1 299 1 24 1 374 1 193 1 195 1 277 1 
245 1 299 1 172 1 247 1 99 1 174 1 351 1 277 1 204 1 58 1 105 1 146 1 211 1 362 1 239 1 374 1 193 2 
346 1 245 1 164 1 217 1 110 1 109 1 351 1 82 1 102 1 355 1 202 2 269 1 122 1 204 1 56 1 231 1 146 1 
245 2 196 1 299 1 172 3 320 1 247 1 303 1 351 2 7 1 277 3 9 1 201 4 53 1 282 1 204 2 58 1 59 1 146 2 332 1 211 1 289 1 362 6 239 1 18 1 21 1 368 1 71 1 374 5 45 1 193 4 46 4 
245 1 320 1 139 1 247 1 141 1 351 1 325 1 277 2 203 1 88 1 204 1 58 1 308 1 60 1 146 1 288 1 332 2 149 1 111 1 337 1 368 2 367 1 372 1 136 1 169 1 156 1 374 2 27 1 
334 1 245 1 299 1 351 1 277 1 24 1 204 1 374 1 193 1 146 1 
196 2 172 5 320 2 362 10 94 1 21 2 368 2 277 5 201 5 53 2 156 1 374 5 193 5 46 5 332 2 
299 1 211 1 247 1 239 1 58 1 193 1 
245 2 97 1 247 3 159 1 323 1 351 2 102 1 277 2 355 1 202 1 182 2 204 2 58 3 231 4 146 1 106 1 211 4 164 4 186 1 293 2 217 1 239 2 240 1 109 4 312 1 19 2 42 1 269 2 374 2 
48 1 347 1 6 1 158 1 141 3 81 1 102 1 279 1 355 1 227 1 202 1 284 2 88 2 329 1 230 1 231 1 60 2 288 1 107 1 360 1 164 1 92 1 217 1 109 1 110 1 337 3 367 2 113 1 269 1 222 1 371 1 372 2 
245 1 299 2 172 2 362 4 351 1 19 1 277 2 153 1 201 2 182 1 204 1 374 1 193 4 46 2 146 1 
210 1 137 1 64 1 
210 1 137 1 64 1 
77 1 210 1 64 1 166 1 67 1 
210 1 137 1 64 1 
210 1 64 1 241 1 
210 1 64 1 241 1 
210 1 64 1 241 1 
210 1 64 1 
2 1 335 1 
209 1 320 1 291 1 92 2 6 2 274 4 81 2 111 1 368 1 153 1 295 1 113 8 203 1 284 4 371 4 136 1 89 2 329 2 357 1 330 3 
153 1 320 1 113 6 203 1 291 1 371 3 274 3 136 1 89 2 357 1 111 1 330 2 368 1 195 1 
196 1 320 1 92 1 6 1 274 2 81 1 21 1 368 1 295 1 53 1 113 4 284 2 371 2 89 1 329 1 330 2 358 1 
196 1 320 1 289 1 274 3 303 1 21 1 368 1 84 1 295 1 53 1 113 7 71 2 371 4 89 1 330 2 
196 2 320 3 6 2 274 11 302 1 81 2 50 1 84 1 53 2 203 2 284 4 89 5 357 1 329 2 330 9 209 2 289 2 212 1 291 1 92 2 111 1 21 2 368 3 153 1 295 4 113 23 71 2 371 12 136 2 
113 1 71 1 371 1 
113 1 289 1 274 1 
196 1 320 1 92 1 6 1 274 3 81 1 94 1 21 1 368 1 295 1 53 1 113 6 284 2 371 3 89 2 329 1 330 3 358 1 
196 2 320 2 6 1 274 6 81 1 303 1 7 1 53 2 282 1 284 2 328 1 89 1 329 1 330 2 59 1 289 1 92 1 18 1 21 2 368 2 295 1 113 12 71 1 371 6 45 1 
320 1 274 3 111 1 368 1 295 1 113 6 203 1 371 3 136 1 89 1 330 2 
209 1 291 1 92 1 6 1 274 1 302 1 81 1 295 1 113 3 203 1 284 2 371 2 136 1 89 1 357 1 329 1 330 2 
320 2 92 1 6 1 274 5 81 1 111 1 368 2 295 2 113 10 203 2 284 2 371 5 328 1 169 1 136 2 89 3 329 1 330 5 
196 1 92 1 6 1 274 2 81 1 368 1 295 1 113 2 284 2 328 1 329 1 330 1 
196 1 320 1 92 1 6 1 274 2 81 1 21 1 368 1 295 1 53 1 113 4 284 2 371 2 328 1 89 1 329 1 330 2 
209 1 92 3 6 3 274 1 302 1 81 3 252 1 295 1 113 3 203 1 284 6 371 2 328 1 136 1 89 1 329 3 330 2 
196 3 320 5 6 5 274 16 302 1 81 5 303 1 84 1 252 1 53 3 203 3 284 10 328 1 89 7 357 1 329 5 330 12 358 1 209 2 289 3 291 1 92 5 93 1 111 2 21 3 368 5 153 1 295 5 113 34 243 1 71 4 371 18 136 3 273 1 
320 1 289 1 291 1 92 1 6 1 274 4 81 1 111 1 303 1 7 1 368 1 153 1 113 8 203 1 284 2 71 1 371 4 136 1 328 1 89 2 357 1 329 1 330 2 
196 1 320 1 6 2 274 6 81 2 303 1 7 1 84 1 203 1 284 4 328 1 89 2 357 1 329 2 330 3 358 1 289 1 291 1 92 2 111 1 21 1 368 2 153 1 295 1 113 11 71 2 371 5 136 1 
196 2 320 3 6 3 274 9 81 3 303 1 7 1 53 2 203 1 282 1 284 6 328 1 89 3 357 1 329 3 330 4 59 1 358 1 209 1 289 1 291 1 92 3 18 1 111 1 21 2 368 3 153 1 295 1 113 19 71 1 371 10 136 1 45 1 
196 2 320 2 6 3 274 10 81 3 303 1 7 1 53 1 203 1 282 1 284 6 328 1 89 3 357 1 329 3 330 5 59 1 358 1 209 1 289 1 291 1 92 3 18 1 111 1 21 2 368 3 153 1 295 2 113 17 71 1 371 7 136 1 45 1 
320 1 289 1 291 1 92 1 6 1 274 4 81 1 111 1 303 1 7 1 368 1 153 1 113 8 203 1 284 2 71 1 371 4 136 1 328 1 89 2 357 1 329 1 330 2 
196 2 320 2 6 1 274 6 81 1 303 1 7 1 53 2 282 1 284 2 328 1 89 1 329 1 330 2 59 1 289 1 92 1 18 1 21 2 368 2 295 1 113 12 71 1 371 6 45 1 
196 2 320 2 6 4 274 10 81 4 303 1 7 1 53 1 203 1 282 1 284 8 328 1 89 3 357 1 329 4 59 1 330 5 358 1 209 2 289 1 291 1 92 4 18 1 111 1 21 2 368 3 153 1 295 2 113 18 71 1 371 8 136 1 45 1 
196 3 320 2 6 4 274 9 81 4 303 1 7 1 252 1 53 2 282 1 284 8 328 1 89 3 329 4 59 1 330 6 209 2 289 1 92 4 18 1 21 3 368 3 295 3 113 16 71 1 371 7 45 1 
320 1 291 1 274 3 111 1 368 1 295 3 113 7 203 3 371 4 136 3 89 3 357 2 330 6 
196 2 320 2 6 4 274 10 81 4 303 1 7 1 252 1 53 1 203 1 282 1 284 8 328 1 89 3 357 1 329 4 59 1 330 4 209 2 289 1 291 1 92 4 18 1 111 1 21 2 368 3 153 1 295 1 113 18 71 1 371 8 136 1 45 1 
158 1 141 1 322 1 229 1 286 1 60 1 337 1 
158 1 322 1 141 1 150 1 324 1 251 1 337 1 220 1 191 1 229 1 286 1 60 1 
355 1 202 1 97 1 164 1 186 1 269 1 217 1 109 1 231 1 102 1 195 1 
157 1 164 1 217 1 158 1 110 1 109 1 141 2 102 1 367 1 337 2 279 1 355 1 227 1 202 1 269 1 372 1 60 1 231 1 
300 1 157 1 28 1 158 1 249 1 141 2 102 2 279 1 355 3 227 1 202 1 308 1 231 1 60 2 164 1 217 1 293 1 109 1 110 2 337 2 367 1 340 1 372 2 
300 1 157 1 28 1 158 1 249 1 141 2 250 1 179 1 102 2 355 3 227 1 202 1 308 1 231 2 60 2 164 2 217 1 293 1 109 2 110 2 337 2 367 1 340 1 372 2 
346 1 299 1 139 1 164 1 247 1 293 1 109 1 141 1 325 1 337 1 367 1 355 1 280 1 88 1 372 1 58 1 308 1 60 1 27 1 193 1 231 1 288 1 
346 1 299 1 211 1 300 1 164 3 247 2 293 1 217 1 110 1 249 1 109 3 250 1 198 1 102 1 355 4 202 1 269 1 256 1 58 2 193 1 145 1 231 3 
202 1 164 1 217 1 109 1 26 1 231 1 
1 1 213 1 164 6 363 1 350 1 217 2 109 7 110 1 276 1 326 1 102 2 355 3 202 3 269 2 122 1 257 1 26 1 223 1 309 1 231 7 344 1 
48 2 320 1 347 2 157 1 6 2 274 3 158 2 141 2 81 2 175 1 102 1 34 1 279 1 355 1 11 1 227 1 202 1 86 1 203 1 284 4 89 2 357 1 329 2 309 1 330 2 331 1 60 1 231 1 208 1 360 1 164 1 291 1 92 2 217 1 110 1 109 1 111 1 368 1 337 2 367 1 153 1 113 6 222 1 371 3 372 1 136 1 318 1 
75 1 346 1 299 1 245 2 247 3 351 2 198 1 277 1 355 2 204 2 256 1 58 3 206 1 231 1 145 1 146 2 334 1 361 1 211 2 164 1 239 1 109 1 24 1 42 1 269 1 374 1 193 1 297 1 
164 1 217 1 109 1 110 1 198 1 82 1 102 1 355 1 202 2 43 1 122 1 26 1 231 1 
235 1 164 4 97 1 186 1 217 1 109 4 250 1 102 1 355 1 202 1 269 1 309 1 231 4 
1 1 164 2 293 1 217 1 109 2 110 1 326 1 102 1 355 1 154 1 202 2 104 1 231 2 73 1 
202 1 164 1 134 1 269 1 217 1 44 1 109 1 205 1 151 1 231 1 
164 2 108 1 217 1 109 2 102 1 355 1 202 1 257 1 223 1 309 1 231 2 
235 1 213 1 97 1 164 4 186 1 293 1 217 2 109 5 276 1 102 2 355 3 202 2 269 1 223 1 309 1 231 5 
235 1 97 1 164 4 246 1 186 1 293 1 217 2 109 5 276 1 102 2 355 3 202 2 269 1 223 1 309 1 231 5 
157 1 164 1 217 1 158 1 110 1 109 1 141 2 179 1 102 1 367 1 337 2 355 1 227 1 202 1 269 1 372 1 60 1 231 1 
1 1 164 1 293 1 217 1 109 1 110 1 326 1 102 1 355 1 202 2 122 1 231 1 344 1 
51 1 290 1 158 1 127 1 345 1 
299 1 28 1 290 2 247 2 364 1 248 1 120 1 158 1 51 1 340 1 55 1 58 2 308 1 127 2 193 1 145 1 317 1 297 1 345 2 
51 1 290 1 141 1 33 1 60 1 264 1 337 1 207 1 345 1 
51 1 55 1 248 1 
349 1 215 1 131 1 195 1 
349 1 305 1 215 1 321 1 131 1 272 1 83 1 
187 1 359 1 83 1 
321 1 215 1 131 1 219 1 189 1 83 1 180 1 305 1 270 1 272 1 
349 1 281 1 305 1 215 1 321 1 343 1 131 1 272 2 83 2 
349 1 321 1 219 1 294 1 83 1 265 1 70 1 305 1 134 1 44 1 272 1 
349 1 305 1 215 1 321 1 219 1 272 1 83 1 
305 1 215 2 321 1 131 1 219 1 272 1 83 1 
349 1 140 1 215 1 321 2 219 1 83 2 132 1 253 1 305 2 272 2 
236 1 349 2 214 1 215 1 321 1 263 1 131 1 219 1 83 3 70 1 305 1 281 2 272 3 
349 1 215 1 321 1 131 1 219 1 151 1 83 2 265 1 268 1 305 1 281 1 134 2 44 1 373 1 272 2 
349 2 215 1 321 2 263 1 131 1 219 1 83 4 70 1 305 2 281 2 135 1 343 1 272 4 
349 1 305 1 215 1 321 1 131 1 219 1 272 1 83 1 
349 2 215 2 321 1 263 1 131 2 189 1 83 3 180 2 70 1 281 2 305 1 270 1 272 3 
349 1 17 1 215 1 321 1 131 1 219 1 83 2 314 1 305 1 281 1 181 1 272 2 
29 1 321 1 215 1 131 1 219 1 189 1 83 1 180 1 305 1 272 1 
349 2 5 2 184 1 307 1 
305 1 321 1 119 1 219 1 272 1 83 1 
236 1 349 1 281 1 305 1 215 1 321 1 131 1 219 1 272 2 83 2 
278 1 
349 1 305 1 215 1 321 1 131 1 219 1 272 1 83 1 
236 1 349 1 321 1 215 1 131 1 219 1 83 3 190 1 281 1 305 1 272 3 
180 1 70 1 349 1 263 1 
349 1 215 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> !=
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 2841 | return null
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> -
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2985 | if (x) -> if (!x)
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONSTANT | 10556 | 0 -> 1
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | RETURN | 3180 | return null
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
355 1 208 1 28 2 369 2 211 4 18 2 60 2 8 1 183 6 145 1 348 1 268 1 286 3 246 2 103 1 349 1 280 9 134 4 21 2 364 1 312 1 79 2 273 1 149 1 112 9 150 1 
355 1 208 1 28 2 369 2 211 4 18 2 60 2 8 1 183 6 145 1 348 1 268 1 286 3 246 2 103 1 349 1 280 9 134 4 364 1 21 2 312 1 79 2 273 1 149 1 112 9 150 1 
355 1 208 1 28 2 369 2 211 4 18 2 60 2 8 1 183 6 145 1 348 1 268 1 286 3 246 2 103 1 349 1 280 9 134 4 364 1 21 2 312 1 79 2 273 1 149 1 112 9 150 1 
355 1 208 1 28 2 369 2 211 3 18 2 60 2 8 1 183 4 145 1 348 1 268 1 286 2 246 2 103 1 349 1 280 7 134 3 364 1 21 2 79 1 273 1 149 1 112 7 150 1 
28 1 355 1 369 1 18 1 211 2 183 3 348 1 286 1 246 1 280 4 134 2 21 1 312 1 79 2 112 4 150 1 
208 1 28 1 369 1 30 1 18 1 60 1 253 1 145 1 246 1 280 2 134 1 334 1 147 1 272 1 112 2 150 1 
28 2 30 1 18 2 60 1 211 1 183 1 286 1 280 3 349 1 134 2 147 1 112 3 150 1 
355 1 28 2 99 1 369 1 18 2 60 1 211 4 183 7 348 1 268 1 246 1 286 3 280 9 349 1 134 4 21 1 312 1 79 2 51 1 149 1 112 9 150 1 
355 1 28 2 99 1 369 1 18 2 60 1 211 4 183 7 348 1 268 1 246 1 286 3 280 9 349 1 134 4 21 1 312 1 79 2 51 1 149 1 112 9 150 1 
75 1 33 1 309 1 
309 1 328 1 78 2 
264 2 377 2 206 2 295 2 365 1 347 2 354 2 276 1 
264 2 285 1 209 2 241 1 45 1 20 1 214 1 89 2 164 1 340 1 365 1 191 1 55 1 119 1 276 1 121 1 193 1 98 1 124 1 198 1 295 3 125 2 127 1 319 2 347 2 130 1 258 1 36 1 377 3 206 2 109 1 13 2 139 1 325 1 354 2 113 1 140 1 
264 1 377 1 206 1 295 1 44 1 365 1 331 1 162 1 347 1 354 1 
42 1 216 1 343 1 3 1 377 1 75 1 295 1 80 1 324 1 175 1 38 1 162 1 347 1 309 1 
264 1 42 1 75 1 295 1 347 1 162 1 309 1 206 1 377 1 3 2 80 1 324 2 175 1 38 1 354 1 
294 1 277 1 3 1 324 1 132 1 
265 1 277 1 3 2 75 1 324 2 309 1 40 1 132 1 
277 1 3 1 324 1 
264 1 17 1 295 1 44 1 331 1 162 1 347 1 132 1 3 1 206 1 377 1 324 1 365 1 354 1 
309 1 
265 1 277 1 3 2 75 1 324 2 309 1 116 1 132 1 
265 1 277 2 75 1 345 1 181 1 100 1 212 1 243 1 160 1 307 2 309 1 132 2 9 1 311 1 3 5 336 2 324 5 263 2 178 1 
33 1 276 1 
264 1 295 2 129 1 347 2 117 1 377 2 206 1 354 1 276 2 
52 1 5 1 24 1 
285 1 193 1 209 1 98 1 295 1 125 1 241 1 319 1 184 1 36 1 377 1 340 1 119 1 276 1 121 1 113 1 
193 1 285 1 264 1 209 1 98 1 241 1 295 2 125 1 319 1 347 1 36 1 375 1 377 2 50 1 340 1 52 1 119 1 354 1 121 1 113 1 
264 3 206 1 377 3 295 3 50 1 347 3 354 3 276 1 
264 1 377 1 295 1 44 1 162 1 347 1 354 1 
264 1 377 1 206 1 295 1 129 1 162 1 347 1 354 1 117 1 
285 1 264 3 209 1 42 1 241 1 45 1 162 1 20 1 214 1 89 2 49 1 117 1 164 1 3 1 50 1 340 1 365 1 191 1 119 1 316 1 276 1 121 1 193 1 98 1 295 4 125 1 319 1 347 3 258 1 36 1 375 1 206 2 377 4 80 1 109 1 324 1 175 1 13 1 139 1 38 1 325 1 354 3 113 1 140 1 
264 1 216 1 90 1 377 2 295 2 50 1 347 2 354 1 276 1 
264 3 42 1 295 3 162 1 347 3 309 1 256 1 117 1 49 1 375 1 206 1 3 1 377 3 50 2 80 1 324 1 175 1 38 1 354 3 
264 2 377 2 206 1 295 2 50 1 52 1 347 2 24 1 354 2 117 1 
285 1 193 1 209 1 98 1 295 1 125 1 241 1 319 1 36 1 377 1 340 1 119 1 276 1 113 1 121 1 
285 1 193 1 209 1 295 1 125 1 241 1 319 1 36 1 377 1 289 1 338 1 340 1 276 1 113 1 121 1 
85 1 360 1 45 1 69 1 48 1 89 2 290 1 5 2 52 2 24 2 191 1 26 1 127 2 101 1 258 1 109 1 282 1 139 2 13 4 352 1 325 1 176 1 140 1 15 1 
264 1 158 1 377 1 295 1 38 1 162 1 347 1 354 1 
264 4 57 1 295 5 347 5 117 1 375 1 216 1 90 1 377 5 206 1 50 2 73 1 354 4 276 1 
264 2 158 1 377 2 295 2 44 1 162 1 347 2 354 2 
329 1 200 1 
329 1 200 1 
10 1 120 1 
10 1 120 1 
10 1 120 1 
329 1 200 1 25 1 
329 1 305 1 200 1 
194 1 329 2 10 1 126 1 200 2 120 1 
329 1 200 1 25 1 
329 1 200 1 25 1 
329 1 200 1 238 1 
329 1 200 1 238 1 
329 1 200 1 238 1 
293 1 329 2 141 1 16 1 251 2 344 1 225 1 126 1 299 2 372 1 200 2 309 1 310 1 376 2 72 2 3 2 313 2 324 2 122 3 
329 1 264 2 251 1 305 1 225 1 295 2 358 1 299 1 347 2 200 1 70 1 374 1 72 1 377 2 3 1 231 1 324 1 313 1 154 1 220 1 368 1 354 2 276 1 122 1 
21 1 369 1 246 1 
369 1 272 1 246 1 
21 2 7 1 314 1 272 1 246 3 275 1 
21 1 287 1 314 1 272 1 246 2 275 1 
21 1 314 1 272 1 246 2 275 2 
156 1 265 1 330 2 85 1 143 1 69 1 307 1 309 2 311 3 3 5 336 1 339 2 189 1 368 1 222 1 277 1 345 2 75 1 168 1 59 1 101 1 171 1 78 3 132 4 374 1 324 5 12 1 154 1 263 1 176 1 178 1 328 1 179 2 
156 3 265 1 359 1 85 3 267 1 243 1 69 3 307 2 309 5 332 1 311 8 3 9 336 2 247 1 339 6 189 1 294 5 277 6 345 6 151 1 75 1 168 2 59 3 101 3 102 1 32 5 78 9 374 4 132 7 324 9 12 2 263 2 176 3 178 1 328 3 179 6 
264 1 330 1 156 1 17 1 44 1 85 1 143 1 243 1 331 1 69 1 162 1 307 1 309 3 311 3 3 3 336 1 339 2 365 1 222 1 75 1 168 1 345 2 295 1 59 1 101 1 347 1 78 4 132 2 374 1 106 1 377 1 206 1 324 3 12 1 263 1 176 1 354 1 328 2 179 2 
330 2 44 1 143 1 85 2 243 1 331 1 332 1 3 4 336 1 339 4 247 1 345 4 295 1 59 2 101 2 347 1 106 1 206 1 12 1 263 1 354 1 264 1 156 2 17 1 267 1 69 2 162 1 307 1 309 4 311 5 365 1 222 1 168 1 75 1 78 7 132 3 374 2 377 1 324 4 176 2 328 3 179 4 
300 1 33 1 121 1 
166 1 121 1 
93 1 
121 1 113 1 
300 2 193 1 341 1 83 1 121 3 113 1 
193 1 121 1 113 1 
53 1 121 1 
196 1 85 1 127 4 87 1 170 1 69 1 19 1 185 1 279 1 133 1 35 2 290 2 261 1 139 3 13 7 315 1 26 3 
196 1 85 1 127 4 87 1 170 1 69 1 19 1 185 1 279 1 133 1 35 2 290 2 261 1 139 3 13 7 315 1 26 3 
196 1 318 1 85 1 127 4 87 1 170 1 69 1 19 1 185 1 279 1 133 1 35 2 290 2 261 1 139 3 13 7 315 1 26 3 
156 3 85 4 87 2 19 1 69 4 185 5 89 2 290 5 92 1 188 1 315 1 191 1 26 10 196 1 342 1 127 16 101 3 170 2 279 1 258 1 35 3 133 2 261 2 174 3 323 1 207 1 350 1 109 1 139 15 14 4 13 31 176 3 327 1 140 1 
85 1 1 1 87 1 69 1 19 1 185 1 89 4 290 3 315 1 191 2 26 4 342 1 196 1 127 5 170 1 258 2 35 2 133 1 261 1 109 2 13 9 139 4 326 1 140 2 
285 1 209 1 241 1 18 1 183 1 246 2 269 1 21 1 147 1 187 1 272 1 150 1 367 1 28 1 97 1 369 1 125 1 58 1 30 1 60 1 296 1 319 1 297 1 7 1 371 1 62 1 280 2 134 1 283 1 112 2 
285 1 209 1 241 1 18 1 183 2 47 1 246 2 269 1 21 1 147 1 187 1 272 1 367 1 28 1 97 1 369 1 125 1 58 1 30 1 60 1 7 1 296 1 319 1 61 1 62 1 280 3 134 1 283 1 112 3 304 1 
285 1 209 1 241 1 183 2 246 2 269 1 21 1 147 1 187 1 272 1 367 1 97 1 369 1 125 1 58 1 30 1 60 1 296 1 319 1 7 1 61 1 280 2 134 1 112 2 304 1 
285 1 209 1 241 1 115 1 18 1 86 1 47 1 362 1 269 2 340 1 121 1 28 1 97 2 125 1 60 2 296 2 319 1 280 1 63 1 233 1 379 1 112 1 113 1 
285 1 28 1 209 1 97 1 369 1 241 1 58 1 125 1 60 1 18 1 7 1 319 1 296 1 371 1 62 1 246 2 280 1 269 1 21 1 187 1 283 1 272 1 112 1 367 1 150 1 304 1 
303 1 
285 1 42 1 241 1 86 1 88 2 3 5 336 1 148 1 4 1 340 2 95 1 195 1 343 1 345 2 295 1 199 2 347 1 257 1 153 1 104 4 12 1 263 1 113 1 265 3 209 2 159 1 115 1 161 1 307 1 162 1 309 2 311 2 216 1 121 1 123 2 277 6 75 1 167 1 224 2 125 2 319 2 31 1 373 2 228 1 78 2 281 1 377 1 378 2 80 1 324 5 175 1 38 1 82 2 178 1 328 2 
265 1 42 1 343 1 277 2 295 1 199 1 162 1 347 1 228 1 116 1 257 1 104 2 153 1 216 1 3 3 377 1 148 1 80 1 324 3 175 1 38 1 95 1 
265 1 42 1 343 1 277 1 75 1 295 1 162 1 347 1 309 1 228 1 116 1 257 1 104 3 153 1 216 1 3 3 377 1 148 1 378 1 80 1 324 3 175 1 38 1 95 1 
265 1 42 1 162 1 309 1 116 1 216 1 3 3 148 1 95 1 343 1 277 2 75 1 295 1 347 1 199 1 228 1 257 1 153 1 104 3 377 1 80 1 378 1 324 3 175 1 38 1 82 1 
264 1 265 1 42 1 17 1 43 1 44 1 331 1 307 1 162 2 213 1 309 1 116 1 311 1 216 1 3 3 336 1 148 1 4 1 365 1 95 1 343 1 277 3 75 1 345 1 278 1 295 2 347 2 199 2 228 1 257 1 204 1 153 1 104 2 206 1 377 2 80 1 324 3 175 1 38 1 263 1 354 1 178 1 82 2 
265 2 42 1 307 1 162 1 309 2 88 2 311 1 216 1 3 4 148 1 336 1 4 1 95 1 123 2 343 1 277 4 75 1 167 1 224 2 345 1 295 1 31 1 199 2 347 1 373 2 228 1 78 2 257 1 153 1 104 4 377 1 378 2 80 1 324 4 175 1 38 1 263 1 82 2 178 1 328 2 
264 1 42 1 17 1 44 1 331 1 162 2 307 1 309 1 311 1 216 1 3 2 148 1 336 1 4 1 365 1 95 1 343 1 75 1 345 1 278 1 295 2 347 2 228 1 257 1 153 1 104 2 204 1 206 1 377 2 80 1 324 2 175 1 38 1 263 1 354 1 178 1 
264 1 42 1 17 1 44 1 331 1 162 2 307 1 309 1 311 1 216 1 3 2 148 1 336 1 4 1 365 1 95 1 343 1 75 1 345 1 278 1 295 2 347 2 228 1 257 1 153 1 104 2 204 1 206 1 377 2 80 1 324 2 175 1 38 1 263 1 354 1 178 1 
265 2 42 1 162 1 245 1 307 1 309 1 88 2 311 1 216 1 288 1 3 4 148 1 336 1 95 1 192 1 123 2 343 1 277 4 75 1 345 1 295 1 31 1 199 2 347 1 228 1 78 2 173 2 257 1 153 1 104 4 320 1 377 1 378 2 80 1 66 2 324 4 175 1 38 1 263 1 82 2 178 1 
264 1 42 1 17 1 43 1 44 1 331 1 307 1 162 2 309 1 311 1 216 1 3 2 336 1 148 1 4 1 365 1 95 1 343 1 277 1 75 1 345 1 278 1 295 2 347 2 199 1 228 1 257 1 153 1 104 3 204 1 206 1 377 2 80 1 378 1 324 2 175 1 38 1 263 1 354 1 178 1 82 1 
264 1 42 1 17 1 43 1 44 1 331 1 307 1 162 2 309 1 311 1 216 1 3 2 336 1 148 1 4 1 365 1 95 1 343 1 277 1 75 1 345 1 278 1 295 2 347 2 199 1 228 1 257 1 153 1 104 3 204 1 206 1 377 2 80 1 378 1 324 2 175 1 38 1 263 1 354 1 178 1 82 1 
265 2 42 1 307 1 162 1 309 1 88 2 311 1 216 1 3 4 148 1 336 1 95 1 123 2 343 1 277 4 75 1 167 1 345 1 295 1 31 1 199 2 347 1 228 1 78 2 173 2 257 1 153 1 104 4 377 1 320 1 378 2 80 1 66 2 324 4 175 1 38 1 263 1 82 2 178 1 
85 1 45 1 87 1 19 1 69 1 89 2 290 2 52 1 5 1 24 1 315 1 191 1 276 2 26 2 196 1 127 3 33 1 258 1 35 1 261 1 109 1 13 6 139 3 325 1 140 1 15 1 
156 2 182 1 144 1 85 1 45 2 69 2 185 1 214 1 89 4 290 1 92 1 5 11 52 11 24 4 191 2 276 1 26 2 223 1 198 1 127 8 101 2 77 1 258 2 174 3 109 2 351 1 139 6 14 3 13 14 325 1 176 1 327 1 140 2 
285 1 264 1 209 1 210 1 241 1 182 1 45 1 184 1 214 1 89 2 50 1 340 1 24 1 119 1 191 1 276 1 121 1 193 1 98 1 125 1 295 2 198 1 319 1 127 1 347 1 36 1 64 1 375 1 258 1 377 2 109 1 139 1 13 2 325 1 155 1 354 1 113 1 140 1 
285 2 180 2 182 1 241 2 85 3 87 1 45 3 185 4 89 6 186 1 290 4 50 1 340 1 5 7 52 7 191 3 193 2 196 1 98 2 198 1 295 3 101 2 298 2 254 1 347 1 202 2 203 1 258 3 205 2 261 1 109 3 13 20 354 1 304 1 113 2 264 1 209 3 156 2 19 1 69 3 214 1 164 2 315 1 24 7 119 2 276 2 121 2 26 8 125 3 319 3 127 10 35 1 375 1 36 2 377 3 139 10 325 3 176 2 140 3 
264 1 285 2 157 1 209 8 241 2 115 1 45 2 86 1 308 1 214 1 89 4 2 1 50 1 340 2 219 1 191 2 121 3 124 2 295 1 125 7 198 1 297 1 319 8 127 1 347 1 258 2 377 1 111 1 109 2 110 1 13 2 139 1 235 1 325 2 354 1 304 1 113 2 15 1 140 2 
264 1 156 1 182 1 85 1 45 1 69 1 89 2 117 1 290 1 52 1 5 1 24 1 191 1 26 1 295 1 101 1 127 1 347 1 258 1 206 1 377 1 108 1 109 1 13 3 139 2 325 1 176 1 354 1 140 1 
101 1 127 2 45 1 69 1 185 1 89 2 258 1 109 1 13 2 352 1 52 1 5 1 325 1 24 1 191 1 26 1 15 1 140 1 
85 1 45 1 89 2 258 1 290 1 109 1 282 1 13 2 139 2 52 1 5 1 325 1 24 1 176 1 191 1 26 1 15 1 140 1 
156 1 85 1 45 1 69 1 185 1 89 2 290 1 5 2 52 2 24 2 191 1 26 2 127 2 101 1 258 1 109 1 13 4 139 2 325 1 176 1 140 1 15 1 
101 1 127 2 45 1 69 1 185 1 89 2 258 1 110 1 109 1 13 2 352 1 52 1 5 1 325 1 24 1 191 1 26 1 140 1 
85 1 45 1 89 2 258 1 290 1 110 1 109 1 282 1 13 2 139 2 52 1 5 1 325 1 24 1 176 1 191 1 26 1 140 1 
156 1 85 1 45 1 69 1 185 1 89 2 290 1 5 2 52 2 24 2 191 1 26 2 127 2 101 1 258 1 109 1 110 1 13 4 139 2 325 1 176 1 140 1 
156 1 85 1 45 1 69 1 185 1 89 2 290 1 5 2 52 2 24 2 191 1 26 2 127 2 101 1 258 1 109 1 13 4 139 2 325 1 176 1 140 1 
285 1 209 1 241 1 45 1 214 1 89 2 164 1 340 1 119 1 191 1 276 1 121 1 193 1 98 1 198 1 125 1 295 1 127 1 319 1 36 1 258 1 377 1 109 1 13 2 139 1 325 1 113 1 140 1 
285 1 209 1 241 1 45 1 214 1 215 1 89 2 289 1 338 1 340 1 191 1 276 1 121 1 193 1 198 1 125 1 295 1 127 1 319 1 36 1 258 1 377 1 109 1 13 2 139 1 325 1 113 1 140 1 
156 1 182 1 85 1 45 1 69 1 185 1 89 2 290 1 5 2 52 2 24 2 191 1 26 2 127 2 101 1 258 1 109 1 13 4 139 2 325 1 176 1 140 1 
285 1 209 1 156 1 241 1 85 1 45 1 69 1 185 1 89 2 164 1 290 1 52 2 5 2 24 2 119 1 191 1 121 1 26 2 193 1 98 1 125 1 295 1 127 2 101 1 319 1 297 1 298 1 36 1 258 1 377 1 109 1 139 2 13 4 325 1 176 1 113 1 140 1 
264 1 156 1 182 1 85 1 45 1 244 1 69 1 185 1 89 2 117 1 5 1 52 1 24 1 191 1 26 1 295 1 101 1 127 2 347 1 258 1 206 1 377 1 109 1 139 1 13 3 325 1 176 1 354 1 140 1 
67 1 156 3 68 1 114 1 85 3 1 1 69 3 185 3 89 4 290 3 291 2 92 1 54 1 191 2 26 6 226 2 127 9 101 3 252 1 255 1 258 2 321 1 174 1 109 2 14 2 139 10 13 19 176 3 327 1 140 2 
67 1 156 1 68 1 114 2 85 1 1 1 69 1 89 2 291 1 92 2 54 2 191 1 226 4 127 8 101 1 252 1 258 1 105 1 11 1 174 2 109 1 139 8 13 16 14 2 176 1 140 1 
67 1 156 2 68 1 114 1 85 2 1 1 69 2 185 2 89 4 290 1 291 1 92 3 54 2 191 2 26 3 6 1 226 4 127 11 101 2 252 1 105 1 258 2 11 1 321 1 174 3 109 2 14 4 139 12 13 23 176 2 327 1 140 2 
67 1 156 2 68 1 114 1 85 2 1 1 69 2 185 2 89 4 290 2 291 1 92 3 54 2 191 2 26 4 6 1 226 4 127 11 101 2 252 1 105 1 258 2 11 1 321 1 174 3 109 2 14 4 139 12 13 23 176 2 327 1 140 2 
67 1 156 5 68 1 114 1 85 8 87 3 1 1 19 3 69 8 185 5 89 2 290 8 291 1 92 2 315 3 54 1 191 1 26 13 196 3 223 2 226 4 127 27 101 5 252 1 35 3 105 1 258 1 11 1 261 3 174 4 109 1 14 4 139 24 13 51 176 5 327 2 140 1 
27 1 329 1 16 1 72 1 251 1 344 1 126 1 313 1 299 1 200 1 
305 1 220 1 
329 1 65 1 72 1 251 1 313 1 299 1 353 1 284 1 200 1 
329 1 141 1 16 1 251 1 344 1 225 1 126 1 299 1 372 1 200 1 309 1 310 1 376 1 72 1 3 1 324 1 313 1 122 2 
329 1 141 1 16 1 251 1 344 1 225 1 126 1 299 1 372 1 200 1 309 1 310 1 376 1 72 1 3 1 324 1 313 1 122 2 
329 1 141 1 16 1 251 1 344 1 225 1 126 1 299 1 372 1 200 1 309 1 310 1 376 1 72 1 3 1 324 1 313 1 122 2 
194 1 118 1 25 1 
194 1 118 1 25 1 
262 1 238 1 
194 1 262 1 238 1 
358 1 70 1 
141 1 329 1 264 2 305 1 358 1 70 1 72 1 3 1 313 1 220 1 368 1 276 1 122 1 251 1 295 2 299 1 347 2 200 1 131 1 132 1 374 1 376 1 377 2 231 1 324 1 154 1 354 2 
118 1 25 1 
194 1 262 1 238 1 
285 1 209 2 241 1 182 1 45 1 214 1 89 2 2 1 335 1 219 1 191 1 121 1 124 2 295 2 198 1 125 2 128 1 319 2 127 1 152 1 76 1 347 2 229 1 258 1 377 2 109 1 13 2 139 1 325 1 113 1 140 1 
285 1 209 2 197 1 369 1 241 1 125 2 58 1 7 1 319 2 297 1 62 1 246 2 269 1 21 1 138 1 22 1 272 1 367 1 304 1 
285 1 209 1 197 1 369 1 125 1 58 1 241 1 7 1 319 1 62 1 246 2 269 1 21 1 272 1 367 1 304 1 39 1 
285 1 209 1 241 1 125 1 115 1 319 1 86 1 163 1 63 1 269 1 340 1 138 1 121 1 113 1 
285 1 209 1 197 1 369 1 241 1 125 1 58 1 7 1 319 1 62 1 246 2 269 1 21 1 138 1 22 1 272 1 367 1 304 1 
370 1 
9 1 311 1 75 1 345 1 181 1 33 1 309 1 
265 1 307 1 309 2 311 1 3 1 336 1 4 1 277 1 345 1 224 1 75 1 373 1 78 1 324 1 263 1 178 1 328 1 
285 1 241 2 85 1 46 1 3 2 336 2 339 3 340 1 56 1 292 1 193 1 341 1 345 3 59 2 346 1 101 1 202 1 300 1 12 1 263 2 113 1 209 1 265 1 156 1 69 1 307 2 309 3 311 4 218 1 166 2 366 1 121 4 221 1 277 2 125 1 319 1 78 6 324 2 175 1 176 1 178 2 328 3 179 3 
264 1 17 1 44 1 331 1 162 1 307 1 309 2 311 2 336 1 339 2 92 1 365 1 75 1 345 2 295 1 59 1 347 1 201 1 78 2 106 1 281 1 377 1 206 1 11 1 174 1 12 1 14 1 263 1 354 1 178 1 328 1 179 2 
264 1 17 1 44 1 85 1 87 1 69 2 331 1 162 1 307 1 311 2 3 1 336 1 365 1 96 1 196 1 278 1 345 2 59 1 295 1 347 1 106 2 377 1 206 1 261 1 324 1 263 1 178 1 354 1 
9 1 311 1 75 1 345 1 181 1 336 1 263 1 307 1 309 1 178 1 
156 1 345 2 59 1 101 1 85 1 69 1 309 2 78 4 106 1 311 2 339 2 176 1 328 2 179 2 
265 1 3 1 277 1 75 1 324 1 309 1 
285 2 209 4 265 2 239 1 241 3 115 1 243 1 86 1 161 1 307 2 333 1 71 2 311 2 3 3 91 1 336 2 340 2 190 1 121 2 193 1 195 1 277 4 345 2 125 4 319 4 107 1 281 2 324 3 12 2 81 1 263 2 236 1 178 1 113 2 
264 2 285 1 209 1 241 1 45 1 20 1 214 1 89 2 164 1 340 1 365 1 191 1 119 1 276 1 121 1 193 1 98 1 125 1 295 3 319 1 347 2 258 1 36 1 377 3 206 2 109 1 13 1 139 1 325 1 354 2 113 1 140 1 
345 1 75 1 307 1 309 2 78 2 311 1 281 1 336 1 339 1 12 1 263 1 178 1 328 1 
313 1 299 1 23 1 
344 1 358 1 313 1 299 1 237 1 
313 1 299 1 23 1 
313 1 299 1 23 1 
169 1 313 1 299 1 
169 1 313 1 299 1 
169 1 313 1 299 1 
313 1 299 1 
329 1 200 1 
196 1 342 1 85 1 127 4 87 1 69 1 19 1 185 1 89 4 35 1 258 2 290 2 261 1 109 2 139 4 13 8 315 1 191 2 26 3 140 2 
196 1 127 3 85 1 87 1 19 1 69 1 33 1 35 1 261 1 290 2 139 3 13 6 315 1 26 2 
156 1 85 1 101 1 127 2 69 1 185 1 89 2 258 1 290 1 234 1 109 1 139 2 13 4 176 1 191 1 26 2 140 1 
156 1 85 1 127 3 101 1 69 1 185 1 290 1 174 1 92 1 14 2 139 4 13 7 176 1 327 1 26 2 
156 2 85 3 87 2 19 1 69 3 185 2 89 2 290 4 315 1 191 1 26 6 196 1 342 1 223 1 101 2 127 10 35 1 258 1 261 2 174 2 109 1 351 1 13 20 139 10 14 2 176 2 327 1 140 1 
13 1 139 1 14 1 
174 1 127 1 13 1 
156 1 101 1 127 3 85 1 69 1 202 1 185 1 89 2 258 1 290 2 234 1 109 1 139 3 13 6 176 1 191 1 140 1 26 3 
127 1 1 1 89 2 258 1 11 1 174 1 92 1 109 1 14 1 139 1 13 2 191 1 140 1 
196 1 290 1 261 1 85 1 127 3 87 1 139 3 13 6 69 1 185 1 26 2 
342 1 127 1 87 1 19 1 185 1 89 2 258 1 290 1 261 1 260 1 109 1 139 2 13 3 315 1 191 1 26 2 140 1 
96 1 196 1 127 5 85 2 1 1 87 2 69 2 185 2 89 2 258 1 261 2 290 3 109 1 13 10 139 5 191 1 140 1 26 5 
101 1 127 2 1 1 69 1 185 1 89 2 258 1 109 1 13 2 191 1 140 1 26 1 
156 1 85 1 101 1 127 2 1 1 69 1 185 1 89 2 258 1 290 1 109 1 139 2 13 4 176 1 191 1 26 2 140 1 
342 1 127 1 1 1 87 1 185 1 89 6 258 3 260 1 261 1 290 1 321 1 109 3 139 2 13 3 191 3 140 3 26 2 
156 3 85 5 87 3 1 1 19 1 69 5 185 5 89 10 290 7 92 1 315 1 191 5 26 12 196 2 342 2 127 16 101 3 35 1 258 5 261 3 260 1 207 1 323 1 321 1 174 3 350 1 234 1 109 5 139 18 14 4 13 34 176 3 327 1 140 5 
156 2 306 1 85 4 87 2 1 1 19 1 69 5 185 4 89 4 290 5 92 1 74 1 315 1 191 2 26 9 96 1 196 2 342 1 127 14 101 2 35 1 258 2 11 1 261 2 174 1 135 1 302 1 109 2 13 24 139 10 14 1 176 1 140 2 
156 3 306 1 85 2 87 1 1 1 19 1 69 4 185 2 89 6 290 3 92 1 74 1 315 1 191 3 26 5 196 1 342 1 127 12 101 3 35 1 258 3 11 1 261 1 174 1 302 1 135 1 234 1 109 3 13 20 139 8 14 2 176 1 327 1 140 3 
85 3 1 1 87 2 69 3 19 1 185 1 89 4 290 3 92 1 315 1 191 2 26 4 96 1 196 2 127 8 35 1 258 2 11 1 261 2 174 1 234 1 109 2 13 15 139 7 14 1 140 2 
85 3 1 1 87 2 69 3 19 1 185 3 89 4 290 4 92 1 315 1 191 2 26 7 96 1 196 2 127 8 35 1 258 2 11 1 261 2 174 1 234 1 109 2 13 15 139 7 14 1 140 2 
156 2 306 1 85 4 87 2 1 1 19 1 69 5 185 4 89 4 290 5 92 1 74 1 315 1 191 2 26 9 96 1 196 2 342 1 127 14 101 2 35 1 258 2 11 1 261 2 174 1 135 1 302 1 109 2 13 24 139 10 14 1 176 1 140 2 
127 1 1 1 89 2 258 1 11 1 174 1 92 1 109 1 14 1 139 1 13 2 191 1 140 1 
127 1 1 1 89 4 258 2 11 1 174 1 234 1 92 1 109 2 14 1 139 1 13 2 191 2 140 2 
127 1 1 1 89 4 258 2 11 1 174 1 321 1 92 1 109 2 14 1 139 1 13 2 191 2 140 2 
196 1 85 1 127 3 87 3 19 1 69 1 185 3 261 3 290 3 139 4 13 7 315 2 26 6 
127 1 1 1 89 4 258 2 11 1 174 1 321 1 92 1 109 2 14 1 139 1 13 2 191 2 140 2 
216 1 90 1 270 1 377 1 295 1 347 1 276 1 
41 1 0 1 295 1 227 1 347 1 270 1 90 1 216 1 377 1 337 1 37 1 276 1 
285 1 209 1 241 1 115 1 125 1 319 1 86 1 340 1 33 1 121 1 113 1 
193 1 264 1 285 1 209 1 98 1 241 1 295 2 125 1 319 1 347 1 36 1 377 2 50 1 340 1 354 1 276 1 121 1 113 1 
285 1 264 2 209 1 42 1 241 1 162 1 71 1 50 1 53 1 276 1 121 3 193 2 317 1 98 1 125 1 295 2 319 1 347 2 36 1 377 2 38 1 354 1 113 2 
285 1 264 2 209 2 42 1 241 1 162 1 71 1 289 1 50 1 53 1 276 1 121 3 250 1 193 2 317 1 125 2 295 2 319 2 347 2 36 1 377 2 38 1 354 1 113 2 
285 1 209 3 241 1 309 1 363 1 71 1 3 2 340 1 166 1 53 1 121 4 250 1 193 1 317 1 277 1 75 1 125 3 319 3 300 1 324 2 175 1 177 1 113 1 
250 1 193 1 285 1 317 1 209 3 277 1 75 1 241 1 125 3 319 3 46 1 309 1 300 1 71 1 3 2 324 2 340 1 175 1 166 1 53 1 113 1 121 4 
285 1 209 1 157 1 241 1 125 1 319 1 
193 1 285 2 157 1 209 7 341 1 124 1 125 6 241 3 297 1 319 7 308 1 2 1 271 1 111 1 340 2 235 1 81 1 190 1 304 1 113 2 121 3 
285 1 180 1 182 1 241 1 85 1 45 2 87 1 89 4 290 2 50 1 5 1 52 1 191 2 193 1 196 1 98 1 295 2 297 1 298 1 347 1 258 2 261 1 109 2 13 6 354 1 113 1 264 1 209 1 19 1 69 1 164 1 24 1 315 1 119 1 121 1 276 2 26 2 125 1 319 1 127 3 229 1 36 1 35 1 377 2 139 3 325 2 140 2 
209 1 265 1 181 1 307 2 46 1 309 1 311 1 3 3 336 2 340 1 166 1 366 1 56 1 121 2 221 1 277 2 75 1 345 1 125 1 319 1 132 1 9 1 300 1 107 1 324 3 175 1 263 2 178 2 
193 1 285 1 157 1 209 2 341 1 125 2 241 2 297 1 319 2 346 1 300 1 113 1 121 2 
250 1 285 1 209 4 241 1 125 4 115 1 319 4 297 1 86 1 230 1 340 1 113 1 121 1 
193 1 285 1 209 2 239 1 125 2 241 2 319 2 254 1 71 1 81 1 190 1 236 1 113 1 121 1 
285 1 209 1 369 1 241 1 58 1 125 1 319 1 340 1 272 1 246 1 
285 1 2 1 209 2 241 1 125 2 128 1 319 2 297 1 121 1 113 1 304 1 
285 2 209 5 115 1 125 4 241 2 319 5 297 1 86 1 2 1 71 1 230 1 111 1 340 1 235 1 113 2 121 3 
285 2 209 5 115 1 125 4 241 2 319 5 297 1 86 1 2 1 71 1 230 1 111 1 340 1 274 1 113 2 121 3 
193 1 264 1 285 1 209 1 241 1 295 2 125 1 319 1 347 1 36 1 377 2 289 1 50 1 340 1 354 1 276 1 121 1 113 1 
285 1 193 1 341 1 209 1 71 1 241 2 271 1 125 1 319 1 81 1 190 1 121 1 113 1 
29 1 356 1 217 1 361 1 276 1 
142 1 42 1 29 2 266 1 356 2 75 1 357 1 162 1 361 1 309 1 132 1 49 1 3 2 217 2 80 1 324 2 175 1 38 1 276 1 
377 1 335 1 356 1 217 1 295 1 152 1 76 1 347 1 361 1 
29 1 42 1 266 1 356 1 357 1 162 1 361 1 49 1 217 1 80 1 175 1 38 1 
134 1 147 1 30 1 33 1 
28 1 134 1 147 1 30 1 18 1 112 1 280 1 
97 1 60 1 112 1 
28 1 208 2 84 1 18 1 30 1 280 3 134 1 147 1 232 1 322 1 112 3 150 1 
28 1 134 1 147 1 30 1 79 1 18 1 183 1 112 2 280 2 
28 1 369 1 18 1 211 1 348 1 246 1 280 1 134 1 21 1 112 1 150 1 
28 1 134 1 147 1 18 1 112 1 150 1 280 1 
28 1 147 2 30 1 18 1 112 1 150 1 280 1 
28 2 242 1 18 2 172 1 280 2 134 1 147 1 301 1 112 2 150 1 
28 1 30 1 18 1 211 1 183 2 268 1 286 1 280 3 134 2 147 1 149 1 112 3 150 1 
28 1 369 1 30 1 18 1 7 1 183 1 246 2 280 2 134 1 21 1 147 1 272 1 112 2 249 1 150 1 
28 2 30 1 18 2 211 1 183 2 286 1 280 4 134 2 147 1 312 1 79 1 112 4 150 1 
28 1 134 1 147 1 30 1 18 1 112 1 150 1 280 1 
208 1 28 1 84 1 240 1 30 2 18 1 211 1 183 2 286 1 280 4 134 3 147 2 322 1 112 4 
28 1 18 1 30 1 183 1 280 2 146 1 134 1 165 1 147 1 51 1 112 2 150 1 
28 1 208 2 84 2 18 1 30 1 280 3 134 1 147 1 322 1 248 1 112 3 150 1 
134 2 137 2 34 1 94 1 
28 1 18 1 136 1 112 1 150 1 280 1 
28 1 134 1 147 1 30 1 18 1 183 1 268 1 112 2 150 1 280 2 
259 1 
28 1 134 1 147 1 30 1 18 1 112 1 150 1 280 1 
208 1 28 1 134 1 147 1 30 1 18 1 183 1 268 1 112 3 150 1 280 3 
134 1 240 1 211 1 286 1 
134 1 147 1 

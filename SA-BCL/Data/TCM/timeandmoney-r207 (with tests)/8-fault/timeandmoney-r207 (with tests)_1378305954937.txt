#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException (141,237) (79,302) (79,302) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException (141,237) (79,302) (79,302) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException (141,237) (79,302) (79,302) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException (141,237) (79,302) (79,302) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.ArrayIndexOutOfBoundsException (141,237) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException (141,237) 105 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException (141,237) 105 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 234 195 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 234 195 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 234 195 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 234 195 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 234 195 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 234 195 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 234 195 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 234 195 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 234 195 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 234 195 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 234 195 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 234 195 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 267 40 241 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 267 40 241 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 267 40 241 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 267 40 241 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 267 40 241 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V | STATEMENT | 577 | stmt -> ;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 5921 | stmt -> ;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 7034 | return null
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3154 | stmt -> ;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4503 | 0 -> 1
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | CONSTANT | 441 | 0 -> -1
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2175 | = null
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
269 1 49 1 141 1 98 2 79 1 287 1 194 1 351 1 100 1 162 1 302 1 16 1 227 1 237 1 304 1 229 2 
269 1 49 1 141 1 98 2 79 1 287 1 194 1 351 1 162 1 100 1 302 1 16 1 227 1 237 1 304 1 229 2 
269 1 49 1 141 1 98 2 79 1 287 1 194 1 351 1 162 1 100 1 302 1 16 1 227 1 237 1 304 1 229 2 
269 1 49 1 141 1 98 2 79 1 287 1 194 1 351 1 162 1 100 1 302 1 16 1 227 1 237 1 304 1 229 2 
231 1 191 3 124 1 49 1 98 4 220 1 287 1 351 1 100 1 72 1 13 1 196 1 132 2 16 1 227 1 198 2 104 3 229 4 
231 1 269 1 49 1 98 2 287 1 233 1 162 1 351 1 13 1 16 1 227 1 280 1 304 1 104 1 229 2 230 1 
16 1 227 1 98 1 237 1 287 1 229 1 
191 1 16 1 227 1 98 2 237 1 238 1 287 1 105 1 229 2 
191 1 16 1 227 1 98 2 237 1 238 1 287 1 105 1 229 2 
45 1 295 1 282 1 
295 1 256 1 24 2 
122 2 152 1 88 2 315 1 312 2 219 2 239 2 297 2 
308 1 88 2 48 1 243 1 206 1 244 1 219 2 286 1 91 1 223 1 225 1 312 3 341 1 277 1 187 1 29 2 75 2 122 3 32 1 211 1 61 1 315 1 33 2 320 1 297 2 152 1 197 1 324 1 353 1 131 2 65 2 325 1 19 1 85 1 42 1 239 2 136 1 
122 1 31 1 152 1 301 1 88 1 163 1 312 1 219 1 239 1 297 1 
122 1 88 1 295 1 110 1 73 1 312 1 276 1 163 1 154 1 264 1 96 1 282 1 293 1 134 1 
122 1 88 1 295 1 219 1 110 1 297 1 312 1 276 1 163 1 154 2 264 2 96 1 282 1 134 1 239 1 
95 1 154 1 264 1 306 1 296 1 
176 1 0 1 295 1 154 2 264 2 282 1 306 1 296 1 
154 1 264 1 306 1 
122 1 31 1 88 1 334 1 219 1 296 1 297 1 152 1 301 1 163 1 312 1 154 1 264 1 239 1 
295 1 
176 1 295 1 338 1 154 2 264 2 282 1 306 1 296 1 
284 1 203 1 176 1 285 1 295 1 36 1 296 2 170 1 3 2 171 2 38 1 93 2 154 5 264 5 282 1 306 2 135 1 328 1 145 1 
45 1 315 1 
122 2 88 2 315 2 219 1 297 1 249 1 312 2 58 1 239 1 
82 1 262 1 218 1 
122 1 308 1 32 1 243 1 315 1 244 1 286 1 223 1 324 1 131 1 65 1 325 1 312 1 187 1 75 1 164 1 
308 1 314 1 122 2 137 1 32 1 88 1 243 1 244 1 286 1 297 1 223 1 324 1 131 1 65 1 325 1 262 1 312 2 187 1 239 1 75 1 
122 5 314 1 137 2 88 5 315 1 219 1 297 4 352 1 73 1 312 5 133 1 143 1 58 1 239 4 
122 2 31 1 88 2 163 1 312 2 239 2 120 1 297 2 
122 3 137 1 88 3 315 1 312 3 219 1 239 3 297 3 
122 1 31 1 88 1 163 1 312 1 239 1 297 1 
122 1 249 1 88 1 163 1 312 1 219 1 58 1 239 1 297 1 
308 1 137 1 88 3 48 1 243 1 206 1 244 1 219 2 286 1 110 1 91 1 223 1 291 1 312 4 276 1 163 1 58 1 96 1 341 1 277 1 187 1 29 2 75 1 122 4 314 1 32 1 315 1 33 1 320 1 321 1 297 3 152 1 197 1 324 1 131 1 65 1 325 1 154 1 264 1 85 1 42 1 134 1 239 3 136 1 
352 1 122 2 137 1 73 1 88 2 315 1 312 2 239 1 297 1 
314 1 122 3 137 2 88 3 295 1 219 1 110 1 297 3 291 1 163 1 312 3 276 1 154 1 67 1 264 1 58 1 96 1 134 1 239 3 
122 2 137 1 88 2 262 1 312 2 219 1 58 1 218 1 239 2 297 2 
122 1 308 1 32 1 243 1 315 1 244 1 286 1 223 1 324 1 131 1 65 1 325 1 312 1 187 1 75 1 
122 1 308 1 243 1 315 1 244 1 286 1 223 1 260 1 324 1 131 1 65 1 325 1 312 1 252 1 75 1 
48 1 22 1 50 1 206 1 91 1 290 1 277 1 341 2 29 2 192 1 77 1 33 4 128 1 318 1 101 1 197 1 353 2 82 2 354 1 262 2 84 1 218 2 265 1 136 1 
122 1 88 1 163 1 312 1 96 1 239 1 297 1 120 1 
112 1 288 1 
112 1 288 1 
199 1 168 1 
199 1 168 1 
199 1 168 1 
112 1 266 1 288 1 
112 1 266 1 288 1 
112 1 317 1 288 1 
112 2 303 1 199 1 168 1 272 1 288 2 
112 1 266 1 288 1 
112 1 283 1 288 1 
112 1 283 1 288 1 
112 1 283 1 288 1 
294 1 122 2 88 2 177 1 8 1 315 1 246 1 317 1 149 1 288 1 297 2 112 1 54 1 275 1 18 1 312 2 154 1 66 1 264 1 41 1 201 1 189 1 239 2 342 1 
295 1 8 2 348 1 272 1 288 2 71 1 25 1 112 2 113 1 64 1 275 2 18 1 154 2 66 3 326 2 41 2 264 2 156 1 342 2 
49 1 351 1 100 1 
49 1 233 1 351 1 
300 1 49 3 355 1 233 1 228 1 100 2 
49 2 126 1 355 1 233 1 228 1 100 1 
49 2 355 1 233 1 228 2 100 1 
159 1 176 1 177 1 24 3 161 1 3 1 54 1 93 1 210 2 145 1 121 1 192 1 212 2 256 1 295 2 167 1 78 1 347 1 296 4 101 1 171 1 299 1 84 1 154 5 103 2 264 5 201 1 306 1 282 1 328 2 265 1 135 3 
176 1 177 4 242 1 69 1 24 9 161 3 3 2 186 1 93 2 95 5 210 6 145 1 192 3 212 6 232 1 256 3 295 5 167 2 347 1 316 1 129 1 170 1 296 7 101 3 171 2 299 2 261 5 84 3 154 9 264 9 306 6 282 1 328 6 265 3 135 8 
159 1 177 1 24 4 3 1 161 1 93 1 210 2 192 1 212 2 295 3 256 2 167 1 78 1 296 2 170 1 101 1 171 1 299 1 154 3 103 1 84 1 264 3 282 1 135 3 265 1 328 2 
159 1 177 2 24 7 3 1 161 2 93 1 210 4 192 2 212 4 295 4 256 3 232 1 167 1 78 1 316 1 129 1 170 1 296 3 101 2 171 1 299 1 154 4 103 2 84 2 264 4 282 1 135 5 265 2 328 4 
45 1 63 1 286 1 
281 1 286 1 
322 1 
308 1 223 1 286 1 
286 1 349 1 
308 1 286 1 
308 1 223 1 63 2 114 1 286 3 87 1 
192 1 47 1 146 1 22 4 33 5 99 2 169 1 350 1 353 2 39 1 354 3 57 1 263 1 83 1 84 1 341 3 343 1 
192 1 47 1 146 1 22 4 33 6 99 2 169 1 350 1 353 2 39 1 354 3 57 1 263 1 83 1 84 1 341 4 343 1 
192 1 47 1 146 1 22 4 33 5 99 2 169 1 350 1 274 1 353 2 39 1 354 3 57 1 263 1 83 1 84 1 341 3 343 1 
107 3 46 1 47 5 22 13 206 1 245 1 180 1 91 1 161 2 289 1 115 1 57 1 341 19 29 2 313 1 343 3 192 5 123 3 146 2 33 35 99 3 169 2 350 1 101 2 153 1 197 1 39 2 353 16 354 8 83 1 263 3 84 5 265 2 136 1 
47 1 22 5 178 1 206 2 91 2 341 5 29 4 343 1 192 1 76 1 146 1 33 8 99 2 169 1 350 1 153 1 197 2 39 1 353 3 354 4 83 1 263 1 84 1 136 2 
49 2 89 1 244 1 23 1 287 1 2 1 162 1 181 1 182 1 311 1 227 1 229 2 75 1 231 1 191 1 98 2 34 1 35 1 148 1 233 1 351 1 100 1 13 1 300 1 131 1 65 1 16 1 325 1 155 1 104 1 
1 1 49 2 89 1 244 1 23 1 287 1 162 1 181 1 182 1 311 1 248 1 227 1 117 1 229 3 75 1 231 1 191 2 98 3 35 1 148 1 233 1 351 1 100 1 13 1 300 1 131 1 65 1 325 1 155 1 104 1 
49 2 244 1 23 1 162 1 182 1 311 1 248 1 117 1 229 2 75 1 231 1 191 2 98 2 35 1 148 1 233 1 100 1 351 1 13 1 300 1 131 1 65 1 325 1 155 1 104 1 
308 1 333 1 1 1 346 1 244 1 98 1 286 1 287 1 323 1 162 2 182 2 311 2 324 1 131 1 235 1 65 1 325 1 227 1 292 1 236 1 155 2 229 1 75 1 
49 2 89 1 244 1 23 1 287 1 162 1 181 1 182 1 311 1 248 1 227 1 229 1 75 1 98 1 34 1 35 1 148 1 233 1 351 1 100 1 300 1 131 1 65 1 16 1 325 1 155 1 
9 1 
308 1 333 1 88 1 176 1 244 1 207 1 286 1 110 1 3 1 4 1 73 1 53 1 93 1 94 1 163 1 276 1 312 1 96 1 293 1 145 1 75 2 122 1 234 1 323 1 195 1 171 1 150 1 299 1 324 2 131 2 65 2 325 1 154 3 264 3 134 1 306 2 135 1 328 1 307 1 
122 1 88 1 207 1 110 1 234 1 195 1 4 1 73 1 53 1 163 1 312 1 276 1 154 2 264 2 96 1 293 1 134 1 
122 1 88 1 207 1 110 1 234 1 195 1 4 1 73 1 53 1 163 1 312 1 276 1 154 2 264 2 96 1 293 1 134 1 
122 1 88 1 207 1 110 1 234 1 195 1 4 1 73 1 53 1 163 1 312 1 276 1 154 2 264 2 96 1 293 1 134 1 
122 1 176 1 88 1 207 1 110 1 234 1 195 1 4 1 73 1 53 1 163 1 276 1 312 1 338 1 154 3 264 3 96 1 134 1 306 1 293 1 
122 1 88 1 207 1 110 1 3 1 234 1 171 1 195 1 4 1 73 1 53 1 93 1 163 1 276 1 312 1 154 2 264 2 96 1 134 1 293 1 145 1 
122 1 88 1 207 1 110 1 234 1 195 1 4 1 73 1 53 1 163 1 312 1 276 1 154 2 264 2 96 1 293 1 134 1 
122 1 88 1 207 1 110 1 234 1 195 1 4 1 73 1 53 1 163 1 312 1 276 1 154 2 264 2 96 1 293 1 134 1 
122 1 88 1 207 1 110 1 234 1 195 1 4 1 73 1 53 1 163 1 312 1 276 1 154 2 264 2 96 1 293 1 134 1 
122 1 88 1 207 1 110 1 234 1 195 1 4 1 73 1 53 1 163 1 312 1 276 1 154 2 264 2 96 1 293 1 134 1 
122 1 88 1 207 1 110 1 234 1 195 1 4 1 73 1 53 1 163 1 312 1 276 1 154 2 264 2 96 1 293 1 134 1 
122 1 88 1 207 1 110 1 3 1 234 1 171 1 195 1 4 1 73 1 53 1 93 1 163 1 276 1 312 1 154 2 264 2 96 1 134 1 293 1 145 1 
45 1 48 1 22 2 206 1 91 1 290 1 277 1 341 3 29 2 343 1 192 1 33 5 315 1 99 1 169 1 350 1 197 1 353 2 82 1 354 2 262 1 83 1 263 1 84 1 218 1 136 1 
107 3 47 1 139 1 48 1 22 2 206 2 247 1 91 2 161 2 115 1 185 1 27 1 341 6 277 2 29 4 192 1 123 3 315 1 33 14 101 1 14 1 197 2 353 8 82 11 354 1 262 11 19 1 68 1 84 2 85 1 218 4 265 2 136 2 
308 1 137 1 88 1 268 1 48 1 243 1 244 1 206 1 286 1 91 1 223 1 312 2 339 1 187 1 277 1 341 1 29 2 75 1 164 1 122 2 314 1 32 1 315 1 33 2 297 1 215 1 324 1 197 1 131 1 353 1 65 1 325 1 68 1 19 1 85 1 218 1 239 1 136 1 
308 2 137 1 88 1 47 4 48 3 51 1 91 3 223 2 5 2 312 3 277 3 187 2 314 1 192 3 60 2 315 1 99 1 320 2 101 2 324 1 197 3 65 3 325 2 19 1 68 1 239 1 21 2 204 1 243 2 22 8 206 3 244 2 286 2 161 2 248 1 341 10 29 6 75 3 343 1 122 3 32 2 33 19 169 1 350 1 297 1 298 2 131 3 353 9 82 7 354 4 174 1 263 1 83 1 262 7 84 3 85 1 218 7 265 2 136 3 
308 2 137 1 333 1 138 1 88 1 48 2 244 2 206 2 108 1 286 3 222 1 2 1 91 2 290 1 248 1 251 1 312 1 277 2 341 1 29 4 75 8 122 1 211 2 254 1 33 2 297 1 323 1 151 1 324 2 197 2 131 8 353 1 65 7 325 2 19 1 85 1 239 1 136 2 86 1 
88 1 48 1 22 1 206 1 219 1 91 1 161 1 312 1 58 1 277 1 341 2 29 2 122 1 192 1 33 3 297 1 101 1 172 1 197 1 353 1 82 1 354 1 262 1 68 1 84 1 218 1 239 1 265 1 136 1 
77 1 47 1 48 1 22 1 33 2 206 1 91 1 290 1 197 1 353 2 82 1 262 1 84 1 218 1 277 1 29 2 265 1 136 1 
192 1 48 1 22 1 33 2 206 1 318 1 91 1 101 1 290 1 197 1 82 1 354 1 262 1 218 1 277 1 341 2 29 2 136 1 
47 1 48 1 22 2 206 1 161 1 91 1 290 1 277 1 341 2 29 2 192 1 33 4 101 1 197 1 353 2 82 2 354 1 262 2 84 1 218 2 265 1 136 1 
77 1 47 1 48 1 22 1 33 2 108 1 206 1 91 1 197 1 353 2 82 1 262 1 84 1 218 1 277 1 29 2 265 1 136 1 
192 1 48 1 22 1 33 2 108 1 206 1 318 1 91 1 101 1 197 1 82 1 354 1 262 1 218 1 277 1 341 2 29 2 136 1 
47 1 48 1 22 2 206 1 108 1 161 1 91 1 277 1 341 2 29 2 192 1 33 4 101 1 197 1 353 2 82 2 354 1 262 2 84 1 218 2 265 1 136 1 
47 1 48 1 22 2 206 1 161 1 91 1 277 1 341 2 29 2 192 1 33 4 101 1 197 1 353 2 82 2 354 1 262 2 84 1 218 2 265 1 136 1 
308 1 48 1 243 1 244 1 206 1 286 1 91 1 223 1 312 1 187 1 277 1 341 1 29 2 75 1 122 1 32 1 315 1 33 2 320 1 324 1 197 1 353 1 131 1 65 1 325 1 19 1 85 1 136 1 
308 1 332 1 48 1 243 1 244 1 206 1 286 1 91 1 223 1 252 1 312 1 277 1 341 1 29 2 75 1 122 1 315 1 33 2 260 1 324 1 197 1 353 1 131 1 65 1 325 1 19 1 85 1 136 1 
47 1 48 1 22 2 206 1 161 1 91 1 277 1 341 2 29 2 192 1 33 4 101 1 197 1 353 2 82 2 354 1 262 2 84 1 68 1 218 2 265 1 136 1 
308 1 47 1 48 1 22 2 243 1 244 1 206 1 286 1 2 1 91 1 161 1 223 1 312 1 341 2 187 1 277 1 29 2 75 1 122 1 192 1 32 1 60 1 33 4 320 1 101 1 197 1 353 2 131 1 65 1 82 2 325 1 354 1 262 2 84 1 218 2 265 1 136 1 
88 1 47 1 48 1 22 1 206 1 219 1 91 1 161 1 312 1 58 1 341 1 277 1 29 2 122 1 192 1 33 3 193 1 101 1 297 1 197 1 353 2 82 1 262 1 68 1 84 1 218 1 239 1 265 1 136 1 
241 1 76 1 197 1 40 1 206 1 10 1 91 1 29 2 267 1 136 1 
241 1 76 1 197 1 40 1 206 1 10 1 91 1 29 2 267 1 136 1 
241 1 76 1 197 1 40 1 206 1 10 1 91 1 29 2 267 1 136 1 
241 1 76 1 197 1 40 1 206 1 10 1 91 1 29 2 267 1 136 1 
241 1 76 1 197 1 40 1 206 1 10 1 91 1 29 2 267 1 136 1 
112 1 275 1 8 1 41 1 272 1 288 1 257 1 25 1 156 1 342 1 
317 1 149 1 
158 1 112 1 337 1 275 1 8 1 41 1 288 1 119 1 342 1 
200 1 266 1 
303 1 283 1 37 1 
295 1 8 1 348 1 272 1 288 1 71 1 25 1 112 1 64 1 275 1 18 1 154 1 66 2 326 1 264 1 41 1 156 1 342 1 
295 1 8 1 348 1 272 1 288 1 71 1 25 1 112 1 64 1 275 1 18 1 154 1 66 2 326 1 264 1 41 1 156 1 342 1 
295 1 8 1 348 1 272 1 288 1 71 1 25 1 112 1 64 1 275 1 18 1 154 1 66 2 326 1 264 1 41 1 156 1 342 1 
303 1 200 1 266 1 
303 1 200 1 266 1 
283 1 37 1 
303 1 283 1 37 1 
294 1 246 1 
88 2 177 1 246 1 288 1 71 1 112 1 275 1 54 1 312 2 189 1 342 1 122 2 294 1 8 1 315 1 317 1 149 1 296 1 297 2 173 1 326 1 154 1 66 1 264 1 41 1 201 1 239 2 
308 1 157 1 88 2 48 1 244 1 206 1 286 1 70 1 91 1 251 1 312 2 28 1 277 1 341 1 29 2 75 2 122 2 211 2 7 1 33 2 80 1 197 1 131 2 353 1 65 2 325 1 68 1 19 1 85 1 136 1 86 1 
49 2 244 1 89 1 279 1 23 1 233 1 148 1 2 1 351 1 100 1 300 1 248 1 131 2 65 2 325 1 56 1 155 1 75 2 30 1 
49 2 89 1 244 1 23 1 233 1 148 1 351 1 100 1 273 1 300 1 248 1 131 1 65 1 325 1 155 1 75 1 30 1 
308 1 333 1 346 1 244 1 62 1 286 1 279 1 323 1 324 1 131 1 65 1 325 1 155 1 75 1 
49 2 89 1 244 1 279 1 23 1 233 1 148 1 351 1 100 1 300 1 248 1 131 1 65 1 325 1 56 1 155 1 75 1 30 1 
213 1 
45 1 285 1 295 1 36 1 282 1 135 1 328 1 
176 1 24 1 3 1 93 1 118 1 145 1 256 1 295 2 11 1 171 1 258 1 154 1 264 1 306 1 282 1 328 1 135 1 
308 1 106 1 176 1 244 1 109 1 286 3 24 6 110 1 161 1 3 2 223 1 250 1 93 2 210 3 145 2 75 1 192 1 212 3 295 3 256 3 166 1 165 1 101 1 298 1 171 2 299 1 216 1 259 1 324 1 131 1 65 1 325 2 84 1 154 2 281 2 264 2 306 2 328 3 265 1 135 4 202 1 87 1 
44 1 107 1 176 1 24 6 3 2 161 2 115 1 93 2 190 1 210 5 145 2 192 2 123 1 212 5 278 1 256 3 295 5 255 1 127 1 101 2 150 1 171 2 299 1 102 1 216 2 17 1 154 1 84 2 264 1 305 1 306 1 282 2 135 8 328 5 265 2 
88 1 334 1 219 1 3 1 93 1 163 1 312 1 145 1 313 1 343 1 122 1 31 1 192 1 278 1 169 1 297 1 171 1 152 1 216 2 301 1 263 1 154 1 84 2 264 1 20 1 328 2 135 2 239 1 
285 1 93 1 295 1 36 1 282 1 135 1 328 1 3 1 145 1 171 1 
192 2 212 5 278 1 256 5 295 5 24 10 161 2 101 2 298 1 216 2 84 2 265 2 328 5 210 5 135 5 
176 1 295 1 154 1 264 1 282 1 306 1 
308 1 240 1 333 1 176 2 140 1 244 1 286 1 3 2 94 1 93 2 6 2 145 1 75 4 170 1 323 1 171 2 150 2 299 2 324 2 131 4 65 4 325 1 175 1 154 3 264 3 306 4 135 2 328 2 307 1 
308 1 88 2 48 1 243 1 206 1 244 1 219 2 286 1 91 1 223 1 312 3 341 1 187 1 277 1 29 2 75 1 122 3 32 1 315 1 33 1 320 1 297 2 152 1 324 1 197 1 131 1 65 1 325 1 85 1 42 1 239 2 136 1 
24 4 3 1 93 1 145 1 210 2 212 2 295 3 256 2 99 1 150 1 171 1 299 1 216 1 282 1 135 2 328 1 
8 1 309 1 41 1 
8 1 309 1 41 1 
8 1 246 1 41 1 327 1 25 1 
8 1 309 1 41 1 
97 1 8 1 41 1 
97 1 8 1 41 1 
97 1 8 1 41 1 
8 1 41 1 
112 1 288 1 
192 1 47 1 22 3 33 7 206 2 99 1 169 1 91 2 350 1 153 1 197 2 353 3 354 2 83 1 263 1 84 1 341 4 29 4 136 2 343 1 
45 1 192 1 22 2 33 5 99 1 169 1 350 1 353 2 354 2 83 1 263 1 84 1 341 3 343 1 
192 1 47 1 22 2 270 1 206 1 33 4 91 1 161 1 101 1 197 1 353 2 354 1 84 1 341 2 29 2 265 1 136 1 
192 1 107 2 123 1 47 1 22 2 33 7 161 1 101 1 14 1 115 1 353 3 354 1 84 1 341 4 265 1 
107 2 47 4 22 9 206 2 161 2 247 1 91 2 226 1 27 1 341 12 29 4 343 2 192 3 123 2 33 22 99 1 169 1 350 1 101 2 14 1 153 2 197 2 353 10 354 5 263 2 83 1 84 3 265 2 136 2 
107 1 33 1 341 1 
123 1 353 1 33 1 
192 1 47 1 22 3 206 1 270 1 33 6 91 1 161 1 101 1 298 1 197 1 353 3 354 2 84 1 341 3 29 2 265 1 136 1 
44 1 107 1 47 1 22 2 206 1 91 1 161 2 115 1 341 6 29 2 76 1 192 2 123 1 255 1 33 12 127 1 101 2 197 1 353 6 17 1 354 1 84 2 305 1 265 2 136 1 
192 1 47 1 22 2 33 6 169 1 353 3 354 1 263 1 84 1 341 3 343 1 
47 1 22 2 33 3 206 1 91 1 350 1 153 1 197 1 353 1 226 1 354 1 263 1 83 1 341 2 29 2 136 1 343 1 
76 1 192 2 47 2 22 5 206 1 33 10 169 1 91 1 197 1 353 5 354 3 263 2 84 2 341 5 29 2 136 1 313 1 343 2 
76 1 47 1 22 1 206 1 33 2 91 1 197 1 353 2 84 1 29 2 265 1 136 1 
192 1 76 1 47 1 22 2 206 1 33 4 91 1 161 1 101 1 197 1 353 2 354 1 84 1 341 2 29 2 265 1 136 1 
76 1 47 1 22 2 33 3 206 3 91 3 153 1 197 3 226 1 353 1 354 1 263 1 59 1 341 2 29 6 136 3 343 1 
46 1 107 4 47 5 22 12 270 1 206 5 180 1 91 5 161 3 289 1 226 1 115 1 341 18 59 1 29 10 343 3 76 1 192 5 123 3 33 33 99 1 169 2 350 1 101 3 153 2 14 1 197 5 353 15 354 7 263 3 83 1 84 5 265 3 136 5 
107 1 22 2 206 1 91 1 115 1 341 4 29 2 343 1 192 1 76 1 123 1 33 7 99 1 169 1 350 1 197 1 353 3 17 1 354 2 83 1 263 1 84 1 136 1 
107 2 47 1 22 3 206 2 270 1 91 2 161 1 115 1 341 5 29 4 343 1 192 1 76 1 123 1 33 10 99 1 169 1 350 1 14 1 197 2 353 5 17 1 354 2 263 1 83 1 84 2 265 1 136 2 
44 1 107 1 47 1 22 4 270 1 206 3 91 3 161 2 115 1 341 10 29 6 343 1 76 1 192 3 123 1 255 1 33 18 127 1 99 1 169 1 350 1 101 2 153 1 197 3 353 8 17 1 354 3 263 1 83 1 84 3 305 1 265 2 136 3 
44 1 107 1 47 2 22 5 270 1 206 3 91 3 161 2 115 1 341 7 29 6 343 1 76 1 192 2 123 1 255 1 33 16 127 1 99 1 169 1 350 1 101 1 153 1 197 3 353 9 17 1 354 3 263 1 83 1 84 3 305 1 265 2 136 3 
107 1 22 2 206 1 91 1 115 1 341 4 29 2 343 1 192 1 76 1 123 1 33 7 99 1 169 1 350 1 197 1 353 3 17 1 354 2 83 1 263 1 84 1 136 1 
44 1 107 1 47 1 22 2 206 1 91 1 161 2 115 1 341 6 29 2 76 1 192 2 123 1 255 1 33 12 127 1 101 2 197 1 353 6 17 1 354 1 84 2 305 1 265 2 136 1 
44 1 107 1 47 2 22 5 270 1 206 4 91 4 161 2 115 1 341 8 29 8 343 1 76 1 192 2 123 1 255 1 33 17 127 1 99 1 169 1 350 1 101 1 153 2 197 4 353 9 17 1 354 3 263 1 83 1 84 3 305 1 265 2 136 4 
44 1 107 1 47 3 22 6 206 4 91 4 161 3 115 1 341 7 59 1 29 8 76 1 192 2 123 1 255 1 33 16 127 1 101 2 153 2 197 4 353 9 17 1 354 3 84 3 305 1 265 3 136 4 
192 1 47 3 22 6 33 7 169 1 350 2 353 3 354 3 83 1 263 3 84 1 341 4 343 3 
44 1 107 1 47 1 22 4 206 4 91 4 161 2 115 1 341 8 59 1 29 8 343 1 76 1 192 2 123 1 255 1 33 17 127 1 99 1 169 1 350 1 101 1 153 2 197 4 353 9 17 1 354 3 263 1 83 1 84 3 305 1 265 2 136 4 
122 1 352 1 73 1 88 1 315 1 312 1 179 1 
122 1 88 1 315 1 271 1 179 1 221 1 81 1 352 1 183 1 73 1 312 1 253 1 
308 1 45 1 333 1 324 1 131 1 65 1 325 1 244 1 286 1 323 1 75 1 
308 1 122 2 137 1 88 1 243 1 315 1 244 1 286 1 297 1 223 1 324 1 131 1 65 1 325 1 312 2 187 1 239 1 75 1 
308 2 137 1 88 2 243 1 244 1 286 3 223 2 224 1 312 2 276 1 163 1 96 1 187 1 6 1 75 1 122 2 315 1 349 1 297 1 131 1 65 1 325 1 239 2 
308 2 137 1 88 2 243 1 244 1 286 3 111 1 223 2 224 1 252 1 312 2 276 1 163 1 96 1 6 1 75 2 122 2 315 1 349 1 297 1 131 2 65 2 325 1 239 2 
308 1 244 1 286 4 110 1 111 1 142 1 336 1 223 1 224 1 6 1 75 3 295 1 349 1 63 1 324 1 131 3 65 3 325 1 281 1 154 2 264 2 306 1 282 1 
88 1 334 1 219 1 286 1 110 1 163 1 312 1 6 1 75 1 122 1 31 1 165 1 295 1 297 1 152 1 301 1 131 1 65 1 281 1 154 2 264 2 306 1 282 1 239 1 
151 1 131 1 65 1 325 1 244 1 75 1 
308 2 211 1 138 1 254 1 160 1 244 2 286 3 222 1 2 1 151 1 223 1 248 1 324 2 131 7 55 1 251 1 65 6 325 3 75 7 87 1 329 1 
308 1 157 1 137 1 88 1 48 2 22 2 243 1 244 1 206 2 286 1 91 2 2 1 223 1 5 1 312 2 341 3 277 2 187 1 29 4 75 1 343 1 122 2 192 1 32 1 60 1 315 1 33 5 99 1 169 1 320 1 350 1 297 1 197 2 353 2 131 1 65 1 82 1 325 1 354 2 262 1 263 1 83 1 84 1 68 1 218 1 239 1 136 2 
176 1 88 1 140 1 219 1 3 2 93 2 312 1 145 2 313 1 192 2 278 1 152 1 324 1 65 1 281 1 154 3 282 2 328 5 239 1 106 1 285 1 334 1 286 1 109 1 110 1 250 1 163 1 75 1 343 1 122 1 31 1 165 1 295 2 36 1 169 1 296 1 297 1 171 2 216 2 301 1 131 1 263 1 84 2 264 3 306 2 135 4 
308 1 223 1 151 1 63 1 131 2 65 2 325 2 244 1 286 2 2 1 202 1 75 2 87 1 
308 1 333 1 244 1 335 1 286 1 111 1 2 1 323 1 324 1 131 4 65 4 325 1 75 4 
308 1 330 1 160 1 244 1 90 1 286 1 223 1 131 2 65 2 325 2 174 1 6 1 75 2 329 1 
324 1 131 1 65 1 325 1 49 1 244 1 23 1 233 1 351 1 75 1 
308 1 244 1 286 1 2 1 80 1 248 1 131 2 65 2 251 1 325 1 75 2 
308 2 333 1 138 1 244 2 335 1 286 3 2 1 222 1 323 1 324 1 131 5 65 4 251 1 325 2 6 1 75 5 
308 2 333 1 244 2 335 1 286 3 2 1 222 1 323 1 324 1 131 5 65 4 251 1 325 2 6 1 75 5 74 1 
308 1 122 2 137 1 88 1 243 1 315 1 244 1 286 1 297 1 223 1 324 1 131 1 65 1 325 1 312 2 252 1 239 1 75 1 
308 1 160 1 244 1 286 1 223 1 131 1 55 1 65 1 325 2 6 1 75 1 87 1 329 1 
344 1 26 1 130 1 315 1 43 1 
344 2 295 1 315 1 205 1 110 1 296 1 52 1 130 1 26 2 291 1 163 1 276 1 154 2 264 2 96 1 282 1 134 1 144 1 43 2 
122 1 344 1 88 1 7 1 70 1 26 1 130 1 312 1 28 1 
130 1 205 1 52 1 
231 1 45 1 13 1 104 1 
231 1 13 1 227 1 98 1 104 1 287 1 229 1 
311 1 229 1 162 1 
231 1 125 1 98 1 287 1 13 1 184 1 16 1 227 1 116 1 229 1 
231 1 13 1 191 1 198 1 227 1 98 2 104 1 287 1 229 2 
132 1 16 1 49 1 227 1 98 1 220 1 104 1 287 1 229 1 351 1 100 1 
231 1 16 1 227 1 98 1 104 1 287 1 229 1 
231 2 13 1 16 1 227 1 98 1 287 1 229 1 
231 1 147 1 98 2 287 2 310 1 16 1 227 2 217 1 104 1 229 2 
231 1 191 2 345 1 124 1 98 3 287 1 208 1 13 1 132 1 16 1 227 1 104 2 229 3 
231 1 191 1 49 2 98 2 233 1 287 1 100 1 351 1 13 1 300 1 16 1 227 1 104 1 340 1 229 2 
231 1 191 2 124 1 98 4 287 2 13 1 196 1 132 1 16 1 227 2 198 1 104 2 229 4 
231 1 13 1 16 1 227 1 98 1 104 1 287 1 229 1 
231 2 191 2 124 1 125 1 98 3 287 1 13 2 184 2 132 1 116 1 227 1 104 2 229 3 
231 1 191 1 331 1 98 2 287 1 13 1 92 1 16 1 227 1 104 1 238 1 229 2 
231 1 98 1 287 1 13 1 184 1 15 1 16 1 227 1 116 1 229 1 
209 1 12 2 104 2 214 1 
16 1 227 1 98 1 188 1 287 1 229 1 
231 1 208 1 13 1 191 1 16 1 227 1 98 2 104 1 287 1 229 2 
319 1 
231 1 13 1 16 1 227 1 98 1 104 1 287 1 229 1 
231 1 191 1 98 3 287 1 208 1 13 1 16 1 227 1 304 1 104 1 229 3 
184 1 132 1 124 1 104 1 
231 1 104 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArithmeticException 318 (97,290) (97,290) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArithmeticException 318 (97,290) (97,290) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArithmeticException 318 (97,290) (97,290) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArithmeticException 318 (97,290) (97,290) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (108,183) 170 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (50,337) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (93,230,309) (93,230,309) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (93,230,309) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (50,337) (50,337) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException (50,337) (50,337) 
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 312 
com.domainlanguage.time.TimePointTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (93,230,309) (93,230,309) 112 279 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (93,230,309) (93,230,309) 112 279 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (93,230,309) (93,230,309) 112 279 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (93,230,309) (93,230,309) 112 279 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (93,230,309) (93,230,309) 112 279 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (93,230,309) (93,230,309) 112 279 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (93,230,309) (93,230,309) 112 279 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (93,230,309) (93,230,309) 112 279 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (93,230,309) (93,230,309) 112 279 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (93,230,309) (93,230,309) 112 279 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (93,230,309) (93,230,309) 112 279 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (93,230,309) (93,230,309) 112 279 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 312 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 117 100 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (108,183) (108,183) (244,276) 169 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 56 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (108,183) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 156 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (108,183) (108,183) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (50,337) (50,337) 167 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (108,183) 170 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 121 (40,303) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 121 (40,303) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 121 (98,217) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 121 (98,217) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 173 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z | OPERATOR | 1616 | != -> ==
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | STATEMENT | 698 | stmt -> ;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint; | RETURN | 3274 | return null
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1921 | + -> *
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> 1
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | RETURN | 563 | return null
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 0
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
233 1 318 1 89 1 73 1 305 1 92 1 97 1 290 1 129 1 267 1 181 1 226 1 68 1 25 1 
233 1 318 1 89 1 73 1 305 1 92 1 97 1 290 1 129 1 267 1 181 1 226 1 68 1 25 1 
233 1 318 1 89 1 73 1 305 1 92 1 97 1 290 1 129 1 267 1 181 1 226 1 68 1 25 1 
233 1 318 1 89 1 73 1 305 1 92 1 97 1 290 1 129 1 267 1 181 1 226 1 68 1 25 1 
282 1 233 1 0 1 318 1 89 4 305 1 92 4 4 1 165 1 274 3 226 1 296 1 48 2 68 1 313 3 147 2 25 1 253 1 
54 1 89 2 318 1 305 1 92 2 4 1 129 1 131 1 267 1 161 1 165 1 274 1 226 1 140 1 68 1 25 1 
89 3 305 2 92 3 4 1 129 1 163 1 165 1 274 2 226 2 313 1 147 1 25 1 253 1 
0 1 89 9 305 2 92 9 4 1 129 1 137 1 274 5 226 2 21 1 313 7 68 1 147 4 25 1 282 1 233 1 318 1 111 1 163 1 165 1 296 1 48 2 83 1 253 3 
0 1 89 9 305 2 92 9 4 1 129 1 137 1 274 5 226 2 21 1 313 7 68 1 147 4 25 1 282 1 233 1 318 1 111 1 163 1 165 1 296 1 48 2 83 1 253 3 
174 1 284 1 312 1 
162 1 174 1 128 2 
12 1 283 2 134 2 106 2 22 2 145 2 78 2 
283 1 1 1 236 2 55 1 5 1 261 1 78 1 12 1 135 2 134 1 183 1 311 2 106 1 170 1 145 1 22 1 
12 1 283 1 134 1 106 1 22 1 145 1 50 1 78 1 
283 1 309 1 93 1 45 1 22 1 78 1 
283 1 309 1 134 1 106 1 22 1 145 1 78 1 
272 1 150 1 198 1 175 1 230 1 
272 1 150 2 174 1 175 1 284 1 99 1 208 1 230 2 
272 1 150 1 230 1 
12 1 283 1 150 1 134 1 175 1 337 1 106 1 22 1 145 1 50 1 78 1 230 1 
174 1 
283 1 150 2 174 1 175 1 284 1 78 1 12 1 272 1 134 1 337 1 106 1 22 1 145 1 50 1 301 1 230 2 208 1 
210 1 150 5 317 1 174 1 235 1 175 2 284 1 285 1 6 2 113 1 115 1 266 2 196 1 272 2 297 1 201 2 206 1 208 1 230 5 
312 1 
283 2 134 1 154 1 106 1 145 1 22 2 252 1 78 2 
283 1 135 1 236 1 1 1 110 1 311 1 229 1 106 1 22 1 145 1 78 1 
283 5 319 1 134 1 110 1 199 1 229 2 45 1 106 4 22 5 145 4 87 1 252 1 78 5 
283 1 106 1 22 1 145 1 78 1 
283 3 134 1 229 1 106 3 22 3 145 3 78 3 
283 1 106 1 22 1 145 1 78 1 
283 1 134 1 154 1 106 1 22 1 145 1 78 1 252 1 
283 2 134 1 110 1 229 1 106 2 22 2 145 2 252 1 78 2 
283 2 199 1 229 1 45 1 106 1 22 2 145 1 78 2 
283 1 110 1 229 1 106 1 22 1 145 1 78 1 
283 1 134 1 106 1 22 1 145 1 78 1 252 1 
135 1 236 1 1 1 311 1 
135 1 236 1 1 1 311 1 
126 1 74 1 338 1 327 1 23 1 11 2 315 1 133 1 
283 1 106 1 22 1 145 1 78 1 39 1 
247 1 157 1 
247 1 157 1 
227 1 241 1 
227 1 241 1 
227 1 241 1 
247 1 332 1 157 1 
247 1 260 1 157 1 
247 2 72 1 250 1 227 1 157 2 241 1 
247 1 332 1 157 1 
247 1 332 1 157 1 
247 1 71 1 157 1 
247 1 71 1 157 1 
247 1 71 1 157 1 
260 1 273 1 136 1 103 1 141 1 106 2 143 1 145 2 22 2 230 1 150 1 283 2 76 1 191 1 34 1 157 1 116 1 78 2 194 1 247 1 294 1 200 1 251 1 
150 2 174 1 212 1 191 2 7 2 157 2 158 1 306 1 245 1 194 2 247 2 294 2 273 1 250 1 141 3 65 1 251 2 171 1 230 2 
233 1 318 1 68 1 
318 1 68 1 161 1 
172 1 233 2 299 1 68 3 307 1 161 1 
172 1 233 1 248 1 299 1 68 2 161 1 
233 1 172 1 299 2 68 2 161 1 
210 2 174 2 175 4 128 3 6 1 216 2 266 1 272 1 17 1 143 1 144 1 148 1 230 5 187 1 188 1 150 5 237 1 284 1 76 1 34 1 115 3 195 1 196 1 162 1 292 2 333 1 42 2 295 1 201 1 122 1 84 1 208 1 
210 6 174 5 175 7 177 1 128 9 6 2 216 6 266 2 180 1 272 6 102 1 17 3 148 3 230 9 187 1 188 2 150 9 284 1 155 1 113 1 34 4 115 8 291 5 196 1 162 3 333 2 198 5 42 6 249 1 295 3 44 1 201 2 122 3 84 3 208 1 
210 2 174 3 175 2 128 4 6 1 216 2 266 1 17 1 144 1 230 3 188 1 148 1 150 3 284 1 113 1 34 1 115 3 195 1 162 2 333 1 292 1 42 2 295 1 201 1 122 1 84 1 
210 4 174 4 175 3 128 7 6 1 216 4 266 1 102 1 17 2 144 1 230 4 188 1 148 2 150 4 284 1 155 1 113 1 34 2 115 5 195 1 162 3 333 1 292 2 42 4 295 2 44 1 201 1 122 2 84 2 
232 1 94 1 312 1 
232 1 101 1 
255 1 
232 1 257 1 30 1 
232 1 46 1 
232 1 257 1 
232 3 257 1 211 1 30 1 94 2 314 1 
32 4 35 1 265 2 37 7 130 1 289 1 269 2 222 1 221 1 223 1 138 1 139 1 17 1 18 1 295 1 203 3 341 3 
32 4 35 1 265 2 37 7 130 1 289 1 269 2 222 1 221 1 223 1 138 1 139 1 17 1 18 1 295 1 203 3 341 3 
32 4 35 1 265 2 37 7 130 1 289 1 269 2 222 1 221 1 223 1 138 1 139 1 17 1 18 1 295 1 142 1 203 3 341 3 
126 1 59 4 265 3 130 2 11 2 269 5 222 1 223 1 221 5 138 2 139 2 18 1 17 4 228 1 275 1 148 3 107 1 231 1 74 1 32 16 239 1 35 1 327 1 37 31 289 2 246 1 79 1 295 4 338 1 202 3 122 3 203 10 84 3 341 15 
126 2 264 1 265 2 130 2 11 4 269 5 221 4 222 2 139 1 138 2 17 3 18 1 107 1 74 2 153 1 32 9 327 2 35 1 37 16 289 1 167 1 295 3 338 2 203 9 341 7 
89 2 305 1 92 2 4 1 213 1 129 1 307 1 135 1 274 1 311 1 226 1 313 1 68 2 25 1 149 1 233 1 318 1 236 1 286 1 326 1 328 1 193 1 161 1 118 1 165 1 168 1 81 1 340 1 339 1 86 1 
89 3 305 1 92 3 4 1 213 1 129 1 307 1 224 1 135 1 274 1 311 1 226 1 313 2 68 2 233 1 316 1 281 1 318 1 236 1 286 1 326 1 328 1 193 1 161 1 118 1 165 1 168 1 340 1 339 1 86 1 
89 2 92 2 4 1 213 1 129 1 307 1 135 1 274 1 311 1 313 2 68 2 316 1 281 1 233 1 318 1 236 1 286 1 326 1 193 1 161 1 118 1 165 1 340 1 339 1 86 1 
232 1 27 1 88 1 257 1 89 1 90 1 1 1 236 1 305 1 92 1 286 2 213 2 129 2 38 1 224 1 135 1 16 1 226 1 311 1 339 1 340 2 86 1 146 1 
89 1 305 1 92 1 213 1 129 1 307 1 135 1 311 1 226 1 68 2 25 1 149 1 233 1 316 1 318 1 236 1 286 1 326 1 328 1 193 1 161 1 118 1 168 1 340 1 339 1 86 1 
209 1 
210 1 257 1 1 2 93 1 6 1 10 1 266 1 272 2 309 1 135 2 311 2 22 1 146 1 230 2 188 1 279 1 232 1 27 1 283 1 29 1 150 2 236 2 75 1 112 1 115 1 78 1 196 1 45 1 201 1 339 1 82 1 86 1 123 1 208 1 
283 1 29 1 150 1 309 1 93 1 112 1 45 1 22 1 10 1 78 1 230 1 279 1 
283 1 29 1 150 1 309 1 93 1 112 1 45 1 22 1 10 1 78 1 230 1 279 1 
283 1 29 1 150 1 309 1 93 1 112 1 45 1 22 1 10 1 78 1 230 1 279 1 
150 2 29 1 283 1 112 1 93 1 10 1 78 1 272 1 309 1 45 1 22 1 301 1 230 2 208 1 279 1 
283 1 150 1 29 1 112 1 93 1 6 1 266 1 10 1 78 1 196 1 309 1 45 1 201 1 22 1 230 1 279 1 
283 1 29 1 150 1 309 1 93 1 112 1 45 1 22 1 10 1 78 1 230 1 279 1 
283 1 29 1 150 1 309 1 93 1 112 1 45 1 22 1 10 1 78 1 230 1 279 1 
283 1 29 1 150 1 309 1 93 1 112 1 45 1 22 1 10 1 78 1 230 1 279 1 
283 1 29 1 150 1 309 1 93 1 112 1 45 1 22 1 10 1 78 1 230 1 279 1 
283 1 29 1 150 1 309 1 93 1 112 1 45 1 22 1 10 1 78 1 230 1 279 1 
283 1 150 1 29 1 112 1 93 1 6 1 266 1 10 1 78 1 196 1 309 1 45 1 201 1 22 1 230 1 279 1 
126 1 74 1 32 2 327 1 35 1 265 1 37 2 130 1 11 2 269 1 133 1 222 1 138 1 17 1 18 1 338 1 203 1 23 1 312 1 315 1 
126 1 74 1 32 1 327 1 37 2 59 1 132 1 11 2 117 1 133 1 100 1 338 1 202 1 315 1 341 1 
283 1 126 1 109 1 110 1 74 1 32 1 327 1 179 1 37 2 11 2 132 1 78 1 133 1 62 1 229 1 338 1 106 1 145 1 22 1 341 1 315 1 69 1 
126 1 1 1 132 1 11 2 133 1 135 1 183 1 311 1 229 1 106 1 22 1 145 1 315 1 69 1 283 1 108 1 236 1 110 1 74 1 327 1 37 1 244 1 78 1 338 1 169 1 341 1 
126 1 1 1 236 1 56 1 74 1 32 1 327 1 37 1 179 1 11 2 133 1 135 1 311 1 338 1 67 1 315 1 
126 1 258 1 11 2 132 1 133 1 134 1 17 1 106 1 145 1 22 1 315 1 148 1 283 1 74 1 32 1 327 1 37 2 78 1 295 1 338 1 122 1 84 1 341 1 252 1 
126 1 74 1 32 1 327 1 37 1 11 2 133 1 17 1 338 1 204 1 122 1 23 1 315 1 
126 1 74 1 58 1 327 1 37 1 11 2 133 1 295 1 338 1 23 1 84 1 315 1 341 1 
126 1 74 1 32 1 327 1 37 2 11 2 133 1 17 1 295 1 338 1 122 1 84 1 23 1 341 1 315 1 148 1 
126 1 74 1 32 1 327 1 37 1 11 2 133 1 17 1 338 1 67 1 204 1 122 1 315 1 
126 1 74 1 58 1 327 1 37 1 11 2 133 1 295 1 338 1 67 1 84 1 315 1 341 1 
126 1 74 1 32 1 327 1 37 2 11 2 133 1 17 1 295 1 338 1 67 1 122 1 84 1 341 1 315 1 148 1 
126 1 74 1 32 1 327 1 37 2 11 2 133 1 17 1 295 1 338 1 122 1 84 1 341 1 315 1 148 1 
135 1 236 1 1 1 183 1 311 1 
135 1 236 1 1 1 311 1 156 1 
126 1 74 1 32 1 327 1 37 2 132 1 11 2 133 1 17 1 295 1 338 1 122 1 84 1 341 1 315 1 148 1 
108 1 135 1 236 1 183 1 311 1 81 1 
53 1 126 1 11 2 132 1 133 1 134 1 17 1 106 1 145 1 22 1 315 1 148 1 283 1 74 1 32 1 327 1 37 2 78 1 295 1 338 1 122 1 84 1 341 1 252 1 
126 2 57 1 59 2 218 1 11 4 269 1 270 1 221 1 17 2 275 1 148 2 234 1 74 2 153 1 32 6 239 1 327 2 37 13 197 1 295 2 298 1 338 2 47 1 202 1 122 2 203 2 84 2 207 1 341 7 
302 1 126 3 57 2 59 2 218 2 11 6 269 2 270 1 221 2 182 1 17 3 275 2 107 2 148 3 234 4 74 3 153 1 32 14 327 3 37 26 330 1 197 1 120 1 334 1 166 1 295 2 338 3 49 1 203 4 202 2 122 3 84 2 341 12 207 1 
302 1 126 3 57 1 265 1 59 4 130 1 218 2 11 6 269 4 270 1 222 1 221 4 182 1 138 1 18 1 17 5 19 1 275 3 107 1 148 4 234 4 74 3 153 1 32 20 239 1 35 1 327 3 37 41 330 1 197 1 120 1 334 1 166 1 295 5 298 1 338 3 49 1 202 3 122 4 203 8 84 4 207 1 341 21 
302 1 126 4 57 1 265 1 59 4 130 1 218 2 11 8 269 4 270 1 222 1 221 3 182 1 138 1 18 1 17 5 19 1 275 3 107 2 148 4 234 4 74 4 153 1 32 20 239 1 35 1 327 4 37 38 330 1 197 1 120 1 334 1 166 1 295 4 298 1 338 4 49 1 202 3 122 4 203 7 84 3 207 1 341 18 
302 1 126 2 57 1 265 1 59 4 130 1 218 1 11 4 269 7 270 1 222 1 221 7 182 1 138 1 18 1 17 8 275 2 107 1 148 7 234 4 74 2 153 1 32 27 239 2 35 1 327 2 288 2 37 52 330 1 197 1 120 1 334 1 166 1 295 8 338 2 49 1 202 4 122 7 203 14 84 7 207 1 341 25 
247 1 294 1 250 1 65 1 191 1 157 1 306 1 251 1 186 1 194 1 
260 1 200 1 
247 1 256 1 294 1 33 1 191 1 157 1 251 1 51 1 194 1 
332 1 278 1 
70 1 72 1 71 1 
150 1 174 1 212 1 191 1 7 1 157 1 306 1 245 1 194 1 247 1 294 1 273 1 250 1 141 2 65 1 251 1 171 1 230 1 
150 1 174 1 212 1 191 1 7 1 157 1 306 1 245 1 194 1 247 1 294 1 273 1 250 1 141 2 65 1 251 1 171 1 230 1 
150 1 174 1 212 1 191 1 7 1 157 1 306 1 245 1 194 1 247 1 294 1 273 1 250 1 141 2 65 1 251 1 171 1 230 1 
332 1 72 1 278 1 
332 1 72 1 278 1 
70 1 71 1 
70 1 72 1 71 1 
103 1 116 1 
175 1 212 1 260 1 7 1 214 1 136 1 103 1 141 1 143 1 106 2 22 2 145 2 230 1 150 1 283 2 76 1 191 1 34 1 157 1 116 1 78 2 194 1 247 1 294 1 200 1 251 1 
283 2 91 1 262 1 22 2 78 2 254 1 
233 1 316 1 318 1 236 2 322 1 326 1 307 1 161 1 193 1 60 1 135 2 310 1 311 2 168 1 81 1 339 1 340 1 68 2 86 1 
233 1 316 1 318 1 236 1 322 1 326 1 307 1 161 1 193 1 135 1 311 1 168 1 340 1 339 1 68 2 86 1 300 1 
232 1 27 1 257 1 1 1 236 1 38 1 135 1 310 1 311 1 64 1 339 1 340 1 86 1 146 1 
233 1 316 1 318 1 236 1 322 1 326 1 307 1 161 1 193 1 60 1 135 1 310 1 311 1 168 1 340 1 339 1 68 2 86 1 
176 1 
210 1 174 1 284 1 285 1 115 1 206 1 312 1 
210 1 174 2 128 1 6 1 266 1 272 1 14 1 66 1 230 1 150 1 284 1 115 1 36 1 196 1 162 1 201 1 208 1 
257 3 174 8 1 1 3 1 94 2 6 4 8 2 266 4 268 2 272 5 101 3 17 2 276 2 277 1 188 2 285 1 284 2 30 3 115 9 196 4 40 2 42 6 295 2 201 4 46 2 206 1 122 2 208 3 125 2 210 8 211 1 128 12 216 6 219 1 135 3 61 2 311 3 230 5 148 2 232 10 150 5 152 2 236 3 323 1 77 2 242 2 331 1 162 6 80 2 81 1 82 1 339 3 86 4 84 2 
210 5 302 1 174 5 128 6 6 2 216 5 59 1 266 2 272 1 17 2 275 1 184 1 185 1 188 1 230 1 148 2 150 1 152 1 284 2 115 8 330 1 196 2 162 3 120 1 334 1 42 5 295 2 80 2 201 2 82 1 49 1 202 1 122 2 84 2 208 1 
210 1 6 1 130 1 266 1 12 1 222 1 134 1 138 1 17 1 106 1 22 1 145 1 230 1 150 1 283 1 115 2 78 1 196 1 337 1 167 1 295 1 80 2 201 1 124 1 50 1 
210 1 174 1 285 1 284 1 6 1 115 1 266 1 196 1 201 1 206 1 
210 5 152 1 174 5 128 10 8 1 115 5 216 5 162 5 17 2 42 5 295 2 80 2 122 2 84 2 148 2 
272 1 150 1 174 1 284 1 230 1 208 1 
210 2 257 1 1 2 6 2 266 2 271 1 272 4 135 4 311 4 146 1 277 1 188 2 230 3 232 1 27 1 150 3 236 4 323 2 75 1 113 1 240 1 115 2 196 1 201 2 339 1 82 2 86 1 123 1 208 2 
12 1 283 1 135 1 236 1 1 1 134 1 183 1 311 1 106 1 22 1 145 1 170 1 78 1 
210 2 174 4 284 2 128 4 6 1 115 1 265 1 216 2 266 1 196 1 162 2 42 2 201 1 82 1 188 1 
294 1 191 1 104 1 
28 1 294 1 191 1 306 1 116 1 
294 1 191 1 104 1 
294 1 191 1 104 1 
164 1 294 1 191 1 
164 1 294 1 191 1 
164 1 294 1 191 1 
294 1 191 1 
247 1 157 1 
126 2 74 2 32 4 327 2 35 1 265 1 37 8 130 1 11 4 269 2 222 1 221 1 138 1 17 1 18 1 295 1 338 2 203 3 341 4 107 1 
32 3 35 1 265 1 37 6 130 1 269 2 222 1 138 1 18 1 17 1 295 1 203 2 312 1 341 3 
126 1 74 1 32 2 327 1 37 4 11 2 269 1 221 1 119 1 17 1 295 1 338 1 203 2 122 1 84 1 341 2 148 1 
32 3 239 1 59 2 37 7 269 1 221 1 17 1 295 1 275 1 202 1 122 1 203 2 84 1 341 4 148 1 
126 2 95 1 265 1 59 2 130 2 11 4 269 5 222 1 221 4 138 2 18 1 17 3 148 2 107 2 74 2 32 11 239 1 35 1 327 2 37 23 288 1 117 1 295 3 338 2 203 9 122 2 202 2 84 2 341 12 
37 1 59 1 341 1 
32 1 37 1 202 1 
126 1 74 1 32 3 8 1 327 1 37 6 11 2 269 2 221 1 119 1 17 1 295 1 338 1 122 1 203 3 84 1 341 3 148 1 
302 1 126 1 59 1 11 2 269 1 221 1 17 2 275 1 148 2 74 1 153 1 32 6 327 1 37 12 330 1 120 1 334 1 295 2 338 1 202 1 122 2 203 2 49 1 84 2 341 6 
32 3 37 6 130 1 269 1 222 1 221 1 138 1 17 1 295 1 203 2 341 3 
126 1 74 1 32 1 95 1 327 1 35 1 37 3 130 1 11 2 269 1 221 1 138 1 18 1 338 1 203 2 341 2 107 1 
126 1 74 1 153 1 32 5 327 1 37 10 130 2 11 2 269 3 221 2 222 1 138 2 17 2 167 1 295 2 338 1 203 5 341 5 
126 1 74 1 153 1 32 2 327 1 37 2 11 2 221 1 17 1 338 1 122 1 203 1 
126 1 74 1 153 1 32 2 327 1 37 4 11 2 269 1 221 1 17 1 295 1 338 1 203 2 122 1 84 1 341 2 148 1 
126 3 74 3 95 1 153 1 32 1 327 3 37 3 130 1 11 6 269 1 221 1 138 1 298 1 338 3 203 2 341 2 107 1 
126 5 95 1 265 1 59 4 130 3 11 10 269 7 222 2 221 5 138 3 18 1 17 5 228 1 275 1 107 2 148 3 74 5 153 1 32 16 239 1 35 1 327 5 37 34 246 1 79 1 119 1 295 5 298 1 338 5 202 3 122 3 203 12 84 3 341 18 
126 1 265 1 59 1 130 1 11 2 269 2 222 1 138 1 17 1 18 1 275 1 74 1 153 1 32 4 327 1 35 1 37 8 120 1 295 1 338 1 202 1 203 2 341 4 
126 2 265 1 59 2 130 1 11 4 269 2 222 1 221 1 138 1 18 1 17 2 275 1 148 1 74 2 153 1 32 6 239 1 35 1 327 2 37 11 119 1 120 1 295 1 338 2 202 1 122 1 203 3 341 5 
302 1 126 3 265 1 59 1 130 1 11 6 269 3 222 1 221 1 138 1 18 1 17 3 275 1 148 2 107 1 74 3 153 1 32 9 35 1 327 3 37 19 330 1 119 1 120 1 334 1 295 3 338 3 49 1 202 1 122 2 203 4 84 2 341 10 
302 1 126 3 265 1 59 1 130 1 11 6 269 3 222 1 221 2 138 1 18 1 17 3 275 1 107 1 148 2 74 3 153 1 32 10 35 1 327 3 37 17 330 1 119 1 120 1 334 1 295 2 338 3 202 1 122 2 203 5 49 1 84 1 341 7 
126 1 265 1 59 1 130 1 11 2 269 2 222 1 138 1 17 1 18 1 275 1 74 1 153 1 32 4 327 1 35 1 37 8 120 1 295 1 338 1 202 1 203 2 341 4 
302 1 126 1 59 1 11 2 269 1 221 1 17 2 275 1 148 2 74 1 153 1 32 6 327 1 37 12 330 1 120 1 334 1 295 2 338 1 202 1 122 2 203 2 49 1 84 2 341 6 
302 1 126 4 265 1 59 1 130 1 11 8 269 3 222 1 221 2 138 1 18 1 17 3 275 1 148 2 107 2 74 4 153 1 32 10 35 1 327 4 37 18 330 1 119 1 120 1 334 1 295 2 338 4 49 1 202 1 122 2 203 5 84 1 341 8 
302 1 126 4 59 1 11 8 269 3 221 3 17 3 275 1 148 3 107 2 74 4 153 1 32 9 327 4 37 16 330 1 120 1 334 1 295 2 338 4 298 1 49 1 202 1 122 3 203 6 84 2 341 7 
32 3 35 1 37 7 130 3 269 3 221 3 222 1 138 3 18 2 17 1 295 1 203 6 341 4 
302 1 126 4 265 1 59 1 130 1 11 8 269 3 222 1 221 1 138 1 18 1 17 3 275 1 148 2 107 2 74 4 153 1 32 10 35 1 327 4 37 18 330 1 120 1 334 1 295 2 338 4 298 1 49 1 202 1 122 2 203 4 84 1 341 8 
283 1 199 1 114 1 45 1 22 1 78 1 
283 1 114 1 192 1 78 1 41 1 225 1 199 1 336 1 45 1 24 1 22 1 
232 1 27 1 257 1 135 1 236 1 1 1 311 1 339 1 86 1 312 1 146 1 
232 1 283 1 257 1 1 1 236 1 303 1 30 1 78 1 135 1 121 1 311 1 229 1 106 1 339 1 86 1 145 1 22 1 
232 1 283 1 257 1 236 1 303 1 30 1 323 1 78 1 135 1 121 1 311 1 229 1 106 1 339 1 86 1 145 1 22 1 
232 1 283 1 257 1 236 1 30 1 323 1 98 1 78 1 135 1 121 1 311 1 229 1 106 1 339 1 86 1 145 1 22 1 
257 1 174 1 1 1 94 1 217 1 272 1 135 3 15 1 101 1 311 3 230 2 232 4 150 2 236 3 323 1 30 1 284 1 77 1 243 1 46 1 339 1 86 1 125 1 
232 4 150 2 174 1 257 1 1 1 236 3 284 1 30 1 323 1 94 1 77 1 272 1 135 3 40 1 15 1 101 1 311 3 46 1 339 1 86 1 230 2 125 1 
13 1 135 1 236 1 311 1 339 1 86 1 
316 1 232 3 257 2 321 1 1 2 236 7 55 1 190 1 211 1 31 1 30 1 127 1 263 1 13 1 135 7 311 6 81 1 205 1 339 2 86 3 52 1 
283 1 229 1 106 1 22 1 145 1 78 1 
210 1 174 1 1 1 175 1 94 1 6 2 266 2 272 2 135 1 61 1 101 1 311 1 276 1 277 1 230 3 232 2 150 3 236 1 284 1 285 1 115 1 77 1 242 1 196 2 40 1 201 2 206 1 208 1 
232 2 257 1 236 2 211 1 30 1 94 1 331 1 13 1 135 2 311 2 81 1 339 1 86 2 
27 1 232 1 257 1 1 1 236 4 325 1 135 4 15 1 311 4 81 1 339 1 86 1 146 1 
232 1 257 1 236 2 323 1 30 1 308 1 135 2 335 1 311 2 43 1 205 1 339 1 86 2 52 1 
318 1 135 1 236 1 1 1 311 1 339 1 68 1 86 1 161 1 193 1 
316 1 232 1 257 1 236 2 320 1 31 1 135 2 311 2 81 1 339 1 86 1 
27 1 232 3 257 2 1 1 236 5 321 1 323 1 31 1 325 1 127 1 135 5 311 4 81 1 339 2 86 2 146 1 
27 1 232 3 257 2 1 1 236 5 238 1 323 1 31 1 325 1 127 1 135 5 311 4 81 1 339 2 86 2 146 1 
232 1 283 1 257 1 1 1 236 1 30 1 98 1 78 1 135 1 121 1 311 1 229 1 106 1 339 1 86 1 145 1 22 1 
232 1 257 1 236 1 211 1 323 1 30 1 263 1 135 1 311 1 205 1 339 1 86 2 52 1 
2 1 304 1 287 1 178 1 
173 1 150 1 2 1 175 1 304 1 287 1 178 1 329 1 230 1 26 1 
283 1 2 1 91 1 304 1 262 1 287 1 22 1 78 1 254 1 
173 1 304 1 329 1 
165 1 274 1 4 1 312 1 
89 1 165 1 305 1 274 1 92 1 4 1 226 1 
92 1 213 1 129 1 
89 3 54 2 305 1 259 1 92 3 96 1 324 1 4 1 165 1 274 1 226 1 25 1 
89 2 165 1 305 1 274 1 92 2 4 1 226 1 48 1 313 1 
233 1 89 1 318 1 305 1 92 1 274 1 226 1 296 1 68 1 147 1 25 1 
89 1 165 1 305 1 274 1 92 1 226 1 25 1 
89 1 165 2 305 1 92 1 4 1 226 1 25 1 
89 2 305 2 92 2 220 1 165 1 274 1 226 2 63 1 85 1 25 1 
89 3 305 1 92 3 111 1 4 1 165 1 137 1 274 2 226 1 313 2 147 1 25 1 253 1 
233 1 89 2 318 1 305 1 92 2 4 1 215 1 161 1 307 1 165 1 274 1 226 1 68 2 313 1 25 1 
0 1 89 4 305 2 92 4 4 1 165 1 274 2 226 2 48 1 313 2 147 1 25 1 253 1 
89 1 165 1 305 1 274 1 92 1 4 1 226 1 25 1 
54 1 89 4 305 1 92 4 324 1 96 1 4 2 160 1 165 2 274 3 226 1 313 2 147 1 253 1 
89 2 305 1 92 2 4 1 293 1 165 1 274 1 226 1 83 1 313 1 25 1 189 1 
89 3 54 2 305 1 92 3 96 1 324 2 4 1 165 1 274 1 226 1 20 1 25 1 
274 2 105 2 9 1 159 1 
89 1 305 1 92 1 226 1 25 1 280 1 
89 2 165 1 305 1 274 1 111 1 92 2 4 1 226 1 313 1 25 1 
151 1 
89 1 165 1 305 1 274 1 92 1 4 1 226 1 25 1 
54 1 89 3 165 1 305 1 111 1 274 1 92 3 4 1 226 1 313 1 25 1 
274 1 147 1 160 1 253 1 
165 1 274 1 

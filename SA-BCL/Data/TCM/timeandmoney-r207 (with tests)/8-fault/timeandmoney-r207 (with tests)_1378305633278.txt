#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (56,257,317) (56,257,317) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 47 335 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 32 238 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 32 238 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 32 238 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 32 238 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 32 238 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 141 272 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4636 | 0 -> -1
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONDITION | 5650 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1107 | + -> *
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1071 | stmt -> ;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> -1
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | STATEMENT | 1463 | stmt -> ;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | RETURN | 2431 | return null
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> ==
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
24 1 310 1 28 1 119 3 72 1 352 1 215 1 126 9 291 1 35 2 131 1 222 2 293 2 195 1 133 1 360 9 12 2 298 2 271 2 177 1 301 1 327 6 159 1 16 1 368 4 142 1 333 2 277 5 
24 1 310 1 28 1 119 3 72 1 352 1 215 1 126 9 291 1 35 2 131 1 222 2 293 2 195 1 133 1 360 9 12 2 298 2 271 2 177 1 301 1 327 6 159 1 16 1 368 4 142 1 333 2 277 5 
24 1 310 1 28 1 119 4 72 1 352 1 215 1 126 10 291 1 35 2 131 1 222 2 293 2 195 1 133 1 360 10 12 2 298 2 271 2 177 1 301 1 327 7 159 1 16 1 368 5 142 1 333 2 277 6 
310 1 28 1 119 2 72 1 352 1 215 1 126 7 291 1 35 2 131 1 222 2 293 2 195 1 133 1 360 7 12 2 298 1 271 2 177 1 301 1 327 4 159 1 16 1 368 3 142 1 333 2 277 4 
195 1 24 1 133 1 310 1 360 4 298 2 119 1 271 1 327 3 16 1 368 2 126 4 277 3 333 1 291 1 35 1 293 1 222 1 
133 1 310 1 360 2 12 1 138 1 28 1 270 1 271 1 192 1 352 1 126 2 277 1 291 1 35 1 222 1 293 1 
133 1 310 1 360 3 12 1 119 1 271 2 327 1 368 1 215 1 126 3 277 2 291 1 222 2 
24 1 310 1 119 3 215 1 77 1 126 9 291 1 131 1 35 1 222 2 293 1 195 1 133 1 360 9 12 1 245 1 298 2 271 2 327 7 159 1 368 4 16 1 277 5 333 1 
24 1 310 1 119 3 215 1 77 1 126 9 291 1 131 1 35 1 222 2 293 1 195 1 133 1 360 9 12 1 245 1 298 2 271 2 327 7 159 1 368 4 16 1 277 5 333 1 
115 1 369 1 221 1 
0 2 199 1 221 1 
342 2 347 2 50 1 18 2 250 2 279 2 101 1 247 2 
46 1 280 1 26 2 347 3 50 1 167 1 118 1 101 1 123 1 33 1 128 1 340 2 136 1 11 2 85 1 296 2 87 1 247 2 89 1 302 1 342 3 304 1 179 1 249 2 226 1 93 1 182 1 94 1 206 1 184 1 43 1 18 2 250 2 305 1 279 2 95 1 144 1 
342 1 353 1 347 1 181 1 50 1 18 1 250 1 279 1 5 1 247 1 
347 1 147 1 5 1 342 1 76 1 53 1 262 1 343 1 66 1 306 1 115 1 279 1 229 1 221 1 
347 1 147 2 247 1 5 1 342 1 76 1 53 1 262 1 18 1 250 1 306 1 115 1 279 1 229 2 221 1 
273 1 109 1 147 1 120 1 229 1 
273 1 363 1 147 2 115 1 120 1 229 2 251 1 221 1 
147 1 120 1 229 1 
347 1 147 1 50 1 5 1 247 1 328 1 273 1 342 1 353 1 181 1 18 1 250 1 229 1 279 1 
221 1 
273 1 147 2 115 1 120 1 229 2 251 1 221 1 283 1 
231 1 147 5 139 1 4 2 120 2 273 2 193 1 318 1 203 1 204 1 289 1 266 1 115 1 229 5 357 2 8 2 96 1 251 1 221 1 
369 1 101 1 
347 2 101 2 247 1 342 2 18 1 44 1 250 1 279 2 290 1 
75 1 68 1 21 1 
232 1 26 1 347 1 296 1 87 1 118 1 101 1 89 1 342 1 33 1 249 1 128 1 94 1 43 1 305 1 95 1 
26 1 347 2 296 1 87 1 297 1 118 1 350 1 247 1 89 1 342 2 75 1 33 1 128 1 249 1 94 1 43 1 305 1 250 1 95 1 279 1 
342 3 347 3 18 1 250 3 279 3 101 1 350 1 247 3 
342 1 347 1 181 1 250 1 279 1 5 1 247 1 
342 1 347 1 18 1 44 1 250 1 279 1 290 1 5 1 247 1 
280 1 26 1 347 4 147 1 50 1 167 1 118 1 101 1 122 1 350 1 5 1 76 1 53 1 33 1 262 1 128 1 358 1 290 1 340 1 136 1 11 2 85 1 296 1 87 1 297 1 89 1 247 3 302 1 342 4 304 1 179 1 249 1 226 1 94 1 206 1 184 1 43 1 18 2 305 1 250 3 306 1 95 1 279 3 229 1 
342 2 347 2 343 1 250 1 84 1 279 2 101 1 247 1 350 1 
253 1 347 3 297 1 147 1 5 1 350 2 247 3 122 1 342 3 53 1 76 1 262 1 18 1 250 3 306 1 290 1 229 1 279 3 221 1 
347 2 350 1 247 2 342 2 75 1 18 1 250 2 290 1 279 2 21 1 
26 1 347 1 296 1 87 1 118 1 101 1 89 1 342 1 33 1 249 1 128 1 94 1 43 1 305 1 95 1 
26 1 347 1 296 1 69 1 118 1 101 1 342 1 33 1 249 1 128 1 94 1 43 1 305 1 20 1 95 1 
145 1 280 1 47 1 11 2 299 1 167 1 302 1 179 1 226 1 206 1 184 1 186 1 220 1 340 1 
342 1 76 1 347 1 80 1 250 1 279 1 5 1 247 1 
154 1 347 5 297 1 101 1 350 2 247 4 342 5 343 1 18 1 250 4 84 1 279 5 290 1 345 1 
342 2 347 2 181 1 80 1 250 2 279 2 5 1 247 2 
317 1 162 1 
317 1 162 1 
56 1 127 1 
56 1 127 1 
56 1 127 1 
172 1 317 1 162 1 
317 2 56 1 127 1 162 2 
317 1 257 1 162 1 
172 1 317 1 162 1 
172 1 317 1 162 1 
317 1 143 1 162 1 
317 1 143 1 162 1 
317 1 143 1 162 1 
187 2 196 2 211 2 256 3 147 2 100 1 117 1 140 1 260 1 317 2 112 2 275 2 216 1 217 1 105 1 129 1 162 2 229 2 221 1 
187 1 307 1 99 1 347 2 256 1 147 1 257 1 101 1 170 1 317 1 216 1 196 1 341 1 364 1 247 2 201 1 342 2 275 1 112 1 250 2 162 1 229 1 279 2 97 1 
333 1 35 1 293 1 
138 1 35 1 293 1 
1 1 312 1 212 1 138 1 333 2 293 3 
1 1 39 1 212 1 138 1 333 1 293 2 
1 2 212 1 138 1 333 1 293 2 
188 1 0 2 47 1 99 1 147 5 4 1 70 1 213 1 120 1 258 1 285 1 193 2 31 1 318 1 263 2 355 1 59 1 8 1 357 1 339 1 266 2 221 2 199 1 364 1 299 1 201 1 90 1 273 4 229 5 115 1 251 1 335 1 
0 6 47 3 233 1 281 1 50 1 147 8 4 2 5 1 285 3 193 6 288 1 339 1 8 2 59 3 199 3 109 4 299 3 247 1 201 4 110 1 342 1 18 1 250 1 115 1 251 1 347 1 120 5 70 3 258 3 353 1 171 4 125 1 318 1 355 2 357 2 266 5 221 5 139 1 328 1 225 1 90 2 273 6 181 1 279 1 229 8 335 3 
0 2 47 1 347 1 50 1 147 3 4 1 213 1 70 1 5 1 258 1 353 1 285 1 31 1 193 2 263 1 355 1 8 1 357 1 266 2 59 1 221 2 199 1 299 1 139 1 247 1 328 1 201 1 90 1 342 1 273 2 181 1 18 1 250 1 279 1 115 1 229 3 335 1 
0 4 47 2 233 1 147 3 50 1 4 1 5 1 285 2 193 4 59 2 8 1 199 2 299 2 247 1 201 2 110 1 342 1 18 1 250 1 115 1 347 1 70 2 213 1 258 2 353 1 31 1 125 1 263 1 355 1 266 3 357 1 221 3 139 1 328 1 90 1 273 2 181 1 229 3 279 1 335 2 
254 1 118 1 369 1 
141 1 118 1 
121 1 
128 1 118 1 
254 2 197 1 128 1 118 3 43 1 346 1 
128 1 118 1 43 1 
13 1 118 1 
268 1 198 1 299 1 168 1 71 1 123 4 178 2 330 1 104 1 226 3 278 1 59 1 356 3 185 1 130 2 340 7 292 1 
268 1 198 1 299 1 168 1 71 1 123 4 178 2 330 1 104 1 226 3 278 1 59 1 356 3 185 1 130 2 340 7 292 1 
268 1 198 1 299 1 168 1 71 1 123 4 178 2 354 1 330 1 104 1 226 3 278 1 59 1 356 3 185 1 130 2 340 7 292 1 
25 1 280 2 47 4 146 4 168 2 70 4 71 1 123 19 237 1 104 2 174 1 265 1 59 5 356 8 340 33 130 3 292 2 36 1 268 1 269 1 198 1 11 4 324 4 299 5 15 1 178 3 330 2 179 2 226 14 344 2 206 2 184 2 278 5 185 1 163 1 335 4 
280 2 168 1 71 1 123 5 104 1 59 1 356 4 320 1 340 9 130 2 292 1 153 1 198 1 11 4 299 1 178 3 179 2 330 1 226 4 344 1 206 2 184 2 278 1 185 1 
309 1 252 1 310 1 26 1 312 1 255 1 2 1 30 1 73 1 7 1 194 1 126 2 291 1 35 1 222 1 293 2 242 1 133 1 360 2 296 1 12 1 138 1 271 1 327 1 63 1 249 1 277 1 333 1 305 1 95 1 
67 1 309 1 312 1 26 1 2 1 30 1 73 1 7 1 194 1 126 3 291 1 35 1 222 1 293 2 242 1 133 1 360 3 296 1 12 1 138 1 271 1 223 1 327 2 63 1 249 1 277 1 333 1 65 1 305 1 95 1 
309 1 26 1 312 1 30 1 7 1 194 1 126 2 291 1 35 1 293 2 242 1 133 1 360 2 12 1 296 1 138 1 223 1 327 2 63 1 249 1 277 1 333 1 65 1 305 1 95 1 
67 1 309 2 26 1 118 1 169 1 194 2 126 1 128 1 222 1 242 2 360 1 323 1 296 1 12 2 271 1 366 1 303 1 42 1 249 1 94 1 305 1 95 1 207 1 
242 1 309 1 310 1 312 1 26 1 360 1 255 1 12 1 296 1 138 1 2 1 271 1 223 1 30 1 73 1 7 1 63 1 194 1 126 1 249 1 333 1 305 1 95 1 35 1 293 2 222 1 
244 1 
0 2 3 2 52 2 147 5 51 1 4 1 5 1 193 2 53 1 57 1 239 1 58 1 8 1 241 1 9 2 199 2 296 2 60 2 300 2 157 1 62 1 342 1 111 1 249 2 343 1 305 1 66 1 306 1 115 1 207 1 251 3 26 2 210 1 347 1 118 1 120 6 124 4 76 1 318 1 218 2 262 1 128 1 266 2 357 1 221 2 175 1 361 2 366 1 224 1 90 1 94 2 228 1 229 5 95 1 279 1 
210 1 347 1 147 3 120 2 5 1 283 1 124 2 76 1 53 1 262 1 57 1 58 1 9 1 175 1 157 1 342 1 343 1 66 1 306 1 279 1 229 3 251 1 
210 1 347 1 3 1 147 3 120 1 5 1 283 1 124 3 76 1 53 1 262 1 57 1 58 1 221 1 175 1 157 1 342 1 343 1 66 1 306 1 279 1 229 3 115 1 251 1 
210 1 347 1 3 1 147 3 120 2 283 1 5 1 124 3 76 1 53 1 262 1 218 1 57 1 58 1 9 1 221 1 175 1 157 1 342 1 343 1 66 1 306 1 279 1 229 3 115 1 251 1 
45 1 3 4 147 5 51 1 52 2 4 1 5 1 283 1 53 1 193 1 57 1 58 1 8 1 9 4 199 2 60 2 300 2 157 1 342 1 111 1 343 1 306 1 66 1 115 5 251 3 210 1 313 1 347 1 120 7 124 6 76 1 318 1 218 4 262 1 173 1 357 1 266 1 221 5 175 1 361 2 40 1 276 1 229 5 279 1 
0 2 3 2 51 1 147 4 52 2 4 1 5 1 53 1 193 1 57 1 58 1 8 1 9 2 199 2 60 2 300 2 157 1 342 1 62 1 111 1 343 1 306 1 66 1 115 1 251 2 210 1 347 1 120 4 124 4 76 1 318 1 262 1 218 2 357 1 266 1 221 2 175 1 361 2 279 1 229 4 
45 1 210 1 313 1 347 1 3 2 52 2 51 1 147 4 4 1 120 4 5 1 124 4 193 1 76 1 53 1 318 1 218 2 262 1 57 1 58 1 266 1 8 1 357 1 221 1 9 2 175 1 361 2 199 2 60 2 300 2 157 1 342 1 111 1 276 1 343 1 66 1 306 1 115 1 279 1 229 4 251 2 
45 1 210 1 313 1 347 1 3 2 52 2 51 1 147 4 4 1 120 4 5 1 124 4 193 1 76 1 53 1 318 1 218 2 262 1 57 1 58 1 266 1 8 1 357 1 221 1 9 2 175 1 361 2 199 2 60 2 300 2 157 1 342 1 111 1 276 1 343 1 66 1 306 1 115 1 279 1 229 4 251 2 
0 2 210 1 347 1 3 2 52 2 147 4 29 1 4 1 120 4 5 1 124 4 193 1 76 1 53 1 318 1 218 2 262 1 57 1 58 1 266 1 8 1 357 1 221 1 9 2 175 1 155 2 300 2 325 1 157 1 367 2 342 1 111 1 276 1 343 1 17 1 66 1 306 1 115 1 279 1 229 4 251 2 
45 1 210 1 313 1 347 1 3 3 52 2 51 1 147 4 4 1 120 5 5 1 124 5 193 1 76 1 53 1 318 1 262 1 173 1 218 3 57 1 58 1 266 1 8 1 357 1 221 1 9 3 175 1 361 2 199 2 60 2 300 2 157 1 342 1 111 1 276 1 343 1 66 1 306 1 115 1 279 1 229 4 251 2 
45 1 210 1 313 1 347 1 3 3 52 2 51 1 147 4 4 1 120 5 5 1 124 5 193 1 76 1 53 1 318 1 262 1 173 1 218 3 57 1 58 1 266 1 8 1 357 1 221 1 9 3 175 1 361 2 199 2 60 2 300 2 157 1 342 1 111 1 276 1 343 1 66 1 306 1 115 1 279 1 229 4 251 2 
0 2 3 2 147 4 52 2 4 1 5 1 53 1 193 1 57 1 58 1 8 1 9 2 155 2 300 2 157 1 342 1 62 1 111 1 343 1 306 1 66 1 115 1 251 2 210 1 347 1 120 4 124 4 76 1 318 1 262 1 218 2 357 1 266 1 221 1 175 1 325 1 367 2 279 1 229 4 
280 1 198 1 68 1 11 2 299 1 167 1 101 2 71 1 123 3 178 2 302 1 75 1 179 1 330 1 226 3 206 1 184 1 59 1 356 2 186 1 369 1 185 1 130 1 340 6 292 1 21 1 
25 1 189 1 280 2 47 1 68 10 146 3 167 1 70 2 101 1 123 8 75 10 174 1 356 1 59 2 340 13 38 1 136 1 107 1 11 4 324 3 299 1 15 1 302 2 179 2 226 5 183 1 206 2 184 2 278 1 144 1 335 2 21 3 
280 1 26 1 232 1 347 2 118 1 167 1 101 1 350 1 123 1 33 1 128 1 340 2 37 1 136 1 296 1 11 2 87 1 297 1 89 1 247 1 302 1 342 2 179 1 161 1 249 1 94 1 183 1 226 1 206 1 43 1 184 1 305 1 250 1 95 1 279 1 144 1 21 1 164 1 
280 3 47 2 101 2 338 2 59 3 340 18 292 1 294 2 198 1 296 3 11 6 156 2 297 1 299 3 247 1 342 3 302 3 304 2 249 3 206 3 250 1 305 2 19 1 21 5 26 3 347 3 68 5 167 3 118 2 70 2 71 1 350 1 123 10 75 5 78 1 33 2 128 2 81 1 356 6 130 1 136 1 362 2 87 2 223 1 89 2 178 2 330 1 179 3 226 8 94 1 183 1 184 3 43 2 278 4 185 1 279 1 95 2 144 1 335 2 
252 1 280 2 26 8 347 1 118 3 167 2 350 1 123 1 316 1 54 1 79 1 128 2 340 2 136 1 296 7 11 4 365 1 223 1 366 1 247 1 329 1 342 1 302 2 274 1 160 1 179 2 249 8 94 2 226 1 93 2 206 2 184 2 250 1 305 2 186 1 279 1 95 2 207 1 144 1 
280 1 47 1 347 1 167 1 70 1 214 1 123 1 290 1 59 1 340 2 11 2 299 1 247 1 302 1 342 1 179 1 183 1 226 1 206 1 18 1 184 1 250 1 279 1 335 1 
280 1 134 1 68 1 11 2 167 1 70 1 123 2 302 1 75 1 179 1 206 1 184 1 278 1 356 1 186 1 59 1 340 2 21 1 
145 1 280 1 47 1 11 2 299 1 167 1 302 1 179 1 226 1 206 1 184 1 186 1 340 1 
47 1 280 1 68 1 11 2 299 1 167 1 70 1 123 2 302 1 75 1 179 1 226 1 206 1 184 1 186 1 59 1 340 3 21 1 335 1 
280 1 134 1 68 1 11 2 167 1 70 1 123 2 274 1 302 1 75 1 179 1 206 1 184 1 278 1 356 1 59 1 340 2 21 1 
145 1 302 1 274 1 47 1 280 1 179 1 11 2 226 1 299 1 206 1 184 1 167 1 340 1 
47 1 280 1 68 1 11 2 299 1 167 1 70 1 123 2 274 1 302 1 75 1 179 1 226 1 206 1 184 1 59 1 340 3 21 1 335 1 
47 1 280 1 68 1 11 2 299 1 167 1 70 1 123 2 302 1 75 1 179 1 226 1 206 1 184 1 59 1 340 3 21 1 335 1 
280 1 26 1 347 1 118 1 167 1 101 1 123 1 33 1 128 1 340 2 136 1 296 1 11 2 87 1 89 1 342 1 302 1 304 1 179 1 249 1 94 1 226 1 206 1 43 1 184 1 305 1 95 1 144 1 
280 1 26 1 347 1 69 1 118 1 167 1 101 1 123 1 236 1 33 1 128 1 340 2 136 1 296 1 11 2 342 1 302 1 179 1 249 1 94 1 226 1 206 1 43 1 184 1 305 1 95 1 20 1 144 1 
47 1 280 1 68 1 11 2 299 1 167 1 70 1 123 2 302 1 75 1 179 1 226 1 183 1 206 1 184 1 59 1 340 3 21 1 335 1 
47 1 252 1 280 1 26 1 68 1 347 1 118 1 167 1 70 1 123 2 75 1 33 1 128 1 59 1 340 3 362 1 296 1 11 2 87 1 299 1 89 1 342 1 302 1 304 1 179 1 249 1 226 1 206 1 43 1 184 1 305 1 95 1 21 1 335 1 
47 1 280 1 48 1 347 1 68 1 167 1 70 1 123 2 75 1 290 1 59 1 340 4 11 2 299 1 247 1 302 1 342 1 179 1 226 2 183 1 206 1 18 1 184 1 250 1 279 1 335 1 21 1 
153 1 280 1 32 1 179 1 116 1 11 2 238 1 319 1 206 1 184 1 
153 1 280 1 32 1 179 1 116 1 11 2 238 1 319 1 206 1 184 1 
153 1 280 1 32 1 179 1 116 1 11 2 238 1 319 1 206 1 184 1 
153 1 280 1 32 1 179 1 116 1 11 2 238 1 319 1 206 1 184 1 
153 1 280 1 32 1 179 1 116 1 11 2 238 1 319 1 206 1 184 1 
187 1 196 1 317 1 275 1 112 1 217 1 105 1 92 1 129 1 162 1 
170 1 257 1 
187 1 209 1 196 1 317 1 275 1 112 1 176 1 162 1 6 1 
187 1 196 1 211 1 256 2 147 1 117 1 140 1 260 1 317 1 216 1 112 1 275 1 217 1 105 1 129 1 229 1 162 1 221 1 
187 1 196 1 211 1 256 2 147 1 117 1 140 1 260 1 317 1 216 1 112 1 275 1 217 1 105 1 129 1 229 1 162 1 221 1 
187 1 196 1 211 1 256 2 147 1 117 1 140 1 260 1 317 1 216 1 112 1 275 1 217 1 105 1 129 1 229 1 162 1 221 1 
172 1 166 1 86 1 
172 1 166 1 86 1 
143 1 370 1 
86 1 143 1 370 1 
307 1 97 1 
187 1 307 1 211 1 99 1 347 2 256 1 147 1 117 1 257 1 101 1 170 1 317 1 196 1 341 1 364 1 247 2 201 1 342 2 273 1 275 1 112 1 180 1 250 2 229 1 162 1 279 2 97 1 
172 1 166 1 
86 1 143 1 370 1 
280 1 26 2 347 2 348 1 118 1 167 1 123 1 351 1 102 1 79 1 128 1 340 2 359 1 136 1 11 2 296 2 365 1 200 1 302 1 342 2 179 1 249 2 183 1 226 1 93 2 206 1 184 1 305 1 95 1 279 2 144 1 
252 1 312 1 26 2 296 2 138 1 223 1 73 1 284 1 74 1 7 1 63 1 194 1 286 1 249 2 333 1 305 1 95 1 35 1 293 2 
312 1 26 1 295 1 296 1 138 1 223 1 73 1 74 1 7 1 63 1 194 1 249 1 333 1 305 1 95 1 35 1 293 2 
26 1 296 1 118 1 366 1 284 1 303 1 194 1 128 1 249 1 94 1 227 1 305 1 95 1 207 1 
312 1 26 1 296 1 138 1 223 1 73 1 284 1 74 1 7 1 63 1 194 1 286 1 249 1 333 1 305 1 95 1 35 1 293 2 
267 1 
231 1 193 1 204 1 266 1 115 1 369 1 221 1 
0 1 51 1 147 1 4 1 120 1 193 1 318 1 266 1 8 1 357 1 221 2 361 1 199 1 60 1 229 1 115 1 251 1 
26 1 197 1 296 1 118 1 4 1 272 1 141 1 318 1 128 1 249 1 94 1 43 1 305 1 34 1 95 2 357 1 8 1 
0 4 25 1 47 2 146 1 4 1 70 2 234 1 258 3 285 3 193 4 318 1 266 4 8 1 357 1 59 2 221 2 135 1 199 2 108 1 324 1 299 2 14 1 334 1 335 2 
313 1 347 1 147 1 50 1 4 1 5 1 353 1 193 2 318 1 149 1 83 1 8 1 357 1 59 2 266 2 292 1 198 1 299 1 247 1 328 1 342 1 330 1 113 2 181 1 18 1 250 1 229 1 279 1 
231 1 4 1 193 1 318 1 204 1 357 1 8 1 115 1 266 1 221 1 
0 2 47 1 199 1 299 1 70 1 258 1 285 1 193 2 59 1 266 1 221 1 335 1 
147 1 115 1 229 1 120 1 251 1 221 1 
26 4 49 1 147 3 118 1 4 2 120 4 193 2 318 1 128 1 82 1 152 2 8 2 357 2 266 2 241 2 296 4 139 1 224 1 366 1 90 2 249 4 94 2 228 1 305 1 95 1 229 3 207 1 251 2 208 1 
280 1 26 1 347 3 50 1 118 1 167 1 101 1 33 1 128 1 340 1 136 1 11 2 296 1 85 1 87 1 247 2 89 1 342 3 302 1 304 1 179 1 249 1 226 1 94 1 206 1 18 2 43 1 184 1 250 2 305 1 279 2 95 1 
0 4 199 2 4 1 258 2 90 1 285 2 193 2 318 1 357 1 8 1 266 1 115 2 130 1 241 1 221 4 
196 1 275 1 219 1 
196 1 275 1 217 1 314 1 97 1 
196 1 275 1 219 1 
196 1 275 1 219 1 
196 1 275 1 349 1 
196 1 275 1 349 1 
196 1 275 1 349 1 
196 1 275 1 
317 1 162 1 
280 2 198 1 11 4 299 1 71 1 123 4 178 2 179 2 330 1 226 4 344 1 206 2 184 2 278 1 59 1 356 3 185 1 130 1 340 8 292 1 
198 1 299 1 71 1 123 3 178 2 330 1 226 3 369 1 185 1 356 2 59 1 130 1 340 6 292 1 
280 1 47 1 11 2 299 1 315 1 70 1 123 2 179 1 226 1 206 1 184 1 59 1 340 3 335 1 
25 1 47 2 324 2 146 2 299 2 70 2 15 1 123 6 174 1 226 4 278 2 59 2 356 2 340 10 335 2 
47 2 280 2 146 2 70 2 71 1 123 14 174 1 83 1 356 10 59 4 130 1 340 28 292 4 107 1 198 2 11 4 324 2 299 4 15 1 178 5 330 4 179 2 226 14 344 2 206 2 184 2 278 5 185 1 163 1 335 2 
226 1 324 1 340 1 
146 1 340 1 123 1 
47 1 156 1 299 1 70 1 123 3 226 2 278 1 59 1 356 1 340 5 335 1 
25 1 280 1 47 2 146 1 70 2 234 1 123 6 59 2 356 1 340 10 153 1 135 1 11 2 108 1 324 1 299 2 14 1 179 1 226 4 206 1 184 1 278 1 334 1 335 2 
198 1 299 1 123 3 178 1 330 1 226 3 278 1 59 1 356 2 340 6 292 1 
280 1 11 2 71 1 123 1 178 1 330 1 179 1 226 2 344 1 206 1 184 1 278 1 356 2 185 1 340 3 292 1 163 1 
25 1 280 1 146 1 71 1 123 4 59 1 356 2 130 1 340 8 292 1 153 1 135 1 198 1 11 2 324 1 299 1 178 2 179 1 330 1 226 4 206 1 184 1 185 1 
25 1 280 2 146 1 315 1 70 1 71 1 123 6 174 1 59 2 356 3 130 1 340 11 292 1 153 1 135 1 198 1 11 4 324 2 299 1 178 2 330 1 179 2 226 5 206 2 184 2 278 1 185 1 335 1 
25 1 280 2 47 2 146 1 315 1 70 2 234 1 123 6 59 2 356 1 340 10 153 1 135 1 11 4 108 1 324 1 299 2 14 1 179 2 226 4 206 2 184 2 278 1 334 1 335 2 
25 1 280 3 47 1 146 1 315 1 70 2 234 1 71 1 123 10 59 3 356 4 130 1 340 16 292 1 153 1 135 1 198 1 11 6 108 1 324 1 299 2 14 1 178 2 330 1 179 3 344 1 226 6 206 3 184 3 278 2 185 1 334 1 335 2 
25 1 280 1 146 1 71 1 123 4 59 1 356 2 130 1 340 8 292 1 153 1 135 1 198 1 11 2 324 1 299 1 178 2 179 1 330 1 226 4 206 1 184 1 185 1 
25 1 280 1 47 2 146 1 70 2 234 1 123 6 59 2 356 1 340 10 153 1 135 1 11 2 108 1 324 1 299 2 14 1 179 1 226 4 206 1 184 1 278 1 334 1 335 2 
25 1 280 3 47 1 146 1 315 1 70 2 234 1 123 7 356 1 59 2 340 10 153 1 135 1 11 6 108 1 324 1 299 1 14 1 179 3 344 1 226 3 206 3 184 3 278 1 334 1 335 2 
25 1 280 3 47 1 146 1 70 2 234 1 123 7 356 2 59 2 340 10 153 1 135 1 11 6 108 1 324 1 299 1 14 1 179 3 64 1 344 1 226 3 206 3 184 3 278 2 334 1 335 2 
198 1 299 1 71 1 123 3 178 3 330 3 226 4 278 3 185 2 356 6 59 1 340 7 292 3 
25 1 280 3 47 1 146 1 70 2 234 1 123 7 356 1 59 2 340 10 153 1 135 1 11 6 108 1 324 1 299 1 14 1 179 3 64 1 344 1 226 3 206 3 184 3 278 1 334 1 335 2 
153 1 280 1 198 1 11 2 299 2 123 5 178 3 179 1 330 2 226 5 206 1 184 1 83 1 278 2 356 5 59 2 340 10 292 2 
153 1 280 1 11 2 70 1 123 2 179 1 206 1 184 1 278 1 59 1 356 1 340 2 
153 1 47 1 280 1 11 2 299 1 70 1 123 2 179 1 226 1 206 1 184 1 278 1 356 1 59 1 340 3 335 1 
153 1 280 3 11 6 123 1 178 1 179 3 330 1 64 1 344 1 226 2 206 3 184 3 278 1 356 2 340 3 163 1 292 1 
25 1 280 5 47 4 146 4 315 1 70 4 71 1 123 20 237 1 174 1 59 6 356 11 130 1 340 37 292 3 36 1 153 1 269 1 198 2 11 10 324 4 299 6 15 1 178 4 330 3 179 5 64 1 344 2 226 17 206 5 184 5 278 7 185 1 163 1 335 4 
342 1 55 1 347 1 343 1 279 1 84 1 101 1 
308 1 321 1 322 1 347 1 101 1 158 1 342 1 55 1 205 1 343 1 84 1 279 1 
26 1 296 1 128 1 249 1 94 1 118 1 305 1 95 1 207 1 369 1 366 1 
26 1 347 2 296 1 87 1 118 1 101 1 350 1 247 1 342 2 33 1 128 1 249 1 94 1 43 1 250 1 305 1 95 1 279 1 
165 1 26 1 347 2 296 1 87 1 13 1 118 3 101 1 5 1 350 1 247 2 342 2 76 1 33 1 128 2 249 1 43 2 306 1 250 1 305 1 95 1 279 2 152 1 
165 1 26 2 347 2 118 3 101 1 350 1 5 1 76 1 33 1 128 2 152 1 296 2 41 1 13 1 247 2 342 2 249 2 43 2 305 1 250 1 306 1 20 1 279 2 95 1 
165 1 26 3 27 1 254 1 147 2 118 4 120 1 53 1 128 1 152 1 221 1 296 3 41 1 13 1 141 1 248 1 249 3 94 1 43 1 305 1 229 2 95 1 115 1 
165 1 26 3 254 1 296 3 41 1 13 1 147 2 118 4 337 1 120 1 141 1 53 1 128 1 249 3 94 1 43 1 305 1 115 1 95 1 229 2 152 1 221 1 
26 1 54 1 296 1 249 1 305 1 95 1 
252 1 26 7 197 1 296 6 118 3 365 1 223 1 88 1 316 1 329 1 91 1 160 1 54 1 331 1 249 7 128 2 93 1 94 2 43 1 305 2 95 3 
280 2 252 1 26 1 68 1 347 2 118 1 167 2 101 2 71 1 350 1 123 3 102 1 75 1 33 1 128 1 59 1 356 2 130 1 340 6 292 1 294 1 198 1 362 1 11 4 296 1 87 1 299 1 247 1 89 1 178 2 302 2 342 2 304 1 330 1 179 2 249 1 226 3 183 1 206 2 43 1 184 2 305 1 250 1 185 1 95 1 279 1 21 1 
231 1 311 1 26 1 254 1 147 3 118 2 4 2 337 1 120 2 193 1 53 1 318 2 150 1 264 1 266 1 8 2 357 2 221 1 296 1 273 1 141 1 204 1 249 1 94 1 115 1 229 3 251 1 208 1 
26 1 254 1 197 1 296 1 118 1 121 1 54 1 249 1 128 1 43 1 34 1 305 1 95 2 
252 1 26 4 296 4 41 1 118 1 366 1 249 4 128 1 94 1 114 1 305 1 95 1 207 1 
26 2 296 2 118 1 88 1 331 1 249 2 128 1 106 1 43 1 305 1 152 1 19 1 95 2 240 1 
7 1 26 1 296 1 138 1 249 1 94 1 305 1 95 1 35 1 293 1 
252 1 26 2 296 2 128 1 249 2 348 1 118 1 305 1 365 1 95 1 223 1 
252 1 26 5 296 4 118 3 365 1 366 1 329 1 160 1 249 5 128 2 94 1 114 1 305 2 152 1 207 1 95 2 
252 1 26 5 296 4 118 3 365 1 366 1 160 1 249 5 128 2 94 1 332 1 114 1 305 2 152 1 207 1 95 2 
26 1 347 2 296 1 118 1 101 1 350 1 247 1 342 2 33 1 128 1 249 1 94 1 43 1 250 1 305 1 95 1 279 1 20 1 
26 1 197 1 296 1 118 1 88 1 91 1 331 1 249 1 128 1 43 1 305 1 152 1 95 2 
243 1 359 1 347 1 200 1 235 1 326 1 351 1 342 1 279 1 
132 1 137 1 326 1 
243 1 148 1 101 1 235 1 326 1 
243 2 132 1 190 1 137 1 147 2 148 2 101 1 5 1 326 1 235 2 122 1 273 1 53 1 76 1 262 1 306 1 115 1 229 2 221 1 
133 1 277 1 369 1 291 1 
133 1 360 1 126 1 277 1 271 1 291 1 222 1 
309 1 126 1 12 1 
310 1 133 1 360 3 28 2 282 1 271 1 126 3 277 1 151 1 291 1 22 1 222 1 
133 1 360 2 126 2 298 1 277 1 271 1 291 1 327 1 222 1 
368 1 16 1 310 1 360 1 126 1 333 1 277 1 271 1 35 1 293 1 222 1 
310 1 360 1 126 1 277 1 271 1 291 1 222 1 
133 1 310 1 360 1 126 1 271 1 291 2 222 1 
310 1 360 2 61 1 271 2 191 1 202 1 126 2 277 1 291 1 222 2 
133 1 310 1 360 3 119 1 271 1 327 2 159 1 368 1 126 3 277 2 291 1 131 1 222 1 
133 1 310 1 312 1 360 2 138 1 271 1 327 1 126 2 287 1 277 1 333 1 291 1 35 1 293 2 222 1 
24 1 133 1 310 1 360 4 298 1 119 1 271 2 327 2 368 1 126 4 277 2 291 1 222 2 
133 1 310 1 360 1 126 1 277 1 271 1 291 1 222 1 
133 2 360 4 28 1 282 1 119 1 271 1 327 2 368 1 126 4 277 3 151 1 291 2 10 1 222 1 
310 1 133 1 360 2 245 1 271 1 327 1 259 1 126 2 277 1 291 1 98 1 222 1 
310 1 133 1 360 3 28 2 282 1 271 1 103 1 126 3 277 1 151 2 291 1 222 1 
261 1 277 2 246 1 230 2 
336 1 310 1 360 1 126 1 271 1 222 1 
159 1 133 1 310 1 360 2 126 2 277 1 271 1 291 1 327 1 222 1 
23 1 
133 1 310 1 360 1 126 1 277 1 271 1 291 1 222 1 
310 1 133 1 360 3 28 1 271 1 327 1 159 1 126 3 277 1 291 1 222 1 
368 1 277 1 119 1 10 1 
277 1 291 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 121 (82,170,325) (82,170,325) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 121 (82,170,325) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (234,372) (110,222,320) (82,170,325) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (256,278) (173,351) (173,351) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 121 (82,170,325) (82,170,325) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 121 (110,222,320) (110,222,320) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 121 (110,222,320) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (256,278) (256,278) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException 121 (110,222,320) (110,222,320) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> -1
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource; | RETURN | 431 | return null
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> >>>
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 642 | stmt -> ;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3734 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 2635 | stmt -> ;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2293 | stmt -> ;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 8735 | || -> &&
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
118 1 184 1 343 4 164 1 273 3 99 1 124 2 5 2 60 1 30 5 301 1 105 2 129 2 108 9 366 6 258 2 176 1 217 1 111 9 334 2 333 1 218 1 220 1 263 1 115 1 17 1 73 1 117 2 
118 1 184 1 343 4 164 1 273 3 99 1 124 2 5 2 60 1 30 5 301 1 105 2 129 2 108 9 366 6 258 2 176 1 217 1 111 9 333 1 218 1 334 2 220 1 263 1 115 1 17 1 73 1 117 2 
118 1 184 1 343 5 164 1 273 4 99 1 124 2 5 2 60 1 30 6 301 1 105 2 129 2 108 10 366 7 258 2 176 1 217 1 111 10 333 1 218 1 334 2 220 1 263 1 115 1 17 1 73 1 117 2 
118 1 184 1 343 3 273 2 99 1 124 2 5 2 60 1 30 4 301 1 105 2 129 2 108 7 366 4 258 2 176 1 217 1 111 7 333 1 218 1 334 1 220 1 263 1 115 1 17 1 73 1 117 2 
118 1 129 1 108 4 366 3 258 1 343 2 164 1 273 1 111 4 99 1 124 1 334 2 5 1 60 1 263 1 30 3 73 1 117 1 
253 1 118 1 129 1 108 2 258 1 245 1 111 2 333 1 124 1 5 1 171 1 263 1 30 1 115 1 73 1 105 1 
118 1 108 3 184 1 366 1 258 2 343 1 273 1 111 3 124 2 263 1 30 2 73 1 105 1 
118 1 184 1 343 4 164 1 273 3 99 1 124 2 318 1 60 1 5 1 30 5 301 1 105 1 129 1 366 7 108 9 152 1 258 2 111 9 218 1 334 2 263 1 73 1 117 1 
118 1 184 1 343 4 164 1 273 3 99 1 124 2 318 1 60 1 5 1 30 5 301 1 105 1 129 1 366 7 108 9 152 1 258 2 111 9 218 1 334 2 263 1 73 1 117 1 
289 1 102 1 1 1 
102 1 224 1 216 2 
142 2 13 2 353 2 309 2 91 2 321 1 304 2 283 1 
340 1 22 1 272 1 344 1 49 2 3 1 140 1 26 1 59 1 57 1 142 2 297 1 29 1 187 2 353 3 277 1 249 2 321 1 210 2 211 1 280 1 64 1 13 2 304 3 283 1 260 1 68 1 329 1 39 1 196 1 307 1 237 2 308 1 309 2 90 1 91 2 287 1 
142 1 13 1 353 1 309 1 48 1 91 1 355 1 244 1 304 1 283 1 
289 1 363 1 368 1 97 1 304 1 244 1 158 1 56 1 353 1 91 1 102 1 265 1 43 1 232 1 
289 1 363 2 13 1 97 1 304 1 244 1 56 1 142 1 309 1 353 1 91 1 102 1 265 2 43 1 232 1 
363 1 23 1 31 1 265 1 149 1 
289 1 363 2 23 1 31 1 102 1 203 1 265 2 330 1 
363 1 31 1 265 1 
363 1 13 1 23 1 48 1 244 1 283 1 304 1 142 1 309 1 353 1 198 1 91 1 355 1 265 1 
102 1 
289 1 363 2 23 1 31 1 102 1 9 1 203 1 265 2 
289 1 212 1 363 5 23 2 223 1 191 2 203 1 328 1 347 1 195 1 167 1 77 2 376 1 31 2 102 1 265 5 103 2 10 1 136 1 
321 1 1 1 
13 1 365 1 244 1 304 2 52 1 142 1 353 2 309 1 91 2 321 1 75 1 
264 1 116 1 369 1 
235 1 340 1 22 1 49 1 304 1 260 1 329 1 57 1 196 1 237 1 297 1 29 1 353 1 277 1 321 1 210 1 
315 1 13 1 365 1 368 1 185 1 304 5 331 1 40 1 142 4 309 4 353 5 91 5 357 2 321 1 
142 1 353 1 309 1 91 1 355 1 244 1 304 1 
340 1 22 1 49 1 185 1 260 1 304 2 369 1 329 1 57 1 196 1 142 1 297 1 237 1 29 1 309 1 353 2 277 1 91 1 357 1 210 1 
142 3 13 1 353 3 309 3 91 3 321 1 357 1 304 3 
142 1 353 1 309 1 91 1 355 1 244 1 304 1 
13 1 365 1 304 1 244 1 142 1 309 1 353 1 91 1 75 1 
49 1 97 1 185 1 52 1 3 1 56 1 57 1 59 1 142 3 187 1 277 1 321 1 232 1 13 2 326 1 283 1 68 1 329 1 196 1 237 1 287 1 340 1 22 1 344 1 244 2 165 1 26 1 297 1 29 1 353 4 249 2 357 1 210 1 211 1 363 1 365 1 304 4 260 1 39 1 307 1 309 3 91 3 90 1 265 1 43 1 
315 1 368 1 244 1 304 2 52 1 142 1 309 1 353 2 91 2 357 1 321 1 
363 1 13 1 365 1 97 1 185 1 244 1 304 3 165 1 132 1 56 1 142 3 309 3 353 3 91 3 102 1 265 1 357 2 43 1 232 1 
13 1 365 1 304 2 369 1 142 2 309 2 353 2 91 2 357 1 116 1 
340 1 22 1 49 1 304 1 260 1 329 1 57 1 196 1 237 1 297 1 29 1 353 1 277 1 321 1 210 1 
340 1 22 1 49 1 304 1 260 1 57 1 196 1 237 1 297 1 145 1 29 1 353 1 93 1 321 1 210 1 
120 1 243 1 272 2 344 1 24 1 51 1 3 1 274 1 59 1 228 1 187 4 249 2 211 1 12 1 151 1 214 1 35 1 303 1 68 1 369 2 39 2 264 2 116 2 287 1 
189 1 142 1 353 1 309 1 91 1 244 1 304 1 232 1 
70 1 42 1 
70 1 42 1 
134 1 226 1 
134 1 226 1 
134 1 226 1 
70 1 42 1 148 1 
70 1 42 1 148 1 
70 1 42 1 148 1 
100 1 70 1 42 1 
0 1 134 1 72 1 70 2 42 2 226 1 
70 1 42 1 261 1 
70 1 42 1 261 1 
70 1 42 1 261 1 
96 1 342 1 2 1 295 1 169 1 100 1 142 2 353 2 321 1 128 1 106 1 255 1 84 1 363 1 304 2 373 1 309 2 91 2 135 1 70 1 42 1 311 1 265 1 181 1 
33 1 65 1 362 1 291 2 363 2 96 1 259 1 156 1 295 2 373 3 180 1 72 1 102 1 311 2 42 2 70 2 128 2 265 2 106 2 
129 1 5 1 117 1 
129 1 5 1 245 1 
234 1 113 1 5 3 245 1 323 1 117 2 
113 1 5 2 245 1 323 1 117 1 372 1 
113 2 5 2 245 1 117 1 323 1 
289 1 137 2 23 4 342 1 203 1 224 1 51 1 77 1 247 1 319 2 228 1 352 1 31 1 102 2 103 1 10 1 63 1 12 1 255 1 363 5 191 1 66 2 284 1 303 1 216 3 327 1 328 3 194 1 195 2 135 1 265 5 44 1 
289 1 223 1 23 7 203 1 224 3 51 3 77 2 247 2 319 6 228 3 352 1 31 6 102 5 103 2 10 1 63 3 149 5 83 1 12 3 363 9 367 1 191 2 66 6 303 3 216 9 15 1 328 8 194 2 195 6 135 4 265 9 239 5 266 1 46 1 199 1 
289 1 137 1 23 2 223 1 224 2 51 1 77 1 247 1 319 2 228 1 102 3 103 1 63 1 12 1 363 3 191 1 66 2 303 1 216 4 327 1 328 3 194 1 195 2 135 1 265 3 44 1 
289 1 137 2 223 1 23 3 224 3 51 2 77 1 247 1 319 4 228 2 102 4 103 1 63 2 83 1 12 2 363 4 191 1 66 4 303 2 216 7 15 1 327 1 328 5 194 1 195 4 135 2 265 4 44 1 266 1 
57 1 1 1 32 1 
57 1 61 1 
172 1 
57 1 340 1 22 1 
57 1 306 1 
57 1 22 1 
340 1 22 1 57 2 188 1 172 1 337 1 32 2 
314 1 183 1 272 4 214 3 24 2 14 2 51 1 225 1 296 1 88 1 39 3 348 1 228 1 144 1 187 7 126 1 288 1 
314 1 183 1 272 4 214 3 24 2 14 2 51 1 225 1 296 1 88 1 39 3 348 1 228 1 144 1 187 7 126 1 288 1 
314 1 183 1 272 4 214 3 24 2 14 2 51 1 225 1 296 1 88 1 39 3 348 1 228 1 144 1 187 7 125 1 126 1 288 1 
314 1 183 2 344 1 272 19 24 8 51 6 225 1 204 1 296 1 59 1 348 5 248 1 350 1 144 5 276 1 228 6 187 37 249 2 126 2 63 3 252 1 211 1 12 3 257 1 282 3 214 17 131 1 14 2 303 3 68 1 88 2 39 18 71 4 288 9 339 1 
314 1 183 1 344 2 272 5 24 3 51 1 294 1 225 1 59 2 348 1 350 1 228 1 144 1 187 9 249 4 126 1 211 2 214 4 14 2 68 2 88 1 39 4 160 1 288 1 
241 1 121 1 325 1 108 1 258 1 49 1 130 1 111 1 124 1 237 1 170 1 263 1 147 1 105 1 174 1 210 1 
241 1 324 1 121 1 366 1 122 1 108 2 258 1 49 1 130 1 111 2 124 1 237 1 170 1 105 1 62 1 174 1 210 1 
234 1 241 1 324 1 366 1 108 1 49 1 130 1 260 1 245 1 111 1 5 1 237 1 29 1 81 1 82 1 320 1 62 1 174 1 105 1 210 1 
241 2 122 1 108 1 258 1 49 1 130 2 138 1 111 1 124 1 196 1 237 1 351 1 173 1 105 2 174 2 278 1 210 1 
241 1 121 1 325 1 108 1 258 1 49 1 130 1 111 1 124 1 237 1 170 1 263 1 105 1 62 1 174 1 210 1 
153 1 
313 1 182 2 269 1 49 2 97 1 54 1 56 1 57 1 7 1 103 1 10 1 232 1 191 1 193 1 328 2 195 2 158 1 196 2 237 2 238 1 200 1 202 1 22 1 123 1 203 1 244 1 206 1 247 1 77 1 29 1 353 1 31 2 210 2 360 1 363 3 368 1 260 1 304 1 87 1 89 1 179 1 262 1 91 1 265 3 43 1 378 1 
182 2 269 1 97 1 203 1 244 1 54 1 206 1 56 1 353 1 31 2 9 1 232 1 363 3 368 1 109 1 304 1 158 1 89 1 91 1 265 3 43 1 238 1 
182 3 289 1 269 1 97 1 203 1 244 1 54 1 25 1 206 1 56 1 353 1 31 1 102 1 9 1 232 1 363 3 368 1 304 1 158 1 89 1 91 1 265 3 43 1 238 1 
182 3 289 1 269 1 97 1 203 1 244 1 54 1 25 1 206 1 56 1 353 1 31 2 9 1 102 1 232 1 363 3 368 1 109 1 304 1 158 1 89 1 91 1 69 1 265 3 43 1 238 1 
313 1 182 2 269 1 48 1 97 1 54 1 56 1 142 1 9 1 229 1 102 1 103 1 10 1 232 1 13 1 191 1 67 1 109 2 283 1 328 1 195 1 158 1 198 1 69 2 238 1 240 1 289 1 203 1 244 2 206 1 77 1 353 2 31 3 355 1 361 1 363 3 368 1 304 2 86 1 87 1 89 1 179 2 309 1 262 2 91 2 265 3 43 1 
313 1 182 2 269 1 202 1 97 1 244 1 54 1 206 1 77 1 56 1 353 1 103 1 10 1 232 1 363 2 191 1 368 1 304 1 328 1 195 1 158 1 87 1 89 1 179 1 262 1 91 1 265 2 43 1 238 1 
313 1 182 2 269 1 48 1 97 1 54 1 56 1 142 1 102 1 103 1 10 1 232 1 13 1 191 1 67 1 283 1 328 1 195 1 158 1 198 1 238 1 240 1 289 1 244 2 206 1 77 1 353 2 355 1 361 1 363 2 368 1 304 2 87 1 89 1 179 2 262 2 309 1 91 2 265 2 43 1 
313 1 182 2 269 1 48 1 97 1 54 1 56 1 142 1 102 1 103 1 10 1 232 1 13 1 191 1 67 1 283 1 328 1 195 1 158 1 198 1 238 1 240 1 289 1 244 2 206 1 77 1 353 2 355 1 361 1 363 2 368 1 304 2 87 1 89 1 179 2 262 2 309 1 91 2 265 2 43 1 
313 1 182 2 269 1 48 1 97 1 54 1 56 1 142 1 102 1 103 1 10 1 232 1 13 1 191 1 155 1 283 1 328 1 195 1 158 1 198 1 238 1 289 1 244 2 206 1 77 1 353 2 355 1 251 1 361 1 363 2 368 1 304 2 89 1 179 2 262 2 309 1 91 2 312 1 265 2 43 1 
313 1 182 3 269 1 48 1 97 1 54 1 56 1 142 1 229 1 102 1 103 1 10 1 232 1 13 1 191 1 67 1 109 1 283 1 328 1 195 1 158 1 198 1 69 1 238 1 240 1 289 1 244 2 25 1 206 1 77 1 353 2 31 1 355 1 361 1 363 2 368 1 304 2 87 1 89 1 179 2 309 1 262 2 91 2 265 2 43 1 
313 1 182 3 269 1 48 1 97 1 54 1 56 1 142 1 229 1 102 1 103 1 10 1 232 1 13 1 191 1 67 1 109 1 283 1 328 1 195 1 158 1 198 1 69 1 238 1 240 1 289 1 244 2 25 1 206 1 77 1 353 2 31 1 355 1 361 1 363 2 368 1 304 2 87 1 89 1 179 2 309 1 262 2 91 2 265 2 43 1 
313 1 182 2 269 1 202 1 97 1 244 1 54 1 206 1 77 1 56 1 353 1 103 1 10 1 232 1 251 1 363 2 191 1 368 1 304 1 328 1 195 1 158 1 89 1 179 1 262 1 91 1 265 2 43 1 238 1 
314 1 183 1 344 1 272 3 24 2 1 1 51 1 225 1 3 1 59 1 348 1 144 1 228 1 187 6 249 2 321 2 211 1 214 2 35 1 14 1 369 1 68 1 39 3 264 1 116 1 287 1 
344 2 272 8 24 1 51 2 3 1 59 2 79 1 276 1 228 1 187 14 250 1 249 4 321 1 231 1 63 2 252 1 211 2 190 1 12 2 282 3 214 2 303 1 68 2 369 11 39 6 308 1 375 1 90 1 71 3 264 11 116 4 288 1 287 2 
340 1 22 1 95 1 49 1 344 1 272 1 185 1 3 1 57 1 59 1 142 1 297 1 29 1 353 2 187 2 277 1 249 2 321 1 357 1 302 1 210 1 211 1 190 1 235 1 260 1 304 2 68 1 329 1 305 1 196 1 39 1 237 1 308 1 309 1 91 1 90 1 116 1 287 1 
47 2 314 1 183 1 49 3 272 10 185 1 50 1 51 3 225 1 3 3 275 1 59 3 57 2 142 1 144 1 228 3 187 20 277 2 146 2 321 2 62 1 63 2 190 1 12 2 14 1 68 3 329 2 196 1 237 3 285 1 116 7 287 3 288 4 340 2 22 2 344 3 24 4 348 1 297 2 29 2 353 3 249 6 209 2 357 1 210 3 211 3 214 8 304 3 260 2 303 2 369 7 178 2 39 10 307 2 308 1 309 1 90 1 91 1 264 7 
161 1 22 2 49 8 344 2 272 1 163 1 345 1 3 2 57 3 59 2 142 1 29 2 353 1 187 2 147 1 249 4 300 1 357 1 62 1 210 7 211 2 280 2 364 1 35 1 304 1 260 2 193 1 68 2 196 2 38 1 39 1 237 8 308 1 309 1 91 1 90 1 335 1 287 2 378 1 
344 1 272 1 24 1 51 1 3 1 59 1 142 1 228 1 353 1 187 3 249 2 63 1 211 1 190 1 12 1 13 1 365 1 214 1 304 1 303 1 369 1 68 1 39 2 309 1 91 1 264 1 221 1 116 1 287 1 
211 1 12 1 344 1 272 2 214 1 35 1 51 1 369 1 68 1 3 1 274 1 59 1 187 2 249 2 264 1 116 1 288 1 287 1 
211 1 151 1 344 1 214 1 24 1 35 1 303 1 369 1 68 1 3 1 59 1 39 2 228 1 187 2 249 2 264 1 116 1 287 1 
272 2 344 1 24 1 51 1 3 1 59 1 228 1 187 4 249 2 63 1 211 1 12 1 214 2 35 1 303 1 68 1 369 2 39 2 264 2 116 2 287 1 288 1 
211 1 12 1 344 1 272 2 214 1 51 1 369 1 68 1 3 1 274 1 59 1 187 2 249 2 300 1 264 1 116 1 288 1 287 1 
211 1 151 1 344 1 214 1 24 1 303 1 369 1 68 1 3 1 59 1 39 2 228 1 187 2 249 2 300 1 264 1 116 1 287 1 
272 2 344 1 24 1 51 1 3 1 59 1 228 1 187 4 249 2 300 1 63 1 211 1 12 1 214 2 303 1 68 1 369 2 39 2 264 2 116 2 287 1 288 1 
272 2 344 1 24 1 51 1 3 1 59 1 228 1 187 4 249 2 63 1 211 1 12 1 214 2 303 1 68 1 369 2 39 2 264 2 116 2 287 1 288 1 
340 1 22 1 272 1 49 1 344 1 3 1 57 1 59 1 297 1 29 1 187 2 353 1 277 1 249 2 321 1 210 1 211 1 260 1 304 1 68 1 329 1 196 1 39 1 307 1 237 1 308 1 90 1 287 1 
340 1 22 1 272 1 49 1 344 1 3 1 57 1 59 1 297 1 29 1 145 1 187 2 353 1 249 2 354 1 321 1 210 1 211 1 260 1 304 1 68 1 196 1 39 1 237 1 308 1 90 1 93 1 287 1 
272 2 344 1 24 1 51 1 3 1 59 1 228 1 187 4 249 2 63 1 211 1 12 1 190 1 214 2 303 1 68 1 369 2 39 2 264 2 116 2 287 1 288 1 
340 1 22 1 272 2 49 1 344 1 24 1 51 1 3 1 57 1 59 1 297 1 228 1 29 1 187 4 353 1 277 1 147 1 249 2 209 1 63 1 210 1 211 1 12 1 214 2 303 1 260 1 304 1 369 2 68 1 329 1 39 2 307 1 237 1 264 2 116 2 288 1 287 1 
344 1 272 2 51 1 3 1 55 1 59 1 142 1 228 1 353 1 187 3 249 2 63 1 211 1 190 1 12 1 13 1 365 1 214 1 303 1 304 1 68 1 369 1 39 1 309 1 91 1 264 1 116 1 288 1 287 1 
344 2 272 9 24 3 294 1 51 3 98 2 227 1 59 2 143 1 276 1 228 3 187 19 249 4 208 1 322 1 63 3 252 1 211 2 12 3 282 1 214 6 303 3 68 2 39 10 71 2 159 1 336 1 286 2 288 3 94 1 
268 1 344 3 272 14 24 2 294 1 51 3 98 4 205 1 227 1 59 3 350 2 143 2 228 2 187 26 249 6 208 1 63 3 211 3 252 2 12 3 34 1 282 2 214 4 303 2 68 3 370 1 177 1 39 12 159 2 71 2 336 1 74 1 286 1 288 2 
268 1 314 1 242 1 183 1 344 3 272 20 24 4 294 1 51 5 225 1 98 4 205 1 227 1 59 3 348 1 350 1 143 2 144 1 276 1 228 5 187 41 249 6 208 1 63 4 252 3 211 3 12 4 34 1 282 3 214 8 14 1 303 4 370 1 68 3 177 1 39 21 71 4 159 1 336 1 74 1 286 1 288 4 94 1 
268 1 314 1 242 1 183 1 344 4 272 20 24 4 294 1 51 5 225 1 98 4 205 1 227 1 59 4 348 1 350 2 143 2 144 1 276 1 228 4 187 38 249 8 208 1 63 4 252 3 211 4 12 4 34 1 282 3 214 7 14 1 303 3 370 1 68 4 177 1 39 18 71 4 159 1 336 1 74 1 286 1 288 3 94 1 
268 1 314 1 183 1 344 2 272 27 24 7 294 1 51 8 225 1 98 4 205 1 227 1 59 2 348 1 350 1 79 2 143 1 144 1 276 2 228 8 187 52 249 4 208 1 63 7 252 2 211 2 12 7 34 1 282 4 214 14 14 1 303 7 370 1 68 2 177 1 39 25 71 4 159 1 336 1 74 1 286 1 288 7 
362 1 298 1 72 1 70 1 42 1 311 1 128 1 156 1 106 1 295 1 
169 1 100 1 
341 1 92 1 154 1 70 1 42 1 311 1 128 1 106 1 295 1 
148 1 233 1 
0 1 356 1 261 1 
33 1 362 1 291 1 363 1 96 1 259 1 156 1 295 1 373 2 180 1 72 1 102 1 311 1 42 1 70 1 265 1 128 1 106 1 
33 1 362 1 291 1 363 1 96 1 259 1 156 1 295 1 373 2 180 1 72 1 102 1 311 1 42 1 70 1 265 1 128 1 106 1 
33 1 362 1 291 1 363 1 96 1 259 1 156 1 295 1 373 2 180 1 72 1 102 1 311 1 42 1 70 1 265 1 128 1 106 1 
0 1 148 1 233 1 
0 1 148 1 233 1 
356 1 261 1 
0 1 356 1 261 1 
84 1 181 1 
291 1 293 1 23 1 342 1 2 1 295 1 169 1 100 1 142 2 353 2 321 1 128 1 106 1 255 1 84 1 363 1 259 1 304 2 373 1 309 2 135 1 91 2 70 1 42 1 311 1 265 1 181 1 
28 1 353 1 91 1 304 1 
222 1 237 2 121 1 147 1 49 2 174 1 62 1 110 1 19 1 210 2 
4 1 237 1 121 1 49 1 174 1 62 1 110 1 210 1 
196 1 256 1 237 1 49 1 174 1 278 1 19 1 210 1 
222 1 237 1 121 1 49 1 174 1 62 1 110 1 19 1 210 1 
78 1 
289 1 212 1 102 1 1 1 328 1 195 1 167 1 
289 1 203 1 224 1 77 1 58 1 31 1 102 2 103 1 127 1 10 1 363 1 191 1 216 1 328 1 195 1 87 1 265 1 
49 3 139 2 224 6 51 2 317 2 57 10 141 2 319 6 228 2 61 3 147 1 146 2 101 1 102 8 103 4 10 4 104 2 11 1 63 2 12 2 191 4 66 6 328 9 195 8 332 1 196 1 237 3 337 1 20 2 289 2 76 1 340 3 22 3 123 1 203 3 346 2 167 1 247 2 77 4 80 2 29 4 31 5 359 2 210 3 32 2 212 1 363 5 260 3 216 12 303 2 36 1 306 2 265 5 43 2 
289 2 123 1 203 1 224 3 51 2 205 1 247 1 77 2 319 5 228 2 31 1 102 5 103 2 10 2 104 1 359 2 63 2 252 1 12 2 363 1 34 1 191 2 66 5 282 1 216 6 303 2 328 8 370 1 177 1 195 5 71 1 265 1 74 1 377 1 267 1 
183 1 48 1 244 1 51 2 77 1 348 1 142 1 144 1 228 1 353 1 355 1 103 1 10 1 104 1 359 2 363 1 257 1 13 1 191 1 67 1 304 1 283 1 328 2 195 2 309 1 198 1 91 1 265 1 
212 1 289 1 191 1 328 1 167 1 195 1 77 1 102 1 103 1 10 1 
12 2 66 5 51 2 216 10 224 5 303 2 328 5 195 5 319 5 228 2 146 1 102 5 104 1 359 2 63 2 
289 1 363 1 31 1 102 1 203 1 265 1 
200 1 21 1 223 1 22 1 49 4 123 2 203 2 77 2 247 2 57 1 29 1 31 4 101 2 103 2 10 1 360 1 210 4 363 3 213 1 191 2 260 1 193 1 328 2 36 1 195 2 196 2 237 4 265 3 378 1 
340 1 22 1 344 1 49 1 3 1 26 1 59 1 57 1 142 2 297 1 29 1 187 1 353 3 277 1 249 2 321 1 210 1 211 1 13 2 304 3 283 1 260 1 68 1 329 1 39 1 196 1 307 1 237 1 309 2 90 1 91 2 287 1 
289 2 191 1 66 2 123 1 14 1 224 2 216 4 328 1 195 2 77 1 247 1 319 2 102 4 103 1 10 1 
128 1 45 1 106 1 
128 1 45 1 106 1 
128 1 45 1 106 1 
236 1 84 1 128 1 156 1 106 1 
85 1 128 1 106 1 
85 1 128 1 106 1 
85 1 128 1 106 1 
128 1 106 1 
70 1 42 1 
211 2 314 1 183 1 272 4 344 2 214 3 14 1 24 2 51 1 68 2 225 1 59 2 39 4 348 1 350 1 228 1 144 1 187 8 249 4 288 1 
314 1 183 1 272 3 214 2 14 1 24 2 1 1 51 1 225 1 39 3 348 1 144 1 228 1 187 6 
211 1 12 1 175 1 344 1 272 2 214 2 24 1 303 1 51 1 68 1 59 1 39 2 228 1 187 4 249 2 63 1 288 1 
252 1 12 1 282 1 272 3 214 2 24 1 303 1 51 1 39 4 228 1 276 1 187 7 71 2 63 1 288 1 
314 1 183 1 272 11 344 2 24 5 51 3 225 1 59 2 27 1 348 2 79 1 350 2 144 2 276 1 228 3 187 23 249 4 231 1 63 2 211 2 12 2 282 2 214 9 14 1 303 2 68 2 39 12 71 2 288 4 
39 1 187 1 71 1 
187 1 272 1 282 1 
211 1 12 1 175 1 344 1 272 3 214 3 24 2 51 1 303 1 68 1 59 1 39 3 228 1 187 6 249 2 146 1 63 1 288 1 
344 1 272 6 24 1 294 1 51 2 205 1 59 1 228 2 187 12 249 2 63 2 252 1 211 1 12 2 34 1 282 1 214 2 303 2 68 1 370 1 177 1 39 6 71 1 74 1 288 1 
183 1 272 3 214 2 24 1 51 1 39 3 348 1 228 1 144 1 187 6 288 1 
211 1 314 1 272 1 344 1 214 2 24 1 68 1 225 1 59 1 27 1 39 2 348 1 350 1 144 1 187 3 249 2 288 1 
211 1 257 1 183 1 344 1 272 5 214 5 24 3 294 1 51 2 68 1 59 1 39 5 348 2 144 2 228 2 187 10 249 2 288 2 
211 1 12 1 344 1 272 2 214 1 294 1 51 1 68 1 59 1 187 2 249 2 288 1 
211 1 12 1 344 1 272 2 214 2 24 1 303 1 294 1 51 1 68 1 59 1 39 2 228 1 187 4 249 2 63 1 288 1 
211 3 344 3 272 1 214 2 24 1 294 1 68 3 59 3 27 1 39 2 348 1 350 1 144 1 187 3 249 6 288 1 94 1 
314 1 183 1 344 4 272 13 24 5 294 1 51 4 225 1 59 4 348 2 350 1 248 1 144 2 276 1 228 4 187 27 249 8 63 3 252 1 211 4 12 3 175 1 282 3 214 10 14 1 131 1 303 3 68 4 39 14 71 4 288 5 339 1 94 1 
314 1 183 1 344 1 272 4 24 2 51 1 294 1 225 1 59 1 348 1 228 1 144 1 187 8 249 2 252 1 211 1 282 1 214 2 14 1 68 1 39 4 71 1 74 1 
314 1 183 1 344 2 272 6 24 2 294 1 51 2 225 1 59 2 348 1 228 1 144 1 276 1 187 11 249 4 63 1 252 1 211 2 12 1 175 1 282 1 214 3 14 1 68 2 39 5 71 2 74 1 288 1 
314 1 183 1 344 3 272 9 24 3 294 1 51 3 225 1 205 1 59 3 348 1 350 1 144 1 228 3 187 19 249 6 63 2 252 1 211 3 12 2 175 1 34 1 282 1 214 4 14 1 303 2 68 3 370 1 177 1 39 10 71 1 74 1 288 1 
314 1 183 1 344 3 272 10 24 3 294 1 51 3 225 1 205 1 59 3 348 1 350 1 144 1 228 2 187 17 249 6 63 2 252 1 211 3 12 2 175 1 34 1 282 1 214 5 14 1 303 1 68 3 370 1 177 1 39 7 71 1 74 1 288 2 
314 1 183 1 344 1 272 4 24 2 51 1 294 1 225 1 59 1 348 1 228 1 144 1 187 8 249 2 252 1 211 1 282 1 214 2 14 1 68 1 39 4 71 1 74 1 
344 1 272 6 24 1 294 1 51 2 205 1 59 1 228 2 187 12 249 2 63 2 252 1 211 1 12 2 34 1 282 1 214 2 303 2 68 1 370 1 177 1 39 6 71 1 74 1 288 1 
314 1 183 1 344 4 272 10 24 3 294 1 51 3 225 1 205 1 59 4 348 1 350 2 144 1 228 2 187 18 249 8 63 2 252 1 211 4 12 2 175 1 34 1 282 1 214 5 14 1 303 1 68 4 370 1 177 1 39 8 71 1 74 1 288 2 
344 4 272 9 24 3 294 1 51 3 205 1 59 4 350 2 228 2 187 16 249 8 63 3 252 1 211 4 12 3 34 1 282 1 214 6 303 2 68 4 370 1 177 1 39 7 71 1 74 1 288 3 94 1 
314 2 183 1 272 3 214 6 24 3 51 1 225 1 39 4 348 3 228 1 144 3 187 7 288 3 
314 1 183 1 344 4 272 10 24 3 294 1 51 3 225 1 205 1 59 4 348 1 350 2 144 1 228 2 187 18 249 8 63 2 252 1 211 4 12 2 34 1 282 1 214 4 14 1 303 1 68 4 370 1 177 1 39 8 71 1 74 1 288 1 94 1 
315 1 353 1 91 1 368 1 321 1 304 1 338 1 
315 1 316 1 368 1 304 1 37 1 41 1 353 1 91 1 310 1 321 1 358 1 338 1 
57 1 196 1 237 1 29 1 22 1 49 1 260 1 193 1 1 1 378 1 210 1 
340 1 22 1 49 1 304 2 260 1 329 1 57 1 196 1 142 1 297 1 237 1 29 1 309 1 353 2 91 1 321 1 357 1 210 1 
340 2 22 2 49 1 97 1 244 2 52 1 317 1 57 3 142 1 297 1 29 1 353 2 101 1 321 1 357 1 232 1 210 1 260 1 304 2 329 1 306 1 237 1 309 2 91 2 
340 2 22 2 49 1 97 1 244 2 52 1 317 1 57 3 142 1 297 1 29 1 353 2 101 1 321 1 357 1 232 1 210 1 260 1 304 2 306 1 237 1 309 2 91 2 93 1 
289 1 290 1 340 1 22 1 49 3 317 1 57 4 29 1 61 1 31 1 101 1 102 1 32 1 210 3 254 1 363 2 260 1 306 1 112 1 196 1 237 3 265 2 43 1 
289 1 363 2 340 1 22 1 49 3 260 1 317 1 306 1 57 4 112 1 196 1 141 1 237 3 29 1 61 1 31 1 102 1 101 1 265 2 43 1 210 3 32 1 
237 1 29 1 49 1 345 1 260 1 210 1 
280 1 119 1 161 1 270 1 340 1 364 1 22 2 49 7 163 1 345 1 260 2 57 3 196 2 237 7 29 3 147 1 230 1 335 1 62 1 337 1 210 6 
314 1 183 1 340 1 22 1 272 3 344 2 49 1 24 2 51 1 225 1 3 2 57 1 59 2 348 1 142 1 297 1 228 1 144 1 29 1 187 6 353 2 277 1 249 4 147 1 209 1 321 2 357 1 210 1 211 2 190 1 214 2 14 1 260 1 304 2 369 1 68 2 178 1 329 1 39 3 307 1 237 1 309 1 197 1 91 1 264 1 116 1 287 2 
20 1 289 1 23 1 49 1 203 1 346 1 167 1 77 2 57 2 141 1 80 1 61 1 31 2 102 1 103 2 10 2 210 1 32 1 212 1 363 3 191 2 328 1 195 1 36 1 196 1 237 1 265 3 43 1 
340 1 22 1 49 2 345 1 260 1 332 1 57 2 237 2 29 2 147 1 337 1 32 1 210 2 
292 1 22 1 49 4 193 1 260 1 57 1 112 1 196 1 237 4 29 1 147 1 210 4 378 1 
119 1 340 1 22 1 49 2 260 1 157 1 275 1 57 1 237 2 29 2 101 1 230 1 18 1 210 2 
129 1 196 1 5 1 237 1 29 1 81 1 49 1 260 1 245 1 210 1 
22 1 49 2 163 1 260 1 57 1 237 2 6 1 29 1 147 1 62 1 210 2 
292 1 364 1 22 2 49 5 163 1 193 1 260 2 57 3 196 1 237 5 29 2 147 1 101 1 335 1 378 1 210 4 
292 1 22 2 49 5 163 1 193 1 260 2 57 3 196 1 349 1 237 5 29 2 147 1 101 1 335 1 378 1 210 4 
340 1 22 1 49 1 304 2 260 1 57 1 196 1 142 1 297 1 237 1 29 1 309 1 353 2 91 1 93 1 321 1 357 1 210 1 
119 1 270 1 340 1 22 1 49 1 260 1 57 1 237 1 29 2 230 1 101 1 337 1 210 1 
28 1 162 1 186 1 168 1 
215 1 53 1 186 1 
279 1 162 1 321 1 186 1 168 1 
289 1 23 1 48 1 162 1 97 1 165 1 244 2 53 1 186 1 168 1 56 1 142 1 353 1 102 1 355 1 232 1 279 1 363 2 13 1 215 1 304 1 283 1 219 1 309 1 91 1 198 1 265 2 43 1 
118 1 30 1 73 1 1 1 
111 1 118 1 124 1 108 1 30 1 258 1 73 1 
108 1 130 1 105 1 
118 1 108 3 258 1 371 1 111 3 124 1 333 2 299 1 263 1 30 1 8 1 73 1 
111 2 118 1 334 1 124 1 366 1 108 2 30 1 258 1 73 1 
129 1 108 1 258 1 343 1 111 1 99 1 124 1 5 1 263 1 30 1 117 1 
111 1 118 1 124 1 108 1 263 1 30 1 258 1 
111 1 118 2 124 1 108 1 263 1 258 1 73 1 
111 2 246 1 118 1 281 1 124 2 107 1 108 2 263 1 30 1 258 2 
118 1 108 3 366 2 258 1 343 1 273 1 111 3 124 1 218 1 263 1 30 2 301 1 73 1 
118 1 234 1 129 1 108 2 366 1 258 1 245 1 111 2 124 1 5 2 263 1 207 1 30 1 73 1 117 1 
118 1 108 4 366 2 258 2 343 1 164 1 273 1 111 4 124 2 334 1 263 1 30 2 73 1 
111 1 118 1 124 1 108 1 263 1 30 1 258 1 73 1 
118 2 366 2 108 4 271 1 258 1 343 1 273 1 371 1 111 4 333 1 124 1 299 1 30 3 73 2 
118 1 108 2 366 1 152 1 258 1 111 2 124 1 374 1 263 1 114 1 30 1 73 1 
118 1 108 3 258 1 192 1 371 1 111 3 124 1 333 2 299 2 263 1 30 1 73 1 
201 1 30 2 150 2 16 1 
111 1 124 1 133 1 108 1 263 1 258 1 
111 2 118 1 124 1 366 1 108 2 263 1 30 1 258 1 301 1 73 1 
166 1 
111 1 118 1 124 1 108 1 263 1 30 1 258 1 73 1 
118 1 366 1 108 3 258 1 111 3 124 1 333 1 263 1 30 1 301 1 73 1 
271 1 30 1 343 1 273 1 
118 1 30 1 

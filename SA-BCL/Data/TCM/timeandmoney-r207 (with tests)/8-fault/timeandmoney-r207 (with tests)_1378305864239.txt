#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (243,366) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (243,366) (243,366) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException (243,366) (243,366) 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException (243,366) (243,366) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException (243,366) (243,366) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 297 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (243,366) (243,366) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 245 322 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 266 319 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (243,366) (243,366) 294 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (243,366) (243,366) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4583 | % -> <<
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1903 | 12 -> 1
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3685 | stmt -> ;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2132 | = null
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12144 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3451 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2944 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1101 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
96 2 139 4 0 1 53 2 70 1 73 3 2 1 4 2 350 1 76 1 103 1 124 1 180 5 240 1 267 1 209 9 364 9 190 7 60 1 269 1 234 1 271 1 160 1 200 1 
139 4 96 2 0 1 53 2 70 1 73 3 2 1 4 2 350 1 76 1 103 1 124 1 180 5 240 1 267 1 209 9 364 9 190 7 60 1 269 1 234 1 271 1 160 1 200 1 
96 2 139 4 0 1 169 1 70 1 53 2 73 3 2 1 4 2 350 1 5 1 103 2 124 1 180 5 288 1 240 1 267 2 209 9 364 9 192 1 190 6 269 1 234 1 271 2 46 1 133 1 160 2 200 1 
96 2 139 4 0 1 169 1 70 1 53 2 73 3 2 1 4 2 350 1 5 1 103 2 124 1 180 5 288 1 240 1 267 2 209 9 364 9 192 1 190 6 269 1 234 1 271 2 46 1 133 1 160 2 200 1 
96 2 139 5 0 1 169 1 70 1 53 2 73 4 2 1 4 2 350 1 5 1 103 2 124 1 180 6 288 1 240 1 267 2 209 10 364 10 192 1 190 7 269 1 234 1 271 2 46 1 133 1 160 2 200 1 
96 2 139 3 0 1 169 1 70 1 53 2 73 2 2 1 4 1 350 1 5 1 103 2 124 1 180 4 288 1 240 1 267 2 209 7 364 7 192 1 190 4 269 1 271 2 46 1 133 1 160 2 200 1 
96 1 139 2 267 1 209 4 0 1 53 1 70 1 364 4 190 3 73 1 269 1 234 1 4 2 350 1 271 1 180 3 160 1 200 1 
96 1 267 1 209 2 53 1 364 2 269 1 350 1 271 1 353 1 133 1 103 1 180 1 288 1 208 1 200 1 312 1 
96 2 139 1 209 3 53 2 364 3 190 1 73 1 269 1 350 1 124 1 103 1 180 2 200 1 
121 1 198 1 233 1 
310 1 121 1 299 2 
264 1 97 2 59 2 332 1 236 2 128 2 161 2 44 2 
164 1 97 2 256 1 170 1 282 1 174 1 258 1 74 1 147 2 325 1 264 1 122 2 326 1 123 1 352 1 150 2 331 1 332 1 7 1 334 1 128 3 10 2 338 1 211 1 59 2 248 1 213 1 215 1 44 2 114 2 252 1 116 1 236 2 317 1 161 3 90 1 93 1 
243 1 
140 1 59 1 61 1 121 1 323 1 233 1 32 1 84 1 111 1 50 1 88 1 358 1 161 1 128 1 
97 1 59 1 61 1 121 1 323 1 233 1 44 1 84 1 111 2 50 1 358 2 88 1 236 1 161 1 128 1 
111 1 86 1 49 1 358 1 67 1 
55 1 111 2 86 1 49 1 358 2 253 1 121 1 233 1 
111 1 49 1 358 1 
111 1 86 1 358 1 366 1 243 1 
121 1 
111 2 86 1 49 1 358 2 253 1 121 1 233 1 110 1 
337 1 62 1 268 2 121 1 109 1 31 1 233 1 83 2 45 1 111 5 35 1 86 2 48 2 49 2 227 1 328 1 355 1 358 5 253 1 
332 1 198 1 
97 1 59 2 61 1 157 1 218 1 44 1 238 1 332 1 236 1 161 2 128 2 
295 1 118 1 115 1 
10 1 256 1 248 1 174 1 258 1 100 1 122 1 326 1 150 1 332 1 7 1 252 1 116 1 128 1 161 1 90 1 
10 1 256 1 97 1 59 1 155 1 174 1 248 1 258 1 291 1 122 1 326 1 150 1 7 1 252 1 115 1 116 1 236 1 161 2 128 2 90 1 
97 3 59 3 332 1 291 1 236 3 128 3 161 3 44 1 
97 1 59 1 61 1 126 1 236 1 128 1 161 1 
97 1 59 1 61 1 157 1 44 1 238 1 236 1 161 1 128 1 
256 1 97 3 282 1 98 1 174 1 258 1 74 1 323 1 147 2 325 1 326 1 264 1 122 1 352 1 150 1 331 1 332 1 7 1 358 1 334 1 128 4 10 1 338 1 211 1 59 3 155 1 61 1 248 1 340 1 157 1 291 1 215 1 44 2 84 1 111 1 50 1 114 1 252 1 116 1 88 1 317 1 236 3 161 4 90 1 
97 1 152 1 59 2 332 1 291 1 236 1 128 2 161 2 32 1 
97 3 98 1 59 3 61 1 155 1 157 1 173 1 291 2 121 1 323 1 44 1 84 1 111 1 50 1 358 1 88 1 236 3 161 3 128 3 
97 2 118 1 59 2 157 1 291 1 44 1 115 1 236 2 161 2 128 2 
10 1 256 1 248 1 174 1 258 1 122 1 326 1 150 1 332 1 252 1 7 1 116 1 128 1 161 1 90 1 
10 1 256 1 168 1 248 1 174 1 258 1 270 1 122 1 150 1 332 1 252 1 7 1 128 1 161 1 90 1 
142 1 118 2 282 1 99 1 175 1 74 2 147 2 54 1 325 1 123 2 239 1 241 1 334 1 129 1 338 1 211 1 215 1 293 1 295 2 274 1 114 4 115 2 163 1 92 1 
84 1 177 1 97 1 59 1 61 1 236 1 128 1 161 1 
202 1 141 1 97 4 59 4 155 1 61 1 157 1 291 2 218 1 44 1 332 1 236 4 161 4 128 4 
177 1 97 2 59 2 61 1 126 1 236 2 128 2 161 2 
58 1 154 1 
58 1 154 1 
148 1 373 1 
148 1 373 1 
148 1 373 1 
58 1 196 1 154 1 
58 1 154 1 146 1 
251 1 148 1 58 2 154 2 292 1 373 1 
58 1 196 1 154 1 
58 1 196 1 154 1 
58 1 343 1 154 1 
58 1 343 1 154 1 
58 1 343 1 154 1 
94 1 318 1 58 2 303 2 82 1 154 2 42 2 321 1 156 1 292 1 121 1 111 2 112 1 20 2 372 2 66 1 357 2 358 2 183 3 
26 1 97 2 303 1 283 1 146 1 349 1 260 1 332 1 357 1 358 1 128 2 9 1 183 1 58 1 82 1 59 2 42 1 154 1 111 1 18 1 372 1 24 1 236 2 161 2 
271 1 267 1 160 1 
271 1 267 1 353 1 
271 3 353 1 356 1 333 1 104 1 160 2 
271 2 301 1 353 1 356 1 104 1 160 1 
271 2 353 1 356 2 104 1 160 1 
278 2 144 1 257 2 99 1 121 1 31 3 349 1 54 1 310 2 227 2 229 1 241 1 207 1 358 5 243 1 129 1 246 1 191 1 131 1 268 1 366 1 233 1 217 2 83 1 45 1 111 5 48 1 86 4 49 1 51 1 253 1 25 1 299 4 
278 2 224 2 257 2 99 1 121 1 31 3 349 1 54 1 310 2 227 2 241 1 207 1 358 5 243 1 129 1 246 1 191 1 131 1 366 1 268 1 233 1 83 1 220 1 111 5 45 1 86 4 48 1 49 3 51 1 65 1 25 1 253 1 299 4 67 2 
278 1 144 1 257 1 99 1 121 1 31 1 349 1 227 2 229 1 358 3 207 1 241 1 243 1 191 1 131 1 366 1 268 1 62 1 233 1 217 1 83 1 111 3 86 2 48 1 299 1 
278 1 144 1 257 1 99 1 31 1 349 1 227 2 229 1 358 2 207 1 241 1 191 1 131 1 268 1 62 1 217 1 83 1 111 2 48 1 86 1 297 1 299 1 
186 1 7 1 198 1 
245 1 7 1 
199 1 
7 1 174 1 
255 1 186 2 189 1 7 3 252 1 174 1 
7 1 252 1 174 1 
85 1 7 1 
277 1 348 1 223 1 175 3 74 3 293 2 250 1 54 1 178 1 16 1 123 4 370 1 226 1 52 1 114 7 241 1 159 2 
277 1 348 1 223 1 175 3 74 3 293 2 250 1 54 1 178 1 16 1 123 4 370 1 226 1 52 1 114 7 241 1 159 2 
277 1 348 1 223 1 175 3 74 3 293 2 250 1 54 1 178 1 16 1 123 4 370 1 226 1 52 1 114 7 241 1 137 1 159 2 
277 2 348 2 223 1 282 1 99 3 175 10 74 15 147 2 178 1 54 4 123 16 226 1 241 4 334 1 359 4 335 1 336 1 129 3 211 1 247 3 131 3 232 1 250 2 293 5 215 1 16 1 370 2 114 31 52 5 159 3 316 1 344 1 276 1 254 1 
347 1 277 1 348 1 282 2 223 1 175 4 74 4 147 4 54 1 178 1 123 5 205 1 241 1 334 2 211 2 232 1 215 2 250 1 293 3 16 1 370 1 114 9 52 1 159 2 
96 1 279 1 53 1 320 1 258 1 3 1 350 1 122 1 307 1 353 1 150 1 103 1 151 1 180 1 206 1 333 1 57 1 10 1 267 1 209 2 364 2 190 1 248 1 269 1 367 1 271 2 113 1 160 1 346 1 200 1 
96 1 53 1 320 1 258 1 225 1 3 1 350 1 33 1 122 1 263 1 307 1 353 1 150 1 103 1 151 1 180 1 333 1 206 1 57 1 10 1 267 1 209 3 364 3 190 2 248 1 269 1 271 2 113 1 160 1 346 1 
320 1 258 1 225 1 350 1 122 1 263 1 307 1 353 1 103 1 150 1 151 1 180 1 206 1 333 1 10 1 267 1 209 2 364 2 190 2 248 1 269 1 271 2 113 1 160 1 346 1 
96 1 53 1 171 1 320 2 174 1 258 1 286 1 33 1 122 1 150 1 103 2 354 1 206 2 7 1 265 1 10 1 209 1 188 1 364 1 248 1 194 1 90 1 346 2 
57 1 279 1 96 1 10 1 267 1 209 1 53 1 364 1 320 1 248 1 258 1 3 1 271 2 307 1 263 1 122 1 353 1 113 1 151 1 103 1 150 1 333 1 206 1 160 1 346 1 200 1 
249 1 
166 2 140 1 27 1 172 1 120 1 121 1 31 1 323 1 75 1 32 1 101 1 351 5 34 2 310 2 227 1 228 1 289 3 358 4 128 1 313 1 210 3 59 1 314 3 212 2 61 1 268 1 233 1 83 1 221 1 84 1 45 1 111 4 132 1 48 1 50 1 49 5 195 1 197 2 88 1 253 2 161 1 138 1 
166 2 140 1 27 1 172 1 120 1 121 1 31 1 323 1 75 1 32 1 101 1 351 5 34 2 310 2 227 1 228 1 289 3 358 4 128 1 313 1 210 3 59 1 314 3 212 2 61 1 268 1 233 1 83 1 221 1 84 1 45 1 111 4 132 1 48 1 50 1 49 5 195 1 197 2 88 1 253 2 161 1 138 1 
140 1 27 1 172 1 120 1 121 1 31 1 323 1 32 1 351 4 6 1 34 2 227 1 289 2 228 1 358 4 128 1 210 2 130 2 314 2 59 1 365 1 61 1 268 1 63 2 233 1 221 1 83 1 84 1 45 1 111 4 48 1 49 4 50 1 197 2 88 1 253 2 138 1 161 1 299 2 
140 1 143 1 281 1 323 1 101 1 150 2 289 2 7 1 207 1 10 2 210 2 59 1 212 2 61 1 248 1 214 1 221 1 111 5 253 3 161 1 299 2 117 1 166 2 27 1 171 1 172 1 174 1 120 1 258 1 121 2 31 2 32 1 122 2 351 4 34 2 310 2 227 2 228 1 358 5 128 1 265 1 314 2 365 1 268 1 233 1 83 1 84 1 45 1 48 1 49 6 50 1 197 2 88 1 90 2 138 1 
140 1 27 1 172 1 323 1 32 1 351 2 228 1 358 3 128 1 59 1 314 1 61 1 110 1 221 1 84 1 111 3 50 1 49 2 88 1 253 1 161 1 138 1 
140 1 27 1 172 1 121 1 323 1 32 1 351 3 228 1 289 1 358 3 128 1 59 1 61 1 233 1 110 1 221 1 84 1 111 3 49 1 50 1 88 1 253 1 161 1 138 1 
140 1 27 1 172 1 121 1 323 1 32 1 351 3 228 1 289 1 358 3 128 1 210 1 59 1 314 1 61 1 233 1 110 1 221 1 84 1 111 3 50 1 49 2 88 1 253 1 161 1 138 1 
140 1 27 1 302 1 172 1 121 1 323 1 32 1 351 2 228 1 358 3 243 1 128 1 210 1 59 1 314 1 61 1 366 1 233 1 110 1 221 1 84 1 111 3 49 2 50 1 88 1 253 1 138 1 161 1 
166 2 140 1 27 1 172 1 120 1 121 2 31 1 323 1 32 1 351 4 101 1 34 2 310 2 227 1 289 2 228 1 358 4 128 1 210 2 314 2 59 1 365 1 212 2 61 1 268 1 233 1 221 1 83 1 84 1 45 1 111 4 48 1 49 4 50 1 197 2 88 1 253 2 138 1 161 1 299 2 
166 2 140 1 27 1 172 1 120 1 121 1 31 1 323 1 32 1 101 1 351 4 34 2 310 2 227 1 289 2 228 1 358 4 128 1 313 1 210 2 314 2 59 1 212 2 61 1 268 1 233 1 83 1 221 1 84 1 111 4 45 1 132 1 48 1 49 4 50 1 195 1 197 2 88 1 253 2 161 1 138 1 
166 2 140 1 27 1 172 1 120 1 121 1 31 1 323 1 32 1 101 1 351 4 34 2 310 2 227 1 289 2 228 1 358 4 128 1 313 1 210 2 314 2 59 1 212 2 61 1 268 1 233 1 83 1 221 1 84 1 111 4 45 1 132 1 48 1 49 4 50 1 195 1 197 2 88 1 253 2 161 1 138 1 
140 1 27 1 172 1 120 1 121 1 31 1 323 1 32 1 6 1 351 4 34 2 227 1 289 2 228 1 358 4 128 1 313 1 210 2 130 2 314 2 59 1 61 1 268 1 63 2 233 1 83 1 221 1 84 1 111 4 45 1 48 1 49 4 50 1 197 2 23 1 88 1 253 2 161 1 138 1 299 2 201 1 
142 1 348 1 118 1 223 1 282 1 175 2 74 3 147 2 178 1 54 1 325 1 123 3 332 2 241 1 334 1 338 1 211 1 215 1 293 2 16 1 295 1 370 1 114 6 115 1 159 1 198 1 
167 1 118 4 282 2 99 2 175 2 74 6 147 4 54 1 325 1 327 1 123 8 331 1 332 1 241 2 334 2 359 3 129 1 338 2 211 2 247 3 131 2 213 1 341 1 293 1 215 2 342 1 295 11 47 1 52 1 114 14 115 11 344 1 276 1 
256 1 97 1 118 1 71 1 282 1 174 1 258 1 74 1 100 1 147 2 326 1 122 1 325 1 123 1 150 1 331 1 332 1 7 1 334 1 128 2 10 1 338 1 59 1 211 1 155 1 248 1 291 1 213 1 215 1 216 1 47 1 369 1 252 1 114 2 116 1 236 1 90 1 161 2 
97 1 282 3 99 2 147 6 54 3 325 3 326 2 150 3 287 1 331 1 332 2 7 2 241 3 334 3 105 2 10 3 338 3 211 3 59 1 155 1 248 2 213 1 291 1 293 4 215 3 16 1 295 7 114 20 252 2 158 2 115 7 159 1 116 2 161 3 68 2 348 1 256 2 118 7 223 1 174 2 258 2 175 8 74 10 178 1 263 1 122 3 123 10 309 1 128 3 184 1 129 2 131 2 47 1 272 2 370 1 52 4 236 1 317 2 90 1 
164 2 142 1 97 1 282 2 171 1 174 2 258 2 284 1 203 1 74 1 147 4 259 1 263 1 122 7 325 2 123 1 102 1 150 8 331 1 7 3 334 2 128 1 265 1 10 8 13 1 338 2 59 1 211 2 108 1 248 2 291 1 213 1 367 1 15 1 215 2 114 2 236 1 161 1 90 2 
97 1 118 1 282 1 99 1 175 1 74 2 147 2 54 1 325 1 123 1 241 1 334 1 128 1 230 1 129 1 338 1 211 1 59 1 157 1 131 1 293 1 215 1 44 1 295 1 47 1 114 3 115 1 236 1 161 1 
142 1 118 1 338 1 282 1 211 1 99 1 175 1 215 1 147 2 295 1 325 1 123 2 52 1 114 2 115 1 241 1 334 1 92 1 
129 1 142 1 118 1 338 1 282 1 211 1 175 1 74 2 293 1 215 1 147 2 54 1 295 1 325 1 114 2 115 1 334 1 163 1 
142 1 118 2 282 1 99 1 175 2 74 2 147 2 54 1 325 1 123 2 241 1 334 1 129 1 338 1 211 1 131 1 215 1 293 1 295 2 114 4 52 1 115 2 
118 1 338 1 282 1 211 1 99 1 175 1 259 1 215 1 147 2 295 1 325 1 123 2 52 1 114 2 115 1 241 1 334 1 92 1 
129 1 118 1 338 1 282 1 211 1 175 1 74 2 293 1 259 1 215 1 147 2 54 1 295 1 325 1 114 2 115 1 334 1 163 1 
118 2 282 1 99 1 175 2 74 2 147 2 259 1 54 1 325 1 123 2 241 1 334 1 129 1 338 1 211 1 131 1 215 1 293 1 295 2 114 4 52 1 115 2 
118 2 282 1 99 1 175 2 74 2 147 2 54 1 325 1 123 2 241 1 334 1 129 1 338 1 211 1 131 1 215 1 293 1 295 2 114 4 52 1 115 2 
256 1 282 1 174 1 258 1 74 1 147 2 326 1 122 1 325 1 123 1 150 1 331 1 332 1 7 1 334 1 128 1 10 1 338 1 211 1 248 1 213 1 215 1 114 2 252 1 116 1 317 1 90 1 161 1 
256 1 168 1 282 1 174 1 258 1 74 1 147 2 122 1 325 1 123 1 150 1 330 1 331 1 332 1 7 1 334 1 128 1 10 1 338 1 211 1 248 1 213 1 215 1 270 1 114 2 252 1 90 1 161 1 
118 2 282 1 99 1 175 2 74 2 147 2 54 1 325 1 123 2 241 1 334 1 129 1 338 1 211 1 131 1 215 1 293 1 295 2 47 1 114 4 52 1 115 2 
256 1 118 2 282 1 174 1 99 1 258 1 175 2 74 2 147 2 54 1 326 1 122 1 325 1 123 2 150 1 7 1 241 1 334 1 128 1 105 1 10 1 129 1 338 1 211 1 248 1 131 1 367 1 293 1 215 1 295 2 52 1 114 4 252 1 115 2 116 1 317 1 161 1 
97 1 118 1 282 1 28 1 99 1 175 1 74 1 147 2 54 1 325 1 123 2 241 1 334 1 128 1 129 1 338 1 211 1 59 1 157 1 131 1 215 1 44 1 295 1 47 1 52 1 114 3 115 1 236 1 161 1 
347 1 282 2 1 1 99 3 175 6 74 10 304 1 147 4 54 3 56 1 123 9 36 1 39 1 241 3 334 2 359 2 129 3 211 2 247 1 315 1 131 3 64 2 293 3 215 2 235 1 368 2 114 19 52 3 344 1 276 1 
347 1 282 2 319 1 1 2 99 3 175 2 74 12 304 2 147 4 54 2 56 1 123 13 36 1 241 3 334 2 359 2 11 1 266 1 129 2 290 1 211 2 247 2 131 3 232 1 64 1 293 1 215 2 219 1 235 1 368 4 134 1 52 1 114 25 276 2 
282 4 319 1 99 4 1 2 147 8 54 5 56 1 241 5 334 4 11 1 290 1 247 3 211 4 215 4 293 4 64 1 219 1 16 1 114 42 159 1 344 1 347 1 348 1 223 1 175 9 74 21 304 1 178 1 123 21 36 1 359 4 266 1 129 4 131 4 315 1 232 2 235 1 368 4 370 1 134 1 52 5 275 1 276 3 
282 3 319 1 99 4 1 2 147 6 54 4 56 1 241 5 334 3 11 1 290 1 247 3 211 3 215 3 293 4 64 1 219 1 16 1 114 37 159 1 344 1 347 1 348 1 223 1 175 6 74 18 304 1 178 1 123 19 36 1 359 4 266 1 129 3 131 4 315 1 232 1 235 1 368 4 370 1 134 1 52 2 275 1 276 3 
347 1 348 1 223 1 282 2 319 1 1 1 99 7 175 14 74 25 304 1 147 4 178 1 54 8 56 1 123 27 36 1 241 8 334 2 359 4 11 1 266 1 129 7 290 1 211 2 247 4 131 7 232 1 64 1 341 2 293 7 215 2 219 1 16 1 235 1 368 4 370 1 134 1 114 52 52 7 159 1 344 2 276 2 
318 1 112 1 58 1 303 1 42 1 154 1 372 1 292 1 357 1 345 1 
26 1 146 1 
185 1 58 1 303 1 42 1 154 1 372 1 357 1 305 1 324 1 
94 1 318 1 58 1 82 1 303 1 154 1 42 1 321 1 292 1 121 1 111 1 112 1 20 1 372 1 66 1 358 1 357 1 183 2 
94 1 318 1 58 1 82 1 303 1 154 1 42 1 321 1 292 1 121 1 111 1 112 1 20 1 372 1 66 1 358 1 357 1 183 2 
94 1 318 1 58 1 82 1 303 1 154 1 42 1 321 1 292 1 121 1 111 1 112 1 20 1 372 1 66 1 358 1 357 1 183 2 
251 1 196 1 136 1 
251 1 196 1 136 1 
343 1 231 1 
251 1 343 1 231 1 
18 1 283 1 
165 1 26 1 97 2 303 1 283 1 321 1 146 1 349 1 260 1 332 1 358 1 357 1 128 2 9 1 183 1 58 1 59 2 42 1 154 1 111 1 86 1 20 1 18 1 372 1 24 1 236 2 161 2 
196 1 136 1 
251 1 343 1 231 1 
164 2 95 1 282 1 72 1 174 1 258 1 284 1 74 1 285 1 147 2 325 1 122 2 123 1 150 2 331 1 7 1 334 1 128 2 244 1 10 2 339 1 338 1 59 2 211 1 108 1 248 1 213 1 215 1 47 1 114 2 161 2 
10 2 267 1 248 1 258 1 367 1 3 1 271 2 261 1 263 1 122 2 307 1 353 1 150 2 151 1 333 1 22 1 8 1 160 1 346 1 
10 1 267 1 248 1 258 1 3 1 271 2 263 1 122 1 307 1 353 1 150 1 179 1 151 1 333 1 8 1 160 1 346 1 
10 1 171 1 248 1 174 1 258 1 122 1 150 1 354 1 135 1 7 1 22 1 90 1 346 1 265 1 
10 1 267 1 248 1 258 1 3 1 271 2 261 1 263 1 122 1 307 1 353 1 150 1 151 1 333 1 22 1 8 1 160 1 346 1 
361 1 
97 2 256 1 282 1 174 1 258 1 74 1 147 2 122 1 264 1 326 1 325 1 352 1 150 1 331 1 332 1 7 1 334 1 128 3 10 1 338 1 211 1 59 2 248 1 215 1 44 2 114 1 252 1 116 1 236 2 317 1 90 1 161 3 
278 1 143 1 268 1 121 1 31 1 233 1 83 1 45 1 48 1 227 1 207 1 299 1 
35 1 227 1 355 1 121 1 198 1 31 1 233 1 
166 1 121 2 31 1 101 1 310 1 227 1 358 1 212 1 268 1 233 1 83 1 45 1 111 1 48 1 49 1 253 1 299 1 
245 1 10 1 189 1 248 2 174 1 322 1 258 1 268 1 83 1 45 1 122 1 48 1 149 1 150 1 7 1 252 1 90 1 
11 1 266 1 278 5 129 2 290 1 247 1 319 1 131 2 257 5 99 2 268 1 31 6 219 1 54 2 83 1 45 1 48 1 227 5 241 2 276 1 359 1 299 3 
348 1 246 2 366 1 268 1 31 2 294 1 54 1 178 1 83 1 111 1 45 1 132 1 48 1 370 1 227 1 241 1 358 1 243 1 
268 1 121 1 31 1 233 1 83 1 45 1 35 1 48 1 227 1 355 1 
278 1 227 2 257 1 131 1 241 1 99 1 299 1 
111 1 49 1 358 1 253 1 121 1 233 1 
117 1 143 2 281 1 171 1 30 1 174 1 258 1 31 2 204 1 122 4 150 4 227 2 7 1 207 2 358 3 265 1 10 4 81 1 107 2 248 1 62 1 268 2 83 2 45 1 111 3 48 2 49 4 253 2 90 2 
303 1 42 1 181 1 
112 1 303 1 283 1 222 1 42 1 
303 1 42 1 181 1 
303 1 42 1 181 1 
187 1 303 1 42 1 
187 1 303 1 42 1 
187 1 303 1 42 1 
303 1 42 1 
58 1 154 1 
348 1 282 2 223 1 211 2 175 3 232 1 74 4 293 2 215 2 147 4 54 1 178 1 16 1 123 4 370 1 114 8 52 1 159 1 241 1 334 2 
348 1 223 1 175 2 74 3 293 2 16 1 178 1 54 1 123 3 370 1 114 6 159 1 241 1 198 1 
129 1 282 1 211 1 131 1 99 1 175 2 74 2 176 1 293 1 215 1 147 2 54 1 123 2 114 4 52 1 241 1 334 1 
129 1 247 1 131 1 99 1 175 2 74 4 293 1 54 1 123 3 114 7 52 1 241 1 344 1 276 1 359 2 
348 2 223 1 282 2 99 2 175 9 74 12 147 4 178 1 54 3 123 11 327 1 241 3 334 2 359 2 41 1 129 2 247 2 211 2 131 2 232 2 293 5 341 1 215 2 16 1 370 2 52 4 114 23 159 1 344 1 
114 1 74 1 359 1 
123 1 247 1 114 1 
129 1 282 1 211 1 131 1 99 1 175 3 74 3 176 1 147 2 215 1 293 2 54 1 123 3 114 6 52 1 158 1 241 1 334 1 
347 1 282 2 319 1 99 2 175 3 74 6 147 4 54 2 123 7 241 2 334 2 359 1 266 1 11 1 129 2 290 1 247 1 211 2 131 2 232 1 215 2 293 1 219 1 52 2 114 13 276 1 
348 1 175 2 74 3 293 1 178 1 54 1 123 3 370 1 114 6 52 1 241 1 
348 1 223 1 282 1 211 1 175 2 232 1 74 2 293 1 215 1 147 2 16 1 123 1 370 1 52 1 114 3 334 1 41 1 
347 1 348 2 282 1 211 1 175 5 74 5 147 2 215 1 293 3 294 1 178 1 54 2 123 5 370 2 52 2 114 10 241 2 334 1 
347 1 282 1 211 1 99 1 175 1 215 1 147 2 123 2 114 2 52 1 241 1 334 1 
347 1 129 1 282 1 211 1 131 1 99 1 175 2 74 2 293 1 215 1 147 2 54 1 123 2 114 4 52 1 241 1 334 1 
347 1 348 1 282 3 211 3 315 1 232 1 175 2 74 2 215 3 147 6 293 1 123 1 370 1 114 3 52 1 334 3 41 1 
347 1 348 3 223 1 282 5 99 3 175 12 74 18 176 1 147 10 178 2 54 5 123 16 241 5 334 5 335 1 359 4 41 1 129 3 211 5 247 3 315 1 131 3 232 2 215 5 293 7 16 1 370 3 114 34 52 5 159 1 316 1 344 1 276 1 254 1 
347 1 348 1 282 1 223 1 319 1 175 2 74 4 147 2 54 1 178 1 123 4 241 1 334 1 359 1 247 1 211 1 215 1 293 2 16 1 370 1 114 8 159 1 276 1 
347 1 348 1 223 1 282 2 319 1 99 1 175 3 74 5 176 1 147 4 54 1 178 1 123 6 241 2 334 2 359 2 211 2 247 1 131 1 293 2 215 2 16 1 370 1 114 11 52 1 159 1 344 1 276 1 
347 1 282 4 319 1 99 2 175 3 74 7 176 1 147 8 54 2 123 7 241 2 334 4 359 1 11 1 266 1 129 2 290 1 247 1 211 4 131 2 232 2 215 4 293 1 219 1 52 2 114 14 276 1 
347 1 282 2 319 1 99 2 175 1 74 4 176 1 147 4 54 1 123 6 241 2 334 2 359 1 266 1 11 1 129 1 290 1 247 1 211 2 131 2 215 2 293 1 219 1 114 10 276 1 
347 1 348 1 282 1 223 1 319 1 175 2 74 4 147 2 54 1 178 1 123 4 241 1 334 1 359 1 247 1 211 1 215 1 293 2 16 1 370 1 114 8 159 1 276 1 
347 1 282 2 319 1 99 2 175 3 74 6 147 4 54 2 123 7 241 2 334 2 359 1 266 1 11 1 129 2 290 1 247 1 211 2 131 2 232 1 215 2 293 1 219 1 52 2 114 13 276 1 
347 1 282 3 319 1 99 2 175 1 74 5 176 1 147 6 54 1 123 6 241 2 334 3 359 1 11 1 266 1 129 1 290 1 211 3 247 1 131 2 232 1 215 3 293 1 219 1 114 11 276 1 
347 1 282 3 319 1 99 2 175 3 74 5 147 6 54 1 123 6 241 2 334 3 359 1 11 1 266 1 129 1 290 1 211 3 247 1 315 1 131 2 232 1 215 3 293 2 219 1 52 1 114 11 276 1 
348 3 223 2 175 6 74 4 293 3 54 1 16 1 178 1 123 3 370 3 114 7 52 3 241 1 
347 1 282 3 319 1 99 2 175 1 74 5 147 6 54 1 123 6 241 2 334 3 359 1 11 1 266 1 129 1 290 1 211 3 247 1 315 1 131 2 232 1 215 3 293 1 219 1 114 11 276 1 
19 1 59 1 152 1 332 1 128 1 161 1 32 1 
79 1 59 1 43 1 32 1 329 1 19 1 152 1 332 1 161 1 128 1 162 1 360 1 
10 1 122 1 150 1 171 1 7 1 248 1 174 1 258 1 198 1 90 1 265 1 
10 1 256 1 97 1 59 1 174 1 248 1 291 1 258 1 122 1 150 1 332 1 7 1 252 1 116 1 236 1 161 2 128 2 90 1 
97 2 256 1 174 2 258 1 323 1 122 1 150 1 332 1 7 3 128 2 10 1 107 1 59 2 61 1 248 1 291 1 84 1 85 1 371 1 252 2 116 1 236 1 161 2 
97 2 256 1 168 1 174 2 258 1 323 1 122 2 150 2 332 1 7 3 128 2 10 2 107 1 363 1 59 2 61 1 248 1 291 1 84 1 85 1 371 1 252 2 236 1 161 2 
10 1 245 1 107 1 366 1 121 1 233 1 111 1 122 1 150 1 273 1 7 1 358 1 243 1 
10 3 245 1 186 1 107 1 363 1 174 1 248 1 258 1 121 1 233 1 111 2 262 1 85 1 122 3 50 1 371 1 150 3 49 1 252 1 7 4 358 2 90 1 
10 1 122 1 150 1 13 1 248 1 258 1 
164 1 10 7 13 1 29 1 189 1 174 2 248 3 258 2 284 1 203 1 367 1 15 1 263 1 122 6 102 1 150 7 77 1 252 1 7 3 242 1 90 2 
68 1 348 1 256 1 97 1 118 1 223 1 282 2 174 1 258 1 175 2 74 3 147 4 54 1 178 1 325 2 122 1 326 1 123 3 150 1 332 2 7 1 241 1 334 2 128 2 105 1 244 1 10 1 338 2 59 1 211 2 248 1 291 1 367 1 293 2 215 2 16 1 295 1 47 1 370 1 114 6 252 1 115 1 159 1 116 1 236 1 317 1 161 2 
121 1 31 1 204 1 262 1 122 1 35 1 150 1 227 1 78 1 355 1 38 1 7 2 358 3 127 1 10 1 245 1 186 1 268 2 233 1 83 2 45 2 111 3 48 2 86 1 49 2 50 1 253 1 90 1 
10 1 186 1 13 1 189 1 174 1 248 2 258 1 122 1 149 1 150 1 252 1 7 1 199 1 
10 4 363 1 171 1 248 1 174 1 258 1 367 1 122 4 87 1 150 4 7 1 90 1 265 1 
10 2 107 1 174 1 248 2 258 1 14 1 122 2 150 2 77 1 287 1 37 1 252 1 7 1 242 1 
271 1 10 1 267 1 307 1 122 1 353 1 150 1 248 1 258 1 90 1 
10 2 339 1 174 1 248 1 258 1 284 1 367 1 122 2 263 1 150 2 7 1 
10 5 107 1 171 1 174 2 248 2 258 2 203 1 284 1 367 1 15 1 122 4 87 1 150 5 7 3 90 1 265 1 
10 5 107 1 280 1 171 1 174 2 248 2 258 2 284 1 367 1 15 1 122 4 87 1 150 5 7 3 90 1 265 1 
10 1 256 1 97 1 168 1 59 1 174 1 248 1 291 1 258 1 122 1 150 1 332 1 7 1 252 1 236 1 161 2 128 2 90 1 
10 1 107 1 29 1 189 1 174 1 248 2 258 1 122 1 150 1 77 1 252 1 7 1 242 1 
296 1 298 1 332 1 193 1 89 1 
98 1 145 1 61 1 193 2 121 1 323 1 233 1 84 1 111 2 296 1 86 1 50 1 298 2 332 1 311 1 358 2 89 2 88 1 91 1 
95 1 59 1 72 1 193 1 285 1 296 1 89 1 161 1 128 1 
296 1 145 1 311 1 
96 1 209 3 53 1 364 3 190 1 269 1 350 1 133 1 180 1 240 1 200 1 
106 1 139 1 180 1 73 1 
350 1 180 1 
350 1 180 1 198 1 269 1 
350 1 96 1 209 1 180 1 53 1 364 1 269 1 
103 1 364 1 206 1 
96 1 209 3 53 1 364 3 269 1 350 1 133 2 180 1 21 1 125 1 200 1 300 1 
350 1 96 1 209 2 180 1 53 1 364 2 190 1 269 1 4 1 
271 1 139 1 96 1 267 1 209 1 180 1 70 1 53 1 364 1 160 1 200 1 
350 1 96 1 209 1 180 1 53 1 364 1 200 1 
350 2 96 1 209 1 53 1 364 1 269 1 200 1 
237 1 96 2 209 2 69 1 153 1 53 2 364 2 350 1 180 1 200 1 
96 1 139 1 209 3 53 1 364 3 190 2 73 1 2 1 269 1 350 1 180 2 240 1 200 1 
96 1 267 1 209 2 53 1 364 2 119 1 190 1 269 1 350 1 271 2 353 1 180 1 333 1 160 1 200 1 
96 2 139 1 209 4 53 2 364 4 190 2 73 1 269 1 234 1 4 1 350 1 180 2 200 1 
350 1 96 1 209 1 180 1 53 1 364 1 269 1 200 1 
106 1 96 1 139 1 209 4 53 1 364 4 190 2 73 1 269 2 350 2 133 1 180 3 21 1 300 1 
96 1 80 1 209 2 12 1 53 1 364 2 60 1 190 1 269 1 350 1 180 1 200 1 
96 1 209 3 53 1 364 3 269 1 350 1 308 1 133 2 180 1 21 1 200 1 300 2 
306 1 180 2 182 2 40 1 
96 1 17 1 209 1 53 1 364 1 200 1 
350 1 96 1 209 2 180 1 53 1 240 1 364 2 190 1 269 1 200 1 
362 1 
350 1 96 1 209 1 180 1 53 1 364 1 269 1 200 1 

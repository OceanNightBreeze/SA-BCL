#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (174,188,307,310) (174,188,307,310) (68,298,334) (68,298,334) (68,298,334) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (174,188,307,310) (174,188,307,310) (68,298,334) (68,298,334) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (174,188,307,310) (174,188,307,310) (68,298,334) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (174,188,307,310) (174,188,307,310) (68,298,334) (68,298,334) (68,298,334) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2293 | stmt -> ;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1788 | return null
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> ==
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> -1
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal; | RETURN | 998 | return null
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> 0
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1132 | stmt -> ;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
188 6 214 1 310 2 313 1 120 2 291 1 35 3 122 1 149 1 244 2 108 1 66 1 174 9 346 1 69 1 227 1 179 9 206 1 88 1 134 1 252 2 232 5 95 2 233 1 279 4 257 2 307 2 284 1 
188 6 214 1 310 2 313 1 120 2 291 1 35 3 122 1 149 1 244 2 108 1 66 1 174 9 346 1 69 1 227 1 179 9 206 1 88 1 134 1 252 2 232 5 95 2 233 1 279 4 257 2 307 2 284 1 
188 7 214 1 310 2 313 1 120 2 291 1 35 4 122 1 149 1 244 2 108 1 66 1 174 10 346 1 69 1 227 1 179 10 206 1 88 1 134 1 252 2 232 6 95 2 233 1 279 5 257 2 307 2 284 1 
188 4 214 1 310 2 313 1 120 2 291 1 35 2 122 1 149 1 244 2 66 1 174 7 346 1 69 1 227 1 179 7 206 1 88 1 134 1 252 1 232 4 95 2 233 1 279 3 257 2 307 2 284 1 
66 1 188 3 174 4 346 1 69 1 214 1 310 1 179 4 120 1 35 1 252 2 232 3 95 1 279 2 257 1 108 1 284 1 307 1 
66 1 174 2 53 1 214 1 310 1 179 2 288 1 134 1 88 1 230 1 232 1 95 1 244 1 257 1 284 1 307 1 
66 1 188 1 174 3 214 1 310 2 179 3 206 1 35 1 232 2 279 1 244 1 284 1 307 2 
188 7 4 1 214 1 310 2 289 1 120 1 35 3 122 1 244 1 108 1 66 1 174 9 346 1 69 1 227 1 206 1 179 9 252 2 232 5 95 1 279 4 257 1 307 2 284 1 
188 7 4 1 214 1 310 2 289 1 120 1 35 3 122 1 244 1 108 1 66 1 174 9 346 1 69 1 227 1 206 1 179 9 252 2 232 5 95 1 279 4 257 1 307 2 284 1 
201 1 270 1 344 1 
201 1 278 1 125 2 
210 2 277 2 374 1 355 2 34 2 75 1 83 2 116 2 
210 2 262 1 359 1 333 1 309 1 34 2 312 2 57 1 362 1 36 1 79 1 167 2 150 1 123 2 40 2 220 1 83 2 221 2 223 1 131 1 67 1 345 1 368 1 132 1 369 1 325 1 373 1 277 3 159 1 374 1 182 1 355 3 304 1 51 1 75 1 31 1 116 2 
210 1 277 1 138 1 323 1 355 1 315 1 34 1 75 1 83 1 116 1 
201 1 210 1 323 1 46 1 213 1 135 1 47 1 277 1 355 1 253 1 50 1 152 1 270 1 200 1 
201 1 210 1 323 1 46 1 213 1 34 1 135 1 47 1 277 1 253 2 355 1 50 2 270 1 116 1 83 1 
26 1 253 1 267 1 50 1 158 1 
201 1 253 2 267 1 50 2 270 1 165 1 158 1 327 1 
253 1 50 1 158 1 
210 1 323 1 34 1 277 1 138 1 253 1 355 1 267 1 315 1 50 1 97 1 75 1 116 1 83 1 
201 1 
201 1 253 2 267 1 50 2 270 1 241 1 165 1 158 1 
201 1 13 2 321 1 222 2 178 1 70 1 336 1 20 1 165 1 158 2 37 1 8 1 38 1 253 5 267 2 50 5 185 2 270 1 330 1 
374 1 344 1 
210 2 34 1 277 2 374 2 355 2 63 1 160 1 116 1 83 1 
193 1 92 1 271 1 
221 1 262 1 359 1 309 1 369 1 312 1 339 1 57 1 362 1 373 1 277 1 159 1 374 1 355 1 123 1 31 1 
210 1 221 1 262 1 359 1 225 1 309 1 369 1 34 1 312 1 121 1 362 1 57 1 373 1 277 2 159 1 355 2 92 1 123 1 31 1 83 1 
210 5 225 2 228 1 34 4 102 1 121 1 277 5 374 1 355 5 152 1 63 1 83 4 116 1 84 1 
210 2 78 1 277 2 138 1 323 1 355 2 34 2 83 2 
210 3 277 3 374 1 355 3 225 1 34 3 116 1 83 3 
210 1 277 1 138 1 323 1 355 1 34 1 83 1 
210 1 277 1 323 1 355 1 34 1 63 1 160 1 83 1 116 1 
210 3 262 1 359 1 213 1 309 1 34 3 312 1 121 1 362 1 57 1 36 1 167 1 150 1 123 1 40 2 343 1 63 1 220 1 83 3 221 1 223 1 131 1 67 1 323 1 345 1 224 1 132 1 46 1 225 1 369 1 135 1 47 1 325 1 373 1 277 4 159 1 374 1 355 4 253 1 304 1 50 1 75 1 31 1 116 2 
210 2 277 2 374 1 355 2 225 1 152 1 34 1 102 1 83 1 
201 1 210 3 323 1 213 1 225 2 46 1 34 3 135 1 47 1 121 1 137 1 277 3 253 1 355 3 50 1 343 1 63 1 116 1 83 3 
210 2 225 1 34 2 193 1 277 2 355 2 92 1 63 1 116 1 83 2 
221 1 262 1 359 1 309 1 369 1 312 1 57 1 362 1 373 1 277 1 159 1 374 1 355 1 123 1 31 1 
221 1 262 1 246 1 359 1 309 1 369 1 335 1 312 1 362 1 277 1 159 1 374 1 355 1 123 1 31 1 
237 1 211 1 360 1 164 1 193 2 36 2 167 4 150 1 40 2 11 1 271 2 82 1 220 1 131 1 204 1 132 1 325 1 229 1 92 2 304 1 30 1 51 2 74 1 281 1 
210 1 277 1 78 1 323 1 355 1 34 1 47 1 83 1 
54 1 71 1 
54 1 71 1 
128 1 295 1 
128 1 295 1 
128 1 295 1 
324 1 54 1 71 1 
324 1 54 1 71 1 
324 1 54 1 71 1 
1 1 54 1 71 1 
128 1 239 1 295 1 54 2 124 1 71 2 
0 1 54 1 71 1 
0 1 54 1 71 1 
0 1 54 1 71 1 
210 2 1 1 236 1 33 1 54 1 119 1 34 2 292 1 10 1 83 2 202 1 17 1 207 1 71 1 277 2 374 1 303 1 253 1 355 2 231 1 329 1 375 1 50 1 258 1 
201 1 16 1 100 1 239 1 33 2 54 2 119 2 290 1 71 2 23 2 314 1 253 2 80 1 27 1 329 3 375 2 50 2 10 2 258 1 
95 1 257 1 120 1 
230 1 95 1 257 1 
230 1 250 1 95 3 87 1 141 1 120 2 
230 1 76 1 95 2 87 1 141 1 120 1 
230 1 95 2 87 2 120 1 141 1 
118 2 236 1 285 2 211 1 360 1 77 1 336 3 165 1 293 2 195 1 267 4 270 1 11 1 125 3 127 1 202 1 13 1 201 2 222 1 109 1 204 1 70 1 136 1 158 1 278 1 303 1 253 5 50 5 185 1 330 2 52 1 115 1 
285 6 332 1 211 3 360 3 77 2 336 8 165 1 361 1 293 6 267 7 104 1 270 1 11 3 125 9 127 1 201 5 13 2 222 2 172 1 109 3 204 3 70 1 20 1 158 6 91 1 278 3 303 4 26 5 253 9 25 1 112 5 50 9 185 2 330 6 52 2 
118 1 285 2 211 1 360 1 77 1 336 3 293 2 195 1 267 2 270 1 11 1 125 4 201 3 13 1 222 1 109 1 204 1 20 1 278 2 303 1 253 3 50 3 185 1 52 1 330 2 115 1 
118 2 285 4 211 2 360 2 77 1 336 5 361 1 293 4 195 1 267 3 104 1 270 1 11 2 125 7 201 4 13 1 222 1 109 2 204 2 20 1 278 3 91 1 303 2 253 4 50 4 185 1 52 1 330 4 115 1 
262 1 365 1 344 1 
262 1 55 1 
366 1 
262 1 309 1 369 1 
262 1 85 1 
262 1 309 1 
262 3 316 1 268 1 309 1 365 2 369 1 
286 1 237 3 204 1 181 1 22 1 111 1 36 3 302 2 24 1 28 1 167 7 30 2 196 1 51 4 11 1 272 1 234 1 
286 1 237 3 204 1 181 1 22 1 111 1 36 3 302 2 24 1 28 1 167 7 30 2 196 1 51 4 11 1 272 1 234 1 
286 1 237 3 204 1 216 1 181 1 22 1 111 1 36 3 24 1 302 2 28 1 167 7 30 2 196 1 51 4 11 1 272 1 234 1 
286 2 211 2 237 8 287 1 192 1 360 2 36 12 167 26 40 2 196 4 11 3 272 1 220 1 131 1 43 3 109 2 204 3 350 3 349 1 205 1 249 1 325 1 181 1 22 2 111 2 24 1 302 3 28 1 304 1 30 4 254 1 51 14 234 2 
161 1 131 2 286 1 237 4 204 1 205 1 325 2 181 1 22 1 111 1 24 1 36 4 302 2 28 1 167 9 304 2 30 3 196 1 51 5 40 4 11 1 378 1 220 2 234 1 
188 1 221 1 174 2 68 1 334 1 310 1 179 1 312 1 242 1 156 1 56 1 123 1 255 1 244 1 298 1 283 1 65 1 284 1 307 1 
188 2 203 1 221 1 174 3 68 1 334 1 190 1 310 1 179 2 312 1 242 1 56 1 123 1 255 1 244 1 283 1 65 1 307 1 273 1 
203 1 188 2 221 1 174 2 68 1 179 1 312 1 56 1 123 1 255 1 244 1 283 1 65 1 273 1 
221 1 262 1 129 1 174 1 162 1 309 1 190 1 310 1 179 1 312 1 56 2 362 1 159 1 29 1 123 1 209 1 31 1 244 2 319 1 283 2 65 2 187 1 307 1 
188 1 221 1 174 2 68 1 334 1 310 1 179 1 312 1 242 1 56 1 123 1 255 1 244 1 298 1 283 1 65 1 284 1 307 1 273 1 
276 1 
238 1 101 1 336 2 341 1 7 1 152 1 62 1 200 1 297 1 13 1 70 1 301 1 158 2 159 2 253 3 355 1 114 1 209 1 31 1 305 1 261 1 210 1 262 1 162 1 213 1 309 1 312 2 77 1 165 1 362 1 123 2 318 1 221 2 169 2 222 1 171 1 323 1 176 1 46 1 135 1 47 1 277 1 93 1 50 3 185 1 330 2 
169 2 210 1 323 1 213 1 46 1 241 1 47 1 135 1 341 1 165 1 158 2 7 1 277 1 253 3 355 1 9 1 93 1 50 3 114 1 152 1 318 1 200 1 
201 1 169 3 210 1 323 1 213 1 46 1 241 1 47 1 135 1 341 1 165 1 158 1 7 1 277 1 253 3 355 1 93 1 50 3 114 1 152 1 270 1 318 1 200 1 186 1 
210 1 235 1 213 1 241 1 341 1 165 1 7 1 9 1 152 1 270 1 200 1 318 1 169 3 201 1 323 1 46 1 135 1 47 1 158 2 277 1 355 1 253 3 93 1 114 1 50 3 186 1 
235 2 238 1 101 1 241 1 336 1 341 1 7 1 9 2 152 1 105 1 200 1 13 1 201 1 70 1 301 2 158 3 355 2 253 3 114 1 75 1 305 2 116 1 210 2 212 1 213 1 34 1 165 1 315 1 269 1 270 1 318 1 83 1 169 2 222 1 323 2 46 1 47 1 135 1 48 1 277 2 138 1 93 1 50 3 97 1 185 1 98 1 330 1 
210 1 238 1 101 1 213 1 336 1 341 1 7 1 152 1 200 1 318 1 13 1 169 2 222 1 323 1 46 1 70 1 135 1 47 1 301 1 277 1 253 2 355 1 93 1 114 1 50 2 185 1 330 1 305 1 261 1 
210 2 238 1 212 1 101 1 213 1 34 1 336 1 341 1 7 1 315 1 152 1 270 1 105 1 200 1 318 1 83 1 201 1 169 2 13 1 222 1 323 2 46 1 70 1 135 1 47 1 301 2 277 2 138 1 355 2 253 2 93 1 114 1 50 2 97 1 185 1 98 1 330 1 75 1 305 2 116 1 
210 2 238 1 212 1 101 1 213 1 34 1 336 1 341 1 7 1 315 1 152 1 270 1 105 1 200 1 318 1 83 1 201 1 169 2 13 1 222 1 323 2 46 1 70 1 135 1 47 1 301 2 277 2 138 1 355 2 253 2 93 1 114 1 50 2 97 1 185 1 98 1 330 1 75 1 305 2 116 1 
210 2 144 1 101 1 213 1 34 1 336 1 341 1 7 1 315 1 152 1 270 1 199 1 200 1 318 1 83 1 41 1 201 1 169 2 13 1 222 1 323 2 46 1 70 1 135 1 47 1 301 2 277 2 138 1 355 2 253 2 93 1 114 1 50 2 97 1 185 1 98 1 330 1 75 1 305 2 116 1 
235 1 238 1 101 1 336 1 341 1 7 1 9 1 152 1 105 1 200 1 13 1 201 1 70 1 301 2 158 1 253 2 355 2 114 1 75 1 305 2 116 1 210 2 212 1 213 1 34 1 315 1 269 1 270 1 318 1 83 1 169 3 222 1 323 2 46 1 47 1 135 1 277 2 138 1 93 1 50 2 185 1 97 1 98 1 330 1 186 1 
235 1 238 1 101 1 336 1 341 1 7 1 9 1 152 1 105 1 200 1 13 1 201 1 70 1 301 2 158 1 253 2 355 2 114 1 75 1 305 2 116 1 210 2 212 1 213 1 34 1 315 1 269 1 270 1 318 1 83 1 169 3 222 1 323 2 46 1 47 1 135 1 277 2 138 1 93 1 50 2 185 1 97 1 98 1 330 1 186 1 
210 1 101 1 213 1 336 1 341 1 7 1 152 1 199 1 200 1 318 1 13 1 169 2 222 1 323 1 46 1 70 1 135 1 47 1 301 1 277 1 253 2 355 1 93 1 114 1 50 2 185 1 330 1 305 1 261 1 
286 1 237 2 164 1 193 1 36 3 167 6 150 1 40 2 11 1 271 1 344 1 220 1 131 1 204 1 132 1 325 1 181 1 111 1 24 1 302 1 374 2 92 1 28 1 304 1 30 2 51 3 
237 2 211 2 192 1 360 1 193 4 36 6 167 14 150 2 196 1 40 4 317 1 11 1 271 11 220 2 154 1 223 1 131 2 130 1 43 3 44 1 109 2 368 1 204 2 132 1 350 3 325 2 374 1 92 11 304 2 30 1 376 1 51 8 306 1 
210 1 262 1 359 1 309 1 34 1 312 1 339 1 121 1 362 1 57 1 193 1 36 1 167 2 123 1 150 1 40 2 220 1 83 1 367 1 221 1 130 1 131 1 223 1 368 1 132 1 225 1 369 1 325 1 354 1 373 1 159 1 277 2 374 1 355 2 304 1 356 1 51 1 31 1 
286 1 237 8 2 2 5 1 57 2 193 7 150 3 196 4 11 3 67 2 109 2 204 3 248 2 111 1 302 1 24 1 159 1 355 3 28 1 304 3 30 4 31 2 210 1 262 2 357 2 211 2 359 2 309 2 34 1 360 2 312 3 121 1 362 2 36 10 167 20 123 3 40 6 271 7 83 1 220 3 273 1 221 3 223 1 131 3 130 1 275 1 368 1 177 1 225 1 132 3 369 2 325 3 181 1 373 2 277 3 374 2 139 2 92 7 51 10 
221 1 159 1 123 1 312 1 106 1 
210 1 237 1 211 1 34 1 360 1 193 1 36 2 167 3 150 1 40 2 60 1 11 1 271 1 63 1 220 1 83 1 131 1 130 1 109 1 204 1 132 1 325 1 277 1 355 1 92 1 304 1 30 1 51 1 116 1 
131 1 237 1 211 1 204 1 132 1 325 1 164 1 193 1 92 1 167 2 304 1 150 1 196 1 40 2 51 2 74 1 271 1 220 1 
131 1 237 1 132 1 360 1 325 1 164 1 193 1 36 2 92 1 167 2 304 1 30 1 150 1 40 2 11 1 271 1 220 1 82 1 
211 1 237 2 360 1 164 1 193 2 36 2 167 4 150 1 40 2 196 1 11 1 271 2 220 1 131 1 109 1 204 1 132 1 325 1 92 2 304 1 30 1 51 2 
106 1 
106 1 
106 1 
211 1 237 2 360 1 193 2 36 2 167 4 150 1 40 2 196 1 11 1 271 2 220 1 131 1 109 1 204 1 132 1 325 1 92 2 304 1 30 1 51 2 
262 1 359 1 309 1 312 1 362 1 57 1 36 1 167 2 123 1 150 1 40 2 220 1 221 1 131 1 223 1 67 1 368 1 132 1 369 1 325 1 373 1 159 1 277 1 374 1 355 1 304 1 51 1 31 1 
262 1 359 1 309 1 335 1 312 1 362 1 36 1 167 2 123 1 150 1 40 2 220 1 221 1 131 1 223 1 246 1 368 1 132 1 369 1 325 1 159 1 277 1 374 1 355 1 304 1 51 1 31 1 99 1 
211 1 237 2 360 1 193 2 36 2 167 4 150 1 40 2 196 1 11 1 271 2 220 1 131 1 130 1 109 1 204 1 132 1 325 1 92 2 304 1 30 1 51 2 
262 1 237 2 211 1 359 1 309 1 360 1 312 1 362 1 57 1 193 2 36 2 167 4 123 1 150 1 196 1 40 2 11 1 271 2 220 1 221 1 131 1 67 1 109 1 204 1 132 1 369 1 156 1 325 1 373 1 277 1 139 1 355 1 92 2 304 1 30 1 51 2 31 1 
210 1 237 1 211 1 360 1 34 1 193 1 36 1 167 3 150 1 196 1 40 2 11 1 271 1 63 1 220 1 83 1 131 1 130 1 109 1 204 1 132 1 325 1 277 1 183 1 355 1 92 1 304 1 51 2 116 1 
308 1 145 1 286 1 237 6 211 3 264 1 189 1 192 3 360 3 215 1 340 1 36 18 167 36 364 1 196 3 40 6 151 1 217 4 218 1 11 4 342 1 220 3 131 3 43 3 109 3 348 1 204 4 350 3 133 2 205 1 180 1 325 3 181 1 111 1 302 1 24 1 28 1 304 3 30 3 51 18 377 1 378 1 
308 1 145 1 286 1 237 5 211 3 264 1 189 1 192 3 360 2 215 1 340 1 36 15 167 33 364 1 196 2 40 8 151 1 217 4 218 1 11 3 342 1 220 4 131 4 43 3 109 3 348 1 204 4 350 3 133 2 205 2 180 1 325 4 181 1 111 1 302 1 24 1 28 1 304 4 30 3 51 18 377 1 378 1 
308 1 286 1 237 5 211 3 189 1 192 2 360 3 215 1 340 1 36 14 167 29 364 1 196 2 40 2 151 1 217 3 218 1 11 4 342 1 220 1 131 1 43 2 109 3 348 1 204 4 350 2 133 1 180 1 325 1 181 1 111 1 302 1 24 1 28 1 304 1 30 3 51 15 377 1 378 1 
308 2 145 1 237 4 211 2 360 2 192 1 340 1 36 7 363 1 167 14 40 4 151 1 217 2 196 2 218 1 11 2 220 2 131 2 43 1 109 2 348 1 204 2 350 1 133 1 325 2 304 2 30 2 51 7 378 1 
308 1 237 4 211 3 189 1 192 2 360 2 215 1 340 1 36 12 167 26 364 1 196 2 217 4 40 6 151 1 218 2 11 2 342 1 220 3 131 3 43 2 109 3 348 1 204 3 133 2 350 2 205 2 180 1 325 3 304 3 30 2 51 14 377 1 378 1 
80 1 16 1 239 1 375 1 33 1 54 1 10 1 119 1 299 1 71 1 
1 1 17 1 
265 1 328 1 375 1 33 1 54 1 10 1 119 1 219 1 71 1 
324 1 59 1 
0 1 168 1 124 1 
201 1 16 1 239 1 33 1 54 1 119 1 290 1 71 1 23 1 314 1 253 1 80 1 27 1 329 2 50 1 375 1 10 1 258 1 
201 1 16 1 239 1 33 1 54 1 119 1 290 1 71 1 23 1 314 1 253 1 80 1 27 1 329 2 50 1 375 1 10 1 258 1 
201 1 16 1 239 1 33 1 54 1 119 1 290 1 71 1 23 1 314 1 253 1 80 1 27 1 329 2 50 1 375 1 10 1 258 1 
324 1 59 1 124 1 
324 1 59 1 124 1 
0 1 168 1 
0 1 168 1 124 1 
292 1 207 1 
210 2 1 1 236 1 33 1 54 1 119 1 34 2 292 1 267 1 10 1 83 2 202 1 17 1 207 1 71 1 23 1 277 2 374 1 303 1 355 2 253 1 231 1 27 1 329 1 50 1 375 1 117 1 
210 2 262 1 263 1 309 1 312 2 362 1 36 1 167 2 123 2 150 1 40 2 220 1 221 2 130 1 131 1 223 1 368 1 132 1 371 1 325 1 277 2 182 2 72 1 355 2 140 1 304 1 51 1 73 1 31 1 282 1 331 1 
221 2 142 1 175 1 311 1 312 2 242 1 156 1 56 1 123 2 255 1 273 1 
221 1 311 1 312 1 242 1 56 1 251 1 123 1 255 1 273 1 
221 1 262 1 162 1 175 1 309 1 312 1 353 1 56 1 362 1 159 1 123 1 29 1 209 1 31 1 
221 1 142 1 175 1 123 1 255 1 311 1 312 1 242 1 56 1 273 1 
148 1 
201 1 38 1 270 1 178 1 330 1 336 1 344 1 
238 1 336 1 165 1 270 1 125 1 13 1 201 2 222 1 86 1 70 1 370 1 158 1 278 1 253 1 50 1 185 1 330 1 
285 6 336 9 55 3 194 1 293 6 11 2 62 1 107 1 64 1 245 2 13 4 201 8 347 1 109 2 204 2 248 2 70 4 18 2 156 1 158 5 159 1 253 5 256 2 31 3 262 10 211 2 213 2 309 3 360 2 312 3 77 2 165 3 362 4 38 1 123 3 316 1 270 2 365 2 125 12 126 2 81 2 221 3 222 4 85 2 178 1 369 3 90 2 372 1 278 6 50 5 184 2 185 4 330 8 280 2 
285 5 211 2 189 1 192 1 360 2 215 1 77 1 336 8 165 1 266 1 293 5 364 1 270 2 11 2 62 1 125 6 342 1 13 2 201 5 222 2 322 1 43 1 109 2 204 2 350 1 70 2 158 1 278 3 253 1 184 1 50 1 185 2 377 1 330 5 280 2 
210 1 286 1 34 1 338 1 336 2 315 1 105 1 11 1 83 1 13 1 222 1 323 1 204 2 70 1 181 1 111 1 277 1 138 1 355 1 253 1 184 1 50 1 185 1 97 1 330 2 280 2 75 1 116 1 
13 1 201 1 222 1 178 1 70 1 336 1 38 1 185 1 270 1 330 1 
201 5 285 5 211 2 109 2 204 2 248 1 360 2 336 5 278 5 293 5 184 1 330 5 11 2 280 2 125 10 
201 1 253 1 50 1 270 1 165 1 158 1 
262 1 162 1 309 1 191 1 312 4 77 2 336 2 165 2 362 1 194 1 123 4 62 2 297 1 13 2 221 4 171 1 222 2 347 2 45 1 70 1 20 1 158 4 159 2 253 3 50 3 185 2 209 1 330 2 31 1 
210 2 262 1 359 1 309 1 34 2 312 1 57 1 362 1 36 1 167 1 123 1 150 1 40 2 220 1 83 2 221 1 223 1 131 1 67 1 345 1 132 1 369 1 325 1 373 1 159 1 277 3 374 1 355 3 304 1 75 1 31 1 116 2 
13 1 201 4 222 1 285 2 70 1 77 1 336 1 302 1 278 2 293 2 185 1 270 2 330 2 125 4 62 1 
375 1 10 1 61 1 
375 1 10 1 61 1 
375 1 10 1 61 1 
49 1 16 1 375 1 10 1 207 1 
94 1 375 1 10 1 
94 1 375 1 10 1 
94 1 375 1 10 1 
375 1 10 1 
54 1 71 1 
286 1 237 2 192 1 215 1 36 4 167 8 40 2 11 1 220 1 131 1 43 1 204 1 350 1 325 1 181 1 111 1 302 1 24 1 28 1 304 1 30 2 51 4 378 1 
286 1 237 2 192 1 215 1 36 4 167 8 40 4 11 1 220 2 131 2 42 1 43 1 204 1 350 1 325 2 181 1 111 1 302 1 24 1 28 1 304 2 30 2 51 4 378 1 
286 1 211 2 237 4 189 1 192 1 360 2 215 1 36 10 167 19 364 1 196 1 40 6 11 3 342 1 220 3 42 1 131 3 43 1 109 2 204 3 350 1 205 1 325 3 181 1 111 1 302 1 24 1 28 1 304 3 30 3 51 9 377 1 378 1 
286 1 211 2 237 5 189 1 192 1 360 1 215 1 36 7 167 17 364 1 196 2 40 6 11 2 342 1 220 3 42 1 131 3 43 1 109 2 204 3 350 1 205 1 325 3 181 1 111 1 302 1 24 1 28 1 304 3 30 3 51 10 377 1 378 1 
286 1 237 2 192 1 215 1 36 4 167 8 40 2 11 1 220 1 131 1 43 1 204 1 350 1 325 1 181 1 111 1 302 1 24 1 28 1 304 1 30 2 51 4 378 1 
211 2 237 2 189 1 192 1 360 2 215 1 36 6 167 12 364 1 196 1 40 2 11 2 342 1 220 1 131 1 43 1 109 2 204 2 350 1 325 1 304 1 30 1 51 6 377 1 378 1 
286 1 211 2 237 5 189 1 192 1 360 1 215 1 36 8 167 18 364 1 196 2 40 8 11 2 342 1 220 4 42 1 131 4 43 1 109 2 204 3 350 1 205 2 325 4 181 1 111 1 302 1 24 1 28 1 304 4 30 3 51 10 377 1 378 1 
145 1 211 3 237 6 189 1 192 1 360 2 215 1 36 7 167 16 364 1 196 3 40 8 11 2 342 1 220 4 131 4 43 1 109 3 204 3 350 1 205 2 325 4 304 4 30 3 51 9 377 1 378 1 
286 3 237 6 204 1 181 1 111 3 36 4 24 2 28 1 167 7 30 3 196 3 51 3 11 1 
145 1 286 1 211 2 237 4 189 1 192 1 360 1 215 1 36 8 167 18 364 1 196 1 40 8 11 2 342 1 220 4 131 4 43 1 109 2 204 3 350 1 205 2 325 4 181 1 111 1 302 1 24 1 28 1 304 4 30 3 51 10 377 1 378 1 
131 2 286 1 237 3 204 1 205 1 325 2 181 1 111 1 302 1 36 4 24 1 28 1 167 8 304 2 30 2 51 4 196 1 40 4 11 1 220 2 
286 1 237 2 204 1 181 1 111 1 302 1 36 3 24 1 28 1 167 6 30 2 51 3 11 1 344 1 
42 1 131 1 237 2 211 1 109 1 204 1 360 1 325 1 36 2 304 1 167 4 30 1 40 2 51 2 196 1 11 1 220 1 
36 1 43 1 167 2 51 1 350 1 192 1 
286 2 237 9 211 2 360 2 36 12 167 23 196 4 40 4 317 1 11 3 220 2 131 2 44 1 43 2 109 2 204 3 350 2 205 2 89 1 325 2 181 1 111 2 302 1 24 1 28 1 304 2 30 5 51 11 306 1 
36 1 167 1 350 1 
43 1 167 1 51 1 
131 1 42 1 211 1 237 3 109 1 204 1 248 1 360 1 325 1 36 3 304 1 167 6 30 2 40 2 51 3 196 1 11 1 220 1 
211 2 237 2 189 1 192 1 360 2 215 1 36 6 167 12 364 1 196 1 40 2 11 2 342 1 220 1 131 1 43 1 109 2 204 2 350 1 325 1 304 1 30 1 51 6 377 1 378 1 
286 1 237 2 204 1 181 1 111 1 36 3 167 6 30 1 51 3 196 1 11 1 
131 1 286 1 237 2 205 1 89 1 325 1 111 1 24 1 36 2 28 1 167 3 304 1 30 1 51 1 196 1 40 2 220 1 
131 1 286 2 237 5 204 2 338 1 325 1 181 1 111 2 36 5 304 1 167 10 30 3 40 2 196 2 51 5 11 2 378 1 220 1 
131 1 211 1 237 1 204 1 325 1 304 1 167 2 40 2 51 2 196 1 378 1 220 1 
131 1 237 2 211 1 109 1 204 1 360 1 325 1 36 2 304 1 167 4 30 1 40 2 51 2 196 1 11 1 378 1 220 1 
145 1 131 3 286 1 237 2 205 1 89 1 325 3 111 1 36 2 167 3 304 3 30 1 40 6 196 1 51 1 378 1 220 3 
145 1 286 3 287 1 211 2 237 10 192 1 360 2 36 15 167 29 40 10 196 4 11 4 220 5 42 1 131 5 43 3 109 2 204 4 350 3 349 1 205 2 89 1 249 1 325 5 181 2 111 3 302 1 24 1 28 1 304 5 30 6 51 14 378 1 
210 1 277 1 374 1 355 1 152 1 153 1 102 1 
210 1 143 1 337 1 102 1 243 1 21 1 277 1 374 1 355 1 152 1 153 1 379 1 
221 1 262 1 159 1 162 1 123 1 309 1 209 1 312 1 31 1 344 1 362 1 
210 1 221 1 262 1 359 1 225 1 309 1 369 1 34 1 312 1 362 1 373 1 277 2 159 1 374 1 355 2 123 1 31 1 83 1 
210 2 221 1 262 3 323 1 359 1 347 1 85 1 225 1 309 2 369 2 34 1 312 1 47 1 135 1 362 1 373 1 277 2 374 1 355 2 123 1 126 1 31 1 83 2 
210 2 221 2 262 3 146 1 323 1 246 1 359 1 347 1 85 1 225 1 309 2 369 2 34 1 312 2 47 1 135 1 362 1 277 2 374 1 355 2 123 2 126 1 31 1 83 2 
201 1 221 3 262 4 146 1 347 1 213 1 85 1 309 1 369 1 312 3 110 1 55 1 362 1 158 1 159 1 253 2 123 3 50 2 270 1 365 1 126 1 31 1 259 1 
201 1 221 3 262 4 146 1 347 1 213 1 85 1 309 1 369 1 312 3 90 1 55 1 362 1 158 1 159 1 253 2 123 3 50 2 270 1 365 1 126 1 31 1 
221 1 123 1 240 1 312 1 31 1 362 1 
221 6 170 1 262 3 173 1 247 1 309 2 240 1 369 1 312 7 156 1 362 3 159 2 182 1 113 1 123 7 316 1 294 1 96 1 31 2 273 1 331 1 
210 1 262 1 286 1 237 2 359 1 2 1 309 1 34 1 312 1 362 1 57 1 193 1 36 3 167 6 150 2 123 1 40 4 11 1 271 1 220 2 83 1 221 1 130 1 131 2 67 1 204 1 132 2 225 1 369 1 325 2 156 1 181 1 111 1 373 1 302 1 24 1 277 2 374 2 139 1 72 1 355 2 92 1 28 1 304 2 30 2 51 3 31 1 
262 2 213 1 312 1 336 1 55 1 165 1 194 1 38 1 267 1 123 1 270 1 365 1 201 1 221 1 13 2 245 1 222 2 178 1 70 2 18 1 90 1 158 2 159 1 253 3 50 3 185 2 330 1 256 1 
221 2 262 2 309 1 240 1 369 1 312 2 156 1 372 1 362 2 123 2 316 1 365 1 31 1 
221 4 262 1 146 1 155 1 162 1 309 1 312 4 156 1 362 1 159 1 123 4 209 1 31 1 
221 2 170 1 262 1 347 1 177 1 309 1 369 1 312 2 326 1 362 2 166 1 123 2 294 1 31 1 
230 1 221 1 159 1 58 1 123 1 95 1 312 1 257 1 31 1 362 1 
221 2 262 1 309 1 312 2 156 1 362 1 123 2 73 1 31 1 273 1 331 1 
221 4 262 3 173 1 155 1 162 1 347 1 309 2 247 1 312 5 156 1 362 2 159 1 123 5 209 1 31 2 331 1 
221 4 262 3 155 1 162 1 358 1 347 1 309 2 247 1 312 5 156 1 362 2 159 1 123 5 209 1 31 2 331 1 
210 1 221 1 262 1 246 1 359 1 225 1 309 1 369 1 34 1 312 1 362 1 277 2 159 1 374 1 355 2 123 1 31 1 83 1 
221 1 170 1 262 1 347 1 309 1 369 1 312 1 362 2 123 1 316 1 294 1 96 1 31 1 
374 1 300 1 197 1 19 1 103 1 
201 1 300 2 323 1 213 1 46 1 147 1 47 1 135 1 19 2 103 1 374 1 253 2 267 1 50 2 39 1 270 1 197 2 343 1 12 1 
210 1 300 1 263 1 371 1 103 1 277 1 355 1 197 1 282 1 
147 1 12 1 103 1 
66 1 232 1 214 1 344 1 
66 1 232 1 174 1 214 1 179 1 310 1 307 1 
179 1 244 1 65 1 
66 1 174 3 163 1 351 1 310 1 179 3 214 1 134 2 232 1 320 1 284 1 307 1 
66 1 188 1 252 1 232 1 174 2 214 1 179 2 310 1 307 1 
232 1 174 1 95 1 69 1 279 1 179 1 310 1 257 1 120 1 307 1 284 1 
66 1 232 1 174 1 179 1 310 1 307 1 284 1 
66 2 174 1 214 1 179 1 310 1 307 1 284 1 
66 1 174 2 15 1 310 2 179 2 232 1 208 1 296 1 284 1 307 2 
66 1 188 2 174 3 227 1 214 1 310 1 179 3 35 1 122 1 232 2 279 1 284 1 307 1 
66 1 188 1 174 2 214 1 310 1 179 2 352 1 120 1 230 1 250 1 232 1 95 2 257 1 284 1 307 1 
66 1 188 2 174 4 214 1 310 2 179 4 35 1 252 1 232 2 279 1 108 1 284 1 307 2 
66 1 232 1 174 1 214 1 179 1 310 1 307 1 284 1 
66 2 188 2 174 4 163 1 226 1 351 1 214 2 179 4 310 1 134 1 35 1 232 3 279 1 307 1 
66 1 188 1 14 1 174 2 4 1 310 1 179 2 214 1 157 1 232 1 284 1 307 1 
66 1 174 3 163 1 351 2 310 1 179 3 214 1 134 2 232 1 284 1 307 1 260 1 
232 2 32 2 3 1 6 1 
274 1 174 1 179 1 310 1 307 1 284 1 
66 1 188 1 232 1 174 2 227 1 214 1 179 2 310 1 307 1 284 1 
198 1 
66 1 232 1 174 1 214 1 179 1 310 1 307 1 284 1 
188 1 66 1 174 3 227 1 310 1 179 3 214 1 134 1 232 1 284 1 307 1 
232 1 226 1 279 1 35 1 
66 1 232 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 200 29 99 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 200 245 99 133 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 200 29 368 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 200 29 99 133 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 125 205 245 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 200 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 353 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 200 245 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 200 245 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 2 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1136 | = null
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2906 | * -> >>
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | CONSTANT | 4016 | 1 -> -1
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7926 | stmt -> ;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 1167 | stmt -> ;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3035 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:hashCode()I | OPERATOR | 3493 | * -> %
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7825 | return null
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 3 157 1 196 1 20 3 151 1 253 2 345 1 359 2 164 1 165 1 141 2 305 1 44 1 
170 1 189 2 331 2 0 9 112 1 283 1 196 1 151 2 359 2 291 1 361 1 62 1 44 3 251 1 231 1 157 1 20 9 137 1 253 2 345 6 75 1 164 1 272 1 274 2 165 1 141 5 105 2 305 4 
170 1 189 2 331 2 0 9 112 1 283 1 196 1 151 2 359 2 291 1 361 1 62 1 44 3 251 1 231 1 157 1 20 9 137 1 253 2 345 6 75 1 164 1 272 1 274 2 165 1 141 5 105 2 305 4 
170 1 189 2 331 2 0 10 112 1 283 1 196 1 151 2 359 2 291 1 361 1 62 1 44 4 251 1 231 1 157 1 20 10 137 1 253 2 345 7 75 1 164 1 272 1 274 2 165 1 141 6 105 2 305 5 
170 1 189 2 331 1 0 7 112 1 283 1 196 1 151 2 359 2 291 1 62 1 44 2 251 1 231 1 157 1 20 7 137 1 253 2 345 4 75 1 164 1 272 1 274 2 165 1 141 4 105 2 305 3 
189 1 331 2 0 4 157 1 283 1 20 4 253 1 345 3 359 1 164 1 272 1 361 1 274 1 165 1 141 3 105 1 305 2 44 1 
189 1 323 1 0 2 251 1 157 1 20 2 137 1 151 1 253 1 359 1 339 1 164 1 141 1 165 1 10 1 105 1 
189 1 331 2 0 9 112 1 283 1 239 1 196 1 151 1 359 2 291 1 361 1 44 3 232 1 157 1 20 9 345 7 253 2 164 1 272 1 274 1 165 1 141 5 305 4 105 1 
189 1 331 2 0 9 112 1 283 1 239 1 196 1 151 1 359 2 291 1 361 1 44 3 232 1 157 1 20 9 345 7 253 2 164 1 272 1 274 1 165 1 141 5 305 4 105 1 
180 1 119 1 228 1 260 1 300 1 4 1 301 1 3 1 60 1 197 1 360 1 292 1 204 1 309 1 
92 1 
279 1 140 1 180 2 292 1 333 1 92 1 184 1 300 2 
298 2 215 1 279 2 180 5 45 2 333 1 92 1 300 5 221 1 97 1 262 1 140 1 292 2 374 2 8 1 308 1 154 1 319 1 214 1 
333 1 92 1 159 1 
92 1 295 2 203 1 
109 1 197 2 360 1 119 2 228 2 3 2 301 2 60 2 
109 1 28 1 123 2 30 1 171 1 238 1 3 3 60 2 31 1 173 2 289 1 197 2 360 1 61 1 264 1 114 2 223 1 201 2 225 1 342 1 366 2 322 1 63 1 250 1 119 2 228 3 301 2 68 1 182 1 207 1 327 1 74 1 212 1 236 1 185 1 350 1 143 1 
197 1 360 1 119 1 228 1 260 1 3 1 301 1 60 1 204 1 309 1 
180 1 333 1 228 1 92 1 1 1 260 1 300 1 301 1 3 1 127 1 172 1 316 1 76 1 183 1 
180 2 119 1 333 1 228 1 92 1 1 1 260 1 300 2 301 1 3 1 60 1 127 1 172 1 197 1 316 1 
279 1 180 1 292 1 300 1 19 1 
279 1 140 1 180 2 292 1 333 1 92 1 220 1 300 2 
279 1 180 1 300 1 
109 2 191 1 119 1 228 2 17 1 301 2 3 2 60 1 197 1 
72 1 64 1 50 1 
109 1 28 1 171 1 228 1 3 1 31 1 68 1 173 1 207 1 39 1 327 1 61 1 114 1 201 1 185 1 342 1 
28 1 171 1 119 1 228 2 301 1 3 2 68 1 31 1 60 1 207 1 36 1 173 1 290 1 72 1 327 1 61 1 114 1 201 1 185 1 342 1 
109 1 159 1 
197 1 109 1 119 3 228 3 3 3 301 3 60 3 36 1 
119 1 228 1 260 1 3 1 301 1 60 1 309 1 
197 1 191 1 119 1 228 1 17 1 260 1 3 1 301 1 60 1 
109 1 28 1 191 1 123 2 30 1 171 1 1 1 260 1 3 4 31 1 60 3 127 1 172 1 36 1 173 1 290 1 197 2 316 1 61 1 360 1 114 1 223 1 201 1 12 1 225 1 342 1 366 1 322 1 248 1 63 1 250 1 119 3 180 1 228 4 300 1 301 3 68 1 182 1 207 1 327 1 212 1 236 1 185 1 143 1 
109 1 183 1 119 1 228 2 3 2 301 2 60 1 36 1 314 1 
191 1 248 1 180 1 119 3 228 3 92 1 1 1 300 1 260 1 301 3 3 3 60 3 127 1 172 1 36 2 290 1 197 1 48 1 316 1 
72 1 197 1 191 1 119 2 228 2 50 1 3 2 301 2 60 2 36 1 
109 1 28 1 171 1 228 1 3 1 31 1 68 1 173 1 207 1 327 1 61 1 114 1 201 1 185 1 342 1 
109 1 194 1 171 1 228 1 260 1 3 1 68 1 173 1 207 1 327 1 61 1 114 1 9 1 201 1 185 1 342 1 115 1 
122 1 190 1 123 2 30 1 238 2 35 1 129 1 86 1 225 1 156 1 266 1 321 1 322 2 366 4 63 1 250 1 64 2 72 2 22 1 212 1 236 1 50 2 188 1 213 1 
199 1 316 1 119 1 228 1 260 1 3 1 301 1 60 1 
109 1 191 1 119 4 228 5 301 5 3 5 60 4 337 1 36 2 314 1 290 1 197 1 183 1 293 1 
199 1 119 2 228 2 260 1 3 2 301 2 60 2 309 1 
111 1 294 1 166 1 
338 1 111 2 147 1 176 1 166 2 318 1 
111 1 166 1 
111 1 166 1 
176 1 318 1 
176 1 318 1 
176 1 318 1 
175 1 111 1 166 1 
175 1 111 1 166 1 
175 1 111 1 166 1 
111 1 166 1 177 1 
111 1 166 1 177 1 
111 1 166 1 177 1 
110 3 226 1 54 2 55 1 111 2 180 2 193 1 218 1 147 1 92 1 252 2 300 2 271 1 208 2 7 1 358 2 131 2 166 2 142 1 
109 1 110 1 54 1 111 1 193 1 3 2 60 2 286 1 358 1 294 1 11 1 246 1 119 2 180 1 228 2 230 1 252 1 300 1 301 2 162 1 208 1 71 1 166 1 349 1 
189 2 216 2 274 1 10 1 58 1 
189 1 274 1 105 1 
189 1 10 1 105 1 
189 3 216 1 274 2 10 1 58 1 313 1 
189 2 216 1 274 1 10 1 58 1 69 1 
122 1 190 1 279 1 333 1 126 1 221 2 5 1 84 1 130 2 292 4 224 2 11 1 295 3 203 1 266 1 267 1 298 1 14 2 45 1 180 5 92 2 158 1 300 5 370 1 71 1 374 1 140 1 348 1 349 1 308 1 188 1 214 3 
53 1 122 3 190 3 279 6 333 1 126 2 221 6 5 1 240 1 292 7 224 6 295 9 203 3 154 1 266 3 365 1 298 2 14 6 180 9 45 2 92 5 300 9 19 5 233 5 370 2 234 1 49 1 140 1 374 2 52 1 348 3 349 4 308 1 188 3 214 8 
122 1 190 1 333 1 126 1 221 2 84 1 130 1 292 2 224 2 295 4 203 2 154 1 266 1 267 1 298 1 14 2 45 1 180 3 92 3 300 3 370 1 374 1 349 1 348 1 188 1 214 3 
53 1 122 2 190 2 333 1 126 1 221 4 84 1 130 2 292 3 224 4 295 7 203 3 154 1 266 2 267 1 365 1 298 1 14 4 45 1 180 4 92 4 300 4 370 1 234 1 374 1 349 2 348 2 188 2 214 5 
211 1 
159 1 33 1 342 1 
120 1 342 1 
342 1 207 1 
171 1 312 1 33 2 342 3 47 1 207 1 
171 1 342 1 207 1 
219 1 342 1 
322 3 366 7 282 1 145 2 56 1 46 1 238 4 285 1 113 1 161 1 371 1 198 1 346 1 167 1 188 1 266 1 213 3 321 2 
190 3 122 3 123 2 30 1 145 1 79 1 56 1 238 11 285 2 113 1 356 1 357 3 198 4 200 1 340 1 362 1 317 1 266 3 321 3 322 11 366 22 343 1 63 1 209 4 212 1 236 1 346 1 167 1 348 3 188 3 213 7 
123 4 30 2 282 1 145 2 56 1 150 1 238 5 285 1 113 1 198 1 340 1 266 1 321 3 366 9 322 4 16 1 63 2 46 1 161 1 212 2 236 2 167 1 188 1 213 4 
322 3 366 7 282 1 145 2 56 1 238 4 46 1 285 1 113 1 161 1 198 1 346 1 167 1 188 1 266 1 213 3 321 2 
322 3 366 7 282 1 145 2 56 1 238 4 46 1 285 1 113 1 161 1 198 1 346 1 167 1 188 1 266 1 213 3 321 2 
144 1 0 1 259 2 335 1 32 1 173 1 151 2 6 2 61 1 359 1 263 1 114 1 201 1 155 1 342 1 181 2 206 1 68 1 20 1 207 1 327 1 253 1 73 1 
189 2 311 1 0 1 259 1 81 1 313 1 173 1 151 1 6 1 359 1 61 1 114 1 10 1 201 1 247 1 181 1 157 1 68 1 20 1 70 1 253 1 273 1 274 1 254 1 105 1 169 1 
189 2 0 2 259 1 81 1 313 1 173 1 151 1 6 1 359 1 61 1 114 1 10 1 201 1 15 1 247 1 181 1 157 1 68 1 20 2 70 1 345 1 253 1 164 1 273 1 274 1 141 1 165 1 254 1 105 1 169 1 
189 2 311 1 0 3 195 1 259 1 81 1 313 1 173 1 151 1 6 1 359 1 61 1 114 1 10 1 201 1 247 1 181 1 206 1 68 1 20 3 70 1 253 1 345 2 164 1 273 1 274 1 141 1 165 1 105 1 169 1 
189 2 311 1 0 2 195 1 259 1 313 1 151 1 173 1 6 1 61 1 114 1 10 1 201 1 247 1 181 1 68 1 20 2 70 1 345 2 164 1 274 1 141 1 165 1 105 1 169 1 
369 1 
279 2 171 1 335 1 221 1 173 2 261 1 61 3 85 1 114 2 201 2 342 2 320 1 298 1 45 1 180 2 18 1 300 2 68 2 207 2 370 1 327 2 73 1 100 1 374 1 140 1 25 1 186 1 308 1 214 1 
237 1 310 1 279 2 352 2 333 2 1 1 260 1 3 1 127 1 172 1 316 1 222 1 180 3 228 1 92 2 300 3 66 1 301 1 140 1 183 1 76 1 184 1 51 1 107 1 
237 1 279 1 310 1 352 3 333 3 1 1 260 1 3 1 127 1 172 1 316 1 222 1 180 3 228 1 92 3 300 3 301 1 183 1 76 1 140 1 184 1 51 1 107 1 108 1 
237 1 310 1 279 2 352 3 333 3 1 1 260 1 3 1 127 1 172 1 83 1 316 1 222 1 180 3 228 1 92 3 300 3 66 1 301 1 140 1 183 1 76 1 184 1 51 1 107 1 108 1 
237 1 279 7 333 8 1 1 3 1 341 1 203 2 298 1 300 5 66 4 301 1 21 1 76 1 303 1 347 1 308 1 214 1 310 1 352 6 217 2 260 1 127 1 221 1 172 1 83 4 174 2 316 1 41 1 222 1 179 1 180 5 45 1 228 1 92 8 136 2 140 3 183 1 374 1 184 1 51 1 107 1 106 1 108 4 376 2 
237 1 279 4 333 5 332 1 1 1 3 1 295 2 203 2 298 1 300 4 66 2 301 1 76 1 303 1 308 1 214 1 310 1 352 4 217 2 260 1 127 1 221 1 172 1 83 2 174 2 316 1 222 1 180 4 45 1 228 1 92 6 136 2 183 1 374 1 140 2 51 1 107 1 106 1 376 2 108 2 
237 1 279 4 310 1 352 4 217 2 333 5 1 1 260 1 3 1 221 1 127 1 172 1 83 2 174 2 316 1 41 1 222 1 341 1 203 2 298 1 45 1 180 4 228 1 92 5 136 2 66 2 300 4 301 1 21 1 140 2 303 1 374 1 183 1 76 1 51 1 106 1 107 1 308 1 108 2 376 2 214 1 
237 1 279 4 310 1 352 4 217 2 333 5 1 1 260 1 3 1 221 1 127 1 172 1 83 2 174 2 316 1 41 1 222 1 341 1 203 2 298 1 45 1 180 4 228 1 92 5 136 2 66 2 300 4 301 1 21 1 140 2 303 1 374 1 183 1 76 1 51 1 106 1 107 1 308 1 108 2 376 2 214 1 
237 1 279 4 310 1 352 4 217 2 333 5 1 1 260 1 3 1 221 1 127 1 172 1 83 2 316 1 222 1 295 2 89 2 298 1 116 2 13 1 45 1 180 4 118 1 228 1 92 5 299 1 136 2 66 2 300 4 301 1 21 1 140 2 303 1 374 1 183 1 76 1 51 1 107 1 308 1 108 2 214 1 
237 1 310 1 279 5 352 5 217 2 333 6 1 1 260 1 3 1 221 1 127 1 172 1 83 3 174 2 316 1 41 1 222 1 341 1 203 2 298 1 45 1 180 4 228 1 92 6 136 2 300 4 66 3 301 1 21 1 140 2 303 1 374 1 183 1 76 1 51 1 347 1 106 1 308 1 107 1 376 2 214 1 108 3 
237 1 310 1 279 5 352 5 217 2 333 6 1 1 260 1 3 1 221 1 127 1 172 1 83 3 174 2 316 1 41 1 222 1 341 1 203 2 298 1 45 1 180 4 228 1 92 6 136 2 300 4 66 3 301 1 21 1 140 2 303 1 374 1 183 1 76 1 51 1 347 1 106 1 308 1 107 1 376 2 214 1 108 3 
237 1 279 4 333 5 332 1 1 1 3 1 295 2 298 1 116 2 299 1 300 4 66 2 301 1 76 1 303 1 308 1 214 1 310 1 352 4 217 2 260 1 127 1 221 1 172 1 83 2 316 1 222 1 89 2 180 4 45 1 228 1 92 5 136 2 183 1 374 1 140 2 51 1 107 1 108 2 
311 1 123 4 30 2 238 1 3 1 335 1 60 1 36 1 173 7 129 1 61 2 264 1 114 8 87 1 201 8 202 1 225 2 342 3 366 2 322 1 15 1 249 1 119 1 63 2 250 2 228 1 301 1 68 2 207 2 327 2 73 1 74 2 212 2 102 1 236 2 304 1 307 1 187 1 143 1 
191 1 190 1 122 1 123 2 30 1 238 1 3 1 60 1 197 1 225 1 266 1 321 1 366 3 322 2 63 1 250 1 119 1 228 1 64 1 301 1 72 1 212 1 50 1 236 1 256 1 348 1 188 1 213 1 277 1 
109 2 123 2 30 1 282 1 145 1 56 1 238 3 129 1 225 1 266 1 321 2 366 6 322 3 63 1 250 1 46 1 64 1 159 1 161 1 72 1 212 1 50 1 236 1 167 1 188 1 213 2 
109 1 190 2 122 1 123 4 30 2 124 1 353 1 238 8 284 1 357 3 198 1 200 1 264 1 244 1 225 2 266 2 321 1 322 6 366 14 343 1 63 2 250 1 64 11 72 11 209 3 212 2 236 2 50 4 256 1 348 2 188 1 143 1 213 2 
109 1 28 1 192 1 30 1 123 2 171 1 238 1 3 2 31 1 60 1 173 1 36 1 290 1 39 1 61 1 264 1 114 1 265 1 201 1 225 1 342 1 268 1 322 1 366 2 63 1 250 1 119 1 228 2 301 1 68 1 207 1 327 1 212 1 50 1 236 1 256 1 185 1 143 1 
109 2 278 2 190 2 282 1 145 1 56 1 238 10 3 3 60 1 290 1 198 4 61 2 114 3 201 3 342 2 119 1 250 3 63 3 64 7 301 1 68 2 161 1 207 2 163 2 72 7 210 1 212 3 255 1 256 1 167 1 348 2 213 8 28 2 122 2 311 1 123 6 30 3 171 2 31 2 173 3 36 1 315 2 264 1 42 2 223 2 225 3 266 3 321 4 322 10 366 20 228 3 46 1 373 1 327 1 236 3 50 7 185 2 188 3 143 1 
366 2 190 1 30 1 123 2 250 1 63 1 64 1 238 2 198 1 72 1 129 1 212 1 86 1 50 1 236 1 225 1 266 1 213 1 
366 2 322 2 122 1 30 1 123 2 250 1 63 1 64 1 72 1 129 1 22 1 212 1 50 1 236 1 225 1 188 1 213 1 321 1 
190 1 122 1 123 2 30 1 238 2 129 1 198 1 225 1 266 1 321 1 366 4 322 2 63 1 250 1 64 2 72 2 212 1 236 1 50 2 348 1 188 1 213 2 
366 2 190 1 30 1 123 2 250 1 63 1 64 1 238 2 198 1 72 1 212 1 86 1 50 1 304 1 236 1 225 1 266 1 213 1 
366 2 322 2 122 1 30 1 123 2 250 1 63 1 64 1 72 1 22 1 212 1 50 1 304 1 236 1 225 1 188 1 213 1 321 1 
190 1 122 1 123 2 30 1 238 2 198 1 225 1 266 1 321 1 366 4 322 2 63 1 250 1 64 2 72 2 212 1 236 1 304 1 50 2 348 1 188 1 213 2 
322 2 366 4 122 1 190 1 30 1 123 2 250 1 63 1 64 2 238 2 198 1 72 2 212 1 50 2 236 1 348 1 225 1 188 1 266 1 213 2 321 1 
109 1 28 1 30 1 123 2 171 1 238 1 3 1 31 1 173 1 61 1 264 1 114 1 223 1 201 1 225 1 342 1 366 2 322 1 250 1 63 1 228 1 68 1 207 1 327 1 212 1 236 1 185 1 143 1 
109 1 30 1 123 2 171 1 194 1 260 1 3 1 173 1 61 1 114 1 9 1 201 1 225 1 342 1 115 1 366 1 322 1 250 1 63 1 228 1 68 1 96 1 207 1 327 1 212 1 236 1 185 1 143 1 
190 1 122 1 123 2 30 1 238 2 198 1 225 1 266 1 321 1 366 4 322 2 63 1 250 1 64 2 72 2 212 1 236 1 50 2 256 1 348 1 188 1 213 2 
28 1 122 1 190 1 30 1 123 2 171 1 238 2 3 1 31 1 173 1 198 1 61 1 114 1 223 1 201 1 225 1 266 1 342 1 321 1 322 2 366 4 15 1 250 1 63 1 228 1 64 2 68 1 207 1 163 1 72 2 212 1 50 2 236 1 185 1 348 1 188 1 213 2 
122 1 191 1 190 1 123 2 30 1 238 2 3 1 60 1 198 1 197 1 225 1 266 1 322 1 366 3 63 1 250 1 119 1 228 1 64 1 67 1 301 1 72 1 212 1 236 1 50 1 256 1 348 1 188 1 213 1 
280 1 190 3 122 3 29 1 123 4 30 2 238 9 357 1 198 3 200 1 133 1 88 1 266 3 178 1 321 3 90 2 322 10 366 19 343 1 16 1 63 2 91 1 209 2 99 1 212 2 236 2 104 2 348 3 188 3 213 6 
366 4 322 2 29 2 16 1 30 1 123 2 91 1 63 1 238 2 357 1 209 1 200 1 99 2 212 1 236 1 133 1 104 1 
190 2 122 2 29 2 123 4 30 2 238 10 357 3 198 2 200 3 133 1 88 1 266 2 178 1 245 1 321 1 90 1 322 11 366 21 343 1 368 1 16 1 63 2 91 1 209 4 99 1 212 2 236 2 104 3 348 2 188 2 213 3 
190 2 122 2 29 2 123 4 30 2 238 8 357 2 198 2 200 2 133 1 88 1 266 2 178 1 321 2 90 1 322 9 366 17 343 1 368 1 16 1 63 2 91 1 209 3 99 1 212 2 236 2 104 2 348 2 188 2 213 4 
29 1 123 2 30 1 282 1 145 1 56 1 238 5 357 1 200 1 133 1 266 1 321 1 322 4 366 9 16 1 63 1 91 1 46 1 161 1 209 1 99 1 212 1 236 1 167 1 104 1 188 1 213 1 
208 1 358 1 54 1 111 1 218 1 147 1 252 1 166 1 95 1 271 1 
294 1 162 1 
208 1 134 1 40 1 358 1 54 1 111 1 275 1 252 1 166 1 
110 2 54 1 55 1 193 1 180 1 111 1 218 1 147 1 92 1 252 1 300 1 271 1 208 1 7 1 358 1 131 1 166 1 142 1 
110 2 54 1 55 1 193 1 180 1 111 1 218 1 147 1 92 1 252 1 300 1 271 1 208 1 7 1 358 1 131 1 166 1 142 1 
110 2 54 1 55 1 193 1 180 1 111 1 218 1 147 1 92 1 252 1 300 1 271 1 208 1 7 1 358 1 131 1 166 1 142 1 
338 1 138 1 175 1 
338 1 138 1 175 1 
177 1 82 1 
338 1 177 1 82 1 
246 1 286 1 
109 1 110 1 54 1 55 1 146 1 111 1 3 2 60 2 286 1 358 1 292 1 131 1 294 1 11 1 246 1 180 1 119 2 228 2 230 1 252 1 300 1 301 2 162 1 208 1 71 1 166 1 349 1 
138 1 175 1 
338 1 177 1 82 1 
30 1 123 2 238 1 3 2 128 1 173 2 242 1 61 1 264 1 114 2 152 1 201 2 225 1 342 1 366 2 322 1 250 1 63 1 227 1 228 2 344 1 301 2 68 1 207 1 74 2 212 1 102 1 236 1 256 1 187 1 143 1 
335 1 68 1 207 1 173 1 6 1 327 1 73 1 243 1 61 1 114 1 201 1 155 1 342 1 297 1 
189 2 311 1 247 1 354 1 81 1 68 1 313 1 70 1 173 1 6 1 243 1 61 1 274 1 114 1 10 1 201 1 105 1 351 1 
189 2 311 1 15 1 247 1 354 1 81 1 68 1 313 1 70 1 173 2 6 1 243 1 61 1 274 1 114 2 10 1 201 2 105 1 351 1 
189 2 311 1 247 1 65 1 81 1 68 1 313 1 70 1 173 1 6 1 61 1 274 1 114 1 10 1 201 1 105 1 351 1 
34 1 
298 1 215 1 45 1 333 1 92 1 221 1 374 1 8 1 308 1 214 1 
278 1 190 2 122 2 281 1 14 5 92 5 221 5 38 2 224 5 295 10 348 2 203 5 266 2 188 2 214 5 
279 1 180 1 140 1 333 1 92 1 300 1 
279 2 171 1 335 1 221 1 173 2 261 1 61 3 85 1 114 2 201 2 342 2 320 1 298 1 45 1 180 1 18 1 326 1 300 1 68 2 207 2 370 1 327 2 73 1 100 1 374 1 140 1 25 1 186 1 308 1 214 1 
215 1 333 1 92 1 8 1 159 1 221 1 214 1 
279 1 333 1 221 1 174 1 295 1 203 1 298 1 45 1 180 1 92 2 300 1 374 1 140 1 106 1 308 1 214 1 376 1 
278 1 120 2 122 1 190 1 279 1 171 1 149 1 221 3 173 1 38 1 37 1 61 2 114 1 224 3 201 1 295 6 203 3 266 1 342 3 363 1 298 2 14 3 117 1 180 1 45 2 325 1 92 3 270 1 300 1 68 1 47 1 207 1 370 1 327 1 139 1 140 1 374 2 348 1 308 2 188 1 214 4 
27 1 279 1 190 1 122 1 333 1 125 1 221 3 357 1 38 1 200 1 224 4 295 6 203 3 266 1 245 1 298 2 14 4 180 1 45 2 205 1 92 4 300 1 372 1 209 1 140 1 374 2 348 1 308 2 168 1 188 1 214 5 
26 1 281 1 282 1 56 1 260 1 3 1 4 1 221 2 60 1 38 2 197 1 360 1 41 1 204 1 266 2 298 1 45 1 180 1 119 1 228 1 300 1 301 1 374 1 167 1 308 1 309 1 188 1 214 2 
109 1 28 1 123 2 30 1 171 1 3 3 60 2 31 1 173 1 197 2 360 1 61 1 114 1 223 1 201 1 225 1 342 1 366 1 322 1 63 1 119 2 250 1 228 3 301 2 68 1 182 1 207 1 327 1 212 1 236 1 185 1 143 1 
298 1 14 2 145 1 45 1 333 2 92 4 221 2 370 1 374 1 85 1 224 2 295 4 203 2 308 1 214 1 
208 1 302 1 218 1 252 1 286 1 
208 1 252 1 24 1 
208 1 252 1 24 1 
208 1 252 1 24 1 
208 1 252 1 257 1 
208 1 252 1 257 1 
208 1 252 1 257 1 
208 1 252 1 
111 1 166 1 
26 1 366 10 322 5 123 2 30 1 16 1 282 1 63 1 56 2 238 5 198 2 212 1 236 1 167 2 266 2 188 2 213 5 321 3 
366 2 190 1 16 1 30 1 123 2 63 1 238 2 198 1 212 1 236 1 266 1 213 1 
322 2 366 4 122 1 190 1 16 1 30 1 123 2 63 1 238 2 198 1 212 1 236 1 348 1 188 1 266 1 213 2 321 1 
322 2 366 3 16 1 30 3 123 6 63 3 56 1 238 1 198 1 340 1 212 3 132 1 236 3 167 1 88 1 213 2 321 1 
190 3 122 3 282 2 123 10 30 5 145 1 79 1 56 3 238 16 356 1 357 3 198 5 200 1 340 2 362 1 132 1 88 1 266 5 321 7 322 18 366 34 343 1 16 1 63 5 46 1 161 1 209 4 212 5 236 5 167 3 306 1 348 3 188 5 213 12 
322 4 366 8 282 1 30 2 123 4 145 1 63 2 56 1 238 4 46 1 161 1 198 1 340 1 212 2 236 2 167 1 188 1 266 1 213 3 321 2 
322 3 366 6 282 1 145 1 56 1 46 1 238 3 159 1 161 1 167 1 266 1 188 1 213 2 321 2 
322 2 366 4 122 1 190 1 30 1 123 2 63 1 238 2 198 1 212 1 236 1 306 1 348 1 188 1 266 1 213 2 321 1 
366 2 322 1 209 1 200 1 238 1 357 1 
122 2 190 2 282 1 30 1 123 2 145 1 56 1 238 9 353 1 357 2 198 1 340 1 244 1 266 3 321 3 366 18 322 9 343 1 63 1 46 1 161 1 209 2 212 1 236 1 167 1 348 2 188 3 213 4 
366 1 322 1 209 1 
366 1 238 1 357 1 
278 1 322 3 366 6 190 1 122 1 123 2 30 1 63 1 238 3 198 1 212 1 236 1 306 1 348 1 266 1 188 1 213 3 321 2 
27 1 322 6 366 12 122 2 190 2 16 1 30 1 123 2 63 1 205 1 125 1 238 6 357 1 198 1 209 1 200 1 212 1 236 1 348 2 188 2 266 2 168 1 213 2 245 1 321 1 
366 6 322 3 282 1 56 1 238 3 198 1 167 1 266 1 188 1 213 2 321 1 
322 2 366 3 30 1 123 2 63 1 56 1 238 1 46 1 161 1 198 1 340 1 212 1 132 1 236 1 167 1 213 2 321 1 
123 2 30 1 282 1 145 1 56 1 238 4 357 1 200 1 266 1 245 1 321 2 366 8 322 4 16 1 63 1 46 1 161 1 209 1 212 1 236 1 167 1 188 1 213 2 
190 1 282 1 123 4 30 2 145 1 56 1 238 6 357 1 198 1 200 1 266 2 245 1 321 2 366 11 322 5 343 1 16 1 63 2 46 1 161 1 209 2 212 2 236 2 167 1 306 1 348 1 188 1 213 3 
366 2 322 1 209 1 200 1 123 2 30 1 16 1 63 1 212 1 238 1 236 1 357 1 245 1 
27 1 190 2 122 1 282 1 123 6 30 3 145 1 56 1 238 10 125 1 357 1 198 2 200 1 340 1 266 3 245 1 321 3 366 17 322 7 16 1 63 3 205 1 46 1 161 1 209 1 212 3 236 3 167 1 306 1 348 2 168 1 188 2 213 5 
123 2 30 1 282 1 145 1 56 1 238 4 357 1 200 1 266 1 245 1 321 2 366 8 322 4 16 1 63 1 46 1 161 1 209 1 212 1 236 1 167 1 188 1 213 2 
366 2 322 1 209 1 200 1 123 2 30 1 16 1 63 1 212 1 238 1 236 1 357 1 245 1 
27 1 190 2 122 1 282 1 123 8 30 4 145 1 56 1 125 1 238 10 357 1 198 2 200 1 340 2 266 3 245 1 321 3 366 18 322 8 16 1 63 4 205 1 46 1 161 1 209 1 212 4 236 4 167 1 306 1 348 2 168 1 188 2 213 5 
27 1 190 3 122 2 123 8 30 4 125 1 238 9 357 1 198 3 200 1 340 2 88 1 266 3 245 1 321 3 366 16 322 7 16 1 63 4 205 1 209 1 212 4 236 4 348 3 168 1 188 2 213 6 
322 4 366 7 282 1 56 3 46 2 238 3 161 1 198 3 167 3 188 1 266 1 213 6 321 3 
27 1 190 2 122 1 282 1 123 8 30 4 145 1 56 1 125 1 238 10 357 1 198 1 200 1 340 2 88 1 266 3 245 1 321 3 366 18 322 8 16 1 63 4 205 1 46 1 161 1 209 1 212 4 236 4 167 1 348 2 168 1 188 2 213 4 
109 1 183 1 228 1 276 1 3 1 301 1 314 1 
2 1 57 1 329 1 160 1 330 1 
15 1 335 1 68 1 173 4 207 1 241 1 327 1 73 1 61 1 114 4 235 1 201 4 342 1 
171 1 68 1 173 2 207 1 261 1 373 1 61 2 114 2 77 1 201 2 25 1 186 1 342 1 320 1 
189 1 327 1 61 1 114 1 10 1 201 1 105 1 68 1 70 1 173 1 
311 1 15 1 61 1 227 1 114 2 102 1 201 2 68 1 342 1 207 1 173 2 
15 1 335 1 68 2 173 4 207 2 241 1 73 1 327 1 61 2 114 5 77 1 102 1 87 1 201 5 307 1 342 3 
15 1 335 1 68 2 173 4 207 2 241 1 73 1 327 1 61 2 114 5 77 1 102 1 201 5 78 1 307 1 342 3 
73 1 327 1 61 1 114 1 159 1 201 1 335 1 68 1 342 1 207 1 173 1 
109 1 171 1 119 1 228 2 301 1 3 2 60 1 31 1 68 1 207 1 36 1 173 1 327 1 61 1 114 1 201 1 185 1 342 1 
109 1 171 2 219 1 260 1 3 2 31 1 60 1 127 1 173 1 36 1 316 1 61 1 114 1 201 1 342 3 269 1 119 2 228 2 301 2 68 1 207 2 77 1 185 1 
109 1 171 2 219 1 260 2 3 2 60 1 127 1 173 1 36 1 316 1 61 1 114 1 9 1 201 1 342 3 115 1 269 1 119 2 228 2 301 2 68 1 207 2 77 1 185 1 
269 1 120 1 279 1 171 1 180 2 333 1 219 1 92 1 300 2 355 1 68 1 172 1 33 1 207 1 173 3 327 1 61 1 114 3 77 1 235 1 201 3 342 4 364 1 
120 1 333 1 260 1 4 1 3 1 60 1 173 1 197 1 360 1 114 1 201 1 204 1 342 1 180 1 119 1 325 1 228 1 92 1 300 1 301 1 77 1 309 1 
61 1 114 1 201 1 202 1 68 1 173 1 
311 1 15 1 249 1 171 1 68 2 47 1 173 6 207 2 261 1 327 2 74 1 61 3 114 7 102 1 87 1 201 7 202 1 307 1 342 3 320 1 375 1 
109 2 282 1 145 1 56 1 238 3 3 2 60 1 61 1 114 1 201 1 342 1 15 1 119 1 250 2 63 2 64 1 301 1 68 1 161 1 207 1 163 1 72 1 212 2 256 1 167 1 213 2 28 1 123 4 30 2 171 1 31 1 128 1 173 1 36 1 223 1 42 1 225 2 266 1 321 2 366 6 322 3 228 2 46 1 50 1 236 2 185 1 188 1 
279 1 281 1 282 1 333 2 56 1 4 1 3 1 60 1 197 1 292 1 114 1 8 1 201 1 204 1 342 1 298 2 117 1 119 1 300 2 301 1 167 1 308 2 309 1 214 4 120 1 26 1 215 1 260 1 221 5 173 1 38 2 360 1 266 2 363 1 180 2 45 2 325 1 228 1 92 2 270 1 326 1 327 1 140 1 374 2 188 2 
15 1 171 1 68 1 33 1 47 1 173 2 207 1 37 1 61 2 114 2 201 2 202 1 342 2 
109 1 171 1 260 1 3 2 60 1 173 1 36 1 61 1 114 1 9 1 201 1 342 1 115 1 119 1 228 2 301 1 68 1 207 1 327 1 185 1 
171 1 68 1 47 1 173 1 207 1 261 1 61 2 114 1 77 1 201 1 342 1 320 1 375 1 
109 1 103 1 296 1 43 1 334 1 
109 1 248 1 180 2 333 1 92 1 148 1 1 1 260 1 300 2 93 1 334 2 127 1 172 1 316 1 292 1 328 1 103 1 43 2 296 2 
242 1 228 1 152 1 103 1 3 1 301 1 344 1 43 1 334 1 
148 1 103 1 93 1 
253 1 359 1 164 1 0 1 141 1 165 1 157 1 20 1 
0 4 229 1 20 4 137 1 287 1 345 2 253 1 359 1 164 2 165 2 141 3 153 1 305 1 44 1 
258 1 121 1 0 2 157 1 232 1 20 2 253 1 345 1 359 1 164 1 141 1 165 1 
0 3 229 2 157 1 20 3 137 2 253 1 359 1 164 1 23 1 141 1 165 1 153 1 
324 2 101 1 141 2 94 1 
253 1 367 1 359 1 0 1 157 1 20 1 
345 1 253 1 359 1 164 1 291 1 0 2 141 1 165 1 157 1 20 2 
135 1 
253 1 359 1 164 1 0 1 141 1 165 1 157 1 20 1 
164 1 141 1 165 1 159 1 
253 1 359 1 164 1 0 1 141 1 165 1 20 1 
181 1 20 1 151 1 
0 3 229 1 157 1 20 3 137 2 98 1 253 1 359 1 164 1 141 1 165 1 153 1 
345 1 331 1 253 1 359 1 164 1 0 2 141 1 165 1 20 2 
189 1 253 1 359 1 0 1 274 1 141 1 283 1 157 1 105 1 305 1 20 1 
253 1 359 1 0 1 141 1 165 1 157 1 20 1 
253 1 359 1 164 1 0 1 165 2 157 1 20 1 
0 2 80 1 157 1 336 1 20 2 288 1 253 2 359 2 141 1 165 1 
0 3 112 1 157 1 20 3 253 1 345 2 359 1 164 1 291 1 165 1 141 2 305 1 44 1 
189 2 0 2 157 1 59 1 20 2 313 1 253 1 345 1 359 1 164 1 274 1 141 1 165 1 10 1 105 1 
331 1 0 4 157 1 20 4 253 2 345 2 359 2 164 1 361 1 165 1 141 2 305 1 44 1 
0 3 157 1 20 3 137 1 345 1 253 1 359 1 164 1 291 1 165 1 141 1 
141 1 305 1 287 1 44 1 
141 1 165 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 287 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 208 (28,38,185) (28,38,185) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 208 (28,38,185) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (21,53) (31,124,284) (28,38,185) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (139,334) (112,274) (112,274) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 208 (28,38,185) (28,38,185) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 208 (31,124,284) (31,124,284) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 208 (31,124,284) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (139,334) (139,334) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException 208 (31,124,284) (31,124,284) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4835 | + -> <<
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 642 | stmt -> ;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | RETURN | 6823 | return null
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4378 | == -> <
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 692 | = null
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4623 | == -> !=
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5667 | return null
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
54 1 318 9 81 1 2 1 55 1 242 9 86 1 102 1 370 1 295 3 36 2 296 5 373 1 166 1 37 2 331 1 333 1 91 1 302 2 358 7 259 4 149 1 236 1 50 1 
54 1 318 9 81 1 2 1 55 1 242 9 86 1 102 1 370 1 295 3 36 2 296 5 373 1 166 1 37 2 331 1 333 1 91 1 302 2 358 7 259 4 149 1 236 1 50 1 
54 2 318 9 81 2 2 2 55 1 242 9 86 1 102 1 226 1 88 1 295 3 36 2 296 5 166 1 331 1 37 2 333 1 42 1 91 2 302 2 358 6 259 4 149 1 150 1 74 1 236 1 122 1 50 1 
54 2 318 9 81 2 2 2 55 1 242 9 86 1 102 1 226 1 88 1 295 3 36 2 296 5 166 1 331 1 37 2 333 1 42 1 91 2 302 2 358 6 259 4 149 1 150 1 74 1 236 1 122 1 50 1 
54 2 318 10 81 2 2 2 55 1 242 10 86 1 102 1 226 1 88 1 295 4 36 2 296 6 166 1 331 1 37 2 333 1 42 1 91 2 302 2 358 7 259 5 149 1 150 1 74 1 236 1 122 1 50 1 
54 2 318 7 81 2 2 2 55 1 242 7 86 1 102 1 226 1 88 1 295 2 36 1 296 4 166 1 37 2 333 1 42 1 91 2 302 2 358 4 259 3 149 1 150 1 74 1 236 1 122 1 50 1 
91 1 81 1 302 1 318 4 2 1 358 3 242 4 259 2 102 1 295 1 36 2 296 3 166 1 236 1 331 1 37 1 333 1 50 1 
91 1 54 1 302 1 318 2 81 1 365 1 242 2 102 1 88 1 248 1 362 1 150 1 296 1 236 1 37 1 333 1 
54 1 302 2 318 3 55 1 358 1 242 3 259 1 102 1 295 1 296 2 236 1 37 2 333 1 
243 1 156 1 147 1 
265 2 156 1 201 1 
272 2 253 2 22 2 328 1 250 1 83 2 227 2 300 2 
27 1 317 1 126 1 221 1 269 1 83 3 132 1 227 2 272 3 328 1 228 2 250 1 329 1 136 1 229 1 298 1 354 1 300 2 276 1 355 1 376 1 278 1 43 1 253 2 377 1 337 1 307 2 145 1 70 1 146 2 310 1 22 2 264 2 219 2 51 1 288 1 25 1 
272 1 117 1 253 1 22 1 328 1 83 1 114 1 315 1 227 1 300 1 
241 1 171 1 83 1 114 1 279 1 227 1 147 1 272 1 106 1 263 1 138 1 156 1 64 1 179 1 
253 1 241 1 171 1 83 1 114 1 227 1 147 1 272 1 22 1 106 2 263 2 138 1 156 1 300 1 179 1 
192 1 381 1 106 1 263 1 15 1 
192 1 238 1 381 1 106 2 263 2 156 1 13 1 147 1 
192 1 106 1 263 1 
253 1 83 1 114 1 181 1 227 1 117 1 272 1 381 1 328 1 22 1 106 1 263 1 315 1 300 1 
156 1 
192 1 381 1 106 2 263 2 108 1 156 1 13 1 147 1 
26 4 289 2 32 1 366 2 291 2 83 1 181 1 368 1 227 1 325 2 272 1 328 1 106 5 13 1 300 1 356 1 253 1 46 1 359 5 68 1 47 1 173 1 114 1 258 2 147 2 192 2 260 1 117 1 22 1 381 2 311 2 118 1 263 5 151 1 77 1 218 1 315 1 156 2 
250 1 243 1 
169 1 253 1 83 2 227 2 184 1 272 2 22 1 250 2 300 1 
266 1 176 1 94 1 
99 1 27 1 126 1 377 1 221 1 83 1 146 1 272 1 228 1 250 1 329 1 354 1 219 1 51 1 355 1 288 1 
141 1 272 3 253 1 22 3 250 1 83 3 227 3 300 3 
272 1 22 1 83 1 114 1 315 1 227 1 300 1 
169 1 272 1 253 1 22 1 83 1 114 1 227 1 300 1 184 1 
267 1 27 1 317 1 126 1 221 1 241 1 269 1 83 4 323 1 227 3 184 1 272 4 328 1 106 1 228 1 250 1 329 1 136 1 354 1 138 1 300 3 355 1 276 1 376 1 141 1 43 1 377 1 253 2 337 1 307 2 171 1 114 1 145 1 70 1 146 1 310 1 22 3 263 1 285 1 264 1 219 1 51 1 179 1 288 1 
237 1 272 2 141 1 22 1 250 1 83 2 279 1 227 2 300 1 
267 1 141 2 253 1 241 1 232 1 171 1 83 3 114 1 227 3 184 1 272 3 22 3 106 1 263 1 285 1 138 1 156 1 300 3 179 1 
266 1 141 1 253 1 83 2 227 2 184 1 272 2 22 2 176 1 300 2 
27 1 126 1 377 1 221 1 83 1 146 1 272 1 228 1 250 1 329 1 354 1 219 1 51 1 355 1 288 1 
27 1 377 1 221 1 345 1 83 1 146 1 272 1 228 1 250 1 354 1 219 1 51 1 188 1 355 1 288 1 
266 2 317 1 290 1 269 1 291 1 33 1 180 1 136 2 229 2 39 1 230 1 376 1 357 1 67 1 337 1 307 2 70 1 94 2 309 1 310 1 176 2 311 1 264 4 121 1 
272 1 22 1 256 1 83 1 114 1 138 1 227 1 300 1 
267 1 27 1 141 1 377 1 126 1 221 1 83 2 146 1 227 1 272 2 176 1 22 1 228 1 329 1 354 1 219 1 51 1 300 1 288 1 355 1 
237 1 267 1 141 2 253 1 83 5 279 1 246 1 227 5 184 1 272 5 22 4 250 1 49 1 300 4 
272 2 22 2 256 1 83 2 114 1 315 1 227 2 300 2 
319 1 374 1 
319 1 374 1 
321 1 277 1 
321 1 277 1 
321 1 277 1 
105 1 319 1 374 1 
105 1 319 1 374 1 
319 1 235 1 374 1 
319 2 321 1 23 1 374 2 140 1 277 1 
105 1 319 1 374 1 
92 1 319 1 374 1 
92 1 319 1 374 1 
92 1 319 1 374 1 
239 2 268 2 195 1 319 2 45 2 18 1 369 1 106 2 371 2 263 2 372 1 330 3 153 2 207 1 156 1 40 1 374 2 140 1 157 1 
251 1 100 1 268 1 319 1 45 1 344 1 83 2 224 1 227 2 380 1 272 2 22 2 235 1 106 1 263 1 371 1 250 1 330 1 153 1 217 1 374 1 168 1 157 1 300 2 
91 1 81 1 2 1 
91 1 81 1 365 1 
81 3 2 2 365 1 200 1 379 1 53 1 
81 2 2 1 365 1 200 1 379 1 21 1 
81 2 2 1 365 1 200 2 379 1 
26 3 100 1 220 1 320 1 366 1 291 1 56 1 180 1 201 1 183 1 325 1 104 1 106 5 59 2 12 1 11 1 13 1 251 1 67 1 359 2 304 2 173 1 258 1 147 1 192 1 381 4 311 1 263 5 217 1 265 3 156 2 98 2 
381 1 106 1 263 1 338 1 287 1 175 1 
26 3 220 1 320 1 366 1 291 1 180 1 201 2 183 1 325 1 104 1 106 3 59 2 11 1 67 1 304 1 359 2 258 1 147 1 260 1 381 2 311 1 263 3 217 1 265 4 156 3 98 2 
26 5 220 1 320 1 29 1 366 1 291 2 180 2 201 3 183 1 325 1 104 2 106 4 59 4 11 1 170 1 67 2 304 2 359 4 258 1 147 1 260 1 381 3 311 2 48 1 263 4 217 2 265 7 156 4 98 4 
231 1 221 1 243 1 
221 1 293 1 
82 1 
27 1 221 1 
231 2 27 1 327 1 221 3 308 1 288 1 
27 1 221 1 288 1 
221 1 7 1 
80 1 357 3 46 1 30 1 32 1 291 1 160 1 368 1 133 1 309 2 311 1 34 1 136 3 229 4 363 1 109 2 264 7 
80 1 357 3 46 1 30 1 32 1 291 1 160 1 368 1 133 1 309 2 311 1 34 1 136 3 229 4 363 1 109 2 264 7 
80 1 357 3 46 1 30 1 32 1 291 1 160 1 368 1 133 1 309 2 148 1 311 1 34 1 136 3 229 4 363 1 109 2 264 7 
317 1 80 5 128 1 30 2 198 4 32 2 5 1 160 2 291 4 199 1 180 3 368 1 133 1 87 1 8 1 104 3 34 1 107 1 136 15 229 16 109 3 376 1 190 3 357 10 46 2 67 3 337 1 307 2 70 1 309 5 212 1 311 4 363 1 264 31 
317 2 80 1 30 1 32 1 291 1 160 1 85 1 368 1 133 1 107 1 34 1 136 4 229 5 61 1 109 2 376 2 357 4 46 1 337 2 307 4 70 2 309 3 311 1 264 9 
54 1 302 1 318 1 242 1 146 1 116 1 58 1 228 1 185 1 203 1 35 1 208 1 38 1 37 1 219 1 333 1 
54 1 302 1 318 2 358 1 242 2 146 1 71 1 116 1 228 1 203 1 35 1 208 1 137 1 38 1 332 1 37 1 219 1 
54 1 81 1 28 1 318 1 365 1 358 1 242 1 146 1 71 1 162 1 116 1 284 1 228 1 203 1 35 1 354 1 332 1 219 1 53 1 355 1 
54 2 302 1 318 1 112 1 242 1 306 1 146 1 116 2 228 1 203 2 35 2 137 1 274 1 37 1 219 1 139 1 51 1 
54 1 302 1 318 1 242 1 146 1 71 1 116 1 228 1 185 1 203 1 35 1 208 1 38 1 37 1 219 1 333 1 
158 1 
26 1 79 1 240 1 127 2 241 1 366 1 83 1 201 2 225 1 227 1 325 1 272 1 106 4 60 1 352 1 138 1 299 3 275 1 13 2 64 1 44 3 336 5 210 2 305 1 359 1 113 1 211 2 171 1 173 1 257 1 69 2 114 1 258 1 279 1 20 3 147 1 192 5 262 1 263 4 177 1 156 1 179 1 
26 1 79 1 240 1 127 2 241 1 366 1 83 1 201 2 225 1 227 1 325 1 272 1 106 4 60 1 352 1 138 1 299 3 275 1 13 2 64 1 44 3 336 5 210 2 305 1 359 1 113 1 211 2 171 1 173 1 257 1 69 2 114 1 258 1 279 1 20 3 147 1 192 5 262 1 263 4 177 1 156 1 179 1 
241 1 106 4 352 1 206 2 165 2 299 2 64 1 13 2 113 1 359 1 210 2 171 1 173 1 257 1 114 1 258 1 20 2 262 1 263 4 216 1 265 2 179 1 79 1 26 1 127 2 366 1 83 1 227 1 325 1 272 1 138 1 275 1 41 1 44 2 336 4 279 1 147 1 192 4 156 1 
241 1 201 2 106 5 205 1 352 1 299 2 354 1 62 1 13 3 64 1 355 1 66 1 210 2 359 2 113 1 211 2 171 1 173 1 257 1 69 2 114 1 258 1 20 2 262 1 263 5 265 2 219 2 179 1 26 2 79 1 27 1 127 2 221 1 320 1 366 1 83 1 225 1 227 1 134 1 325 1 272 1 228 2 138 1 275 1 41 1 90 1 44 2 336 4 146 2 279 1 147 1 192 6 156 2 51 2 194 1 
79 1 241 1 83 1 227 1 272 1 106 3 352 1 108 1 138 1 64 1 13 1 336 2 113 1 171 1 257 1 114 1 279 1 20 1 192 2 262 1 263 3 179 1 
79 1 241 1 83 1 227 1 272 1 106 3 352 1 108 1 138 1 299 1 64 1 13 1 336 3 113 1 171 1 257 1 114 1 279 1 147 1 192 1 262 1 263 3 156 1 179 1 
79 1 241 1 83 1 227 1 272 1 106 3 352 1 108 1 138 1 299 1 13 1 64 1 44 1 336 3 113 1 171 1 257 1 114 1 279 1 20 1 147 1 192 2 262 1 263 3 156 1 179 1 
26 1 79 1 240 1 127 2 241 1 366 1 83 1 201 2 225 1 227 1 325 1 272 1 106 5 60 1 352 1 108 1 299 4 138 1 275 1 64 1 13 3 44 4 336 6 210 2 305 1 359 1 113 1 211 2 171 1 173 1 257 1 69 2 114 1 258 1 279 1 20 4 115 1 147 5 192 7 262 1 263 5 177 1 156 5 179 1 
241 1 201 2 106 4 352 1 299 2 64 1 13 2 113 1 359 1 210 2 171 1 211 2 173 1 257 1 114 1 69 2 258 1 20 2 262 1 263 4 265 2 179 1 79 1 26 1 127 2 366 1 83 1 225 1 227 1 325 1 272 1 138 1 275 1 41 1 44 2 336 4 279 1 147 1 192 4 156 2 
26 1 79 1 240 1 127 2 241 1 366 1 83 1 201 2 225 1 227 1 325 1 272 1 106 4 60 1 352 1 299 2 138 1 275 1 13 2 64 1 44 2 336 4 210 2 305 1 359 1 113 1 211 2 171 1 257 1 173 1 69 2 114 1 258 1 279 1 20 2 147 1 192 4 262 1 263 4 156 1 179 1 
26 1 79 1 240 1 127 2 241 1 366 1 83 1 201 2 225 1 227 1 325 1 272 1 106 4 60 1 352 1 299 2 138 1 275 1 13 2 64 1 44 2 336 4 210 2 305 1 359 1 113 1 211 2 171 1 257 1 173 1 69 2 114 1 258 1 279 1 20 2 147 1 192 4 262 1 263 4 156 1 179 1 
26 1 79 1 127 2 241 1 366 1 83 1 227 1 325 1 272 1 164 1 106 4 206 2 352 1 165 2 299 2 138 1 275 1 13 2 64 1 44 2 336 4 210 2 305 1 359 1 113 1 171 1 257 1 173 1 114 1 258 1 279 1 20 2 281 1 147 1 192 4 262 1 263 4 216 1 265 2 156 1 179 1 
266 1 376 1 317 1 357 2 46 1 269 1 307 2 337 1 243 1 32 1 291 1 70 1 368 1 94 1 133 1 309 2 310 1 176 1 311 1 34 1 250 2 136 3 229 3 109 1 264 6 39 1 
266 4 80 1 317 2 128 1 269 2 198 3 4 1 291 2 180 2 8 1 350 1 104 2 273 1 250 1 136 6 229 8 298 1 110 1 376 2 43 1 190 3 357 2 67 1 337 2 307 4 70 2 94 11 309 1 310 1 176 11 311 1 76 1 264 14 
99 1 266 1 267 1 27 1 126 1 317 1 221 1 269 1 83 2 57 1 227 1 272 2 294 1 228 1 250 1 329 1 136 1 229 1 354 1 298 1 300 1 355 1 376 1 141 1 377 1 43 1 307 2 337 1 146 1 70 1 19 1 310 1 22 1 76 1 264 2 219 1 51 1 288 1 
159 2 291 3 245 2 103 1 104 2 250 2 297 2 109 1 298 1 354 2 300 1 355 2 357 10 67 2 307 6 70 3 71 1 360 1 309 6 310 3 22 1 176 7 311 3 76 1 264 20 219 3 125 2 267 1 266 7 27 2 317 3 126 2 80 4 221 2 269 3 32 1 83 3 180 2 368 1 133 1 227 1 272 3 34 1 228 3 329 2 136 10 229 10 276 2 141 1 376 3 43 1 377 2 46 1 337 3 146 3 94 7 193 1 51 1 288 2 
0 1 27 2 317 2 221 3 269 2 83 1 129 1 227 1 134 1 58 1 272 1 228 8 136 1 205 1 229 1 39 1 354 2 298 1 187 1 300 1 375 1 355 2 141 1 376 2 43 1 233 1 143 1 337 2 307 4 146 7 70 2 71 1 282 1 310 2 22 1 264 2 219 8 51 2 25 2 
266 1 317 1 269 1 223 1 291 1 83 1 180 1 227 1 184 1 272 1 104 1 136 2 229 1 300 1 376 1 253 1 357 1 67 1 337 1 307 2 70 1 94 1 309 1 310 1 176 1 22 1 311 1 76 1 264 3 
266 1 376 1 80 1 317 1 357 1 290 1 269 1 307 2 337 1 291 1 180 1 70 1 94 1 310 1 176 1 229 2 264 2 39 1 
266 1 230 1 376 1 317 1 357 1 269 1 67 1 307 2 337 1 70 1 94 1 309 1 310 1 176 1 311 1 136 2 264 2 39 1 
266 2 317 1 80 1 269 1 291 1 180 1 104 1 136 2 229 2 39 1 376 1 357 2 67 1 337 1 307 2 70 1 94 2 309 1 310 1 176 2 311 1 264 4 
266 1 376 1 80 1 317 1 357 1 290 1 269 1 307 2 337 1 291 1 129 1 180 1 70 1 94 1 310 1 176 1 229 2 264 2 
266 1 230 1 376 1 317 1 357 1 269 1 67 1 307 2 337 1 129 1 70 1 94 1 309 1 310 1 176 1 311 1 136 2 264 2 
266 2 317 1 80 1 269 1 291 1 180 1 129 1 104 1 136 2 229 2 376 1 357 2 67 1 337 1 307 2 70 1 94 2 309 1 310 1 176 2 311 1 264 4 
266 2 317 1 80 1 269 1 291 1 180 1 104 1 136 2 229 2 376 1 357 2 67 1 337 1 307 2 70 1 94 2 309 1 310 1 176 2 311 1 264 4 
27 1 126 1 317 1 221 1 269 1 83 1 272 1 228 1 250 1 329 1 136 1 229 1 298 1 354 1 355 1 276 1 376 1 377 1 43 1 307 2 337 1 146 1 70 1 310 1 264 2 219 1 51 1 288 1 
27 1 317 1 221 1 269 1 345 1 83 1 272 1 228 1 250 1 136 1 229 1 298 1 354 1 188 1 355 1 376 1 377 1 43 1 307 2 337 1 146 1 70 1 310 1 264 2 120 1 219 1 51 1 288 1 
266 2 317 1 80 1 269 1 291 1 180 1 104 1 136 2 229 2 376 1 357 2 67 1 337 1 307 2 70 1 94 2 309 1 310 1 176 2 311 1 76 1 264 4 
266 2 27 1 80 1 126 1 317 1 221 1 269 1 159 1 291 1 180 1 83 1 58 1 272 1 104 1 228 1 329 1 136 2 229 2 354 1 355 1 276 1 376 1 377 1 357 2 67 1 307 2 337 1 146 1 70 1 94 2 309 1 310 1 176 2 311 1 264 4 219 1 288 1 
266 1 80 1 317 1 269 1 291 1 83 1 180 1 227 1 184 1 272 1 104 1 136 1 229 2 300 1 376 1 253 1 357 1 67 1 337 1 307 2 254 1 70 1 94 1 310 1 22 1 176 1 311 1 76 1 264 3 
317 2 1 1 80 3 128 1 198 2 291 3 180 3 346 2 8 1 104 3 135 1 136 10 229 9 61 1 189 1 301 1 252 1 376 2 190 1 357 6 67 3 337 2 307 4 70 2 309 3 261 1 214 2 215 1 311 3 264 19 
80 2 317 3 1 1 197 1 198 2 291 3 180 3 131 1 346 1 8 2 104 3 135 2 107 2 136 12 229 14 61 1 189 1 301 1 376 3 190 2 357 4 67 2 337 3 307 6 70 3 309 2 214 4 311 2 215 2 341 1 152 1 178 1 264 26 314 1 
1 1 198 4 197 1 291 5 346 1 8 3 104 4 107 1 61 1 109 1 301 1 252 1 357 8 67 4 307 6 70 3 309 4 214 4 311 5 215 1 178 1 264 41 314 1 80 4 317 3 128 1 32 1 322 1 180 4 131 1 368 1 133 1 135 2 34 1 136 21 229 20 189 1 376 3 190 3 46 1 337 3 341 1 152 1 
317 4 1 1 80 3 128 1 197 1 198 4 32 1 322 1 291 5 180 4 131 1 368 1 133 1 346 1 8 3 104 4 135 2 34 1 107 2 136 18 229 20 61 1 109 1 189 1 301 1 252 1 376 4 190 3 357 7 46 1 67 3 337 4 307 8 70 4 309 4 214 4 215 1 311 4 341 1 178 1 152 1 264 38 314 1 
317 2 1 1 80 7 128 2 197 1 198 4 32 1 291 8 180 7 131 1 368 1 133 1 346 1 8 2 350 2 104 7 135 1 34 1 107 1 136 25 229 27 61 1 109 1 189 1 301 1 376 2 190 4 357 14 46 1 67 7 337 2 307 4 70 2 309 7 214 4 215 1 311 8 341 1 178 1 152 1 264 52 314 1 
268 1 195 1 319 1 45 1 371 1 153 1 18 1 78 1 374 1 140 1 
235 1 224 1 
347 1 268 1 10 1 319 1 45 1 371 1 153 1 374 1 73 1 
239 1 268 1 195 1 319 1 45 1 18 1 369 1 106 1 263 1 371 1 330 2 153 1 207 1 156 1 40 1 374 1 140 1 157 1 
239 1 268 1 195 1 319 1 45 1 18 1 369 1 106 1 263 1 371 1 330 2 153 1 207 1 156 1 40 1 374 1 140 1 157 1 
239 1 268 1 195 1 319 1 45 1 18 1 369 1 106 1 263 1 371 1 330 2 153 1 207 1 156 1 40 1 374 1 140 1 157 1 
105 1 364 1 23 1 
105 1 364 1 23 1 
111 1 92 1 
111 1 92 1 23 1 
168 1 380 1 
239 1 268 1 100 1 319 1 344 1 83 2 6 1 224 1 227 2 272 2 106 1 371 1 250 1 330 1 207 1 374 1 168 1 300 2 251 1 45 1 380 1 381 1 22 2 235 1 263 1 153 1 217 1 
105 1 364 1 
111 1 92 1 23 1 
27 1 317 1 221 1 269 1 83 2 227 2 272 2 228 2 136 1 229 1 354 1 298 1 355 1 376 1 43 1 209 1 233 1 142 1 307 2 337 1 144 1 70 1 146 2 282 1 310 1 97 1 76 1 264 2 219 2 316 1 25 2 
116 1 58 1 228 2 31 1 208 1 219 2 146 2 167 1 71 1 124 1 
116 1 228 1 208 1 219 1 146 1 72 1 71 1 124 1 
116 1 228 1 219 1 146 1 139 1 51 1 334 1 167 1 
116 1 228 1 31 1 208 1 219 1 146 1 167 1 71 1 124 1 
95 1 
27 1 317 1 126 1 221 1 269 1 83 3 227 2 272 3 328 1 228 1 250 1 329 1 136 1 354 1 300 2 276 1 355 1 376 1 43 1 253 2 377 1 337 1 307 2 145 1 70 1 146 1 310 1 22 2 264 1 219 1 51 1 288 1 
26 1 320 1 359 2 366 1 173 1 258 1 201 2 325 1 147 2 59 2 109 1 265 4 156 4 194 1 98 2 
26 1 356 1 359 1 151 1 243 1 156 1 147 1 
26 1 359 1 211 1 366 1 173 1 69 1 258 1 225 1 201 1 147 1 325 1 192 1 106 1 263 1 265 1 13 1 156 2 
289 3 241 2 291 2 245 2 201 6 58 1 9 2 104 2 163 1 293 3 106 5 59 6 354 1 14 2 13 3 355 2 356 1 65 1 303 1 359 8 67 2 173 4 308 1 258 4 311 2 263 5 219 2 265 12 26 9 27 1 221 6 320 2 366 4 180 2 182 2 325 4 326 1 228 2 231 2 234 2 47 2 339 2 146 2 147 2 192 5 151 1 51 1 156 8 194 1 98 6 288 1 
26 8 289 2 320 1 197 1 198 1 366 2 291 2 180 2 201 3 8 1 325 2 104 2 106 1 59 5 13 1 16 1 190 1 359 5 67 2 47 1 173 2 258 2 147 2 192 1 361 1 311 2 263 1 341 1 152 1 178 1 265 6 314 1 156 5 194 1 98 5 
26 2 289 2 32 1 366 1 291 2 83 1 181 1 368 1 227 1 325 1 272 1 328 1 106 1 60 1 300 1 253 1 46 1 359 2 47 1 173 1 114 1 258 1 117 1 22 1 311 1 263 1 218 1 315 1 
356 1 26 1 359 1 366 1 173 1 258 1 325 1 147 1 151 1 156 1 
26 5 289 2 359 5 67 2 47 1 291 2 180 2 245 1 201 5 104 2 311 2 59 5 265 10 156 5 98 5 
192 1 106 1 263 1 156 1 13 1 147 1 
26 2 27 1 221 1 320 2 366 2 325 2 134 1 326 1 106 3 228 4 205 1 63 2 354 1 13 2 355 1 90 1 66 1 359 2 173 1 258 2 146 4 96 1 260 1 192 4 283 1 263 3 219 4 51 2 194 2 
268 1 45 1 172 1 
268 1 45 1 172 1 
268 1 45 1 18 1 17 1 168 1 
268 1 45 1 172 1 
268 1 45 1 75 1 
268 1 45 1 75 1 
268 1 45 1 75 1 
268 1 45 1 
319 1 374 1 
376 2 80 1 317 2 357 3 46 1 307 4 337 2 32 1 291 1 70 2 368 1 133 1 309 2 311 1 107 1 34 1 136 4 229 4 109 1 264 8 
357 2 46 1 243 1 32 1 291 1 368 1 133 1 309 2 311 1 34 1 136 3 229 3 109 1 264 6 
376 1 317 1 80 1 357 2 67 1 307 2 337 1 291 1 180 1 70 1 309 1 104 1 311 1 136 2 313 1 229 2 264 4 
190 1 80 1 128 1 357 2 67 1 198 2 291 1 180 1 309 1 8 1 104 1 311 1 136 4 229 3 264 7 
80 4 317 2 128 1 198 2 32 2 291 3 180 2 368 1 133 1 104 2 350 1 273 1 34 1 107 2 136 12 229 11 109 1 376 2 190 2 357 9 46 2 67 2 307 4 337 2 70 2 309 5 311 3 264 23 286 1 
198 1 136 1 264 1 
190 1 229 1 264 1 
376 1 317 1 80 1 357 2 67 1 337 1 307 2 291 1 180 1 70 1 245 1 309 1 104 1 311 1 136 3 313 1 229 3 264 6 
80 1 317 1 198 1 197 1 291 2 180 2 8 1 104 2 136 6 229 6 61 1 376 1 190 1 357 2 67 2 337 1 307 2 70 1 309 1 311 2 341 1 152 1 178 1 264 12 314 1 
80 1 357 2 46 1 32 1 291 1 368 1 309 1 311 1 136 3 229 3 264 6 
376 1 80 1 317 1 357 2 46 1 32 1 307 2 337 1 70 1 133 1 309 1 34 1 107 1 136 2 229 1 264 3 286 1 
80 1 357 3 46 1 32 1 291 2 368 1 309 2 311 2 136 4 229 4 218 1 264 8 
376 1 317 1 80 1 357 1 307 2 337 1 291 1 180 1 70 1 229 2 61 1 264 2 
376 1 317 1 80 1 357 2 67 1 307 2 337 1 291 1 180 1 70 1 309 1 104 1 311 1 136 2 229 2 61 1 264 4 
252 1 376 3 317 3 80 1 357 2 46 1 307 6 337 3 32 1 70 3 309 1 107 1 136 2 229 1 61 1 264 3 286 1 
317 5 80 5 128 1 198 4 32 3 5 1 291 5 180 3 368 2 133 1 87 1 8 1 104 3 34 1 107 2 136 18 229 16 61 1 109 1 252 1 376 5 190 3 357 12 46 3 67 3 337 5 307 10 70 5 309 7 212 1 311 5 313 1 264 34 286 1 
317 1 198 1 32 1 291 1 368 1 133 1 8 1 34 1 136 4 229 4 61 1 109 1 376 1 190 1 357 2 46 1 337 1 307 2 70 1 309 2 311 1 152 1 264 8 
317 2 80 1 128 1 198 2 32 1 291 2 180 1 368 1 133 1 8 1 104 1 34 1 136 5 229 6 61 1 109 1 376 2 190 1 357 3 46 1 337 2 307 4 70 2 309 2 311 1 152 1 313 1 264 11 
80 1 317 3 197 1 198 1 32 1 291 3 180 2 368 1 133 1 8 1 104 2 34 1 107 1 136 10 229 9 61 1 109 1 376 3 190 1 357 4 46 1 67 2 337 3 307 6 70 3 309 3 311 3 341 1 313 1 152 1 178 1 264 19 314 1 
80 2 317 3 198 1 197 1 32 1 291 3 180 2 368 1 133 1 8 1 104 2 34 1 107 1 136 7 229 10 61 1 109 1 376 3 190 1 357 5 46 1 67 1 337 3 307 6 70 3 309 3 311 2 341 1 313 1 152 1 178 1 264 17 314 1 
317 1 198 1 32 1 291 1 368 1 133 1 8 1 34 1 136 4 229 4 61 1 109 1 376 1 190 1 357 2 46 1 337 1 307 2 70 1 309 2 311 1 152 1 264 8 
80 1 317 1 198 1 197 1 291 2 180 2 8 1 104 2 136 6 229 6 61 1 376 1 190 1 357 2 67 2 337 1 307 2 70 1 309 1 311 2 341 1 152 1 178 1 264 12 314 1 
80 2 317 4 197 1 198 1 32 1 291 3 180 2 368 1 133 1 8 1 104 2 34 1 107 2 136 8 229 10 61 1 109 1 376 4 190 1 357 5 46 1 67 1 337 4 307 8 70 4 309 3 311 2 341 1 152 1 313 1 178 1 264 18 314 1 
80 3 317 4 197 1 198 1 291 3 180 3 8 1 104 3 107 2 136 7 229 9 61 1 252 1 376 4 190 1 357 6 67 2 337 4 307 8 70 4 309 3 311 2 341 1 152 1 178 1 264 16 314 1 
80 3 357 6 46 3 32 3 291 1 368 1 133 1 309 3 311 1 34 2 136 4 229 3 264 7 
80 1 317 4 197 1 198 1 32 1 291 3 180 2 368 1 133 1 8 1 104 2 34 1 107 2 136 8 229 10 61 1 109 1 252 1 376 4 190 1 357 4 46 1 67 1 337 4 307 8 70 4 309 3 311 2 341 1 152 1 178 1 264 18 314 1 
237 1 272 1 250 1 204 1 83 1 279 1 227 1 
237 1 343 1 83 1 174 1 279 1 280 1 191 1 247 1 227 1 272 1 250 1 204 1 
27 1 221 1 228 1 205 1 243 1 354 1 219 1 146 1 51 1 355 1 134 1 
27 1 141 1 377 1 221 1 83 2 146 1 227 1 272 2 22 1 228 1 250 1 329 1 354 1 219 1 51 1 300 1 288 1 355 1 
27 2 221 3 83 1 84 1 7 1 227 1 249 1 272 1 228 1 250 1 329 1 354 1 63 1 138 1 300 1 355 1 141 1 377 1 171 1 114 2 146 1 22 1 219 1 288 2 
27 2 221 3 83 1 84 1 7 1 227 1 249 1 272 1 228 1 250 1 354 1 63 1 138 1 188 1 300 1 355 1 141 1 377 1 171 1 114 2 146 1 22 1 219 1 288 2 
27 1 221 4 241 1 3 1 83 1 84 1 181 1 7 1 227 1 272 1 328 1 293 1 106 2 228 1 354 1 63 1 300 1 355 1 231 1 253 1 114 1 146 1 147 1 192 1 117 1 22 1 263 2 154 1 315 1 219 1 156 1 288 1 
27 1 221 4 241 1 83 1 84 1 181 1 7 1 227 1 272 1 9 1 328 1 293 1 106 2 228 1 354 1 63 1 300 1 355 1 231 1 253 1 114 1 146 1 147 1 192 1 117 1 22 1 263 2 315 1 219 1 156 1 288 1 
0 1 228 1 354 1 219 1 146 1 355 1 
0 1 27 2 221 3 335 1 233 1 143 1 308 1 93 1 146 6 71 1 161 1 58 1 228 7 354 2 187 1 219 7 51 2 25 1 375 1 288 1 355 3 
266 1 27 1 317 2 126 1 221 1 269 2 32 1 159 1 291 1 83 2 368 1 133 1 227 1 272 2 58 1 34 1 228 1 250 2 329 1 136 3 229 3 109 1 354 1 300 1 355 1 276 1 376 2 141 1 377 1 357 2 209 1 46 1 307 4 337 2 70 2 146 1 94 1 309 2 310 2 176 1 22 1 311 1 76 1 264 6 219 1 288 1 125 1 
26 1 221 2 241 1 366 2 182 1 325 2 326 1 9 1 106 3 293 1 228 1 14 1 13 1 356 1 231 1 234 1 359 1 173 2 146 1 258 2 147 1 192 2 381 1 263 3 151 1 219 1 156 1 51 1 
0 1 231 1 27 1 221 2 82 1 303 1 308 1 146 1 228 1 354 1 219 1 288 1 355 2 
27 1 221 1 255 1 146 4 134 1 58 1 228 4 205 1 354 1 155 1 219 4 51 1 355 1 
27 1 221 1 335 1 270 1 93 1 146 2 360 1 228 2 312 1 63 1 354 1 219 2 288 1 355 2 
91 1 81 1 365 1 228 1 354 1 219 1 146 1 51 1 355 1 162 1 
27 1 221 1 233 1 144 1 146 2 71 1 58 1 228 2 354 1 219 2 355 1 
27 2 221 3 233 1 146 4 134 1 58 1 228 5 205 1 63 1 354 2 155 1 219 5 187 1 51 1 375 1 355 2 
27 2 221 3 233 1 146 4 324 1 134 1 58 1 228 5 205 1 63 1 354 2 155 1 219 5 187 1 51 1 355 2 
27 1 141 1 377 1 221 1 83 2 146 1 227 1 272 2 22 1 228 1 250 1 354 1 219 1 51 1 188 1 300 1 288 1 355 1 
27 1 221 1 335 1 308 1 93 1 146 1 161 1 228 1 63 1 354 1 219 1 288 1 355 2 
142 1 83 1 227 1 348 1 97 1 272 1 342 1 316 1 52 1 
351 1 342 1 119 1 
348 1 196 1 250 1 342 1 52 1 
241 1 196 2 171 1 114 1 147 1 348 2 381 1 106 2 263 2 250 1 351 1 342 1 285 1 138 1 186 1 119 1 156 1 52 2 179 1 
318 3 302 1 149 1 358 1 242 3 296 1 236 1 37 1 333 1 102 1 88 1 
101 1 295 1 296 1 259 1 
296 1 102 1 
243 1 296 1 236 1 102 1 
318 1 302 1 242 1 296 1 236 1 37 1 102 1 
54 1 318 1 35 1 
302 1 318 3 271 1 242 3 102 1 88 2 89 1 296 1 37 1 353 1 236 1 333 1 
318 2 302 1 358 1 36 1 242 2 296 1 236 1 37 1 102 1 
91 1 302 1 318 1 81 1 2 1 242 1 259 1 296 1 166 1 37 1 333 1 
318 1 302 1 242 1 296 1 37 1 333 1 102 1 
318 1 302 1 242 1 236 1 37 1 333 1 102 2 
318 2 302 2 222 1 242 2 296 1 37 2 24 1 333 1 123 1 102 1 
302 1 318 3 358 2 242 3 259 1 86 1 102 1 149 1 295 1 296 2 236 1 37 1 333 1 
91 1 81 2 302 1 318 2 2 1 365 1 358 1 242 2 102 1 292 1 296 1 236 1 37 1 333 1 53 1 
302 2 318 4 358 2 242 4 259 1 102 1 295 1 36 1 296 2 236 1 37 2 331 1 333 1 
318 1 302 1 242 1 296 1 236 1 37 1 333 1 102 1 
318 4 302 1 101 1 358 2 242 4 259 1 102 2 88 1 295 1 89 1 296 3 353 1 236 2 37 1 
302 1 318 2 358 1 242 2 244 1 102 1 213 1 370 1 296 1 37 1 236 1 333 1 
302 1 318 3 242 3 367 1 102 1 88 2 89 2 296 1 353 1 37 1 236 1 333 1 
349 1 296 2 130 1 340 2 
202 1 318 1 302 1 242 1 37 1 333 1 
318 2 302 1 149 1 358 1 242 2 296 1 236 1 37 1 333 1 102 1 
378 1 
318 1 302 1 242 1 296 1 236 1 37 1 333 1 102 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 16 195 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11750 | if (x) -> if (!x)
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | STATEMENT | 5839 | stmt -> ;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money; | RETURN | 7423 | return null
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1146 | 1 -> -1
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3823 | + -> >>>
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | STATEMENT | 3220 | stmt -> ;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONSTANT | 10556 | 0 -> 1
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
357 2 119 2 22 2 252 1 148 1 121 1 24 1 184 2 340 1 186 1 203 2 33 2 127 9 59 1 344 1 6 1 283 3 167 1 321 1 289 1 133 6 63 4 40 1 239 1 327 2 330 5 49 9 71 1 
357 2 119 2 22 2 252 1 148 1 121 1 24 1 340 1 184 2 186 1 203 2 33 2 127 9 59 1 344 1 6 1 283 3 167 1 321 1 289 1 133 6 63 4 40 1 239 1 327 2 330 5 49 9 71 1 
357 2 119 2 22 2 252 1 148 1 121 1 24 1 340 1 184 2 186 1 203 2 33 2 127 10 59 1 344 1 6 1 283 4 167 1 321 1 289 1 133 7 63 5 40 1 239 1 327 2 330 6 49 10 71 1 
357 2 119 2 22 2 252 1 148 1 121 1 24 1 340 1 184 1 186 1 203 2 33 2 127 7 59 1 344 1 283 2 167 1 321 1 289 1 133 4 63 3 40 1 239 1 327 2 330 4 49 7 71 1 
357 1 167 1 119 1 22 1 289 1 133 3 63 2 184 2 239 1 327 1 186 1 330 3 33 1 127 4 49 4 71 1 6 1 283 1 
357 1 119 1 289 1 24 1 149 1 40 1 327 1 330 1 186 1 203 1 33 1 127 2 261 1 49 2 71 1 318 1 
119 2 252 1 289 1 133 1 63 1 327 2 186 1 330 2 203 1 127 3 49 3 71 1 283 1 
357 1 119 2 22 1 252 1 148 1 184 2 186 1 203 1 33 1 127 9 59 1 6 1 283 3 85 1 167 1 289 1 133 7 63 4 239 1 294 1 327 2 330 5 49 9 71 1 
357 1 119 2 22 1 252 1 148 1 184 2 186 1 203 1 33 1 127 9 59 1 6 1 283 3 85 1 167 1 289 1 133 7 63 4 239 1 294 1 327 2 330 5 49 9 71 1 
334 1 259 1 269 1 
197 1 259 1 70 2 
105 2 375 2 332 2 280 2 237 1 150 1 53 2 26 2 
158 1 23 1 183 1 339 1 150 1 53 2 226 1 308 1 26 2 28 1 83 1 5 1 280 2 231 1 164 1 284 1 210 1 87 2 105 3 11 1 88 2 12 1 89 1 169 1 39 1 325 1 237 1 351 1 375 3 355 1 142 2 332 2 356 1 177 1 74 2 218 2 75 1 
105 1 375 1 101 1 332 1 280 1 237 1 307 1 53 1 26 1 109 1 
105 1 76 1 324 1 307 1 26 1 293 1 374 1 259 1 375 1 112 1 364 1 269 1 92 1 61 1 
105 1 76 1 324 2 53 1 307 1 26 1 293 1 374 2 259 1 375 1 112 1 269 1 332 1 280 1 92 1 
31 1 362 1 151 1 324 1 374 1 
31 1 146 1 151 1 259 1 297 1 324 2 269 1 374 2 
31 1 324 1 374 1 
105 1 347 1 324 1 237 1 307 1 53 1 26 1 374 1 109 1 151 1 375 1 101 1 332 1 280 1 
259 1 
31 1 146 1 151 1 259 1 324 2 269 1 265 1 374 2 
146 1 358 1 307 1 53 1 26 1 256 1 31 2 80 2 151 2 82 2 259 2 101 1 128 1 365 1 280 1 131 1 9 2 105 1 285 4 62 1 347 1 322 2 236 1 324 5 237 1 136 1 15 2 238 1 109 1 374 5 43 1 110 5 375 1 245 1 332 1 269 2 116 1 117 2 
334 1 150 1 
105 2 288 1 306 1 53 1 150 2 26 2 375 2 332 1 280 1 
86 1 140 1 309 1 
87 1 105 1 158 1 88 1 23 1 169 1 89 1 339 1 150 1 328 1 375 1 83 1 5 1 355 1 284 1 74 1 
105 3 375 3 332 3 280 1 150 1 53 3 282 1 26 3 
105 1 375 1 101 1 332 1 307 1 53 1 26 1 
105 1 288 1 375 1 332 1 280 1 306 1 307 1 53 1 26 1 
158 1 76 1 23 1 183 1 339 1 306 1 150 1 341 1 53 3 307 1 308 1 26 3 28 1 83 1 5 1 280 2 231 1 282 1 164 1 284 1 210 1 319 1 87 1 105 4 88 1 324 1 12 1 89 1 169 1 325 1 237 1 351 1 293 1 374 1 331 1 375 4 112 1 355 1 142 2 332 3 92 1 74 1 218 1 75 1 
105 2 375 2 364 1 332 1 150 1 53 1 282 1 115 1 26 2 
319 1 105 3 76 1 94 1 324 1 306 1 307 1 53 3 341 1 26 3 293 1 374 1 259 1 112 1 375 3 332 3 280 1 92 1 282 2 
105 2 306 1 53 2 26 2 309 1 140 1 375 2 332 2 280 1 282 1 
87 1 105 1 158 1 88 1 23 1 169 1 89 1 339 1 150 1 375 1 83 1 5 1 355 1 284 1 74 1 
87 1 105 1 158 1 88 1 169 1 89 1 339 1 150 1 91 1 314 1 375 1 83 1 355 1 284 1 74 1 
333 1 97 1 183 1 308 2 309 2 81 1 82 1 277 1 231 1 164 1 210 1 233 1 86 2 368 1 39 2 108 1 15 1 351 1 240 1 241 1 140 2 142 2 75 1 218 4 
105 1 375 1 332 1 307 1 92 1 53 1 26 1 342 1 
319 1 87 1 158 1 105 2 88 1 89 1 169 1 23 1 339 1 53 1 26 1 309 1 83 1 375 2 5 1 355 1 332 1 282 1 284 1 74 1 
319 1 157 1 105 5 306 1 53 4 150 1 26 5 172 1 375 5 364 1 332 4 280 1 282 2 115 1 
105 2 375 2 101 1 332 2 307 1 53 2 26 2 342 1 
234 1 363 1 
234 1 363 1 
378 1 248 1 
378 1 248 1 
378 1 248 1 
234 1 363 1 41 1 
234 1 363 1 41 1 
104 1 234 1 363 1 
4 1 234 2 363 2 106 1 378 1 248 1 
234 1 363 1 41 1 
234 1 363 1 99 1 
234 1 363 1 99 1 
234 1 363 1 99 1 
304 1 234 2 346 1 369 1 95 2 348 2 324 2 106 1 212 1 374 2 242 2 353 2 361 3 313 1 45 1 259 1 363 2 281 1 19 2 
95 1 305 1 150 1 53 2 26 2 361 1 163 1 32 1 363 1 104 1 234 1 105 2 10 1 369 1 348 1 324 1 107 1 374 1 353 1 242 1 139 1 375 2 332 2 270 1 
357 1 22 1 33 1 
357 1 33 1 261 1 
357 3 22 2 141 1 261 1 64 1 317 1 
357 2 22 1 223 1 141 1 261 1 64 1 
357 2 22 1 141 1 261 1 64 2 
146 1 181 1 159 1 97 1 359 2 3 1 100 1 123 1 31 1 80 1 32 1 151 4 82 1 259 2 10 1 285 3 37 2 322 1 324 5 108 1 15 1 326 2 374 5 110 2 197 1 244 1 70 3 245 1 18 1 269 1 270 1 117 1 
146 1 118 1 358 1 181 1 97 3 359 6 273 1 201 1 100 2 123 3 31 6 80 2 362 5 151 7 82 3 259 5 230 5 367 1 285 8 132 1 322 2 324 9 108 3 15 3 326 6 374 9 110 6 197 3 70 9 245 1 18 2 269 1 144 1 270 4 117 2 
358 1 159 1 97 1 359 2 100 1 123 1 80 1 151 2 82 1 259 3 285 3 37 1 322 1 324 3 108 1 15 1 326 2 374 3 110 2 197 2 244 1 70 4 18 1 269 1 270 1 117 1 
358 1 159 1 97 2 359 4 273 1 100 1 123 2 80 1 151 3 82 2 259 4 285 5 37 2 132 1 322 1 324 4 108 2 15 2 326 4 374 4 110 4 197 3 244 1 70 7 18 1 269 1 144 1 270 2 117 1 
354 1 334 1 339 1 
16 1 339 1 
103 1 
355 1 339 1 
89 1 339 3 354 2 355 1 155 1 217 1 103 1 
355 1 89 1 339 1 
339 1 200 1 
333 3 180 1 236 1 39 4 15 1 13 1 308 3 240 2 310 1 82 1 189 1 207 2 365 1 143 1 199 1 116 1 218 7 
333 3 180 1 236 1 39 4 15 1 13 1 308 3 240 2 310 1 82 1 189 1 207 2 365 1 143 1 199 1 116 1 218 7 
333 3 180 1 236 1 39 4 15 1 13 1 308 3 240 2 310 1 82 1 189 1 207 2 365 1 143 1 199 1 247 1 116 1 218 7 
147 1 333 10 180 2 97 3 183 1 308 15 123 3 310 5 82 4 260 1 189 1 207 3 365 2 164 1 210 1 236 2 170 1 39 16 108 3 13 2 15 4 351 1 295 3 240 5 173 4 138 1 69 1 299 1 143 1 142 2 113 1 199 1 116 1 218 31 
333 4 180 1 183 2 308 4 310 1 82 1 207 2 365 1 164 2 210 2 236 1 39 5 15 1 351 2 13 1 240 3 138 1 301 1 142 4 143 1 199 1 116 1 156 1 218 9 
357 2 20 1 119 1 158 1 22 1 337 1 78 1 162 1 186 1 203 1 258 1 33 1 127 2 83 1 261 1 317 1 87 1 286 1 88 1 289 1 133 1 349 1 327 1 330 1 153 1 298 1 49 2 71 1 114 1 74 1 
357 2 20 1 119 1 158 1 51 1 22 1 337 1 78 1 162 1 311 1 203 1 258 1 33 1 127 3 83 1 261 1 129 1 317 1 87 1 286 1 88 1 289 1 133 2 349 1 327 1 330 1 153 1 49 3 71 1 74 1 
357 2 20 1 158 1 51 1 22 1 162 1 311 1 203 1 258 1 33 1 127 2 83 1 261 1 317 1 87 1 286 1 88 1 289 1 133 2 349 1 330 1 153 1 49 2 71 1 74 1 
158 1 119 1 336 1 339 1 162 2 203 2 360 1 127 1 83 1 229 1 129 1 284 1 87 1 88 1 349 2 327 1 153 2 174 1 46 1 355 1 49 1 376 1 74 1 
357 2 20 1 87 1 158 1 119 1 286 1 51 1 22 1 337 1 88 1 349 1 78 1 327 1 162 1 186 1 258 1 203 1 153 1 33 1 83 1 127 1 261 1 49 1 317 1 114 1 74 1 
168 1 
146 3 335 2 339 1 274 4 185 2 227 1 229 1 345 2 61 1 284 2 8 1 105 1 285 2 193 1 65 1 293 1 67 1 110 2 17 2 68 1 197 2 70 2 112 1 18 1 245 1 355 1 74 2 117 1 158 1 76 1 307 1 27 2 26 1 31 6 80 1 124 1 259 2 83 1 364 1 316 1 87 2 88 2 322 1 324 5 371 1 135 1 374 5 267 1 214 2 215 1 216 2 375 1 269 1 376 1 92 1 
146 1 8 1 105 1 76 1 193 1 324 3 265 1 307 1 274 2 185 1 293 1 26 1 67 1 374 3 31 2 227 1 112 1 375 1 364 1 316 1 92 1 61 1 
146 1 76 1 335 1 307 1 274 3 26 1 31 1 227 1 259 1 364 1 316 1 61 1 8 1 105 1 193 1 324 3 265 1 293 1 67 1 374 3 375 1 112 1 269 1 92 1 
146 1 76 1 335 1 307 1 274 3 26 1 185 1 227 1 31 2 259 1 364 1 316 1 61 1 8 1 105 1 193 1 324 3 265 1 293 1 67 1 374 3 375 1 112 1 216 1 269 1 92 1 
146 3 76 1 335 4 225 1 307 1 274 6 27 2 26 1 185 4 227 1 31 7 80 1 205 1 259 5 364 1 316 1 345 2 61 1 8 1 105 1 285 1 193 1 322 1 324 5 371 1 265 1 135 1 372 1 293 1 67 1 374 5 110 1 214 2 17 2 197 2 375 1 112 1 216 4 245 1 175 1 269 5 92 1 303 1 117 1 
146 2 335 2 274 4 185 2 227 1 345 2 61 1 8 1 105 1 193 1 285 1 293 1 67 1 110 1 17 2 197 2 112 1 70 2 245 1 117 1 76 1 307 1 26 1 27 2 31 4 80 1 124 1 259 2 364 1 316 1 322 1 324 4 371 1 135 1 374 4 214 2 375 1 216 2 269 1 92 1 
146 2 76 1 335 2 307 1 225 1 274 4 185 2 27 2 26 1 31 4 227 1 80 1 259 1 205 1 364 1 316 1 345 2 61 1 8 1 105 1 285 1 193 1 322 1 324 4 371 1 135 1 293 1 67 1 374 4 110 1 214 2 17 2 197 2 216 2 375 1 112 1 245 1 269 1 175 1 92 1 117 1 
146 2 76 1 335 2 307 1 225 1 274 4 185 2 27 2 26 1 31 4 227 1 80 1 259 1 205 1 364 1 316 1 345 2 61 1 8 1 105 1 285 1 193 1 322 1 324 4 371 1 135 1 293 1 67 1 374 4 110 1 214 2 17 2 197 2 216 2 375 1 112 1 245 1 269 1 175 1 92 1 117 1 
146 2 76 1 335 2 52 1 307 1 274 4 185 2 26 1 31 4 227 1 312 2 80 1 259 1 205 1 364 1 316 1 345 2 61 1 8 1 105 1 263 1 285 1 193 1 287 1 322 1 324 4 135 1 293 1 67 1 374 4 110 1 214 2 198 2 216 2 70 2 375 1 112 1 245 1 269 1 92 1 117 1 
146 2 76 1 335 3 225 1 307 1 274 5 27 2 26 1 185 3 227 1 31 5 80 1 259 1 205 1 364 1 316 1 345 2 61 1 8 1 105 1 285 1 193 1 322 1 324 4 371 1 135 1 293 1 67 1 374 4 110 1 214 2 17 2 197 2 375 1 112 1 216 3 245 1 269 1 175 1 92 1 303 1 117 1 
146 2 76 1 335 3 225 1 307 1 274 5 27 2 26 1 185 3 227 1 31 5 80 1 259 1 205 1 364 1 316 1 345 2 61 1 8 1 105 1 285 1 193 1 322 1 324 4 371 1 135 1 293 1 67 1 374 4 110 1 214 2 17 2 197 2 375 1 112 1 216 3 245 1 269 1 175 1 92 1 303 1 117 1 
146 2 76 1 335 2 52 1 307 1 274 4 185 2 26 1 31 4 227 1 312 2 80 1 124 1 259 1 364 1 316 1 345 2 61 1 8 1 105 1 285 1 193 1 322 1 324 4 135 1 293 1 67 1 374 4 110 1 214 2 198 2 216 2 70 2 375 1 112 1 245 1 269 1 92 1 117 1 
333 2 334 1 183 1 150 2 308 3 309 1 81 1 82 1 207 1 365 1 231 1 164 1 210 1 86 1 236 1 39 3 351 1 15 1 240 2 140 1 143 1 142 2 199 1 116 1 75 1 218 6 
147 1 333 2 249 1 97 1 183 2 150 1 226 1 308 6 255 1 55 1 309 11 310 1 123 2 82 2 231 1 164 2 210 2 86 11 194 1 12 1 39 8 108 2 351 2 15 1 66 1 240 1 295 3 173 3 69 1 140 4 142 4 75 2 218 14 
221 1 183 1 307 1 150 1 53 1 308 1 226 1 26 1 30 1 231 1 282 1 164 1 165 1 210 1 319 1 105 1 194 1 12 1 39 1 351 1 154 1 140 1 375 1 332 1 142 2 75 1 218 2 
219 1 333 8 51 1 96 2 97 2 183 3 339 2 150 2 53 1 226 1 2 1 276 1 5 2 279 2 282 1 231 3 284 1 105 3 236 1 194 1 12 1 108 2 15 3 351 3 14 2 240 4 355 2 72 2 199 1 116 1 74 3 75 3 158 2 23 2 308 10 26 1 309 7 123 2 310 4 82 3 83 2 207 1 365 1 164 3 210 3 86 7 87 3 319 1 88 3 169 2 89 2 325 2 39 10 140 7 375 3 143 1 142 6 332 1 218 20 
158 2 51 1 251 1 339 3 183 2 224 1 53 1 226 1 308 1 26 1 187 1 81 1 83 2 229 1 209 1 282 1 231 2 366 1 164 2 284 2 210 2 87 7 105 1 88 8 291 1 370 1 12 1 39 1 351 2 375 1 298 1 355 2 332 1 142 4 356 2 376 1 74 8 75 2 218 2 
333 1 182 1 97 1 306 1 183 1 53 1 308 2 26 1 309 1 123 1 82 1 280 1 231 1 164 1 210 1 86 1 105 1 194 1 39 1 108 1 351 1 15 1 240 1 140 1 375 1 332 1 142 2 75 1 218 3 
86 1 333 1 39 2 183 1 108 1 351 1 309 1 310 1 241 1 81 1 140 1 82 1 142 2 231 1 164 1 218 2 75 1 210 1 
86 1 368 1 333 1 97 1 183 1 351 1 15 1 308 2 240 1 309 1 81 1 140 1 142 2 231 1 164 1 218 2 75 1 210 1 
86 2 333 2 97 1 39 2 183 1 108 1 15 1 351 1 308 2 240 1 309 2 310 1 123 1 81 1 140 2 82 1 142 2 231 1 164 1 218 4 75 1 210 1 
86 1 333 1 370 1 39 2 183 1 108 1 351 1 309 1 310 1 241 1 140 1 82 1 142 2 231 1 164 1 218 2 75 1 210 1 
86 1 368 1 333 1 370 1 97 1 183 1 351 1 15 1 308 2 240 1 309 1 140 1 142 2 231 1 164 1 218 2 75 1 210 1 
86 2 333 2 370 1 97 1 39 2 183 1 108 1 15 1 351 1 308 2 240 1 309 2 310 1 123 1 140 2 82 1 142 2 231 1 164 1 218 4 75 1 210 1 
86 2 333 2 97 1 39 2 183 1 108 1 15 1 351 1 308 2 240 1 309 2 310 1 123 1 140 2 82 1 142 2 231 1 164 1 75 1 210 1 218 4 
158 1 23 1 339 1 183 1 150 1 226 1 308 1 83 1 5 1 231 1 164 1 284 1 210 1 87 1 105 1 88 1 89 1 169 1 12 1 39 1 325 1 351 1 375 1 355 1 142 2 74 1 218 2 75 1 
158 1 339 1 183 1 150 1 226 1 308 1 314 1 57 1 83 1 231 1 164 1 284 1 210 1 87 1 105 1 88 1 89 1 169 1 12 1 39 1 351 1 91 1 375 1 355 1 142 2 74 1 218 2 75 1 
86 2 333 2 194 1 97 1 39 2 183 1 108 1 15 1 351 1 308 2 240 1 309 2 310 1 123 1 140 2 82 1 142 2 231 1 164 1 218 4 75 1 210 1 
333 2 158 1 23 1 97 1 339 1 183 1 308 2 309 2 310 1 123 1 82 1 83 1 5 1 231 1 164 1 210 1 86 2 87 1 105 1 88 1 89 1 169 1 39 2 325 1 108 1 15 1 351 1 240 1 140 2 375 1 298 1 355 1 142 2 72 1 74 1 218 4 75 1 
333 1 97 1 306 1 183 1 53 1 308 1 26 1 309 1 310 1 123 1 56 1 82 1 280 1 231 1 164 1 210 1 86 1 105 1 194 1 39 2 108 1 15 1 351 1 140 1 375 1 332 1 142 2 75 1 218 3 
145 1 147 1 333 6 120 2 97 3 183 2 308 10 343 1 123 3 310 3 82 3 278 1 34 2 164 2 166 1 210 2 39 9 108 3 351 2 15 3 152 1 213 1 240 3 295 1 173 2 69 1 142 4 377 1 156 1 218 19 
147 2 333 1 120 1 97 2 183 2 308 10 343 2 310 1 123 3 257 1 82 3 278 1 34 3 315 1 7 1 164 2 166 2 210 2 36 1 290 1 39 13 266 1 108 3 15 2 351 2 213 1 295 2 173 2 138 1 142 4 377 1 156 1 218 23 
145 1 147 3 333 4 120 1 97 4 183 2 308 16 343 1 123 4 310 3 257 1 82 4 278 1 34 3 315 1 208 1 7 1 164 2 166 2 210 2 36 1 290 1 266 1 39 15 108 4 351 2 15 4 213 1 240 1 295 3 173 4 69 1 142 4 377 1 156 1 218 31 
145 1 147 3 333 5 120 1 97 3 183 3 308 15 343 1 123 4 310 3 257 1 82 4 278 1 34 4 315 1 208 1 7 1 164 3 166 2 210 3 36 1 290 1 266 1 39 17 108 4 351 3 15 3 213 1 240 2 295 3 173 4 138 1 69 1 142 6 377 1 156 1 218 32 
147 2 333 15 120 1 97 7 183 3 308 26 343 1 123 7 310 7 257 1 82 8 278 1 34 4 207 1 315 1 365 1 7 1 164 3 166 1 210 3 36 1 236 1 290 1 266 1 39 27 108 7 351 3 15 8 66 2 213 1 240 8 295 4 173 4 138 2 69 2 143 1 142 6 199 1 377 1 116 1 156 1 218 53 
353 1 242 1 234 1 313 1 250 1 346 1 348 1 95 1 363 1 106 1 
104 1 139 1 
353 1 242 1 296 1 234 1 348 1 95 1 134 1 363 1 302 1 
304 1 234 1 346 1 369 1 324 1 95 1 348 1 106 1 212 1 374 1 242 1 353 1 361 2 313 1 259 1 363 1 281 1 19 1 
304 1 234 1 346 1 369 1 324 1 95 1 348 1 106 1 212 1 374 1 242 1 353 1 361 2 313 1 259 1 363 1 281 1 19 1 
304 1 234 1 346 1 369 1 324 1 95 1 348 1 106 1 212 1 374 1 242 1 353 1 361 2 313 1 259 1 363 1 281 1 19 1 
4 1 204 1 41 1 
4 1 204 1 41 1 
206 1 99 1 
4 1 206 1 99 1 
305 1 107 1 
95 1 305 1 150 1 53 2 26 2 361 1 163 1 32 1 188 1 151 1 363 1 281 1 104 1 105 2 234 1 10 1 324 1 348 1 107 1 374 1 353 1 242 1 139 1 375 2 332 2 19 1 270 1 
204 1 41 1 
4 1 206 1 99 1 
158 1 339 1 183 1 224 1 226 1 308 1 122 1 26 2 187 1 83 1 231 1 164 1 210 1 87 2 105 2 35 1 88 2 194 1 12 1 350 1 39 1 351 1 243 1 375 2 355 1 142 2 356 2 73 1 74 2 75 1 218 2 
357 2 87 2 158 1 51 1 179 1 286 1 22 1 88 2 77 1 349 1 78 1 258 1 228 1 33 1 83 1 261 1 298 1 317 1 74 2 
357 2 87 1 158 1 51 1 286 1 22 1 88 1 349 1 78 1 111 1 258 1 228 1 33 1 83 1 261 1 317 1 74 1 
87 1 158 1 320 1 88 1 77 1 349 1 339 1 360 1 83 1 229 1 355 1 376 1 284 1 74 1 
357 2 87 1 158 1 51 1 179 1 286 1 22 1 88 1 77 1 349 1 78 1 258 1 228 1 33 1 83 1 261 1 317 1 74 1 
93 1 
110 1 285 1 334 1 259 1 269 1 131 1 43 1 
146 1 27 1 31 1 80 1 259 2 285 1 322 1 324 1 371 1 374 1 110 1 17 1 197 1 70 1 245 1 269 1 117 1 
87 1 158 1 88 1 322 1 89 1 195 1 339 1 171 1 16 1 80 1 83 1 245 1 355 1 155 1 284 1 74 1 117 1 
147 1 359 5 97 2 123 2 80 1 257 1 82 2 259 3 7 1 285 6 36 1 322 1 290 1 266 1 108 2 326 5 15 2 295 1 110 4 173 1 197 3 70 6 245 1 117 1 
307 1 225 1 53 1 26 1 256 1 80 1 82 2 101 1 128 1 365 1 280 1 9 2 105 1 285 2 347 1 322 1 236 1 324 1 237 1 15 1 374 1 109 1 110 2 375 1 245 1 332 1 116 1 117 1 
285 1 322 1 43 1 110 1 80 1 259 1 245 1 269 1 131 1 117 1 
9 2 285 5 359 5 97 2 108 2 14 1 326 5 15 2 123 2 110 5 197 5 82 2 70 10 259 5 128 1 
31 1 146 1 259 1 324 1 269 1 374 1 
146 2 158 1 358 1 0 1 339 1 160 1 202 1 31 4 80 2 83 1 229 1 284 2 87 4 285 2 88 4 322 2 324 3 374 3 267 2 110 2 68 1 215 1 245 1 18 2 355 1 376 1 271 2 74 4 117 2 
158 1 23 1 183 1 339 1 150 1 53 2 308 1 26 2 28 1 83 1 5 1 280 2 231 1 164 1 284 1 210 1 87 1 105 3 88 1 12 1 169 1 89 1 325 1 237 1 351 1 375 3 355 1 142 2 332 2 74 1 218 1 75 1 
285 1 322 1 359 2 326 2 110 2 267 1 80 1 197 2 70 4 259 4 245 1 18 1 207 1 269 2 117 1 
353 1 348 1 102 1 
353 1 348 1 102 1 
353 1 313 1 348 1 107 1 161 1 
353 1 348 1 102 1 
353 1 348 1 60 1 
353 1 348 1 60 1 
353 1 348 1 60 1 
353 1 348 1 
234 1 363 1 
333 3 236 1 39 4 183 2 15 1 351 2 308 4 240 2 310 1 138 1 82 1 207 1 142 4 143 1 365 1 199 1 164 2 116 1 218 8 210 2 
333 2 334 1 236 1 39 3 15 1 308 3 240 2 82 1 207 1 143 1 365 1 199 1 116 1 218 6 
333 2 264 1 97 1 39 2 183 1 108 1 15 1 351 1 308 2 240 1 123 1 310 1 82 1 142 2 164 1 210 1 218 4 
147 1 333 2 97 1 39 3 108 1 15 1 308 4 240 1 295 1 123 1 310 1 173 2 69 1 82 1 218 7 
249 1 333 6 97 2 183 1 308 10 123 2 310 2 82 3 207 1 365 2 164 1 210 1 236 2 39 10 108 2 15 3 351 1 66 1 295 2 240 4 173 2 138 1 69 1 143 1 142 2 199 1 116 1 218 20 
173 1 308 1 218 1 
39 1 295 1 218 1 
333 3 264 1 39 3 97 1 183 1 108 1 351 1 14 1 15 1 308 3 240 2 123 1 310 1 82 1 142 2 164 1 210 1 218 6 
147 1 333 3 97 2 183 2 308 7 310 1 123 2 257 1 82 2 7 1 164 2 210 2 36 1 290 1 266 1 39 6 108 2 351 2 15 2 295 1 240 2 173 1 138 1 142 4 218 13 156 1 
333 2 236 1 39 3 15 1 308 3 240 1 310 1 82 1 365 1 116 1 218 6 
333 2 236 1 39 1 183 1 373 1 351 1 308 2 240 1 310 1 138 1 365 1 143 1 142 2 199 1 164 1 218 3 210 1 
333 5 236 2 39 5 183 1 351 1 15 2 308 5 256 1 240 3 310 2 82 2 142 2 365 2 164 1 116 1 210 1 156 1 218 10 
333 1 39 2 183 1 108 1 351 1 310 1 82 1 142 2 164 1 156 1 210 1 218 2 
333 2 97 1 39 2 183 1 108 1 15 1 351 1 308 2 240 1 123 1 310 1 82 1 142 2 164 1 156 1 210 1 218 4 
145 1 333 2 236 1 39 1 183 3 373 1 351 3 308 2 240 1 310 1 138 1 142 6 365 1 164 3 218 3 156 1 210 3 
145 1 147 1 333 12 97 3 183 5 308 18 123 3 310 5 82 5 260 1 207 1 365 3 164 5 210 5 236 3 264 1 170 1 39 16 108 3 373 1 351 5 15 5 295 3 240 7 173 4 138 2 69 1 143 1 142 10 113 1 199 1 116 2 156 1 218 34 
147 1 333 2 183 1 308 4 82 1 207 1 365 1 164 1 210 1 236 1 266 1 39 4 15 1 351 1 295 1 240 2 173 1 142 2 143 1 199 1 116 1 218 8 156 1 
147 1 333 3 183 2 308 5 123 1 310 1 82 2 207 1 365 1 164 2 210 2 236 1 264 1 266 1 39 6 108 1 15 1 351 2 240 2 295 1 173 2 69 1 143 1 142 4 199 1 116 1 218 11 156 1 
147 1 333 1 97 2 183 2 308 6 123 2 310 1 257 1 82 2 164 2 7 1 210 2 36 1 264 1 290 1 266 1 39 6 108 2 351 2 15 2 295 1 173 1 142 4 218 12 156 1 
147 1 333 3 97 1 183 4 308 5 310 1 123 2 257 1 82 2 7 1 164 4 210 4 36 1 264 1 290 1 266 1 39 7 108 2 351 4 15 1 295 1 240 2 173 1 138 2 142 8 218 12 156 1 
147 1 333 2 183 1 308 4 82 1 207 1 365 1 164 1 210 1 236 1 266 1 39 4 15 1 351 1 295 1 240 2 173 1 142 2 143 1 199 1 116 1 218 8 156 1 
147 1 333 3 97 2 183 2 308 7 310 1 123 2 257 1 82 2 7 1 164 2 210 2 36 1 290 1 266 1 39 6 108 2 351 2 15 2 295 1 240 2 173 1 138 1 142 4 218 13 156 1 
147 1 333 1 97 1 183 3 308 4 123 2 310 1 257 1 82 2 164 3 7 1 210 3 36 1 264 1 290 1 266 1 39 7 108 2 351 3 15 1 295 1 173 1 138 1 142 6 218 11 156 1 
145 1 147 1 333 3 97 1 183 3 308 4 310 2 123 2 257 1 82 2 7 1 164 3 210 3 36 1 290 1 266 1 39 7 108 2 351 3 15 1 295 1 240 1 173 1 138 1 142 6 218 11 156 1 
333 6 236 3 39 3 15 1 308 4 240 3 310 3 82 1 143 2 365 3 199 1 116 1 218 7 
145 1 147 1 333 1 97 1 183 3 308 4 123 2 310 1 257 1 82 2 164 3 7 1 210 3 36 1 290 1 266 1 39 7 108 2 351 3 15 1 295 1 173 1 138 1 142 6 218 11 156 1 
105 1 375 1 364 1 150 1 26 1 115 1 275 1 
105 1 253 1 254 1 150 1 352 1 1 1 275 1 26 1 29 1 375 1 364 1 115 1 
87 1 158 1 334 1 88 1 83 1 229 1 355 1 339 1 376 1 74 1 284 1 
87 1 158 1 105 2 88 1 89 1 169 1 339 1 150 1 53 1 26 1 375 2 83 1 5 1 355 1 332 1 282 1 284 1 74 1 
158 1 339 3 150 1 53 2 307 1 26 2 200 1 83 1 5 1 282 1 87 1 105 2 88 1 169 1 89 2 293 1 375 2 47 1 355 2 332 1 92 1 74 1 271 1 
158 1 339 3 150 1 53 2 307 1 26 2 200 1 314 1 83 1 282 1 87 2 105 2 88 2 169 1 89 2 293 1 44 1 375 2 47 1 355 2 332 1 92 1 74 2 271 1 
87 3 158 1 88 3 324 2 89 1 196 1 339 4 200 1 42 1 374 2 31 1 16 1 354 1 44 1 259 1 112 1 83 1 47 1 355 1 269 1 284 1 271 1 74 3 
87 3 158 1 88 3 324 2 89 1 339 4 98 1 200 1 374 2 31 1 16 1 354 1 44 1 259 1 112 1 83 1 47 1 355 1 269 1 284 1 271 1 74 3 
87 1 158 1 88 1 251 1 83 1 74 1 
87 6 158 3 51 1 251 1 88 7 291 1 292 1 89 1 339 3 90 1 187 1 83 2 298 1 355 2 356 1 209 1 155 1 366 1 176 1 284 2 74 7 
333 2 158 1 23 1 339 1 183 2 150 2 53 1 308 3 122 1 26 1 309 1 82 1 83 1 5 1 207 1 365 1 279 1 231 2 282 1 164 2 210 2 86 1 87 1 105 2 88 1 236 1 194 1 89 1 169 1 39 3 325 1 15 1 351 2 240 2 140 1 375 2 298 1 355 1 143 1 332 1 142 4 72 1 199 1 116 1 74 1 218 6 75 2 
146 1 339 2 98 1 25 1 202 1 31 2 80 2 151 1 259 1 131 1 284 1 87 1 285 1 88 1 38 1 322 2 324 3 43 1 374 3 110 1 16 1 354 1 112 1 245 2 269 1 300 1 74 1 117 2 
87 1 158 1 251 1 88 1 89 1 339 1 171 1 354 1 83 1 355 1 155 1 74 1 103 1 
87 4 158 1 88 4 323 1 339 1 44 1 83 1 298 1 229 1 355 1 376 1 284 1 74 4 
219 1 87 2 220 1 158 2 88 2 292 1 89 1 339 1 54 1 83 1 355 1 176 1 271 1 74 2 
357 1 87 1 158 1 258 1 33 1 88 1 83 1 261 1 74 1 284 1 
87 2 158 1 51 1 88 2 339 1 243 1 187 1 83 1 298 1 355 1 74 2 
87 4 158 2 88 5 323 1 291 1 339 3 187 1 83 2 229 1 298 1 355 2 376 1 366 1 271 1 284 1 74 5 
87 4 158 2 88 5 323 1 291 1 339 3 187 1 83 2 229 1 298 1 355 2 246 1 376 1 271 1 284 1 74 5 
87 1 158 1 105 2 88 1 89 1 169 1 339 1 150 1 53 1 26 1 314 1 375 2 83 1 355 1 332 1 282 1 284 1 74 1 
87 1 158 2 88 1 292 1 89 1 339 1 90 1 83 1 355 1 155 1 176 1 271 1 74 1 
105 1 35 1 125 1 375 1 350 1 130 1 26 1 73 1 178 1 
222 1 272 1 130 1 
137 1 125 1 150 1 130 1 178 1 
192 1 76 1 222 1 324 2 272 1 150 1 307 1 341 1 293 1 374 2 137 2 125 2 151 1 259 1 112 1 269 1 92 1 130 1 178 2 
330 1 334 1 289 1 71 1 
330 1 119 1 289 1 127 1 49 1 71 1 327 1 
203 1 153 1 49 1 
119 1 289 1 24 1 327 1 330 1 186 1 127 2 126 1 50 1 49 2 84 1 71 1 232 1 
330 1 119 1 289 1 133 1 127 2 49 2 71 1 184 1 327 1 
357 1 330 1 167 1 186 1 119 1 22 1 33 1 127 1 63 1 49 1 327 1 
330 1 186 1 119 1 289 1 127 1 49 1 327 1 
186 1 119 1 289 2 127 1 49 1 71 1 327 1 
119 2 289 1 79 1 327 2 330 1 186 1 268 1 127 2 49 2 262 1 
119 1 148 1 289 1 133 2 63 1 327 1 186 1 330 2 127 3 59 1 49 3 71 1 283 1 
357 2 119 1 21 1 22 1 289 1 133 1 327 1 330 1 186 1 33 1 127 2 261 1 49 2 71 1 317 1 
119 2 289 1 133 2 63 1 184 1 327 2 186 1 330 2 127 4 49 4 71 1 6 1 283 1 
330 1 186 1 119 1 289 1 127 1 49 1 71 1 327 1 
119 1 289 2 133 2 63 1 24 1 327 1 330 3 126 1 127 4 49 4 84 1 71 2 283 1 232 1 
119 1 235 1 289 1 133 1 338 1 327 1 330 1 186 1 127 2 49 2 71 1 85 1 
119 1 289 1 24 2 327 1 330 1 186 1 126 1 127 3 58 1 49 3 84 2 71 1 
330 2 190 1 191 1 211 2 
186 1 119 1 127 1 48 1 49 1 327 1 
330 1 186 1 119 1 289 1 133 1 59 1 127 2 49 2 71 1 327 1 
329 1 
330 1 186 1 119 1 289 1 127 1 49 1 71 1 327 1 
119 1 133 1 289 1 24 1 327 1 186 1 330 1 127 3 59 1 49 3 71 1 
330 1 63 1 283 1 232 1 
330 1 289 1 

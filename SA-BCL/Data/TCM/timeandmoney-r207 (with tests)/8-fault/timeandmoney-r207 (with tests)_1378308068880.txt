#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 264 (24,282) (24,282) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 264 (24,282) (24,282) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 264 (24,282) (24,282) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 264 (24,282) (24,282) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 89 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2250 | = null
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5772 | 0 -> -1
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3451 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> >>>
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2973 | 1 -> 0
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9614 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
200 2 344 1 4 1 24 1 233 1 6 1 99 1 264 1 76 1 315 1 215 1 282 1 101 1 257 1 241 2 333 1 
200 2 344 1 24 1 4 1 233 1 6 1 99 1 264 1 76 1 315 1 215 1 282 1 101 1 257 1 241 2 333 1 
200 2 344 1 24 1 4 1 233 1 6 1 99 1 264 1 76 1 315 1 215 1 282 1 101 1 257 1 241 2 333 1 
200 2 344 1 24 1 4 1 233 1 6 1 99 1 264 1 76 1 315 1 215 1 282 1 101 1 257 1 241 2 333 1 
200 4 83 1 70 3 246 1 107 2 4 1 233 1 99 1 264 1 306 1 101 1 174 2 257 1 241 4 9 3 178 1 361 1 333 1 
200 2 243 1 83 1 286 1 233 1 6 1 99 1 76 1 315 1 101 1 257 1 350 1 241 2 9 1 178 1 333 1 
200 3 83 1 346 1 70 1 233 1 76 1 101 2 174 1 241 3 9 2 178 1 333 2 361 1 
83 1 107 2 4 1 260 1 233 1 264 1 145 1 174 4 241 9 9 5 318 1 178 1 361 3 200 9 363 1 346 1 70 7 246 1 99 1 76 1 306 1 101 2 257 1 333 2 
83 1 107 2 4 1 260 1 233 1 264 1 145 1 174 4 241 9 9 5 318 1 178 1 361 3 200 9 363 1 346 1 70 7 246 1 99 1 76 1 306 1 101 2 257 1 333 2 
84 1 239 1 341 1 
71 1 268 2 239 1 
151 2 161 2 65 2 232 2 197 1 356 1 144 2 118 2 
166 1 104 2 230 1 232 2 308 2 356 1 357 1 144 3 310 1 337 1 64 1 115 1 65 3 28 1 148 1 197 1 147 2 175 2 47 1 317 1 240 1 242 1 118 2 319 1 151 2 152 2 275 1 296 1 125 1 158 1 18 1 369 1 161 2 256 1 79 1 81 1 210 1 
151 1 339 1 161 1 65 1 232 1 356 1 171 1 144 1 207 1 118 1 
187 1 151 1 15 1 181 1 144 1 207 1 279 1 65 1 225 1 359 1 146 1 239 1 341 1 38 1 
187 1 151 1 232 1 15 2 144 1 207 1 161 1 65 1 225 1 359 2 146 1 239 1 341 1 38 1 118 1 
30 1 1 1 50 1 359 1 15 1 
1 1 204 1 50 1 359 2 15 2 239 1 341 1 367 1 
1 1 359 1 15 1 
151 1 50 1 232 1 15 1 356 1 171 1 144 1 207 1 339 1 161 1 359 1 65 1 374 1 118 1 
239 1 
129 1 1 1 50 1 359 2 15 2 239 1 341 1 367 1 
1 2 138 1 2 1 32 2 88 1 50 2 106 1 157 1 15 5 261 1 367 1 193 1 267 2 359 5 173 2 208 1 184 1 239 1 341 1 
84 1 197 1 
216 1 151 2 219 1 232 1 144 2 207 1 313 1 161 1 65 2 197 1 118 1 
8 1 75 1 191 1 
319 1 152 1 104 1 296 1 125 1 368 1 144 1 369 1 310 1 64 1 65 1 115 1 197 1 147 1 47 1 242 1 
311 1 151 3 161 3 65 3 232 3 197 1 144 3 118 1 
151 1 339 1 161 1 65 1 232 1 144 1 207 1 
151 1 219 1 232 1 144 1 207 1 313 1 161 1 65 1 118 1 
187 1 230 1 232 3 144 4 337 1 147 1 146 1 197 1 47 1 240 1 242 1 151 3 152 1 296 1 15 1 18 1 207 2 161 3 256 1 210 1 104 1 308 1 356 1 357 1 310 1 311 1 64 1 28 1 359 1 65 4 115 1 175 2 69 1 118 2 319 1 216 1 274 1 219 1 275 1 125 1 369 1 133 1 225 1 38 1 81 1 
216 1 151 2 232 1 144 2 181 1 207 1 311 1 161 1 65 2 197 1 177 1 
187 1 202 1 151 3 219 1 232 3 15 1 144 3 207 1 311 2 161 3 133 1 359 1 65 3 225 1 146 1 239 1 69 1 38 1 118 1 
311 1 151 2 161 2 219 1 65 2 232 2 8 1 191 1 144 2 118 1 
319 1 152 1 104 1 296 1 125 1 144 1 369 1 310 1 64 1 65 1 115 1 197 1 147 1 47 1 242 1 
319 1 152 1 104 1 125 1 144 1 369 1 310 1 132 1 26 1 65 1 115 1 197 1 147 1 47 1 242 1 
140 1 230 1 211 1 189 1 308 4 191 2 44 1 61 1 337 1 213 1 8 2 175 2 240 1 317 2 121 1 275 1 124 1 75 2 18 2 348 1 256 1 81 1 
151 1 232 1 144 1 207 1 161 1 65 1 38 1 226 1 
319 1 151 1 152 1 104 1 296 1 232 1 125 1 191 1 144 2 310 1 369 1 311 1 161 1 64 1 115 1 65 2 147 1 47 1 69 1 242 1 
151 5 219 1 232 4 181 1 144 5 311 2 290 1 161 4 65 5 329 1 197 1 69 1 177 1 118 1 
151 1 339 1 161 1 65 1 232 1 144 1 207 1 
27 1 162 1 
27 1 162 1 
266 1 194 1 
266 1 194 1 
266 1 194 1 
27 1 321 1 162 1 
27 1 155 1 162 1 
266 1 194 1 139 1 27 2 94 1 162 2 
27 1 321 1 162 1 
27 1 321 1 162 1 
27 1 276 1 162 1 
27 1 276 1 162 1 
27 1 276 1 162 1 
258 1 15 2 126 2 159 1 303 1 35 2 113 2 27 2 183 3 134 2 359 2 255 2 94 1 292 1 162 2 239 1 135 1 285 1 332 1 
87 1 23 1 232 2 263 1 309 1 144 2 214 1 113 1 27 1 359 1 65 2 67 1 197 1 151 2 49 1 155 1 15 1 35 1 161 2 183 1 134 1 255 1 162 1 135 1 
4 1 257 1 99 1 
257 1 350 1 99 1 
343 1 4 2 7 1 350 1 80 1 99 3 
343 1 4 1 127 1 350 1 80 1 99 2 
343 2 4 1 350 1 80 1 99 2 
1 1 232 1 189 1 144 1 339 1 239 2 341 1 151 1 49 1 203 1 244 2 50 4 14 1 157 1 15 5 207 1 253 2 254 1 161 1 208 2 163 1 211 1 356 1 61 1 171 1 267 1 268 3 359 5 173 1 65 1 273 1 117 1 118 1 121 1 32 1 71 1 220 1 367 1 184 3 136 2 374 1 
1 3 232 1 189 1 289 2 144 1 339 1 239 2 341 1 151 1 49 1 96 1 50 4 156 1 14 1 157 1 15 5 207 1 253 2 254 1 161 1 208 2 163 1 211 1 356 1 61 1 171 1 267 1 268 3 359 5 65 1 173 1 273 1 117 1 118 1 30 2 121 1 32 1 71 1 367 1 184 3 136 2 374 1 
232 1 106 1 211 1 189 1 356 1 61 1 171 1 144 1 267 1 339 1 268 3 65 1 173 1 359 3 341 1 239 2 273 1 117 1 118 1 151 1 49 1 203 1 121 1 32 1 71 1 244 1 50 2 220 1 15 3 207 1 253 2 161 1 208 2 184 3 163 1 136 2 374 1 
106 1 211 1 189 1 89 1 61 1 267 1 268 4 173 1 359 2 239 2 273 1 117 1 49 1 203 1 121 1 32 1 71 2 244 1 220 1 50 1 15 2 253 2 208 2 184 3 163 1 136 2 
319 1 84 1 195 1 
319 1 223 1 
229 1 
319 1 115 1 
319 3 195 2 115 1 125 1 33 1 198 1 
319 1 115 1 125 1 
319 1 149 1 
3 1 41 1 12 1 189 1 300 1 322 1 308 6 61 1 18 3 336 1 111 1 338 1 349 1 314 1 330 1 317 3 20 2 
3 1 41 1 12 1 189 1 300 1 322 1 308 6 61 1 18 3 336 1 111 1 338 1 349 1 314 1 330 1 317 3 20 2 
3 1 41 1 12 1 189 1 300 1 322 1 308 6 61 1 18 3 336 1 111 1 338 1 349 1 314 1 330 1 342 1 317 3 20 2 
59 1 3 1 211 3 189 3 308 23 288 1 61 3 336 1 111 2 358 1 63 2 337 2 93 1 314 1 175 4 240 2 317 11 117 3 121 3 298 3 12 1 300 1 224 1 18 12 280 1 349 4 53 4 55 1 330 1 256 2 20 5 81 2 
3 1 41 1 189 1 308 8 61 1 336 1 111 1 63 1 337 2 338 1 314 1 175 4 240 2 317 4 176 1 12 1 300 2 322 1 277 1 18 4 349 1 256 2 20 3 81 2 
83 1 137 1 104 1 355 1 4 1 233 1 7 1 147 1 47 1 316 1 241 2 9 1 178 1 119 1 200 2 345 1 217 1 152 1 70 1 97 1 248 1 99 2 76 1 369 1 77 1 101 1 257 1 350 1 37 1 333 1 
83 1 168 1 137 1 104 1 355 1 4 1 340 1 7 1 147 1 47 1 316 1 241 3 9 1 178 1 119 1 200 3 345 1 217 1 152 1 70 2 205 1 97 1 99 2 76 1 369 1 77 1 101 1 257 1 350 1 333 1 
83 1 168 1 104 1 355 1 4 1 340 1 7 1 147 1 47 1 316 1 241 2 9 1 178 1 119 1 200 2 217 1 152 1 70 2 97 1 99 2 76 1 369 1 77 1 257 1 350 1 
104 1 60 1 355 2 46 1 115 1 196 1 147 1 47 1 316 2 241 1 242 1 200 1 319 1 217 2 152 1 299 1 205 1 369 1 76 2 101 1 351 1 164 1 333 1 
168 1 137 1 104 1 355 1 4 1 233 1 7 1 147 1 47 1 316 1 241 1 119 1 200 1 345 1 217 1 152 1 97 1 248 1 99 2 76 1 369 1 77 1 101 1 257 1 350 1 333 1 
142 1 
187 1 334 1 1 6 188 2 190 2 90 1 144 1 92 2 235 1 45 1 46 1 147 2 146 1 341 1 239 2 293 2 47 1 242 2 151 1 152 2 297 2 157 1 15 5 347 2 207 1 304 4 54 1 208 2 163 1 351 1 167 1 103 1 104 2 354 1 259 2 267 1 268 2 115 1 359 5 173 1 66 1 65 1 319 1 32 1 71 2 122 1 74 1 367 3 181 1 326 1 369 1 279 1 225 1 184 2 38 1 
187 1 1 2 354 1 144 1 45 1 65 1 66 1 359 3 146 1 151 1 122 1 297 1 15 3 74 1 367 1 181 1 207 1 279 1 129 1 304 2 225 1 38 1 
187 1 1 1 354 1 144 1 45 1 65 1 66 1 359 3 146 1 293 1 341 1 239 1 151 1 122 1 15 3 74 1 367 1 181 1 207 1 279 1 129 1 304 3 225 1 38 1 
187 1 1 2 354 1 144 1 92 1 45 1 65 1 66 1 359 3 146 1 293 1 341 1 239 1 151 1 122 1 297 1 15 3 74 1 367 1 181 1 207 1 129 1 279 1 304 3 225 1 38 1 
187 1 334 1 1 7 188 2 190 2 90 1 144 1 92 4 45 1 146 1 293 4 341 5 239 5 151 1 297 4 13 1 157 1 15 5 347 2 207 1 304 6 208 1 57 1 354 1 259 2 108 1 267 1 65 1 359 5 66 1 173 1 32 1 122 1 364 1 71 2 222 1 74 1 367 3 181 1 129 1 279 1 225 1 184 1 38 1 
334 1 187 1 1 4 188 2 190 2 90 1 144 1 92 2 235 1 45 1 146 1 293 2 239 2 341 1 151 1 297 2 157 1 15 4 347 2 207 1 304 4 208 1 354 1 259 2 267 1 268 2 65 1 359 4 173 1 66 1 32 1 122 1 71 2 74 1 367 2 181 1 279 1 225 1 184 1 38 1 
334 1 187 1 1 4 188 2 354 1 259 2 190 2 90 1 144 1 92 2 45 1 267 1 173 1 65 1 66 1 359 4 146 1 239 1 341 1 293 2 151 1 32 1 71 2 122 1 364 1 297 2 222 1 157 1 15 4 74 1 367 2 347 2 181 1 207 1 279 1 304 4 225 1 208 1 184 1 57 1 38 1 
334 1 187 1 1 4 188 2 354 1 259 2 190 2 90 1 144 1 92 2 45 1 267 1 173 1 65 1 66 1 359 4 146 1 239 1 341 1 293 2 151 1 32 1 71 2 122 1 364 1 297 2 222 1 157 1 15 4 74 1 367 2 347 2 181 1 207 1 279 1 304 4 225 1 208 1 184 1 57 1 38 1 
187 1 1 4 188 2 22 1 354 1 141 2 231 1 259 2 90 1 144 1 92 2 45 1 112 1 267 1 268 2 173 1 65 1 66 1 359 4 146 1 239 1 341 1 293 2 151 1 32 1 122 1 297 2 51 2 222 1 157 1 15 4 74 1 367 2 181 1 207 1 279 1 304 4 225 1 208 1 184 1 38 1 
334 1 187 1 1 5 188 2 354 1 259 2 190 2 108 1 90 1 144 1 92 3 267 1 45 1 173 1 65 1 66 1 359 4 146 1 239 1 341 1 293 3 151 1 32 1 71 2 122 1 364 1 297 3 222 1 157 1 15 4 74 1 367 2 347 2 181 1 207 1 279 1 304 5 225 1 208 1 184 1 57 1 38 1 
334 1 187 1 1 5 188 2 354 1 259 2 190 2 108 1 90 1 144 1 92 3 267 1 45 1 173 1 65 1 66 1 359 4 146 1 239 1 341 1 293 3 151 1 32 1 71 2 122 1 364 1 297 3 222 1 157 1 15 4 74 1 367 2 347 2 181 1 207 1 279 1 304 5 225 1 208 1 184 1 57 1 38 1 
187 1 1 4 188 2 141 2 90 1 144 1 92 2 235 1 45 1 146 1 293 2 341 1 239 1 151 1 297 2 157 1 51 2 15 4 207 1 304 4 208 1 22 1 354 1 259 2 267 1 268 2 65 1 359 4 173 1 66 1 32 1 122 1 74 1 367 2 181 1 279 1 225 1 184 1 38 1 
84 1 41 1 275 1 230 1 12 1 189 1 300 1 322 1 308 5 61 1 18 3 213 1 337 1 338 1 314 1 197 2 256 1 175 2 317 2 240 1 20 1 81 1 
85 1 230 2 211 3 189 3 308 19 191 14 61 2 62 1 337 2 291 1 8 5 148 1 197 1 175 4 240 2 317 10 117 3 121 2 275 1 298 3 75 14 301 1 224 2 18 9 280 1 130 1 349 1 53 4 256 2 20 1 81 2 210 1 
228 1 104 1 230 1 232 1 308 2 144 2 310 1 311 1 337 1 237 1 64 1 115 1 65 2 8 1 197 1 147 1 148 1 47 1 175 2 240 1 317 1 69 1 242 1 319 1 151 1 152 1 275 1 296 1 125 1 368 1 18 1 369 1 130 1 100 1 161 1 256 1 81 1 210 1 
230 2 232 1 189 1 191 3 144 2 337 2 8 3 147 1 47 1 240 2 242 1 151 1 152 1 296 1 300 1 18 4 161 1 256 2 19 1 20 1 210 1 165 1 104 1 211 1 308 7 357 1 61 1 310 1 311 1 64 1 65 2 115 1 175 4 317 3 69 1 117 1 319 1 31 1 121 1 275 2 125 1 75 3 278 1 369 1 130 1 373 1 81 2 
166 2 168 1 104 7 230 2 232 1 308 2 212 1 144 1 311 1 213 1 337 2 236 1 65 1 46 1 115 3 147 7 148 1 47 3 175 4 240 2 317 1 150 1 242 2 319 4 151 1 95 1 153 1 152 6 218 1 275 2 125 1 324 1 247 1 18 1 369 4 78 1 161 1 209 1 256 2 37 1 351 1 81 2 210 1 
230 1 232 1 211 1 189 1 308 3 191 1 61 1 144 1 337 1 360 1 65 1 8 1 175 2 240 1 317 1 117 1 118 1 151 1 121 1 219 1 275 1 75 1 18 2 130 1 161 1 256 1 81 1 
275 1 230 1 211 1 189 1 75 1 308 2 191 1 44 1 213 1 337 1 349 1 8 1 256 1 175 2 240 1 317 2 20 1 81 1 
121 1 275 1 230 1 124 1 75 1 308 2 191 1 61 1 18 2 213 1 337 1 8 1 256 1 175 2 240 1 81 1 
230 1 189 1 211 1 308 4 191 2 61 1 337 1 213 1 8 2 175 2 317 2 240 1 117 1 121 1 275 1 75 2 18 2 256 1 81 1 
275 1 230 1 211 1 189 1 75 1 308 2 191 1 44 1 337 1 349 1 8 1 209 1 256 1 175 2 240 1 317 2 20 1 81 1 
121 1 275 1 230 1 124 1 75 1 308 2 191 1 61 1 18 2 337 1 8 1 209 1 256 1 175 2 240 1 81 1 
121 1 275 1 230 1 211 1 189 1 75 2 308 4 191 2 61 1 18 2 337 1 349 1 8 2 209 1 256 1 175 2 240 1 317 2 20 1 81 1 117 1 
121 1 275 1 230 1 211 1 189 1 75 2 308 4 191 2 61 1 18 2 337 1 8 2 256 1 175 2 240 1 317 2 81 1 117 1 
104 1 230 1 308 2 357 1 144 1 310 1 337 1 64 1 115 1 65 1 148 1 197 1 147 1 47 1 175 2 317 1 240 1 242 1 319 1 152 1 275 1 296 1 125 1 18 1 369 1 256 1 81 1 210 1 
104 1 230 1 308 2 143 1 144 1 310 1 337 1 26 1 115 1 65 1 148 1 197 1 147 1 47 1 175 2 317 1 240 1 242 1 319 1 152 1 275 1 125 1 18 1 369 1 132 1 256 1 81 1 210 1 
230 1 189 1 211 1 308 4 191 2 61 1 337 1 8 2 175 2 317 2 240 1 117 1 121 1 275 1 75 2 18 2 130 1 256 1 81 1 
104 1 230 1 189 1 211 1 308 4 191 2 61 1 357 1 144 1 310 1 337 1 64 1 115 1 65 1 8 2 147 1 47 1 175 2 317 2 240 1 117 1 319 1 152 1 121 1 275 1 296 1 125 1 75 2 18 2 369 1 256 1 373 1 37 1 81 1 
230 1 232 1 211 1 189 1 308 3 191 1 61 1 144 1 337 1 65 1 8 1 175 2 240 1 317 2 117 1 118 1 151 1 121 1 219 1 275 1 72 1 75 1 18 1 130 1 349 1 161 1 256 1 20 1 81 1 
105 1 353 1 211 5 189 5 43 1 308 40 110 1 61 5 63 2 337 4 272 1 238 1 175 8 240 4 317 19 116 1 176 1 117 5 201 1 121 5 320 2 298 3 300 1 73 4 366 1 325 1 224 2 18 21 280 3 349 4 53 5 328 1 371 1 256 4 20 5 186 1 81 4 
105 1 353 1 211 4 189 4 43 1 308 33 110 1 61 4 63 2 337 4 238 1 175 8 240 4 317 16 116 1 176 1 117 4 201 1 121 4 320 1 298 2 300 1 73 4 366 1 325 1 224 1 18 17 280 2 349 3 53 3 328 1 371 1 256 4 20 4 186 1 81 4 
105 1 353 1 41 1 211 4 189 5 43 1 308 37 61 5 110 1 63 1 337 2 338 1 314 1 238 1 175 4 240 2 317 17 116 1 176 1 117 4 201 1 121 4 320 1 298 2 12 1 322 1 300 2 73 4 366 1 224 1 18 20 280 2 349 1 53 3 328 1 371 1 256 2 20 3 186 1 81 2 
105 1 353 1 211 4 189 4 308 31 110 1 61 4 63 2 337 4 238 1 175 8 240 4 317 15 116 1 176 1 117 4 201 1 121 4 320 1 298 2 300 1 73 3 366 1 325 1 224 1 18 16 128 1 280 2 349 3 53 3 328 1 371 1 256 4 20 4 186 1 81 4 
353 1 211 2 189 2 308 15 43 1 61 2 337 1 238 2 175 2 240 1 317 7 176 1 117 2 121 2 320 2 298 1 73 2 366 1 224 1 18 8 280 1 53 2 371 1 256 1 81 1 
159 1 35 1 113 1 27 1 134 1 255 1 94 1 292 1 162 1 227 1 
155 1 309 1 
35 1 113 1 27 1 134 1 180 1 255 1 323 1 162 1 170 1 
258 1 15 1 126 1 159 1 303 1 35 1 113 1 27 1 183 2 134 1 359 1 255 1 94 1 292 1 162 1 239 1 135 1 332 1 
258 1 15 1 126 1 159 1 303 1 35 1 113 1 27 1 183 2 134 1 359 1 255 1 94 1 292 1 162 1 239 1 135 1 332 1 
258 1 15 1 126 1 159 1 303 1 35 1 113 1 27 1 183 2 134 1 359 1 255 1 94 1 292 1 162 1 239 1 135 1 332 1 
139 1 11 1 321 1 
139 1 11 1 321 1 
276 1 21 1 
139 1 276 1 21 1 
67 1 263 1 
87 1 23 1 232 2 263 1 309 1 144 2 214 1 113 1 27 1 65 2 359 1 67 1 197 1 151 2 49 1 50 1 155 1 126 1 15 1 98 1 35 1 183 1 161 2 134 1 255 1 162 1 332 1 
11 1 321 1 
139 1 276 1 21 1 
166 2 104 2 230 1 308 2 144 2 337 1 234 1 115 1 65 2 147 2 148 1 47 1 175 2 240 1 317 1 319 1 151 2 295 1 218 1 152 2 275 1 324 1 302 1 18 1 369 1 130 1 256 1 372 1 81 1 39 1 210 1 
345 1 168 1 152 2 104 2 4 1 97 1 262 1 99 2 369 1 77 1 269 1 7 1 147 2 257 1 47 1 350 1 316 1 68 1 37 1 
345 1 168 1 152 1 104 1 4 1 97 1 99 2 369 1 77 1 281 1 7 1 147 1 257 1 47 1 350 1 316 1 68 1 
319 1 152 1 104 1 262 1 369 1 252 1 115 1 46 1 147 1 47 1 316 1 351 1 242 1 164 1 
345 1 168 1 152 1 104 1 4 1 97 1 262 1 99 2 369 1 77 1 269 1 7 1 147 1 257 1 47 1 350 1 316 1 68 1 
114 1 
84 1 193 1 138 1 208 1 184 1 239 1 341 1 
334 1 1 1 32 1 71 1 157 1 190 1 15 1 367 1 347 1 267 1 268 1 359 1 173 1 208 1 184 1 341 1 239 2 
187 1 1 2 189 1 195 1 147 1 47 1 239 3 242 1 152 1 157 2 15 2 251 1 305 1 253 3 208 3 163 1 307 1 165 1 104 1 211 1 169 1 109 1 61 1 267 2 268 6 115 1 173 2 359 2 117 1 319 4 32 2 121 1 71 3 365 1 125 1 223 2 367 1 33 1 369 2 327 1 131 1 184 4 136 3 
232 1 189 1 144 1 339 1 239 4 341 1 151 1 298 1 157 1 249 1 207 1 253 4 254 1 53 2 161 1 208 3 163 1 307 1 211 1 356 1 61 1 110 1 171 1 267 1 268 6 173 1 65 1 117 1 118 1 121 1 32 1 71 3 224 1 326 1 280 1 184 5 136 4 374 1 
41 1 232 1 189 2 356 1 61 1 171 1 144 1 314 1 267 1 339 1 65 1 173 1 359 1 118 1 151 1 32 1 12 1 157 1 15 1 207 1 254 1 161 1 208 2 184 2 57 1 307 2 284 1 374 1 
138 1 32 1 157 1 193 1 267 1 173 1 208 1 184 1 341 1 239 1 
121 1 71 2 211 1 189 1 61 1 253 2 268 4 208 2 184 2 239 2 117 1 136 2 
1 1 359 1 15 1 239 1 341 1 367 1 
167 1 1 4 104 4 106 1 267 2 115 1 173 2 359 3 46 1 29 1 147 4 47 1 242 2 319 1 152 4 32 2 157 1 15 3 367 2 369 1 326 2 54 1 208 2 185 1 184 2 283 1 163 2 58 2 351 1 
104 1 230 1 232 2 308 1 356 1 357 1 144 3 310 1 337 1 64 1 65 3 28 1 115 1 197 1 147 1 175 2 47 1 240 1 242 1 118 2 319 1 151 2 152 1 275 1 296 1 125 1 18 1 369 1 161 2 256 1 81 1 210 1 
32 1 71 2 157 1 336 1 326 1 253 2 267 1 268 4 173 1 208 2 184 1 163 1 341 2 239 4 136 2 
134 1 255 1 10 1 
265 1 159 1 134 1 255 1 263 1 
134 1 255 1 10 1 
134 1 255 1 10 1 
134 1 36 1 255 1 
134 1 36 1 255 1 
134 1 36 1 255 1 
134 1 255 1 
27 1 162 1 
105 1 211 2 189 2 308 12 110 1 61 1 63 2 337 3 175 6 240 3 317 7 116 1 176 1 117 2 121 1 298 1 300 1 18 5 280 1 349 1 53 1 328 1 256 3 20 2 81 3 186 1 
41 1 211 1 189 2 308 10 61 1 110 1 337 2 338 1 314 1 175 4 240 2 317 5 176 1 117 1 298 1 12 1 300 1 322 1 224 1 18 5 280 1 349 1 53 2 256 2 20 2 81 2 352 1 
41 1 211 1 189 2 308 12 110 1 61 2 337 2 338 1 314 1 175 4 240 2 317 5 176 1 117 1 121 1 298 1 12 1 300 1 322 1 224 1 18 7 280 1 53 2 256 2 20 1 81 2 352 1 
41 2 211 1 189 4 308 20 110 1 61 4 337 2 338 1 314 2 175 4 240 2 317 9 176 1 117 1 121 1 298 1 12 2 300 3 322 1 224 1 18 11 280 1 349 3 53 2 256 2 284 1 20 6 81 2 352 1 
105 1 211 2 189 2 308 12 110 1 61 1 63 2 337 3 175 6 240 3 317 7 116 1 176 1 117 2 121 1 298 1 300 1 18 5 280 1 349 1 53 1 328 1 256 3 20 2 81 3 186 1 
211 1 189 1 308 7 110 1 61 1 337 1 175 2 240 1 317 3 176 1 117 1 121 1 298 1 224 1 18 4 280 1 53 2 256 1 81 1 
211 1 189 1 308 7 110 1 61 1 337 2 175 4 240 2 317 3 176 1 117 1 121 1 298 1 224 1 18 4 280 1 53 2 256 2 81 2 352 1 
211 1 189 1 308 7 110 1 61 1 337 2 175 4 240 2 317 3 176 1 117 1 121 1 298 1 325 1 224 1 18 4 280 1 53 2 256 2 81 2 
41 2 12 4 322 1 300 5 189 2 308 10 61 2 336 1 18 5 338 1 314 4 349 4 317 5 284 1 20 9 
211 1 189 1 308 7 110 1 61 1 337 2 175 4 240 2 317 3 176 1 117 1 121 1 298 1 325 1 224 1 18 4 280 1 53 2 256 2 81 2 
41 1 12 1 189 1 300 1 322 1 308 7 61 1 18 4 63 1 337 2 338 1 349 1 314 1 256 2 175 4 317 3 240 2 20 2 81 2 
84 1 41 1 12 1 322 1 300 1 189 1 308 5 61 1 18 3 338 1 314 1 317 2 20 1 
121 1 211 1 189 1 308 4 61 1 18 2 337 1 349 1 256 1 175 2 240 1 317 2 20 1 81 1 117 1 352 1 
121 1 298 1 211 1 189 1 308 7 224 1 61 1 18 4 280 1 53 2 317 3 117 1 
41 1 189 3 211 2 308 22 61 3 62 1 63 2 337 2 338 1 314 2 175 4 317 10 240 2 117 2 121 2 298 2 12 2 300 2 322 1 224 1 301 1 18 12 349 4 53 2 55 1 256 2 20 6 81 2 
53 1 308 1 18 1 
298 1 308 1 317 1 
121 1 211 1 189 1 300 1 308 6 61 1 18 3 349 1 317 3 20 2 117 1 165 1 
211 1 189 1 308 7 110 1 61 1 337 1 175 2 240 1 317 3 176 1 117 1 121 1 298 1 224 1 18 4 280 1 53 2 256 1 81 1 
41 1 12 1 189 1 300 1 308 6 61 1 18 3 314 1 349 1 317 3 20 2 
12 1 300 1 322 1 308 3 18 2 63 1 337 1 338 1 349 1 314 1 55 1 256 1 175 2 317 1 240 1 20 2 81 1 
41 1 12 2 300 3 189 2 308 10 61 2 18 5 337 1 314 2 349 2 256 1 175 2 240 1 317 5 284 1 20 5 81 1 176 1 
211 1 189 1 308 2 337 1 349 1 256 1 175 2 240 1 317 2 20 1 176 1 81 1 
121 1 211 1 189 1 308 4 61 1 18 2 337 1 256 1 175 2 240 1 317 2 176 1 81 1 117 1 
12 1 300 1 308 3 325 1 18 2 63 1 337 3 314 1 349 1 55 1 256 3 175 6 240 3 317 1 20 2 176 1 81 3 
41 1 189 2 308 15 61 2 358 1 63 1 337 4 338 1 314 2 175 8 240 4 317 7 176 1 298 1 12 2 322 1 300 3 325 1 18 8 280 1 349 3 53 1 55 1 256 4 284 1 20 6 81 4 352 1 
151 1 65 1 197 1 335 1 144 1 181 1 177 1 
151 1 287 1 221 1 123 1 42 1 5 1 335 1 181 1 144 1 65 1 197 1 177 1 
319 1 84 1 104 1 152 1 115 1 46 1 147 1 47 1 351 1 242 1 369 1 
319 1 151 1 152 1 104 1 296 1 232 1 125 1 144 2 310 1 369 1 311 1 161 1 115 1 65 2 197 1 147 1 47 1 242 1 
104 1 86 1 232 1 144 2 310 1 311 1 65 2 115 2 197 1 147 1 47 1 149 1 319 3 216 1 151 2 152 1 296 1 125 2 369 1 207 2 161 2 225 1 58 1 38 1 
104 1 86 1 232 1 144 2 310 1 311 1 26 1 65 2 115 2 197 1 147 1 47 1 149 1 319 3 216 1 151 2 152 1 125 2 369 1 207 2 161 2 225 1 58 1 38 1 
104 1 232 1 356 1 171 1 144 1 339 1 172 1 359 1 65 1 147 1 341 1 239 1 118 1 319 1 151 1 152 1 15 1 223 1 207 1 161 1 58 1 374 1 
187 1 319 4 1 1 86 1 152 3 104 3 125 1 15 2 169 1 223 1 369 1 195 1 270 1 115 1 359 2 147 3 239 1 341 1 47 1 149 1 58 1 242 1 
40 1 104 1 152 1 147 1 47 1 369 1 
166 1 82 1 168 1 104 6 236 1 115 2 147 6 47 2 150 1 242 2 319 3 95 1 152 5 125 1 247 1 324 1 33 1 369 3 78 1 37 1 
104 1 41 1 230 2 232 1 189 1 308 5 61 1 357 1 144 2 310 1 311 1 337 2 338 1 314 1 64 1 115 1 65 2 197 2 147 1 47 1 175 4 317 2 240 2 319 1 151 1 31 1 152 1 275 2 296 1 12 1 300 1 322 1 125 1 18 3 369 1 130 1 161 1 256 2 373 1 20 1 37 1 81 2 39 1 
187 1 1 2 138 1 104 1 169 1 193 1 267 2 195 1 173 2 359 3 147 1 239 1 341 1 242 1 319 2 152 1 32 2 50 1 157 2 15 3 223 1 367 1 305 1 327 1 131 1 208 1 184 1 283 1 
319 2 40 1 152 2 104 2 365 1 125 1 33 1 369 2 195 1 115 1 147 2 47 1 37 1 
319 1 152 4 104 4 369 1 160 1 270 1 46 1 115 1 147 4 47 1 37 1 351 1 242 1 
319 1 152 2 104 2 153 1 95 1 125 1 206 1 212 1 369 2 236 1 115 1 147 2 47 1 58 1 
77 1 104 1 152 1 147 1 257 1 47 1 350 1 99 1 242 1 369 1 
319 1 168 1 295 1 104 2 152 2 115 1 324 1 147 2 47 1 37 1 369 1 
319 3 152 4 104 5 247 1 324 1 369 2 160 1 46 1 115 2 147 5 47 2 58 1 351 1 37 1 150 1 242 1 
319 3 48 1 152 4 104 5 324 1 369 2 160 1 46 1 115 2 147 5 47 2 58 1 351 1 37 1 150 1 242 1 
319 1 151 1 152 1 104 1 232 1 125 1 144 2 310 1 369 1 311 1 26 1 161 1 115 1 65 2 197 1 147 1 47 1 242 1 
82 1 319 1 152 1 104 1 95 1 125 1 33 1 369 2 236 1 115 1 147 1 47 1 58 1 
151 1 0 1 234 1 192 1 182 1 65 1 302 1 372 1 144 1 
0 1 154 1 250 1 
0 1 192 1 182 1 197 1 199 1 
187 1 0 1 232 1 356 1 171 1 144 1 312 1 192 1 339 1 65 1 359 2 146 1 341 1 239 1 199 1 118 1 151 1 154 1 50 1 15 2 250 1 207 2 182 1 161 1 133 1 225 1 38 1 374 1 
83 1 84 1 9 1 178 1 
200 1 83 1 101 1 241 1 9 1 178 1 333 1 
200 1 217 1 76 1 
200 3 83 1 294 1 362 1 315 2 101 1 102 1 233 1 241 3 9 1 178 1 333 1 
200 2 83 1 70 1 107 1 101 1 241 2 9 1 178 1 333 1 
200 1 246 1 4 1 174 1 101 1 257 1 233 1 241 1 99 1 9 1 333 1 
200 1 101 1 233 1 241 1 9 1 178 1 333 1 
200 1 83 1 101 1 233 1 241 1 178 2 333 1 
200 2 120 1 245 1 17 1 233 1 101 2 241 2 9 1 178 1 333 2 
200 3 83 1 70 2 233 1 145 1 101 1 174 1 241 3 318 1 9 2 178 1 333 1 361 1 
200 2 83 1 70 1 4 1 233 1 99 2 25 1 7 1 101 1 257 1 350 1 241 2 9 1 178 1 333 1 
200 4 83 1 70 2 107 1 233 1 306 1 101 2 174 1 241 4 9 2 178 1 333 2 361 1 
200 1 83 1 101 1 233 1 241 1 9 1 178 1 333 1 
200 4 83 2 294 1 70 2 34 1 315 1 101 1 174 1 102 1 241 4 9 3 178 2 333 1 361 1 
200 2 83 1 70 1 260 1 233 1 101 1 56 1 241 2 9 1 331 1 178 1 333 1 
200 3 83 1 294 2 233 1 52 1 315 2 101 1 102 1 241 3 9 1 333 1 178 1 
271 1 16 2 9 2 91 1 
370 1 200 1 101 1 233 1 241 1 333 1 
200 2 83 1 70 1 145 1 101 1 233 1 241 2 9 1 178 1 333 1 
179 1 
200 1 83 1 101 1 233 1 241 1 9 1 178 1 333 1 
200 3 83 1 70 1 233 1 315 1 145 1 101 1 241 3 9 1 333 1 178 1 
174 1 34 1 9 1 361 1 
9 1 178 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 317 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 134 23 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 325 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 325 323 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 72 165 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 73 72 165 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 73 72 69 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 72 165 75 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 72 165 75 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 134 23 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 259 101 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I | OPERATOR | 3493 | * -> %
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration; | RETURN | 1684 | return null
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | STATEMENT | 3650 | stmt -> ;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | OPERATOR | 478 | || -> &&
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 4578 | return null
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1870 | -= -> >>=
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
156 9 311 1 158 1 45 3 355 2 358 1 163 1 314 6 363 2 265 2 99 2 242 1 267 1 367 1 17 2 54 1 219 1 322 1 298 1 246 1 248 2 25 1 61 1 82 1 105 4 106 9 279 2 349 5 
156 9 311 1 158 1 45 3 355 2 358 1 163 1 314 6 363 2 265 2 99 2 242 1 267 1 367 1 17 2 54 1 219 1 322 1 298 1 246 1 248 2 25 1 61 1 82 1 105 4 106 9 279 2 349 5 
156 10 311 1 158 1 45 4 355 2 358 1 163 1 314 7 363 2 265 2 99 2 242 1 267 1 367 1 17 2 54 1 219 1 322 1 298 1 246 1 248 2 25 1 61 1 82 1 105 5 106 10 279 2 349 6 
156 7 311 1 45 2 355 2 358 1 163 1 314 4 363 2 265 1 99 2 242 1 267 1 367 1 17 2 54 1 219 1 322 1 298 1 246 1 248 2 25 1 61 1 82 1 105 3 106 7 279 2 349 4 
265 2 99 1 267 1 367 1 156 4 45 1 158 1 355 1 298 1 246 1 248 1 25 1 105 2 106 4 314 3 279 1 349 3 363 1 
99 1 267 1 367 1 156 2 255 1 17 1 355 1 271 1 248 1 274 1 25 1 82 1 61 1 106 2 279 1 349 1 
267 1 367 1 156 3 45 1 17 1 54 1 248 2 25 1 105 1 106 3 314 1 279 2 349 2 
156 9 311 1 45 3 158 1 355 1 163 1 313 1 314 7 363 1 265 2 99 1 267 1 367 1 17 1 54 1 298 1 300 1 246 1 248 2 25 1 105 4 106 9 279 2 349 5 
156 9 311 1 45 3 158 1 355 1 163 1 313 1 314 7 363 1 265 2 99 1 267 1 367 1 17 1 54 1 298 1 300 1 246 1 248 2 25 1 105 4 106 9 279 2 349 5 
217 1 293 1 148 1 
15 1 148 1 185 2 
270 1 155 2 273 2 247 2 88 1 295 2 290 2 137 2 
155 2 181 1 88 1 354 1 108 2 46 1 204 1 226 1 284 2 207 1 137 3 231 1 167 1 315 1 290 2 12 1 241 2 366 1 320 1 294 1 19 1 295 2 150 1 196 1 58 2 270 1 273 2 247 3 343 2 373 1 176 1 81 1 278 1 251 1 346 1 280 1 281 1 
155 1 273 1 7 1 342 1 247 1 88 1 9 1 295 1 290 1 137 1 
328 1 293 1 145 1 148 1 269 1 295 1 137 1 370 1 247 1 342 1 114 1 116 1 309 1 189 1 
155 1 328 1 293 1 148 1 269 1 295 1 137 1 370 1 273 1 247 1 342 1 114 2 290 1 116 1 189 2 
286 1 220 1 329 1 114 1 189 1 
155 1 88 1 43 1 329 1 293 1 148 1 295 1 137 1 297 1 220 1 273 1 7 1 261 1 342 1 247 1 9 1 114 1 290 1 189 1 
220 1 114 1 189 1 
155 1 88 1 329 1 295 1 137 1 297 1 7 1 273 1 342 1 247 1 9 1 114 1 290 1 189 1 
148 1 
155 1 88 1 329 1 293 1 148 1 295 1 137 1 297 1 220 1 273 1 7 1 261 1 342 1 247 1 9 1 114 1 290 1 87 1 189 1 
310 5 155 1 88 1 109 4 157 2 159 2 329 2 47 2 186 1 137 1 187 1 260 1 210 1 7 1 261 1 9 1 34 1 114 4 290 1 168 1 189 4 98 1 266 2 293 2 148 2 295 1 21 2 297 1 220 2 221 1 273 1 342 1 247 1 124 2 103 1 371 1 84 1 26 1 
241 1 155 1 108 1 150 1 295 1 207 1 196 1 100 1 137 2 231 1 123 1 247 2 343 1 373 1 81 1 167 1 346 1 142 1 290 1 12 1 
270 1 217 1 
155 1 295 2 137 2 270 2 273 1 247 2 290 1 169 1 51 1 
123 1 203 1 336 1 
241 1 180 1 108 1 150 1 196 1 207 1 137 1 231 1 270 1 247 1 343 1 373 1 81 1 167 1 346 1 12 1 
270 1 273 1 155 3 247 3 142 1 295 3 290 3 137 3 
155 1 342 1 247 1 9 1 295 1 290 1 137 1 
155 1 273 1 342 1 247 1 295 1 290 1 169 1 137 1 51 1 
155 3 181 1 88 1 328 1 108 1 204 1 330 1 284 1 207 1 137 4 231 1 167 1 114 1 142 1 315 1 290 3 12 1 116 1 189 1 51 1 241 1 320 1 269 1 294 1 19 1 150 1 295 3 196 1 100 1 58 2 270 1 370 1 273 2 247 4 342 1 343 1 373 1 81 1 278 1 251 1 346 1 128 1 280 1 281 1 
270 1 155 1 247 2 44 1 142 1 295 2 290 1 137 2 309 1 
155 3 328 1 148 1 269 1 295 3 100 1 137 3 370 1 273 1 342 1 247 3 126 1 114 1 142 2 290 3 128 1 116 1 189 1 51 1 
203 1 155 2 295 2 137 2 123 1 273 1 247 2 142 1 290 2 51 1 
241 1 108 1 150 1 196 1 207 1 137 1 231 1 270 1 247 1 343 1 373 1 81 1 167 1 346 1 12 1 
241 1 365 1 108 1 244 1 196 1 207 1 137 1 231 1 270 1 247 1 343 1 373 1 81 1 346 1 12 1 
203 2 181 1 157 1 284 4 111 1 230 1 33 1 237 1 315 1 74 1 336 2 339 1 320 1 19 1 58 2 123 2 124 1 24 1 176 2 250 1 251 1 127 1 280 2 281 1 
359 1 155 1 342 1 247 1 295 1 290 1 116 1 137 1 
155 4 318 1 295 4 100 1 137 4 122 1 270 1 273 1 342 1 247 4 142 2 225 1 290 4 51 1 
359 1 155 2 342 1 247 2 9 1 295 2 290 2 137 2 
22 1 360 1 
22 1 360 1 
50 1 27 1 
50 1 27 1 
50 1 27 1 
22 1 360 1 71 1 
22 1 360 1 71 1 
22 1 360 1 264 1 
22 2 360 2 11 1 153 1 50 1 27 1 
22 1 360 1 71 1 
350 1 22 1 360 1 
350 1 22 1 360 1 
350 1 22 1 360 1 
179 2 338 1 131 2 132 2 29 1 148 1 257 2 20 1 22 2 360 2 11 1 332 1 40 3 345 2 303 1 141 1 275 1 114 2 189 2 
155 2 131 1 132 1 257 1 137 2 138 1 360 1 235 1 94 1 114 1 290 2 96 1 264 1 213 1 189 1 295 2 270 1 22 1 247 2 40 1 345 1 224 1 275 1 308 1 
99 1 355 1 363 1 
271 1 99 1 355 1 
202 1 271 1 133 1 355 3 289 1 363 2 
202 1 271 1 215 1 133 1 355 2 363 1 
202 2 271 1 133 1 355 2 363 1 
310 1 157 1 159 1 329 4 109 3 185 1 47 1 230 1 261 1 94 1 211 1 140 1 333 2 114 4 189 4 13 1 240 1 118 1 266 1 293 1 148 1 149 1 221 1 220 1 341 1 124 1 224 1 200 1 127 1 86 1 308 1 
310 6 327 5 157 3 329 7 159 2 109 8 185 9 47 2 90 1 230 3 139 1 286 5 261 1 140 2 114 8 189 8 317 1 13 1 240 6 266 2 15 3 192 1 293 1 148 5 77 1 149 3 220 6 221 1 341 6 124 3 224 4 127 3 26 1 347 1 86 2 
310 2 155 1 88 1 157 1 329 2 159 1 109 3 47 1 185 4 137 1 230 1 7 1 9 1 211 1 140 1 333 1 114 3 290 1 189 3 118 1 240 2 266 1 15 2 293 1 148 3 295 1 149 1 297 1 273 1 342 1 247 1 124 1 341 2 224 1 127 1 26 1 86 1 
310 2 157 1 159 1 109 3 329 1 185 4 47 1 230 1 211 1 140 1 333 1 114 2 189 2 317 1 240 2 118 1 266 1 15 2 148 2 149 1 341 2 124 1 224 1 127 1 26 1 86 1 
217 1 12 1 56 1 
161 1 12 1 
52 1 
207 1 12 1 
373 1 256 1 160 1 207 1 12 3 56 2 
373 1 207 1 12 1 
136 1 12 1 
143 1 157 1 64 1 284 7 197 1 187 1 33 3 210 1 124 1 250 2 34 1 176 4 212 1 263 1 280 3 190 1 42 2 
143 1 157 1 64 1 284 7 197 1 187 1 33 3 210 1 124 1 250 2 34 1 176 4 212 1 263 1 280 3 190 1 42 2 
143 1 157 1 64 1 284 7 197 1 187 1 33 3 210 1 124 1 250 2 34 1 176 4 212 1 263 1 154 1 280 3 190 1 42 2 
253 1 157 4 64 1 32 1 284 31 187 1 230 3 210 2 33 10 233 3 212 1 34 2 263 2 334 1 315 1 190 2 191 1 143 1 320 1 149 3 245 1 197 5 58 2 59 1 124 4 176 16 250 5 251 1 277 4 127 3 280 15 281 1 28 1 42 3 
157 1 64 1 65 1 357 1 284 9 187 1 33 4 210 1 212 1 34 1 263 1 315 2 190 1 320 2 197 1 58 4 59 1 124 1 176 5 250 3 251 2 280 4 281 2 42 2 
156 2 182 1 108 1 355 2 113 1 93 1 188 1 35 1 289 1 314 1 363 1 99 1 241 1 267 1 367 1 17 1 18 1 296 1 196 1 369 1 271 1 343 1 248 1 344 1 25 1 199 1 81 1 106 2 279 1 349 1 
156 3 182 1 108 1 355 2 113 1 234 1 188 1 35 1 289 1 314 2 363 1 99 1 241 1 367 1 17 1 18 1 147 1 296 1 196 1 369 1 271 1 343 1 248 1 344 1 25 1 81 1 83 1 106 3 279 1 349 1 
156 2 182 1 108 1 355 2 113 1 234 1 188 1 35 1 289 1 314 2 363 1 241 1 99 1 367 1 17 1 196 1 369 1 271 1 343 1 344 1 25 1 81 1 83 1 106 2 349 1 
156 1 108 1 30 1 207 1 113 2 35 2 362 1 12 1 241 1 14 1 17 2 147 1 196 1 369 2 343 1 248 1 301 1 249 1 81 1 276 1 346 1 106 1 279 1 
156 1 182 1 108 1 355 2 113 1 188 1 35 1 289 1 363 1 99 1 241 1 267 1 17 1 18 1 296 1 196 1 369 1 271 1 343 1 248 1 344 1 199 1 81 1 83 1 106 1 279 1 
372 1 
310 1 266 1 241 1 109 1 159 1 108 1 134 1 47 1 57 1 220 2 221 1 261 1 23 1 343 1 140 1 114 1 346 1 189 1 
328 1 162 1 31 1 137 1 91 1 232 1 261 1 8 2 114 2 116 1 189 2 145 1 293 2 146 1 148 2 269 1 295 1 370 1 220 2 247 1 342 1 325 1 87 1 309 1 
328 1 162 1 31 1 137 1 91 1 232 1 261 1 8 3 114 2 116 1 189 2 145 1 293 3 146 1 148 3 269 1 55 1 295 1 370 1 220 1 247 1 342 1 87 1 309 1 
328 1 162 1 31 1 137 1 91 1 232 1 261 1 8 3 114 2 116 1 189 2 145 1 293 3 146 1 148 3 269 1 55 1 295 1 370 1 323 1 220 2 247 1 342 1 325 1 87 1 309 1 
220 1 261 1 114 1 87 1 189 1 
310 1 328 1 109 1 159 1 135 1 162 1 185 1 31 1 47 1 4 1 137 1 91 1 232 1 261 1 8 3 114 2 73 1 116 1 189 2 119 2 266 1 15 1 145 1 293 3 146 1 148 3 55 1 269 1 295 1 173 2 323 1 370 1 220 2 221 1 247 1 342 1 325 1 129 2 309 1 201 1 
310 1 328 1 109 1 159 1 162 1 47 1 31 1 4 1 137 1 91 1 232 1 261 1 8 3 165 1 72 1 114 2 73 1 116 1 189 2 119 2 266 1 15 1 145 1 293 3 146 1 148 3 55 1 269 1 295 1 172 1 173 2 323 1 370 1 220 2 221 1 247 1 342 1 325 1 129 2 309 1 201 1 
310 1 328 1 109 1 159 1 162 1 47 1 31 1 4 1 137 1 91 1 232 1 261 1 8 2 165 1 72 1 114 2 73 1 116 1 189 2 119 1 266 1 15 1 145 1 293 2 146 1 148 2 269 1 295 1 172 1 173 1 323 1 370 1 220 2 221 1 247 1 342 1 325 1 129 1 309 1 201 1 
310 1 328 1 109 1 159 1 162 1 185 1 47 1 31 1 258 1 137 1 69 1 91 1 232 1 261 1 8 2 72 1 114 2 73 1 116 1 189 2 119 1 214 1 266 1 145 1 293 2 146 1 148 2 268 1 269 1 295 1 323 1 370 1 220 2 272 1 221 1 247 1 342 1 325 1 129 1 309 1 
310 1 328 1 109 1 159 1 162 1 47 1 31 1 4 1 137 1 91 1 232 1 261 1 8 4 165 1 72 1 114 2 73 1 116 1 189 2 119 2 266 1 15 1 145 1 293 4 146 1 148 4 75 1 55 2 269 1 295 1 172 1 173 2 370 1 323 2 221 1 220 3 247 1 342 1 325 2 129 2 309 1 201 1 
310 1 328 1 109 1 159 1 162 1 47 1 31 1 4 1 137 1 91 1 232 1 261 1 8 4 165 1 72 1 114 2 73 1 116 1 189 2 119 2 266 1 15 1 145 1 293 4 146 1 148 4 75 1 55 2 269 1 295 1 172 1 173 2 370 1 323 2 221 1 220 3 247 1 342 1 325 2 129 2 309 1 201 1 
310 1 328 1 109 1 159 1 135 1 162 1 185 1 31 1 47 1 258 1 137 1 91 1 232 1 261 1 8 3 114 2 73 1 116 1 189 2 119 2 214 1 266 1 145 1 293 3 146 1 148 3 268 2 55 1 269 1 295 1 323 1 370 1 220 2 221 1 247 1 342 1 325 1 129 2 309 1 
203 1 181 1 217 1 157 1 320 1 64 1 19 1 284 6 111 1 187 1 58 2 270 2 33 2 210 1 123 1 124 1 176 3 250 2 34 1 212 1 251 1 315 1 280 3 336 1 281 1 42 1 
62 1 203 4 351 1 181 1 354 1 157 1 32 1 284 14 230 1 33 2 233 3 236 1 315 2 336 11 320 2 19 2 149 2 245 1 197 1 58 4 270 1 299 1 222 1 123 11 124 2 250 1 176 8 278 1 277 3 251 2 127 2 280 6 281 2 
180 1 203 1 155 1 181 1 108 1 354 1 184 1 207 1 284 2 137 2 231 1 209 1 167 1 142 1 315 1 290 1 12 1 241 1 320 1 76 1 19 1 150 1 295 1 196 1 100 1 58 2 270 1 299 1 343 1 247 2 373 1 81 1 176 1 346 1 251 1 278 1 280 1 281 1 
181 3 284 14 137 3 187 1 231 2 5 1 230 1 142 1 290 1 12 2 336 4 241 1 19 3 295 1 150 2 149 1 100 1 196 2 58 6 299 1 343 1 247 3 104 2 250 3 346 1 251 3 155 1 203 4 354 1 108 1 157 2 64 1 204 2 207 2 112 1 210 1 33 3 70 2 34 1 212 1 167 2 315 3 117 1 320 3 270 2 123 4 174 1 124 2 373 2 81 2 176 7 278 1 127 1 280 7 281 3 42 1 
254 1 155 1 181 2 108 8 354 1 226 2 356 1 284 2 207 2 259 1 111 1 137 1 48 1 93 1 142 1 290 1 315 2 12 3 171 1 241 8 14 1 320 2 193 1 19 2 295 1 196 2 58 4 247 1 343 7 301 1 81 2 176 1 83 1 346 2 251 2 278 1 348 1 280 1 281 2 
203 1 155 1 181 1 157 1 284 3 137 1 230 1 33 1 49 1 290 1 315 1 336 1 51 1 320 1 19 1 295 1 149 1 58 2 299 1 123 1 273 1 247 1 124 1 250 1 176 1 251 1 127 1 280 2 281 1 
203 1 181 1 339 1 320 1 19 1 284 2 197 1 111 1 58 2 33 1 123 1 124 1 176 2 251 1 127 1 315 1 336 1 281 1 
203 1 181 1 320 1 157 1 19 1 284 2 111 1 230 1 58 2 33 1 123 1 24 1 250 1 251 1 315 1 280 2 336 1 281 1 
203 2 181 1 157 1 284 4 111 1 230 1 33 2 315 1 336 2 320 1 19 1 149 1 197 1 58 2 123 2 124 1 176 2 250 1 127 1 251 1 280 2 281 1 
203 1 181 1 339 1 320 1 356 1 19 1 284 2 197 1 58 2 33 1 123 1 124 1 176 2 251 1 127 1 315 1 336 1 281 1 
203 1 181 1 320 1 157 1 356 1 19 1 284 2 230 1 58 2 33 1 123 1 24 1 250 1 251 1 315 1 280 2 336 1 281 1 
203 2 181 1 157 1 356 1 284 4 230 1 33 2 315 1 336 2 320 1 19 1 149 1 197 1 58 2 123 2 124 1 176 2 250 1 127 1 251 1 280 2 281 1 
203 2 181 1 157 1 284 4 230 1 33 2 315 1 336 2 320 1 19 1 149 1 197 1 58 2 123 2 124 1 176 2 250 1 127 1 251 1 280 2 281 1 
181 1 354 1 108 1 204 1 284 2 207 1 137 1 231 1 167 1 315 1 12 1 241 1 320 1 19 1 150 1 196 1 58 2 270 1 343 1 247 1 373 1 176 1 81 1 346 1 251 1 278 1 280 1 281 1 
181 1 354 1 108 1 284 2 207 1 137 1 231 1 315 1 12 1 241 1 365 1 320 1 244 1 19 1 196 1 58 2 270 1 343 1 247 1 373 1 176 1 81 1 346 1 251 1 278 1 177 1 280 1 281 1 
203 2 181 1 157 1 284 4 230 1 33 2 315 1 336 2 320 1 19 1 149 1 197 1 58 2 299 1 123 2 124 1 176 2 250 1 127 1 251 1 280 2 281 1 
203 2 181 1 157 1 108 1 204 1 284 4 207 1 137 1 230 1 231 1 33 2 70 1 93 1 167 1 315 1 12 1 336 2 241 1 320 1 19 1 150 1 149 1 196 1 197 1 58 2 123 2 124 1 343 1 247 1 373 1 250 1 176 2 81 1 127 1 251 1 280 2 281 1 
155 1 203 1 181 1 157 1 284 3 137 1 230 1 33 1 290 1 315 1 336 1 51 1 121 1 320 1 19 1 295 1 149 1 197 1 58 2 299 1 123 1 273 1 247 1 124 1 176 2 251 1 127 1 280 1 281 1 
157 3 68 1 32 1 357 1 284 19 208 2 230 3 164 1 33 6 233 1 315 2 120 1 16 2 319 1 320 2 39 1 149 3 245 1 197 3 58 4 124 3 250 3 176 9 277 2 251 2 127 3 374 1 130 1 280 10 281 2 
157 2 283 1 68 2 32 2 357 1 284 26 285 1 208 4 230 2 33 4 164 1 233 2 262 1 315 3 120 1 16 1 368 1 319 1 320 3 53 1 194 1 149 3 197 2 59 2 58 6 124 3 250 2 176 14 251 3 277 2 127 3 374 2 280 12 281 3 
157 5 64 1 283 1 68 2 32 3 357 1 284 41 285 1 187 1 208 4 230 4 210 1 164 1 33 8 233 3 262 1 34 1 212 1 315 3 120 1 16 1 368 1 319 1 320 3 53 1 194 1 149 4 245 1 197 4 59 1 58 6 124 5 250 4 176 20 277 4 251 3 127 4 374 1 130 1 280 21 281 3 178 1 42 1 
157 4 64 1 283 1 68 2 32 3 357 1 284 38 285 1 187 1 208 4 230 3 210 1 164 1 33 7 233 3 262 1 34 1 212 1 315 4 120 1 16 1 368 1 319 1 320 4 53 1 194 1 149 4 245 1 197 3 59 2 58 8 124 5 250 4 176 20 277 4 251 4 127 4 374 1 130 1 280 18 281 4 178 1 42 1 
351 2 157 8 64 1 283 1 68 1 32 2 357 1 284 52 285 1 187 1 208 4 230 7 210 1 164 1 33 14 233 4 262 1 34 1 212 1 315 2 120 1 16 1 368 1 319 1 320 2 53 1 194 1 149 7 245 2 197 7 59 1 58 4 124 8 250 7 176 27 277 4 251 2 127 7 374 1 280 25 281 2 42 1 
22 1 338 1 63 1 360 1 11 1 131 1 345 1 132 1 29 1 257 1 
235 1 264 1 
22 1 92 1 360 1 131 1 302 1 345 1 132 1 257 1 321 1 
179 1 338 1 131 1 132 1 29 1 148 1 257 1 20 1 22 1 360 1 11 1 332 1 40 2 345 1 141 1 275 1 114 1 189 1 
179 1 338 1 131 1 132 1 29 1 148 1 257 1 20 1 22 1 360 1 11 1 332 1 40 2 345 1 141 1 275 1 114 1 189 1 
179 1 338 1 131 1 132 1 29 1 148 1 257 1 20 1 22 1 360 1 11 1 332 1 40 2 345 1 141 1 275 1 114 1 189 1 
71 1 38 1 153 1 
71 1 38 1 153 1 
350 1 361 1 
350 1 361 1 153 1 
138 1 213 1 
179 1 155 2 131 1 329 1 132 1 257 1 137 2 138 1 360 1 235 1 94 1 114 1 96 1 290 2 264 1 213 1 189 1 337 1 20 1 295 2 270 1 22 1 247 2 40 1 345 1 224 1 308 1 
71 1 38 1 
350 1 361 1 153 1 
181 1 108 2 354 1 226 2 207 1 284 2 259 1 137 2 315 1 12 1 170 1 239 1 241 2 320 1 193 1 19 1 295 2 196 1 60 1 58 2 299 1 247 2 343 2 324 1 198 1 81 1 176 1 251 1 278 1 280 1 281 1 
99 1 241 2 182 1 108 2 0 1 355 2 296 1 196 1 271 1 369 1 343 2 93 1 344 1 223 1 81 1 289 1 83 1 41 1 363 1 
99 1 241 1 182 1 108 1 355 2 67 1 296 1 196 1 271 1 369 1 343 1 344 1 223 1 81 1 289 1 83 1 363 1 
241 1 14 1 108 1 0 1 196 1 207 1 369 1 343 1 301 1 81 1 276 1 346 1 115 1 12 1 
99 1 241 1 182 1 108 1 0 1 355 2 296 1 196 1 271 1 369 1 343 1 344 1 223 1 81 1 289 1 83 1 41 1 363 1 
291 1 
310 1 98 1 217 1 109 1 293 1 148 1 260 1 
310 1 266 1 15 1 293 1 159 1 109 1 148 1 185 1 47 1 4 1 173 1 220 1 221 1 261 1 201 1 
1 1 183 1 228 1 47 2 185 6 5 1 230 1 10 1 140 1 12 4 189 1 240 3 241 1 144 1 15 3 148 3 149 1 196 2 21 1 56 1 343 1 341 3 346 1 310 3 109 4 159 2 108 1 157 1 256 1 161 2 207 1 261 1 114 1 36 1 266 2 370 1 221 2 220 2 124 1 373 1 81 1 127 1 282 1 
88 1 283 1 47 2 185 6 137 1 285 1 230 2 7 1 233 1 9 1 140 1 290 1 240 5 15 3 293 2 243 1 53 1 148 5 194 1 149 2 295 1 21 2 57 1 297 1 342 1 247 1 341 5 152 1 310 5 155 1 157 2 159 2 109 8 32 1 261 1 266 2 368 1 221 2 220 1 273 1 124 2 127 2 277 1 84 1 
310 2 155 1 88 1 159 1 157 1 109 2 47 1 137 1 187 1 210 1 7 1 9 1 34 1 114 1 290 1 189 1 266 1 295 1 21 2 172 1 297 1 221 1 273 1 342 1 247 1 371 1 124 2 84 1 
98 1 310 1 266 1 159 1 293 1 109 1 148 1 47 1 260 1 221 1 
310 5 240 5 15 5 157 2 109 5 148 5 149 2 185 10 21 2 5 1 230 2 124 2 341 5 127 2 84 1 
155 1 88 1 293 1 148 1 295 1 137 1 297 1 220 1 261 1 7 1 273 1 342 1 247 1 9 1 290 1 
310 1 241 1 266 1 216 1 109 1 108 1 159 1 134 1 47 1 57 1 220 2 221 1 261 1 23 1 343 1 140 1 346 1 
155 2 88 1 181 1 108 1 204 1 284 1 207 1 137 3 231 1 167 1 290 2 315 1 12 1 241 1 320 1 294 1 19 1 295 2 150 1 196 1 58 2 270 1 273 2 343 1 247 3 373 1 81 1 278 1 251 1 346 1 280 1 281 1 
240 2 310 2 266 1 15 2 159 1 109 1 293 2 148 4 185 4 47 1 57 1 221 1 341 2 140 1 42 1 
131 1 345 1 306 1 
131 1 345 1 306 1 
138 1 338 1 131 1 345 1 340 1 
131 1 345 1 306 1 
131 1 218 1 345 1 
131 1 218 1 345 1 
131 1 218 1 345 1 
131 1 345 1 
22 1 360 1 
157 1 320 2 64 1 284 8 197 1 187 1 58 4 59 1 33 3 210 1 124 1 176 4 250 2 212 1 34 1 251 2 315 2 280 4 281 2 42 1 
33 2 210 1 124 1 217 1 157 1 64 1 176 3 250 2 34 1 212 1 284 6 280 3 187 1 42 1 
292 1 157 1 320 1 149 1 284 4 197 1 230 1 58 2 33 2 124 1 250 1 176 2 251 1 127 1 315 1 280 2 281 1 
157 1 32 1 149 1 284 7 245 1 197 1 230 1 33 2 233 1 124 1 250 1 176 3 277 2 127 1 280 4 
351 1 157 3 64 1 206 1 284 23 187 1 230 2 210 2 33 9 233 2 236 1 34 2 212 1 315 2 320 2 149 2 245 1 197 4 59 2 58 4 124 3 176 11 250 5 127 2 277 2 251 2 280 12 281 2 42 1 
277 1 284 1 280 1 
233 1 176 1 284 1 
292 1 320 1 157 1 149 1 284 6 197 1 5 1 230 1 58 2 33 3 124 1 176 3 250 2 251 1 127 1 315 1 280 3 281 1 
157 2 283 1 32 1 284 12 357 1 285 1 230 2 33 2 233 1 315 1 368 1 320 1 53 1 194 1 149 2 197 1 58 2 124 2 176 6 250 1 277 1 251 1 127 2 280 6 281 1 
157 1 284 6 197 1 187 1 210 1 33 2 124 1 176 3 34 1 250 1 280 3 
320 1 64 1 206 1 284 3 197 1 59 1 58 2 33 2 210 1 176 1 250 1 34 1 212 1 251 1 315 1 280 2 281 1 
320 1 157 2 357 1 284 10 197 2 187 1 58 2 210 2 33 5 371 1 124 2 34 2 250 3 176 5 251 1 315 1 280 5 281 1 
320 1 357 1 284 2 197 1 58 2 33 1 124 1 176 2 251 1 127 1 315 1 281 1 
157 1 320 1 149 1 357 1 284 4 197 1 230 1 58 2 33 2 124 1 250 1 176 2 251 1 127 1 315 1 280 2 281 1 
320 3 206 1 284 3 357 1 197 1 59 1 58 6 210 1 33 2 34 1 250 1 176 1 251 3 315 3 130 1 280 2 281 3 
253 1 157 5 64 1 206 1 32 1 357 1 284 34 187 2 230 3 210 3 33 12 233 3 34 3 212 1 315 5 191 1 292 1 320 5 149 3 245 1 197 5 59 2 58 10 124 5 176 16 250 7 277 4 251 5 127 3 280 18 130 1 28 1 281 5 42 1 
157 1 64 1 283 1 32 1 284 8 357 1 187 1 210 1 33 2 233 1 212 1 34 1 315 1 320 1 58 2 124 1 176 4 250 2 277 1 251 1 280 4 281 1 42 1 
157 1 64 1 283 1 32 1 284 11 357 1 187 1 210 1 33 3 233 1 34 1 212 1 315 2 292 1 320 2 149 1 245 1 197 1 58 4 124 2 250 2 176 6 277 2 251 2 127 1 280 5 281 2 42 1 
157 3 64 1 283 1 32 1 284 19 357 1 285 1 187 1 230 2 210 1 33 4 233 1 34 1 212 1 315 3 292 1 368 1 320 3 53 1 194 1 149 2 197 1 58 6 59 1 124 3 176 9 250 3 277 1 251 3 127 2 280 10 281 3 42 1 
157 2 64 1 283 1 32 1 284 17 357 1 285 1 187 1 230 1 210 1 33 5 233 1 34 1 212 1 315 3 292 1 368 1 320 3 53 1 194 1 149 2 197 2 59 1 58 6 124 3 176 10 250 3 277 1 251 3 127 2 280 7 281 3 42 1 
157 1 64 1 283 1 32 1 284 8 357 1 187 1 210 1 33 2 233 1 212 1 34 1 315 1 320 1 58 2 124 1 176 4 250 2 277 1 251 1 280 4 281 1 42 1 
157 2 283 1 32 1 284 12 357 1 285 1 230 2 33 2 233 1 315 1 368 1 320 1 53 1 194 1 149 2 197 1 58 2 124 2 176 6 250 1 277 1 251 1 127 2 280 6 281 1 
157 2 64 1 283 1 32 1 284 18 357 1 285 1 187 1 230 1 210 1 33 5 233 1 34 1 212 1 315 4 292 1 368 1 320 4 53 1 194 1 149 2 197 2 58 8 59 2 124 3 176 10 250 3 277 1 251 4 127 2 280 8 281 4 42 1 
157 2 283 1 32 1 284 16 357 1 285 1 230 2 33 6 233 1 315 4 368 1 320 4 53 1 194 1 149 3 197 3 58 8 59 2 124 3 176 9 250 3 277 1 251 4 127 3 280 7 130 1 281 4 
157 1 64 2 284 7 197 3 187 1 210 3 33 6 124 1 212 1 34 3 250 3 176 3 280 4 
157 2 64 1 283 1 32 1 284 18 357 1 285 1 187 1 230 1 210 1 33 4 233 1 34 1 212 1 315 4 368 1 320 4 53 1 194 1 149 2 197 1 58 8 59 2 124 3 176 10 250 3 277 1 251 4 127 2 280 8 130 1 281 4 42 1 
270 1 247 1 44 1 295 1 137 1 307 1 309 1 
44 1 2 1 229 1 295 1 137 1 270 1 287 1 247 1 80 1 316 1 307 1 309 1 
241 1 14 1 343 1 301 1 217 1 108 1 81 1 346 1 196 1 207 1 12 1 
241 1 155 1 108 1 295 1 150 1 207 1 196 1 137 2 231 1 270 1 247 2 343 1 373 1 81 1 346 1 142 1 290 1 12 1 
155 1 247 1 142 1 85 1 295 1 290 1 137 1 
155 1 247 1 142 1 85 1 295 1 290 1 137 1 
114 1 85 1 189 1 
114 1 85 1 189 1 
241 1 171 1 343 1 108 1 81 1 196 1 
97 1 171 1 254 1 241 7 108 7 256 1 89 1 226 1 207 2 196 3 259 1 48 1 343 6 93 1 373 1 304 1 81 2 83 1 346 2 348 1 12 3 
181 2 284 6 137 2 231 1 187 1 93 1 142 1 290 1 12 1 336 1 241 1 19 2 150 1 295 1 196 1 58 4 299 1 343 1 247 2 104 1 250 2 251 2 203 1 155 1 108 1 157 1 64 1 204 1 207 1 210 1 33 2 70 1 212 1 34 1 167 1 315 2 320 2 270 2 123 1 124 1 324 1 373 1 81 1 176 3 280 3 281 2 42 1 
88 1 329 1 183 1 1 1 47 2 137 1 187 1 7 1 9 1 290 1 12 2 189 2 98 1 241 1 144 1 293 2 148 2 295 1 21 2 56 1 297 1 342 1 247 1 343 1 346 1 310 5 155 1 108 1 159 2 157 2 109 4 161 1 260 1 210 1 261 1 34 1 114 2 36 1 266 2 216 1 370 1 220 2 221 2 273 1 371 1 124 2 84 1 
171 1 241 2 108 2 256 1 207 1 196 2 56 1 343 2 93 1 373 1 81 1 12 2 282 1 
241 4 14 1 352 1 108 4 227 1 196 1 207 1 343 4 93 1 301 1 81 1 346 1 12 1 
241 1 108 1 89 1 207 1 196 2 331 1 78 1 343 1 373 1 304 1 81 1 85 1 326 1 12 1 
271 1 99 1 241 1 343 1 344 1 108 1 355 1 81 1 346 1 196 1 
241 2 343 2 93 1 108 2 81 1 83 1 196 1 207 1 12 1 259 1 170 1 
241 4 14 1 352 1 108 4 207 2 196 2 259 1 48 1 343 3 301 1 93 1 81 2 346 1 85 1 12 3 348 1 
241 4 14 1 352 1 108 4 207 2 196 2 101 1 259 1 343 3 301 1 93 1 81 2 346 1 85 1 12 3 348 1 
241 1 155 1 365 1 108 1 295 1 207 1 196 1 137 2 231 1 270 1 247 2 343 1 373 1 81 1 346 1 142 1 290 1 12 1 
85 1 
295 1 137 1 60 1 102 1 247 1 198 1 238 1 252 1 239 1 
166 1 107 1 252 1 
270 1 102 1 353 1 238 1 252 1 
328 1 293 1 329 1 353 2 148 1 269 1 195 1 270 1 370 1 102 2 342 1 166 1 114 2 238 2 107 1 128 1 116 1 252 1 189 2 
367 1 217 1 25 1 349 1 
367 1 156 1 248 1 25 1 106 1 279 1 349 1 
17 1 35 1 106 1 
151 1 267 1 367 1 156 3 248 1 25 1 312 1 82 2 66 1 106 3 279 1 349 1 
265 1 367 1 156 2 248 1 25 1 106 2 314 1 279 1 349 1 
99 1 267 1 156 1 355 1 298 1 248 1 105 1 106 1 279 1 349 1 363 1 
267 1 367 1 156 1 248 1 106 1 279 1 349 1 
267 1 367 2 156 1 248 1 25 1 106 1 279 1 
267 1 367 1 156 2 205 1 79 1 248 2 125 1 106 2 279 2 349 1 
267 1 367 1 156 3 311 1 45 1 163 1 248 1 25 1 105 1 106 3 314 2 279 1 349 2 
99 1 267 1 367 1 156 2 355 2 271 1 248 1 25 1 106 2 289 1 314 1 335 1 279 1 349 1 363 1 
265 1 267 1 367 1 156 4 158 1 45 1 248 2 25 1 105 1 106 4 314 2 279 2 349 2 
267 1 367 1 156 1 248 1 25 1 106 1 279 1 349 1 
364 1 367 2 156 4 45 1 66 1 151 1 248 1 25 2 82 1 105 1 106 4 314 2 279 1 349 3 
267 1 367 1 156 2 3 1 300 1 248 1 25 1 95 1 106 2 314 1 279 1 349 1 
267 1 156 3 367 1 66 1 6 1 151 2 248 1 25 1 82 2 106 3 279 1 349 1 
175 1 37 2 305 1 349 2 
267 1 156 1 248 1 106 1 110 1 279 1 
267 1 367 1 311 1 156 2 248 1 25 1 106 2 314 1 279 1 349 1 
288 1 
267 1 367 1 156 1 248 1 25 1 106 1 279 1 349 1 
267 1 311 1 367 1 156 3 248 1 25 1 82 1 106 3 314 1 279 1 349 1 
364 1 45 1 105 1 349 1 
367 1 349 1 

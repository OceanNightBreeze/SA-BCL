#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (23,178,236,266) (23,178,236,266) 330 273 (35,182) (35,182) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (23,178,236,266) (23,178,236,266) 330 273 (35,182) (35,182) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (23,178,236,266) (23,178,236,266) 330 273 (35,182) (35,182) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (23,178,236,266) (23,178,236,266) 330 273 (35,182) (35,182) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (23,178,236,266) (23,178,236,266) 330 273 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (23,178,236,266) (23,178,236,266) 330 273 149 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (23,178,236,266) (23,178,236,266) 330 273 149 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 124 (38,279) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (76,109,140) 45 (16,121,217) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 124 (38,279) (38,279) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 124 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException (76,109,140) 45 284 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException (76,109,140) 45 284 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 124 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 122 52 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 122 52 260 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (76,109,140) 45 (16,121,217) 128 56 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (76,109,140) 45 (16,121,217) 128 56 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (76,109,140) 45 (16,121,217) 128 56 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (76,109,140) 45 (16,121,217) 128 56 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (76,109,140) 45 (16,121,217) 128 56 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (76,109,140) 45 (16,121,217) 128 56 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (76,109,140) 45 (16,121,217) 128 56 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (76,109,140) 45 (16,121,217) 128 56 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (76,109,140) 45 (16,121,217) 128 56 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (76,109,140) 45 (16,121,217) 128 56 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (76,109,140) 45 (16,121,217) 128 56 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (76,109,140) 45 (16,121,217) 128 56 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 165 3 327 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 165 3 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 165 3 327 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 165 3 327 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 165 3 327 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 124 (38,279) (38,279) 103 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 122 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 122 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 122 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 122 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 122 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 122 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 122 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException (76,109,140) 45 284 118 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException (76,109,140) 45 284 118 108 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (23,178,236,266) (23,178,236,266) 330 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (23,178,236,266) (23,178,236,266) 330 33 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2778 | = null
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | ASSIGN | 4311 | = null
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 5921 | stmt -> ;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2274 | = null
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5368 | stmt -> ;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | ASSIGN | 4735 | = null
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
236 4 291 6 104 1 273 1 62 1 82 1 84 1 134 2 35 1 64 2 63 1 194 2 221 1 22 1 141 2 23 2 178 2 263 1 182 1 266 7 247 1 74 1 330 1 212 1 
236 4 291 6 104 1 273 1 62 1 82 1 84 1 134 2 35 1 64 2 63 1 194 2 221 1 22 1 141 2 23 2 178 2 263 1 182 1 266 7 247 1 74 1 330 1 212 1 
236 4 291 6 104 1 273 1 62 1 82 1 84 1 134 2 35 1 64 2 63 1 194 2 221 1 22 1 141 2 23 2 178 2 263 1 182 1 266 7 247 1 74 1 330 1 212 1 
236 4 291 6 104 1 273 1 62 1 82 1 84 1 134 2 35 1 64 2 63 1 194 2 221 1 22 1 141 2 23 2 178 2 263 1 182 1 266 7 247 1 74 1 330 1 212 1 
236 1 291 1 23 1 273 1 178 1 266 2 63 1 330 1 
291 2 82 1 62 1 64 1 322 1 63 1 173 1 141 1 23 1 258 1 178 1 263 1 11 1 266 2 267 1 212 1 
291 3 236 1 104 1 134 1 322 1 63 1 64 2 194 1 173 1 141 1 23 2 178 2 266 3 
291 6 236 5 104 1 273 1 84 1 134 2 64 2 63 1 67 1 194 2 141 1 23 2 178 2 266 7 247 1 149 1 330 1 
291 6 236 5 104 1 273 1 84 1 134 2 64 2 63 1 67 1 194 2 141 1 23 2 178 2 266 7 247 1 149 1 330 1 
179 1 319 1 240 1 
185 1 160 2 240 1 
119 1 109 2 136 1 37 2 76 2 99 2 171 2 140 2 
30 1 216 1 136 1 300 2 37 3 171 2 140 3 87 1 175 1 41 2 92 1 262 1 10 1 95 1 99 2 313 1 154 1 155 1 274 1 189 1 109 2 321 1 68 2 117 1 69 2 119 1 243 1 120 1 329 1 72 1 285 1 209 1 332 1 125 2 76 2 289 1 167 1 
109 1 124 1 136 1 37 1 76 1 99 1 171 1 140 1 38 1 
45 1 121 1 109 1 
250 2 109 1 217 1 37 1 240 1 171 1 162 1 140 1 222 1 179 1 164 1 48 1 99 1 76 1 16 2 
250 1 188 1 191 1 335 1 16 1 
250 2 188 1 179 1 191 1 240 1 21 1 116 1 16 2 
250 1 188 1 16 1 
250 1 109 1 279 1 191 1 136 1 37 1 171 1 38 1 140 1 124 1 99 1 76 1 16 1 
240 1 
250 2 188 1 130 1 179 1 191 1 240 1 21 1 16 2 
250 5 59 2 58 2 186 1 188 2 253 2 1 1 191 2 111 1 65 1 240 1 21 1 257 1 179 1 231 1 207 1 94 1 312 1 16 5 
119 1 319 1 
109 2 193 1 37 2 171 1 140 2 119 2 233 1 99 1 76 1 
61 1 34 1 232 1 
189 1 216 1 321 1 37 1 140 1 175 1 69 1 119 1 41 1 120 1 95 1 285 1 210 1 125 1 332 1 313 1 
234 1 189 1 216 1 109 1 321 1 37 2 140 2 175 1 163 1 69 1 41 1 120 1 232 1 95 1 285 1 332 1 125 1 313 1 99 1 76 1 
163 1 119 1 109 3 37 3 171 1 76 3 99 3 140 3 
109 1 124 1 37 1 76 1 99 1 140 1 
164 1 109 1 193 1 37 1 76 1 99 1 171 1 233 1 140 1 
250 1 30 1 168 1 216 1 217 1 136 1 300 1 37 4 171 2 140 4 222 1 87 1 175 1 41 1 230 1 48 1 262 1 10 1 95 1 313 1 233 1 99 3 16 1 234 1 154 1 155 1 274 1 189 1 109 3 321 1 162 1 68 2 163 1 117 1 69 1 119 1 120 1 164 1 72 1 285 1 332 1 125 1 76 3 289 1 
163 1 45 1 109 2 284 1 37 1 76 1 99 1 140 1 
250 1 234 1 109 3 217 1 37 3 171 1 240 1 162 1 140 3 222 1 163 2 164 1 48 1 230 1 53 1 233 1 99 3 76 3 16 1 
61 1 109 2 37 2 171 1 140 2 163 1 232 1 233 1 99 2 76 2 
189 1 216 1 321 1 37 1 140 1 69 1 175 1 119 1 41 1 120 1 95 1 285 1 125 1 332 1 313 1 
129 1 276 1 189 1 321 1 37 1 140 1 69 1 175 1 119 1 41 1 120 1 95 1 125 1 332 1 313 1 
213 1 30 1 296 1 34 2 300 4 304 1 87 1 306 1 259 1 180 1 262 1 232 2 97 1 155 1 274 1 61 2 68 2 198 1 200 1 208 1 72 2 211 1 289 1 167 2 
281 1 164 1 109 1 37 1 162 1 76 1 99 1 140 1 
234 1 163 2 119 1 45 1 229 1 109 5 284 1 37 4 171 1 233 1 76 4 99 4 140 4 316 1 
109 1 124 1 37 1 76 1 99 1 140 1 
311 1 98 1 
311 1 98 1 
86 1 301 1 
86 1 301 1 
86 1 301 1 
6 1 311 1 98 1 
6 1 311 1 98 1 
6 1 311 1 98 1 
311 1 98 1 152 1 
311 1 98 1 152 1 
311 1 98 1 152 1 
7 1 311 1 98 1 
47 1 310 1 311 2 86 1 98 2 301 1 
228 1 122 1 311 1 239 1 98 1 52 1 
250 1 228 1 260 1 122 1 311 1 239 1 98 1 52 1 16 1 
62 1 221 1 212 1 
62 1 11 1 212 1 
252 1 11 1 221 2 333 1 270 1 212 3 
252 1 11 1 221 1 270 1 101 1 212 2 
252 2 11 1 221 1 270 1 212 2 
213 1 250 5 296 1 253 1 85 2 305 1 179 1 49 2 231 2 264 1 96 1 146 1 16 5 58 1 59 1 185 1 188 1 160 3 278 1 191 4 323 1 161 1 111 3 65 1 195 1 240 2 112 1 21 1 198 1 208 1 248 1 290 2 
213 3 250 9 296 3 253 2 85 6 36 1 257 1 44 1 309 1 179 1 49 6 231 6 12 5 264 2 146 4 96 1 16 9 59 2 58 2 185 3 188 6 275 1 160 9 278 2 191 7 161 3 111 8 65 1 240 5 21 1 24 1 70 1 198 3 208 3 335 5 
213 1 250 3 296 1 253 1 85 2 305 1 257 1 179 1 49 2 231 2 264 1 146 1 16 3 58 1 59 1 185 2 160 4 278 1 191 2 111 3 161 1 240 3 112 1 198 1 208 1 290 1 
213 2 250 4 296 2 253 1 85 4 36 1 305 1 257 1 179 1 309 1 49 4 231 4 264 1 146 2 16 4 58 1 59 1 185 3 160 7 278 1 191 3 111 5 161 2 240 4 112 1 24 1 198 2 208 2 290 2 
175 1 71 1 319 1 
175 1 14 1 
166 1 
175 1 189 1 
175 3 227 1 71 2 189 1 83 1 332 1 
175 1 189 1 332 1 
175 1 299 1 
57 1 156 1 131 1 159 1 300 5 114 1 306 4 198 1 200 3 123 1 208 1 72 3 331 1 287 1 127 2 167 2 315 1 
57 1 156 1 131 1 159 1 300 6 114 1 306 4 198 1 200 3 123 1 208 1 72 4 331 1 287 1 127 2 167 2 315 1 
57 1 156 1 131 1 159 1 300 5 114 1 306 4 198 1 200 3 8 1 123 1 208 1 72 3 331 1 287 1 127 2 167 2 315 1 
213 2 131 3 296 2 300 35 87 1 306 13 5 1 143 1 262 1 181 3 315 2 57 1 103 1 156 1 237 1 274 1 159 1 161 2 68 2 114 2 198 5 200 8 328 1 202 1 123 5 208 5 73 1 72 19 331 2 287 3 289 1 334 3 127 3 167 16 
249 1 131 1 300 8 87 2 306 5 5 1 262 2 315 1 156 1 274 2 159 1 68 4 114 1 198 1 200 4 123 1 204 1 208 1 72 5 331 1 287 1 289 2 127 2 167 3 
291 2 254 1 137 1 255 1 302 1 221 1 173 1 41 1 141 1 225 1 178 1 307 1 11 1 147 1 266 2 313 1 236 1 62 1 321 1 64 1 322 1 63 1 242 1 113 1 69 1 23 1 125 1 333 1 288 1 212 2 
291 3 133 1 254 1 255 1 302 1 221 1 173 1 41 1 141 1 225 1 178 1 307 1 11 1 266 3 313 1 15 1 236 2 62 1 321 1 64 1 322 1 242 1 113 1 69 1 23 1 282 1 125 1 333 1 288 1 212 2 
291 2 133 1 255 1 302 1 221 1 173 1 141 1 41 1 225 1 307 1 11 1 266 2 313 1 236 2 62 1 321 1 64 1 322 1 242 1 69 1 282 1 125 1 333 1 288 1 212 2 
291 1 189 1 158 1 321 1 302 2 242 2 175 1 39 1 69 1 141 2 41 1 42 1 23 1 178 1 9 1 145 1 27 1 266 1 95 1 125 1 313 1 288 2 15 1 
291 1 62 1 133 1 321 1 254 1 137 1 255 1 63 1 302 1 221 1 242 1 113 1 69 1 225 1 141 1 41 1 23 1 307 1 178 1 11 1 266 1 125 1 333 1 313 1 288 1 212 2 
151 1 
128 1 250 2 253 1 175 1 41 2 45 1 93 1 9 1 231 1 264 1 95 2 313 1 55 1 16 2 56 1 58 1 59 1 188 2 158 1 189 1 109 1 321 1 111 1 65 1 21 1 196 1 69 2 121 1 286 1 125 2 126 1 
128 1 56 1 250 1 45 1 121 1 109 1 286 1 196 1 16 1 
128 1 56 1 250 1 45 1 121 1 109 1 286 1 196 1 16 1 
128 1 56 1 250 1 45 1 121 1 109 1 286 1 196 1 16 1 
128 1 56 1 250 2 45 1 188 1 130 1 121 1 109 1 286 1 21 1 196 1 16 2 
250 1 59 1 58 1 56 1 128 1 109 1 253 1 65 1 196 1 45 1 121 1 286 1 16 1 
128 1 56 1 250 1 45 1 121 1 109 1 286 1 196 1 16 1 
128 1 56 1 250 1 45 1 121 1 109 1 286 1 196 1 16 1 
128 1 56 1 250 1 45 1 121 1 109 1 286 1 196 1 16 1 
128 1 56 1 250 1 45 1 121 1 109 1 286 1 196 1 16 1 
128 1 56 1 250 1 45 1 121 1 109 1 286 1 196 1 16 1 
250 1 59 1 58 1 56 1 128 1 109 1 253 1 65 1 196 1 45 1 121 1 286 1 16 1 
30 1 131 1 34 1 300 5 87 1 306 2 262 1 232 1 156 1 155 1 274 1 61 1 319 1 159 1 68 2 114 1 119 1 198 1 200 2 208 1 72 3 287 1 211 1 289 1 127 1 167 2 
213 1 30 2 293 1 296 2 170 1 34 11 300 14 87 2 176 1 306 2 262 2 181 3 232 11 235 1 154 1 106 1 155 1 274 2 61 4 318 1 161 2 68 4 119 1 198 2 200 1 123 1 208 1 73 1 329 1 72 6 334 3 289 2 167 8 
30 1 81 1 216 1 300 2 37 2 172 1 140 2 87 1 175 1 41 1 262 1 95 1 269 1 313 1 99 1 235 1 234 1 154 1 155 1 274 1 61 1 189 1 109 1 321 1 68 2 69 1 163 1 119 1 120 1 285 1 72 1 329 1 332 1 125 1 210 1 76 1 289 1 167 1 
80 2 87 3 175 2 262 3 10 2 95 1 99 1 272 2 183 1 274 3 189 2 109 1 280 1 114 1 119 1 120 2 26 2 198 3 200 4 123 4 208 3 285 2 125 3 287 1 127 1 289 3 213 2 30 3 131 1 296 2 133 1 216 2 135 1 34 7 300 19 37 3 139 2 140 3 41 3 306 8 232 7 313 2 234 1 235 1 154 1 156 1 155 3 61 7 159 1 321 2 161 2 68 6 69 3 163 1 329 1 72 10 332 2 76 1 167 9 
30 2 214 1 133 1 169 1 2 1 300 2 37 1 223 1 140 1 87 2 175 3 41 7 43 1 262 2 9 1 51 1 147 1 95 2 99 1 313 2 154 1 155 2 274 2 158 1 189 2 109 1 321 2 68 4 163 1 69 8 243 2 203 1 329 1 72 1 125 8 211 1 76 1 289 2 167 1 
213 1 30 1 296 1 34 1 300 3 220 1 37 1 171 1 140 1 87 1 306 1 262 1 232 1 99 1 233 1 235 1 155 1 274 1 61 1 109 1 161 1 68 2 198 1 200 1 208 1 72 2 76 1 289 1 167 1 
30 1 155 1 274 1 61 1 296 1 34 1 300 2 68 2 87 1 306 1 198 1 123 1 262 1 232 1 97 1 211 1 289 1 167 2 
213 1 30 1 155 1 274 1 61 1 34 1 300 2 68 2 87 1 306 1 200 1 262 1 180 1 208 1 232 1 72 2 211 1 289 1 
213 1 30 1 296 1 34 2 300 4 87 1 306 2 262 1 232 2 155 1 274 1 61 2 161 1 68 2 198 1 200 1 123 1 208 1 72 2 211 1 289 1 167 2 
30 1 155 1 274 1 61 1 296 1 169 1 34 1 300 2 68 2 87 1 306 1 198 1 123 1 262 1 232 1 97 1 289 1 167 2 
213 1 30 1 155 1 274 1 61 1 169 1 34 1 300 2 68 2 87 1 306 1 200 1 262 1 180 1 208 1 232 1 72 2 289 1 
213 1 30 1 296 1 169 1 34 2 300 4 87 1 306 2 262 1 232 2 155 1 274 1 61 2 161 1 68 2 198 1 200 1 123 1 208 1 72 2 289 1 167 2 
213 1 30 1 296 1 34 2 300 4 87 1 306 2 262 1 232 2 155 1 274 1 61 2 161 1 68 2 198 1 200 1 123 1 208 1 72 2 289 1 167 2 
30 1 216 1 300 2 37 1 140 1 87 1 175 1 41 1 262 1 10 1 95 1 313 1 154 1 155 1 274 1 189 1 321 1 68 2 69 1 119 1 120 1 329 1 285 1 72 1 332 1 125 1 289 1 167 1 
129 1 292 1 30 1 300 2 37 1 140 1 87 1 175 1 41 1 262 1 95 1 313 1 154 1 155 1 274 1 189 1 276 1 321 1 68 2 69 1 119 1 120 1 329 1 72 1 332 1 125 1 289 1 167 1 
213 1 30 1 296 1 34 2 300 4 87 1 306 2 262 1 232 2 235 1 155 1 274 1 61 2 161 1 68 2 198 1 200 1 123 1 208 1 72 2 289 1 167 2 
213 1 30 1 296 1 216 1 34 2 300 4 37 1 140 1 87 1 175 1 41 1 306 2 262 1 10 1 232 2 147 1 313 1 155 1 274 1 61 2 189 1 321 1 161 1 68 2 69 1 120 1 26 1 198 1 200 1 123 1 208 1 72 2 285 1 332 1 125 1 289 1 167 2 
213 1 30 1 296 1 34 1 300 3 37 1 171 1 140 1 87 1 306 1 262 1 232 1 99 1 233 1 235 1 155 1 274 1 61 1 109 1 161 1 324 1 68 2 198 1 123 1 208 1 72 1 76 1 289 1 167 2 
249 1 18 1 274 1 300 2 68 2 87 1 3 1 327 1 165 1 262 1 246 1 72 1 289 1 167 1 
249 1 18 1 274 1 300 2 68 2 87 1 3 2 327 1 165 2 262 1 246 1 72 1 289 1 167 1 
249 1 18 1 274 1 300 2 68 2 87 1 3 1 327 1 165 1 262 1 246 1 72 1 289 1 167 1 
249 1 18 1 274 1 300 2 68 2 87 1 3 1 327 1 165 1 262 1 246 1 72 1 289 1 167 1 
249 1 18 1 274 1 300 2 68 2 87 1 3 1 327 1 165 1 262 1 246 1 72 1 289 1 167 1 
30 1 251 1 214 1 297 1 300 2 37 2 140 2 87 1 175 1 41 2 43 1 91 1 262 1 261 1 313 1 235 1 102 1 154 1 155 1 274 1 189 1 109 2 321 1 68 2 69 2 243 2 329 1 72 1 125 2 289 1 167 1 
79 1 295 1 62 1 133 1 321 1 255 1 302 1 221 1 113 1 69 2 41 2 225 1 326 1 11 1 147 1 125 2 333 1 313 1 212 2 
215 1 295 1 62 1 133 1 321 1 255 1 302 1 221 1 113 1 69 1 41 1 225 1 11 1 125 1 333 1 313 1 212 2 
189 1 158 1 321 1 302 1 175 1 69 1 39 1 41 1 326 1 9 1 95 1 125 1 313 1 150 1 
79 1 295 1 62 1 133 1 321 1 255 1 302 1 221 1 113 1 69 1 41 1 225 1 326 1 11 1 125 1 333 1 313 1 212 2 
245 1 
179 1 319 1 231 1 207 1 1 1 111 1 240 1 
250 1 253 1 142 1 179 1 231 1 16 1 58 1 59 1 185 1 184 1 188 1 160 1 111 1 65 1 66 1 240 2 21 1 
250 5 253 4 85 6 1 1 175 10 179 2 93 1 264 2 95 1 13 1 14 3 272 2 100 2 16 5 185 6 105 2 188 5 189 3 111 9 20 2 21 3 198 2 201 2 207 1 205 1 208 2 125 3 213 2 296 2 32 2 218 1 299 2 303 1 41 3 227 1 226 2 48 2 144 2 49 6 231 8 147 1 314 1 313 4 59 4 58 4 160 12 321 3 161 2 65 4 240 8 69 3 71 2 332 3 77 2 
250 1 213 2 296 2 32 1 253 2 85 5 40 1 179 2 93 1 144 2 49 5 181 1 231 5 264 1 148 1 16 1 58 2 59 2 317 1 185 3 188 1 277 1 160 6 192 1 111 8 161 2 65 2 240 5 21 1 115 1 199 1 198 2 208 2 73 1 334 1 
250 1 131 1 253 1 136 1 37 1 171 1 140 1 38 1 144 2 231 1 99 1 16 1 58 1 59 1 103 1 109 1 279 1 190 1 111 2 65 1 114 1 198 1 124 1 208 1 287 1 76 1 
59 1 58 1 253 1 1 1 111 1 65 1 240 1 179 1 207 1 231 1 
213 2 185 5 296 2 32 1 160 10 85 5 161 2 111 5 240 5 198 2 144 2 49 5 231 5 208 2 272 1 
250 1 188 1 179 1 240 1 21 1 16 1 
250 3 253 2 298 1 218 2 175 1 41 4 257 1 93 2 9 1 231 2 264 2 95 2 313 1 314 1 55 1 16 3 58 2 59 2 188 4 189 1 158 1 321 1 111 2 65 1 21 2 69 4 25 1 125 4 126 1 
30 1 216 1 136 1 300 1 37 3 171 2 140 3 87 1 175 1 41 1 262 1 10 1 95 1 99 2 313 1 154 1 155 1 274 1 189 1 109 2 321 1 68 2 69 1 117 1 119 1 120 1 72 1 285 1 125 1 332 1 76 2 289 1 
253 1 85 2 179 1 144 1 93 1 49 2 231 1 264 1 58 1 59 1 185 2 160 4 111 2 65 1 240 3 127 1 
122 1 239 1 
122 1 239 1 
122 1 239 1 
122 1 239 1 
122 1 239 1 
122 1 239 1 
122 1 239 1 
122 1 239 1 
311 1 98 1 
156 1 274 2 131 1 159 1 300 7 68 4 114 1 87 2 306 3 5 1 198 1 200 2 123 1 262 2 208 1 72 4 287 1 127 1 289 2 167 3 
306 2 156 1 198 1 131 1 200 2 319 1 159 1 208 1 72 3 300 5 287 1 127 1 167 2 114 1 
213 1 274 1 296 1 161 1 300 4 68 2 87 1 306 2 198 1 200 1 262 1 123 1 208 1 72 2 265 1 289 1 167 2 
213 1 293 1 296 1 300 7 161 1 306 2 198 1 200 1 123 1 181 1 208 1 73 1 72 4 334 2 167 3 
213 2 131 2 293 1 296 2 170 1 300 22 87 2 306 9 5 2 262 2 181 2 156 1 274 2 318 1 159 1 161 2 68 4 114 1 198 3 200 5 123 4 206 1 208 3 72 12 287 2 127 1 334 2 289 2 167 10 
72 1 300 1 334 1 
181 1 300 1 167 1 
213 1 274 1 296 1 300 6 161 1 68 2 87 1 306 3 198 1 200 2 262 1 123 1 208 1 265 1 72 3 289 1 272 1 167 3 
249 1 213 2 296 2 300 12 87 1 306 2 262 1 181 1 148 1 274 1 277 1 192 1 161 2 68 2 115 1 198 2 199 1 200 1 123 1 208 2 72 6 73 1 334 1 289 1 167 6 
131 1 300 6 114 1 306 2 198 1 200 1 123 1 208 1 72 3 287 1 167 3 
156 1 131 1 274 1 159 1 300 3 68 2 87 1 306 2 5 1 200 1 123 1 262 1 206 1 72 2 287 1 289 1 167 1 
249 1 103 1 274 1 131 2 300 10 68 2 87 1 114 1 306 5 198 2 200 3 262 1 123 2 208 2 72 5 287 2 289 1 167 5 
249 1 274 1 296 1 300 2 68 2 87 1 306 1 198 1 262 1 123 1 289 1 167 2 
213 1 249 1 274 1 296 1 161 1 300 4 68 2 87 1 306 2 198 1 200 1 262 1 123 1 208 1 72 2 289 1 167 2 
249 1 274 3 131 1 300 3 68 6 87 3 306 2 5 1 200 1 262 3 123 1 206 1 72 2 268 1 287 1 289 3 167 1 
249 1 213 3 131 3 293 1 296 3 300 33 87 5 306 12 5 2 262 5 181 3 265 1 268 1 156 1 237 1 274 5 159 1 161 3 68 10 114 2 198 5 328 1 200 7 202 1 123 5 206 1 208 5 72 18 73 1 287 3 127 1 334 4 289 5 167 15 
249 1 131 1 300 7 87 1 306 2 262 1 181 1 156 1 274 1 159 1 68 2 115 1 114 1 198 1 200 2 208 1 72 4 73 1 287 1 127 1 334 1 289 1 167 3 
249 1 131 1 293 1 296 1 300 10 87 2 306 3 262 2 181 1 265 1 156 1 274 2 159 1 161 1 68 4 114 1 115 1 198 2 200 2 123 1 208 1 72 5 73 1 287 1 127 1 334 2 289 2 167 5 
249 1 213 2 131 1 296 2 300 18 87 3 306 4 5 1 262 3 181 1 265 1 148 1 156 1 274 3 159 1 277 1 192 1 161 2 68 6 114 1 115 1 199 1 198 3 200 3 123 1 208 3 72 10 73 1 287 1 127 1 334 1 289 3 167 8 
249 1 213 1 131 1 296 2 300 16 87 3 306 5 5 1 262 3 181 1 265 1 148 1 156 1 274 3 159 1 277 1 192 1 161 2 68 6 114 1 115 1 198 3 199 1 200 3 123 2 208 2 72 7 73 1 287 1 127 1 334 1 289 3 167 9 
249 1 131 1 300 7 87 1 306 2 262 1 181 1 156 1 274 1 159 1 68 2 115 1 114 1 198 1 200 2 208 1 72 4 73 1 287 1 127 1 334 1 289 1 167 3 
249 1 213 2 296 2 300 12 87 1 306 2 262 1 181 1 148 1 274 1 277 1 192 1 161 2 68 2 115 1 198 2 199 1 200 1 123 1 208 2 72 6 73 1 334 1 289 1 167 6 
249 1 213 1 131 1 296 2 300 17 87 4 306 5 5 2 262 4 181 1 265 1 148 1 156 1 274 4 159 1 277 1 192 1 161 2 68 8 114 1 115 1 199 1 198 3 200 3 123 2 208 2 72 8 73 1 287 1 127 1 334 1 289 4 167 9 
249 1 213 2 296 3 300 16 87 4 306 6 5 2 262 4 181 1 148 1 268 1 274 4 277 1 192 1 161 3 68 8 115 1 199 1 198 3 200 3 123 3 208 2 72 7 73 1 334 1 289 4 167 9 
156 2 131 3 159 1 300 7 114 1 306 6 198 1 200 3 123 3 208 1 72 4 287 3 167 3 
249 1 213 1 131 1 296 2 300 17 87 4 306 4 5 2 262 4 181 1 148 1 268 1 156 1 274 4 159 1 277 1 192 1 161 2 68 8 114 1 115 1 199 1 198 3 200 3 123 1 208 2 72 8 73 1 287 1 127 1 334 1 289 4 167 9 
118 1 45 1 109 1 284 1 
118 1 90 1 224 1 45 1 107 1 60 1 108 1 109 1 284 1 
175 1 69 1 41 1 189 1 158 1 319 1 9 1 321 1 95 1 125 1 313 1 
189 1 109 1 216 1 321 1 37 2 140 2 175 1 163 1 69 1 119 1 41 1 120 1 95 1 332 1 125 1 313 1 99 1 76 1 
216 1 218 1 299 1 37 2 140 2 222 1 175 3 41 1 99 1 313 1 189 2 109 2 321 1 162 1 69 1 163 1 119 1 120 1 164 1 201 1 125 1 332 2 76 2 
129 1 218 1 299 1 37 2 140 2 222 1 175 3 41 2 177 1 99 1 313 1 189 2 109 2 321 1 162 1 69 2 163 1 119 1 120 1 164 1 201 1 125 2 332 2 76 2 
250 2 19 1 188 1 189 1 218 1 321 1 299 1 240 1 256 1 69 3 175 4 41 3 177 1 179 1 71 1 48 1 201 1 95 1 332 1 125 3 313 1 14 1 16 2 
250 2 188 1 189 1 218 1 321 1 299 1 240 1 69 3 175 4 41 3 177 1 179 1 71 1 48 1 201 1 95 1 332 1 125 3 313 1 14 1 16 2 100 1 
69 1 41 1 321 1 2 1 125 1 313 1 
78 1 189 2 133 1 321 2 2 1 110 1 223 1 69 7 175 3 41 6 243 1 227 1 43 1 203 1 51 1 147 1 95 2 75 1 125 7 332 1 313 3 
30 2 251 1 131 1 216 1 34 1 300 5 37 2 139 1 140 2 87 2 175 1 41 1 306 2 262 2 10 1 232 1 147 1 313 1 99 1 235 1 156 1 155 2 274 2 61 1 189 1 159 1 109 1 321 1 68 4 114 1 163 1 69 1 119 1 120 1 26 1 198 1 200 2 208 1 72 3 285 1 332 1 125 1 287 1 76 1 127 1 289 2 167 2 
250 3 253 2 1 1 175 2 41 1 179 1 48 1 231 1 95 1 314 1 14 1 16 3 100 1 58 2 59 2 105 1 188 2 191 1 111 1 65 2 20 1 240 1 21 1 69 1 71 1 207 1 125 1 77 1 
175 2 69 2 41 2 227 1 71 1 189 1 321 1 205 1 2 1 147 1 332 1 125 2 313 2 
158 1 189 1 321 1 69 4 175 1 41 4 177 1 244 1 9 1 95 1 147 1 125 4 313 1 
78 1 187 1 189 1 218 1 135 1 321 1 238 1 69 2 175 1 41 2 75 1 125 2 332 1 313 2 
69 1 225 1 41 1 62 1 321 1 11 1 95 1 125 1 313 1 212 1 
175 1 69 2 102 1 41 2 43 1 189 1 133 1 321 1 147 1 125 2 313 1 
158 1 189 2 218 1 321 2 223 1 69 5 175 3 41 4 43 1 244 1 9 1 203 1 95 1 147 1 125 5 313 2 
158 1 189 2 218 1 321 2 223 1 69 5 175 3 41 4 43 1 244 1 9 1 95 1 147 1 125 5 313 2 29 1 
129 1 189 1 109 1 321 1 37 2 140 2 175 1 163 1 69 1 119 1 41 1 120 1 95 1 332 1 125 1 313 1 99 1 76 1 
78 1 189 1 218 1 321 1 110 1 69 1 175 1 41 1 227 1 75 1 125 1 332 1 313 2 
89 1 119 1 197 1 132 1 50 1 
250 2 0 1 31 1 294 1 132 2 217 1 191 1 240 1 162 1 222 1 89 1 119 1 197 2 179 1 164 1 48 1 230 1 50 2 16 2 
297 1 109 1 37 1 140 1 89 1 197 1 91 1 261 1 50 1 
89 1 31 1 294 1 
319 1 64 1 322 1 173 1 
291 1 23 1 178 1 266 1 64 1 322 1 173 1 
291 1 141 1 288 1 
291 3 64 1 63 1 219 1 322 1 241 1 173 1 23 1 178 1 263 2 28 1 266 3 
236 1 291 1 23 1 178 1 266 2 330 1 
291 1 62 1 134 1 63 1 64 1 221 1 23 1 46 1 178 1 266 1 212 1 
291 1 23 1 178 1 266 1 64 1 322 1 63 1 
291 1 23 1 178 1 266 1 322 2 63 1 173 1 
291 2 64 1 322 1 63 1 138 1 88 1 23 2 178 2 266 2 271 1 
291 3 236 2 84 1 134 1 322 1 63 1 64 2 194 1 173 1 23 1 178 1 266 3 247 1 
291 2 153 1 236 1 62 1 64 1 322 1 63 1 221 1 173 1 23 1 178 1 11 1 266 2 333 1 212 2 
236 1 291 1 23 1 178 1 33 1 266 2 63 1 330 1 
291 1 23 1 178 1 266 1 64 1 322 1 63 1 173 1 
236 2 291 4 134 1 219 1 322 2 64 3 194 1 241 1 173 2 4 1 23 1 178 1 263 1 266 4 
291 2 236 1 320 1 64 1 322 1 63 1 67 1 173 1 23 1 178 1 266 2 54 1 
291 3 219 1 64 1 63 1 322 1 241 2 173 1 23 1 178 1 308 1 263 2 266 3 
17 1 325 2 283 1 64 2 
291 1 23 1 178 1 157 1 266 1 63 1 
236 1 291 2 23 1 178 1 266 2 64 1 322 1 247 1 63 1 173 1 
174 1 
291 1 23 1 178 1 266 1 64 1 322 1 63 1 173 1 
236 1 291 3 63 1 322 1 64 1 173 1 23 1 178 1 263 1 266 3 247 1 
4 1 134 1 64 1 194 1 
64 1 322 1 

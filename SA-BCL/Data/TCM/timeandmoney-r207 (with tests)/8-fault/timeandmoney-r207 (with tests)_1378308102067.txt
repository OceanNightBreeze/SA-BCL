#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (126,220) (126,220) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (126,220) (126,220) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (126,220) (126,220) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (126,220) (126,220) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.IllegalArgumentException 208 298 319 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.IllegalArgumentException 208 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 208 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 208 298 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 208 298 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object; | ASSIGN | 1414 | = null
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | RETURN | 994 | return null
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 3976 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7629 | return null
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONSTANT | 948 | 1 -> 0
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 2635 | if (x) -> if (!x)
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1079 | > -> ==
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
321 1 212 1 30 1 98 1 126 1 41 1 279 1 162 1 121 1 220 1 292 1 221 1 49 1 
321 1 212 1 30 1 98 1 126 1 41 1 279 1 162 1 121 1 220 1 221 1 292 1 49 1 
321 1 212 1 30 1 98 1 126 1 41 1 279 1 162 1 121 1 220 1 221 1 292 1 49 1 
321 1 212 1 30 1 98 1 126 1 41 1 279 1 162 1 121 1 220 1 221 1 292 1 49 1 
0 3 135 1 169 1 212 1 106 3 227 1 96 1 98 1 342 2 279 1 162 4 121 1 35 1 187 1 376 2 221 4 292 1 239 1 
0 1 321 1 368 1 212 1 96 1 98 1 242 1 315 1 279 1 162 2 121 1 35 1 235 1 221 2 239 1 49 1 
0 2 321 1 135 1 212 2 106 1 215 1 279 2 162 3 121 1 35 1 376 1 221 3 239 1 
0 5 135 3 321 1 227 1 96 1 98 1 279 2 162 9 121 1 187 1 239 1 169 1 106 7 212 2 190 1 107 1 213 1 215 1 314 1 342 2 35 1 376 4 221 9 292 1 
0 5 135 3 321 1 227 1 96 1 98 1 279 2 162 9 121 1 187 1 239 1 169 1 106 7 212 2 190 1 107 1 213 1 215 1 314 1 342 2 35 1 376 4 221 9 292 1 
44 1 64 1 261 1 
84 2 64 1 93 1 
200 2 159 1 248 2 178 2 264 2 240 2 133 2 101 1 
274 1 200 2 116 1 72 1 159 1 40 1 297 1 329 1 300 1 351 1 302 1 281 1 78 2 12 1 238 2 145 1 210 1 240 3 101 1 148 1 189 1 307 1 241 2 152 1 191 1 264 2 287 1 33 1 265 2 18 1 62 2 345 1 346 1 248 2 199 1 178 3 133 2 
200 1 291 1 159 1 248 1 178 1 264 1 328 1 240 1 133 1 250 1 
320 1 275 1 230 1 214 1 136 1 264 1 64 1 219 1 178 1 361 1 240 1 261 1 305 1 250 1 
200 1 275 2 230 1 214 2 136 1 264 1 248 1 64 1 219 1 178 1 361 1 133 1 240 1 261 1 250 1 
275 1 164 1 97 1 214 1 339 1 
143 1 275 2 164 1 64 1 331 1 214 2 339 1 261 1 
275 1 164 1 214 1 
275 1 200 1 159 1 214 1 339 1 328 1 264 1 291 1 248 1 188 1 178 1 133 1 240 1 250 1 
64 1 
275 2 164 1 64 1 331 1 296 1 214 2 339 1 261 1 
275 5 214 5 339 2 15 2 327 1 205 1 58 1 372 1 160 1 194 1 37 1 164 2 64 1 331 1 90 2 293 1 68 1 92 2 261 1 
200 1 116 1 152 1 72 1 39 1 40 1 297 1 264 1 33 1 329 1 343 1 265 1 18 1 351 1 355 1 62 1 248 1 238 1 178 2 240 2 
44 1 101 1 
150 1 200 1 264 2 248 1 178 2 124 1 240 2 133 1 101 2 
255 1 63 1 39 1 
116 1 72 1 152 1 40 1 297 1 265 1 329 1 33 1 18 1 351 1 62 1 238 1 178 1 13 1 240 1 101 1 
320 1 200 4 366 1 324 1 264 5 343 1 355 2 359 1 248 4 178 5 124 1 240 5 133 1 101 1 
200 2 60 1 291 1 248 2 178 2 264 2 240 2 250 1 
200 3 355 1 248 3 178 3 264 3 133 1 240 3 101 1 
200 1 291 1 248 1 178 1 264 1 240 1 250 1 
150 1 200 1 248 1 178 1 124 1 264 1 240 1 133 1 250 1 
274 1 200 3 275 1 116 1 72 1 230 1 252 1 229 1 159 1 40 1 297 1 136 1 329 1 300 1 351 1 302 1 355 1 78 1 12 1 238 1 124 1 361 1 210 1 240 4 101 1 189 1 307 1 241 2 152 1 214 1 191 1 264 3 287 1 33 1 343 1 265 1 18 1 62 1 248 3 219 1 199 1 178 4 133 2 250 1 
320 1 200 1 355 1 248 1 324 1 178 2 264 2 240 2 101 1 
275 1 200 3 252 1 230 1 214 1 136 1 264 3 343 1 355 2 248 3 144 1 64 1 219 1 124 1 361 1 178 3 133 1 240 3 250 1 
200 2 39 1 264 2 355 1 63 1 248 2 124 1 178 2 133 1 240 2 
116 1 72 1 152 1 297 1 40 1 265 1 329 1 33 1 18 1 351 1 62 1 238 1 178 1 240 1 101 1 
116 1 152 1 40 1 265 1 253 1 329 1 33 1 18 1 351 1 62 1 236 1 238 1 178 1 240 1 101 1 
223 1 134 1 158 1 71 1 228 1 39 2 300 1 255 2 302 1 281 2 78 4 210 1 81 1 189 1 52 1 338 1 241 2 55 1 191 1 287 2 218 1 63 2 199 1 69 1 
200 1 60 1 248 1 136 1 178 1 264 1 240 1 250 1 
34 1 341 1 
34 1 341 1 
312 1 222 1 
312 1 222 1 
312 1 222 1 
34 1 54 1 341 1 
34 1 243 1 341 1 
34 2 283 1 312 1 278 1 222 1 341 2 
34 1 54 1 341 1 
34 1 54 1 341 1 
267 1 34 1 341 1 
267 1 34 1 341 1 
267 1 34 1 341 1 
181 1 200 2 275 1 23 1 24 1 140 1 207 1 26 1 79 1 165 1 334 1 240 2 101 1 309 1 214 1 243 1 264 2 341 1 32 1 245 1 34 1 248 2 379 1 178 2 
364 2 275 2 309 2 214 2 341 2 76 1 32 2 140 1 120 1 374 1 245 2 34 2 111 1 270 1 283 1 64 1 79 2 318 1 379 3 
96 1 98 1 292 1 
315 1 96 1 98 1 
315 1 226 1 98 3 232 1 292 2 272 1 
315 1 98 2 232 1 292 1 260 1 272 1 
315 1 98 2 292 1 232 1 272 2 
223 1 275 5 295 1 228 1 24 1 327 2 119 1 352 2 254 2 99 1 301 1 164 1 165 1 331 1 334 1 284 1 261 1 84 3 338 1 214 5 339 4 217 1 15 1 58 1 372 3 197 1 90 1 64 2 113 2 92 1 93 1 69 1 
223 3 275 9 201 1 295 3 228 3 325 1 97 5 327 6 119 2 352 6 254 6 164 6 331 1 334 4 284 1 261 1 83 1 102 1 84 9 338 3 214 9 339 7 217 2 15 2 58 1 372 8 61 5 347 1 64 5 90 2 66 1 68 1 92 2 93 3 69 3 
223 1 275 3 295 1 228 1 327 2 119 1 254 2 352 2 301 1 334 1 261 1 84 4 338 1 214 3 339 2 217 1 15 1 372 3 197 1 64 3 90 1 113 1 92 1 68 1 93 2 69 1 
223 2 275 4 295 2 228 2 325 1 327 4 119 1 352 4 254 4 301 1 334 2 261 1 83 1 102 1 84 7 338 2 214 4 217 1 339 3 15 1 372 5 197 1 64 4 90 1 113 2 92 1 68 1 93 3 69 2 
44 1 10 1 40 1 
175 1 40 1 
180 1 
33 1 18 1 40 1 
40 1 139 1 
18 1 40 1 
33 1 18 1 365 1 10 2 263 1 40 3 
223 1 294 1 367 1 338 1 3 1 55 2 31 1 184 2 287 3 128 1 218 3 163 1 269 1 281 4 360 1 78 7 348 1 
223 1 294 1 367 1 338 1 3 1 55 2 31 1 184 2 287 3 128 1 218 3 163 1 269 1 281 4 360 1 78 7 348 1 
223 1 294 1 367 1 338 1 3 1 55 2 31 1 184 2 287 3 128 1 218 3 163 1 269 1 281 4 360 1 78 7 348 1 167 1 
223 4 157 1 294 5 295 3 228 3 3 2 326 1 184 3 142 1 302 1 163 2 25 1 360 1 281 16 78 31 210 1 149 1 189 1 367 2 241 2 338 4 171 3 55 5 31 1 108 4 173 1 192 1 128 1 287 15 218 10 269 1 199 1 348 2 69 3 
223 1 294 1 3 1 184 2 302 2 163 1 25 1 281 5 360 1 78 9 210 2 189 2 306 1 367 1 338 1 241 4 310 1 55 3 31 1 287 4 218 4 269 1 199 2 348 1 
0 1 38 1 321 1 116 1 226 1 96 1 98 2 206 1 329 1 279 1 162 2 121 1 46 1 238 1 239 1 285 1 106 1 53 1 212 1 85 1 56 1 265 1 315 1 193 1 35 1 62 1 292 1 221 2 179 1 273 1 
0 1 38 1 321 1 116 1 226 1 96 1 231 1 98 2 329 1 279 1 162 3 46 1 238 1 239 1 285 1 212 1 106 2 85 1 56 1 265 1 315 1 344 1 193 1 35 1 62 1 36 1 292 1 221 3 179 1 273 1 
0 1 38 1 321 1 116 1 226 1 231 1 96 1 98 2 329 1 162 2 46 1 238 1 239 1 285 1 106 2 56 1 265 1 315 1 193 1 35 1 62 1 36 1 221 2 292 1 179 1 
116 1 321 2 40 1 329 1 279 1 351 1 162 1 257 1 122 1 303 1 238 1 285 2 212 1 265 1 18 1 344 1 193 2 316 1 62 1 221 1 179 2 131 1 94 1 
38 1 321 1 116 1 226 1 96 1 231 1 98 2 206 1 329 1 279 1 162 1 121 1 46 1 238 1 285 1 212 1 85 1 56 1 265 1 315 1 193 1 62 1 292 1 221 1 179 1 273 1 
4 1 
95 1 320 1 182 2 275 5 322 4 230 1 40 1 136 1 327 2 329 1 8 1 332 2 331 3 238 2 240 1 51 1 105 1 340 1 15 1 58 1 18 1 62 2 64 2 250 1 116 1 117 2 202 1 22 1 119 1 77 2 351 2 256 2 356 1 122 1 164 6 361 1 362 1 261 1 305 1 84 2 369 1 214 5 216 2 264 1 371 1 372 2 265 2 87 2 90 1 219 1 129 1 178 1 92 1 93 2 94 1 
320 1 95 1 275 3 322 2 230 1 22 1 296 1 136 1 8 1 356 1 164 2 331 1 361 1 240 1 305 1 51 1 214 3 216 1 264 1 219 1 178 1 250 1 
320 1 95 1 275 3 182 1 322 3 230 1 22 1 296 1 136 1 8 1 356 1 164 1 331 1 361 1 240 1 305 1 261 1 51 1 214 3 264 1 219 1 64 1 178 1 250 1 
320 1 95 1 275 3 182 1 322 3 230 1 22 1 296 1 136 1 8 1 356 1 164 2 331 1 332 1 361 1 240 1 305 1 261 1 51 1 214 3 216 1 264 1 219 1 64 1 178 1 250 1 
320 1 95 1 275 3 322 2 230 1 22 1 296 1 136 1 298 1 8 1 356 1 208 1 164 3 331 1 332 2 361 1 240 1 305 1 51 1 214 3 216 2 264 1 219 1 178 1 319 1 250 1 
320 1 95 1 275 4 182 2 322 4 230 1 136 1 327 1 8 1 331 2 332 2 240 1 51 1 15 1 58 1 64 2 250 1 117 2 22 1 77 2 256 2 356 1 164 4 361 1 305 1 261 1 84 2 369 1 214 4 216 2 264 1 371 1 372 1 87 2 219 1 90 1 129 1 178 1 92 1 93 2 
95 1 320 1 275 2 51 1 322 2 230 1 22 1 214 2 136 1 264 1 8 1 356 1 208 1 219 1 361 1 178 1 240 1 250 1 305 1 
95 1 320 1 275 2 51 1 322 2 230 1 22 1 214 2 136 1 264 1 8 1 356 1 208 1 219 1 361 1 178 1 240 1 250 1 305 1 
320 1 95 1 182 2 275 4 322 4 230 1 22 1 136 1 73 2 327 1 256 2 8 1 356 1 164 4 100 1 332 2 331 2 361 1 363 1 240 1 146 1 261 1 305 1 51 1 84 2 153 1 369 1 214 4 216 2 15 1 264 1 58 1 372 1 87 2 64 1 219 1 90 1 178 1 92 1 21 2 250 1 
95 1 320 1 182 1 275 2 51 1 322 3 230 1 22 1 214 2 216 1 136 1 298 1 264 1 8 1 356 1 208 1 164 1 332 1 219 1 361 1 178 1 240 1 250 1 305 1 
95 1 320 1 182 1 275 2 51 1 322 3 230 1 22 1 214 2 216 1 136 1 298 1 264 1 8 1 356 1 208 1 164 1 332 1 219 1 361 1 178 1 240 1 250 1 305 1 
320 1 95 1 275 4 182 2 322 4 230 1 136 1 327 1 8 1 331 2 332 2 240 1 51 1 153 1 15 1 58 1 64 1 21 2 250 1 22 1 73 2 256 2 356 1 164 4 361 1 305 1 261 1 84 2 369 1 214 4 216 2 264 1 372 1 87 2 219 1 90 1 129 1 178 1 92 1 
223 1 71 1 39 1 3 1 184 1 300 1 44 1 255 1 302 1 360 1 281 3 78 6 210 1 101 2 189 1 241 2 338 1 55 2 31 1 191 1 287 3 218 2 269 1 63 1 199 1 348 1 
223 1 274 1 294 1 157 1 295 2 228 1 39 11 233 1 142 1 300 1 255 11 302 2 281 8 78 14 210 2 101 1 189 2 125 1 170 1 241 4 338 2 171 3 55 1 191 2 313 1 108 3 287 6 218 2 346 1 63 4 199 2 115 1 69 2 
274 1 200 1 116 1 72 1 40 1 297 1 329 1 351 1 300 1 302 1 355 1 281 1 238 1 78 2 13 1 27 1 210 1 240 2 147 1 101 1 189 1 125 1 152 1 151 1 241 2 191 1 264 1 33 1 265 1 343 1 287 1 18 1 62 1 63 1 248 1 346 1 199 1 178 2 
223 3 274 1 276 1 228 2 39 7 231 1 3 1 40 2 184 1 329 2 281 10 238 3 240 3 101 2 189 3 103 2 241 6 152 2 338 3 55 4 191 3 287 10 343 1 18 2 110 2 62 3 346 1 248 1 63 7 199 3 348 1 69 2 294 4 200 1 116 2 295 2 72 2 297 2 351 1 300 3 255 7 302 3 355 1 360 1 78 20 210 3 125 1 307 2 370 1 31 1 264 1 265 3 33 2 266 2 218 8 269 1 178 3 378 2 380 1 
251 1 274 1 71 1 200 1 116 2 231 1 40 3 5 1 75 1 329 2 351 2 300 2 302 2 355 1 122 1 281 1 238 8 78 2 210 2 240 1 148 2 189 2 53 1 241 4 155 1 172 1 191 2 264 1 57 1 265 8 287 1 18 2 62 7 248 1 346 1 178 1 199 2 130 1 94 1 
223 1 200 1 295 1 228 1 39 1 141 1 300 1 255 1 302 1 281 1 78 3 124 1 210 1 240 1 189 1 125 1 241 2 338 1 55 1 191 1 264 1 287 2 218 1 63 1 248 1 199 1 178 1 133 1 69 1 
294 1 189 1 134 1 71 1 241 2 338 1 39 1 191 1 300 1 218 1 255 1 302 1 63 1 281 2 78 2 199 1 210 1 69 1 
223 1 189 1 71 1 241 2 228 1 39 1 55 1 191 1 287 2 300 1 218 1 255 1 302 1 63 1 78 2 199 1 210 1 81 1 
223 1 294 1 71 1 295 1 228 1 39 2 300 1 255 2 302 1 281 2 78 4 210 1 189 1 338 1 241 2 55 1 191 1 287 2 218 2 63 2 199 1 69 1 
294 1 189 1 134 1 241 2 338 1 39 1 191 1 57 1 300 1 218 1 255 1 302 1 63 1 281 2 78 2 199 1 210 1 69 1 
223 1 189 1 241 2 228 1 39 1 55 1 191 1 57 1 287 2 300 1 218 1 255 1 302 1 63 1 78 2 199 1 210 1 81 1 
223 1 294 1 295 1 228 1 39 2 300 1 255 2 302 1 281 2 78 4 210 1 189 1 338 1 241 2 55 1 191 1 57 1 287 2 218 2 63 2 199 1 69 1 
223 1 294 1 189 1 295 1 228 1 241 2 338 1 39 2 55 1 191 1 287 2 300 1 218 2 255 2 302 1 63 2 281 2 78 4 199 1 210 1 69 1 
274 1 116 1 72 1 297 1 40 1 329 1 351 1 300 1 302 1 281 1 78 2 238 1 210 1 240 1 101 1 189 1 307 1 152 1 241 2 191 1 33 1 265 1 287 1 18 1 62 1 346 1 178 1 199 1 
274 1 116 1 40 1 42 1 329 1 253 1 351 1 300 1 302 1 236 1 281 1 78 2 238 1 210 1 240 1 101 1 189 1 152 1 241 2 191 1 33 1 265 1 287 1 18 1 62 1 346 1 178 1 199 1 
223 1 294 1 295 1 228 1 39 2 300 1 255 2 302 1 281 2 78 4 210 1 189 1 125 1 338 1 241 2 55 1 191 1 287 2 218 2 63 2 199 1 69 1 
223 1 294 1 116 1 295 1 228 1 72 1 39 2 297 1 40 1 329 1 300 1 255 2 302 1 281 2 78 4 238 1 210 1 240 1 189 1 307 1 103 1 53 1 338 1 152 1 241 2 55 1 191 1 287 2 33 1 265 1 18 1 218 2 62 1 63 2 178 1 199 1 69 1 
223 1 294 1 200 1 295 1 228 1 39 1 300 1 255 1 302 1 281 2 78 3 124 1 210 1 240 1 189 1 125 1 241 2 338 1 16 1 191 1 264 1 287 1 218 1 248 1 63 1 199 1 178 1 133 1 69 1 
223 1 157 1 294 1 295 1 228 1 6 1 142 1 302 2 357 1 281 4 78 9 48 1 210 2 168 1 189 2 306 1 104 1 241 4 338 1 171 1 55 1 108 2 287 5 288 1 156 1 218 2 199 2 69 1 
223 1 157 1 294 1 295 1 228 1 6 1 142 1 302 2 357 1 281 4 78 9 48 1 210 2 168 1 189 2 306 1 104 1 241 4 338 1 171 1 55 1 108 2 287 5 288 1 156 1 218 2 199 2 69 1 
223 7 157 2 294 6 295 6 228 6 3 1 350 1 184 1 6 1 185 1 161 1 142 2 45 1 302 2 25 1 358 1 357 3 360 1 281 24 78 46 48 1 210 2 168 1 82 1 189 2 306 1 104 1 241 4 338 7 171 4 55 6 31 1 313 2 108 4 287 22 288 1 218 12 269 1 199 2 348 1 69 6 
223 2 157 1 294 2 295 2 228 2 6 1 142 1 186 1 302 2 357 1 281 6 78 13 48 1 210 2 29 1 168 1 189 2 306 1 104 1 241 4 338 2 171 1 55 2 108 2 287 7 288 1 156 1 218 4 199 2 69 2 
223 1 294 1 295 2 228 1 350 1 6 1 185 1 161 1 142 2 45 1 302 3 25 2 357 3 358 1 281 11 78 20 48 1 210 3 168 2 82 1 189 3 306 1 104 1 241 6 338 2 171 2 55 1 108 2 287 9 288 2 218 2 199 3 69 2 
374 1 245 1 34 1 309 1 270 1 283 1 79 1 377 1 341 1 32 1 
207 1 243 1 
43 1 245 1 34 1 337 1 309 1 1 1 79 1 341 1 32 1 
54 1 311 1 
267 1 11 1 278 1 
364 1 275 1 309 1 214 1 341 1 76 1 140 1 32 1 120 1 374 1 245 1 34 1 111 1 270 1 283 1 64 1 79 1 379 2 
364 1 275 1 309 1 214 1 341 1 76 1 140 1 32 1 120 1 374 1 245 1 34 1 111 1 270 1 283 1 64 1 79 1 379 2 
364 1 275 1 309 1 214 1 341 1 76 1 140 1 32 1 120 1 374 1 245 1 34 1 111 1 270 1 283 1 64 1 79 1 379 2 
54 1 311 1 278 1 
54 1 311 1 278 1 
267 1 11 1 
267 1 11 1 278 1 
181 1 26 1 
181 1 275 1 200 2 23 1 24 1 7 1 120 1 207 1 26 1 79 1 165 1 334 1 240 2 101 1 364 1 309 1 214 1 339 1 243 1 264 2 341 1 32 1 245 1 34 1 248 2 178 2 379 1 
251 1 274 1 116 1 40 1 329 1 300 1 302 1 9 1 281 1 238 2 78 2 210 1 240 2 148 2 189 1 125 1 241 2 191 1 286 1 264 2 17 1 265 2 287 1 18 1 62 2 346 1 178 2 199 1 130 1 132 1 20 1 
116 1 226 1 53 1 323 1 85 1 96 1 231 1 98 2 74 1 56 1 315 1 329 1 265 2 280 1 193 1 46 1 62 2 238 2 292 1 
116 1 226 1 85 1 96 1 231 1 98 2 74 1 56 1 299 1 315 1 265 1 329 1 193 1 46 1 62 1 238 1 292 1 
116 1 323 1 40 1 329 1 265 1 18 1 351 1 193 1 316 1 62 1 122 1 238 1 271 1 94 1 
116 1 226 1 323 1 85 1 96 1 231 1 98 2 74 1 56 1 315 1 265 1 329 1 280 1 193 1 46 1 62 1 238 1 292 1 
237 1 
372 1 44 1 37 1 64 1 327 1 293 1 261 1 
275 1 117 1 327 1 77 1 164 1 331 1 261 1 84 1 214 1 15 1 371 1 58 1 372 1 90 1 64 2 92 1 93 1 
223 2 275 5 224 2 228 2 40 10 139 2 327 8 329 3 10 2 238 3 331 3 14 2 336 1 53 1 338 2 340 1 15 4 244 1 58 4 18 3 289 2 110 2 19 1 62 3 195 2 196 1 65 2 64 8 293 1 69 2 116 4 295 2 349 2 119 2 351 1 254 6 352 6 354 2 164 5 361 2 304 1 261 2 365 1 84 12 214 5 372 9 33 3 265 3 373 2 175 3 37 1 90 4 92 4 93 6 
223 2 275 1 295 2 228 2 350 1 138 1 327 5 119 1 161 1 142 1 352 5 254 5 45 1 164 1 358 1 331 1 14 2 261 2 82 1 84 6 338 2 154 1 214 1 171 1 340 1 15 2 108 1 58 2 372 8 195 1 90 2 64 5 92 2 93 3 69 2 
223 1 275 1 200 1 118 1 159 1 3 1 327 2 328 1 47 1 188 1 14 2 240 1 338 2 214 1 15 1 264 1 58 1 372 2 195 1 291 1 269 1 248 1 90 1 178 1 348 1 92 1 133 1 250 1 
15 1 327 1 58 1 372 1 37 1 90 1 64 1 92 1 293 1 261 1 
223 2 295 2 84 10 338 2 228 2 327 5 372 5 110 1 254 5 352 5 195 1 64 5 14 2 93 5 69 2 
275 1 164 1 64 1 214 1 331 1 261 1 
275 3 116 1 40 1 183 1 327 2 119 2 329 1 351 2 164 4 122 1 238 4 331 2 304 1 362 1 105 1 214 3 15 2 340 2 58 1 265 4 372 2 18 1 62 4 196 2 90 2 198 1 68 1 92 2 94 1 
274 1 200 2 116 1 72 1 159 1 297 1 40 1 329 1 351 1 300 1 302 1 78 1 238 1 12 1 210 1 240 3 101 1 189 1 307 1 241 2 152 1 191 1 264 2 287 1 265 1 33 1 18 1 62 1 248 2 199 1 178 3 133 2 
84 4 15 1 340 1 184 1 327 2 119 1 58 1 372 1 254 2 352 2 90 1 64 4 92 1 93 2 261 2 
225 1 309 1 32 1 
109 1 181 1 309 1 270 1 32 1 
225 1 309 1 32 1 
225 1 309 1 32 1 
309 1 335 1 32 1 
309 1 335 1 32 1 
309 1 335 1 32 1 
309 1 32 1 
34 1 341 1 
223 1 3 1 184 1 142 1 45 1 302 1 281 4 360 1 78 8 210 1 189 1 306 1 338 1 241 2 171 1 55 2 31 1 108 1 287 4 218 2 269 1 199 1 348 1 
223 1 157 1 294 1 295 1 3 1 184 1 142 1 45 1 302 2 360 1 281 6 78 11 28 1 210 2 189 2 306 1 241 4 338 2 171 1 55 2 31 1 108 2 287 5 218 3 269 1 199 2 348 1 69 1 
223 3 294 1 295 2 228 2 3 1 350 1 184 1 161 1 142 1 45 1 302 3 25 1 358 1 360 1 281 9 78 19 28 1 210 3 82 1 189 3 306 1 241 6 338 3 171 1 55 3 31 1 108 1 287 10 218 4 269 1 199 3 348 1 69 2 
223 2 294 2 295 2 228 1 3 1 350 1 184 1 161 1 142 1 45 1 302 3 25 1 358 1 360 1 281 10 78 17 28 1 210 3 82 1 189 3 306 1 241 6 338 3 171 1 55 3 31 1 108 1 287 7 218 5 269 1 199 3 348 1 69 2 
223 1 3 1 184 1 142 1 45 1 302 1 281 4 360 1 78 8 210 1 189 1 306 1 338 1 241 2 171 1 55 2 31 1 108 1 287 4 218 2 269 1 199 1 348 1 
223 2 294 1 295 2 228 2 350 1 161 1 142 1 45 1 302 1 358 1 281 6 78 12 210 1 82 1 189 1 306 1 241 2 338 2 171 1 55 1 108 1 287 6 218 2 199 1 69 2 
223 2 294 2 295 2 228 1 3 1 350 1 184 1 161 1 142 1 45 1 302 4 25 2 358 1 360 1 281 10 78 18 28 1 210 4 82 1 189 4 306 1 241 8 338 3 171 1 55 3 31 1 108 1 287 8 218 5 269 1 199 4 348 1 69 2 
223 2 294 3 295 3 228 2 350 1 161 1 142 1 45 1 302 4 25 2 358 1 281 9 78 16 210 4 82 1 189 4 306 1 241 8 338 3 171 1 55 3 108 1 287 7 156 1 218 6 199 4 69 3 
223 1 294 3 338 1 3 3 55 3 31 2 287 4 218 6 269 1 360 1 281 3 78 7 348 3 
223 2 294 1 295 2 228 1 3 1 350 1 184 1 161 1 142 1 45 1 302 4 25 2 358 1 360 1 281 10 78 18 210 4 82 1 189 4 306 1 241 8 338 3 171 1 55 3 31 1 108 1 287 8 156 1 218 4 269 1 199 4 348 1 69 2 
223 1 294 1 189 2 338 1 241 4 3 1 55 2 31 1 184 1 287 4 218 3 302 2 25 1 269 1 281 4 360 1 78 8 199 2 348 1 210 2 
223 1 338 1 3 1 55 2 31 1 184 1 287 3 44 1 218 2 269 1 360 1 281 3 78 6 348 1 
223 1 189 1 294 1 295 1 228 1 241 2 338 1 55 1 287 2 218 2 302 1 281 2 78 4 199 1 28 1 210 1 69 1 
223 1 157 1 294 1 295 1 228 1 338 1 171 1 55 1 108 2 287 4 142 1 218 2 281 3 78 7 69 1 
223 3 294 4 157 1 295 2 228 2 3 2 184 1 302 2 25 2 360 1 281 11 78 23 210 2 189 2 170 1 338 3 241 4 171 2 55 5 31 1 108 2 313 1 287 12 218 9 269 1 199 2 91 1 348 2 69 2 
287 1 78 1 108 1 
281 1 78 1 171 1 
223 1 189 1 294 1 295 1 241 2 338 1 228 1 55 2 287 3 110 1 218 3 302 1 281 3 78 6 199 1 28 1 210 1 69 1 
223 2 294 1 295 2 228 2 350 1 161 1 142 1 45 1 302 1 358 1 281 6 78 12 210 1 82 1 189 1 306 1 241 2 338 2 171 1 55 1 108 1 287 6 218 2 199 1 69 2 
223 1 294 1 338 1 3 1 55 1 287 3 218 2 269 1 281 3 78 6 348 1 
294 1 189 1 241 2 3 1 55 1 31 1 287 2 218 2 302 1 25 1 281 1 360 1 78 3 199 1 91 1 348 1 210 1 
223 2 189 1 294 2 306 1 241 2 338 2 3 2 55 3 287 5 218 5 302 1 269 1 281 5 78 10 47 1 199 1 348 2 210 1 
189 1 294 1 306 1 241 2 338 1 218 1 302 1 281 2 78 2 199 1 210 1 69 1 
223 1 189 1 294 1 306 1 295 1 228 1 241 2 338 1 55 1 287 2 218 2 302 1 281 2 78 4 199 1 210 1 69 1 
189 3 294 1 306 1 241 6 3 1 55 1 287 2 156 1 218 2 302 3 25 1 281 1 78 3 199 3 91 1 348 1 210 3 
223 5 157 1 294 5 295 3 228 3 3 3 326 1 184 1 142 1 302 5 25 2 360 1 281 16 78 34 28 1 210 5 149 1 189 5 306 1 241 10 338 5 171 3 55 7 31 1 173 1 108 4 287 18 156 1 218 12 269 2 199 5 91 1 348 3 69 3 
320 1 324 1 178 1 112 1 264 1 240 1 101 1 
320 1 324 1 277 1 264 1 127 1 247 1 375 1 282 1 112 1 178 1 240 1 101 1 
329 1 265 1 18 1 351 1 116 1 44 1 62 1 122 1 40 1 238 1 94 1 
200 1 116 1 152 1 40 1 297 1 264 1 33 1 265 1 329 1 18 1 351 1 355 1 62 1 248 1 238 1 178 2 240 2 101 1 
200 2 116 1 297 1 40 3 136 1 139 1 329 1 355 1 238 1 240 2 101 1 152 1 264 2 265 1 33 2 18 2 373 1 62 1 196 1 248 1 219 1 178 2 250 1 
200 2 116 1 40 3 136 1 139 1 329 1 355 1 236 1 209 1 238 2 240 2 101 1 152 1 264 2 265 2 33 2 18 2 373 1 62 2 196 1 248 1 219 1 178 2 250 1 
70 1 200 1 275 2 116 1 159 1 40 4 139 1 328 1 329 1 351 1 10 1 164 1 238 2 188 1 361 1 240 1 261 1 214 2 264 1 265 2 33 1 373 1 18 1 175 1 62 2 291 1 268 1 248 1 196 1 64 1 178 1 133 1 250 1 
275 2 116 1 214 2 40 4 139 1 33 1 265 3 329 1 18 1 373 1 289 1 351 1 175 1 62 3 164 1 10 1 196 1 209 1 64 1 238 3 361 1 261 1 
329 1 265 1 116 1 62 1 238 1 5 1 
251 1 262 1 365 1 116 3 53 1 231 1 40 3 155 1 172 1 86 1 5 1 75 1 265 7 33 1 329 2 18 2 351 2 62 6 238 7 317 1 148 1 
223 1 39 1 40 1 3 1 184 1 329 1 281 3 238 1 240 2 101 2 189 2 103 1 53 1 241 4 152 1 338 1 55 2 191 2 287 3 18 1 62 1 63 1 248 1 199 2 20 1 348 1 200 1 116 1 72 1 297 1 300 2 255 1 302 2 355 1 360 1 78 6 210 2 307 1 125 1 31 1 264 1 265 1 33 1 218 2 269 1 378 1 178 2 
275 3 224 1 349 1 40 2 327 1 351 1 354 1 164 2 10 1 238 1 331 1 361 1 304 1 261 1 214 3 339 1 15 2 58 2 372 1 265 1 289 1 175 1 62 1 37 1 64 1 90 2 293 1 92 2 
336 1 365 1 116 2 53 1 40 2 5 1 265 2 33 1 329 1 18 1 62 2 10 1 238 2 
116 1 53 1 40 1 265 4 329 1 18 1 351 1 62 4 122 1 177 1 209 1 238 4 94 1 
262 1 116 2 40 1 86 1 234 1 265 2 33 1 329 1 18 1 62 2 196 1 258 1 238 2 380 1 
315 1 329 1 265 1 351 1 116 1 62 1 96 1 238 1 98 1 56 1 
329 1 265 2 18 1 251 1 116 1 53 1 62 2 40 1 231 1 238 2 132 1 
251 1 116 2 53 1 40 3 172 1 75 1 265 5 329 2 18 2 351 1 62 4 122 1 196 1 177 1 238 5 94 1 
251 1 116 2 53 1 40 3 172 1 265 5 329 2 18 2 351 1 62 4 122 1 196 1 177 1 238 5 67 1 94 1 
200 1 116 1 152 1 40 1 264 1 33 1 265 1 329 1 18 1 351 1 355 1 62 1 236 1 248 1 238 1 178 2 240 2 101 1 
262 1 365 1 116 2 40 1 86 1 265 1 33 1 329 1 18 1 62 1 196 1 238 1 317 1 
246 1 308 1 166 1 101 1 174 1 
275 2 308 2 252 1 230 1 214 2 136 1 339 1 174 2 246 2 89 1 64 1 219 1 80 1 361 1 166 1 101 1 261 1 250 1 114 1 
308 1 286 1 264 1 17 1 174 1 9 1 178 1 166 1 240 1 
89 1 80 1 166 1 
0 1 44 1 35 1 239 1 
0 1 279 1 162 1 212 1 35 1 221 1 239 1 
162 1 321 1 285 1 
0 1 212 1 368 2 279 1 162 3 121 1 353 1 35 1 123 1 221 3 249 1 239 1 
0 1 279 1 162 2 106 1 212 1 35 1 221 2 239 1 342 1 
0 1 169 1 212 1 96 1 98 1 279 1 162 1 121 1 376 1 221 1 292 1 
0 1 279 1 162 1 212 1 121 1 221 1 239 1 
279 1 162 1 212 1 121 1 35 1 221 1 239 2 
50 1 0 1 211 1 212 2 203 1 279 2 162 2 121 1 221 2 239 1 
0 2 135 1 212 1 190 1 106 2 107 1 279 1 162 3 121 1 35 1 376 1 221 3 239 1 
0 1 212 1 226 1 106 1 96 1 98 2 315 1 279 1 162 2 121 1 35 1 259 1 221 2 292 1 239 1 
0 2 135 1 212 2 106 2 342 1 279 2 162 4 121 1 35 1 187 1 376 1 221 4 239 1 
0 1 279 1 162 1 212 1 121 1 35 1 221 1 239 1 
0 3 135 1 368 1 106 2 212 1 59 1 279 1 162 4 353 1 35 2 376 1 221 4 249 1 239 2 
0 1 212 1 106 1 213 1 279 1 162 2 121 1 88 1 35 1 333 1 221 2 239 1 
0 1 212 1 368 2 279 1 162 3 353 1 121 1 35 1 176 1 221 3 249 2 239 1 
0 2 330 1 2 2 204 1 
279 1 162 1 212 1 121 1 137 1 221 1 
0 1 279 1 162 2 106 1 190 1 212 1 121 1 35 1 221 2 239 1 
290 1 
0 1 279 1 162 1 212 1 121 1 35 1 221 1 239 1 
0 1 106 1 212 1 368 1 190 1 279 1 162 3 121 1 35 1 221 3 239 1 
59 1 0 1 135 1 376 1 
0 1 239 1 

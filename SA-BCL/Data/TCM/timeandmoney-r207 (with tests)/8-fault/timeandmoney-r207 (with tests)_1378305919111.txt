#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 197 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2944 | stmt -> ;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | STATEMENT | 3220 | stmt -> ;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | CONDITION | 739 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 5062 | return null
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | ASSIGN | 1327 | = null
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 5081 | = null
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 3976 | stmt -> ;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
64 1 140 2 87 1 89 2 145 4 313 2 120 9 96 3 70 1 175 1 26 1 150 6 9 1 363 1 275 1 346 2 77 2 128 1 52 1 80 1 185 9 325 1 135 1 374 2 189 1 328 1 256 5 85 2 
64 1 140 2 87 1 89 2 145 4 313 2 120 9 96 3 70 1 175 1 26 1 150 6 9 1 363 1 275 1 346 2 77 2 128 1 52 1 80 1 185 9 325 1 135 1 374 2 189 1 328 1 256 5 85 2 
64 1 140 2 87 1 89 2 145 5 313 2 120 10 96 4 70 1 175 1 26 1 150 7 9 1 363 1 275 1 346 2 77 2 128 1 52 1 80 1 185 10 325 1 135 1 374 2 189 1 328 1 256 6 85 2 
64 1 140 2 87 1 89 2 145 3 313 2 120 7 96 2 70 1 175 1 26 1 150 4 9 1 363 1 346 2 77 1 128 1 52 1 80 1 185 7 325 1 135 1 374 2 189 1 328 1 256 4 85 2 
64 1 140 1 346 1 77 2 89 1 145 2 313 1 185 4 96 1 120 4 70 1 374 1 256 3 150 3 175 1 9 1 363 1 275 1 
64 1 140 1 346 1 89 1 52 1 313 1 185 2 290 1 94 1 325 1 120 2 256 1 24 1 85 1 9 1 363 1 
64 1 346 2 96 1 120 3 89 2 256 2 145 1 85 1 150 1 80 1 185 3 9 1 363 1 
64 1 87 1 140 1 47 1 89 2 145 4 313 1 96 3 120 9 70 1 150 7 175 1 9 1 363 1 275 1 346 2 77 2 80 1 185 9 374 1 189 1 256 5 85 1 284 1 
64 1 87 1 140 1 47 1 89 2 145 4 313 1 96 3 120 9 70 1 150 7 175 1 9 1 363 1 275 1 346 2 77 2 80 1 185 9 374 1 189 1 256 5 85 1 284 1 
108 1 79 1 274 1 
141 1 335 2 274 1 
31 2 153 2 209 2 223 2 216 1 323 1 165 2 235 2 
167 1 19 2 216 1 143 1 312 2 168 1 67 2 288 1 336 1 147 1 291 1 268 1 72 2 315 1 223 2 224 1 342 1 179 1 102 1 31 3 153 2 103 1 345 1 11 1 254 1 156 1 53 1 233 1 370 1 323 1 105 1 235 2 56 2 209 2 282 1 40 1 165 3 
31 1 153 1 286 1 209 1 188 1 223 1 216 1 205 1 165 1 235 1 
31 1 229 1 205 1 116 1 255 1 129 1 235 1 266 1 375 1 108 1 272 1 137 1 165 1 274 1 
153 1 31 1 229 2 205 1 255 1 235 1 266 1 209 1 223 1 375 1 108 1 272 2 137 1 165 1 274 1 
45 1 229 1 368 1 245 1 272 1 
142 1 45 1 229 2 108 1 245 1 272 2 101 1 274 1 
229 1 245 1 272 1 
153 1 31 1 286 1 45 1 227 1 229 1 216 1 205 1 235 1 188 1 209 1 223 1 272 1 165 1 
274 1 
45 1 229 2 108 1 245 1 272 2 75 1 101 1 274 1 
212 2 260 1 45 2 215 1 229 5 231 1 2 1 347 1 245 2 33 2 324 1 69 1 108 1 349 1 272 5 101 1 307 2 343 1 274 1 
79 1 323 1 
31 2 153 1 235 2 323 2 238 1 209 1 223 1 257 1 165 2 
5 1 200 1 93 1 
179 1 31 1 167 1 103 1 312 1 168 1 370 1 323 1 288 1 56 1 291 1 72 1 224 1 342 1 165 1 124 1 
179 1 167 1 103 1 153 1 31 2 312 1 168 1 370 1 288 1 235 1 56 1 5 1 291 1 72 1 223 1 224 1 361 1 342 1 165 2 152 1 
249 1 31 5 153 4 209 1 238 1 223 4 357 1 314 1 361 2 129 1 323 1 165 5 235 5 152 1 
31 2 153 2 286 1 223 2 333 1 205 1 165 2 235 2 
31 3 153 3 209 1 223 3 361 1 323 1 165 3 235 3 
31 1 153 1 286 1 223 1 205 1 165 1 235 1 
31 1 153 1 209 1 238 1 223 1 205 1 257 1 165 1 235 1 
167 1 19 2 143 1 216 1 312 1 168 1 67 1 288 1 266 1 291 1 72 1 315 1 223 3 224 1 74 1 272 1 361 1 342 1 151 1 152 1 179 1 102 1 103 1 31 4 153 3 345 1 11 1 254 1 229 1 156 1 205 1 233 1 370 1 255 1 323 1 235 3 56 1 209 2 238 1 282 1 375 1 40 1 137 1 165 4 
31 2 153 1 223 1 357 1 361 1 129 1 323 1 165 2 235 2 
153 3 31 3 229 1 205 1 255 1 266 1 235 3 48 1 209 1 238 1 223 3 375 1 272 1 74 1 361 2 137 1 165 3 274 1 152 1 
5 1 31 2 153 2 209 1 238 1 223 2 361 1 93 1 165 2 235 2 
179 1 31 1 103 1 167 1 312 1 168 1 370 1 323 1 288 1 56 1 291 1 72 1 224 1 342 1 165 1 
179 1 31 1 103 1 167 1 312 1 168 1 304 1 323 1 288 1 56 1 291 1 339 1 72 1 224 1 165 1 
19 2 67 4 91 1 3 1 93 2 5 2 250 1 315 1 200 2 100 1 317 1 11 1 254 1 301 1 156 2 369 1 53 2 233 1 12 1 236 1 282 1 60 1 40 1 309 1 
31 1 153 1 223 1 333 1 205 1 137 1 165 1 235 1 
234 1 208 1 
234 1 208 1 
376 1 264 1 
376 1 264 1 
376 1 264 1 
331 1 234 1 208 1 
297 1 234 1 208 1 
376 1 258 1 264 1 92 1 234 2 208 2 
331 1 234 1 208 1 
331 1 234 1 208 1 
37 1 234 1 208 1 
37 1 234 1 208 1 
37 1 234 1 208 1 
138 1 112 1 193 1 49 1 148 1 293 1 223 2 23 1 201 1 272 1 8 1 153 2 31 2 298 1 297 1 229 1 234 1 323 1 208 1 235 2 373 1 41 1 210 1 165 2 
138 2 298 2 213 1 229 2 90 1 359 1 234 2 193 1 208 2 293 3 58 2 316 1 25 1 210 2 41 2 272 2 258 1 310 1 274 1 
140 1 374 1 313 1 
140 1 24 1 313 1 
338 1 140 3 374 2 24 1 54 1 130 1 
372 1 140 2 374 1 24 1 54 1 130 1 
140 2 374 1 24 1 54 2 130 1 
212 1 141 2 45 4 214 1 215 2 287 1 335 2 245 1 148 1 250 1 121 1 8 1 272 5 101 1 274 2 10 2 317 1 229 5 230 1 50 2 127 1 51 2 369 1 347 3 12 1 33 1 55 1 207 1 57 1 373 1 108 1 349 1 307 1 
141 6 45 7 334 1 245 6 335 6 250 3 292 1 101 1 10 6 253 1 51 6 347 8 12 3 207 1 55 3 107 1 108 1 349 1 307 2 166 1 212 2 215 6 218 5 121 2 270 1 272 9 274 5 318 1 317 3 229 9 230 3 127 2 368 5 369 3 33 2 324 1 373 4 
212 1 141 2 45 2 214 1 215 2 287 1 335 2 250 1 121 1 272 3 274 3 10 2 317 1 229 3 50 1 230 1 127 1 51 2 347 3 369 1 33 1 12 1 55 1 324 1 373 1 108 1 307 1 166 1 
212 1 141 4 214 1 45 3 215 4 287 1 334 1 335 4 250 2 292 1 121 1 272 4 274 4 10 4 317 2 229 4 50 2 230 2 127 1 51 4 347 5 369 2 33 1 12 2 55 2 324 1 373 2 107 1 108 1 307 1 166 1 
167 1 79 1 29 1 
167 1 157 1 
206 1 
179 1 167 1 291 1 
167 1 36 1 
167 1 291 1 
179 1 167 3 291 1 98 1 302 1 29 2 
0 2 301 3 181 1 156 3 244 1 369 1 322 1 53 4 67 7 265 1 250 1 170 1 294 1 73 1 360 1 62 1 309 2 
0 2 301 3 181 1 156 3 244 1 369 1 322 1 53 4 67 7 265 1 250 1 170 1 294 1 73 1 360 1 62 1 309 2 
261 1 0 2 301 3 181 1 156 3 244 1 369 1 322 1 53 4 67 7 265 1 250 1 170 1 294 1 73 1 360 1 62 1 309 2 
0 1 19 2 263 1 244 1 66 2 67 11 117 1 265 2 250 1 294 2 73 1 360 1 176 1 364 1 317 1 301 4 11 1 126 1 230 1 156 6 369 1 53 5 233 1 12 1 281 1 282 1 40 1 352 1 62 1 309 2 
0 2 19 4 244 1 67 9 265 1 250 1 170 1 199 1 294 1 176 1 360 1 11 2 301 4 181 1 156 4 369 1 322 1 233 2 53 5 106 1 282 2 40 2 62 1 309 3 
64 1 65 1 140 2 285 1 312 1 89 1 168 1 313 1 337 1 338 1 95 1 120 2 72 1 97 1 149 1 341 1 24 1 150 1 9 1 363 1 28 1 103 1 346 1 185 2 305 1 56 1 374 1 256 1 377 1 85 1 
64 1 65 1 140 2 285 1 312 1 89 1 115 1 168 1 313 1 337 1 338 1 95 1 120 3 72 1 149 1 341 1 24 1 150 2 363 1 103 1 346 1 204 1 185 3 305 1 56 1 374 1 256 1 377 1 85 1 61 1 
64 1 65 1 140 2 312 1 115 1 168 1 313 1 337 1 338 1 95 1 120 2 72 1 149 1 341 1 24 1 150 2 363 1 103 1 204 1 185 2 56 1 374 1 256 1 377 1 85 1 
65 2 167 1 312 1 89 1 168 1 146 1 119 1 291 1 120 1 95 2 6 1 72 1 149 2 224 1 103 1 346 1 252 1 185 1 279 1 131 1 56 1 85 2 61 1 
65 1 140 2 285 1 312 1 89 1 115 1 168 1 313 1 337 1 338 1 95 1 120 1 72 1 97 1 149 1 341 1 24 1 9 1 103 1 346 1 185 1 305 1 56 1 374 1 377 1 85 1 
351 1 
141 2 332 1 335 2 146 1 245 6 195 2 291 1 101 3 251 2 103 1 252 1 205 1 347 2 255 1 56 2 306 1 108 1 349 1 161 1 307 1 355 1 165 1 212 1 167 1 111 2 215 2 217 1 312 2 168 1 116 1 21 2 266 1 72 2 224 2 272 5 273 2 76 1 274 2 31 1 276 4 180 1 229 5 127 1 184 1 33 1 129 1 235 1 133 1 186 2 375 1 283 1 39 1 241 2 137 1 43 1 
116 1 245 2 266 1 272 3 76 1 273 1 75 1 101 1 31 1 276 2 229 3 205 1 255 1 129 1 235 1 133 1 375 1 306 1 283 1 137 1 355 1 165 1 
245 1 116 1 21 1 266 1 272 3 76 1 75 1 101 1 274 1 31 1 276 3 229 3 205 1 255 1 129 1 235 1 133 1 375 1 306 1 108 1 283 1 137 1 355 1 165 1 
116 1 245 2 21 1 266 1 195 1 272 3 75 1 76 1 273 1 101 1 274 1 31 1 276 3 229 3 205 1 255 1 129 1 235 1 133 1 375 1 306 1 108 1 283 1 137 1 355 1 165 1 
212 1 139 1 141 2 111 2 215 1 332 1 358 1 116 1 245 7 21 4 266 1 195 4 272 5 76 1 75 1 273 4 101 3 251 2 274 5 344 1 31 1 276 6 180 1 365 1 229 5 205 1 347 1 33 1 255 1 129 1 235 1 133 1 186 2 160 1 375 1 306 1 108 5 349 1 283 1 241 2 307 1 137 1 355 1 165 1 
141 2 332 1 335 2 245 4 195 2 101 2 251 2 205 1 347 1 255 1 306 1 108 1 349 1 307 1 355 1 165 1 212 1 111 2 215 1 116 1 21 2 266 1 272 4 76 1 273 2 274 2 276 4 31 1 180 1 229 4 33 1 129 1 235 1 133 1 186 2 375 1 283 1 39 1 241 2 137 1 
139 1 212 1 141 2 111 2 215 1 332 1 245 4 116 1 21 2 266 1 195 2 272 4 273 2 76 1 101 2 251 2 274 1 344 1 31 1 276 4 180 1 229 4 205 1 347 1 33 1 255 1 129 1 235 1 133 1 186 2 160 1 375 1 306 1 108 1 283 1 349 1 241 2 137 1 307 1 355 1 165 1 
139 1 212 1 141 2 111 2 215 1 332 1 245 4 116 1 21 2 266 1 195 2 272 4 273 2 76 1 101 2 251 2 274 1 344 1 31 1 276 4 180 1 229 4 205 1 347 1 33 1 255 1 129 1 235 1 133 1 186 2 160 1 375 1 306 1 108 1 283 1 349 1 241 2 137 1 307 1 355 1 165 1 
212 1 215 1 245 4 335 2 116 1 21 2 266 1 195 2 272 4 273 2 76 1 101 2 177 1 251 2 274 1 344 1 31 1 276 4 180 1 104 1 229 4 205 1 347 1 33 1 255 1 129 1 235 1 133 1 186 2 14 2 15 2 375 1 306 1 108 1 283 1 349 1 137 1 307 1 355 1 378 1 165 1 
212 1 139 1 141 2 111 2 215 1 332 1 358 1 116 1 245 5 21 3 266 1 195 3 272 4 76 1 273 3 101 2 251 2 274 1 344 1 31 1 276 5 180 1 229 4 205 1 347 1 33 1 255 1 129 1 235 1 133 1 186 2 160 1 375 1 306 1 108 1 349 1 283 1 241 2 307 1 137 1 355 1 165 1 
212 1 139 1 141 2 111 2 215 1 332 1 358 1 116 1 245 5 21 3 266 1 195 3 272 4 76 1 273 3 101 2 251 2 274 1 344 1 31 1 276 5 180 1 229 4 205 1 347 1 33 1 255 1 129 1 235 1 133 1 186 2 160 1 375 1 306 1 108 1 349 1 283 1 241 2 307 1 137 1 355 1 165 1 
335 2 245 4 195 2 101 2 251 2 104 1 205 1 347 1 255 1 14 2 306 1 15 2 108 1 349 1 307 1 355 1 165 1 212 1 215 1 116 1 21 2 266 1 272 4 76 1 273 2 274 1 276 4 31 1 180 1 229 4 33 1 129 1 235 1 133 1 186 2 375 1 283 1 39 1 137 1 
0 1 301 2 254 1 11 1 19 2 181 1 156 3 79 1 369 1 322 1 67 6 53 3 233 1 93 1 323 2 5 1 250 1 170 1 315 1 282 1 200 1 60 1 40 1 360 1 62 1 309 2 
311 1 18 1 263 1 19 4 66 3 67 14 93 4 336 1 5 11 289 1 250 1 222 1 315 1 200 11 294 1 364 3 102 1 317 1 301 2 11 2 254 2 182 1 230 2 156 6 369 2 233 2 53 8 12 2 323 1 282 2 40 2 352 1 309 1 
110 1 18 1 19 2 67 2 93 1 336 1 315 1 223 1 361 1 152 1 31 1 153 1 102 1 300 1 11 1 254 1 205 1 156 1 233 1 53 1 323 1 235 1 282 1 84 1 40 1 242 1 165 1 
18 1 19 2 312 1 67 2 197 1 72 1 315 1 223 1 224 1 361 1 152 1 31 1 153 1 102 1 11 1 254 1 156 2 233 1 235 1 56 1 159 1 282 1 59 1 40 1 163 1 165 1 
167 3 19 4 312 8 115 1 168 2 146 1 67 2 118 1 68 1 336 1 291 2 72 8 223 1 315 2 224 2 122 1 361 1 28 1 31 1 153 1 103 2 102 1 252 1 226 1 228 1 11 2 254 2 156 1 233 2 53 1 235 1 105 2 132 1 56 7 282 2 60 1 40 2 63 1 165 1 
18 1 19 2 67 3 93 1 5 1 250 1 315 1 223 1 200 1 153 1 31 1 317 1 301 1 11 1 254 1 230 1 156 2 278 1 369 1 233 1 53 1 12 1 235 1 209 1 238 1 282 1 40 1 309 1 165 1 
301 1 254 1 11 1 19 2 369 1 67 2 233 1 91 1 53 2 12 1 93 1 5 1 315 1 282 1 200 1 60 1 294 1 40 1 
317 1 301 1 254 1 11 1 19 2 156 2 67 2 233 1 3 1 93 1 5 1 250 1 315 1 282 1 200 1 60 1 40 1 309 1 
19 2 67 4 93 2 5 2 250 1 315 1 200 2 294 1 317 1 11 1 254 1 301 2 230 1 156 2 369 1 53 2 233 1 12 1 282 1 60 1 40 1 309 1 
301 1 254 1 11 1 19 2 369 1 67 2 233 1 91 1 53 2 12 1 93 1 5 1 315 1 282 1 200 1 294 1 122 1 40 1 
317 1 301 1 254 1 11 1 19 2 156 2 67 2 233 1 3 1 93 1 5 1 250 1 315 1 282 1 200 1 122 1 40 1 309 1 
19 2 67 4 93 2 5 2 250 1 315 1 200 2 122 1 294 1 317 1 11 1 254 1 301 2 230 1 156 2 369 1 53 2 233 1 12 1 282 1 40 1 309 1 
317 1 301 2 254 1 11 1 19 2 230 1 156 2 369 1 233 1 53 2 67 4 12 1 93 2 5 2 250 1 315 1 282 1 200 2 294 1 40 1 309 1 
167 1 143 1 19 2 312 1 168 1 67 2 288 1 336 1 291 1 72 1 315 1 224 1 342 1 179 1 103 1 31 1 102 1 254 1 11 1 156 1 53 1 370 1 233 1 323 1 56 1 282 1 40 1 165 1 
102 1 254 1 11 1 19 2 312 1 205 1 156 1 67 1 233 1 323 1 56 1 72 1 315 1 282 1 224 1 40 1 242 1 190 1 
18 1 19 2 67 4 93 2 5 2 250 1 315 1 200 2 294 1 317 1 11 1 254 1 301 2 230 1 156 2 369 1 53 2 233 1 12 1 282 1 40 1 309 1 
167 1 143 1 19 2 312 1 168 1 67 4 93 2 288 1 5 2 250 1 291 1 72 1 315 1 200 2 294 1 342 1 28 1 179 1 317 1 103 1 31 1 225 1 301 2 254 1 11 1 230 1 156 2 369 1 53 2 370 1 233 1 12 1 56 1 282 1 40 1 309 1 165 1 
18 1 19 2 67 3 93 1 5 1 250 1 315 1 223 1 200 1 294 1 317 1 153 1 31 1 301 1 11 1 254 1 230 1 156 1 369 1 233 1 53 2 12 1 235 1 237 1 209 1 238 1 282 1 40 1 165 1 
330 1 263 1 19 4 192 1 219 2 66 2 246 1 67 19 20 1 250 3 271 1 294 3 174 1 364 1 317 3 299 1 11 2 301 6 230 3 156 10 369 3 233 2 53 9 12 3 106 1 187 2 282 2 40 2 352 1 309 3 
330 2 19 6 263 2 219 4 246 2 66 2 67 26 194 1 250 2 267 1 171 1 271 1 294 2 174 1 176 2 27 1 364 2 317 2 299 1 125 1 301 4 11 3 230 3 156 12 277 1 369 3 233 3 53 14 12 3 106 1 187 1 282 3 40 3 309 2 
330 2 0 1 263 3 19 6 192 1 219 4 66 4 246 1 67 41 194 1 250 5 170 1 267 1 171 1 271 1 294 4 174 1 360 1 176 1 27 1 364 3 317 4 299 1 125 1 11 3 301 8 181 1 230 4 156 21 277 1 322 1 369 5 233 3 53 20 12 4 106 1 13 1 187 1 282 3 40 3 352 1 62 1 309 4 
330 2 0 1 263 3 19 8 192 1 219 4 66 4 246 1 67 38 194 1 250 4 170 1 267 1 171 1 271 1 294 3 174 1 360 1 176 2 27 1 364 3 317 3 299 1 125 1 11 4 301 7 181 1 230 4 156 18 277 1 322 1 369 5 233 4 53 20 12 4 106 1 13 1 187 1 282 4 40 4 352 1 62 1 309 4 
311 2 330 1 0 1 263 2 19 4 219 4 66 4 246 1 67 52 194 1 250 8 170 1 267 1 171 1 271 1 294 7 174 1 360 1 176 1 27 1 364 4 317 7 299 1 125 1 11 2 301 14 181 1 230 7 156 25 277 1 322 1 369 8 233 2 53 27 12 7 106 1 187 1 282 2 40 2 352 2 62 1 309 7 
138 1 298 1 202 1 359 1 25 1 41 1 210 1 258 1 234 1 208 1 
297 1 49 1 
138 1 298 1 320 1 155 1 41 1 210 1 348 1 234 1 208 1 
331 1 172 1 
35 1 37 1 92 1 
138 1 298 1 213 1 229 1 359 1 193 1 234 1 208 1 293 2 58 1 316 1 25 1 210 1 41 1 272 1 258 1 310 1 274 1 
138 1 298 1 213 1 229 1 359 1 193 1 234 1 208 1 293 2 58 1 316 1 25 1 210 1 41 1 272 1 258 1 310 1 274 1 
138 1 298 1 213 1 229 1 359 1 193 1 234 1 208 1 293 2 58 1 316 1 25 1 210 1 41 1 272 1 258 1 310 1 274 1 
331 1 172 1 92 1 
331 1 172 1 92 1 
35 1 37 1 
35 1 37 1 92 1 
112 1 23 1 
138 1 45 1 112 1 114 1 49 1 148 1 293 1 23 1 223 2 201 1 272 1 8 1 31 2 153 2 298 1 297 1 229 1 234 1 323 1 208 1 235 2 373 1 58 1 41 1 210 1 165 2 310 1 
18 1 167 1 19 2 312 2 168 1 67 2 336 1 291 1 72 2 315 1 340 1 362 1 103 1 31 2 102 1 226 1 11 1 254 1 321 1 156 1 233 1 53 1 235 2 105 2 56 2 239 1 282 1 40 1 63 1 17 1 165 2 
140 2 103 1 312 2 168 1 115 1 313 1 305 1 56 2 338 1 95 1 374 1 72 2 240 1 341 1 24 1 350 1 377 1 211 1 28 1 
140 2 103 1 312 1 115 1 168 1 313 1 305 1 56 1 338 1 95 1 374 1 72 1 83 1 341 1 24 1 350 1 377 1 
103 1 167 1 252 1 312 1 168 1 169 1 146 1 56 1 291 1 95 1 6 1 72 1 240 1 224 1 
140 2 103 1 312 1 115 1 168 1 313 1 305 1 56 1 338 1 95 1 374 1 72 1 240 1 341 1 24 1 350 1 377 1 211 1 
356 1 
215 1 108 1 2 1 79 1 347 1 343 1 274 1 
212 1 141 1 111 1 215 1 332 1 335 1 245 1 272 1 101 1 274 2 229 1 347 1 33 1 108 1 349 1 241 1 307 1 
212 3 167 6 141 6 215 7 312 1 168 1 335 6 245 5 266 2 250 2 197 2 291 1 71 2 72 1 224 1 173 2 272 5 101 3 296 2 274 6 29 2 10 6 179 1 317 2 103 2 229 5 230 2 203 1 127 1 51 6 302 1 232 1 369 2 157 3 347 7 12 2 33 3 55 2 56 1 349 3 161 1 42 1 307 3 308 2 164 2 
212 2 141 3 215 5 263 1 245 1 66 1 335 3 194 1 250 2 267 1 171 1 272 1 101 1 274 5 10 5 364 1 317 2 125 1 229 1 230 2 127 1 366 1 51 5 277 1 347 8 369 2 33 2 12 2 55 2 38 1 108 2 349 2 161 1 307 2 166 1 
212 1 139 1 286 1 215 2 216 1 196 1 250 1 170 1 223 1 272 1 360 1 31 1 153 1 227 1 229 1 205 1 369 2 347 2 33 1 55 2 235 1 188 1 209 1 349 1 307 1 62 1 165 1 166 1 
212 1 215 1 2 1 347 1 33 1 108 1 349 1 307 1 343 1 274 1 
10 2 317 1 141 2 215 2 230 1 51 2 347 2 369 1 335 2 12 1 55 1 250 1 274 2 166 1 
229 1 108 1 272 1 245 1 101 1 274 1 
167 1 212 2 215 2 217 1 312 4 220 2 113 1 168 1 245 4 146 1 291 1 72 4 224 2 272 3 101 2 103 1 252 1 229 3 184 1 127 2 347 2 33 2 324 1 56 4 82 1 349 1 16 1 161 2 307 2 
167 1 19 2 216 1 143 1 312 1 168 1 67 1 288 1 291 1 72 1 223 2 315 1 224 1 342 1 179 1 102 1 31 3 153 2 103 1 345 1 254 1 11 1 156 1 233 1 370 1 323 1 235 2 56 1 209 2 282 1 40 1 165 3 
10 2 212 1 0 1 141 2 215 2 127 1 51 2 335 2 347 1 33 1 108 2 349 1 161 1 307 1 274 4 
138 1 41 1 329 1 
138 1 262 1 112 1 359 1 41 1 
138 1 41 1 329 1 
138 1 41 1 329 1 
138 1 41 1 353 1 
138 1 41 1 353 1 
138 1 41 1 353 1 
138 1 41 1 
234 1 208 1 
0 1 301 3 11 2 19 4 181 1 156 4 369 1 322 1 67 8 53 4 233 2 250 1 170 1 282 2 294 1 40 2 176 1 360 1 62 1 309 2 
0 1 301 2 181 1 156 3 79 1 322 1 369 1 53 3 67 6 250 1 170 1 360 1 62 1 309 2 
317 1 301 2 11 1 19 2 230 1 156 2 303 1 369 1 233 1 53 2 67 4 12 1 250 1 282 1 294 1 40 1 309 1 
364 1 317 1 301 2 263 1 230 1 156 4 66 2 369 1 67 7 53 3 12 1 250 1 294 1 352 1 309 1 
311 1 0 1 19 4 66 2 67 23 117 1 250 3 170 1 222 1 294 4 360 2 176 2 364 2 317 2 301 9 11 2 181 1 230 2 156 12 322 1 369 3 53 11 233 2 12 2 282 2 40 2 352 1 62 2 309 5 
156 1 66 1 67 1 
364 1 67 1 53 1 
317 1 11 1 301 3 19 2 230 1 156 3 303 1 369 1 233 1 67 6 53 3 12 1 250 1 197 1 282 1 294 1 40 1 309 2 
364 1 317 2 125 1 301 2 11 1 19 2 263 1 230 2 156 6 277 1 369 2 66 1 53 6 233 1 67 12 12 2 194 1 106 1 250 2 267 1 171 1 282 1 294 1 40 1 309 1 
301 2 156 3 369 1 53 3 67 6 250 1 170 1 294 1 360 1 62 1 309 1 
301 2 11 1 181 1 19 2 156 2 322 1 53 1 67 3 233 1 117 1 282 1 294 1 40 1 360 1 176 1 62 1 309 1 
11 1 301 5 19 2 156 5 369 2 233 1 53 5 67 10 106 1 196 1 250 2 170 1 282 1 294 2 40 1 360 2 62 2 309 3 
11 1 301 1 19 2 369 1 233 1 53 2 67 2 12 1 106 1 282 1 294 1 40 1 
317 1 301 2 11 1 19 2 230 1 156 2 369 1 233 1 53 2 67 4 12 1 106 1 250 1 282 1 294 1 40 1 309 1 
11 3 301 2 19 6 192 1 156 2 67 3 233 3 53 1 117 1 106 1 282 3 294 1 40 3 176 1 360 1 62 1 309 1 
263 1 19 8 192 1 66 1 67 15 117 1 196 1 250 2 170 1 294 3 176 1 360 2 364 1 301 6 11 4 181 1 156 8 303 1 369 2 322 1 233 4 53 7 281 1 106 1 282 4 40 4 62 2 309 3 
0 1 263 1 19 2 66 1 67 8 250 1 170 1 360 1 364 1 125 1 11 1 301 2 181 1 156 4 369 1 322 1 233 1 53 4 106 1 282 1 40 1 62 1 309 2 
0 1 263 1 19 4 66 2 67 11 250 1 170 1 294 1 360 1 364 1 125 1 11 2 301 3 181 1 230 1 156 5 303 1 322 1 369 2 233 2 53 6 12 1 106 1 282 2 40 2 352 1 62 1 309 2 
0 1 263 1 19 6 66 1 67 19 194 1 250 3 170 1 171 1 267 1 294 1 360 1 176 1 364 1 317 2 125 1 11 3 301 4 181 1 230 2 156 10 303 1 277 1 322 1 369 3 233 3 53 9 12 2 106 1 282 3 40 3 62 1 309 3 
0 1 263 1 19 6 66 1 67 17 194 1 250 2 170 1 171 1 267 1 294 2 360 1 176 1 364 1 317 1 125 1 11 3 301 5 181 1 230 2 156 7 303 1 277 1 322 1 369 3 233 3 53 10 12 2 106 1 282 3 40 3 62 1 309 3 
0 1 263 1 19 2 66 1 67 8 250 1 170 1 360 1 364 1 125 1 11 1 301 2 181 1 156 4 369 1 322 1 233 1 53 4 106 1 282 1 40 1 62 1 309 2 
364 1 317 2 125 1 301 2 11 1 19 2 263 1 230 2 156 6 277 1 369 2 66 1 53 6 233 1 67 12 12 2 194 1 106 1 250 2 267 1 171 1 282 1 294 1 40 1 309 1 
0 1 263 1 19 8 66 1 67 18 194 1 250 2 170 1 267 1 171 1 294 2 360 1 176 2 364 1 317 1 125 1 11 4 301 5 181 1 230 2 156 8 303 1 277 1 322 1 369 3 233 4 53 10 12 2 106 1 282 4 40 4 62 1 309 3 
263 1 19 8 192 1 66 1 67 16 194 1 250 2 267 1 171 1 294 3 176 2 364 1 317 2 125 1 11 4 301 6 230 3 156 7 277 1 369 3 233 4 53 9 12 3 106 1 282 4 40 4 309 3 
301 6 181 2 156 4 322 1 369 1 67 7 53 3 250 1 170 1 294 3 360 3 62 3 309 3 
0 1 263 1 19 8 192 1 66 1 67 18 194 1 250 2 170 1 267 1 171 1 294 1 360 1 176 2 364 1 317 1 125 1 11 4 301 4 181 1 230 2 156 8 277 1 322 1 369 3 233 4 53 10 12 2 106 1 282 4 40 4 62 1 309 3 
31 1 357 1 109 1 129 1 323 1 165 1 235 1 
31 1 88 1 357 1 129 1 323 1 235 1 81 1 371 1 109 1 136 1 178 1 165 1 
103 1 167 1 291 1 252 1 72 1 312 1 224 1 168 1 79 1 146 1 56 1 
179 1 167 1 103 1 153 1 31 2 312 1 168 1 323 1 288 1 235 1 56 1 291 1 72 1 223 1 224 1 361 1 342 1 165 2 
167 3 312 1 220 1 168 1 288 1 291 2 72 1 223 2 361 1 342 1 179 2 31 2 153 1 103 1 205 1 255 1 323 1 235 2 56 1 36 1 327 1 137 1 165 2 
167 3 312 2 220 1 168 1 288 1 291 2 72 2 223 2 361 1 179 2 31 2 153 1 103 1 205 1 255 1 304 1 323 1 235 2 280 1 56 2 36 1 327 1 137 1 165 2 
167 4 312 3 220 1 168 1 245 1 247 1 266 1 291 1 72 3 224 1 272 2 29 1 274 1 179 1 103 1 229 2 183 1 157 1 280 1 56 3 36 1 108 1 327 1 
179 1 103 1 167 4 229 2 312 3 220 1 168 1 157 1 245 1 266 1 280 1 56 3 291 1 71 1 36 1 72 3 108 1 224 1 327 1 272 2 274 1 29 1 
103 1 72 1 228 1 312 1 168 1 56 1 
179 1 167 3 103 3 228 1 312 7 302 1 115 1 168 2 221 1 118 1 105 1 68 1 132 1 56 6 291 2 72 7 224 2 99 1 354 1 63 1 28 1 
18 1 19 2 312 1 67 8 196 1 250 2 170 1 72 1 315 1 223 1 294 1 360 1 361 1 28 1 31 1 153 1 301 3 11 1 254 1 321 1 181 1 205 1 156 4 369 2 322 1 53 4 233 1 323 1 235 1 56 1 159 1 282 1 40 1 242 1 62 1 309 2 165 1 
212 2 167 2 45 1 215 1 312 1 2 1 245 2 266 1 71 1 72 1 224 1 272 3 296 1 101 1 343 1 274 1 29 1 229 3 347 1 157 1 33 2 56 1 82 1 108 1 349 2 307 2 308 1 164 1 
179 1 167 2 103 2 228 1 312 2 203 1 302 1 168 1 56 2 291 1 72 2 28 1 29 1 
103 1 167 1 252 1 312 4 168 1 146 1 280 1 56 4 291 1 72 4 269 1 224 1 28 1 
179 1 167 1 103 2 312 2 78 1 220 1 168 1 221 1 34 1 56 2 291 1 72 2 7 1 354 1 
140 1 103 1 72 1 312 1 224 1 24 1 377 1 168 1 313 1 56 1 
103 1 167 1 291 1 72 2 312 2 340 1 168 1 115 1 63 1 56 2 28 1 
167 3 103 2 252 1 312 5 220 1 168 2 146 1 118 1 68 1 56 4 291 2 72 5 269 1 224 1 63 1 28 1 
167 3 103 2 252 1 319 1 312 5 220 1 168 2 146 1 118 1 56 4 291 2 72 5 269 1 224 1 63 1 28 1 
179 1 167 1 103 1 153 1 31 2 312 1 168 1 304 1 323 1 288 1 235 1 56 1 291 1 72 1 223 1 224 1 361 1 165 2 
179 1 167 1 103 2 312 1 220 1 302 1 168 1 221 1 56 1 291 1 72 1 99 1 354 1 
30 2 31 1 154 1 205 1 323 1 235 1 22 1 239 1 242 1 362 1 17 1 165 1 
286 1 45 1 216 1 1 1 144 1 266 1 22 1 223 1 272 2 74 1 362 1 274 1 30 2 153 1 31 2 154 1 227 1 229 2 205 2 255 1 235 2 209 1 188 1 239 1 375 1 108 1 162 1 137 1 17 1 165 2 
22 1 154 1 
30 1 144 1 162 1 
64 1 256 1 79 1 363 1 
64 1 346 1 120 1 89 1 256 1 185 1 363 1 
120 1 149 1 85 1 
64 1 346 1 46 1 89 1 243 1 52 2 185 3 120 3 256 1 9 1 191 1 363 1 
64 1 346 1 120 2 77 1 89 1 256 1 150 1 185 2 363 1 
140 1 346 1 120 1 374 1 89 1 256 1 145 1 313 1 175 1 185 1 9 1 
64 1 346 1 120 1 89 1 256 1 185 1 9 1 
64 2 346 1 120 1 89 1 185 1 9 1 363 1 
64 1 346 2 120 2 89 2 256 1 295 1 86 1 185 2 123 1 9 1 
64 1 87 1 346 1 96 1 120 3 189 1 89 1 256 2 145 1 150 2 185 3 9 1 363 1 
64 1 140 2 346 1 89 1 32 1 313 1 185 2 338 1 120 2 374 1 256 1 24 1 150 1 9 1 363 1 
64 1 346 2 77 1 89 2 145 1 185 4 120 4 96 1 256 2 150 2 9 1 363 1 275 1 
64 1 346 1 120 1 89 1 256 1 185 1 9 1 363 1 
64 2 346 1 46 1 243 1 89 1 52 1 145 1 248 1 185 4 120 4 96 1 256 3 150 2 363 2 
64 1 346 1 89 1 47 1 185 2 4 1 120 2 326 1 256 1 150 1 9 1 363 1 
64 1 346 1 46 2 243 1 89 1 52 2 185 3 120 3 256 1 9 1 259 1 363 1 
134 1 158 2 198 1 256 2 
346 1 120 1 89 1 367 1 185 1 9 1 
64 1 87 1 346 1 120 2 89 1 256 1 150 1 185 2 9 1 363 1 
44 1 
64 1 346 1 120 1 89 1 256 1 185 1 9 1 363 1 
64 1 87 1 346 1 120 3 89 1 256 1 52 1 150 1 185 3 9 1 363 1 
96 1 256 1 145 1 248 1 
64 1 256 1 

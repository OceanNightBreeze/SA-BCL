#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 279 (215,335) (215,335) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 279 (215,335) (215,335) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 279 (215,335) (215,335) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 279 (215,335) (215,335) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 30 (2,48,316) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (76,84,118,141) (76,84,118,141) (18,138,174) (18,138,174) (18,138,174) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (76,84,118,141) (76,84,118,141) (18,138,174) (18,138,174) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (76,84,118,141) (76,84,118,141) (18,138,174) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (76,84,118,141) (76,84,118,141) (18,138,174) (18,138,174) (18,138,174) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 255 27 321 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3533 | stmt -> ;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 627 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z | OPERATOR | 5298 | && -> ||
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2408 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal; | RETURN | 998 | return null
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 822 | = null
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3137 | = null
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
183 1 76 1 340 1 150 1 273 1 358 1 215 1 335 1 107 1 244 1 118 1 279 1 84 1 
183 1 76 1 150 1 340 1 273 1 358 1 215 1 335 1 107 1 244 1 118 1 279 1 84 1 
183 1 76 1 150 1 340 1 273 1 358 1 215 1 335 1 107 1 244 1 118 1 279 1 84 1 
183 1 76 1 150 1 340 1 273 1 358 1 215 1 335 1 107 1 244 1 118 1 279 1 84 1 
183 4 76 1 285 1 340 1 150 1 298 1 358 1 141 3 203 1 276 1 118 4 279 1 84 1 374 3 36 2 323 2 122 1 38 1 
183 2 76 1 340 1 273 1 369 1 358 1 203 1 107 1 97 1 306 1 118 2 206 1 279 1 374 1 84 1 38 1 
183 3 76 2 285 1 273 1 358 1 141 1 203 1 118 3 84 2 374 2 35 1 36 1 38 1 
183 9 327 1 76 2 10 1 340 1 150 1 285 3 298 1 273 1 358 1 141 7 203 1 276 1 348 1 118 9 279 1 374 5 84 2 62 1 35 1 36 4 122 1 323 2 38 1 
183 9 327 1 76 2 10 1 340 1 150 1 285 3 298 1 273 1 358 1 141 7 203 1 276 1 348 1 118 9 279 1 374 5 84 2 62 1 35 1 36 4 122 1 323 2 38 1 
287 1 78 1 152 1 
156 1 300 2 78 1 
315 2 100 2 28 2 248 2 186 1 177 2 265 2 24 1 
314 2 315 3 11 1 202 1 71 1 205 1 262 1 264 2 363 2 119 1 100 2 207 1 49 1 146 1 147 1 177 3 265 2 20 1 24 1 51 1 368 1 28 2 186 1 53 1 345 1 190 1 191 1 153 1 337 1 308 1 33 1 34 1 248 2 86 1 353 2 135 1 89 2 
315 1 100 1 28 1 248 1 186 1 177 1 265 1 310 1 102 1 66 1 
196 1 315 1 287 1 78 1 93 1 79 1 334 1 346 1 56 1 110 1 100 1 177 1 21 1 66 1 
196 1 315 1 28 1 287 1 78 1 93 1 346 1 56 2 110 1 100 1 248 1 265 1 177 1 21 2 66 1 
304 1 362 1 168 1 21 1 56 1 
362 1 168 1 287 1 339 1 78 1 21 2 325 1 56 2 
168 1 21 1 56 1 
315 1 186 1 28 1 56 1 362 1 100 1 248 1 265 1 177 1 310 1 21 1 102 1 377 1 66 1 
78 1 
362 1 168 1 139 1 287 1 339 1 78 1 21 2 56 2 
198 1 330 1 287 1 130 1 331 2 78 1 106 1 56 5 362 2 234 1 60 2 168 2 236 1 176 1 339 1 134 2 21 5 283 1 39 1 
24 1 152 1 
269 1 315 2 28 1 100 2 248 1 175 1 177 2 265 1 24 2 
82 1 199 1 115 1 
315 1 11 1 202 1 44 1 191 1 262 1 264 1 363 1 119 1 308 1 49 1 147 1 177 1 353 1 135 1 24 1 
315 2 28 1 11 1 202 1 115 1 191 1 262 1 264 1 363 1 119 1 308 1 100 1 49 1 147 1 349 1 265 1 177 2 194 1 135 1 353 1 
315 3 100 3 248 1 28 3 349 1 177 3 265 3 24 1 
315 1 100 1 28 1 177 1 265 1 310 1 66 1 
269 1 315 1 100 1 28 1 248 1 175 1 177 1 265 1 66 1 
196 1 314 1 315 4 160 1 11 1 202 1 93 1 71 1 205 1 262 1 264 1 119 1 363 1 100 3 207 1 49 1 147 1 177 4 265 3 267 1 21 1 24 1 51 1 269 1 28 3 186 1 53 1 345 1 190 1 191 1 153 1 346 1 56 1 110 1 308 1 34 1 248 2 349 1 86 1 194 1 135 1 353 1 89 2 66 1 
315 2 100 2 209 1 28 1 177 2 265 1 349 1 334 1 24 1 
196 1 269 1 315 3 28 3 78 1 93 1 56 1 346 1 110 1 100 3 132 1 248 1 349 2 265 3 177 3 21 1 194 1 267 1 66 1 
269 1 315 2 199 1 28 2 115 1 100 2 248 1 349 1 265 2 177 2 
315 1 202 1 11 1 191 1 262 1 264 1 363 1 119 1 308 1 49 1 147 1 177 1 353 1 135 1 24 1 
315 1 257 1 202 1 11 1 191 1 32 1 264 1 363 1 308 1 49 1 147 1 177 1 353 1 135 1 24 1 
314 4 199 2 115 2 318 1 71 1 205 1 207 1 146 2 295 1 4 1 180 1 51 1 129 1 301 1 53 1 345 2 305 1 216 1 109 1 82 2 131 1 34 1 217 1 89 2 
110 1 315 1 100 1 293 1 28 1 177 1 265 1 66 1 
269 1 315 5 28 4 334 1 1 1 302 1 100 5 209 1 248 1 349 2 265 4 177 5 194 1 24 1 
315 2 100 2 293 1 28 2 177 2 265 2 310 1 66 1 
48 1 290 1 
48 1 290 1 
316 1 30 1 
316 1 30 1 
48 1 316 1 30 1 290 1 
48 1 290 1 355 1 
48 1 316 1 30 1 290 1 
48 1 290 1 2 1 
48 1 290 1 355 1 
48 1 290 1 355 1 
48 1 172 1 290 1 
48 1 172 1 290 1 
48 1 172 1 290 1 
126 1 184 1 185 3 225 1 77 1 78 1 228 1 290 2 56 2 233 2 48 2 294 1 266 1 351 2 181 2 21 2 239 1 221 2 124 2 
315 2 225 1 290 1 164 1 260 1 2 1 233 1 48 1 100 2 265 2 177 2 238 1 181 1 21 1 24 1 26 1 124 1 52 1 28 2 185 1 56 1 351 1 195 1 91 1 
279 1 340 1 150 1 
279 1 340 1 97 1 
297 1 150 2 340 3 311 1 104 1 97 1 
297 1 150 1 340 2 3 1 104 1 97 1 
297 2 150 1 340 2 104 1 97 1 
224 1 0 2 68 2 287 1 318 1 164 1 260 1 362 4 99 2 236 3 295 1 176 1 238 1 21 5 329 1 242 1 300 3 331 1 370 1 78 2 106 2 56 5 305 1 277 1 60 1 168 1 156 1 134 1 339 1 217 1 67 1 136 1 
224 2 0 6 68 6 287 1 318 3 173 5 12 1 234 1 362 7 236 8 178 1 295 3 238 4 176 1 21 9 25 1 29 1 300 9 331 2 370 2 333 1 78 5 106 6 56 9 305 3 304 5 277 1 168 6 60 2 156 3 339 1 134 2 217 3 67 3 92 1 
224 1 0 2 287 1 68 2 318 1 362 2 234 1 99 1 236 3 238 1 295 1 21 3 242 1 300 4 331 1 370 1 78 3 106 2 56 3 305 1 60 1 156 2 134 1 217 1 136 1 67 1 
224 1 0 4 287 1 68 4 318 2 234 1 362 3 99 2 236 5 178 1 238 2 295 2 21 4 25 1 242 1 300 7 331 1 370 1 333 1 78 4 106 4 56 4 305 2 60 1 156 3 134 1 217 2 136 1 67 2 
17 1 11 1 152 1 
167 1 11 1 
375 1 
308 1 11 1 
308 1 17 2 147 1 11 3 96 1 212 1 
308 1 147 1 11 1 
11 1 245 1 
41 2 314 6 129 4 162 1 345 3 80 1 54 1 318 1 303 1 347 1 58 1 146 3 281 2 217 1 64 1 180 2 166 2 
41 2 314 6 129 4 162 1 345 3 80 1 54 1 318 1 303 1 347 1 58 1 146 3 281 2 217 1 64 1 180 2 166 2 
41 2 314 6 129 4 162 1 345 3 80 1 54 1 318 1 303 1 347 1 58 1 61 1 146 3 281 2 217 1 64 1 180 2 166 2 
40 1 41 3 314 32 200 1 161 1 162 2 71 1 318 4 46 3 207 1 146 16 295 3 322 1 180 5 166 6 51 1 125 4 129 11 345 16 80 2 54 1 275 1 303 1 347 2 305 3 58 1 34 1 281 3 169 1 217 4 64 1 87 1 89 2 67 3 
41 2 314 8 162 1 318 1 71 2 98 1 207 2 146 4 180 3 166 1 51 2 129 4 80 1 345 4 275 1 54 1 303 1 347 1 34 2 281 2 217 1 64 1 9 1 89 4 
183 1 76 1 138 1 273 1 256 1 187 1 332 1 141 1 358 1 174 1 13 1 118 2 264 1 363 1 84 1 85 1 18 1 240 1 353 1 
183 2 76 1 138 1 273 1 256 1 187 1 141 2 359 1 174 1 13 1 118 3 264 1 363 1 84 1 85 1 210 1 365 1 240 1 353 1 
183 1 273 1 187 1 141 2 359 1 174 1 13 1 118 2 264 1 363 1 85 1 365 1 240 1 353 1 
137 1 202 1 11 1 13 2 264 1 118 1 363 1 49 1 208 1 210 1 183 1 76 1 272 1 273 2 187 2 344 1 151 1 308 1 84 1 85 2 353 1 135 1 90 1 
183 1 76 1 138 1 273 1 256 1 187 1 141 1 358 1 174 1 13 1 118 2 264 1 363 1 84 1 85 1 18 1 365 1 240 1 353 1 
105 1 
224 1 287 1 289 2 93 1 94 1 142 1 45 1 47 1 100 1 49 2 236 2 237 1 176 1 177 1 179 1 103 4 300 2 344 1 106 2 56 5 346 1 246 2 110 1 307 1 155 2 308 1 60 1 156 2 350 2 158 2 353 2 66 1 196 1 255 1 315 1 11 1 202 1 258 1 264 2 363 2 21 5 272 1 331 1 78 2 79 1 334 1 372 1 280 1 168 6 339 3 134 1 170 1 218 2 135 1 88 2 
196 1 315 1 139 1 93 1 45 1 100 1 237 1 177 1 21 3 103 2 334 1 79 1 56 3 346 1 372 1 110 1 307 1 168 2 339 1 170 1 88 1 66 1 
196 1 315 1 139 1 287 1 93 1 45 1 100 1 237 1 177 1 21 3 103 3 78 1 334 1 79 1 56 3 346 1 372 1 110 1 307 1 168 1 350 1 339 1 170 1 66 1 
196 1 315 1 139 1 287 1 93 1 45 1 100 1 237 1 177 1 21 3 103 3 78 1 334 1 79 1 56 3 346 1 372 1 110 1 307 1 168 2 339 1 350 1 170 1 158 1 88 1 66 1 
139 1 287 1 93 1 289 1 94 1 45 1 100 2 237 1 236 1 177 2 176 1 102 1 103 3 186 1 106 1 346 1 56 4 110 1 246 1 307 1 155 1 60 1 248 1 156 1 350 1 310 1 158 3 63 1 66 2 196 1 255 1 315 2 265 1 21 4 268 1 27 1 271 1 28 1 331 1 78 1 79 1 334 1 371 1 372 1 168 5 339 2 134 1 170 1 218 1 377 1 88 3 
287 1 93 1 289 2 94 1 45 1 100 1 237 1 236 1 177 1 176 1 103 4 300 2 106 1 346 1 56 4 110 1 246 2 307 1 155 2 60 1 156 2 350 2 158 2 66 1 196 1 255 1 315 1 258 1 21 4 331 1 78 2 334 1 79 1 372 1 168 4 134 1 339 2 170 1 218 2 88 2 
287 1 93 1 289 1 94 1 45 1 100 2 237 1 236 1 176 1 177 2 102 1 103 3 186 1 106 1 346 1 56 3 110 1 246 1 307 1 155 1 60 1 248 1 156 1 350 1 310 1 63 1 158 1 66 2 196 1 255 1 315 2 265 1 21 3 27 1 271 1 28 1 331 1 78 1 79 1 334 1 372 1 168 2 134 1 339 1 170 1 218 1 377 1 88 1 
287 1 93 1 289 1 94 1 45 1 100 2 237 1 236 1 176 1 177 2 102 1 103 3 186 1 106 1 346 1 56 3 110 1 246 1 307 1 155 1 60 1 248 1 156 1 350 1 310 1 63 1 158 1 66 2 196 1 255 1 315 2 265 1 21 3 27 1 271 1 28 1 331 1 78 1 79 1 334 1 372 1 168 2 134 1 339 1 170 1 218 1 377 1 88 1 
196 1 255 1 315 1 93 1 45 1 100 1 321 1 237 1 177 1 21 2 27 1 103 2 334 1 79 1 56 2 346 1 372 1 110 1 307 1 155 1 170 1 218 1 66 1 
287 1 93 1 289 1 94 1 45 1 100 2 237 1 236 1 177 2 176 1 102 1 103 4 186 1 106 1 346 1 56 3 110 1 246 1 307 1 155 1 60 1 248 1 156 1 350 2 310 1 63 1 158 2 66 2 196 1 255 1 315 2 265 1 21 3 27 1 271 1 28 1 331 1 78 1 79 1 334 1 371 1 372 1 168 3 134 1 339 1 170 1 218 1 377 1 88 2 
287 1 93 1 289 1 94 1 45 1 100 2 237 1 236 1 177 2 176 1 102 1 103 4 186 1 106 1 346 1 56 3 110 1 246 1 307 1 155 1 60 1 248 1 156 1 350 2 310 1 63 1 158 2 66 2 196 1 255 1 315 2 265 1 21 3 27 1 271 1 28 1 331 1 78 1 79 1 334 1 371 1 372 1 168 3 134 1 339 1 170 1 218 1 377 1 88 2 
287 1 93 1 229 2 45 1 100 1 237 1 236 1 101 1 177 1 176 1 103 4 300 2 8 2 106 1 346 1 56 4 110 1 307 1 155 2 60 1 350 2 158 2 66 1 196 1 255 1 315 1 258 1 21 4 331 1 78 1 334 1 79 1 372 1 168 4 134 1 339 2 170 1 218 2 88 2 
51 1 41 2 314 5 129 2 53 1 345 3 54 1 318 1 71 1 205 1 152 1 303 1 109 1 207 1 146 2 34 1 281 2 217 1 64 1 180 2 24 2 89 2 
254 1 314 14 200 1 199 4 43 1 115 11 71 2 318 1 205 1 46 3 207 2 146 8 295 2 322 1 180 1 166 1 24 1 75 1 125 3 51 2 368 1 129 2 53 2 345 6 153 1 305 1 82 11 247 1 34 2 217 2 89 4 37 1 67 2 
315 2 314 2 199 1 226 1 11 1 202 1 44 1 95 1 71 1 205 1 116 1 262 1 264 1 119 1 363 1 100 1 49 1 207 1 147 1 146 1 177 2 265 1 24 1 51 1 368 1 28 1 53 1 345 1 191 1 153 1 308 1 34 1 349 1 194 1 135 1 353 1 89 2 37 1 
41 2 100 1 49 1 147 2 146 9 177 3 295 2 180 4 51 3 189 1 53 3 345 10 54 1 190 2 191 2 303 1 55 2 153 1 305 2 308 2 349 1 157 2 64 1 194 1 353 3 67 2 356 1 313 2 315 3 314 19 199 6 202 2 11 2 115 6 318 3 71 3 205 3 262 2 264 3 363 3 119 2 207 3 265 1 365 1 72 1 166 4 24 2 368 1 28 1 129 8 81 2 82 6 34 3 281 2 217 3 135 2 89 6 37 1 
315 1 314 2 202 2 11 3 71 2 163 1 205 2 264 8 363 7 100 1 49 2 207 2 146 1 177 1 265 1 365 1 51 2 272 1 328 1 368 1 28 1 188 1 332 1 344 1 53 2 345 1 153 1 278 1 109 1 83 1 308 2 33 2 34 2 349 1 135 2 353 8 89 4 312 1 253 1 
315 1 314 3 199 1 115 1 71 1 318 1 205 1 100 1 320 1 207 1 146 1 265 1 177 1 295 1 180 1 51 1 269 1 129 1 28 1 53 1 345 2 305 1 82 1 248 1 34 1 217 1 89 2 37 1 67 1 
51 1 314 2 199 1 129 1 301 1 115 1 53 1 71 1 205 1 109 1 82 1 207 1 34 1 146 2 295 1 217 1 166 1 89 2 
51 1 314 2 199 1 129 1 115 1 53 1 345 2 71 1 318 1 205 1 305 1 109 1 216 1 82 1 207 1 34 1 180 1 89 2 
314 4 199 2 115 2 71 1 318 1 205 1 207 1 146 2 295 1 180 1 166 1 51 1 129 2 53 1 345 2 305 1 109 1 82 2 34 1 217 1 89 2 67 1 
51 1 314 2 199 1 129 1 301 1 115 1 53 1 71 1 205 1 82 1 207 1 34 1 146 2 295 1 217 1 166 1 89 2 312 1 
51 1 314 2 199 1 129 1 115 1 53 1 345 2 71 1 318 1 205 1 305 1 216 1 82 1 207 1 34 1 180 1 89 2 312 1 
314 4 199 2 115 2 71 1 318 1 205 1 207 1 146 2 295 1 180 1 166 1 51 1 129 2 53 1 345 2 305 1 82 2 34 1 217 1 89 2 67 1 312 1 
314 4 199 2 115 2 71 1 318 1 205 1 207 1 146 2 295 1 180 1 166 1 51 1 129 2 53 1 345 2 305 1 82 2 34 1 217 1 89 2 67 1 
314 2 315 1 202 1 11 1 71 1 205 1 262 1 264 1 119 1 363 1 49 1 207 1 146 1 147 1 177 1 24 1 51 1 368 1 53 1 345 1 190 1 191 1 153 1 308 1 34 1 135 1 353 1 89 2 
314 2 315 1 257 1 202 1 11 1 71 1 205 1 264 1 363 1 145 1 49 1 207 1 146 1 147 1 177 1 24 1 51 1 368 1 53 1 345 1 191 1 153 1 32 1 308 1 34 1 135 1 353 1 89 2 
314 4 199 2 115 2 71 1 318 1 205 1 207 1 146 2 295 1 180 1 166 1 51 1 129 2 53 1 345 2 305 1 82 2 34 1 217 1 89 2 67 1 37 1 
314 4 315 1 199 2 202 1 11 1 115 2 318 1 71 1 205 1 262 1 264 1 119 1 363 1 207 1 146 2 147 1 295 1 177 1 180 1 166 1 51 1 129 2 332 1 53 1 345 2 190 1 191 1 305 1 82 2 308 1 34 1 157 1 217 1 135 1 353 1 89 2 67 1 
315 1 314 3 199 1 115 1 318 1 71 1 205 1 100 1 207 1 146 2 265 1 177 1 295 1 73 1 166 1 51 1 269 1 129 1 28 1 53 1 345 1 305 1 82 1 248 1 34 1 217 1 89 2 37 1 67 1 
197 1 314 19 200 1 204 1 71 2 318 3 46 1 207 2 343 1 146 9 295 3 121 1 322 1 367 2 180 3 166 3 211 1 125 2 51 2 6 1 129 6 7 1 345 10 305 3 34 2 251 2 217 3 9 1 89 4 67 3 
197 1 314 26 200 2 317 1 360 1 70 1 318 2 71 3 46 2 232 1 207 3 146 14 295 3 121 2 367 1 180 2 166 2 211 1 51 3 125 2 129 4 6 2 7 1 345 12 275 2 305 2 338 1 34 3 251 4 252 1 217 3 9 1 89 6 67 3 
41 2 197 1 314 43 200 3 317 1 204 1 360 1 70 1 71 3 318 5 46 3 232 1 207 3 146 20 295 4 121 2 322 1 367 1 180 5 166 5 211 1 125 4 51 3 6 1 129 10 243 1 7 1 345 23 54 1 275 1 303 1 305 4 338 1 34 3 281 2 251 4 252 1 217 5 64 1 9 1 89 6 67 4 
41 2 197 1 314 38 200 3 317 1 204 1 360 1 70 1 71 4 318 4 46 3 232 1 207 4 146 19 295 4 121 2 322 1 367 1 180 5 166 3 211 1 125 4 51 4 6 1 129 8 243 1 7 1 345 19 54 1 275 2 303 1 305 3 338 1 34 4 281 2 251 4 252 1 217 5 64 1 9 1 89 8 67 4 
41 2 197 1 314 52 200 2 43 2 317 1 360 1 70 1 71 2 318 8 46 4 232 1 207 2 146 26 295 7 121 1 322 2 367 1 180 8 166 7 211 1 125 4 51 2 6 1 129 15 7 1 345 26 54 1 275 1 303 1 305 7 338 1 34 2 281 2 251 4 252 1 217 8 64 1 9 1 89 4 67 7 
126 1 233 1 48 1 77 1 266 1 74 1 181 1 351 1 290 1 124 1 
2 1 91 1 
154 1 233 1 48 1 282 1 22 1 181 1 351 1 290 1 124 1 
126 1 184 1 185 2 225 1 77 1 78 1 228 1 290 1 56 1 233 1 48 1 266 1 21 1 351 1 181 1 239 1 221 1 124 1 
126 1 184 1 185 2 225 1 77 1 78 1 228 1 290 1 56 1 233 1 48 1 266 1 21 1 351 1 181 1 239 1 221 1 124 1 
126 1 184 1 185 2 225 1 77 1 78 1 228 1 290 1 56 1 233 1 48 1 266 1 21 1 351 1 181 1 239 1 221 1 124 1 
23 1 31 1 355 1 
23 1 31 1 355 1 
172 1 366 1 
172 1 366 1 23 1 
52 1 26 1 
315 2 290 1 164 1 260 1 2 1 362 1 233 1 48 1 100 2 177 2 238 1 265 2 21 1 181 1 24 1 26 1 124 1 184 1 52 1 185 1 28 2 56 1 57 1 351 1 195 1 221 1 91 1 
31 1 355 1 
172 1 366 1 23 1 
223 1 315 2 314 2 202 1 71 1 205 1 341 1 261 1 264 2 363 2 100 2 207 1 120 1 146 1 177 2 51 1 368 1 188 1 53 1 345 1 153 1 33 2 34 1 249 1 135 1 353 2 89 2 37 1 
256 1 332 1 264 2 165 1 363 2 85 1 133 1 365 1 353 2 324 1 240 1 
256 1 264 1 165 1 363 1 85 1 365 1 193 1 353 1 240 1 
272 1 202 1 11 1 344 1 264 1 363 1 308 1 49 1 208 1 85 1 133 1 135 1 353 1 159 1 
165 1 264 1 363 1 256 1 85 1 133 1 365 1 240 1 324 1 353 1 
182 1 
236 1 287 1 130 1 78 1 106 1 39 1 152 1 
287 1 289 1 94 1 236 1 176 1 21 1 300 1 331 1 78 2 106 1 56 1 246 1 60 1 168 1 156 1 134 1 339 1 
42 1 224 1 286 1 0 3 68 3 11 3 202 2 171 1 227 1 96 1 318 1 264 1 342 1 363 1 49 1 147 1 236 4 295 1 176 2 21 1 5 1 167 2 300 6 331 2 78 3 81 1 106 3 336 1 56 1 305 1 308 1 168 1 60 2 156 3 339 1 134 2 217 1 353 1 135 1 284 1 67 1 
222 1 224 1 200 1 0 5 68 5 287 2 171 2 317 1 360 1 70 1 318 2 46 1 232 1 236 8 176 2 295 2 19 1 21 1 125 1 299 1 300 6 331 2 78 5 106 5 56 1 305 2 338 1 280 1 168 1 60 2 156 3 339 1 134 2 217 2 67 2 
41 1 315 1 171 2 318 1 100 1 236 2 177 1 176 1 265 1 19 1 21 1 102 1 213 1 271 1 186 1 28 1 331 1 106 2 56 1 60 1 248 1 281 1 134 1 310 1 217 2 64 1 377 1 66 1 
287 1 331 1 130 1 78 1 106 1 60 1 236 1 176 1 134 1 39 1 
0 5 68 5 300 10 78 5 171 2 81 1 106 5 318 2 305 2 236 5 295 2 156 5 19 1 217 2 67 2 
168 1 287 1 339 1 78 1 21 1 56 1 
357 1 224 2 202 1 11 1 47 1 234 1 264 4 363 4 49 2 236 2 176 1 179 1 21 3 270 2 272 1 331 2 344 1 106 2 56 3 308 1 60 2 168 4 280 2 192 1 134 2 339 2 352 1 135 1 353 4 
314 1 315 3 202 1 11 1 71 1 205 1 262 1 264 1 363 1 119 1 100 2 49 1 207 1 147 1 177 3 265 2 24 1 51 1 28 2 186 1 53 1 345 1 190 1 191 1 153 1 308 1 34 1 248 2 86 1 353 1 135 1 89 2 
224 1 0 2 68 2 300 4 287 2 331 1 78 4 162 1 106 2 60 1 280 1 236 1 156 2 176 1 134 1 
233 1 114 1 181 1 
233 1 77 1 376 1 181 1 26 1 
233 1 114 1 181 1 
233 1 114 1 181 1 
233 1 250 1 181 1 
233 1 250 1 181 1 
233 1 250 1 181 1 
233 1 181 1 
48 1 290 1 
51 2 41 2 314 9 129 4 345 5 275 1 54 1 318 1 71 2 303 1 207 2 146 4 34 2 281 2 217 1 64 1 180 2 166 2 89 4 
41 2 314 5 129 2 345 3 54 1 318 1 152 1 303 1 146 2 281 2 217 1 64 1 180 2 
51 1 314 4 129 2 345 2 318 1 71 1 305 1 59 1 207 1 34 1 146 2 295 1 217 1 180 1 166 1 89 2 67 1 
125 2 314 7 200 1 129 2 345 4 318 1 46 1 305 1 146 3 295 1 322 1 217 1 180 1 166 1 67 1 
41 3 314 22 43 1 318 3 71 2 291 1 46 2 207 2 146 10 295 2 322 1 180 5 166 4 75 1 125 2 51 2 129 9 345 12 54 1 275 2 303 1 305 2 34 2 281 3 217 3 64 1 89 4 67 2 
125 1 314 1 345 1 
314 1 146 1 46 1 
51 1 314 6 129 3 81 1 345 3 71 1 318 1 305 1 59 1 207 1 34 1 146 3 295 1 217 1 180 2 166 1 89 2 67 1 
314 12 200 1 317 1 360 1 71 1 318 2 70 1 46 1 232 1 207 1 146 6 295 2 180 1 166 1 125 1 51 1 129 2 345 6 305 2 338 1 34 1 217 2 9 1 89 2 67 2 
41 1 314 4 129 1 345 2 318 1 146 2 281 1 217 1 64 1 180 1 
51 1 41 1 314 3 129 2 345 2 275 1 54 1 291 1 71 1 303 1 207 1 146 1 34 1 281 1 180 1 166 1 89 2 
41 2 213 1 314 5 129 2 345 3 318 1 146 2 281 2 217 1 64 1 180 2 
51 1 314 2 129 1 71 1 207 1 34 1 146 2 295 1 217 1 9 1 166 1 89 2 
51 1 314 4 129 2 345 2 318 1 71 1 305 1 207 1 34 1 146 2 295 1 217 1 180 1 9 1 166 1 89 2 67 1 
51 3 41 1 314 3 129 2 345 2 275 1 204 1 291 1 71 3 207 3 34 3 146 1 281 1 9 1 180 1 166 1 89 6 
40 1 41 3 314 35 200 1 161 1 204 1 291 1 71 5 318 5 46 3 207 5 146 16 295 3 322 1 180 6 166 6 125 4 51 5 129 12 345 19 54 1 275 2 303 1 305 3 59 1 34 5 281 3 217 5 64 2 9 1 87 1 89 10 67 3 
41 2 314 7 200 1 317 1 318 1 71 1 46 1 207 1 146 3 180 2 125 1 51 1 129 2 345 4 54 1 303 1 34 1 281 2 217 1 64 1 9 1 89 2 
41 2 314 10 200 1 317 1 318 1 71 2 46 1 207 2 146 5 295 1 322 1 180 2 166 1 125 2 51 2 129 3 345 5 54 1 303 1 59 1 34 2 281 2 217 2 64 1 9 1 89 4 67 1 
41 2 314 18 200 1 317 1 360 1 71 3 318 3 70 1 46 1 232 1 207 3 146 8 295 2 180 3 166 1 125 1 51 3 129 4 345 10 54 1 275 1 303 1 305 2 338 1 59 1 34 3 281 2 217 3 64 1 9 1 89 6 67 2 
41 2 314 16 200 1 317 1 360 1 71 3 318 2 70 1 46 1 232 1 207 3 146 9 295 2 180 3 166 3 125 1 51 3 129 6 345 7 54 1 275 1 303 1 305 1 338 1 59 1 34 3 281 2 217 3 64 1 9 1 89 6 67 2 
41 2 314 7 200 1 317 1 318 1 71 1 46 1 207 1 146 3 180 2 125 1 51 1 129 2 345 4 54 1 303 1 34 1 281 2 217 1 64 1 9 1 89 2 
314 12 200 1 317 1 360 1 71 1 318 2 70 1 46 1 232 1 207 1 146 6 295 2 180 1 166 1 125 1 51 1 129 2 345 6 305 2 338 1 34 1 217 2 9 1 89 2 67 2 
41 2 314 17 200 1 317 1 360 1 70 1 71 4 318 2 46 1 232 1 207 4 146 9 295 2 180 3 166 3 125 1 51 4 129 6 345 8 54 1 275 2 303 1 305 1 338 1 59 1 34 4 281 2 217 3 64 1 9 1 89 8 67 2 
314 16 200 1 317 1 360 1 204 1 70 1 71 4 318 2 46 1 232 1 207 4 146 9 295 3 180 3 166 3 125 1 51 4 129 6 345 7 275 2 305 2 338 1 34 4 217 3 9 1 89 8 67 3 
41 2 314 7 129 4 345 4 54 1 318 1 303 2 146 3 281 2 217 1 64 1 180 2 166 2 
41 2 314 17 200 1 317 1 360 1 204 1 70 1 71 4 318 2 46 1 232 1 207 4 146 9 295 2 180 3 166 1 125 1 51 4 129 4 345 8 54 1 275 2 303 1 305 1 338 1 34 4 281 2 217 3 64 1 9 1 89 8 67 2 
315 1 100 1 128 1 209 1 177 1 334 1 24 1 
315 1 128 1 334 1 108 1 231 1 292 1 100 1 235 1 209 1 177 1 24 1 65 1 
264 1 363 1 308 1 272 1 49 1 202 1 11 1 344 1 135 1 353 1 152 1 
315 2 28 1 11 1 202 1 191 1 262 1 264 1 363 1 308 1 100 1 49 1 147 1 349 1 265 1 177 2 353 1 135 1 24 1 
196 1 315 2 270 1 28 1 11 3 202 1 191 1 245 1 262 1 263 1 110 1 264 1 363 1 308 2 100 2 147 2 349 1 265 2 177 2 353 1 135 1 24 1 66 1 
196 1 315 2 257 1 202 1 11 3 264 2 263 1 363 2 100 2 147 2 177 2 265 2 50 1 24 1 270 1 28 1 191 1 245 1 110 1 308 2 349 1 135 1 353 2 66 1 
315 1 287 1 11 1 264 1 15 1 363 1 100 1 265 1 177 1 21 1 102 1 167 1 270 1 186 1 28 1 78 1 56 1 248 1 310 1 353 1 377 1 66 1 
315 1 287 1 11 1 227 1 264 1 363 1 100 1 265 1 177 1 21 1 102 1 167 1 270 1 186 1 28 1 78 1 56 1 248 1 310 1 353 1 377 1 66 1 
264 1 278 1 363 1 202 1 135 1 353 1 
328 1 127 1 11 3 202 3 332 1 96 1 163 1 278 1 264 7 83 1 363 6 308 2 144 1 33 1 49 2 147 1 365 1 123 1 353 7 135 2 253 1 
41 2 223 1 314 5 315 2 11 1 202 1 318 1 71 2 205 2 262 1 264 1 363 1 119 1 100 1 207 2 146 2 147 1 177 2 265 1 180 2 24 2 51 2 129 2 28 1 332 1 53 2 345 3 54 1 190 1 191 1 303 1 55 1 308 1 34 2 281 2 349 1 157 1 217 1 64 1 135 1 353 1 89 4 37 1 
42 1 41 2 287 2 227 1 171 2 100 1 49 1 236 3 176 2 177 1 102 1 186 1 106 3 56 2 60 2 192 1 248 1 310 1 64 1 353 1 66 1 315 1 11 1 318 1 362 1 264 1 363 1 265 1 21 2 167 1 213 1 28 1 331 2 130 1 78 2 336 1 168 1 281 2 339 1 134 2 217 1 284 1 377 1 39 1 
11 2 202 2 332 1 96 1 278 1 264 2 363 2 342 1 308 1 17 1 147 1 353 2 135 1 
272 1 202 1 11 1 332 1 344 1 117 1 264 4 363 4 308 1 49 1 50 1 353 4 135 1 
270 1 127 1 11 1 202 2 361 1 14 1 264 2 363 2 308 1 144 1 147 1 72 1 353 2 135 1 
264 1 279 1 363 1 340 1 241 1 49 1 202 1 135 1 353 1 97 1 
261 1 264 2 363 2 202 1 365 1 332 1 135 1 353 2 
270 1 272 1 328 1 11 3 202 2 344 1 332 1 117 1 264 5 363 4 83 1 308 2 49 1 353 5 135 2 253 1 
270 1 272 1 328 1 11 3 202 2 344 1 332 1 117 1 264 5 363 4 83 1 308 2 49 1 353 5 135 2 354 1 
315 2 28 1 257 1 11 1 202 1 191 1 264 1 363 1 308 1 100 1 49 1 147 1 349 1 265 1 177 2 353 1 135 1 24 1 
270 1 127 1 11 1 202 2 96 1 264 1 363 1 308 1 144 1 147 1 123 1 353 1 135 1 
326 1 319 1 113 1 274 1 24 1 
196 1 326 2 113 2 287 1 78 1 93 1 274 2 346 1 56 2 110 1 319 1 362 1 16 1 309 1 111 1 21 2 267 1 24 1 66 1 
319 1 326 1 315 1 100 1 120 1 177 1 249 1 274 1 341 1 
319 1 309 1 111 1 
374 1 203 1 38 1 152 1 
183 1 118 1 76 1 374 1 84 1 203 1 38 1 
183 1 273 1 187 1 
183 3 76 1 69 1 358 1 140 1 203 1 118 3 306 2 374 1 84 1 220 1 38 1 
183 2 118 2 76 1 374 1 84 1 323 1 141 1 203 1 38 1 
183 1 118 1 279 1 76 1 340 1 150 1 374 1 84 1 36 1 122 1 358 1 
183 1 118 1 76 1 374 1 84 1 358 1 203 1 
183 1 118 1 76 1 84 1 358 1 203 2 38 1 
183 2 76 2 358 1 203 1 230 1 118 2 364 1 373 1 374 1 84 2 
183 3 327 1 76 1 285 1 358 1 141 2 203 1 118 3 348 1 84 1 374 2 36 1 38 1 
183 2 76 1 340 2 150 1 214 1 358 1 141 1 203 1 97 1 118 2 279 1 374 1 84 1 311 1 38 1 
183 4 76 2 285 1 358 1 141 2 203 1 276 1 118 4 84 2 374 2 36 1 323 1 38 1 
183 1 118 1 76 1 374 1 84 1 358 1 203 1 38 1 
183 4 76 1 285 1 288 1 140 1 141 2 203 2 306 1 118 4 84 1 374 3 36 1 220 1 38 2 
183 2 76 1 358 1 141 1 203 1 118 2 374 1 84 1 62 1 148 1 219 1 38 1 
183 3 76 1 358 1 140 2 203 1 143 1 118 3 306 2 374 1 84 1 220 1 38 1 
149 1 112 1 374 2 201 2 
183 1 118 1 76 1 84 1 296 1 358 1 
183 2 327 1 118 2 76 1 374 1 84 1 141 1 358 1 203 1 38 1 
259 1 
183 1 118 1 76 1 374 1 84 1 358 1 203 1 38 1 
183 3 327 1 76 1 141 1 358 1 203 1 118 3 306 1 84 1 374 1 38 1 
285 1 374 1 288 1 36 1 
374 1 203 1 

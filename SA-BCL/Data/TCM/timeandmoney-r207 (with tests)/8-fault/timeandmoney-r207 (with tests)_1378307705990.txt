#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 316 (24,70,151) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 45 92 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 45 92 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 45 92 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 45 92 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 45 92 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 95 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (260,338) 237 145 224 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 45 (41,129) (41,129) 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 17 195 61 85 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 17 225 61 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 17 195 61 85 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 17 195 61 85 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 17 195 61 85 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 113 225 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 45 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 45 (41,129) (41,129) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 95 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 17 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 145 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 17 225 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 17 356 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 17 225 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 17 225 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 17 225 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 17 225 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 17 225 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 17 225 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 17 225 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 45 (41,129) (41,129) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7790 | return null
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | ASSIGN | 5896 | = null
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | RETURN | 1770 | return null
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5209 | stmt -> ;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12144 | if (x) -> if (!x)
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V | CONSTANT | 6557 | 0 -> -1
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 839 | 12 -> 0
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
308 1 311 1 238 1 81 1 350 1 243 1 
308 1 311 1 238 1 81 1 350 1 243 1 
308 1 311 1 238 1 81 1 350 1 243 1 
308 1 311 1 238 1 81 1 350 1 243 1 
217 1 84 1 1 3 236 1 135 1 87 1 337 2 238 1 350 4 340 1 308 4 32 1 311 1 80 1 39 3 243 1 301 2 173 1 
84 1 135 1 238 1 350 2 308 2 295 1 32 1 322 1 240 1 311 1 141 1 39 1 80 1 171 1 243 1 40 1 
182 1 217 1 1 1 238 1 350 3 308 3 32 1 311 2 80 1 39 2 243 2 301 1 40 1 
217 3 84 1 1 7 236 1 87 1 238 1 350 9 32 1 39 5 243 2 301 4 40 1 331 1 182 1 68 1 135 1 337 2 209 1 340 1 308 9 311 2 118 1 80 1 173 1 
217 3 84 1 1 7 236 1 87 1 238 1 350 9 32 1 39 5 243 2 301 4 40 1 331 1 182 1 68 1 135 1 337 2 209 1 340 1 308 9 311 2 118 1 80 1 173 1 
264 1 95 1 199 1 
233 1 320 2 199 1 
343 2 213 2 321 2 55 2 63 1 131 2 339 2 162 1 
52 2 293 1 294 1 267 1 54 1 122 1 124 2 55 2 221 1 222 2 59 2 178 1 162 1 6 1 321 3 33 1 108 2 37 1 63 1 131 2 109 1 65 1 329 1 43 1 284 1 339 2 253 1 136 1 343 2 309 1 213 3 155 1 256 1 214 1 169 1 357 1 22 1 
343 1 213 1 321 1 348 1 218 1 55 1 63 1 131 1 339 1 74 1 
264 1 53 1 55 1 56 1 161 1 74 1 255 1 321 1 213 1 199 1 258 1 327 1 78 1 157 1 
264 1 53 1 56 2 55 1 339 1 161 1 74 1 343 1 321 1 213 1 199 1 258 2 78 1 131 1 157 1 
86 1 258 1 336 1 56 1 167 1 
264 1 265 1 348 1 86 1 218 1 220 1 55 1 56 2 167 1 339 1 74 1 343 1 213 1 321 1 199 1 258 2 63 1 131 1 290 1 
86 1 258 1 56 1 
265 1 348 1 218 1 56 1 55 1 167 1 339 1 74 1 343 1 321 1 213 1 258 1 63 1 131 1 
199 1 
264 1 265 1 348 1 86 1 218 1 220 1 55 1 56 2 167 1 339 1 74 1 343 1 213 1 321 1 199 1 258 2 63 1 47 1 131 1 
174 2 264 2 265 1 0 1 348 1 86 2 349 5 218 1 88 1 103 2 220 1 55 1 56 5 3 1 58 2 31 1 321 1 323 1 199 2 298 2 63 1 131 1 8 1 64 1 165 2 282 1 249 1 15 1 166 2 231 4 167 2 339 1 74 1 254 1 343 1 213 1 287 1 258 5 
95 1 162 1 
55 2 339 1 162 2 343 1 321 2 213 2 312 1 131 1 159 1 
334 1 237 1 338 1 
122 1 14 1 284 1 222 1 253 1 59 1 178 1 162 1 309 1 213 1 321 1 155 1 256 1 108 1 109 1 329 1 
55 5 339 1 191 1 319 1 162 1 343 4 211 1 127 1 321 5 213 5 140 2 327 1 131 4 159 1 
343 2 213 2 321 2 218 1 55 2 131 2 244 1 74 1 
122 1 338 1 284 1 55 1 222 1 253 1 178 1 59 1 211 1 343 1 309 1 256 1 321 2 213 2 155 1 140 1 108 1 131 1 109 1 329 1 
343 3 213 3 321 3 140 1 55 3 131 3 339 1 162 1 
343 1 213 1 321 1 218 1 55 1 131 1 74 1 
343 1 213 1 321 1 312 1 55 1 131 1 339 1 74 1 159 1 
52 1 294 1 267 1 53 1 122 1 124 2 55 3 56 1 221 1 222 1 161 1 178 1 59 1 162 1 6 1 321 4 33 1 241 1 108 1 63 1 131 3 109 1 65 1 329 1 204 1 43 1 284 1 339 2 253 1 74 1 136 1 343 3 211 1 309 1 256 1 155 1 213 4 169 1 140 1 258 1 78 1 357 1 157 1 159 1 
343 1 213 2 321 2 140 1 327 1 55 2 131 1 162 1 319 1 
53 1 56 1 55 3 339 1 161 1 74 1 211 1 343 3 321 3 213 3 199 1 258 1 140 2 241 1 78 1 131 3 157 1 159 1 49 1 
334 1 55 2 338 1 339 1 343 2 321 2 213 2 140 1 131 2 159 1 
122 1 284 1 222 1 253 1 59 1 178 1 162 1 309 1 213 1 321 1 155 1 256 1 108 1 109 1 329 1 
122 1 284 1 222 1 253 1 59 1 178 1 162 1 309 1 213 1 321 1 256 1 108 1 313 1 226 1 329 1 
174 1 52 4 175 1 294 1 267 1 237 2 124 2 163 1 126 1 6 1 239 1 33 1 65 1 150 1 165 1 334 2 229 1 338 2 307 1 214 2 169 2 288 1 260 1 357 1 
343 1 213 1 321 1 78 1 55 1 131 1 244 1 74 1 
207 1 70 1 
207 1 70 1 
316 1 151 1 
316 1 151 1 
316 1 151 1 
207 1 70 1 83 1 
207 1 70 1 24 1 
207 1 70 1 316 1 151 1 
207 1 70 1 83 1 
207 1 70 1 83 1 
207 1 70 1 90 1 
207 1 70 1 90 1 
207 1 70 1 90 1 
317 1 56 1 55 2 198 1 162 1 321 2 146 1 201 1 300 1 277 1 131 2 303 1 207 1 70 1 16 1 210 1 96 1 232 1 343 2 213 2 258 1 100 1 360 1 24 1 
248 1 317 2 69 1 29 1 206 1 207 2 70 2 56 2 273 1 198 2 143 1 199 1 146 1 36 1 258 2 100 3 201 2 360 2 158 2 
84 1 135 1 340 1 
84 1 240 1 135 1 
84 3 240 1 197 1 170 1 340 2 137 1 
84 2 240 1 30 1 170 1 340 1 137 1 
84 2 240 1 170 1 340 1 137 2 
174 1 264 1 175 1 86 1 349 2 220 1 56 5 318 2 58 1 31 1 320 3 199 2 147 1 298 1 200 1 300 1 328 1 132 1 303 1 165 1 133 1 304 2 166 1 167 4 231 3 210 1 233 1 212 2 97 1 258 5 101 1 288 1 
264 1 265 1 86 1 348 1 218 1 56 2 55 1 223 1 321 1 199 1 63 1 131 1 332 1 336 1 305 1 167 2 339 1 74 1 343 1 213 1 258 2 
264 1 174 1 175 1 349 2 56 3 318 1 58 1 320 4 199 3 147 1 200 1 298 1 132 1 64 1 303 1 165 1 133 1 166 1 304 2 167 2 231 3 233 2 97 1 212 2 258 3 288 1 
264 1 174 2 121 1 175 2 349 4 56 4 318 2 58 1 320 7 199 4 147 1 298 1 200 1 132 2 64 1 303 2 165 2 133 1 185 1 304 4 166 1 231 5 167 3 233 3 212 4 97 1 258 4 259 1 288 2 
107 1 95 1 122 1 
257 1 122 1 
286 1 
122 1 284 1 329 1 
122 1 227 1 
122 1 284 1 
107 2 122 3 116 1 284 1 329 1 203 1 
45 1 52 1 92 1 214 1 105 1 
45 1 52 1 92 1 214 1 105 1 
45 1 52 1 92 1 214 1 314 1 105 1 
45 1 52 1 92 1 214 1 105 1 
45 1 52 1 92 1 214 1 105 1 
84 2 1 1 197 1 238 1 270 1 350 2 222 1 59 1 178 1 60 1 32 1 240 1 91 1 108 1 39 1 243 1 330 1 40 1 135 1 189 1 340 1 308 2 115 1 256 1 311 1 234 1 80 1 315 1 289 1 82 1 
51 1 84 2 1 2 197 1 270 1 350 3 222 1 59 1 178 1 60 1 32 1 274 1 240 1 108 1 39 1 243 1 330 1 40 1 135 1 189 1 340 1 308 3 310 1 115 1 256 1 311 1 234 1 80 1 315 1 82 1 
51 1 84 2 1 2 197 1 270 1 350 2 222 1 59 1 178 1 32 1 274 1 240 1 108 1 39 1 40 1 135 1 189 1 340 1 308 2 115 1 256 1 234 1 80 1 315 1 82 1 
122 1 269 1 350 1 222 1 178 1 59 1 108 1 7 1 243 1 302 1 40 2 284 1 285 1 189 2 73 1 114 1 308 1 309 1 310 1 115 2 256 1 311 1 234 2 
84 2 51 1 135 1 197 1 270 1 238 1 189 1 350 1 222 1 340 1 178 1 59 1 60 1 308 1 240 1 256 1 115 1 91 1 311 1 108 1 234 1 315 1 243 1 330 1 40 1 82 1 
208 1 
266 1 53 1 220 2 56 4 55 1 272 1 58 1 222 2 59 2 178 1 320 2 321 1 324 1 108 2 327 1 279 1 11 3 112 1 13 2 335 1 284 1 285 1 231 2 114 1 74 1 233 2 344 1 78 1 157 1 235 2 27 1 291 1 86 4 349 2 122 1 123 1 31 1 161 1 199 1 298 1 133 1 134 1 251 1 252 1 166 1 309 2 256 1 255 1 213 1 46 2 258 4 262 1 263 1 48 1 
112 1 291 1 27 1 86 1 53 1 56 2 55 1 161 1 74 1 255 1 321 1 213 1 258 2 324 1 327 1 78 1 157 1 279 1 11 2 263 1 
264 1 27 1 291 1 86 1 53 1 220 1 55 1 56 3 161 1 321 1 199 1 324 1 327 1 279 1 11 3 112 1 74 1 213 1 255 1 258 3 78 1 47 1 157 1 262 1 
112 1 291 1 27 1 86 1 53 1 123 1 56 2 55 1 161 1 74 1 255 1 321 1 213 1 258 2 324 1 327 1 78 1 157 1 279 1 11 2 263 1 
264 1 265 1 27 1 291 1 348 1 86 2 53 1 218 1 123 1 220 1 55 2 56 3 161 1 321 2 199 1 324 1 327 1 63 1 131 1 279 1 11 3 112 1 339 1 74 2 343 1 255 1 213 2 258 3 78 1 47 1 157 1 358 1 262 1 263 1 
264 1 266 1 53 1 220 1 55 1 56 3 58 1 320 2 321 1 324 1 327 1 279 1 11 3 112 1 13 2 335 1 231 1 74 1 233 2 78 1 157 1 235 2 291 1 27 1 86 2 349 1 123 1 161 1 31 1 199 2 298 1 252 1 166 1 213 1 255 1 46 2 258 3 262 1 263 1 48 1 
264 1 266 1 27 1 291 1 86 4 349 1 53 1 123 2 220 2 196 1 55 1 56 4 58 1 161 1 31 1 321 1 199 1 324 1 298 1 327 1 279 1 11 4 281 1 112 1 13 2 252 1 166 1 231 1 74 1 233 2 213 1 255 1 46 2 258 4 78 1 157 1 262 2 359 1 263 2 48 2 235 2 
264 1 265 1 266 1 53 1 218 1 220 2 56 4 55 2 58 1 321 2 324 1 327 1 63 1 279 1 11 4 281 1 112 1 13 2 231 1 339 1 74 2 233 2 343 1 78 1 157 1 235 2 291 1 27 1 348 1 86 4 349 1 123 2 196 1 31 1 161 1 199 1 298 1 131 1 252 1 166 1 255 1 213 2 46 2 258 4 359 1 262 2 263 2 48 2 
264 1 265 1 53 1 218 1 220 2 56 4 55 2 57 1 58 1 320 2 5 1 321 2 179 2 324 1 327 1 63 1 279 1 11 4 112 1 13 2 71 1 231 1 72 2 339 1 74 2 343 1 78 1 157 1 235 2 291 1 27 1 348 1 86 4 349 1 123 2 31 1 161 1 199 1 298 1 131 1 252 1 166 1 255 1 213 2 258 4 359 1 262 2 263 2 
264 1 265 1 266 1 53 1 218 1 220 2 56 4 55 2 58 1 321 2 324 1 327 1 63 1 279 1 11 4 281 1 112 1 13 2 231 1 339 1 74 2 233 2 343 1 119 1 78 1 157 1 235 2 291 1 27 1 348 1 86 5 349 1 123 3 196 1 161 1 31 1 199 1 298 1 131 1 252 1 166 1 255 1 213 2 46 2 258 4 359 1 262 2 263 3 48 2 
264 1 265 1 266 1 53 1 218 1 220 2 56 4 55 2 58 1 321 2 324 1 327 1 63 1 279 1 11 5 281 1 112 1 13 2 231 1 339 1 74 2 233 2 343 1 119 1 78 1 157 1 235 2 291 1 27 1 348 1 86 5 349 1 123 3 196 1 161 1 31 1 199 1 298 1 131 1 252 1 166 1 255 1 213 2 46 2 258 4 262 3 359 1 263 3 48 2 
264 1 265 1 53 1 218 1 220 2 55 2 56 4 58 1 320 2 5 1 321 2 179 2 324 1 327 1 63 1 279 1 11 4 112 1 13 2 335 1 231 1 72 2 339 1 74 2 343 1 78 1 157 1 235 2 291 1 27 1 348 1 86 4 349 1 123 2 161 1 31 1 199 1 298 1 131 1 252 1 166 1 213 2 255 1 258 4 262 2 263 2 
165 1 174 1 282 1 95 1 41 1 52 5 267 1 294 1 229 1 124 2 307 1 162 1 163 1 45 1 6 1 323 1 33 1 129 1 169 2 214 3 357 1 8 1 65 1 
52 2 42 1 267 1 294 1 237 3 338 3 124 2 125 1 145 1 6 1 76 1 33 1 224 1 214 1 169 1 357 1 65 1 
52 2 294 1 267 1 122 1 55 1 124 2 221 1 222 1 178 1 59 1 162 1 6 1 321 2 33 1 108 1 131 1 109 1 65 1 329 1 280 1 334 1 14 1 284 1 253 1 20 1 309 1 343 1 211 1 256 1 155 1 213 2 99 1 76 1 140 1 169 1 214 1 357 1 22 1 
174 3 52 19 175 2 267 3 55 1 221 1 271 2 222 1 59 1 178 2 6 3 323 1 321 3 275 2 108 1 8 1 109 2 65 3 329 2 282 1 334 6 284 2 338 6 343 1 155 2 76 1 288 2 22 1 294 3 122 2 237 6 124 6 162 1 163 3 296 2 129 1 35 1 33 3 38 2 131 1 132 2 165 3 41 1 43 2 44 1 307 3 253 2 45 1 309 1 211 1 213 3 256 2 169 9 140 1 214 10 357 3 
51 1 52 2 294 2 267 2 122 3 55 1 124 4 221 1 222 8 178 2 59 8 6 2 321 1 33 2 108 7 180 1 37 2 131 1 65 2 205 1 184 1 229 1 284 2 285 1 18 1 153 1 114 1 343 1 309 2 213 1 256 2 140 1 214 1 169 1 357 2 194 1 22 1 289 1 216 1 
174 1 52 3 175 1 294 1 267 1 237 1 124 2 55 1 163 1 6 1 321 1 33 1 131 1 132 1 65 1 165 1 334 1 338 1 339 1 307 1 138 1 343 1 213 1 76 1 214 1 169 2 288 1 357 1 159 1 
174 1 52 2 267 1 294 1 334 1 237 1 229 1 338 1 124 2 307 1 6 1 239 1 33 1 214 2 288 1 357 1 65 1 111 1 
165 1 52 2 175 1 267 1 294 1 334 1 237 1 229 1 338 1 124 2 307 1 163 1 126 1 6 1 33 1 169 2 357 1 65 1 
174 1 52 4 175 1 294 1 267 1 237 2 124 2 163 1 6 1 33 1 132 1 65 1 111 1 165 1 334 2 229 1 338 2 307 2 214 2 169 2 288 1 357 1 
174 1 52 2 267 1 294 1 334 1 237 1 338 1 124 2 307 1 6 1 239 1 33 1 214 2 288 1 194 1 357 1 65 1 111 1 
165 1 52 2 175 1 267 1 294 1 334 1 237 1 338 1 124 2 307 1 163 1 126 1 6 1 33 1 169 2 194 1 357 1 65 1 
174 1 52 4 175 1 294 1 267 1 237 2 124 2 163 1 6 1 33 1 132 1 65 1 111 1 165 1 334 2 338 2 307 2 214 2 169 2 288 1 357 1 194 1 
174 1 52 4 175 1 294 1 267 1 237 2 124 2 163 1 6 1 33 1 132 1 65 1 111 1 165 1 334 2 338 2 307 2 214 2 169 2 288 1 357 1 
52 2 267 1 294 1 122 1 124 2 221 1 222 1 178 1 59 1 162 1 6 1 321 1 33 1 108 1 109 1 65 1 329 1 43 1 284 1 253 1 309 1 256 1 155 1 213 1 214 1 169 1 357 1 22 1 
52 2 267 1 294 1 122 1 124 2 221 1 222 1 178 1 59 1 162 1 6 1 321 1 33 1 108 1 149 1 65 1 329 1 226 1 284 1 253 1 309 1 256 1 213 1 214 1 169 1 313 1 357 1 22 1 
174 1 52 4 175 1 294 1 267 1 237 2 124 2 163 1 6 1 33 1 132 1 65 1 111 1 165 1 334 2 338 2 307 2 76 1 214 2 169 2 288 1 357 1 
174 1 52 4 175 1 267 1 294 1 122 1 237 2 124 2 222 1 178 1 59 1 163 1 6 1 321 1 275 1 33 1 108 1 109 1 132 1 65 1 329 1 111 1 165 1 334 2 43 1 338 2 284 1 307 2 253 1 256 1 155 1 213 1 169 2 214 2 288 1 357 1 289 1 
174 1 52 3 175 1 294 1 267 1 237 1 124 2 55 1 6 1 321 1 33 1 299 1 131 1 132 1 65 1 111 1 165 1 334 1 338 1 339 1 307 1 343 1 213 1 76 1 169 1 214 2 288 1 357 1 159 1 
85 1 52 4 195 1 42 1 294 1 124 2 17 1 125 1 61 1 33 1 214 2 169 2 352 1 276 1 357 1 245 1 65 1 
85 1 52 8 195 2 42 2 294 1 124 2 17 2 125 2 61 2 33 1 225 1 214 4 352 1 169 4 276 1 357 1 245 2 65 1 
85 1 52 4 195 1 42 1 294 1 124 2 17 1 125 1 61 1 33 1 214 2 169 2 352 1 276 1 357 1 245 1 65 1 
85 1 52 4 195 1 42 1 294 1 124 2 17 1 125 1 61 1 33 1 214 2 169 2 352 1 276 1 357 1 245 1 65 1 
85 1 52 4 195 1 42 1 294 1 124 2 17 1 125 1 61 1 33 1 214 2 169 2 352 1 276 1 357 1 245 1 65 1 
317 1 29 1 36 1 207 1 70 1 201 1 188 1 273 1 198 1 360 1 
277 1 24 1 
317 1 130 1 62 1 207 1 187 1 70 1 201 1 198 1 360 1 
83 1 144 1 
4 1 152 1 90 1 
248 1 317 1 69 1 29 1 207 1 56 1 70 1 273 1 198 1 143 1 199 1 146 1 36 1 258 1 100 2 201 1 360 1 158 1 
248 1 317 1 69 1 29 1 207 1 56 1 70 1 273 1 198 1 143 1 199 1 146 1 36 1 258 1 100 2 201 1 360 1 158 1 
248 1 317 1 69 1 29 1 207 1 56 1 70 1 273 1 198 1 143 1 199 1 146 1 36 1 258 1 100 2 201 1 360 1 158 1 
4 1 83 1 144 1 
4 1 83 1 144 1 
152 1 90 1 
4 1 152 1 90 1 
16 1 232 1 
317 1 56 1 55 2 198 1 162 1 321 2 34 1 201 1 300 1 277 1 131 2 303 1 69 1 207 1 70 1 16 1 167 1 210 1 96 1 232 1 343 2 213 2 258 1 100 1 158 1 360 1 24 1 
28 1 52 2 294 1 267 1 122 1 55 2 124 2 221 1 222 2 142 1 178 1 59 2 104 1 6 1 321 2 33 1 108 2 37 2 65 1 205 1 284 1 306 1 153 1 256 1 213 2 76 1 214 1 169 1 357 1 22 1 347 1 
84 2 51 1 2 1 135 1 197 1 160 1 222 2 340 1 178 1 59 2 60 1 240 1 256 1 115 1 108 2 346 1 315 1 289 1 82 1 
84 2 51 1 135 1 197 1 283 1 222 1 340 1 59 1 178 1 60 1 240 1 115 1 256 1 108 1 346 1 315 1 82 1 
122 1 2 1 284 1 269 1 285 1 222 1 114 1 178 1 59 1 309 1 256 1 115 1 108 1 193 1 
84 2 51 1 2 1 135 1 197 1 160 1 222 1 340 1 178 1 59 1 60 1 240 1 115 1 256 1 108 1 346 1 315 1 82 1 
355 1 
264 1 0 1 95 1 199 1 349 1 88 1 231 1 
264 1 266 1 86 1 349 1 220 1 56 1 58 1 31 1 320 1 199 2 298 1 166 1 231 1 233 1 46 1 258 1 48 1 
174 1 175 1 86 2 349 3 176 1 53 1 122 4 103 1 220 1 268 1 56 2 222 1 58 2 31 2 59 1 178 2 320 6 107 1 199 3 93 1 108 1 298 2 242 1 38 1 132 1 10 1 329 1 165 1 133 1 284 1 304 3 166 2 231 4 233 3 309 1 168 1 212 3 256 1 257 2 258 2 116 1 288 1 215 1 
174 2 264 1 86 1 175 2 349 5 220 1 103 1 56 1 58 2 31 2 125 1 320 6 199 4 225 1 298 2 325 1 326 1 132 2 110 1 165 2 42 1 304 5 166 2 113 1 231 7 17 1 233 3 342 1 212 5 258 1 288 2 
174 2 265 1 348 1 349 2 218 1 103 2 196 1 56 1 55 1 58 1 31 1 321 1 323 1 298 1 63 1 8 1 131 1 165 1 282 1 249 1 15 1 166 1 231 2 339 1 74 1 343 1 213 1 258 1 
264 1 0 1 349 1 88 1 166 1 231 1 58 1 31 1 199 1 298 1 
174 2 165 2 175 2 349 5 15 1 103 2 304 5 231 5 233 5 320 10 212 5 199 5 288 2 38 1 132 2 
264 1 265 1 86 1 348 1 218 1 220 1 55 1 56 1 339 1 74 1 343 1 213 1 321 1 199 1 258 1 63 1 131 1 
86 2 349 1 122 2 220 1 56 2 272 1 58 2 222 2 31 1 178 3 59 2 128 1 298 2 108 2 94 1 64 1 329 1 133 1 134 1 284 2 166 2 285 1 231 1 154 1 19 1 114 1 309 2 256 2 258 2 344 1 79 1 
52 1 267 1 294 1 122 1 124 2 55 2 221 1 222 1 59 1 178 1 162 1 6 1 321 3 33 1 108 1 63 1 131 2 109 1 65 1 329 1 43 1 284 1 339 2 253 1 136 1 309 1 343 2 213 3 155 1 256 1 169 1 357 1 
264 1 349 2 133 1 304 1 166 1 231 1 58 1 31 1 45 1 233 1 320 2 212 1 199 2 298 1 344 1 
317 1 148 1 360 1 
317 1 29 1 21 1 16 1 360 1 
317 1 148 1 360 1 
317 1 148 1 360 1 
317 1 354 1 360 1 
317 1 354 1 360 1 
317 1 354 1 360 1 
317 1 360 1 
207 1 70 1 
165 1 174 1 41 1 282 1 52 7 294 2 250 1 124 4 307 2 163 1 45 1 323 1 33 2 129 1 169 3 214 4 357 2 8 1 65 2 111 1 
174 1 165 1 95 1 41 1 282 1 52 5 307 1 163 1 45 1 323 1 129 1 169 2 214 3 8 1 
165 1 174 1 52 4 175 1 294 1 124 2 307 2 163 1 33 1 169 2 214 2 288 1 357 1 9 1 132 1 65 1 111 1 
52 2 42 1 214 1 169 1 17 1 125 1 
145 1 52 2 42 1 214 1 169 1 125 1 
52 1 169 1 125 1 
52 1 42 1 214 1 
174 1 165 1 52 6 175 1 294 1 124 2 307 3 163 2 33 1 169 3 214 3 288 1 357 1 38 1 9 1 132 1 65 1 111 1 
52 2 294 1 42 1 124 2 17 1 125 1 33 1 214 1 352 1 225 1 169 1 357 1 65 1 
174 1 165 1 282 1 52 6 307 2 163 1 323 1 214 3 169 3 8 1 111 1 
282 1 41 1 52 3 294 1 250 1 124 2 307 2 163 1 323 1 129 1 33 1 214 1 169 2 357 1 120 1 65 1 111 1 
174 2 165 2 282 2 249 1 52 10 294 1 124 2 307 5 163 3 323 2 33 1 352 1 214 5 169 5 357 1 8 1 65 1 111 2 
174 1 52 2 294 1 124 2 307 1 33 1 352 1 214 2 288 1 357 1 65 1 111 1 
165 1 174 1 52 4 175 1 294 1 124 2 307 2 163 1 33 1 169 2 352 1 214 2 288 1 357 1 132 1 65 1 111 1 
282 1 52 3 294 3 250 1 124 6 307 2 163 1 323 1 33 3 169 2 352 1 214 1 357 3 120 1 65 3 246 1 111 1 
52 2 356 1 42 1 294 3 124 6 17 1 125 1 33 3 214 1 352 1 169 1 357 3 9 1 65 3 246 1 
52 2 294 1 42 1 124 2 17 1 125 1 33 1 214 1 352 1 225 1 169 1 357 1 65 1 
52 2 42 1 294 2 124 4 17 1 125 1 33 2 214 1 352 1 225 1 169 1 357 2 9 1 65 2 
174 2 52 14 175 2 294 4 124 8 125 1 163 1 33 4 225 1 352 1 325 1 326 1 9 1 132 2 65 4 111 2 165 2 42 1 250 2 17 1 113 1 307 3 342 1 169 7 214 7 288 2 357 4 
52 2 294 1 42 1 124 2 17 1 125 1 33 1 214 1 352 1 225 1 169 1 357 1 65 1 
52 2 294 1 42 1 124 2 17 1 125 1 33 1 214 1 352 1 225 1 169 1 357 1 65 1 
174 2 52 13 175 2 294 2 124 4 125 1 163 1 33 2 225 1 352 1 325 1 326 1 132 2 65 2 111 2 165 2 42 1 250 1 17 1 113 1 307 3 342 1 169 6 214 7 288 2 357 2 
52 2 42 1 294 2 124 4 17 1 125 1 33 2 214 1 352 1 225 1 169 1 357 2 9 1 65 2 
52 2 42 1 294 2 124 4 17 1 125 1 33 2 214 1 352 1 225 1 169 1 357 2 65 2 246 1 
165 1 174 1 41 1 282 3 52 7 307 6 163 3 323 3 129 2 169 4 214 3 8 1 111 3 
52 2 42 1 294 2 124 4 17 1 125 1 33 2 214 1 352 1 225 1 169 1 357 2 65 2 246 1 
213 1 321 1 327 1 55 1 164 1 162 1 319 1 
181 1 67 1 12 1 333 1 55 1 162 1 319 1 192 1 321 1 213 1 327 1 164 1 
95 1 309 1 256 1 122 1 108 1 284 1 285 1 222 1 114 1 178 1 59 1 
122 1 284 1 55 1 222 1 253 1 178 1 59 1 162 1 343 1 309 1 321 2 213 2 256 1 140 1 108 1 131 1 109 1 329 1 
122 3 284 2 55 2 230 1 222 1 253 1 74 1 178 1 59 1 162 1 343 2 321 2 213 2 256 1 140 1 108 1 78 1 157 1 131 1 109 1 227 1 329 2 66 1 
50 1 122 3 284 2 55 2 230 1 222 2 253 1 74 1 178 1 59 2 162 1 343 2 321 2 213 2 256 1 140 1 108 2 78 1 157 1 131 1 227 1 329 2 226 1 66 1 
264 1 265 1 348 1 86 1 53 1 218 1 122 4 55 1 56 2 177 1 222 1 59 1 178 1 107 1 321 1 199 1 108 1 63 1 131 1 329 1 227 1 66 1 230 1 284 1 339 1 74 1 343 1 213 1 256 1 257 1 258 2 345 1 
264 1 265 1 348 1 86 1 53 1 218 1 122 4 55 1 56 2 222 1 59 1 178 1 107 1 321 1 199 1 108 1 63 1 131 1 329 1 227 1 66 1 230 1 284 1 339 1 74 1 343 1 213 1 256 1 257 1 258 2 215 1 
256 1 108 1 180 1 222 1 178 1 59 1 
51 1 205 1 184 1 122 3 284 2 18 1 222 7 154 1 59 7 178 3 309 2 256 2 116 1 108 6 37 1 180 1 278 1 94 1 289 1 329 1 216 1 
174 1 52 5 294 2 267 2 122 1 55 1 124 4 222 1 178 1 59 1 162 1 163 1 6 2 323 1 321 2 296 1 129 1 33 2 275 1 108 1 8 1 131 1 109 1 65 2 329 1 165 1 282 1 41 1 43 1 284 1 307 1 253 1 45 1 343 1 256 1 213 2 155 1 76 1 169 2 214 3 140 1 357 2 347 1 289 1 
264 2 174 2 0 1 265 1 53 1 218 1 220 1 268 1 103 2 56 3 55 1 222 1 58 2 59 1 107 1 323 1 321 1 108 1 63 1 8 1 10 1 282 1 15 1 231 4 339 1 19 1 74 1 343 1 86 2 348 1 349 5 122 2 88 1 31 2 199 2 298 2 131 1 165 2 249 1 166 2 167 1 168 1 309 1 213 1 257 1 258 3 215 1 
122 2 284 1 222 2 59 2 178 2 107 1 256 1 116 1 108 2 242 1 180 1 289 1 329 1 
50 1 122 1 284 1 285 1 222 4 114 1 178 1 59 4 309 1 256 1 108 4 261 1 289 1 
122 1 230 1 284 1 222 2 154 1 59 2 178 2 128 1 256 1 108 2 353 1 94 1 79 1 329 1 
84 1 309 1 240 1 256 1 135 1 108 1 222 1 178 1 59 1 82 1 
51 1 205 1 28 1 122 1 284 1 222 2 59 2 178 1 256 1 108 2 289 1 
205 1 184 1 122 3 230 1 284 2 285 1 18 1 222 5 114 1 59 5 178 2 309 1 256 2 108 4 261 1 289 1 
205 1 184 1 122 3 230 1 284 2 285 1 222 5 114 1 59 5 178 2 309 1 75 1 256 2 108 4 261 1 289 1 
122 1 284 1 55 1 222 1 253 1 178 1 59 1 162 1 343 1 309 1 321 2 213 2 256 1 140 1 108 1 131 1 329 1 226 1 
122 1 230 1 284 1 222 1 154 1 59 1 178 2 256 1 116 1 108 1 278 1 94 1 329 1 
213 1 321 1 156 1 186 1 117 1 55 1 306 1 142 1 104 1 
26 1 53 1 186 1 161 1 74 1 241 1 156 1 117 1 78 1 157 1 23 1 247 1 
26 1 186 1 156 1 117 1 162 1 
264 1 26 2 53 1 186 2 228 1 56 2 167 1 161 1 74 1 162 1 199 1 258 2 241 1 156 1 117 2 78 1 157 1 23 1 247 1 
95 1 32 1 39 1 80 1 
308 1 32 1 311 1 39 1 80 1 350 1 243 1 
234 1 350 1 40 1 
25 1 292 1 219 1 238 1 350 3 308 3 32 1 311 1 141 2 39 1 80 1 243 1 
308 2 32 1 1 1 311 1 337 1 39 1 80 1 350 2 243 1 
308 1 84 1 236 1 311 1 135 1 238 1 39 1 350 1 243 1 301 1 340 1 
308 1 311 1 238 1 39 1 80 1 350 1 243 1 
308 1 32 1 311 1 238 1 80 2 350 1 243 1 
238 1 350 2 351 1 308 2 106 1 311 2 39 1 80 1 243 2 202 1 
68 1 217 1 1 2 238 1 350 3 308 3 32 1 311 1 118 1 80 1 39 2 243 1 301 1 
84 2 1 1 135 1 197 1 238 1 350 2 340 1 308 2 32 1 240 1 311 1 102 1 39 1 80 1 243 1 
217 1 1 2 337 1 238 1 350 4 308 4 32 1 311 2 80 1 39 2 243 2 301 1 173 1 
308 1 32 1 311 1 238 1 39 1 80 1 350 1 243 1 
217 1 292 1 1 2 219 1 190 1 350 4 308 4 32 2 311 1 141 1 80 2 39 3 243 1 301 1 
1 1 238 1 350 2 89 1 209 1 308 2 32 1 311 1 297 1 39 1 80 1 243 1 
292 2 219 1 238 1 350 3 341 1 308 3 32 1 311 1 141 2 39 1 80 1 243 1 
139 2 77 1 39 2 172 1 
308 1 183 1 311 1 238 1 350 1 243 1 
308 2 68 1 32 1 1 1 311 1 238 1 39 1 80 1 350 2 243 1 
98 1 
308 1 32 1 311 1 238 1 39 1 80 1 350 1 243 1 
308 3 68 1 32 1 1 1 311 1 141 1 238 1 39 1 80 1 350 3 243 1 
217 1 39 1 190 1 301 1 
39 1 80 1 

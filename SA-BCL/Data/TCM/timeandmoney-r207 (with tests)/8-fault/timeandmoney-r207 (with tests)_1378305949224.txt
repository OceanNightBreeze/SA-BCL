#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (188,356) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (188,356) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (188,356) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (188,356) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (188,356) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (188,356) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (188,356) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (188,356) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (188,356) 11 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (188,356) 11 275 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.StringIndexOutOfBoundsException 327 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.StringIndexOutOfBoundsException 327 304 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | CONSTANT | 5361 | 0 -> 1
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 21
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4784 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:TimePoint(J)V | STATEMENT | 3335 | stmt -> ;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 1
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | CONSTANT | 2573 | 0 -> 1
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3743 | return null
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
166 1 16 1 125 1 168 1 212 1 17 1 196 1 77 2 324 1 172 1 306 1 307 1 61 2 199 4 63 9 177 1 242 6 6 5 243 1 244 1 108 3 225 2 355 2 276 2 207 1 12 2 163 2 279 9 
166 1 16 1 125 1 168 1 212 1 17 1 196 1 77 2 324 1 172 1 306 1 307 1 61 2 199 4 63 9 177 1 242 6 6 5 243 1 244 1 108 3 225 2 355 2 276 2 207 1 12 2 163 2 279 9 
166 1 16 1 125 1 168 1 212 1 17 1 196 1 77 2 324 1 172 1 306 1 307 1 61 2 199 5 63 10 177 1 242 7 6 6 243 1 244 1 108 4 225 2 355 2 276 2 207 1 12 2 163 2 279 10 
166 1 16 1 125 1 168 1 212 1 17 1 196 1 77 1 324 1 306 1 307 1 61 2 199 3 63 7 177 1 242 4 6 4 243 1 244 1 108 2 225 2 355 2 276 2 207 1 12 2 163 2 279 7 
166 1 242 3 6 3 108 1 125 1 212 1 77 2 324 1 172 1 225 1 355 1 207 1 12 1 61 1 163 1 199 2 279 4 63 4 
6 1 168 1 249 1 212 1 295 1 324 1 307 1 355 1 276 1 207 1 186 1 12 1 163 1 61 1 279 2 63 2 
242 1 6 2 108 1 212 1 196 1 324 1 355 2 276 1 207 1 163 2 199 1 279 3 63 3 
166 1 125 1 212 1 17 1 196 1 77 2 324 1 172 1 61 1 199 4 63 9 177 1 242 7 6 5 108 3 225 1 353 1 355 2 276 1 207 1 12 1 163 2 121 1 279 9 
166 1 125 1 212 1 17 1 196 1 77 2 324 1 172 1 61 1 199 4 63 9 177 1 242 7 6 5 108 3 225 1 353 1 355 2 276 1 207 1 12 1 163 2 121 1 279 9 
95 1 85 1 232 1 
72 2 95 1 130 1 
106 1 335 2 101 1 116 2 35 2 203 2 267 2 127 2 
167 1 13 1 192 1 94 1 302 1 193 1 35 3 58 1 259 1 76 2 127 2 79 1 101 1 21 2 267 3 132 1 106 1 335 2 105 1 220 1 294 1 269 1 109 1 203 2 204 1 348 1 47 1 158 2 116 2 226 1 298 1 228 1 187 2 51 1 120 2 320 1 122 1 
335 1 35 1 203 1 127 1 284 1 325 1 101 1 115 1 116 1 267 1 
95 1 233 1 35 2 284 2 127 1 325 1 261 1 101 1 39 1 267 2 335 1 223 1 203 2 138 1 183 1 315 1 115 1 116 1 70 1 189 1 232 1 
335 2 95 1 35 2 223 1 203 2 183 1 127 2 284 2 325 1 261 1 315 2 101 1 115 1 116 2 39 2 267 2 70 1 189 1 232 1 
5 1 315 1 39 1 139 1 44 1 
5 1 315 2 39 2 95 1 7 1 44 1 232 1 326 1 
5 1 315 1 39 1 
335 1 35 1 203 1 284 1 127 1 325 1 315 1 101 1 115 1 39 1 116 1 267 1 44 1 189 1 
95 1 
5 1 315 2 39 2 95 1 65 1 44 1 232 1 326 1 
5 2 95 1 246 1 74 2 234 1 170 1 149 1 67 1 326 1 315 5 305 1 39 5 214 2 162 1 164 2 118 1 278 1 44 2 232 1 
106 1 85 1 
335 1 106 2 191 1 35 2 203 2 127 1 99 1 116 1 267 2 
266 1 344 1 78 1 
106 1 218 1 302 1 193 1 35 1 109 1 259 1 76 1 204 1 348 1 79 1 187 1 267 1 120 1 320 1 132 1 
335 1 302 1 193 1 35 2 109 1 203 1 344 1 259 1 195 1 204 1 76 1 79 1 348 1 3 1 116 1 187 1 267 2 120 1 320 1 132 1 
106 1 335 3 3 1 116 3 35 3 203 3 267 3 127 1 
335 1 115 1 116 1 35 1 203 1 267 1 284 1 
335 1 191 1 35 1 203 1 127 1 284 1 99 1 116 1 267 1 
167 1 13 1 192 1 191 1 302 1 193 1 35 4 210 1 259 1 195 1 76 1 127 2 284 1 79 1 261 1 101 1 3 1 39 1 21 1 267 4 132 1 106 1 104 1 335 3 105 1 220 1 294 1 223 1 269 1 109 1 203 3 204 1 183 1 348 1 315 1 47 1 158 2 116 3 298 1 228 1 187 1 120 1 70 1 320 1 
106 1 335 1 116 1 3 1 233 1 341 1 35 2 203 2 267 2 
54 1 335 3 104 1 191 1 95 1 35 3 223 1 203 3 195 1 183 1 127 1 284 1 261 1 315 1 39 1 3 2 116 3 267 3 70 1 
335 1 116 1 191 1 35 1 203 1 344 1 267 1 127 1 
106 1 302 1 193 1 35 1 109 1 259 1 76 1 204 1 348 1 79 1 187 1 267 1 120 1 320 1 132 1 
106 1 302 1 193 1 35 1 109 1 259 1 76 1 204 1 273 1 187 1 267 1 120 1 320 1 321 1 132 1 
167 1 192 1 257 1 78 2 20 1 80 1 42 1 21 4 266 2 23 1 178 1 220 1 294 1 269 1 344 2 313 1 158 2 160 1 298 2 228 1 230 1 122 2 
335 1 35 1 203 1 284 1 116 1 267 1 319 1 70 1 
335 4 106 1 191 1 233 1 341 1 35 5 203 5 195 1 127 1 69 1 3 2 116 4 267 5 62 1 
335 1 115 1 116 1 35 1 203 1 267 1 284 1 
102 1 188 1 
102 1 188 1 
328 1 356 1 
328 1 356 1 
328 1 356 1 
102 1 188 1 
102 1 188 1 
102 1 188 1 
102 1 188 1 
102 1 188 1 
102 1 188 1 
102 1 188 1 
102 1 188 1 
102 1 11 1 188 1 310 1 
315 1 39 1 275 1 102 1 11 1 188 1 310 1 
12 1 61 1 225 1 
12 1 186 1 61 1 
140 1 34 1 186 1 61 3 88 1 225 2 
140 1 186 1 61 2 88 1 236 1 225 1 
140 1 186 1 61 2 88 2 225 1 
72 3 95 2 257 1 74 1 1 1 146 2 149 1 326 1 80 1 239 1 39 5 214 1 130 1 23 1 44 4 5 1 219 2 293 1 313 1 315 5 349 1 297 1 141 1 164 1 50 1 278 2 118 3 71 1 208 1 357 2 232 1 231 1 
72 9 57 1 95 5 257 3 74 2 1 2 258 1 146 6 234 1 149 1 100 1 128 5 326 1 80 3 39 9 214 2 130 3 43 1 23 3 44 7 5 6 219 6 339 1 153 1 139 5 313 3 315 9 349 2 50 1 164 2 278 6 118 8 71 3 231 4 232 1 
72 4 95 3 257 1 74 1 1 1 146 2 234 1 80 1 39 3 214 1 130 2 23 1 44 2 219 2 293 1 313 1 315 3 349 1 164 1 118 3 278 2 208 1 71 1 357 1 232 1 231 1 
72 7 95 4 257 2 74 1 1 1 258 1 146 4 234 1 80 2 39 4 214 1 130 3 43 1 23 2 44 3 219 4 339 1 293 1 313 2 315 4 349 1 164 1 118 5 278 4 208 1 71 2 357 2 232 1 231 2 
302 1 85 1 301 1 
209 1 302 1 
145 1 
302 1 259 1 
302 3 109 1 216 1 259 1 301 2 254 1 
302 1 109 1 259 1 
264 1 302 1 
123 1 190 1 291 1 73 2 257 1 248 1 66 1 60 1 250 2 173 3 80 1 251 1 298 3 21 7 229 1 122 4 280 1 
123 1 190 1 291 1 73 2 257 1 248 1 66 1 60 1 250 2 173 3 80 1 251 1 298 3 21 7 229 1 122 4 280 1 
123 1 190 1 291 1 73 2 221 1 257 1 248 1 66 1 60 1 250 2 173 3 80 1 251 1 298 3 21 7 229 1 122 4 280 1 
167 1 123 2 190 2 192 1 73 5 281 1 257 4 60 1 151 1 173 10 80 4 129 1 21 31 23 3 291 2 87 1 248 2 294 1 269 1 45 1 345 4 66 1 181 1 313 3 250 3 251 1 158 2 354 3 298 15 277 1 229 1 71 3 122 16 280 5 
123 1 167 2 190 1 291 1 73 3 192 2 257 1 248 1 294 2 269 2 110 1 66 1 250 2 173 4 80 1 251 1 30 1 158 4 298 4 21 9 277 1 229 1 122 5 280 1 
93 1 34 1 75 1 212 1 76 1 36 1 324 1 81 1 82 1 84 1 215 1 61 2 63 2 132 1 242 1 6 1 340 1 204 1 68 1 225 1 352 1 355 1 276 1 207 1 12 1 186 1 187 1 163 1 120 1 279 2 
34 1 75 1 76 1 36 1 324 1 286 1 81 1 82 1 84 1 61 2 63 3 132 1 242 2 6 1 340 1 270 1 204 1 68 1 225 1 274 1 352 1 355 1 276 1 207 1 12 1 186 1 187 1 163 1 120 1 279 3 
34 1 75 1 76 1 36 1 324 1 82 1 84 1 61 2 63 2 132 1 242 2 6 1 340 1 270 1 204 1 68 1 225 1 274 1 276 1 207 1 186 1 12 1 187 1 120 1 279 2 
302 1 75 2 259 1 76 1 286 1 82 2 83 1 131 1 241 1 63 1 217 1 132 1 222 1 204 1 68 2 185 1 355 1 276 2 187 1 163 1 120 1 320 1 279 1 
34 1 75 1 212 1 76 1 36 1 81 1 82 1 84 1 215 1 61 2 63 1 132 1 340 1 204 1 68 1 225 1 274 1 352 1 355 1 276 1 12 1 186 1 187 1 163 1 120 1 279 1 
161 1 
72 2 0 1 302 1 74 1 35 1 1 1 259 1 76 2 261 1 39 5 214 1 130 2 131 1 267 1 132 1 5 6 136 2 8 1 223 1 138 1 183 1 314 2 224 2 315 5 272 2 142 2 187 2 278 2 320 2 232 1 55 1 95 2 233 1 322 4 283 2 147 1 149 1 18 1 284 1 98 1 326 3 240 1 289 1 241 1 337 1 245 1 343 2 203 1 204 1 31 1 206 1 164 1 118 2 120 2 70 1 
55 1 95 1 233 1 35 1 322 2 18 1 284 1 98 1 261 1 326 1 39 3 267 1 5 2 245 1 223 1 203 1 65 1 138 1 183 1 314 1 315 3 206 1 70 1 232 1 
55 1 95 1 245 1 233 1 223 1 35 1 343 1 322 3 203 1 138 1 183 1 284 1 18 1 98 1 261 1 315 2 39 2 206 1 267 1 70 1 232 1 
55 1 95 1 233 1 35 1 322 3 283 1 18 1 284 1 98 1 261 1 326 1 39 3 267 1 5 2 245 1 223 1 203 1 343 1 65 1 138 1 183 1 314 1 315 3 206 1 70 1 232 1 
35 2 74 1 127 1 261 1 39 5 214 1 130 2 267 2 5 7 136 2 8 1 223 1 137 1 138 1 183 1 314 4 224 2 315 5 272 2 227 1 142 2 278 1 189 1 232 3 55 1 95 3 233 1 322 5 283 4 323 1 284 2 18 1 149 1 325 1 98 1 326 3 101 1 334 1 335 1 245 1 203 2 343 3 65 1 347 1 115 1 116 1 31 1 206 1 164 1 118 1 70 1 
72 2 35 1 74 1 261 1 39 4 214 1 130 2 267 1 5 4 136 2 8 1 223 1 138 1 183 1 224 2 314 2 315 4 272 2 142 2 278 1 232 2 55 1 95 3 233 1 322 4 283 2 284 1 149 1 18 1 98 1 326 2 240 1 245 1 203 1 343 2 31 1 206 1 164 1 118 1 70 1 
55 1 95 2 233 1 35 1 74 1 322 4 283 2 323 1 18 1 284 1 149 1 98 1 261 1 326 2 39 4 214 1 130 2 267 1 5 4 334 1 136 2 245 1 8 1 223 1 137 1 343 2 203 1 138 1 183 1 314 2 224 2 315 4 272 2 31 1 142 2 206 1 164 1 278 1 118 1 70 1 232 2 
55 1 95 2 233 1 35 1 74 1 322 4 283 2 323 1 18 1 284 1 149 1 98 1 261 1 326 2 39 4 214 1 130 2 267 1 5 4 334 1 136 2 245 1 8 1 223 1 137 1 343 2 203 1 138 1 183 1 314 2 224 2 315 4 272 2 31 1 142 2 206 1 164 1 278 1 118 1 70 1 232 2 
72 2 55 1 95 2 233 1 35 1 74 1 322 4 283 2 323 1 96 1 97 1 18 1 284 1 149 1 98 1 261 1 326 2 39 4 214 1 267 1 5 4 135 2 136 2 245 1 8 1 223 1 343 2 342 2 203 1 138 1 183 1 89 1 314 2 315 4 142 2 206 1 164 1 118 1 278 1 70 1 232 2 
55 1 95 2 233 1 35 2 322 3 283 1 127 1 18 1 284 2 325 1 98 1 261 1 101 1 39 2 267 2 5 1 335 1 245 1 223 1 343 1 203 2 138 1 183 1 347 1 314 1 315 2 115 1 116 1 206 1 70 1 189 1 232 2 
55 1 95 2 233 1 35 2 322 3 283 1 127 1 18 1 284 2 325 1 98 1 261 1 101 1 39 2 267 2 5 1 335 1 245 1 223 1 343 1 203 2 138 1 183 1 347 1 314 1 315 2 115 1 116 1 206 1 70 1 189 1 232 2 
72 2 35 1 74 1 261 1 39 4 214 1 267 1 5 4 136 2 135 2 8 1 223 1 138 1 183 1 314 2 315 4 142 2 278 1 232 2 55 1 95 2 233 1 322 4 283 2 284 1 149 1 18 1 97 1 98 1 326 2 240 1 245 1 203 1 342 2 343 2 206 1 164 1 118 1 70 1 
167 1 106 2 190 2 291 2 73 2 220 1 192 1 257 1 294 1 269 1 66 1 173 2 80 1 251 1 158 2 298 3 21 5 42 1 85 1 228 1 229 1 122 2 
167 2 192 2 94 1 78 6 174 1 129 1 21 7 266 6 175 1 64 1 103 1 106 1 220 1 294 2 269 2 345 2 344 6 112 1 158 4 47 1 354 2 298 4 228 2 122 3 
167 1 192 1 94 1 35 1 195 1 78 1 3 1 287 1 21 2 267 1 335 1 220 1 294 1 269 1 203 1 112 1 116 1 158 2 47 1 298 1 228 1 49 1 122 1 
167 2 302 1 257 1 35 2 211 1 259 1 126 1 76 1 79 1 171 1 78 3 263 1 80 1 3 1 266 3 267 2 132 1 220 2 269 2 313 1 47 1 228 2 187 1 320 1 13 1 192 2 193 1 195 1 21 7 23 1 335 1 294 2 203 1 109 1 344 3 155 1 204 1 112 1 348 1 158 4 116 1 298 4 120 1 71 1 122 3 
167 1 192 1 302 2 94 1 259 2 76 2 21 2 131 1 241 1 309 1 132 2 220 1 292 1 294 1 109 1 269 1 204 3 114 1 29 1 92 1 158 2 47 1 298 1 228 1 187 2 51 1 120 2 320 1 52 1 122 1 
167 1 191 1 192 1 257 1 35 1 127 1 78 1 80 1 21 3 266 1 267 1 23 1 335 1 220 1 294 1 269 1 203 1 344 1 313 1 112 1 116 1 158 2 298 2 228 1 165 1 71 1 122 1 
167 1 178 1 220 1 192 1 294 1 269 1 344 1 313 1 78 1 80 1 158 2 21 2 42 1 266 1 228 1 122 2 
167 1 220 1 192 1 257 1 294 1 269 1 344 1 78 1 158 2 21 2 42 1 298 2 266 1 228 1 23 1 230 1 
167 1 192 1 257 1 78 2 80 1 42 1 21 4 266 2 23 1 220 1 294 1 269 1 344 2 313 1 158 2 298 2 228 1 71 1 122 2 
167 1 178 1 220 1 192 1 294 1 269 1 344 1 313 1 78 1 80 1 158 2 21 2 266 1 228 1 52 1 122 2 
167 1 220 1 192 1 257 1 294 1 269 1 344 1 78 1 158 2 21 2 298 2 266 1 228 1 23 1 52 1 230 1 
167 1 192 1 257 1 78 2 80 1 21 4 266 2 23 1 220 1 294 1 269 1 344 2 313 1 158 2 298 2 228 1 71 1 52 1 122 2 
167 1 220 1 192 1 257 1 294 1 269 1 344 2 313 1 78 2 80 1 158 2 298 2 21 4 266 2 228 1 23 1 71 1 122 2 
167 1 13 1 192 1 94 1 302 1 193 1 35 1 259 1 76 1 79 1 21 2 267 1 132 1 106 1 220 1 294 1 109 1 269 1 204 1 348 1 158 2 47 1 298 1 228 1 187 1 120 1 320 1 122 1 
167 1 192 1 94 1 302 1 193 1 35 1 259 1 76 1 21 2 267 1 132 1 106 1 220 1 294 1 109 1 269 1 204 1 90 1 273 1 158 2 47 1 298 1 228 1 187 1 120 1 320 1 122 1 321 1 
167 1 192 1 257 1 78 2 80 1 21 4 266 2 23 1 220 1 294 1 269 1 344 2 313 1 112 1 158 2 298 2 228 1 71 1 122 2 
93 1 167 1 13 1 192 1 302 1 257 1 193 1 35 1 211 1 259 1 76 1 78 2 79 1 80 1 21 4 266 2 267 1 23 1 132 1 220 1 294 1 109 1 269 1 344 2 204 1 313 1 348 1 158 2 298 2 228 1 187 1 120 1 71 1 122 2 
167 1 191 1 192 1 257 1 35 1 127 1 285 1 78 1 80 1 21 3 266 1 267 1 23 1 335 1 220 1 294 1 269 1 203 1 344 1 313 1 112 1 116 1 158 2 298 1 228 1 71 1 122 2 
167 3 73 4 124 1 257 5 173 8 80 5 129 3 133 1 312 1 269 3 45 1 9 1 313 4 46 1 316 1 277 1 229 1 280 4 190 1 192 3 56 1 194 2 282 1 197 4 21 41 152 1 23 4 201 1 291 1 154 1 294 3 110 1 345 4 66 1 250 1 156 1 251 1 158 6 354 3 205 1 298 21 71 4 122 20 
167 4 190 1 56 1 124 1 73 4 192 4 257 4 282 1 194 2 197 4 173 7 80 5 129 3 21 38 152 1 23 3 201 1 291 1 133 1 312 1 154 1 294 4 269 4 110 1 45 1 9 1 345 4 66 1 313 4 46 1 156 1 250 1 316 1 251 1 158 8 205 1 354 3 298 18 277 2 229 1 71 4 122 20 280 3 
167 2 190 1 56 1 124 1 73 7 192 2 257 8 194 1 197 4 173 14 80 8 129 2 21 52 23 7 201 1 291 1 133 1 312 1 154 1 294 2 269 2 110 1 45 2 9 1 345 4 66 1 313 7 46 1 156 1 250 1 10 2 316 1 251 1 158 4 205 1 354 4 298 25 277 1 229 1 71 7 122 27 280 7 
167 2 73 3 192 2 257 3 282 1 194 1 197 2 173 6 80 3 129 1 21 19 23 3 133 1 86 1 154 1 294 2 269 2 110 1 45 1 9 1 345 2 313 3 156 2 316 1 158 4 354 1 298 10 71 3 122 9 280 3 
167 3 73 2 192 3 124 1 56 1 257 2 194 2 197 4 173 4 80 3 129 2 21 26 23 2 201 1 133 1 312 1 154 2 294 3 269 3 110 1 9 1 345 2 313 3 46 1 156 1 316 1 158 6 205 1 354 2 298 12 277 2 71 3 122 14 280 2 
167 1 192 1 302 1 94 1 256 1 35 2 259 1 235 1 76 2 19 1 303 1 238 1 40 1 21 2 267 2 132 1 220 1 294 1 203 2 269 1 204 1 112 1 29 1 158 2 47 1 298 1 228 1 187 2 51 2 120 2 122 1 
311 1 93 1 34 1 340 1 75 1 111 1 204 1 76 2 346 1 225 1 274 1 352 1 84 1 12 1 186 1 61 2 187 2 120 2 132 1 
34 1 247 1 340 1 75 1 111 1 76 1 204 1 225 1 274 1 352 1 84 1 12 1 186 1 61 2 187 1 120 1 132 1 
311 1 302 1 75 1 259 1 204 1 76 1 185 1 317 1 187 1 131 1 241 1 120 1 320 1 132 1 
311 1 34 1 340 1 75 1 111 1 204 1 76 1 346 1 225 1 274 1 352 1 84 1 12 1 186 1 61 2 187 1 120 1 132 1 
37 1 
95 1 246 1 85 1 162 1 118 1 278 1 232 1 
72 1 95 2 74 1 149 1 326 1 39 1 214 1 130 1 5 1 224 1 315 1 272 1 31 1 164 1 278 1 118 1 232 1 
72 12 209 3 302 10 257 2 74 4 1 2 259 3 76 3 261 2 171 2 264 2 80 2 39 5 214 4 130 6 308 2 132 3 5 5 179 2 219 6 313 2 184 2 315 5 318 2 187 3 278 8 320 1 232 2 93 1 95 8 59 1 146 6 149 4 237 2 326 3 198 1 23 2 332 2 337 1 202 2 246 1 109 3 204 4 350 1 162 1 164 4 118 9 119 1 120 3 253 2 32 1 71 2 254 1 301 2 
72 6 124 1 56 1 95 5 257 2 74 2 1 1 2 1 146 5 149 2 326 1 80 2 39 1 129 1 214 2 130 3 23 2 201 1 5 1 219 5 337 1 345 1 313 2 46 1 184 2 315 1 91 1 205 1 354 1 318 1 164 2 118 8 278 5 71 2 232 2 
190 1 257 1 35 1 74 1 284 1 149 1 127 1 325 1 262 1 80 2 101 1 39 1 214 1 267 1 334 1 335 1 291 1 203 1 66 1 184 2 315 1 115 1 116 1 318 1 164 1 278 2 118 2 189 1 
95 1 246 1 74 1 149 1 214 1 162 1 164 1 278 1 118 1 232 1 
72 10 219 5 95 5 257 2 146 5 313 2 171 1 184 2 80 2 318 1 130 5 278 5 118 5 23 2 71 2 
315 1 5 1 39 1 95 1 232 1 326 1 
302 1 74 2 1 2 234 1 259 1 147 1 76 4 149 1 326 2 198 1 39 3 214 2 131 1 289 1 241 1 132 1 5 4 337 2 204 1 315 3 252 1 164 2 187 4 118 2 278 2 120 4 143 1 32 2 320 2 
167 1 13 1 192 1 302 1 193 1 35 3 259 1 76 1 127 2 79 1 101 1 21 1 267 3 132 1 106 1 335 2 105 1 220 1 294 1 269 1 203 2 109 1 204 1 348 1 47 1 158 2 116 2 298 1 228 1 187 1 120 1 320 1 
72 4 219 2 337 1 95 4 74 1 1 1 146 2 149 1 250 1 214 1 130 2 164 1 278 2 118 1 232 2 
213 1 169 1 25 1 
290 1 336 1 213 1 150 1 25 1 
213 1 169 1 25 1 
213 1 169 1 25 1 
213 1 48 1 25 1 
213 1 48 1 25 1 
213 1 48 1 25 1 
213 1 25 1 
102 1 188 1 
167 1 190 1 291 1 73 2 192 1 257 1 294 1 269 1 110 1 345 1 66 1 46 1 250 1 173 2 80 1 251 1 158 2 129 1 354 1 298 4 21 8 229 1 122 4 
167 2 190 1 73 2 192 2 257 1 173 3 80 2 129 1 21 11 291 1 294 2 269 2 110 1 45 1 345 2 66 1 313 1 46 1 250 1 251 1 158 4 351 1 354 1 298 5 229 1 71 1 122 6 280 1 
167 3 190 1 192 3 124 1 56 1 73 3 257 3 173 4 80 3 129 1 21 19 23 2 201 1 291 1 294 3 269 3 110 1 345 1 66 1 313 2 46 1 250 1 251 1 158 6 351 1 205 1 354 1 298 10 277 1 229 1 71 2 122 9 280 1 
167 3 190 1 192 3 124 1 56 1 73 3 257 2 173 5 80 3 129 1 21 17 23 1 201 1 291 1 294 3 269 3 110 1 345 1 66 1 313 2 46 1 250 1 251 1 158 6 351 1 354 1 205 1 298 7 277 1 229 1 71 2 122 10 280 2 
167 1 190 1 291 1 73 2 192 1 257 1 294 1 269 1 110 1 345 1 66 1 46 1 250 1 173 2 80 1 251 1 158 2 129 1 354 1 298 4 21 8 229 1 122 4 
167 1 192 1 124 1 56 1 73 1 257 2 173 2 80 2 129 1 21 12 23 2 201 1 294 1 269 1 110 1 345 1 313 2 46 1 158 2 354 1 205 1 298 6 71 2 122 6 280 1 
167 4 190 1 192 4 124 1 56 1 73 3 257 2 173 5 80 3 129 1 21 18 23 1 201 1 291 1 294 4 269 4 110 1 345 1 66 1 313 2 46 1 250 1 251 1 158 8 351 1 205 1 354 1 298 8 277 2 229 1 71 2 122 10 280 2 
167 4 192 4 124 1 56 1 73 3 257 2 282 1 173 6 80 3 129 1 21 16 23 2 201 1 294 4 269 4 110 1 345 1 313 3 46 1 158 8 205 1 354 1 298 7 277 2 71 3 122 9 280 3 
190 3 291 3 73 3 257 1 66 1 173 6 80 1 251 1 298 4 21 7 229 2 122 3 280 3 
167 4 190 1 192 4 124 1 56 1 73 3 257 2 282 1 173 4 80 3 129 1 21 18 23 1 201 1 291 1 294 4 269 4 110 1 345 1 66 1 313 2 46 1 250 1 251 1 158 8 205 1 354 1 298 8 277 2 229 1 71 2 122 10 280 1 
167 2 190 1 291 1 73 2 192 2 257 1 294 2 269 2 66 1 250 1 173 3 80 1 251 1 158 4 298 4 21 8 277 1 229 1 122 4 280 1 
190 1 291 1 73 2 257 1 66 1 250 1 173 2 80 1 251 1 298 3 85 1 21 6 229 1 122 3 
167 1 73 1 192 1 257 1 294 1 269 1 313 1 173 2 80 1 158 2 351 1 298 2 21 4 23 1 71 1 122 2 280 1 
73 1 257 1 45 1 345 2 313 1 173 2 80 1 129 1 354 1 298 4 21 7 23 1 71 1 122 3 280 1 
167 2 190 2 73 5 192 2 257 3 173 9 80 3 21 23 175 1 23 2 64 1 291 2 294 2 269 2 45 1 345 2 66 1 313 2 250 1 10 1 251 1 158 4 354 2 298 12 277 2 229 1 71 2 122 11 280 4 
21 1 298 1 345 1 
354 1 21 1 122 1 
167 1 192 1 73 2 257 1 294 1 269 1 313 1 171 1 173 3 80 1 158 2 351 1 298 3 21 6 23 1 71 1 122 3 280 1 
167 1 192 1 124 1 56 1 73 1 257 2 173 2 80 2 129 1 21 12 23 2 201 1 294 1 269 1 110 1 345 1 313 2 46 1 158 2 354 1 205 1 298 6 71 2 122 6 280 1 
173 2 190 1 80 1 291 1 73 1 257 1 298 3 21 6 66 1 122 3 280 1 
167 1 190 1 291 1 73 1 192 1 294 1 269 1 173 2 251 1 158 2 298 2 21 3 175 1 277 1 229 1 122 1 280 1 
167 1 190 2 291 2 192 1 73 3 257 2 294 1 269 1 110 1 66 1 262 1 173 5 80 2 158 2 21 10 298 5 122 5 280 2 
167 1 192 1 294 1 269 1 110 1 313 1 173 1 80 1 158 2 21 2 122 2 280 1 
167 1 73 1 192 1 257 1 294 1 269 1 110 1 313 1 173 2 80 1 158 2 298 2 21 4 23 1 71 1 122 2 280 1 
167 3 190 1 291 1 192 3 73 1 282 1 294 3 269 3 110 1 173 2 158 6 298 2 21 3 175 1 277 1 122 1 280 1 
167 5 190 3 281 1 192 5 73 7 257 5 282 1 151 1 173 12 80 5 129 1 21 34 175 1 23 3 291 3 294 5 269 5 110 1 45 1 345 4 66 2 181 1 313 3 250 1 251 1 158 10 351 1 354 3 298 18 277 2 229 1 71 3 122 16 280 5 
327 1 
304 1 268 1 14 1 27 1 41 1 327 1 
302 1 85 1 131 1 187 1 259 1 204 1 241 1 76 1 120 1 320 1 132 1 
106 1 335 1 302 1 193 1 35 2 109 1 203 1 259 1 204 1 76 1 79 1 3 1 116 1 187 1 267 2 120 1 320 1 132 1 
302 3 193 1 35 2 259 2 76 1 284 1 79 1 264 1 3 1 267 2 132 1 106 1 335 2 223 1 203 2 109 2 204 1 116 1 187 1 120 1 253 1 32 1 70 1 
302 3 193 1 35 2 259 2 76 2 284 1 264 1 3 1 267 2 132 1 106 1 335 2 223 1 203 2 109 2 204 1 157 1 273 1 116 1 187 2 120 2 253 1 32 1 70 1 
209 1 302 4 95 1 259 1 76 3 261 1 264 1 39 2 132 1 5 1 180 1 134 1 109 1 204 1 157 1 315 2 187 3 120 3 253 1 32 1 320 1 301 1 232 1 
5 1 209 1 95 1 302 4 109 1 259 1 204 1 76 3 261 1 157 1 315 2 264 1 39 2 187 3 253 1 120 3 320 1 32 1 332 1 301 1 132 1 232 1 
330 1 187 1 204 1 76 1 120 1 132 1 
93 1 302 3 109 1 259 2 76 6 204 3 114 1 238 1 38 1 274 1 330 1 187 7 51 1 120 7 320 2 309 1 144 1 4 1 254 1 132 2 26 1 
167 2 93 1 190 2 13 1 73 2 192 2 302 1 257 1 193 1 35 2 211 1 259 1 235 1 76 1 79 1 173 2 80 1 3 1 21 5 267 2 132 1 106 2 335 1 291 2 220 2 294 2 109 1 269 2 203 1 66 1 204 1 155 1 112 1 348 1 251 1 116 1 158 4 298 3 228 2 187 1 229 1 120 1 122 2 
209 1 95 1 302 2 74 2 76 1 149 2 237 1 261 1 326 1 198 1 39 3 214 2 308 1 44 1 332 1 5 2 179 1 246 1 315 3 162 1 164 2 187 1 118 1 278 1 120 1 320 1 301 1 232 1 
93 1 302 2 109 1 259 1 76 2 204 2 330 1 187 2 119 1 120 2 301 1 254 1 132 1 
93 1 302 1 259 1 204 1 76 4 113 1 157 1 187 4 131 1 241 1 120 4 320 1 132 1 
338 1 302 1 292 1 109 1 259 1 76 2 204 2 114 1 92 1 187 2 120 2 32 1 309 1 132 1 
84 1 12 1 186 1 61 1 187 1 204 1 76 1 120 1 320 1 132 1 
93 1 302 1 259 1 76 2 204 1 19 1 238 1 274 1 187 2 120 2 132 1 
93 1 302 3 259 2 76 4 204 2 113 1 238 1 131 1 187 5 241 1 120 5 32 1 320 1 4 1 132 2 144 1 
93 1 302 3 259 2 76 4 204 2 113 1 238 1 329 1 131 1 187 5 241 1 120 5 32 1 320 1 132 2 144 1 
106 1 335 1 302 1 193 1 35 2 109 1 203 1 259 1 204 1 76 1 273 1 3 1 116 1 187 1 267 2 120 1 320 1 132 1 
302 1 109 1 259 1 76 1 204 2 114 1 187 1 120 1 32 1 309 1 254 1 132 1 26 1 
106 1 296 1 255 1 260 1 271 1 
255 1 95 1 35 1 127 1 284 2 260 1 325 1 261 1 101 1 39 2 288 1 267 1 44 1 335 1 104 1 223 1 203 1 183 1 271 1 315 2 296 1 115 1 116 1 117 1 70 1 189 1 53 1 232 1 
296 1 255 1 40 1 256 1 35 1 203 1 267 1 271 1 303 1 
255 1 117 1 53 1 
6 1 85 1 207 1 324 1 
6 1 355 1 207 1 163 1 324 1 63 1 279 1 
82 1 276 1 63 1 
6 1 168 2 212 1 182 1 148 1 324 1 355 1 265 1 207 1 163 1 279 3 63 3 
242 1 6 1 355 1 207 1 163 1 77 1 324 1 63 2 279 2 
6 1 125 1 355 1 12 1 61 1 163 1 199 1 212 1 63 1 279 1 225 1 
6 1 355 1 207 1 163 1 212 1 63 1 279 1 
355 1 207 2 163 1 212 1 324 1 63 1 279 1 
6 1 33 1 212 1 159 1 355 2 207 1 163 2 299 1 279 2 63 2 
242 2 6 2 108 1 212 1 17 1 324 1 355 1 207 1 163 1 199 1 279 3 63 3 177 1 
242 1 6 1 34 1 212 1 324 1 225 1 355 1 207 1 186 1 12 1 61 2 163 1 22 1 279 2 63 2 
242 2 6 2 108 1 212 1 77 1 324 1 172 1 355 2 207 1 163 2 199 1 279 4 63 4 
6 1 355 1 207 1 163 1 212 1 324 1 63 1 279 1 
242 2 6 3 108 1 168 1 182 1 148 1 324 2 355 1 207 2 163 1 199 1 24 1 279 4 63 4 
242 1 6 1 355 1 207 1 163 1 212 1 300 1 121 1 200 1 324 1 63 2 279 2 
6 1 107 1 355 1 168 2 207 1 163 1 212 1 182 2 148 1 324 1 63 3 279 3 
6 2 15 1 176 2 331 1 
28 1 355 1 163 1 212 1 63 1 279 1 
242 1 6 1 355 1 207 1 163 1 212 1 324 1 63 2 279 2 177 1 
333 1 
6 1 355 1 207 1 163 1 212 1 324 1 63 1 279 1 
242 1 6 1 355 1 168 1 207 1 163 1 212 1 324 1 63 3 279 3 177 1 
6 1 108 1 199 1 24 1 
6 1 207 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (236,347) (255,378) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (236,347) (255,378) (255,378) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (236,347) (255,378) (255,378) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (236,347) (255,378) (255,378) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException (236,347) 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException (236,347) 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 246 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (236,347) (255,378) (255,378) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (236,347) (255,378) (255,378) 198 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (236,347) (255,378) (255,378) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (236,347) (255,378) (255,378) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (236,347) (255,378) (255,378) 198 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (236,347) (255,378) (255,378) 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1400 | 1 -> 0
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 0
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10082 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1894 | return null
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V | STATEMENT | 809 | stmt -> ;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | ASSIGN | 4311 | = null
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
72 2 2 1 272 2 109 1 276 1 12 1 328 2 280 2 368 1 369 1 173 2 18 2 215 1 149 1 19 9 289 1 152 2 288 1 314 1 374 3 157 1 268 4 46 5 120 6 319 1 184 1 48 1 70 9 
72 2 2 1 272 2 109 1 276 1 12 1 328 2 280 2 368 1 369 1 173 2 18 2 215 1 149 1 19 9 289 1 152 2 288 1 314 1 374 3 157 1 268 4 46 5 120 6 319 1 184 1 48 1 70 9 
72 2 2 1 272 2 109 1 276 1 12 1 328 2 280 2 368 1 369 1 173 2 18 2 215 1 149 1 19 10 289 1 152 2 288 1 314 1 374 4 157 1 268 5 46 6 120 7 319 1 184 1 48 1 70 10 
72 2 2 1 272 2 109 1 276 1 12 1 328 1 280 2 368 1 173 2 18 2 215 1 149 1 19 7 289 1 152 2 288 1 314 1 374 2 157 1 268 3 46 4 120 4 319 1 184 1 48 1 70 7 
72 1 368 1 369 1 18 1 173 1 215 1 272 1 149 1 19 4 152 1 288 1 374 1 157 1 268 2 328 2 120 3 46 3 70 4 
368 1 72 1 173 1 18 1 215 1 149 1 19 2 152 1 289 1 266 1 12 1 46 1 280 1 341 1 70 2 158 1 
368 1 173 2 215 1 149 1 19 3 152 2 374 1 268 1 46 2 120 1 280 1 184 1 70 3 
72 1 272 1 276 1 328 2 280 1 368 1 173 2 18 1 369 1 215 1 61 1 149 1 19 9 152 2 288 1 374 3 268 4 157 1 120 7 46 5 319 1 184 1 356 1 70 9 
72 1 272 1 276 1 328 2 280 1 368 1 173 2 18 1 369 1 215 1 61 1 149 1 19 9 152 2 288 1 374 3 268 4 157 1 120 7 46 5 319 1 184 1 356 1 70 9 
16 1 277 1 375 1 
277 1 254 2 185 1 
228 2 285 2 50 2 34 2 140 1 231 2 35 1 187 2 
0 1 244 1 105 1 50 3 247 2 225 1 226 2 301 2 111 1 164 1 338 1 362 1 228 3 361 2 194 1 10 1 34 2 305 1 13 1 140 1 231 2 35 1 285 2 143 1 310 2 144 1 146 1 345 1 235 1 148 1 42 1 97 1 183 1 71 1 296 1 187 2 186 1 
228 1 285 1 50 1 34 1 255 1 231 1 347 1 35 1 187 1 
285 1 50 2 312 1 25 1 107 1 20 1 79 1 347 1 167 1 228 2 352 1 277 1 34 1 375 1 255 1 365 1 201 1 231 1 378 1 35 1 187 2 
285 2 50 2 107 1 20 2 79 1 347 1 167 1 228 2 352 1 277 1 34 2 375 1 255 1 365 1 201 2 378 1 231 2 35 1 187 2 
94 1 171 1 20 1 230 1 201 1 
94 1 277 1 375 1 75 1 171 1 20 2 201 2 176 1 
171 1 20 1 201 1 
285 1 50 1 20 1 347 1 94 1 228 1 34 1 255 1 201 1 378 1 231 1 35 1 187 1 
277 1 
94 1 277 1 271 1 375 1 75 1 171 1 20 2 201 2 
245 1 38 1 298 1 75 1 248 1 20 5 249 2 151 1 166 2 94 2 350 1 277 1 7 1 44 1 67 1 375 1 171 2 281 2 201 5 
0 1 285 1 143 1 144 1 50 2 247 1 344 1 146 1 62 1 301 1 164 1 228 2 361 1 194 1 183 1 87 1 231 1 71 1 186 1 187 1 
16 1 140 1 
285 1 88 1 50 2 228 2 34 1 140 2 231 1 306 1 187 2 
29 1 205 1 344 1 
232 1 0 1 143 1 50 1 247 1 144 1 146 1 301 1 164 1 228 1 361 1 194 1 140 1 183 1 71 1 186 1 
285 4 234 1 50 5 25 1 62 1 228 5 34 1 119 1 140 1 256 1 87 2 231 4 306 1 187 5 
228 1 285 1 50 1 231 1 347 1 187 1 
228 3 285 3 50 3 34 1 140 1 87 1 231 3 187 3 
228 1 285 1 50 1 231 1 347 1 187 1 
228 1 285 1 88 1 50 1 34 1 365 1 231 1 306 1 187 1 
244 1 0 1 247 1 50 4 105 1 107 1 301 1 164 1 111 1 167 1 170 1 10 1 305 1 13 1 306 1 310 1 20 1 62 1 21 1 352 1 183 1 71 1 187 3 186 1 225 1 226 2 79 1 361 1 228 4 362 1 194 1 34 2 365 2 140 1 87 1 231 3 35 1 285 3 143 1 144 1 146 1 236 1 42 1 97 1 201 1 
228 2 285 1 50 2 25 1 119 1 140 1 231 1 87 1 187 2 
285 3 50 3 107 1 20 1 62 1 79 1 372 1 167 1 228 3 352 1 277 1 170 1 34 1 365 1 201 1 87 2 231 3 306 1 187 3 
285 2 50 2 344 1 29 1 228 2 34 1 87 1 231 2 306 1 187 2 
0 1 143 1 50 1 247 1 144 1 146 1 301 1 164 1 228 1 361 1 194 1 140 1 183 1 71 1 186 1 
0 1 143 1 50 1 247 1 144 1 301 1 228 1 361 1 194 1 180 1 278 1 140 1 183 1 71 1 186 1 
189 1 105 1 125 1 205 2 225 1 226 2 111 2 251 1 134 1 338 2 29 2 362 1 304 1 10 1 305 1 13 1 307 1 310 4 344 2 41 1 290 1 348 1 23 1 160 1 
228 1 285 1 50 1 107 1 365 1 116 1 231 1 187 1 
297 1 104 1 
297 1 104 1 
190 1 217 1 
190 1 217 1 
297 1 104 1 190 1 217 1 
297 1 104 1 52 1 
297 1 104 1 52 1 
297 1 104 1 52 1 
297 1 104 1 327 1 
297 2 104 2 55 1 190 1 217 1 177 1 
297 1 104 1 351 1 
297 1 104 1 351 1 
297 1 104 1 351 1 
297 1 104 1 357 1 50 2 162 1 26 1 110 1 133 1 325 1 28 1 228 2 32 1 327 1 140 1 231 2 367 1 285 2 20 1 45 1 222 1 181 1 201 1 159 1 187 2 
297 2 1 1 357 2 104 2 4 1 370 2 20 2 129 1 133 2 291 1 28 2 55 1 274 1 168 1 277 1 45 3 181 1 201 2 159 2 
72 1 18 1 272 1 
72 1 18 1 266 1 
72 3 81 1 266 1 9 1 272 2 261 1 
72 2 81 1 266 1 272 1 261 1 212 1 
72 2 81 2 266 1 272 1 261 1 
189 1 245 2 298 1 75 1 110 1 249 1 251 1 324 2 166 1 207 1 32 1 277 2 254 3 86 1 171 1 281 1 60 1 41 1 287 1 20 5 22 1 94 4 23 1 44 3 222 1 376 2 375 1 68 2 294 1 201 5 185 1 379 1 
189 3 245 6 298 1 127 1 75 1 249 2 251 3 166 2 303 1 32 4 277 5 137 1 254 9 86 3 171 6 230 5 281 2 60 1 41 3 287 2 20 9 94 7 23 3 267 1 67 1 44 8 376 6 354 5 375 1 68 6 294 2 241 1 201 9 185 3 202 1 
189 1 245 2 249 1 251 1 324 1 166 1 207 1 32 1 277 3 254 4 86 1 281 1 41 1 287 1 20 3 94 2 23 1 67 1 44 3 375 1 376 2 294 1 68 2 201 3 185 2 379 1 
189 2 245 4 249 1 251 2 324 2 166 1 207 1 32 2 277 4 137 1 254 7 86 2 281 1 41 2 287 1 20 4 94 3 23 2 67 1 44 5 375 1 376 4 68 4 294 1 241 1 201 4 185 3 202 1 379 1 
16 1 143 1 263 1 
143 1 269 1 
377 1 
0 1 143 1 183 1 
143 1 6 1 
143 1 183 1 
0 1 332 1 143 3 183 1 263 2 57 1 
189 1 213 1 330 1 309 1 310 9 311 1 41 1 111 4 165 1 132 2 348 3 338 5 83 1 295 1 211 1 69 1 160 2 
189 1 213 1 330 1 309 1 310 9 311 1 41 1 111 4 165 1 132 2 348 3 338 5 83 1 295 1 211 1 69 1 160 2 
189 1 213 1 330 1 309 1 310 9 311 1 41 1 111 4 165 1 132 2 348 3 338 5 83 1 295 1 211 1 69 1 102 1 160 2 
246 1 310 3 83 1 309 2 300 1 100 1 182 1 78 1 111 1 132 1 338 2 
189 1 73 1 225 2 226 4 111 5 132 2 338 6 362 2 82 1 83 1 10 2 13 2 211 1 213 1 310 11 309 1 330 1 311 1 41 1 348 5 295 2 242 1 69 1 160 3 
72 2 247 1 272 1 360 1 301 1 227 1 361 1 275 1 9 1 280 1 139 1 257 1 368 1 286 1 18 1 173 1 215 1 371 1 149 1 19 2 152 1 90 1 64 1 266 1 46 1 120 1 70 2 71 1 188 1 186 1 
72 2 247 1 272 1 301 1 227 1 361 1 275 1 9 1 84 1 280 1 139 1 257 1 308 1 18 1 173 1 215 1 371 1 149 1 19 3 152 1 90 1 64 1 266 1 46 1 120 2 124 1 70 3 71 1 188 1 186 1 
72 2 247 1 272 1 301 1 361 1 275 1 84 1 9 1 280 1 139 1 257 1 18 1 215 1 371 1 149 1 19 2 90 1 266 1 46 1 120 2 124 1 70 2 71 1 188 1 186 1 
247 1 301 1 252 1 193 1 361 1 275 2 194 1 280 2 139 2 308 1 259 1 173 1 143 1 19 1 152 1 150 1 118 1 183 1 70 1 71 1 186 1 188 2 224 1 
72 2 247 1 272 1 301 1 227 1 361 1 275 1 84 1 9 1 280 1 139 1 257 1 368 1 286 1 18 1 173 1 371 1 19 1 152 1 90 1 64 1 266 1 70 1 71 1 188 1 186 1 
123 1 
245 2 247 2 50 1 298 1 107 1 51 1 336 2 249 1 301 2 166 1 252 1 167 1 339 2 169 1 254 2 171 6 259 1 312 1 20 5 219 1 349 1 264 2 352 1 353 2 183 1 185 2 71 1 186 1 187 1 321 1 25 1 75 3 79 1 361 2 228 1 194 2 33 2 277 4 364 2 281 1 365 1 141 1 143 1 142 4 89 1 287 1 154 1 238 1 43 1 197 2 44 2 375 3 99 1 201 5 334 1 
321 1 50 1 271 1 25 1 107 1 75 1 51 1 336 1 79 1 167 1 228 1 169 1 277 2 171 2 365 1 142 2 312 1 20 3 43 1 238 1 352 1 375 2 201 3 187 1 
142 3 321 1 50 1 312 1 107 1 25 1 51 1 20 2 79 1 238 1 43 1 167 1 228 1 197 1 169 1 352 1 277 2 375 2 365 1 201 2 187 1 
321 1 50 1 271 1 25 1 107 1 75 1 51 1 336 1 79 1 167 1 228 1 339 1 169 1 277 3 171 2 365 1 142 3 312 1 20 3 43 1 238 1 197 1 352 1 375 3 201 3 187 1 
245 1 50 2 298 1 107 1 51 1 336 4 249 1 166 1 167 1 339 4 169 1 171 7 255 1 312 1 20 5 347 1 65 1 219 1 317 1 264 2 352 1 353 2 121 1 185 2 187 2 321 1 271 1 25 1 75 3 79 1 323 1 228 2 33 2 277 4 34 1 364 2 365 1 281 1 283 1 231 1 35 1 285 1 141 1 142 5 238 1 43 1 197 3 44 1 375 4 201 5 378 1 
245 1 321 1 50 1 298 1 25 1 107 1 75 2 51 1 336 2 249 1 79 1 166 1 167 1 339 2 228 1 169 1 33 2 277 4 254 2 171 4 364 2 281 1 365 1 141 1 142 4 312 1 89 1 20 4 43 1 238 1 219 1 264 2 197 2 352 1 353 2 44 1 375 3 201 4 185 2 187 1 
245 1 321 1 50 1 298 1 25 1 107 1 75 2 51 1 336 2 249 1 79 1 166 1 167 1 339 2 228 1 169 1 33 2 277 3 171 4 364 2 365 1 281 1 141 1 142 4 312 1 20 4 43 1 238 1 65 1 219 1 264 2 317 1 197 2 352 1 353 2 44 1 375 3 121 1 201 4 185 2 187 1 
245 1 321 1 50 1 298 1 25 1 107 1 75 2 51 1 336 2 249 1 79 1 166 1 167 1 339 2 228 1 169 1 33 2 277 3 171 4 364 2 365 1 281 1 141 1 142 4 312 1 20 4 43 1 238 1 65 1 219 1 264 2 317 1 197 2 352 1 353 2 44 1 375 3 121 1 201 4 185 2 187 1 
245 1 321 1 50 1 106 1 298 1 25 1 107 1 75 2 51 1 336 2 249 1 79 1 166 1 167 1 339 2 228 1 169 1 33 2 277 3 254 2 171 4 365 1 281 1 142 4 312 1 20 4 218 2 43 1 238 1 65 1 219 1 264 2 179 2 197 2 352 1 293 1 44 1 98 1 375 3 201 4 187 1 
245 1 321 1 50 1 298 1 25 1 107 1 75 2 51 1 249 1 336 3 79 1 323 1 166 1 167 1 228 1 339 3 169 1 33 2 277 3 364 2 171 5 281 1 365 1 141 1 142 5 312 1 20 4 43 1 238 1 65 1 219 1 264 2 317 1 197 3 352 1 353 2 44 1 375 3 121 1 201 4 185 2 187 1 
245 1 321 1 50 1 298 1 25 1 107 1 75 2 51 1 249 1 336 3 79 1 323 1 166 1 167 1 228 1 339 3 169 1 33 2 277 3 364 2 171 5 281 1 365 1 141 1 142 5 312 1 20 4 43 1 238 1 65 1 219 1 264 2 317 1 197 3 352 1 353 2 44 1 375 3 121 1 201 4 185 2 187 1 
245 1 321 1 50 1 298 1 25 1 107 1 75 2 51 1 336 2 249 1 79 1 166 1 167 1 339 2 228 1 169 1 33 2 277 3 254 2 171 4 281 1 365 1 142 4 312 1 89 1 20 4 218 2 43 1 238 1 219 1 264 2 179 2 197 2 352 1 44 1 98 1 375 3 201 4 187 1 
189 1 105 1 125 1 205 1 225 1 226 2 111 4 132 1 338 4 29 1 362 1 10 1 305 1 13 1 211 1 140 3 213 1 16 1 310 8 330 1 311 1 344 1 41 1 348 3 295 1 69 1 160 2 
189 3 191 1 105 1 205 14 225 2 226 4 78 4 111 9 251 2 302 1 338 10 29 5 362 2 10 2 305 2 138 1 86 3 13 2 140 1 14 1 15 2 310 19 344 14 345 1 41 2 348 3 23 3 97 1 100 3 182 1 318 1 295 1 160 2 
0 1 247 1 105 1 50 2 225 1 226 2 273 1 301 1 164 1 111 1 338 1 29 1 361 1 228 2 362 1 194 1 10 1 8 1 305 1 138 1 13 1 140 1 231 1 87 1 232 1 285 1 143 1 144 1 310 2 146 1 345 1 62 1 97 1 24 1 183 1 71 1 186 1 187 1 
0 2 247 3 50 3 105 3 205 7 299 1 301 3 111 11 164 2 251 2 338 11 54 2 10 3 305 3 13 3 211 1 172 1 213 1 310 22 311 1 344 7 345 1 62 1 348 11 178 2 23 2 183 2 69 1 71 2 187 1 186 2 189 3 126 2 225 3 226 6 132 1 29 7 361 3 362 3 228 3 194 1 363 2 84 1 279 1 138 1 86 2 140 3 87 1 231 1 285 1 143 2 330 1 144 2 146 2 41 3 42 2 97 1 295 5 160 6 
125 1 50 1 247 8 105 2 74 1 358 1 225 2 226 4 360 1 130 1 301 8 111 1 192 1 338 1 252 1 228 1 361 7 362 2 194 2 84 1 10 2 11 1 305 2 13 2 231 1 87 1 285 1 259 1 143 3 310 2 345 1 316 1 155 1 97 1 183 2 71 2 187 1 186 2 296 2 
228 1 285 1 50 1 203 1 34 1 231 1 306 1 187 1 
189 1 310 2 125 1 105 1 205 1 344 1 225 1 226 2 348 1 338 2 29 1 362 1 23 1 10 1 305 1 295 1 13 1 307 1 
310 2 125 1 105 1 205 1 344 1 225 1 226 2 41 1 111 2 251 1 134 1 348 1 29 1 362 1 10 1 305 1 13 1 160 1 
189 1 105 1 125 1 205 2 225 1 226 2 111 2 251 1 338 2 29 2 362 1 10 1 305 1 86 1 13 1 310 4 344 2 41 1 348 1 23 1 160 1 
189 1 310 2 105 1 205 1 344 1 225 1 226 2 155 1 348 1 338 2 29 1 362 1 23 1 10 1 305 1 295 1 13 1 307 1 
310 2 105 1 205 1 344 1 225 1 226 2 41 1 111 2 251 1 155 1 134 1 348 1 29 1 362 1 10 1 305 1 13 1 160 1 
189 1 105 1 205 2 225 1 226 2 111 2 251 1 338 2 29 2 362 1 10 1 305 1 86 1 13 1 310 4 344 2 41 1 155 1 348 2 23 1 295 1 160 1 
189 1 105 1 310 4 205 2 344 2 225 1 41 1 226 2 111 2 251 1 348 1 338 2 29 2 362 1 23 1 10 1 305 1 86 1 13 1 160 1 
0 1 247 1 50 1 105 1 225 1 226 2 301 1 164 1 111 1 338 1 361 1 228 1 362 1 194 1 10 1 305 1 13 1 140 1 143 1 310 2 144 1 146 1 345 1 42 1 97 1 183 1 71 1 186 1 
0 1 247 1 50 1 105 1 225 1 226 2 301 1 111 1 338 1 361 1 228 1 362 1 194 1 278 1 10 1 305 1 13 1 140 1 143 1 310 2 144 1 345 1 180 1 97 1 355 1 183 1 71 1 186 1 
189 1 105 1 205 2 225 1 226 2 111 2 251 1 338 2 29 2 362 1 10 1 305 1 138 1 86 1 13 1 310 4 344 2 41 1 348 1 23 1 160 1 
189 1 0 1 247 1 50 1 105 1 205 2 126 1 225 1 226 2 360 1 301 1 111 2 164 1 251 1 338 2 29 2 361 1 228 1 362 1 10 1 305 1 86 1 13 1 143 1 310 4 144 1 344 2 146 1 41 1 42 1 348 1 23 1 183 1 71 1 160 1 186 1 
189 1 105 1 50 1 205 1 225 1 108 1 226 2 111 1 251 1 338 2 29 1 362 1 228 1 10 1 34 1 305 1 138 1 86 1 13 1 231 1 306 1 285 1 310 3 344 1 41 1 348 1 23 1 295 1 187 1 
161 1 111 29 251 4 338 31 113 1 10 4 13 4 211 3 15 2 58 1 59 2 213 3 310 60 214 1 311 3 348 14 23 5 182 3 69 3 320 1 189 8 73 2 225 4 226 8 359 1 78 5 27 1 131 4 132 3 362 4 326 1 82 1 86 5 366 1 330 3 40 1 41 7 100 3 199 1 239 1 295 6 333 1 160 8 
161 1 189 4 73 2 225 4 359 1 226 8 78 2 27 1 111 15 131 4 251 2 132 1 338 18 362 4 326 1 82 1 10 4 86 3 13 4 366 1 211 1 58 1 213 1 59 1 330 1 214 1 310 33 311 1 40 1 41 3 348 6 23 3 199 1 100 2 239 1 182 2 295 3 333 1 69 1 320 1 160 3 
161 1 189 7 73 2 225 3 359 1 226 6 78 3 27 1 111 26 131 4 251 3 132 3 338 28 326 1 362 3 82 1 10 3 86 4 13 3 366 1 211 3 58 1 15 1 213 3 59 1 330 3 214 1 310 54 311 3 40 1 41 6 348 13 23 4 239 1 199 1 100 2 182 2 295 5 333 1 69 3 160 8 
189 4 73 2 225 4 359 1 226 8 78 2 27 1 111 14 131 3 251 2 132 1 338 17 362 4 326 1 82 1 10 4 86 3 13 4 366 1 211 1 58 1 213 1 59 1 330 1 214 1 310 31 311 1 40 1 41 3 156 1 348 7 23 3 199 1 100 2 239 1 182 2 295 3 333 1 69 1 320 1 160 4 
161 1 189 2 225 1 359 2 226 2 78 2 27 1 111 8 131 2 251 2 338 7 362 1 82 1 10 1 86 2 13 1 366 1 15 1 59 2 310 15 41 2 348 1 23 2 199 1 100 1 182 1 160 1 
28 1 297 1 104 1 357 1 55 1 274 1 4 1 95 1 133 1 159 1 
327 1 325 1 
28 1 297 1 104 1 357 1 253 1 56 1 204 1 133 1 159 1 
216 1 52 1 
221 1 351 1 177 1 
297 1 357 1 104 1 4 1 370 1 20 1 129 1 133 1 291 1 28 1 55 1 274 1 168 1 277 1 45 2 181 1 201 1 159 1 
297 1 357 1 104 1 4 1 370 1 20 1 129 1 133 1 291 1 28 1 55 1 274 1 168 1 277 1 45 2 181 1 201 1 159 1 
297 1 357 1 104 1 4 1 370 1 20 1 129 1 133 1 291 1 28 1 55 1 274 1 168 1 277 1 45 2 181 1 201 1 159 1 
216 1 52 1 177 1 
216 1 52 1 177 1 
221 1 351 1 
221 1 351 1 177 1 
162 1 367 1 
297 1 104 1 357 1 50 2 162 1 129 1 26 1 110 1 133 1 325 1 28 1 228 2 32 1 327 1 140 1 367 1 231 2 285 2 370 1 343 1 20 1 94 1 45 1 222 1 201 1 159 1 187 2 
335 1 247 2 105 1 50 2 225 1 226 2 301 2 111 1 192 1 338 1 228 2 362 1 361 2 10 1 11 1 305 1 138 1 208 1 13 1 143 1 310 2 342 1 345 1 175 1 91 1 97 1 183 1 71 1 186 1 187 2 296 2 
72 2 18 1 247 2 272 1 360 1 301 2 90 1 227 1 361 2 136 1 266 1 9 1 84 1 209 1 257 1 71 1 103 1 186 1 188 1 
72 2 18 1 247 1 272 1 301 1 90 1 92 1 227 1 361 1 266 1 9 1 84 1 209 1 257 1 71 1 188 1 186 1 
259 1 143 1 247 1 301 1 174 1 252 1 361 1 194 1 183 1 71 1 103 1 186 1 188 1 224 1 
72 2 18 1 247 1 272 1 301 1 90 1 227 1 361 1 136 1 266 1 9 1 84 1 209 1 257 1 103 1 71 1 186 1 188 1 
373 1 
245 1 38 1 16 1 350 1 277 1 44 1 375 1 
245 1 298 1 75 1 249 1 166 1 277 2 254 1 364 1 171 1 281 1 141 1 20 1 353 1 44 1 375 1 201 1 185 1 
189 1 243 1 0 1 245 3 270 1 247 1 5 1 298 2 75 1 249 2 79 1 301 1 251 1 166 2 361 1 31 1 194 1 363 1 277 3 254 6 86 1 171 2 281 2 143 4 41 1 287 1 20 2 331 1 263 1 346 1 117 1 93 1 332 1 23 1 44 4 376 3 68 3 269 2 201 2 183 1 185 3 71 1 186 2 
189 4 245 8 191 1 298 2 128 1 75 1 78 2 249 2 251 4 166 2 53 1 326 1 31 3 277 7 254 10 171 1 86 4 281 2 58 1 15 1 214 1 40 1 287 1 41 4 20 1 154 1 63 1 23 4 44 13 375 2 376 8 239 1 68 8 100 2 182 1 201 1 185 5 
189 1 245 1 50 1 298 1 249 1 166 1 228 1 31 2 34 1 281 1 255 1 231 1 35 1 213 1 285 1 330 1 41 1 20 1 347 1 317 1 198 1 44 2 201 1 69 1 378 1 187 1 
38 1 245 1 298 1 249 1 166 1 350 1 277 1 44 1 375 1 281 1 
189 2 245 5 41 2 63 1 251 2 31 2 363 1 23 2 277 5 44 5 376 5 254 10 68 5 86 2 185 5 
277 1 375 1 75 1 20 1 171 1 201 1 
245 2 247 4 298 1 75 2 76 1 249 2 77 1 301 4 166 2 252 1 361 4 30 2 194 2 171 4 281 2 259 1 143 1 287 2 20 3 154 2 349 1 67 1 44 2 99 1 47 1 183 1 201 3 71 1 186 1 
244 1 0 1 247 1 50 3 105 1 225 1 226 2 301 1 111 1 164 1 362 1 361 1 228 3 194 1 10 1 34 2 305 1 13 1 140 1 231 2 35 1 285 2 143 1 310 1 144 1 146 1 42 1 97 1 183 1 71 1 187 2 186 1 
245 2 298 1 287 1 249 1 154 1 132 1 166 1 277 4 44 1 376 2 254 4 375 2 68 2 281 1 185 2 
28 1 85 1 159 1 
28 1 85 1 159 1 
28 1 85 1 159 1 
265 1 28 1 4 1 162 1 159 1 
28 1 315 1 159 1 
28 1 315 1 159 1 
28 1 315 1 159 1 
28 1 159 1 
297 1 104 1 
189 2 73 2 225 3 226 6 78 1 111 5 251 1 338 7 362 3 326 1 82 1 10 3 86 2 13 3 58 1 214 1 310 12 40 1 41 1 348 3 23 2 100 1 239 1 182 1 295 1 160 2 
189 2 73 2 225 4 226 8 78 1 111 5 251 1 338 7 362 4 326 1 82 1 195 1 10 4 86 2 13 4 58 1 214 1 310 12 40 1 41 1 348 3 23 2 100 1 239 1 182 1 295 1 160 2 
189 4 225 2 226 4 78 2 111 12 251 1 132 1 338 12 362 2 82 1 195 1 10 2 86 1 13 2 211 1 58 1 15 1 213 2 330 2 310 24 311 1 41 4 348 7 23 1 198 1 100 1 182 1 295 3 69 2 160 4 
189 4 225 2 226 4 78 2 111 13 251 1 132 1 338 12 362 2 82 1 195 1 10 2 86 1 13 2 211 1 58 1 15 1 213 2 330 2 310 25 311 1 41 4 348 8 23 1 198 1 100 1 182 1 295 3 69 2 160 5 
189 2 73 2 225 3 226 6 78 1 111 5 251 1 338 7 362 3 326 1 82 1 10 3 86 2 13 3 58 1 214 1 310 12 40 1 41 1 348 3 23 2 100 1 239 1 182 1 295 1 160 2 
189 1 225 1 226 2 78 2 111 4 251 1 338 3 362 1 82 1 10 1 86 1 13 1 58 1 15 1 310 7 41 1 348 1 23 1 100 1 182 1 160 1 
189 1 225 2 226 4 78 2 111 4 251 1 338 3 362 2 82 1 195 1 10 2 86 1 13 2 58 1 15 1 310 7 41 1 348 1 23 1 100 1 182 1 160 1 
189 1 225 2 226 4 78 2 111 4 251 1 338 3 362 2 82 1 10 2 86 1 13 2 58 1 15 1 310 7 41 1 348 1 23 1 100 1 182 1 320 1 160 1 
213 2 310 4 311 1 111 2 348 4 338 2 295 2 211 2 69 2 160 2 
189 1 225 2 226 4 78 2 111 4 251 1 338 3 362 2 82 1 10 2 86 1 13 2 58 1 15 1 310 7 41 1 348 1 23 1 100 1 182 1 320 1 160 1 
189 1 213 1 73 1 330 1 310 8 311 1 225 2 41 1 226 4 111 4 132 1 338 4 348 3 362 2 10 2 295 1 13 2 211 1 69 1 160 2 
189 1 213 1 16 1 310 8 330 1 311 1 41 1 111 4 132 1 348 3 338 4 295 1 211 1 69 1 160 2 
189 1 310 4 225 1 41 1 226 2 111 2 251 1 348 2 338 2 362 1 195 1 23 1 10 1 86 1 13 1 295 1 160 1 
189 1 310 7 41 1 78 2 111 4 251 1 348 1 338 3 23 1 100 1 182 1 86 1 160 1 15 1 
189 3 73 2 191 1 225 2 226 4 78 2 111 12 251 2 132 1 338 11 362 2 10 2 86 2 13 2 211 1 14 1 15 1 213 2 330 1 310 23 311 1 41 3 262 1 348 9 23 2 100 2 295 4 69 2 160 5 
310 1 78 1 111 1 
310 1 100 1 338 1 
189 1 310 6 225 1 226 2 41 1 111 3 251 1 338 3 348 4 362 1 195 1 363 1 23 1 10 1 86 1 13 1 295 2 160 2 
189 1 225 1 226 2 78 2 111 4 251 1 338 3 362 1 82 1 10 1 86 1 13 1 58 1 15 1 310 7 41 1 348 1 23 1 100 1 182 1 160 1 
189 1 213 1 330 1 310 6 41 1 111 3 338 3 348 2 295 1 69 1 160 1 
213 1 73 1 310 3 311 1 225 1 226 2 262 1 111 2 338 1 348 2 362 1 10 1 295 1 13 1 211 1 69 1 160 1 
213 1 189 2 310 10 330 1 41 2 111 5 348 4 338 5 198 1 295 2 69 1 160 2 
189 1 310 2 225 1 226 2 338 2 348 1 362 1 82 1 23 1 10 1 13 1 295 1 
189 1 310 4 225 1 41 1 226 2 111 2 251 1 348 1 338 2 362 1 82 1 23 1 10 1 86 1 13 1 160 1 
213 1 310 2 225 1 226 2 111 1 348 2 338 1 362 1 82 1 10 1 13 1 295 1 69 1 160 1 
189 2 300 1 225 3 226 6 78 1 111 6 338 6 362 3 82 1 195 1 10 3 13 3 211 1 213 1 330 1 310 12 311 1 41 2 348 4 198 1 100 1 182 1 295 2 69 1 320 1 160 2 
228 1 50 1 25 1 119 1 196 1 140 1 187 1 
50 1 313 1 25 1 196 1 250 1 228 1 292 1 114 1 119 1 140 1 284 1 187 1 
259 1 16 1 361 1 143 1 194 1 247 1 301 1 183 1 71 1 186 1 252 1 
0 1 285 1 143 1 144 1 50 2 247 1 301 1 164 1 228 2 361 1 194 1 140 1 183 1 87 1 231 1 71 1 186 1 187 1 
0 2 247 1 50 2 107 1 301 1 164 1 337 1 167 1 361 1 228 2 30 1 6 1 365 1 140 1 231 2 87 1 285 1 143 3 144 1 183 2 71 1 187 2 186 1 
0 2 247 2 50 2 107 1 301 2 337 1 167 1 361 2 228 2 30 1 6 1 278 1 365 1 140 1 231 2 87 1 285 1 143 3 144 1 147 1 183 2 71 1 187 2 186 1 
0 1 50 1 247 1 301 1 79 1 337 1 228 1 361 1 30 1 6 1 277 1 34 1 171 1 255 1 231 1 35 1 285 1 143 4 233 1 20 2 263 1 347 1 375 1 269 1 122 1 201 2 183 1 378 1 71 1 187 1 186 1 
0 1 50 1 247 1 301 1 79 1 337 1 228 1 361 1 30 1 6 1 277 1 34 1 171 1 255 1 231 1 35 1 285 1 143 4 20 2 263 1 347 1 117 1 375 1 269 1 201 2 183 1 378 1 71 1 187 1 186 1 
361 1 247 1 74 1 301 1 71 1 186 1 
0 1 143 3 247 7 74 1 358 1 260 1 360 1 130 1 301 7 316 1 332 1 361 6 194 2 340 1 84 1 11 1 329 1 183 2 71 2 296 1 186 3 
0 1 247 1 50 2 105 2 205 1 301 1 164 1 111 4 338 4 54 1 10 2 305 2 208 1 13 2 211 1 213 1 310 8 311 1 344 1 348 3 183 1 69 1 71 1 187 1 186 1 189 1 126 1 225 2 226 4 360 1 132 1 29 1 361 1 362 2 228 2 138 1 140 3 87 1 231 1 285 1 143 1 144 1 330 1 146 1 41 1 42 1 295 1 160 2 
245 3 247 1 50 1 298 2 249 2 301 1 166 2 171 2 255 1 213 1 20 3 263 1 347 1 346 1 117 1 350 1 269 1 69 1 187 1 189 1 270 1 75 1 77 1 79 1 228 1 361 1 194 1 31 2 277 2 34 1 281 2 231 1 35 1 38 1 285 1 143 2 330 1 41 2 93 1 94 1 198 1 44 4 375 2 201 3 378 1 
0 1 143 2 247 2 74 1 360 1 301 2 331 1 263 1 332 1 361 2 183 1 71 1 186 2 
259 1 143 1 247 4 147 1 360 1 153 1 301 4 252 1 361 4 194 1 183 1 71 1 186 1 
0 1 143 1 247 2 301 2 361 2 30 1 340 1 329 1 210 1 282 1 183 1 172 1 71 1 186 2 
72 1 361 1 18 1 194 1 266 1 247 1 90 1 301 1 71 1 186 1 
143 1 247 2 342 1 360 1 301 2 361 2 84 1 11 1 183 1 71 1 186 1 
259 1 143 3 247 5 358 1 360 1 153 1 301 5 316 1 252 1 361 4 30 1 194 1 11 1 183 2 71 2 186 2 
259 1 143 3 247 5 206 1 360 1 153 1 301 5 316 1 252 1 361 4 30 1 194 1 11 1 183 2 71 2 186 2 
0 1 285 1 143 1 144 1 50 2 247 1 301 1 228 2 361 1 194 1 278 1 140 1 183 1 87 1 231 1 71 1 186 1 187 1 
0 1 143 1 247 1 260 1 301 1 332 1 361 1 30 1 340 1 329 1 183 1 71 1 186 2 
49 1 17 1 80 1 140 1 237 1 
49 1 50 1 107 1 79 1 167 1 228 1 80 1 170 1 277 1 34 1 365 1 255 1 231 1 35 1 37 1 285 1 17 1 20 2 237 1 347 1 94 1 352 1 375 1 101 1 240 1 201 2 378 1 187 1 
335 1 49 1 228 1 17 1 50 1 175 1 237 1 91 1 187 1 
37 1 17 1 101 1 
16 1 215 1 46 1 149 1 
173 1 215 1 46 1 149 1 19 1 152 1 70 1 
275 1 280 1 70 1 
368 1 173 1 215 1 163 1 19 3 149 1 152 1 220 1 135 1 12 2 46 1 70 3 
173 1 215 1 328 1 46 1 149 1 120 1 19 2 152 1 70 2 
72 1 368 1 18 1 173 1 268 1 157 1 272 1 46 1 19 1 152 1 70 1 
368 1 173 1 215 1 46 1 19 1 152 1 70 1 
368 1 173 1 215 2 149 1 19 1 152 1 70 1 
368 1 173 2 322 1 215 1 145 1 19 2 152 2 46 1 70 2 36 1 
368 1 173 1 215 1 149 1 19 3 152 1 374 1 276 1 268 1 120 2 46 2 319 1 70 3 
72 2 368 1 173 1 18 1 215 1 272 1 149 1 19 2 152 1 266 1 9 1 46 1 120 1 70 2 258 1 
368 1 173 2 369 1 215 1 149 1 19 4 152 2 374 1 268 1 328 1 120 2 46 2 70 4 
368 1 173 1 215 1 46 1 149 1 19 1 152 1 70 1 
173 1 215 2 163 1 149 2 19 4 152 1 220 1 112 1 374 1 268 1 12 1 120 2 46 3 70 4 
368 1 173 1 215 1 61 1 19 2 149 1 152 1 66 1 46 1 120 1 200 1 70 2 
368 1 3 1 173 1 215 1 163 1 19 3 149 1 152 1 220 2 12 2 46 1 70 3 
115 1 39 1 223 2 46 2 
368 1 173 1 96 1 19 1 152 1 70 1 
368 1 173 1 215 1 46 1 149 1 120 1 19 2 319 1 152 1 70 2 
229 1 
368 1 173 1 215 1 46 1 149 1 19 1 152 1 70 1 
368 1 173 1 215 1 19 3 149 1 152 1 12 1 120 1 46 1 319 1 70 3 
112 1 374 1 268 1 46 1 
215 1 46 1 

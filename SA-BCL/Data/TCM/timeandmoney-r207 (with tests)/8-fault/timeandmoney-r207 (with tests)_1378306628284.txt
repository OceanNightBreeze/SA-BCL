#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (279,305) (279,305) (20,263,308) (20,263,308) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (279,305) (279,305) (20,263,308) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (279,305) (279,305) (20,263,308) 209 226 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (279,305) (279,305) (20,263,308) 209 232 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException (279,305) 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (279,305) (279,305) (20,263,308) (20,263,308) 127 330 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (279,305) (279,305) (20,263,308) (20,263,308) 127 330 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (279,305) (279,305) (20,263,308) (20,263,308) 127 330 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (279,305) (279,305) (20,263,308) (20,263,308) 127 330 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (279,305) (279,305) (20,263,308) (20,263,308) 127 330 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (279,305) (279,305) (20,263,308) (20,263,308) 127 330 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (279,305) (279,305) (20,263,308) (20,263,308) 127 330 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (279,305) (279,305) (20,263,308) (20,263,308) 127 330 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (279,305) (279,305) (20,263,308) (20,263,308) 127 330 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (279,305) (279,305) (20,263,308) (20,263,308) 127 330 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (279,305) (279,305) (20,263,308) (20,263,308) 127 330 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (279,305) (279,305) (20,263,308) (20,263,308) 127 330 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.StringIndexOutOfBoundsException 198 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.StringIndexOutOfBoundsException 198 182 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException (279,305) (279,305) 25 (123,336) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException (279,305) (279,305) 25 (234,261) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (279,305) (279,305) (20,263,308) 209 237 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | OPERATOR | 5778 | == -> >=
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1711 | stmt -> ;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | OPERATOR | 2548 | >= -> <=
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 1
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | ASSIGN | 5073 | = null
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3831 | 1 -> -1
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2636 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 866 | stmt -> ;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
84 1 314 2 191 5 33 1 108 9 61 1 155 1 319 1 199 2 333 3 8 2 133 9 276 1 350 1 135 1 299 1 224 1 335 1 15 2 282 1 118 6 120 1 306 2 121 4 285 2 233 1 259 1 146 2 
84 1 314 2 191 5 33 1 108 9 61 1 155 1 319 1 199 2 333 3 8 2 133 9 276 1 350 1 135 1 299 1 224 1 335 1 15 2 282 1 118 6 120 1 306 2 121 4 285 2 233 1 259 1 146 2 
84 1 314 2 191 6 33 1 108 10 61 1 155 1 319 1 199 2 333 4 8 2 133 10 276 1 350 1 135 1 299 1 224 1 335 1 15 2 282 1 118 7 120 1 306 2 121 5 285 2 233 1 259 1 146 2 
84 1 314 2 191 4 33 1 108 7 61 1 155 1 199 2 333 2 8 2 133 7 276 1 350 1 135 1 299 1 224 1 335 1 15 2 282 1 118 4 120 1 306 2 121 3 285 2 233 1 259 1 146 1 
314 1 335 1 191 3 15 1 118 3 120 1 306 1 108 4 121 2 285 1 319 1 333 1 199 1 146 2 133 4 135 1 299 1 224 1 
267 1 314 1 335 1 191 1 15 1 141 1 61 1 108 2 306 1 285 1 259 1 8 1 133 2 135 1 299 1 136 1 
285 2 335 1 191 2 333 1 15 2 8 1 118 1 282 1 133 3 135 1 299 1 121 1 108 3 
314 1 191 5 33 1 108 9 319 1 333 3 199 1 8 1 133 9 135 1 299 1 224 1 335 1 41 1 15 2 282 1 118 7 120 1 121 4 306 1 285 2 233 1 146 2 52 1 
314 1 191 5 33 1 108 9 319 1 333 3 199 1 8 1 133 9 135 1 299 1 224 1 335 1 41 1 15 2 282 1 118 7 120 1 121 4 306 1 285 2 233 1 146 2 52 1 
111 1 44 1 361 1 
129 1 340 2 361 1 
16 2 23 2 9 2 349 2 214 1 134 2 249 1 95 2 
217 2 30 1 152 1 60 1 130 1 34 1 88 1 244 1 245 1 157 1 320 1 9 2 349 2 348 2 247 1 296 1 134 3 249 1 67 1 300 2 204 1 16 3 119 1 95 2 354 1 167 1 123 1 357 1 213 2 23 2 48 1 214 1 148 1 80 2 25 1 50 1 104 1 
225 1 16 1 23 1 9 1 349 1 214 1 134 1 277 1 95 1 207 1 
16 1 23 1 263 1 134 1 174 1 277 1 305 1 20 1 279 1 
16 1 23 1 9 1 349 1 263 1 134 1 277 1 305 1 95 1 279 1 
14 1 308 1 17 1 18 1 143 1 
14 2 308 2 309 1 111 1 17 1 361 1 18 1 326 1 
14 1 308 1 18 1 
14 1 225 1 16 1 17 1 207 1 95 1 308 1 349 1 9 1 23 1 214 1 134 1 277 1 150 1 
361 1 
14 2 308 2 309 1 111 1 71 1 17 1 361 1 18 1 
14 5 72 1 17 2 18 2 243 1 308 5 309 1 5 1 63 1 111 1 76 1 64 2 10 1 159 2 188 1 361 1 49 1 151 2 179 1 
44 1 249 1 
16 2 32 1 95 1 270 1 23 2 349 1 9 1 134 2 249 2 
96 1 56 1 268 1 
217 1 300 1 16 1 244 1 167 1 245 1 35 1 123 1 157 1 247 1 348 1 148 1 134 1 249 1 25 1 104 1 
217 1 300 1 16 2 268 1 95 1 167 1 244 1 245 1 62 1 324 1 123 1 157 1 9 1 23 1 247 1 348 1 148 1 134 2 25 1 104 1 
324 1 16 3 349 1 23 3 9 3 134 3 249 1 95 3 
225 1 16 1 23 1 9 1 134 1 277 1 95 1 
16 1 23 1 9 1 349 1 32 1 134 1 277 1 95 1 270 1 
16 2 226 1 32 1 305 1 95 2 209 1 62 1 324 1 9 2 23 2 349 1 263 1 134 2 277 1 279 1 
324 1 16 2 23 2 9 1 174 1 134 2 249 1 362 1 95 1 
16 1 305 1 95 1 209 1 232 1 62 1 324 1 9 1 23 1 263 1 134 1 277 1 279 1 
16 2 32 1 268 1 95 2 324 1 96 1 349 1 9 2 23 2 134 2 
217 1 300 1 16 1 244 1 167 1 245 1 123 1 157 1 247 1 348 1 148 1 134 1 249 1 25 1 104 1 
217 1 300 1 16 1 281 1 244 1 167 1 245 1 157 1 247 1 348 1 261 1 134 1 249 1 25 1 104 1 
218 1 30 2 55 1 56 2 152 1 268 2 60 1 176 1 320 2 158 1 296 1 275 1 90 1 67 1 119 1 166 1 19 1 212 1 96 2 213 4 265 1 24 1 80 2 50 1 
16 1 23 1 9 1 134 1 277 1 95 1 81 1 279 1 
16 5 32 1 174 1 95 4 230 1 62 1 324 2 9 4 23 5 349 1 134 5 128 1 249 1 362 1 
225 1 16 2 23 2 9 2 134 2 277 1 81 1 95 2 
352 1 311 1 
352 1 311 1 
78 1 103 1 
78 1 103 1 
78 1 103 1 
352 1 311 1 229 1 
352 1 311 1 229 1 
352 1 311 1 238 1 
352 2 341 1 78 1 311 2 242 1 103 1 
352 1 311 1 229 1 
184 1 352 1 311 1 
184 1 352 1 311 1 
184 1 352 1 311 1 
14 2 27 2 352 2 138 3 140 1 291 2 269 2 308 2 132 1 168 1 186 1 310 2 341 1 147 2 97 1 311 2 361 1 13 1 53 1 
14 1 254 1 352 1 138 1 140 1 16 2 291 1 283 1 95 2 269 1 338 1 308 1 310 1 23 2 147 1 9 2 311 1 114 1 177 1 134 2 249 1 203 1 161 1 238 1 
314 1 199 1 306 1 
314 1 306 1 136 1 
314 3 199 2 124 1 201 1 190 1 136 1 
314 2 199 1 201 1 170 1 190 1 136 1 
314 2 199 1 201 2 190 1 136 1 
129 1 218 1 105 1 55 1 6 2 7 2 111 1 64 1 159 1 10 3 177 1 116 1 160 1 203 1 179 1 14 5 70 2 72 2 17 4 283 1 18 1 166 1 122 1 308 5 185 1 309 1 75 1 340 3 24 1 79 1 361 2 151 1 
129 3 218 3 105 1 55 3 59 1 131 1 63 1 7 6 111 1 64 2 159 2 10 8 115 1 116 3 160 2 179 1 14 9 69 1 70 6 72 6 17 7 283 4 18 6 143 5 353 1 166 3 122 2 308 9 309 1 21 1 340 9 24 3 216 5 361 5 151 2 
129 2 218 1 55 1 63 1 6 1 111 1 7 2 64 1 159 1 10 3 116 1 160 1 14 3 72 2 70 2 17 2 283 1 166 1 122 1 308 3 75 1 340 4 79 1 24 1 361 3 151 1 
129 3 218 2 55 2 131 1 63 1 6 2 111 1 7 4 64 1 159 1 10 5 115 1 116 2 160 1 14 4 69 1 70 4 72 4 17 3 283 2 166 2 122 1 308 4 75 1 340 7 79 1 24 2 361 4 151 1 
192 1 44 1 104 1 
142 1 104 1 
153 1 
245 1 104 1 
192 2 303 1 153 1 167 1 245 1 289 1 104 3 
245 1 104 1 167 1 
329 1 104 1 
343 1 1 1 218 1 30 4 256 2 317 1 166 1 94 1 74 1 176 2 332 1 320 3 89 1 213 7 265 3 102 1 251 1 
343 1 1 1 218 1 30 4 256 2 317 1 166 1 94 1 74 1 176 2 332 1 320 3 89 1 213 7 265 3 102 1 251 1 
343 1 1 1 218 1 30 4 345 1 256 2 317 1 166 1 94 1 74 1 176 2 332 1 320 3 89 1 213 7 265 3 102 1 251 1 
343 1 1 1 28 1 218 4 30 16 55 3 152 1 173 1 317 2 60 1 176 5 109 1 332 2 320 15 89 5 246 1 11 1 116 3 178 4 251 2 119 1 73 1 256 3 94 1 166 4 74 2 183 3 355 1 213 31 24 3 265 10 80 2 102 1 50 1 
343 1 28 1 1 1 218 1 30 5 152 2 317 1 60 2 318 1 176 3 332 1 320 4 89 1 251 1 119 2 256 2 166 1 74 1 213 9 149 1 265 4 80 4 50 2 102 1 
313 1 217 1 314 2 191 1 315 1 154 1 108 2 244 1 199 1 157 1 294 1 113 1 8 1 348 1 133 2 135 1 299 1 136 1 38 1 40 1 300 1 335 1 15 1 91 1 118 1 337 1 306 1 285 1 124 1 22 1 
313 1 217 1 314 2 191 1 193 1 154 1 108 3 244 1 272 1 199 1 157 1 294 1 113 1 8 1 348 1 274 1 133 3 299 1 136 1 38 1 40 1 300 1 335 1 15 1 118 2 337 1 306 1 285 1 124 1 22 1 
40 1 217 1 314 2 300 1 335 1 191 1 118 2 337 1 306 1 108 2 154 1 244 1 272 1 199 1 124 1 157 1 113 1 22 1 8 1 274 1 348 1 133 2 299 1 136 1 38 1 
137 1 217 1 300 1 193 1 15 1 139 1 195 1 154 2 108 1 244 1 245 1 285 1 157 1 295 1 8 2 22 2 247 1 348 1 133 1 360 1 12 1 104 1 38 2 
313 1 217 1 314 2 315 1 154 1 108 1 244 1 199 1 157 1 294 1 113 1 8 1 348 1 274 1 133 1 135 1 136 1 38 1 40 1 300 1 15 1 337 1 306 1 285 1 124 1 22 1 
83 1 
217 2 174 1 330 1 244 1 245 1 292 1 157 1 64 1 348 2 247 2 159 1 10 1 134 1 277 1 278 1 160 1 12 1 279 1 179 1 14 2 180 1 300 2 16 1 72 1 163 1 18 2 305 1 20 1 308 2 309 1 125 1 23 1 263 1 127 1 360 1 151 1 104 1 
14 1 16 1 163 1 174 1 305 1 20 1 330 1 308 1 23 1 127 1 263 1 134 1 277 1 278 1 279 1 
14 1 16 1 163 1 174 1 305 1 20 1 330 1 308 1 23 1 127 1 263 1 134 1 277 1 278 1 279 1 
14 1 16 1 163 1 174 1 305 1 20 1 330 1 308 1 23 1 127 1 263 1 134 1 277 1 278 1 279 1 
14 2 16 1 71 1 163 1 174 1 18 1 305 1 20 1 330 1 308 2 309 1 23 1 263 1 127 1 134 1 277 1 278 1 279 1 
14 1 16 1 163 1 174 1 305 1 20 1 330 1 308 1 64 1 23 1 159 1 263 1 127 1 134 1 277 1 278 1 151 1 279 1 179 1 
14 1 16 1 163 1 174 1 305 1 20 1 330 1 308 1 23 1 127 1 263 1 134 1 277 1 278 1 279 1 
14 1 16 1 163 1 174 1 305 1 20 1 330 1 308 1 23 1 127 1 263 1 134 1 277 1 278 1 279 1 
14 1 16 1 163 1 174 1 305 1 20 1 330 1 308 1 23 1 127 1 263 1 134 1 277 1 278 1 279 1 
14 1 16 1 163 1 174 1 305 1 20 1 330 1 308 1 23 1 127 1 263 1 134 1 277 1 278 1 279 1 
14 1 16 1 163 1 174 1 305 1 20 1 330 1 308 1 23 1 127 1 263 1 134 1 277 1 278 1 279 1 
14 1 16 1 163 1 174 1 305 1 20 1 330 1 308 1 64 1 23 1 159 1 263 1 127 1 134 1 277 1 278 1 151 1 279 1 179 1 
343 1 1 1 218 1 30 3 56 1 152 1 268 1 60 1 176 2 332 1 320 3 158 1 296 1 249 2 251 1 67 1 119 1 44 1 256 1 166 1 96 1 213 6 265 2 80 2 102 1 50 1 
218 2 31 1 30 8 55 1 56 11 152 2 173 1 268 11 60 2 88 1 175 1 176 1 89 1 320 6 296 2 249 1 116 2 178 3 67 1 119 2 73 1 93 1 166 1 183 3 339 1 357 1 96 4 260 1 213 14 265 2 24 2 80 4 50 2 
217 1 30 1 152 1 60 1 244 1 88 1 245 1 62 1 35 1 157 1 320 1 65 1 348 1 247 1 9 1 296 1 134 2 249 1 300 1 67 1 16 2 323 1 119 1 95 1 167 1 307 1 324 1 123 1 339 1 357 1 96 1 23 1 213 2 148 1 80 2 25 1 104 1 50 1 
1 1 55 2 240 2 56 7 152 3 60 3 244 2 62 1 245 2 332 1 157 2 247 1 9 1 296 3 249 2 116 2 251 1 300 3 67 3 204 2 302 2 304 1 16 3 119 3 256 1 166 3 167 2 339 1 123 2 169 1 23 1 213 20 262 1 24 2 265 8 80 6 25 2 312 2 343 1 217 3 218 3 30 10 268 7 88 1 346 2 176 4 320 10 89 4 274 1 348 3 134 3 95 1 324 1 357 1 96 7 148 2 102 1 50 3 104 2 
217 7 30 1 290 1 152 2 196 1 60 2 222 1 244 2 88 1 245 2 157 2 320 1 274 1 158 1 9 1 348 8 247 2 296 2 134 1 12 1 39 1 300 8 67 2 91 1 16 1 119 2 165 1 95 1 144 1 324 1 356 1 357 1 23 1 213 2 48 2 360 1 80 4 104 3 50 2 
218 1 30 1 55 1 56 1 152 1 32 1 268 1 60 1 176 1 320 2 349 1 9 1 296 1 134 1 116 1 67 1 16 1 119 1 166 1 95 1 339 1 47 1 96 1 23 1 213 3 265 1 24 1 80 2 50 1 
67 1 218 1 30 2 56 1 152 1 119 1 268 1 60 1 89 1 96 1 213 2 158 1 296 1 265 1 24 1 80 2 50 1 90 1 
67 1 55 1 56 1 152 1 119 1 268 1 60 1 166 1 176 1 212 1 320 2 96 1 213 2 158 1 296 1 265 1 80 2 50 1 
67 1 218 1 55 1 30 2 56 2 152 1 119 1 268 2 166 1 60 1 176 1 320 2 89 1 96 2 213 4 158 1 296 1 265 2 24 1 80 2 116 1 50 1 
67 1 218 1 30 2 290 1 56 1 152 1 119 1 268 1 60 1 89 1 96 1 213 2 296 1 265 1 24 1 80 2 50 1 90 1 
67 1 55 1 290 1 56 1 152 1 119 1 268 1 60 1 166 1 176 1 212 1 320 2 96 1 213 2 296 1 265 1 80 2 50 1 
67 1 218 1 55 1 30 2 290 1 56 2 152 1 119 1 268 2 166 1 60 1 176 1 320 2 89 1 96 2 213 4 296 1 265 2 24 1 80 2 116 1 50 1 
67 1 218 1 55 1 30 2 56 2 152 1 119 1 268 2 166 1 60 1 176 1 320 2 89 1 96 2 213 4 296 1 265 2 24 1 80 2 116 1 50 1 
217 1 30 1 152 1 60 1 88 1 244 1 245 1 157 1 320 1 348 1 247 1 296 1 134 1 249 1 300 1 67 1 204 1 16 1 119 1 167 1 123 1 357 1 213 2 148 1 80 2 25 1 104 1 50 1 
217 1 30 1 152 1 172 1 60 1 88 1 244 1 245 1 157 1 320 1 348 1 247 1 296 1 134 1 249 1 300 1 67 1 16 1 281 1 119 1 167 1 357 1 213 2 261 1 80 2 25 1 104 1 50 1 
218 1 30 2 55 1 56 2 152 1 268 2 60 1 176 1 89 1 320 2 296 1 116 1 67 1 119 1 166 1 339 1 96 2 213 4 24 1 265 2 80 2 50 1 
217 1 218 1 55 1 30 2 56 2 152 1 268 2 60 1 244 1 245 1 176 1 157 1 320 2 89 1 348 1 296 1 134 1 116 1 300 1 67 1 204 1 302 1 91 1 16 1 119 1 166 1 167 1 123 1 96 2 213 4 148 1 265 2 24 1 80 2 25 1 104 1 50 1 
218 1 55 1 30 2 56 1 152 1 32 1 268 1 60 1 320 1 89 1 349 1 9 1 296 1 134 1 116 1 67 1 16 1 119 1 92 1 166 1 95 1 339 1 96 1 23 1 213 3 265 1 24 1 80 2 50 1 
239 2 218 3 220 1 30 9 55 3 152 2 241 1 173 1 60 2 4 1 176 3 293 1 320 10 89 3 116 3 178 2 42 1 119 2 73 1 166 3 183 1 145 1 98 1 213 19 126 2 149 1 24 3 265 6 80 4 50 2 
239 1 28 2 218 3 220 1 30 14 55 2 152 3 173 2 60 3 4 1 176 2 293 2 89 2 320 12 116 3 178 2 42 1 119 3 166 2 183 2 98 2 213 26 126 4 342 1 100 1 265 4 149 1 189 1 24 3 80 6 101 1 236 1 50 3 266 1 
239 1 343 1 1 1 28 1 218 5 220 1 30 20 55 4 152 3 241 1 173 3 60 3 4 1 176 4 332 1 293 1 320 21 89 4 116 4 178 4 251 1 280 1 42 1 119 3 73 1 256 1 166 5 183 3 98 2 213 41 126 4 342 1 100 1 189 1 149 1 24 4 265 8 80 6 101 1 102 1 236 1 50 3 266 1 
239 1 343 1 1 1 28 2 218 5 220 1 30 20 55 3 152 4 241 1 173 3 60 4 4 1 176 4 332 1 293 1 320 18 89 3 116 4 178 4 251 1 280 1 42 1 119 4 73 1 256 1 166 4 183 3 98 2 213 38 126 4 342 1 100 1 189 1 149 1 24 4 265 7 80 8 101 1 102 1 236 1 50 4 266 1 
239 1 343 1 1 1 28 1 218 8 31 2 220 1 30 27 55 7 152 2 173 2 60 2 4 1 176 7 332 1 293 1 320 25 89 7 116 7 178 4 251 1 42 1 119 2 73 2 256 1 166 8 183 4 98 1 213 52 126 4 342 1 100 1 189 1 149 1 24 7 265 14 80 4 101 1 102 1 236 1 50 2 266 1 
168 1 352 1 186 1 291 1 310 1 341 1 147 1 327 1 311 1 269 1 
114 1 238 1 
351 1 352 1 291 1 310 1 147 1 311 1 248 1 325 1 269 1 
14 1 27 1 352 1 138 2 140 1 291 1 269 1 308 1 132 1 168 1 186 1 310 1 341 1 147 1 97 1 311 1 361 1 53 1 
14 1 27 1 352 1 138 2 140 1 291 1 269 1 308 1 132 1 168 1 186 1 310 1 341 1 147 1 97 1 311 1 361 1 53 1 
14 1 27 1 352 1 138 2 140 1 291 1 269 1 308 1 132 1 168 1 186 1 310 1 341 1 147 1 97 1 311 1 361 1 53 1 
287 1 229 1 242 1 
287 1 229 1 242 1 
184 1 235 1 
184 1 235 1 242 1 
338 1 161 1 
27 1 54 1 291 1 269 1 9 2 114 1 134 2 177 1 249 1 203 1 161 1 14 1 254 1 352 1 138 1 16 2 17 1 283 1 95 2 338 1 308 1 310 1 97 1 147 1 23 2 311 1 238 1 
287 1 229 1 
184 1 235 1 242 1 
217 2 30 1 152 1 221 1 196 1 60 1 244 1 88 1 245 1 157 1 320 1 348 2 296 1 134 2 297 1 117 1 300 2 67 1 253 1 16 2 119 1 46 1 339 1 356 1 357 1 23 2 213 2 48 2 80 2 104 1 50 1 
313 1 217 2 40 1 314 2 300 2 91 1 257 1 306 1 154 1 244 1 331 1 199 1 124 1 157 1 113 1 274 1 348 2 187 1 136 1 
0 1 313 1 217 1 40 1 314 2 300 1 306 1 154 1 244 1 199 1 124 1 157 1 113 1 274 1 348 1 187 1 136 1 
137 1 217 1 300 1 154 1 244 1 245 1 331 1 157 1 200 1 247 1 348 1 360 1 12 1 104 1 
313 1 217 1 40 1 314 2 300 1 257 1 306 1 154 1 244 1 331 1 199 1 124 1 157 1 113 1 274 1 348 1 187 1 136 1 
288 1 
111 1 76 1 10 1 72 1 188 1 44 1 361 1 
14 1 129 1 72 1 227 1 18 1 271 1 308 1 309 1 111 1 64 1 340 1 159 1 359 1 10 1 361 2 151 1 179 1 
55 2 106 2 192 2 57 1 329 1 244 2 245 2 157 3 111 2 7 6 64 4 10 9 159 4 247 1 66 2 116 2 202 2 160 2 14 5 68 2 300 3 301 1 336 2 303 1 70 6 72 8 205 1 162 2 18 5 166 2 167 2 308 5 258 1 309 3 125 1 76 1 340 12 24 2 26 2 312 2 82 1 129 6 217 3 218 2 223 1 36 2 348 3 179 4 91 1 142 3 188 1 361 8 151 4 104 8 
129 3 218 2 55 2 171 1 173 1 7 5 111 2 64 2 66 1 10 8 159 2 334 1 116 2 160 1 202 2 178 1 179 2 14 1 70 5 72 5 18 1 166 2 183 1 308 1 309 1 125 1 340 6 100 1 189 1 24 2 361 5 151 2 101 1 236 1 266 1 
1 1 218 2 332 1 110 1 64 1 66 1 159 1 10 2 349 1 9 1 134 1 277 1 202 2 321 1 251 1 179 1 14 1 225 1 16 1 72 2 166 1 207 1 95 1 308 1 23 1 214 1 150 1 151 1 
72 1 76 1 111 1 64 1 159 1 10 1 188 1 361 1 151 1 179 1 
129 5 218 2 55 2 72 5 70 5 166 2 7 5 66 1 340 10 10 5 24 2 116 2 361 5 312 1 202 2 
14 1 308 1 309 1 111 1 361 1 18 1 
217 4 57 1 244 1 245 1 292 1 63 1 157 1 64 2 159 2 348 4 247 2 10 2 160 2 12 1 179 1 14 3 180 1 300 4 72 2 206 1 205 2 18 4 211 1 308 3 309 2 125 2 360 1 151 2 104 1 
217 1 152 1 60 1 130 1 244 1 245 1 157 1 320 1 348 1 247 1 9 2 349 2 296 1 134 3 249 1 300 1 67 1 204 1 16 3 119 1 95 2 167 1 123 1 357 1 213 1 23 2 214 1 148 1 80 2 25 1 50 1 104 1 
129 2 70 2 72 2 256 1 125 1 7 2 111 2 64 1 340 4 159 1 10 1 361 4 160 1 151 1 179 1 
156 1 147 1 269 1 
156 1 147 1 269 1 
168 1 29 1 147 1 269 1 338 1 
156 1 147 1 269 1 
147 1 215 1 269 1 
147 1 215 1 269 1 
147 1 215 1 269 1 
147 1 269 1 
352 1 311 1 
343 1 1 1 28 1 218 1 30 4 152 2 119 2 256 1 166 1 60 2 176 2 332 1 320 4 89 1 213 8 265 3 80 4 50 2 102 1 251 1 
343 1 1 1 218 1 30 3 256 1 44 1 166 1 176 2 332 1 320 3 213 6 265 2 102 1 251 1 
218 1 55 1 30 2 152 1 119 1 3 1 166 1 60 1 176 1 320 2 89 1 213 4 265 2 24 1 80 2 116 1 50 1 
218 1 55 1 30 3 73 1 173 1 166 1 183 1 176 1 320 4 89 1 213 7 24 1 265 2 116 1 178 2 
343 1 1 1 28 2 218 3 30 11 55 2 31 1 152 2 60 2 175 1 176 5 332 2 89 4 320 12 116 2 178 2 251 2 119 2 73 1 256 1 166 3 231 1 183 2 213 23 265 9 24 2 80 4 102 1 50 2 
320 1 213 1 178 1 
30 1 213 1 183 1 
218 1 30 3 55 1 152 1 119 1 3 1 60 1 166 1 176 2 320 3 89 1 213 6 24 1 265 3 80 2 116 1 312 1 50 1 
218 2 30 6 55 2 152 1 173 1 60 1 176 1 89 1 320 6 116 2 178 1 119 1 166 2 183 1 213 12 149 1 189 1 24 2 265 2 100 1 80 2 101 1 50 1 236 1 266 1 
1 1 218 1 30 3 166 1 176 1 332 1 320 3 89 1 213 6 265 2 251 1 
343 1 28 1 30 1 152 1 119 1 60 1 231 1 176 1 332 1 89 1 320 2 213 3 265 2 80 2 102 1 50 1 251 1 
1 1 218 2 30 5 152 1 119 1 60 1 166 2 176 3 332 2 89 2 320 5 213 10 149 1 265 5 80 2 321 1 50 1 251 2 
218 1 30 2 152 1 119 1 60 1 89 1 213 2 149 1 24 1 265 1 80 2 50 1 
218 1 55 1 30 2 152 1 119 1 166 1 60 1 176 1 320 2 89 1 213 4 265 2 149 1 24 1 80 2 116 1 50 1 
28 1 30 1 152 3 241 1 119 3 60 3 231 1 176 1 332 1 320 2 89 1 213 3 149 1 265 2 80 6 50 3 251 1 
343 1 1 2 28 2 218 5 30 16 55 3 152 5 241 1 173 1 3 1 60 5 109 1 176 7 332 3 246 1 320 18 89 5 11 1 116 3 178 4 251 3 119 5 73 1 256 1 166 5 231 1 183 3 213 34 149 1 24 3 265 12 80 10 102 1 50 5 
343 1 1 1 218 1 30 4 152 1 173 1 60 1 176 2 332 1 320 4 178 1 251 1 119 1 256 1 166 1 183 1 213 8 149 1 265 2 80 2 50 1 102 1 266 1 
343 1 1 1 218 2 30 6 152 2 173 1 3 1 60 2 176 2 332 1 320 5 89 1 116 1 178 2 251 1 119 2 73 1 256 1 166 1 183 1 213 11 149 1 24 1 265 3 80 4 102 1 50 2 266 1 
343 1 1 1 28 1 218 3 30 9 55 2 152 3 173 1 3 1 60 3 176 3 332 1 89 1 320 10 116 2 178 1 251 1 119 3 256 1 166 3 183 1 213 19 149 1 189 1 24 2 265 4 100 1 80 6 101 1 102 1 236 1 50 3 266 1 
343 1 1 1 28 1 218 3 30 10 55 1 152 3 173 1 3 1 60 3 176 3 332 1 89 2 320 7 116 2 178 1 251 1 119 3 256 1 166 2 183 1 213 17 149 1 189 1 24 2 265 5 100 1 80 6 101 1 102 1 50 3 236 1 266 1 
343 1 1 1 218 1 30 4 152 1 173 1 60 1 176 2 332 1 320 4 178 1 251 1 119 1 256 1 166 1 183 1 213 8 149 1 265 2 80 2 50 1 102 1 266 1 
218 2 30 6 55 2 152 1 173 1 60 1 176 1 89 1 320 6 116 2 178 1 119 1 166 2 183 1 213 12 149 1 189 1 24 2 265 2 100 1 80 2 101 1 50 1 236 1 266 1 
343 1 1 1 28 2 218 3 30 10 55 1 152 4 173 1 3 1 60 4 176 3 332 1 89 2 320 8 116 2 178 1 251 1 119 4 256 1 166 2 183 1 213 18 100 1 149 1 189 1 24 2 265 5 80 8 101 1 102 1 236 1 50 4 266 1 
28 2 218 3 30 9 55 2 152 4 241 1 173 1 60 4 176 3 89 3 320 7 116 3 178 1 119 4 166 2 183 1 213 16 100 1 149 1 189 1 24 3 265 6 80 8 101 1 236 1 50 4 266 1 
343 1 1 1 218 1 30 3 166 1 176 3 332 3 320 4 89 3 213 7 265 6 102 2 251 3 
343 1 1 1 28 2 218 3 30 10 55 1 152 4 241 1 173 1 60 4 176 3 332 1 89 1 320 8 116 2 178 1 251 1 119 4 256 1 166 2 183 1 213 18 100 1 149 1 189 1 24 2 265 4 80 8 101 1 102 1 236 1 50 4 266 1 
198 1 
198 1 273 1 77 1 228 1 43 1 182 1 
245 1 217 1 300 1 157 1 348 1 247 1 360 1 44 1 12 1 104 1 244 1 
217 1 300 1 16 2 95 1 167 1 244 1 245 1 324 1 123 1 157 1 9 1 23 1 247 1 348 1 134 2 249 1 25 1 104 1 
217 1 300 1 16 1 205 1 305 1 95 1 167 1 244 1 245 1 324 1 123 1 157 1 9 1 23 1 348 1 134 1 277 1 25 1 279 1 104 1 
217 1 300 1 16 1 205 1 305 1 95 1 167 1 244 1 245 1 324 1 157 1 9 1 23 1 348 1 261 1 134 1 277 1 25 1 279 1 104 1 
217 1 192 1 329 1 244 1 223 1 245 1 157 1 111 1 9 1 349 1 348 1 134 1 277 1 14 2 300 1 255 1 225 1 16 1 142 1 205 1 18 1 95 1 207 1 167 1 308 2 234 1 23 1 214 1 361 1 150 1 26 1 104 4 
217 1 192 1 329 1 244 1 223 1 245 1 157 1 111 1 9 1 349 1 348 1 134 1 277 1 14 2 300 1 336 1 225 1 16 1 142 1 205 1 18 1 95 1 207 1 167 1 308 2 23 1 214 1 361 1 150 1 26 1 104 4 
217 1 300 1 157 1 348 1 244 1 144 1 
39 1 217 6 300 7 91 1 303 1 181 1 196 1 165 1 222 1 144 1 167 1 244 2 245 2 157 3 274 1 247 2 348 7 48 1 264 1 104 3 250 1 
343 1 217 1 1 1 218 1 30 3 240 1 56 1 152 2 268 1 60 2 244 1 245 1 176 2 332 1 157 1 320 3 9 1 348 1 296 2 134 2 249 2 251 1 67 2 253 1 300 1 204 1 302 1 16 2 91 1 119 2 256 1 166 1 95 1 167 1 324 1 339 1 123 1 96 1 213 6 23 1 148 1 265 2 80 4 25 1 102 1 104 1 50 2 
217 1 106 1 192 1 57 1 111 1 36 1 64 2 10 1 348 1 247 1 159 2 179 2 14 3 300 1 68 1 336 1 72 1 142 1 17 1 18 2 308 3 309 1 76 1 188 1 361 1 26 1 151 2 104 2 
217 2 300 2 192 1 91 1 303 1 144 1 167 1 244 1 245 1 157 2 348 2 82 1 104 2 
217 4 344 1 300 4 2 1 91 1 244 1 245 1 157 1 247 1 348 4 360 1 12 1 104 1 
217 2 300 2 205 1 181 1 167 1 244 1 245 1 157 2 112 1 358 1 348 2 262 1 104 1 250 1 
217 1 314 1 300 1 157 1 113 1 348 1 247 1 306 1 136 1 244 1 
217 2 117 1 300 2 91 1 196 1 244 1 245 1 157 1 348 2 274 1 104 1 
39 1 217 4 344 1 300 5 91 1 205 1 196 1 222 1 244 2 245 2 157 2 247 1 348 5 360 1 12 1 104 3 
39 1 217 4 344 1 300 5 91 1 205 1 196 1 244 2 245 2 157 2 247 1 348 5 360 1 99 1 12 1 104 3 
217 1 300 1 16 2 95 1 167 1 244 1 245 1 324 1 157 1 9 1 23 1 247 1 348 1 261 1 134 2 249 1 25 1 104 1 
217 1 300 1 303 1 181 1 205 1 167 1 244 1 245 1 157 2 348 1 264 1 104 1 250 1 
252 1 347 1 328 1 249 1 107 1 
14 1 252 1 322 1 17 1 328 1 305 1 107 1 209 1 210 1 308 1 347 1 263 1 277 1 279 1 237 1 
252 1 16 1 328 1 221 1 46 1 347 1 23 1 297 1 134 1 
347 1 210 1 237 1 
335 1 191 1 44 1 299 1 
285 1 335 1 191 1 15 1 133 1 299 1 108 1 
8 1 22 1 133 1 
335 1 191 1 15 1 108 3 61 2 45 1 285 1 286 1 133 3 37 1 135 1 299 1 
285 1 335 1 191 1 146 1 15 1 118 1 133 2 299 1 108 2 
285 1 314 1 199 1 191 1 15 1 133 1 135 1 224 1 306 1 121 1 108 1 
285 1 335 1 191 1 15 1 133 1 135 1 108 1 
285 1 335 2 15 1 133 1 135 1 299 1 108 1 
335 1 219 1 191 1 15 2 197 1 108 2 285 2 133 2 135 1 298 1 
285 1 233 1 335 1 191 2 333 1 15 1 118 2 133 3 33 1 135 1 299 1 121 1 108 3 
314 2 335 1 191 1 15 1 118 1 87 1 108 2 306 1 285 1 124 1 199 1 133 2 135 1 299 1 136 1 
285 2 319 1 335 1 191 2 333 1 146 1 15 2 118 2 133 4 135 1 299 1 121 1 108 4 
285 1 335 1 191 1 15 1 133 1 135 1 299 1 108 1 
335 2 191 3 15 1 118 2 284 1 61 1 108 4 121 1 45 1 285 1 333 1 286 1 133 4 299 2 
285 1 335 1 191 1 15 1 194 1 118 1 58 1 133 2 135 1 299 1 108 2 52 1 
85 1 335 1 191 1 15 1 108 3 61 2 45 2 285 1 286 1 133 3 135 1 299 1 
86 1 191 2 164 2 51 1 
285 1 15 1 133 1 135 1 208 1 108 1 
285 1 233 1 335 1 191 1 15 1 118 1 133 2 135 1 299 1 108 2 
316 1 
285 1 335 1 191 1 15 1 133 1 135 1 299 1 108 1 
335 1 191 1 15 1 118 1 108 3 61 1 285 1 233 1 133 3 135 1 299 1 
191 1 333 1 284 1 121 1 
335 1 191 1 

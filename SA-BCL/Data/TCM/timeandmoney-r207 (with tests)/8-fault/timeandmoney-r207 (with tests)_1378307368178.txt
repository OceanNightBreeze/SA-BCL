#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 304 204 86 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.IllegalArgumentException 304 238 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 287 255 361 223 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.IllegalArgumentException 304 204 86 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.IllegalArgumentException 304 238 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.IllegalArgumentException 304 204 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.IllegalArgumentException 304 208 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 2841 | return null
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4987 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4492 | + -> *
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4918 | > -> <
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3455 | < -> >
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1474 | return null
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V | CONDITION | 6304 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> 1
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
2 1 274 5 29 9 77 2 151 2 79 1 104 1 170 1 153 1 186 3 7 1 35 1 331 2 140 1 363 1 211 9 174 1 16 2 365 6 284 2 161 1 93 1 163 4 22 2 146 2 200 1 295 1 50 1 
2 1 274 5 29 9 77 2 151 2 79 1 104 1 170 1 153 1 186 3 7 1 35 1 331 2 140 1 363 1 211 9 174 1 16 2 365 6 284 2 161 1 93 1 163 4 22 2 200 1 295 1 146 2 50 1 
2 1 274 6 29 10 77 2 151 2 79 1 104 1 170 1 153 1 186 4 7 1 35 1 331 2 140 1 363 1 211 10 174 1 16 2 365 7 284 2 161 1 93 1 163 5 22 2 200 1 295 1 146 2 50 1 
2 1 274 4 29 7 77 2 151 2 79 1 104 1 170 1 153 1 186 2 7 1 35 1 331 2 140 1 211 7 174 1 16 2 365 4 284 2 161 1 93 1 163 3 22 2 200 1 295 1 146 1 50 1 
16 1 2 1 365 3 274 3 29 4 151 1 77 1 284 1 79 1 161 1 163 2 186 1 7 1 22 1 140 1 363 1 211 4 146 2 
16 1 2 1 274 1 29 2 77 1 151 1 161 1 196 1 7 1 188 1 22 1 331 1 236 1 211 2 200 1 50 1 
16 2 2 1 365 1 274 2 29 3 77 2 161 1 163 1 186 1 7 1 35 1 331 1 211 3 
2 1 274 5 29 9 77 2 151 1 79 1 229 1 153 1 186 3 7 1 35 1 331 1 140 1 211 9 363 1 174 1 16 2 365 7 190 1 284 1 161 1 163 4 22 1 146 2 
2 1 274 5 29 9 77 2 151 1 79 1 229 1 153 1 186 3 7 1 35 1 331 1 140 1 211 9 363 1 174 1 16 2 365 7 190 1 284 1 161 1 163 4 22 1 146 2 
231 1 155 1 369 1 
216 1 6 2 155 1 
56 1 209 2 158 2 191 2 84 1 122 2 147 2 264 2 
355 1 183 1 73 1 273 2 78 1 358 1 135 1 34 1 301 1 361 1 56 1 209 2 84 1 235 1 37 1 255 2 173 1 158 3 191 2 142 1 261 1 122 2 372 1 244 1 218 1 315 1 264 2 63 1 64 1 145 1 288 1 287 2 127 1 349 1 321 2 147 3 26 2 
209 1 158 1 191 1 84 1 89 1 122 1 334 1 147 1 92 1 264 1 
15 1 158 1 122 1 369 1 90 1 92 1 124 1 330 1 164 1 248 1 212 1 155 1 147 1 214 1 
15 1 191 1 158 1 122 1 369 1 90 1 92 1 264 1 124 2 209 1 248 2 212 1 155 1 147 1 214 1 
117 1 124 1 248 1 300 1 254 1 
300 1 254 1 209 1 234 1 84 1 155 1 334 1 307 1 191 1 158 1 89 1 122 1 369 1 92 1 264 1 124 2 248 2 25 1 147 1 
124 1 248 1 300 1 
191 1 158 1 89 1 122 1 254 1 92 1 264 1 124 1 209 1 84 1 248 1 25 1 334 1 147 1 
155 1 
300 1 254 1 209 1 234 1 84 1 155 1 334 1 191 1 158 1 89 1 122 1 369 1 92 1 264 1 124 2 248 2 165 1 25 1 147 1 
252 1 51 1 3 1 184 2 253 4 169 2 136 2 300 2 254 2 206 5 230 1 209 1 106 2 84 1 234 1 155 2 334 1 279 1 17 2 158 1 191 1 160 2 89 1 122 1 44 1 369 2 262 1 92 1 220 1 264 1 124 5 67 1 222 1 198 1 248 5 25 1 147 1 352 1 
231 1 56 1 
356 1 158 2 191 1 122 2 62 1 264 1 56 2 209 1 147 2 
225 1 268 1 335 1 
273 1 158 1 358 1 261 1 361 1 64 1 145 1 301 1 56 1 287 1 235 1 349 1 95 1 255 1 173 1 147 1 
273 1 158 2 261 1 358 1 122 1 162 1 264 1 301 1 145 1 64 1 361 1 287 1 209 1 224 1 235 1 349 1 173 1 255 1 147 2 335 1 
119 1 158 5 191 1 122 5 80 1 162 2 264 4 62 1 56 1 209 4 224 1 164 1 12 1 147 5 
347 1 209 2 158 2 89 1 122 2 147 2 92 1 264 2 
56 1 209 3 191 1 158 3 122 3 147 3 162 1 264 3 
209 1 158 1 89 1 122 1 147 1 92 1 264 1 
356 1 209 1 158 1 191 1 122 1 147 1 92 1 264 1 62 1 
183 1 73 1 273 1 358 1 34 1 301 1 207 1 361 1 56 1 209 3 84 1 235 1 212 1 37 1 173 1 255 1 214 1 15 1 310 1 191 2 158 4 261 1 122 3 90 1 372 1 244 1 315 1 92 1 62 1 264 3 162 1 63 1 145 1 64 1 288 1 124 1 287 1 224 1 127 1 349 1 248 1 321 1 147 4 26 2 
56 1 209 1 158 2 164 1 122 2 147 2 80 1 264 1 162 1 
15 1 191 1 158 3 122 3 90 1 92 1 62 1 162 2 264 3 207 1 124 1 209 3 224 1 109 1 248 1 212 1 155 1 147 3 214 1 
191 1 158 2 122 2 162 1 62 1 264 2 209 2 268 1 147 2 335 1 
273 1 158 1 358 1 261 1 361 1 64 1 145 1 301 1 56 1 287 1 349 1 235 1 255 1 173 1 147 1 
72 1 273 1 158 1 141 1 261 1 361 1 145 1 301 1 56 1 287 1 349 1 235 1 255 1 173 1 147 1 
183 2 167 1 225 2 73 1 78 2 185 1 169 1 136 1 113 1 37 1 335 2 258 1 60 1 372 1 312 1 314 1 63 1 288 1 318 1 127 1 321 4 268 2 26 2 131 1 
209 1 347 1 158 1 122 1 90 1 147 1 92 1 264 1 
192 1 48 1 
192 1 48 1 
294 1 322 1 
294 1 322 1 
294 1 322 1 
232 1 192 1 48 1 
97 1 192 1 48 1 
192 2 24 1 294 1 342 1 48 2 322 1 
232 1 192 1 48 1 
232 1 192 1 48 1 
192 1 13 1 48 1 
192 1 13 1 48 1 
192 1 13 1 48 1 
97 1 0 1 298 1 168 1 31 1 137 1 56 1 209 2 187 1 85 1 257 1 239 1 158 2 192 1 122 2 264 2 124 1 21 1 247 1 47 1 267 1 248 1 147 2 48 1 
0 2 259 1 192 2 43 1 342 1 263 1 137 3 221 1 124 2 346 1 247 2 248 2 155 1 85 1 256 2 38 1 48 2 239 2 257 2 
22 1 151 1 284 1 
22 1 151 1 236 1 
328 1 133 1 22 3 236 1 284 2 219 1 
328 1 133 1 22 2 276 1 236 1 284 1 
328 1 133 2 22 2 236 1 284 1 
168 1 6 3 184 1 169 1 102 1 253 3 136 1 300 1 254 4 152 1 206 2 81 1 230 1 329 2 106 1 187 1 139 2 234 1 10 1 113 1 155 2 14 1 17 1 309 2 216 1 369 1 312 1 316 1 124 5 21 1 248 5 27 1 
202 1 3 1 325 1 6 9 184 2 169 3 102 2 253 8 136 3 300 6 254 7 152 1 206 6 230 1 106 2 139 6 234 1 332 1 113 3 155 5 14 3 117 5 18 5 17 2 309 6 282 1 216 3 369 1 312 3 316 2 124 9 290 1 21 4 248 9 96 1 
3 1 6 4 184 1 169 1 102 1 253 3 254 2 136 1 81 1 206 2 329 1 106 1 139 2 113 1 155 3 14 1 17 1 309 2 216 2 369 1 312 1 316 1 124 3 21 1 248 3 27 1 
202 1 3 1 325 1 6 7 184 1 169 2 102 1 253 5 254 3 136 2 81 1 206 4 329 2 106 1 139 4 332 1 113 2 155 4 14 2 17 1 309 4 216 3 369 1 312 2 316 1 124 4 21 2 248 4 27 1 
231 1 235 1 100 1 
281 1 235 1 
76 1 
301 1 235 1 349 1 
250 1 235 1 
301 1 235 1 
301 1 235 3 349 1 100 2 33 1 49 1 
183 3 118 1 78 4 185 2 169 1 136 1 125 1 222 1 303 2 198 1 154 1 172 1 333 1 321 7 237 1 352 1 258 3 
183 3 118 1 78 4 185 2 169 1 136 1 125 1 222 1 303 2 198 1 154 1 172 1 333 1 321 7 237 1 352 1 258 3 
183 3 118 1 78 4 185 2 169 1 136 1 125 1 222 1 303 2 198 1 154 1 172 1 115 1 333 1 321 7 237 1 352 1 258 3 
183 15 1 1 73 1 78 16 185 5 169 4 136 4 9 1 303 3 58 1 172 1 113 3 154 5 37 1 333 2 237 2 14 3 258 10 308 1 118 1 336 1 121 1 312 3 288 1 125 1 222 2 46 4 127 1 198 1 199 1 321 31 71 3 352 2 26 2 
118 1 183 4 73 2 78 5 185 3 169 1 136 1 66 1 288 2 222 1 9 1 303 2 127 2 198 1 172 1 154 1 37 2 333 1 321 9 237 1 352 1 26 4 296 1 258 4 
273 1 2 1 274 1 29 2 28 1 151 1 77 1 299 1 277 1 205 1 7 1 331 1 236 1 114 1 211 2 255 1 173 1 16 1 365 1 159 1 284 1 261 1 370 1 371 1 343 1 219 1 161 1 287 1 45 1 22 2 
273 1 274 1 29 3 28 1 151 1 77 1 203 1 299 1 277 1 360 1 7 1 331 1 236 1 114 1 211 3 255 1 173 1 156 1 16 1 365 2 159 1 284 1 261 1 371 1 219 1 343 1 161 1 287 1 45 1 22 2 
273 1 274 1 29 2 28 1 151 1 203 1 299 1 277 1 360 1 7 1 331 1 236 1 114 1 211 2 255 1 173 1 365 2 159 1 261 1 284 1 343 1 219 1 161 1 287 1 22 2 
273 1 29 1 77 1 277 2 361 1 301 1 331 2 235 1 110 1 114 2 211 1 255 1 173 1 156 1 280 1 16 1 242 1 159 2 261 1 283 1 287 1 94 1 319 1 
273 1 2 1 29 1 28 1 151 1 77 1 203 1 299 1 277 1 331 1 236 1 114 1 211 1 255 1 173 1 16 1 159 1 284 1 261 1 370 1 371 1 343 1 219 1 287 1 45 1 22 2 
103 1 
273 2 275 1 5 1 184 1 253 1 300 2 206 1 361 2 230 1 301 2 106 1 234 1 235 2 173 2 255 2 280 1 17 1 260 1 261 3 316 1 344 1 287 2 124 2 94 1 69 1 223 1 349 1 248 2 249 1 
251 1 52 1 324 1 300 2 330 1 234 1 212 1 214 1 39 2 15 1 158 1 366 1 122 1 90 1 92 1 124 3 265 1 292 1 164 1 248 3 165 1 147 1 
15 1 251 1 52 1 158 1 366 1 122 1 369 1 90 1 300 1 92 1 124 3 246 1 265 1 330 1 234 1 292 1 248 3 164 1 165 1 212 1 155 1 147 1 214 1 39 3 
251 1 52 1 324 1 300 2 330 1 234 1 212 1 214 1 39 3 15 1 241 1 158 1 366 1 122 1 90 1 92 1 124 3 265 1 246 1 292 1 164 1 248 3 165 1 147 1 
98 1 324 2 52 1 227 1 228 1 184 1 230 1 106 1 330 1 234 1 155 1 334 1 15 1 338 1 241 2 17 1 158 2 191 1 122 2 124 3 292 1 248 3 164 1 165 1 70 1 25 1 251 1 253 1 300 3 206 1 209 1 84 1 212 1 214 1 39 2 89 1 366 1 369 1 90 1 92 2 264 1 265 1 147 2 
148 2 52 1 324 2 6 2 184 1 230 1 106 1 330 1 234 2 155 1 334 1 15 1 17 1 241 2 191 1 158 2 122 2 195 2 124 4 246 2 292 1 164 1 248 4 25 1 70 1 354 2 251 1 253 1 300 4 206 1 209 1 82 1 84 1 305 1 212 1 214 1 39 4 216 2 89 1 366 1 369 1 90 1 92 2 264 1 144 2 265 1 147 2 
98 1 251 1 52 1 184 1 253 1 206 1 230 1 209 1 106 1 330 1 84 1 212 1 155 1 334 1 214 1 39 2 15 1 338 1 17 1 191 1 158 2 89 1 366 1 122 2 369 1 90 1 92 2 264 1 124 2 265 1 292 1 164 1 248 2 25 1 70 1 147 2 
98 1 251 1 52 1 184 1 253 1 206 1 230 1 209 1 106 1 330 1 84 1 212 1 155 1 334 1 214 1 39 2 15 1 338 1 17 1 191 1 158 2 89 1 366 1 122 2 369 1 90 1 92 2 264 1 124 2 265 1 292 1 164 1 248 2 25 1 70 1 147 2 
148 2 52 1 324 2 6 2 184 1 54 2 230 1 106 1 107 2 330 1 234 2 155 1 334 1 15 1 17 1 241 2 191 1 158 2 122 2 195 2 124 4 68 1 246 2 292 1 128 1 248 4 164 1 25 1 251 1 253 1 300 4 206 1 209 1 84 1 305 1 212 1 214 1 39 4 89 1 366 1 369 1 90 1 92 2 264 1 180 1 265 1 147 2 182 1 
98 1 324 1 52 1 228 1 184 1 230 1 106 1 330 1 155 1 334 1 15 1 338 1 241 1 17 1 158 2 191 1 122 2 124 2 246 1 292 1 248 2 164 1 70 1 25 1 251 1 253 1 300 1 206 1 209 1 84 1 212 1 214 1 39 3 366 1 89 1 369 1 90 1 92 2 264 1 265 1 147 2 
98 1 324 1 52 1 228 1 184 1 230 1 106 1 330 1 155 1 334 1 15 1 338 1 241 1 17 1 158 2 191 1 122 2 124 2 246 1 292 1 248 2 164 1 70 1 25 1 251 1 253 1 300 1 206 1 209 1 84 1 212 1 214 1 39 3 366 1 89 1 369 1 90 1 92 2 264 1 265 1 147 2 
148 2 251 1 324 1 52 1 6 2 184 1 253 1 300 2 54 1 206 1 230 1 82 1 107 2 106 1 330 1 234 1 305 1 212 1 155 1 214 1 39 3 15 1 241 1 17 1 158 1 366 1 122 1 369 1 90 1 195 2 92 1 124 3 246 1 265 1 292 1 248 3 164 1 147 1 182 1 
183 3 225 1 73 1 78 3 185 2 169 1 136 1 231 1 56 2 303 1 172 1 37 1 335 1 258 2 118 1 372 1 63 1 288 1 222 1 318 1 127 1 198 1 321 6 268 1 352 1 26 2 
355 1 183 6 225 11 73 2 1 1 78 8 185 1 169 1 136 2 34 1 56 1 154 1 113 2 37 2 14 2 258 2 335 11 40 1 121 1 194 1 372 2 312 1 63 1 288 2 46 3 293 1 23 1 127 2 129 1 321 14 71 3 268 4 26 4 
183 1 355 1 323 1 273 1 73 1 358 1 78 1 34 1 301 1 361 1 56 1 209 1 235 1 173 1 255 1 37 1 158 2 175 1 261 1 122 1 194 1 372 1 264 1 162 1 145 1 64 1 63 1 287 1 288 1 373 1 224 1 349 1 127 1 95 1 321 2 268 1 147 2 26 2 
183 10 225 7 273 3 226 2 185 4 56 2 8 2 108 1 235 2 111 1 113 2 154 4 14 2 335 7 118 1 158 3 122 1 194 1 162 1 63 3 64 2 287 3 288 3 127 3 349 2 197 2 198 1 352 1 26 6 355 1 73 3 203 1 358 2 78 10 32 2 169 3 136 3 34 1 361 1 301 2 209 1 303 1 172 1 255 3 37 3 173 2 258 8 41 1 261 2 372 3 312 2 315 2 264 1 145 2 222 1 224 1 321 20 147 3 268 7 
355 1 183 1 273 4 73 2 275 1 204 1 78 1 205 1 34 1 361 2 301 3 209 1 302 1 304 1 235 3 173 2 255 4 37 2 280 1 86 1 158 1 261 3 122 1 372 2 123 1 218 1 264 1 162 1 344 1 63 2 287 4 288 2 94 1 69 1 318 1 349 1 127 2 249 1 321 2 147 1 26 4 
183 2 225 1 73 1 78 1 185 1 169 1 136 1 209 1 113 1 37 1 14 1 258 1 335 1 191 1 158 1 368 1 122 1 194 1 372 1 312 1 62 1 264 1 63 1 288 1 127 1 321 3 268 1 147 1 26 2 
225 1 73 1 60 1 78 2 372 1 136 1 63 1 288 1 318 1 127 1 154 1 113 1 37 1 321 2 268 1 26 2 258 1 335 1 
183 2 225 1 73 1 185 1 372 1 169 1 314 1 312 1 63 1 288 1 318 1 127 1 37 1 321 2 268 1 26 2 258 1 335 1 
183 2 225 2 73 1 78 2 185 1 169 1 136 1 113 1 154 1 37 1 14 1 335 2 258 2 372 1 312 1 63 1 288 1 318 1 127 1 321 4 268 2 26 2 
225 1 73 1 60 1 78 2 372 1 136 1 63 1 288 1 302 1 127 1 154 1 113 1 37 1 321 2 268 1 26 2 258 1 335 1 
183 2 225 1 73 1 185 1 372 1 169 1 314 1 312 1 63 1 288 1 302 1 127 1 37 1 321 2 268 1 26 2 258 1 335 1 
183 2 225 2 73 1 78 2 185 1 169 1 136 1 302 1 113 1 154 1 37 1 14 1 335 2 258 2 372 1 312 1 63 1 288 1 127 1 321 4 268 2 26 2 
183 2 225 2 73 1 78 2 185 1 169 1 136 1 113 1 154 1 37 1 14 1 335 2 258 2 372 1 312 1 63 1 288 1 127 1 321 4 268 2 26 2 
355 1 183 1 273 1 73 1 78 1 358 1 34 1 301 1 361 1 56 1 235 1 173 1 255 1 37 1 158 1 261 1 372 1 315 1 145 1 64 1 63 1 287 1 288 1 349 1 127 1 321 2 147 1 26 2 
355 1 183 1 72 1 273 1 73 1 78 1 34 1 301 1 361 1 56 1 171 1 235 1 173 1 255 1 37 1 158 1 141 1 261 1 372 1 145 1 63 1 287 1 288 1 349 1 127 1 321 2 147 1 26 2 
183 2 225 2 73 1 78 2 185 1 169 1 136 1 113 1 154 1 37 1 14 1 335 2 258 2 194 1 372 1 312 1 63 1 288 1 127 1 321 4 268 2 26 2 
183 2 225 2 273 1 73 1 78 2 358 1 185 1 169 1 136 1 205 1 301 1 8 1 235 1 154 1 113 1 173 1 255 1 37 1 14 1 258 2 335 2 158 1 261 1 372 1 312 1 315 1 145 1 64 1 63 1 287 1 288 1 349 1 127 1 321 4 268 2 147 1 26 2 
183 1 225 1 73 1 78 2 169 1 136 1 209 1 154 1 113 1 37 1 14 1 258 1 335 1 191 1 158 1 88 1 122 1 194 1 372 1 312 1 62 1 264 1 63 1 288 1 127 1 321 3 147 1 268 1 26 2 
183 21 1 1 185 4 101 1 9 1 154 4 113 4 14 4 118 1 337 4 121 3 66 1 288 3 127 3 198 1 130 1 71 3 26 6 352 1 132 1 201 1 73 3 78 20 169 5 136 5 83 1 303 1 36 1 172 1 37 3 258 8 87 1 367 1 311 2 312 4 178 1 222 1 46 4 181 1 374 1 320 1 321 41 270 1 
201 1 183 18 73 4 1 1 78 20 101 1 185 4 169 4 136 5 9 2 83 1 36 1 303 1 172 1 113 4 154 3 37 4 14 4 258 7 118 1 337 4 87 1 121 3 367 1 311 2 312 3 178 1 288 4 66 1 222 1 46 4 181 1 127 4 374 1 198 1 320 1 130 1 321 38 71 3 352 1 26 8 132 1 270 1 
183 25 73 2 1 2 78 27 101 1 185 7 169 8 136 8 9 1 83 1 303 1 172 1 113 7 154 7 37 2 14 7 258 14 118 1 337 4 87 1 121 2 367 1 311 1 312 7 178 1 288 2 66 1 222 1 46 4 181 1 293 2 127 2 374 1 198 1 320 1 130 1 321 52 71 4 352 1 26 4 132 1 270 1 
201 1 183 10 73 2 1 1 78 9 185 3 169 3 136 3 83 1 113 3 154 3 37 2 59 1 14 3 258 6 337 2 87 2 121 1 311 1 312 3 288 2 66 1 46 2 127 2 374 1 321 19 71 1 26 4 132 1 270 1 
183 12 73 3 78 14 101 1 185 2 169 2 136 3 9 2 83 2 154 2 113 3 37 3 14 3 258 4 337 4 87 1 121 2 367 1 311 2 312 2 178 1 288 3 66 1 46 2 181 1 127 3 374 1 320 1 130 1 321 26 71 2 26 6 132 1 270 1 
0 1 259 1 247 1 149 1 192 1 43 1 342 1 48 1 257 1 239 1 
97 1 47 1 
0 1 75 1 247 1 192 1 285 1 166 1 48 1 257 1 239 1 
232 1 269 1 
126 1 24 1 13 1 
0 1 259 1 192 1 43 1 342 1 137 2 221 1 124 1 346 1 247 1 248 1 155 1 85 1 256 1 38 1 48 1 239 1 257 1 
0 1 259 1 192 1 43 1 342 1 137 2 221 1 124 1 346 1 247 1 248 1 155 1 85 1 256 1 38 1 48 1 239 1 257 1 
0 1 259 1 192 1 43 1 342 1 137 2 221 1 124 1 346 1 247 1 248 1 155 1 85 1 256 1 38 1 48 1 239 1 257 1 
232 1 24 1 269 1 
232 1 24 1 269 1 
126 1 13 1 
126 1 24 1 13 1 
298 1 31 1 
97 1 0 1 298 1 168 1 31 1 254 1 137 1 56 1 209 2 187 1 112 1 256 1 257 1 239 1 158 2 192 1 122 2 264 2 346 1 124 1 21 1 247 1 47 1 267 1 248 1 147 2 48 1 
355 1 183 1 273 2 73 1 275 1 78 1 359 1 55 1 34 1 301 2 304 1 235 2 173 1 37 1 255 2 238 1 157 1 158 2 261 2 122 2 194 1 372 1 123 1 218 2 91 1 344 1 63 1 287 2 288 1 69 1 349 1 127 1 249 1 321 2 147 2 26 2 
273 2 271 1 28 1 151 1 159 1 42 1 284 1 261 1 203 1 371 1 219 1 205 1 343 1 287 2 22 2 236 1 173 1 255 2 116 1 
273 1 28 1 151 1 159 1 284 1 203 1 261 1 371 1 219 1 343 1 317 1 287 1 22 2 236 1 255 1 173 1 116 1 
273 1 271 1 159 1 261 1 283 1 301 1 361 1 287 1 94 1 235 1 350 1 173 1 255 1 280 1 
273 1 271 1 28 1 151 1 159 1 42 1 284 1 261 1 203 1 371 1 219 1 343 1 287 1 22 2 236 1 255 1 173 1 116 1 
306 1 
231 1 252 1 155 1 369 1 253 1 279 1 206 1 
354 1 6 1 184 1 253 1 300 1 206 1 230 1 209 1 106 1 84 1 234 1 155 1 334 1 17 1 158 1 191 1 216 1 89 1 122 1 369 1 92 1 264 1 144 1 124 1 248 1 25 1 70 1 147 1 
273 1 226 1 6 6 184 2 100 1 230 2 106 2 189 1 234 1 278 1 235 4 11 1 113 1 155 3 14 1 281 2 17 2 120 1 160 1 287 1 124 2 349 1 248 2 353 1 253 4 169 1 33 1 300 2 136 1 206 3 301 1 361 1 139 3 173 1 255 1 214 1 309 3 216 3 261 2 312 1 316 1 143 1 375 1 
6 6 184 2 101 1 230 2 57 1 106 2 234 1 113 2 155 5 334 1 14 2 17 2 158 1 191 1 121 1 160 2 122 1 124 1 248 1 25 1 130 1 71 1 169 2 253 8 136 2 300 1 206 5 209 1 139 5 84 1 260 1 309 5 216 3 89 1 367 1 369 2 312 2 313 1 92 1 178 1 316 1 264 1 220 1 46 1 320 1 147 1 
184 1 169 1 253 2 136 2 206 2 230 1 106 1 209 1 84 1 334 1 338 1 17 1 158 1 191 1 160 2 89 1 122 1 262 1 92 1 220 1 264 1 124 1 222 1 248 1 198 1 25 1 147 1 352 1 
17 1 252 1 184 1 369 1 253 1 206 1 230 1 106 1 155 1 279 1 
226 1 309 5 160 2 216 5 6 10 169 2 253 5 136 2 312 2 220 1 206 5 139 5 113 2 155 5 14 2 
158 1 191 1 89 1 122 1 369 1 300 1 92 1 264 1 124 1 209 1 84 1 234 1 248 1 25 1 155 1 334 1 147 1 
273 2 17 1 260 1 5 1 30 1 184 1 253 1 300 2 316 1 206 1 361 2 230 1 124 1 287 2 106 1 234 1 223 1 248 1 255 2 
183 1 273 1 73 1 358 1 34 1 361 1 301 1 56 1 209 2 84 1 235 1 37 1 255 1 173 1 158 3 191 2 261 1 122 2 244 1 372 1 315 1 264 2 64 1 145 1 63 1 288 1 287 1 127 1 349 1 321 1 147 3 26 2 
17 1 309 2 260 1 216 2 6 4 184 1 369 2 253 1 316 1 206 2 230 1 106 1 139 2 303 1 155 4 
0 1 364 1 257 1 
65 1 0 1 43 1 31 1 257 1 
0 1 364 1 257 1 
0 1 364 1 257 1 
0 1 289 1 257 1 
0 1 289 1 257 1 
0 1 289 1 257 1 
0 1 257 1 
192 1 48 1 
183 4 73 1 78 4 185 2 169 1 136 1 303 1 172 1 37 1 258 2 118 1 121 1 288 1 66 1 222 1 46 1 127 1 198 1 320 1 321 8 71 1 26 2 352 1 
183 5 73 2 1 1 150 1 78 6 185 2 169 1 136 2 303 1 172 1 113 1 154 1 37 2 14 1 258 3 118 1 121 1 66 1 288 2 222 1 46 2 127 2 198 1 320 1 321 11 71 1 352 1 26 4 
183 10 73 3 150 1 78 9 185 3 101 1 169 3 136 3 9 1 303 1 172 1 154 1 113 2 37 3 14 2 258 4 118 1 121 1 367 1 312 2 178 1 288 3 66 1 222 1 46 1 127 3 198 1 320 1 130 1 321 19 71 1 352 1 26 6 
183 7 73 3 150 1 78 10 185 3 101 1 169 2 136 3 9 1 303 1 172 1 154 2 113 2 37 3 14 2 258 5 118 1 121 1 367 1 312 1 178 1 288 3 66 1 222 1 46 1 127 3 198 1 320 1 321 17 130 1 71 1 352 1 26 6 
183 4 73 1 78 4 185 2 169 1 136 1 303 1 172 1 37 1 258 2 118 1 121 1 288 1 66 1 222 1 46 1 127 1 198 1 320 1 321 8 71 1 26 2 352 1 
183 6 73 1 78 6 185 1 101 1 169 2 136 2 154 1 113 2 37 1 14 2 258 2 121 1 367 1 312 2 178 1 288 1 66 1 46 1 127 1 320 1 321 12 130 1 71 1 26 2 
183 8 73 4 150 1 78 10 101 1 185 3 169 2 136 3 9 2 303 1 172 1 154 2 113 2 37 4 14 2 258 5 118 1 121 1 367 1 312 1 178 1 288 4 66 1 222 1 46 1 127 4 198 1 320 1 130 1 321 18 71 1 352 1 26 8 
183 7 201 1 73 4 78 9 101 1 185 3 169 2 136 3 9 2 154 3 113 3 37 4 14 3 258 6 121 1 367 1 312 2 178 1 66 1 288 4 46 1 127 4 320 1 130 1 321 16 71 1 26 8 
183 4 118 1 78 3 185 3 169 1 136 1 222 3 172 2 154 3 198 1 321 7 352 3 258 6 
183 8 201 1 73 4 78 10 101 1 185 3 169 2 136 3 9 2 303 1 172 1 154 1 113 2 37 4 14 2 258 4 118 1 121 1 367 1 312 1 178 1 66 1 288 4 222 1 46 1 127 4 198 1 320 1 130 1 321 18 71 1 352 1 26 8 
183 4 118 1 73 2 78 4 185 2 169 1 136 1 288 2 9 1 222 1 303 1 127 2 198 1 154 1 172 1 37 2 321 8 26 4 352 1 258 3 
183 3 118 1 78 3 185 2 169 1 136 1 231 1 222 1 303 1 172 1 198 1 321 6 352 1 258 2 
183 2 73 1 150 1 78 2 185 1 169 1 312 1 136 1 288 1 127 1 113 1 154 1 37 1 321 4 26 2 14 1 258 2 
183 4 1 1 121 1 78 3 185 1 169 1 312 1 136 1 46 2 113 1 154 1 321 7 71 1 14 1 258 2 
183 12 1 1 73 2 78 11 185 5 169 3 136 3 9 2 303 1 210 1 172 1 154 4 113 2 37 2 14 2 258 9 118 1 312 2 288 2 222 2 46 2 293 1 23 1 127 2 198 1 321 23 71 2 352 2 26 4 
183 1 46 1 321 1 
78 1 321 1 71 1 
183 3 73 1 226 1 150 1 78 3 185 2 169 1 136 1 312 1 288 1 127 1 113 1 154 1 37 1 321 6 26 2 14 1 258 3 
183 6 73 1 78 6 185 1 101 1 169 2 136 2 154 1 113 2 37 1 14 2 258 2 121 1 367 1 312 2 178 1 288 1 66 1 46 1 127 1 320 1 321 12 130 1 71 1 26 2 
183 3 78 3 185 1 169 1 136 1 222 1 198 1 154 1 321 6 352 1 258 2 
183 2 118 1 73 1 78 1 185 1 288 1 222 1 9 1 210 1 127 1 154 1 172 1 37 1 321 3 352 1 26 2 258 2 
183 5 73 1 78 5 185 3 262 1 169 2 136 2 288 1 66 1 222 2 127 1 154 2 198 1 37 1 321 10 26 2 352 2 258 5 
73 1 78 2 136 1 66 1 288 1 127 1 113 1 154 1 37 1 321 2 26 2 258 1 
183 2 73 1 78 2 185 1 169 1 312 1 136 1 66 1 288 1 127 1 113 1 154 1 37 1 321 4 26 2 14 1 258 2 
201 1 183 2 73 3 78 1 185 1 66 1 288 3 9 1 222 1 210 1 127 3 154 1 37 3 321 3 26 6 352 1 258 2 
183 18 201 1 73 5 1 1 150 1 78 16 185 7 169 5 136 5 9 2 303 1 210 1 58 1 172 1 113 3 154 5 37 5 14 3 258 12 308 1 118 1 121 1 312 3 288 5 66 1 222 3 46 4 127 5 198 2 199 1 321 34 71 3 352 3 26 10 
56 1 158 1 164 1 122 1 147 1 80 1 134 1 
240 1 158 1 4 1 193 1 122 1 177 1 134 1 80 1 56 1 362 1 164 1 147 1 
301 1 231 1 361 1 287 1 94 1 273 1 235 1 261 1 173 1 255 1 280 1 
273 1 158 2 261 1 122 1 162 1 264 1 301 1 145 1 361 1 64 1 56 1 287 1 209 1 235 1 349 1 255 1 173 1 147 2 
273 1 250 1 301 2 56 1 209 1 235 3 212 1 173 1 255 1 158 2 261 1 122 2 217 1 90 1 92 1 264 2 162 1 64 1 145 1 287 1 266 1 349 2 147 2 
273 2 250 1 301 2 56 1 209 1 235 3 212 1 173 1 255 2 158 2 141 1 261 1 122 2 217 1 90 1 92 1 264 2 162 1 145 1 287 2 20 1 266 1 349 2 147 2 
272 1 273 1 209 1 84 1 235 1 255 1 155 1 334 1 281 1 191 1 158 1 89 1 122 1 369 1 92 1 264 1 287 1 124 1 266 1 248 1 25 1 147 1 
250 1 273 3 281 1 261 1 100 1 369 1 217 1 300 1 361 1 301 1 124 2 287 3 20 1 266 1 349 1 235 4 248 2 11 1 155 1 255 3 173 1 214 1 
297 1 287 1 273 1 261 1 173 1 255 1 
273 3 86 1 275 2 339 1 204 1 261 4 33 1 205 1 361 2 301 3 344 2 287 3 69 1 304 1 349 2 235 3 249 1 255 3 173 2 
183 3 225 1 273 1 185 2 56 2 8 1 235 1 335 1 157 1 118 1 158 2 122 1 194 1 162 1 64 1 63 2 287 1 288 2 127 2 349 1 198 1 26 4 352 1 73 2 358 1 78 3 32 1 169 1 136 1 205 1 301 1 209 1 303 1 172 1 255 1 37 2 173 1 258 2 261 1 372 2 315 1 264 1 145 1 222 1 321 6 268 1 147 2 
273 1 100 1 184 2 230 2 106 2 234 1 235 2 278 1 11 1 155 2 334 1 279 1 281 1 17 2 191 1 158 1 120 1 160 2 122 1 287 1 124 3 248 3 198 1 25 1 352 1 252 1 30 1 169 2 253 4 300 2 254 1 136 2 206 5 361 1 209 1 84 1 255 1 214 1 89 1 369 2 262 1 92 1 220 1 264 1 222 1 147 1 375 1 
297 1 273 2 261 2 100 1 33 1 205 1 301 1 287 2 189 1 349 1 235 2 255 2 173 1 
273 4 261 1 205 1 361 1 301 1 287 4 20 1 94 1 348 1 235 1 255 4 173 1 280 1 
273 2 275 1 261 2 301 1 344 1 287 2 266 1 69 1 349 1 235 1 111 1 255 2 249 1 173 1 
361 1 287 1 273 1 22 1 151 1 236 1 261 1 173 1 255 1 343 1 
273 2 275 1 261 2 203 1 205 1 344 1 301 2 287 2 304 1 69 1 235 2 349 1 173 1 255 2 249 1 238 1 
273 2 275 1 261 2 204 1 205 1 344 1 361 1 301 2 287 2 304 1 69 1 235 2 349 1 173 1 255 2 249 1 
273 2 275 1 261 2 205 1 344 1 361 1 301 2 287 2 208 1 304 1 69 1 235 2 349 1 173 1 255 2 249 1 
273 1 158 2 141 1 261 1 122 1 162 1 264 1 301 1 145 1 361 1 56 1 287 1 209 1 235 1 349 1 255 1 173 1 147 2 
273 1 275 1 339 1 261 2 33 1 301 1 344 1 287 1 266 1 349 1 235 1 255 1 173 1 
56 1 215 1 243 1 351 1 213 1 
15 1 215 2 19 1 326 1 243 2 340 1 369 1 90 1 254 1 92 1 207 1 56 1 124 2 248 2 212 1 351 2 155 1 213 1 214 1 
215 1 158 1 243 1 122 1 359 1 213 1 147 1 91 1 55 1 
326 1 340 1 213 1 
231 1 7 1 274 1 161 1 
16 1 7 1 274 1 29 1 77 1 211 1 161 1 
331 1 114 1 211 1 
16 1 2 1 274 1 29 3 77 1 99 1 61 1 161 1 7 1 233 1 211 3 50 2 
16 1 365 1 7 1 274 1 29 2 77 1 211 2 146 1 161 1 
16 1 2 1 274 1 29 1 77 1 151 1 284 1 163 1 22 1 140 1 211 1 
16 1 2 1 7 1 274 1 29 1 77 1 211 1 
16 1 2 1 7 2 29 1 77 1 211 1 161 1 
16 2 2 1 274 1 29 2 53 1 77 2 327 1 7 1 138 1 211 2 
16 1 2 1 365 2 274 2 29 3 77 1 161 1 153 1 163 1 186 1 7 1 211 3 174 1 
16 1 2 1 365 1 74 1 274 1 29 2 77 1 151 1 284 1 219 1 161 1 7 1 22 2 236 1 211 2 
16 2 2 1 365 2 274 2 29 4 77 2 161 1 163 1 186 1 7 1 211 4 363 1 146 1 
16 1 2 1 7 1 274 1 29 1 77 1 211 1 161 1 
16 1 365 2 274 3 29 4 77 1 99 1 341 1 161 2 163 1 186 1 7 2 233 1 211 4 50 1 
16 1 2 1 365 1 274 1 29 2 77 1 229 1 286 1 161 1 7 1 245 1 211 2 
16 1 2 1 274 1 29 3 77 1 99 2 161 1 105 1 7 1 233 1 211 3 50 2 
345 1 179 1 274 2 357 2 
16 1 2 1 291 1 29 1 77 1 211 1 
16 1 365 1 2 1 7 1 274 1 29 2 77 1 211 2 174 1 161 1 
176 1 
16 1 2 1 7 1 274 1 29 1 77 1 211 1 161 1 
16 1 365 1 2 1 274 1 29 3 77 1 161 1 7 1 211 3 174 1 50 1 
163 1 186 1 274 1 341 1 
7 1 274 1 

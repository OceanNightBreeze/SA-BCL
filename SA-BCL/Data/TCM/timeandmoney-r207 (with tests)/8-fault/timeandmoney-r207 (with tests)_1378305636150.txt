#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 54 146 144 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 54 146 144 24 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | STATEMENT | 1463 | stmt -> ;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z | OPERATOR | 4475 | < -> >
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> <<
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1501 | = null
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> <=
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> -1
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
90 1 197 9 245 1 340 2 178 1 226 3 96 2 98 1 202 1 34 9 35 2 252 1 344 6 75 2 231 1 131 1 212 1 280 1 161 4 374 1 331 2 164 1 237 1 238 1 170 2 86 5 353 1 218 2 
90 1 197 9 245 1 340 2 178 1 226 3 96 2 98 1 202 1 34 9 35 2 252 1 344 6 75 2 231 1 131 1 212 1 280 1 161 4 374 1 331 2 164 1 237 1 238 1 86 5 170 2 353 1 218 2 
90 1 197 10 245 1 340 2 178 1 226 4 96 2 98 1 202 1 34 10 35 2 252 1 344 7 75 2 231 1 131 1 212 1 280 1 161 5 374 1 331 2 164 1 237 1 238 1 86 6 170 2 353 1 218 2 
90 1 197 7 245 1 340 2 178 1 226 2 96 2 98 1 202 1 34 7 35 2 252 1 344 4 75 2 231 1 131 1 212 1 280 1 161 3 374 1 331 2 164 1 237 1 238 1 86 4 170 1 218 2 
90 1 197 4 245 1 340 1 280 1 161 2 331 1 226 1 96 1 98 1 202 1 34 4 35 1 170 2 86 3 353 1 344 3 75 1 
231 1 197 2 268 1 280 1 178 1 331 1 96 1 98 1 202 1 34 2 35 1 86 1 218 1 300 1 172 1 75 1 
197 3 280 1 161 1 226 1 96 2 98 1 202 1 34 3 238 1 86 2 218 1 344 1 75 2 
90 1 197 9 245 1 340 1 226 3 96 2 98 1 202 1 34 9 153 1 35 1 344 7 322 1 75 2 212 1 280 1 161 4 331 1 164 1 238 1 86 5 170 2 218 1 353 1 
90 1 197 9 245 1 340 1 226 3 96 2 98 1 202 1 34 9 153 1 35 1 344 7 322 1 75 2 212 1 280 1 161 4 331 1 164 1 238 1 86 5 170 2 218 1 353 1 
281 1 62 1 206 1 
281 1 180 2 343 1 
145 2 347 2 71 2 133 2 191 2 378 1 345 2 165 1 
145 2 290 2 0 1 175 1 312 1 176 1 293 2 116 1 368 1 369 1 71 3 203 1 205 1 126 1 101 1 274 1 299 1 104 1 275 1 129 1 345 3 323 1 277 1 184 1 347 2 133 2 260 1 139 1 165 1 376 1 168 2 263 2 191 2 239 1 378 1 44 2 380 1 
145 1 347 1 71 1 133 1 191 1 284 1 378 1 138 1 345 1 365 1 
62 1 310 1 133 1 187 1 54 1 375 1 281 1 227 1 99 1 71 1 11 1 284 1 287 1 345 1 
62 1 145 1 310 2 347 1 133 1 187 1 375 1 281 1 227 2 99 1 71 1 191 1 284 1 287 1 345 1 
227 1 310 1 265 1 118 1 324 1 
281 1 62 1 227 2 310 2 181 1 265 1 118 1 182 1 
227 1 310 1 265 1 
145 1 310 1 347 1 133 1 138 1 118 1 334 1 365 1 227 1 71 1 191 1 284 1 378 1 345 1 
281 1 
281 1 62 1 227 2 310 2 181 1 265 1 248 1 118 1 
62 1 358 2 310 5 158 1 339 1 243 1 294 1 213 2 214 1 118 2 7 1 281 1 227 5 149 1 181 1 352 1 265 2 102 2 103 1 
206 1 165 1 
50 1 145 1 347 1 328 1 133 2 165 2 71 2 191 1 345 2 
88 1 319 1 348 1 
184 1 0 1 293 1 116 1 165 1 376 1 71 1 168 1 169 1 239 1 44 1 274 1 299 1 345 1 323 1 277 1 
145 3 347 1 71 3 133 3 191 3 28 1 345 3 165 1 
145 1 71 1 133 1 191 1 284 1 138 1 345 1 
145 1 50 1 347 1 71 1 328 1 133 1 191 1 284 1 345 1 
359 1 50 1 145 3 310 1 290 1 0 1 312 1 175 1 176 1 293 1 116 1 28 1 177 1 10 1 227 1 99 1 368 1 369 1 71 4 126 1 101 1 274 1 299 1 275 1 345 4 277 1 323 1 184 1 347 2 133 3 260 1 187 1 375 1 165 1 376 1 168 1 263 2 191 3 284 1 239 1 378 1 44 1 380 1 287 1 
145 1 71 2 133 2 191 1 28 1 54 1 146 1 345 2 165 1 
50 1 145 3 347 1 310 1 133 3 187 1 69 1 177 1 28 2 375 1 281 1 227 1 10 1 99 1 71 3 191 3 284 1 287 1 345 3 
88 1 145 1 50 1 347 1 71 1 133 1 191 1 345 1 
184 1 0 1 293 1 116 1 165 1 376 1 71 1 168 1 44 1 274 1 239 1 299 1 345 1 323 1 277 1 
130 1 184 1 293 1 199 1 165 1 376 1 71 1 168 1 284 1 44 1 274 1 239 1 299 1 171 1 345 1 323 1 277 1 
88 1 290 2 348 1 176 1 260 1 159 1 369 1 12 1 263 2 111 1 126 2 143 1 101 1 37 1 275 1 380 1 
145 1 71 1 133 1 191 1 284 1 279 1 287 1 345 1 
88 1 145 1 184 1 0 1 133 1 293 1 116 1 177 1 28 1 376 1 71 2 168 1 191 1 239 1 274 1 44 1 299 1 345 2 277 1 323 1 
145 4 50 1 347 1 133 5 28 2 177 1 54 1 146 1 332 1 165 1 167 1 71 5 191 4 345 5 
145 2 71 2 133 2 191 2 284 1 279 1 138 1 345 2 
97 1 305 1 
97 1 305 1 
31 1 303 1 
31 1 303 1 
31 1 303 1 
97 1 283 1 305 1 
97 1 283 1 305 1 
97 1 305 1 317 1 
97 2 305 2 240 1 38 1 31 1 303 1 
97 1 283 1 305 1 
97 1 305 1 241 1 
97 1 305 1 241 1 
97 1 305 1 241 1 
310 2 267 1 327 3 311 1 67 2 91 1 222 2 305 2 295 1 216 2 8 1 281 1 97 2 9 2 227 2 151 2 193 1 320 1 240 1 
145 2 310 1 267 1 222 1 2 1 247 1 317 1 9 1 97 1 227 1 71 2 151 1 155 1 345 2 301 1 60 1 211 1 327 1 133 2 135 1 305 1 165 1 216 1 191 2 
35 1 340 1 331 1 
35 1 331 1 300 1 
174 1 13 1 35 3 340 2 300 1 16 1 
174 1 35 2 340 1 300 1 107 1 16 1 
174 1 35 2 340 1 300 1 16 2 
196 2 358 1 310 5 52 1 244 1 3 1 362 2 294 2 118 4 56 1 7 3 227 5 180 3 181 1 371 1 343 1 102 1 255 1 155 1 59 1 62 1 211 1 158 1 135 1 159 1 213 1 350 2 281 2 111 1 265 1 219 1 195 1 
145 1 196 6 52 3 3 3 341 4 294 6 56 1 342 1 7 8 149 1 102 2 343 3 15 1 345 1 17 1 62 1 347 1 158 1 159 3 213 2 351 1 111 3 265 5 219 3 358 2 310 8 362 6 271 1 118 6 365 1 227 8 71 1 180 9 181 1 73 1 371 2 324 4 133 1 135 4 138 1 334 1 281 5 191 1 284 1 378 1 195 2 
358 1 196 2 310 3 52 1 244 1 3 1 362 2 294 2 118 2 7 3 227 3 149 1 180 4 371 1 343 2 102 1 255 1 62 1 135 1 159 1 213 1 350 1 281 3 111 1 219 1 195 1 
196 4 145 1 52 2 244 1 3 2 294 4 7 5 149 1 102 1 343 3 255 1 345 1 15 1 62 1 347 1 159 2 350 1 213 1 351 1 111 2 219 2 358 1 310 3 362 4 118 2 365 1 227 3 180 7 71 1 73 1 371 1 133 1 135 2 138 1 334 1 281 4 191 1 284 1 378 1 195 1 
360 1 206 1 239 1 
239 1 306 1 
77 1 
184 1 239 1 
360 2 184 1 68 1 239 3 117 1 299 1 
184 1 239 1 299 1 
201 1 239 1 
290 7 52 1 78 3 41 2 21 1 364 1 251 1 23 1 111 1 126 3 25 1 104 4 66 1 210 2 256 1 325 1 302 1 
290 7 52 1 78 3 41 2 21 1 364 1 251 1 23 1 111 1 126 3 25 1 104 4 66 1 210 2 256 1 325 1 302 1 
290 7 52 1 78 3 41 2 21 1 364 1 224 1 23 1 251 1 111 1 126 3 25 1 104 4 66 1 210 2 256 1 325 1 302 1 
290 31 53 1 52 4 3 3 364 2 147 1 367 1 369 1 57 1 251 2 273 1 126 15 104 16 275 1 210 3 346 1 256 1 325 1 302 2 260 1 78 10 159 3 188 3 41 5 21 2 23 1 263 2 142 4 111 4 264 1 25 5 66 1 380 1 219 3 
290 9 52 1 260 2 78 4 41 3 21 1 364 1 369 2 57 1 23 1 251 1 263 4 111 1 25 1 126 4 217 1 104 5 210 2 275 2 380 2 256 1 112 1 325 1 302 1 
242 1 197 2 293 1 340 1 96 1 121 1 98 1 202 1 34 2 123 1 35 2 13 1 125 1 344 1 300 1 75 1 277 1 39 1 259 1 136 1 280 1 232 1 331 1 376 1 168 1 83 1 44 1 86 1 218 1 47 1 
242 1 197 3 292 1 293 1 340 1 269 1 96 1 121 1 202 1 34 3 13 1 123 1 35 2 125 1 344 2 300 1 75 1 277 1 39 1 259 1 280 1 232 1 331 1 376 1 168 1 44 1 86 1 379 1 218 1 47 1 
242 1 197 2 293 1 340 1 269 1 121 1 202 1 34 2 35 2 13 1 344 2 300 1 277 1 39 1 259 1 280 1 232 1 331 1 376 1 168 1 44 1 86 1 218 1 379 1 47 1 
27 1 197 1 292 1 293 1 96 1 121 2 34 1 122 1 277 1 323 1 75 1 39 2 184 1 160 1 232 2 376 1 168 1 44 1 239 1 218 2 45 1 266 1 48 1 
242 1 259 1 197 1 293 1 340 1 136 1 232 1 331 1 96 1 98 1 121 1 376 1 34 1 168 1 13 1 35 2 123 1 125 1 44 1 218 1 379 1 300 1 47 1 277 1 75 1 39 1 
154 1 
89 1 293 2 93 2 294 2 54 1 5 2 296 1 249 1 7 2 99 1 11 1 343 2 102 1 345 1 105 1 157 4 62 1 158 1 20 1 160 1 213 1 166 1 168 2 265 6 355 1 173 2 358 1 310 5 223 2 227 5 180 2 71 1 122 1 181 3 370 1 321 1 323 2 277 1 373 2 184 1 185 1 133 1 187 1 40 2 79 1 189 1 375 1 281 2 335 2 376 1 284 1 44 2 239 1 287 1 195 1 
173 1 310 3 54 1 249 1 248 1 227 3 99 1 71 1 11 1 181 1 345 1 321 1 105 1 157 2 133 1 185 1 187 1 20 1 375 1 284 1 265 2 287 1 
310 3 54 1 249 1 248 1 227 3 99 1 71 1 11 1 181 1 345 1 321 1 105 1 157 3 62 1 133 1 185 1 187 1 20 1 375 1 335 1 281 1 265 1 284 1 287 1 
173 1 310 3 54 1 248 1 249 1 227 3 99 1 71 1 11 1 181 1 345 1 321 1 105 1 157 3 373 1 62 1 133 1 185 1 187 1 20 1 375 1 335 1 281 1 284 1 265 2 287 1 
89 1 93 2 54 1 294 1 5 2 248 1 249 1 7 1 99 1 11 1 102 1 343 2 105 1 345 1 157 6 62 5 158 1 108 1 20 1 213 1 265 7 173 4 358 1 310 5 223 2 270 1 225 1 227 5 179 1 71 1 181 3 321 1 373 4 185 1 133 1 187 1 40 2 79 1 375 1 335 4 281 5 43 1 284 1 287 1 
89 1 93 2 54 1 294 1 5 2 249 1 296 1 7 1 99 1 11 1 102 1 343 2 105 1 345 1 157 4 62 1 158 1 20 1 213 1 265 4 358 1 173 2 310 4 223 2 227 4 71 1 180 2 181 2 321 1 373 2 133 1 185 1 187 1 40 2 79 1 375 1 335 2 281 2 284 1 287 1 
173 2 358 1 310 4 89 1 93 2 223 2 294 1 54 1 5 2 270 1 249 1 7 1 227 4 99 1 179 1 71 1 11 1 181 2 343 2 102 1 345 1 321 1 105 1 373 2 157 4 62 1 158 1 133 1 185 1 108 1 187 1 40 2 20 1 79 1 213 1 375 1 281 1 335 2 265 4 284 1 287 1 
173 2 358 1 310 4 89 1 93 2 223 2 294 1 54 1 5 2 270 1 249 1 7 1 227 4 99 1 179 1 71 1 11 1 181 2 343 2 102 1 345 1 321 1 105 1 373 2 157 4 62 1 158 1 133 1 185 1 108 1 187 1 40 2 20 1 79 1 213 1 375 1 281 1 335 2 265 4 284 1 287 1 
173 2 358 1 310 4 1 1 223 2 294 1 54 1 249 1 7 1 272 1 227 4 99 1 180 2 250 2 71 1 150 1 11 1 181 2 102 1 345 1 321 1 105 1 373 2 157 4 62 1 158 1 133 1 185 1 108 1 187 1 40 2 20 1 109 2 79 1 213 1 375 1 281 1 335 2 265 4 284 1 287 1 
358 1 173 3 310 4 89 1 93 2 223 2 294 1 54 1 5 2 270 1 249 1 7 1 227 4 99 1 179 1 71 1 11 1 181 2 343 2 102 1 345 1 321 1 105 1 157 5 373 3 62 1 158 1 133 1 185 1 108 1 187 1 40 2 20 1 79 1 213 1 375 1 281 1 335 3 43 1 284 1 265 5 287 1 
358 1 173 3 310 4 89 1 93 2 223 2 294 1 54 1 5 2 270 1 249 1 7 1 227 4 99 1 179 1 71 1 11 1 181 2 343 2 102 1 345 1 321 1 105 1 157 5 373 3 62 1 158 1 133 1 185 1 108 1 187 1 40 2 20 1 79 1 213 1 375 1 281 1 335 3 43 1 284 1 265 5 287 1 
54 1 294 1 249 1 296 1 7 1 99 1 250 2 11 1 102 1 105 1 345 1 157 4 62 1 158 1 20 1 213 1 109 2 265 4 358 1 173 2 310 4 223 2 272 1 227 4 71 1 180 2 181 2 321 1 373 2 133 1 185 1 187 1 40 2 79 1 375 1 335 2 281 1 284 1 287 1 
88 1 290 6 52 1 348 1 176 1 260 1 78 2 41 2 21 1 364 1 165 2 369 1 319 1 23 1 263 2 111 1 206 1 126 3 143 1 101 1 104 3 210 1 275 1 380 1 256 1 325 1 
88 7 338 1 114 1 290 9 52 2 176 1 3 2 199 1 368 1 369 2 319 6 273 1 126 3 101 2 230 1 104 6 275 2 260 2 348 7 78 1 188 2 140 1 165 1 282 1 263 4 142 2 284 1 25 1 380 2 219 2 
145 1 290 2 0 1 176 1 293 1 116 1 28 1 177 1 95 1 369 1 368 1 319 1 71 2 101 1 126 1 274 1 299 1 230 1 104 1 275 1 345 2 129 1 277 1 323 1 184 1 258 1 133 1 260 1 165 1 376 1 168 1 263 2 169 1 191 1 84 1 239 1 44 1 380 1 
145 1 88 2 290 5 0 1 52 1 293 1 3 1 101 2 299 1 104 3 345 2 260 2 348 2 168 1 263 4 219 1 312 1 176 2 116 1 177 1 28 1 368 1 369 2 71 2 319 1 126 2 36 1 274 1 230 1 275 2 128 1 323 1 277 1 326 1 184 1 133 1 78 1 41 1 190 1 376 1 191 1 44 1 239 1 286 1 380 2 
145 1 291 1 290 2 176 2 293 8 28 1 30 1 228 1 369 2 368 1 71 1 122 1 101 2 14 1 126 1 104 1 275 2 345 1 129 1 277 2 323 2 76 1 184 2 133 1 260 2 261 1 160 1 139 2 262 1 376 2 168 7 83 1 263 4 191 1 143 1 239 3 44 8 379 1 380 2 
88 1 50 1 145 1 290 3 52 1 176 1 3 1 369 1 319 1 71 1 101 1 126 2 230 1 104 1 275 1 345 1 347 1 133 1 348 1 260 1 78 1 159 1 41 1 22 1 263 2 111 1 191 1 380 1 219 1 
88 1 290 2 52 1 220 1 348 1 176 1 260 1 3 1 369 1 263 2 143 1 101 1 104 2 275 1 380 1 
88 1 290 2 348 1 176 1 260 1 159 1 369 1 263 2 111 1 143 1 101 1 126 2 37 1 275 1 380 1 
88 1 290 2 52 1 348 1 176 1 260 1 3 1 369 1 263 2 143 1 101 1 104 2 275 1 380 1 219 1 
88 1 290 2 52 1 220 1 348 1 176 1 260 1 3 1 369 1 263 2 101 1 104 2 275 1 380 1 76 1 
88 1 290 2 348 1 176 1 260 1 159 1 369 1 263 2 111 1 101 1 126 2 37 1 275 1 380 1 76 1 
88 1 290 2 52 1 348 1 176 1 260 1 3 1 369 1 263 2 101 1 104 2 275 1 380 1 219 1 76 1 
88 1 290 2 52 1 348 1 176 1 260 1 3 1 369 1 263 2 101 1 104 2 275 1 380 1 219 1 
290 2 0 1 312 1 176 1 293 1 116 1 369 1 368 1 71 1 101 1 126 1 274 1 299 1 104 1 275 1 129 1 345 1 277 1 323 1 184 1 260 1 165 1 376 1 168 1 263 2 44 1 239 1 380 1 
290 1 176 1 293 1 55 1 199 1 369 1 368 1 71 1 101 1 126 1 274 1 299 1 275 1 345 1 277 1 323 1 184 1 130 1 260 1 165 1 376 1 168 1 263 2 284 1 44 1 239 1 171 1 380 1 
88 1 290 2 52 1 348 1 176 1 260 1 3 1 369 1 263 2 101 1 230 1 104 2 275 1 380 1 219 1 
88 1 290 2 52 1 0 1 312 1 176 1 293 1 3 1 116 1 369 1 71 1 101 1 274 1 299 1 104 2 275 1 345 1 277 1 184 1 348 1 260 1 190 1 376 1 168 1 83 1 263 2 44 1 239 1 380 1 219 1 
50 1 145 1 88 1 290 2 52 1 176 1 3 1 369 1 71 1 319 1 101 1 230 1 104 2 275 1 345 1 347 1 133 1 260 1 348 1 78 1 333 1 263 2 191 1 25 1 380 1 219 1 
289 1 290 19 52 3 3 3 147 1 318 1 369 2 273 1 126 10 104 9 275 2 186 1 329 2 260 2 134 1 78 6 159 3 188 1 41 3 110 1 63 1 263 4 142 2 111 3 377 1 192 2 25 3 380 2 219 3 112 1 
289 2 290 26 52 3 3 3 314 1 200 1 147 2 369 3 57 2 124 1 126 12 104 14 275 3 257 1 132 1 329 4 260 3 134 1 78 4 159 2 188 2 41 2 80 1 110 2 63 1 263 6 111 2 142 2 377 1 192 1 25 2 380 3 219 3 112 1 
289 2 290 41 52 5 3 4 200 1 147 3 57 1 104 20 210 1 256 1 257 1 260 3 159 4 110 1 21 1 63 1 23 1 263 6 111 5 25 4 219 4 112 1 314 1 364 1 369 3 273 1 124 1 126 21 275 3 325 1 132 1 329 4 186 1 134 1 78 8 188 3 41 4 80 1 142 4 377 1 192 1 285 1 380 3 
289 2 290 38 52 5 3 4 314 1 200 1 364 1 147 3 369 4 57 2 124 1 273 1 126 18 104 20 210 1 275 4 256 1 325 1 257 1 132 1 186 1 329 4 260 4 134 1 78 7 159 3 188 3 41 4 80 1 110 1 21 1 63 1 23 1 263 8 142 4 111 4 377 1 192 1 25 3 285 1 380 4 219 4 112 1 
289 1 338 2 290 52 52 8 3 7 314 1 200 1 364 1 147 2 369 2 57 1 124 1 273 2 126 25 104 27 210 1 275 2 256 1 325 1 257 1 132 1 329 4 260 2 134 1 78 14 159 7 188 4 41 7 80 1 110 1 21 1 63 1 23 1 263 4 142 4 111 8 377 1 192 1 25 7 380 2 219 7 112 1 
8 1 9 1 97 1 151 1 221 1 222 1 193 1 305 1 240 1 216 1 
317 1 60 1 
9 1 97 1 204 1 151 1 222 1 305 1 288 1 234 1 216 1 
310 1 267 1 327 2 311 1 67 1 91 1 222 1 305 1 295 1 216 1 8 1 281 1 227 1 97 1 9 1 151 1 193 1 240 1 
310 1 267 1 327 2 311 1 67 1 91 1 222 1 305 1 295 1 216 1 8 1 281 1 227 1 97 1 9 1 151 1 193 1 240 1 
310 1 267 1 327 2 311 1 67 1 91 1 222 1 305 1 295 1 216 1 8 1 281 1 227 1 97 1 9 1 151 1 193 1 240 1 
33 1 283 1 38 1 
33 1 283 1 38 1 
313 1 241 1 
313 1 38 1 241 1 
2 1 301 1 
145 2 310 1 67 1 311 1 222 1 2 1 247 1 118 1 317 1 227 1 9 1 97 1 71 2 100 1 151 1 155 1 345 2 301 1 60 1 211 1 327 1 133 2 135 1 305 1 165 1 216 1 191 2 
33 1 283 1 
313 1 38 1 241 1 
290 2 176 1 92 1 293 2 369 1 368 1 71 2 101 1 14 1 126 1 230 1 104 1 275 1 345 2 129 1 277 1 278 1 133 2 260 1 215 1 236 1 139 2 64 1 376 1 168 2 263 2 44 2 380 1 
242 1 259 1 293 2 340 1 94 1 331 1 121 1 376 1 141 1 168 2 83 1 13 1 35 2 123 1 44 2 379 1 300 1 277 1 357 1 
242 1 259 1 293 1 340 1 331 1 121 1 141 1 376 1 168 1 13 1 35 2 123 1 253 1 44 1 379 1 300 1 277 1 
184 1 293 1 160 1 121 1 376 1 168 1 122 1 239 1 44 1 45 1 277 1 323 1 357 1 309 1 
242 1 259 1 293 1 340 1 94 1 331 1 121 1 141 1 376 1 168 1 13 1 35 2 123 1 44 1 379 1 300 1 277 1 357 1 
276 1 
281 1 62 1 339 1 206 1 352 1 294 1 7 1 
358 1 310 1 89 1 93 1 294 1 5 1 7 1 227 1 180 1 181 1 343 1 102 1 62 1 158 1 213 1 281 2 265 1 
49 1 196 6 52 2 339 1 293 3 3 2 294 8 7 9 99 2 201 2 298 2 102 4 343 6 299 3 209 2 106 2 62 2 158 4 19 2 349 1 159 2 213 4 306 3 65 1 168 3 111 2 352 1 265 5 356 2 219 2 358 4 360 2 310 5 68 1 362 6 70 1 120 2 227 5 180 12 181 3 127 2 36 2 277 4 323 1 184 3 189 1 281 8 376 3 83 1 85 1 239 10 44 3 46 2 195 2 
196 5 358 2 310 1 52 2 3 2 362 5 314 1 294 5 200 1 147 1 7 8 227 1 366 1 180 6 297 1 181 1 124 1 298 2 102 2 343 3 257 1 62 2 132 1 158 2 19 1 159 2 188 1 213 2 189 1 281 5 142 1 111 2 265 1 219 2 195 1 
358 1 145 1 310 1 52 2 294 2 364 1 7 2 365 1 227 1 179 1 71 1 298 2 102 1 345 1 325 1 347 1 158 1 133 1 19 1 138 1 213 1 21 1 81 1 334 1 111 1 191 1 284 1 378 1 
358 1 62 1 158 1 339 1 213 1 294 1 7 1 281 1 352 1 102 1 
196 5 52 2 19 1 3 2 362 5 159 2 294 5 7 5 281 5 180 10 111 2 36 1 298 2 343 5 219 2 
281 1 62 1 227 1 310 1 181 1 265 1 
49 2 358 2 310 3 293 4 29 1 294 2 70 1 7 2 227 3 149 1 122 1 370 1 181 2 229 1 102 2 299 1 277 3 323 2 184 2 158 1 137 1 213 2 160 1 189 2 42 1 166 1 376 2 307 1 168 4 265 4 239 2 44 4 194 1 195 2 
145 2 290 1 0 1 175 1 312 1 176 1 293 1 116 1 368 1 369 1 71 3 126 1 101 1 274 1 299 1 275 1 345 3 323 1 277 1 347 2 184 1 133 2 260 1 165 1 376 1 168 1 263 2 191 2 44 1 378 1 239 1 380 1 
196 2 358 1 62 2 158 1 362 2 294 2 213 1 189 1 7 1 281 4 180 4 343 2 102 1 210 1 195 1 
9 1 235 1 216 1 
9 1 235 1 216 1 
87 1 9 1 2 1 193 1 216 1 
9 1 235 1 216 1 
9 1 119 1 216 1 
9 1 119 1 216 1 
9 1 119 1 216 1 
9 1 216 1 
97 1 305 1 
290 8 52 1 260 2 78 3 41 2 364 1 21 1 369 2 57 1 23 1 263 4 111 1 126 4 25 1 104 4 210 1 275 2 380 2 256 1 325 1 
290 6 52 1 78 2 41 2 364 1 21 1 23 1 206 1 111 1 126 3 104 3 210 1 256 1 325 1 
290 4 52 1 260 1 3 1 159 1 78 2 41 1 369 1 263 2 111 1 126 2 25 1 104 2 275 1 380 1 219 1 113 1 
290 7 52 1 3 1 159 1 78 2 188 1 41 1 147 1 111 1 142 2 273 1 126 4 25 1 104 3 219 1 
338 1 290 23 114 1 52 3 3 2 246 1 364 2 369 2 57 2 273 1 126 12 104 11 210 1 275 2 256 1 325 1 260 2 78 9 159 2 188 2 41 5 21 2 23 1 263 4 142 2 111 3 25 4 380 2 219 2 
290 1 142 1 126 1 
290 1 188 1 104 1 
290 6 52 1 260 1 3 1 78 3 159 1 41 2 369 1 263 2 111 1 36 1 126 3 25 1 104 3 380 1 275 1 219 1 113 1 
290 12 52 2 3 2 314 1 200 1 147 1 369 1 124 1 126 6 104 6 275 1 257 1 132 1 260 1 159 2 78 2 188 1 41 1 263 2 142 1 111 2 25 1 380 1 219 2 112 1 
290 6 52 1 111 1 25 1 78 2 126 3 41 1 104 3 21 1 364 1 325 1 
290 3 260 1 78 2 246 1 41 1 21 1 364 1 369 1 57 1 23 1 263 2 25 1 126 2 104 1 275 1 380 1 256 1 
290 10 52 2 260 1 78 5 41 3 81 1 364 2 21 2 369 1 263 2 111 2 25 2 126 5 104 5 380 1 275 1 112 1 325 1 
290 2 52 1 260 1 3 1 78 1 369 1 263 2 25 1 104 2 275 1 380 1 112 1 
290 4 52 1 260 1 3 1 159 1 78 2 41 1 369 1 263 2 111 1 126 2 25 1 104 2 275 1 380 1 219 1 112 1 
290 3 186 1 260 3 78 2 246 1 41 1 364 1 21 1 369 3 57 1 263 6 126 2 25 1 104 1 275 3 380 3 112 1 
290 34 53 1 52 5 3 3 246 1 364 3 147 1 369 5 57 2 273 1 126 18 104 16 210 1 275 5 346 1 256 1 325 2 186 1 260 5 78 12 159 3 188 3 41 7 21 3 23 1 263 10 142 4 111 5 264 1 25 5 380 5 219 3 112 1 113 1 
290 8 52 1 200 1 147 1 364 1 369 1 126 4 104 4 210 1 275 1 256 1 325 1 260 1 78 2 188 1 41 2 21 1 23 1 263 2 111 1 142 1 380 1 112 1 
290 11 52 2 3 1 200 1 364 1 147 1 369 2 273 1 126 5 104 6 210 1 275 2 256 1 325 1 260 2 78 3 188 1 41 2 21 1 23 1 263 4 111 1 142 2 25 1 380 2 219 1 112 1 113 1 
290 19 52 3 3 2 314 1 200 1 364 1 147 1 369 3 57 1 124 1 126 10 104 9 210 1 275 3 256 1 325 1 257 1 132 1 260 3 159 2 78 4 188 1 41 3 21 1 23 1 263 6 142 1 111 3 25 1 380 3 219 2 112 1 113 1 
290 17 52 3 3 2 314 1 200 1 364 1 147 1 369 3 57 1 124 1 126 7 104 10 210 1 275 3 256 1 325 1 257 1 132 1 260 3 159 1 78 5 188 1 41 3 21 1 23 1 263 6 142 1 111 2 25 2 380 3 219 2 112 1 113 1 
290 8 52 1 200 1 147 1 364 1 369 1 126 4 104 4 210 1 275 1 256 1 325 1 260 1 78 2 188 1 41 2 21 1 23 1 263 2 111 1 142 1 380 1 112 1 
290 12 52 2 3 2 314 1 200 1 147 1 369 1 124 1 126 6 104 6 275 1 257 1 132 1 260 1 159 2 78 2 188 1 41 1 263 2 142 1 111 2 25 1 380 1 219 2 112 1 
290 18 52 3 3 2 314 1 200 1 364 1 147 1 369 4 57 2 124 1 126 8 104 10 210 1 275 4 256 1 325 1 257 1 132 1 260 4 159 1 78 5 188 1 41 3 21 1 23 1 263 8 142 1 111 2 25 2 380 4 219 2 112 1 113 1 
290 16 52 3 3 3 314 1 200 1 147 1 369 4 57 2 124 1 126 7 104 9 275 4 257 1 132 1 186 1 260 4 159 2 78 6 188 1 41 3 263 8 142 1 111 2 25 3 380 4 219 3 112 1 
290 7 52 1 78 6 41 3 364 3 21 3 23 2 111 1 126 4 25 3 104 3 256 1 325 1 
290 18 52 3 3 2 314 1 200 1 364 1 147 1 369 4 57 2 124 1 126 8 104 10 210 1 275 4 256 1 325 1 257 1 132 1 186 1 260 4 159 1 78 4 188 1 41 3 21 1 23 1 263 8 142 1 111 2 25 1 380 4 219 2 112 1 
54 1 146 1 144 1 
26 1 18 1 24 1 361 1 54 1 146 1 74 1 144 1 
184 1 376 1 168 1 122 1 206 1 293 1 239 1 44 1 160 1 277 1 323 1 
145 1 184 1 133 1 293 1 116 1 28 1 165 1 376 1 71 2 168 1 191 1 239 1 274 1 44 1 299 1 345 2 277 1 323 1 
145 2 49 1 184 2 133 2 187 1 293 1 116 1 28 1 165 1 376 1 201 1 71 2 168 1 191 1 284 1 239 3 274 1 44 1 299 2 209 1 287 1 345 2 277 1 
49 1 145 2 293 1 28 1 199 1 71 2 201 1 274 1 299 2 209 1 345 2 277 1 184 2 133 2 187 1 165 1 376 1 168 1 191 1 284 2 44 1 239 3 171 1 287 1 
62 1 49 1 360 1 184 1 310 2 293 3 363 1 306 1 82 1 281 1 32 1 227 2 99 1 376 1 201 1 168 3 265 1 44 3 239 4 299 1 209 1 323 1 277 1 
62 1 49 1 360 1 184 1 310 2 293 3 306 1 82 1 281 1 227 2 99 1 376 1 201 1 168 3 265 1 44 3 239 4 299 1 46 1 209 1 323 1 277 1 
376 1 228 1 168 1 293 1 44 1 277 1 
184 2 291 1 198 1 68 1 293 7 30 1 261 1 139 1 228 1 262 1 376 2 307 1 168 6 83 1 44 7 239 3 299 1 379 1 194 1 323 2 277 3 
145 1 88 1 290 6 0 1 52 1 293 1 101 2 299 1 104 3 210 1 345 2 256 1 260 2 348 1 21 1 165 2 168 1 23 1 263 4 111 1 312 1 176 2 116 1 28 1 364 1 369 2 319 1 71 2 126 3 274 1 230 1 275 2 128 1 277 1 278 1 325 1 184 1 133 1 78 2 41 2 190 1 376 1 83 1 191 1 44 1 239 1 380 2 
358 2 360 1 310 3 339 1 293 1 294 1 70 1 118 1 7 1 227 3 120 1 99 1 181 1 102 2 323 1 106 1 62 1 158 2 213 2 306 1 281 1 168 1 352 1 265 2 44 1 239 2 46 1 356 1 
360 1 184 1 68 1 293 2 228 1 376 1 168 2 83 1 85 1 44 2 239 2 299 1 277 2 
184 1 115 1 293 4 160 1 82 1 376 1 168 4 122 1 83 1 44 4 239 1 277 1 323 1 
49 1 184 1 293 2 29 1 336 1 376 1 307 1 168 2 229 1 44 2 239 1 299 1 194 1 277 2 
376 1 168 1 259 1 35 1 293 1 44 1 331 1 300 1 277 1 323 1 
376 1 168 2 83 1 293 2 44 2 379 1 215 1 277 1 
49 1 184 2 291 1 115 1 293 5 30 1 160 1 376 2 262 1 168 4 122 1 83 1 44 5 239 3 323 1 277 2 
49 1 184 2 291 1 115 1 293 5 160 1 148 1 376 2 262 1 168 4 122 1 83 1 44 5 239 3 323 1 277 2 
145 1 293 1 28 1 199 1 71 2 274 1 299 1 345 2 323 1 277 1 184 1 133 1 165 1 376 1 168 1 191 1 284 1 44 1 239 1 171 1 
49 1 184 1 198 1 68 1 293 1 376 1 307 1 168 1 44 1 239 1 299 1 194 1 277 2 
51 1 133 1 92 1 233 1 163 1 236 1 64 1 71 1 345 1 
208 1 354 1 163 1 
51 1 58 1 233 1 163 1 165 1 
62 1 310 2 51 2 187 1 375 1 118 1 233 2 163 1 165 1 281 1 227 2 10 1 99 1 207 1 208 1 284 1 58 2 354 1 287 1 
202 1 206 1 86 1 280 1 
96 1 202 1 34 1 197 1 86 1 280 1 75 1 
197 1 218 1 39 1 
197 3 315 1 178 2 280 1 6 1 96 1 98 1 34 3 202 1 86 1 372 1 75 1 
96 1 202 1 34 2 197 2 86 1 280 1 170 1 344 1 75 1 
96 1 98 1 90 1 34 1 197 1 35 1 340 1 86 1 161 1 331 1 75 1 
96 1 98 1 34 1 197 1 86 1 280 1 75 1 
96 1 98 1 202 1 34 1 197 1 280 2 75 1 
61 1 197 2 4 1 280 1 96 2 98 1 34 2 308 1 86 1 75 2 
197 3 212 1 280 1 161 1 226 1 164 1 96 1 98 1 202 1 34 3 86 2 344 2 75 1 
197 2 340 1 280 1 331 1 96 1 98 1 202 1 34 2 35 2 13 1 72 1 86 1 344 1 300 1 75 1 
197 4 280 1 161 1 226 1 96 2 98 1 202 1 34 4 170 1 86 2 353 1 344 2 75 2 
96 1 98 1 202 1 34 1 197 1 86 1 280 1 75 1 
304 1 197 4 315 1 178 1 280 2 161 1 226 1 96 1 202 2 34 4 372 1 86 3 344 2 75 1 
197 2 280 1 316 1 96 1 98 1 34 2 202 1 152 1 86 1 344 1 75 1 322 1 
183 1 197 3 315 2 178 2 280 1 96 1 98 1 34 3 202 1 372 1 86 1 75 1 
330 1 86 2 337 1 156 2 
96 1 98 1 34 1 197 1 254 1 75 1 
96 1 98 1 202 1 34 2 197 2 212 1 86 1 280 1 344 1 75 1 
162 1 
96 1 98 1 202 1 34 1 197 1 86 1 280 1 75 1 
96 1 98 1 202 1 34 3 197 3 212 1 86 1 280 1 178 1 344 1 75 1 
304 1 86 1 161 1 226 1 
86 1 280 1 

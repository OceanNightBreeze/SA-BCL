#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 294 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (167,316) (167,316) 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 294 192 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 20 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 20 153 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 99 146 60 113 312 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 99 146 60 113 312 302 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 99 146 60 113 312 302 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 99 146 60 113 312 302 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 350 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 72 60 113 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (167,316) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 343 51 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 99 146 60 113 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 99 146 60 113 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 99 146 60 113 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 99 146 60 113 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 99 146 60 113 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 99 146 60 113 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 99 146 60 113 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7926 | if (x) -> if (!x)
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 3650 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2906 | * -> >>
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONSTANT | 1198 | 0 -> 1
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I | ASSIGN | 5953 | = null
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 753 | = null
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1427 | if (x) -> if (!x)
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
163 1 0 5 217 2 238 2 52 1 286 1 3 3 112 1 331 1 271 2 305 2 117 1 6 1 34 6 35 1 276 2 277 9 182 1 154 1 62 4 254 9 233 1 43 2 159 1 257 1 297 1 213 1 88 2 
163 1 0 5 217 2 238 2 52 1 286 1 3 3 112 1 331 1 271 2 305 2 117 1 6 1 34 6 35 1 276 2 277 9 182 1 154 1 62 4 254 9 233 1 43 2 159 1 257 1 297 1 213 1 88 2 
163 1 0 6 217 2 238 2 52 1 286 1 3 4 112 1 331 1 271 2 305 2 117 1 6 1 34 7 35 1 276 2 277 10 182 1 154 1 62 5 254 10 233 1 43 2 159 1 257 1 297 1 213 1 88 2 
163 1 0 4 217 2 238 2 52 1 286 1 3 2 112 1 331 1 271 1 305 2 117 1 6 1 34 4 35 1 276 2 277 7 182 1 62 3 254 7 233 1 43 2 159 1 257 1 297 1 213 1 88 2 
163 1 34 3 35 1 0 3 217 1 238 1 52 1 286 1 277 4 154 1 62 2 3 1 254 4 43 1 257 1 271 2 305 1 88 1 
163 1 0 1 238 1 52 1 23 1 276 1 286 1 182 1 277 2 155 1 207 1 254 2 331 1 43 1 305 1 88 1 
163 1 34 1 0 2 52 1 276 1 286 1 277 3 62 1 3 1 254 3 43 2 117 1 88 2 
163 1 0 5 217 1 238 1 52 1 286 1 3 3 112 1 271 2 117 1 305 1 34 7 35 1 276 1 277 9 62 4 154 1 156 1 254 9 43 2 257 1 44 1 297 1 88 2 
163 1 0 5 217 1 238 1 52 1 286 1 3 3 112 1 271 2 117 1 305 1 34 7 35 1 276 1 277 9 62 4 154 1 156 1 254 9 43 2 257 1 44 1 297 1 88 2 
350 1 47 1 98 1 
47 1 33 2 235 1 
255 2 70 2 45 2 26 2 250 1 190 1 92 2 111 2 
2 2 284 2 70 3 24 1 264 1 324 2 26 2 172 1 326 1 173 1 55 1 92 2 111 2 71 1 94 1 289 1 76 1 352 1 334 1 119 1 273 1 121 1 249 1 183 1 250 1 362 1 255 2 234 2 259 2 65 1 83 1 315 1 45 3 84 1 85 1 190 1 162 1 
255 1 70 1 281 1 348 1 45 1 26 1 250 1 147 1 92 1 111 1 
70 1 169 1 263 1 59 1 13 1 196 1 224 1 255 1 281 1 349 1 45 1 75 1 47 1 98 1 
70 1 169 1 26 1 13 1 92 1 111 1 196 1 224 2 255 1 281 1 349 1 75 2 45 1 47 1 98 1 
224 1 294 1 75 1 140 1 
224 2 75 2 109 1 47 1 98 1 110 1 140 1 191 1 
224 1 75 1 110 1 
70 1 250 1 26 1 140 1 92 1 111 1 224 1 255 1 281 1 189 1 348 1 75 1 45 1 147 1 
47 1 
224 2 75 2 47 1 98 1 110 1 140 1 191 1 93 1 
308 1 167 1 102 1 358 1 325 1 171 2 40 1 140 2 110 2 253 1 224 5 225 2 365 2 32 1 75 5 47 1 98 1 316 1 191 1 
350 1 190 1 
70 2 26 1 92 1 111 1 142 1 280 1 255 2 45 2 190 2 
122 1 261 1 125 1 
216 1 2 1 70 1 24 1 264 1 173 1 234 1 259 1 83 1 45 1 84 1 85 1 190 1 119 1 334 1 162 1 
2 1 70 2 24 1 264 1 61 1 173 1 92 1 111 1 255 1 234 1 259 1 83 1 85 1 84 1 45 2 261 1 162 1 334 1 300 1 119 1 
320 1 70 5 263 1 61 2 26 1 92 4 111 4 174 1 142 1 255 5 45 5 270 1 190 1 300 1 
255 2 70 2 281 1 348 1 45 2 87 1 92 2 111 2 
255 3 70 3 26 1 61 1 45 3 190 1 92 3 111 3 
255 1 70 1 281 1 348 1 45 1 92 1 111 1 
142 1 280 1 255 1 70 1 281 1 45 1 26 1 92 1 111 1 
2 1 284 1 169 1 70 4 24 1 264 1 324 2 26 2 326 1 173 1 55 1 92 3 111 3 196 1 71 1 178 1 142 1 224 1 94 1 349 1 75 1 289 1 352 1 334 1 119 1 273 1 249 1 61 1 250 1 362 1 292 1 13 1 255 3 234 1 259 1 83 1 281 1 315 1 85 1 84 1 45 4 190 1 162 1 300 1 
255 2 70 2 263 1 45 2 61 1 270 1 190 1 92 1 111 1 
70 3 169 1 26 1 61 2 13 1 292 1 92 3 111 3 196 1 142 1 224 1 255 3 281 1 349 1 75 1 45 3 47 1 19 1 300 1 
70 2 61 1 26 1 92 2 125 1 111 2 142 1 255 2 45 2 261 1 
2 1 70 1 264 1 24 1 173 1 234 1 259 1 83 1 45 1 84 1 85 1 190 1 119 1 334 1 162 1 
2 1 70 1 264 1 24 1 278 1 53 1 185 1 234 1 259 1 281 1 83 1 45 1 84 1 85 1 190 1 334 1 162 1 
194 1 135 1 284 4 324 2 326 1 55 1 71 2 143 1 346 1 269 1 352 1 99 1 272 1 357 1 149 1 273 1 249 1 122 2 362 1 125 2 209 1 232 1 65 2 261 2 
255 1 70 1 281 1 45 1 92 1 87 1 196 1 111 1 
287 1 175 1 
287 1 175 1 
11 1 275 1 
11 1 275 1 
11 1 275 1 
327 1 287 1 175 1 
11 1 336 1 275 1 208 1 287 2 175 2 
198 1 287 1 175 1 
327 1 287 1 175 1 
327 1 287 1 175 1 
226 1 287 1 175 1 
226 1 287 1 175 1 
226 1 287 1 175 1 
69 1 70 2 241 1 92 2 111 2 287 1 175 1 329 1 221 1 224 1 198 1 247 1 75 1 36 1 152 1 103 1 42 1 255 2 104 1 45 2 190 1 282 1 48 1 301 1 
335 1 262 2 152 2 360 1 103 2 12 1 208 1 175 2 287 2 329 2 224 2 15 1 104 1 131 1 247 2 75 2 47 1 282 3 49 1 
217 1 238 1 305 1 
238 1 155 1 305 1 
151 1 217 2 170 1 246 1 155 1 305 3 
151 1 217 1 246 1 155 1 305 2 231 1 
217 1 151 1 246 2 155 1 305 2 
20 1 21 2 69 1 323 1 171 1 240 2 110 1 140 4 345 1 223 1 224 5 225 1 146 1 32 2 75 5 98 1 99 1 33 3 357 1 149 1 308 3 36 1 57 1 102 1 127 2 232 1 365 1 105 1 47 2 48 1 235 1 191 1 
192 1 224 2 294 1 108 1 75 2 97 1 140 2 
20 1 308 1 323 1 325 1 171 1 140 1 345 1 224 2 225 1 365 1 75 2 105 1 
20 1 308 1 323 1 153 1 325 1 171 1 345 1 224 1 225 1 365 1 75 1 105 1 
24 1 350 1 242 1 
24 1 359 1 
248 1 
24 1 162 1 334 1 
168 1 24 1 
24 1 162 1 
24 3 260 1 242 2 162 1 334 1 304 1 
357 1 10 1 193 1 194 2 218 2 284 7 28 1 71 3 303 1 346 3 232 1 179 1 65 4 96 1 161 1 78 1 100 1 
357 1 10 1 193 1 194 2 218 2 284 7 28 1 71 3 303 1 346 3 232 1 179 1 65 4 96 1 161 1 78 1 100 1 
357 1 10 1 193 1 194 2 218 2 284 7 28 1 71 3 303 1 346 3 232 1 347 1 179 1 65 4 96 1 161 1 78 1 100 1 
193 1 194 5 284 31 218 3 25 1 324 2 326 1 55 1 28 2 71 15 303 2 346 10 95 3 179 2 96 1 268 1 146 3 99 3 78 1 356 1 100 5 10 1 149 3 357 4 273 1 362 1 293 4 311 1 232 4 64 1 65 16 134 1 211 1 161 2 
193 1 194 3 284 14 218 2 324 2 326 1 55 1 28 2 303 1 71 6 141 1 346 4 179 1 354 1 78 2 100 1 10 1 357 3 273 1 362 1 232 3 65 8 86 1 161 2 
163 1 0 1 217 1 2 1 238 1 170 1 321 1 322 1 52 1 265 1 286 1 27 1 219 1 332 1 305 2 34 1 206 1 276 1 277 2 155 1 279 1 254 2 339 1 43 1 234 1 259 1 84 1 85 1 299 1 88 1 
163 1 0 1 217 1 2 1 238 1 170 1 321 1 322 1 286 1 27 1 54 1 344 1 219 1 332 1 305 2 34 2 204 1 206 1 276 1 277 3 155 1 279 1 254 3 339 1 43 1 234 1 259 1 84 1 85 1 88 1 
163 1 0 1 2 1 217 1 170 1 238 1 321 1 322 1 286 1 27 1 54 1 344 1 219 1 332 1 305 2 34 2 276 1 277 2 155 1 279 1 254 2 234 1 259 1 84 1 85 1 
1 1 2 1 322 2 264 1 321 2 24 1 91 1 219 2 5 1 80 1 81 1 204 1 276 2 277 1 254 1 157 1 43 1 234 1 259 1 85 1 84 1 88 1 162 1 
217 1 2 1 238 1 170 1 321 1 322 1 52 1 27 1 344 1 219 1 332 1 305 2 206 1 276 1 277 1 155 1 279 1 254 1 339 1 43 1 234 1 259 1 84 1 85 1 299 1 88 1 
74 1 
51 1 2 2 136 1 91 1 196 1 98 1 201 2 202 4 101 2 102 1 59 1 13 1 157 1 255 1 259 2 295 1 296 2 105 1 160 2 162 1 214 1 343 1 164 1 70 1 169 1 264 2 24 1 263 1 171 1 110 6 177 2 224 5 114 2 225 1 349 1 32 2 75 5 33 2 308 2 309 1 39 1 363 1 124 2 230 1 187 1 129 1 234 2 365 1 281 1 84 1 85 1 45 1 47 2 235 2 191 3 
101 1 136 1 70 1 169 1 263 1 59 1 13 1 110 2 196 1 230 1 93 1 224 3 187 1 129 1 255 1 295 1 281 1 349 1 75 3 45 1 202 2 191 1 
136 1 70 1 169 1 263 1 59 1 13 1 110 1 196 1 230 1 93 1 177 1 224 3 187 1 129 1 255 1 295 1 281 1 349 1 75 3 45 1 47 1 98 1 202 3 191 1 
169 1 70 1 136 1 263 1 110 2 196 1 93 1 177 1 224 3 349 1 75 3 98 1 202 3 101 1 59 1 13 1 230 1 187 1 129 1 255 1 295 1 281 1 45 1 296 1 47 1 191 1 
136 1 239 1 196 1 93 1 144 1 98 5 202 6 201 2 101 4 102 1 59 1 13 1 255 1 295 1 296 4 160 2 169 1 70 1 263 1 171 1 110 7 177 4 224 5 225 1 114 2 349 1 75 5 32 1 308 1 79 1 274 1 39 1 82 1 363 1 124 2 230 1 187 1 129 1 281 1 365 1 45 1 47 5 191 3 235 2 
136 1 196 1 98 1 202 4 201 2 102 1 101 2 59 1 13 1 255 1 295 1 296 2 160 2 169 1 70 1 263 1 171 1 110 4 177 2 224 4 225 1 114 2 349 1 75 4 32 1 33 2 308 1 39 1 309 1 363 1 124 2 230 1 187 1 129 1 281 1 365 1 45 1 47 2 235 2 191 2 
169 1 70 1 136 1 263 1 239 1 171 1 110 4 196 1 177 2 224 4 114 2 225 1 349 1 32 1 75 4 98 1 201 2 202 4 308 1 274 1 101 2 102 1 59 1 39 1 13 1 363 1 82 1 124 2 230 1 187 1 129 1 255 1 295 1 365 1 281 1 296 2 45 1 47 1 160 2 191 2 235 2 
169 1 70 1 136 1 263 1 239 1 171 1 110 4 196 1 177 2 224 4 114 2 225 1 349 1 32 1 75 4 98 1 201 2 202 4 308 1 274 1 101 2 102 1 59 1 39 1 13 1 363 1 82 1 124 2 230 1 187 1 129 1 255 1 295 1 365 1 281 1 296 2 45 1 47 1 160 2 191 2 235 2 
169 1 70 1 136 1 263 1 239 1 171 1 110 4 196 1 177 2 224 4 245 1 114 2 225 1 349 1 32 1 75 4 98 1 33 2 201 2 202 4 307 2 308 1 101 2 102 1 59 1 39 1 310 1 13 1 252 2 230 1 187 1 129 1 255 1 295 1 365 1 281 1 296 2 45 1 342 1 47 1 191 2 
169 1 70 1 136 1 263 1 239 1 171 1 110 5 196 1 177 3 224 4 144 1 114 2 225 1 349 1 32 1 75 4 98 1 201 2 202 5 308 1 274 1 102 1 101 3 59 1 39 1 13 1 363 1 82 1 124 2 230 1 187 1 129 1 255 1 295 1 365 1 281 1 45 1 296 3 47 1 160 2 191 2 235 2 
169 1 70 1 136 1 263 1 239 1 171 1 110 5 196 1 177 3 224 4 144 1 114 2 225 1 349 1 32 1 75 4 98 1 201 2 202 5 308 1 274 1 102 1 101 3 59 1 39 1 13 1 363 1 82 1 124 2 230 1 187 1 129 1 255 1 295 1 365 1 281 1 45 1 296 3 47 1 160 2 191 2 235 2 
136 1 196 1 98 1 202 4 201 2 102 1 101 2 59 1 13 1 252 2 255 1 295 1 296 2 169 1 70 1 263 1 171 1 110 4 177 2 224 4 225 1 114 2 349 1 75 4 32 1 33 2 307 2 308 1 39 1 309 1 310 1 230 1 187 1 129 1 281 1 365 1 45 1 47 1 191 2 
193 1 194 2 284 6 218 1 324 2 326 1 55 1 28 1 71 3 143 1 346 2 350 1 352 1 78 1 10 1 357 1 273 1 249 1 122 1 362 1 125 1 232 1 65 3 261 1 190 2 161 1 
22 1 194 1 284 14 324 4 139 1 326 2 55 2 71 6 330 1 346 2 95 3 146 2 352 2 99 2 100 1 149 1 357 1 273 2 121 1 227 1 58 1 249 1 122 11 362 2 125 4 293 3 232 2 64 1 65 8 315 1 190 1 261 11 211 1 
216 1 165 1 2 1 70 2 284 2 24 1 264 1 324 2 173 1 326 1 92 1 55 1 111 1 71 1 330 1 352 1 334 1 119 1 273 1 121 1 249 1 61 1 362 1 125 1 234 1 255 1 256 1 259 1 83 1 65 1 366 1 85 1 84 1 45 2 315 1 190 1 162 1 300 1 
317 1 193 1 2 1 194 4 284 21 324 4 53 1 326 2 55 2 92 1 330 1 94 1 145 1 146 2 99 2 100 1 334 1 148 1 10 1 149 2 205 2 249 2 61 1 338 1 255 1 259 1 65 10 261 6 161 1 300 1 162 1 70 2 264 1 24 1 173 1 28 1 111 1 71 11 346 5 352 2 78 1 119 1 357 4 273 2 37 2 122 6 362 2 125 6 232 4 234 1 281 1 83 1 315 1 45 2 84 1 85 1 86 1 190 1 
89 1 2 8 70 1 284 2 24 3 264 2 91 1 265 1 324 4 138 1 344 1 328 1 326 2 92 1 55 2 111 1 71 1 222 1 143 1 352 2 118 1 291 1 273 2 121 1 249 2 228 1 61 1 183 2 362 2 157 1 255 1 234 7 259 8 65 1 45 1 85 2 84 2 315 1 162 2 
194 1 70 1 284 3 26 1 324 2 326 1 55 1 92 1 111 1 71 2 330 1 142 1 346 1 146 1 352 1 77 1 99 1 149 1 357 1 273 1 249 1 122 1 362 1 125 1 232 1 255 1 65 1 45 1 261 1 
273 1 135 1 284 2 249 1 122 1 324 2 326 1 362 1 55 1 125 1 346 1 143 1 232 1 65 2 261 1 352 1 99 1 100 1 
149 1 357 1 273 1 194 1 284 2 249 1 122 1 324 2 326 1 362 1 55 1 125 1 71 2 346 1 143 1 261 1 352 1 272 1 
194 1 284 4 324 2 326 1 55 1 71 2 143 1 346 2 146 1 99 1 352 1 100 1 149 1 357 1 273 1 249 1 122 2 362 1 125 2 232 1 65 2 261 2 
89 1 273 1 135 1 284 2 249 1 122 1 324 2 326 1 362 1 55 1 125 1 346 1 232 1 65 2 261 1 352 1 99 1 100 1 
149 1 357 1 89 1 273 1 194 1 284 2 249 1 122 1 324 2 326 1 362 1 55 1 125 1 71 2 346 1 261 1 352 1 272 1 
89 1 194 1 284 4 324 2 326 1 55 1 71 2 346 2 146 1 99 1 352 1 100 1 149 1 357 1 273 1 249 1 122 2 362 1 125 2 232 1 65 2 261 2 
194 1 284 4 324 2 326 1 55 1 71 2 346 2 146 1 99 1 352 1 100 1 149 1 357 1 273 1 249 1 122 2 362 1 125 2 232 1 65 2 261 2 
2 1 284 2 70 1 264 1 24 1 324 2 173 1 326 1 55 1 71 1 94 1 352 1 334 1 119 1 273 1 121 1 249 1 362 1 234 1 259 1 65 1 83 1 85 1 84 1 45 1 315 1 190 1 162 1 
2 1 284 1 70 1 264 1 24 1 324 2 53 1 326 1 55 1 71 1 352 1 334 1 273 1 249 1 278 1 362 1 185 1 234 1 259 1 281 1 83 1 85 1 84 1 45 1 315 1 190 1 212 1 162 1 
194 1 284 4 324 2 326 1 55 1 71 2 330 1 346 2 146 1 99 1 352 1 100 1 149 1 357 1 273 1 249 1 122 2 362 1 125 2 232 1 65 2 261 2 
194 1 2 1 284 4 70 1 24 1 265 1 324 2 173 1 326 1 55 1 71 2 346 2 94 1 146 1 99 1 352 1 100 1 334 1 119 1 357 1 149 1 273 1 249 1 122 2 362 1 125 2 338 1 232 1 234 1 259 1 65 2 83 1 85 1 84 1 45 1 261 2 162 1 
70 1 284 3 26 1 324 2 326 1 55 1 92 1 111 1 71 1 330 1 142 1 346 1 115 1 146 1 352 1 99 1 100 1 357 1 149 1 273 1 249 1 122 1 362 1 125 1 232 1 255 1 65 2 45 1 261 1 
194 3 284 19 302 1 324 4 326 2 243 1 55 2 71 10 141 1 346 6 95 1 146 3 99 3 353 2 100 3 149 3 357 3 273 2 362 2 126 2 293 2 128 1 312 1 232 3 258 1 16 1 64 1 65 9 368 1 211 1 
194 1 195 1 284 17 302 1 324 4 326 2 55 2 71 8 72 1 141 1 346 1 95 2 113 1 146 2 99 2 353 2 357 1 149 1 273 2 181 1 60 1 362 2 311 1 128 2 293 2 312 2 232 2 16 1 65 9 211 2 
195 1 194 2 284 30 302 1 324 6 326 3 243 1 55 3 71 15 72 1 141 1 346 4 95 3 113 1 146 4 7 1 99 4 353 3 100 2 149 3 357 3 273 3 181 1 60 1 362 3 126 1 311 1 293 4 128 2 312 1 232 4 258 1 16 1 64 1 65 15 211 3 
195 1 194 3 284 30 302 1 324 6 326 3 243 1 55 3 71 15 72 1 141 1 346 5 95 3 113 1 146 4 7 1 99 4 353 3 100 2 149 3 357 3 273 3 181 1 60 1 362 3 126 1 311 1 293 4 128 2 312 1 232 4 258 1 16 1 64 1 65 15 211 3 
193 1 22 2 195 1 194 6 218 1 284 41 302 1 324 2 326 1 55 1 28 1 71 19 72 1 141 1 346 10 95 4 113 1 146 6 99 6 78 1 353 2 100 4 10 1 149 5 357 6 273 1 181 1 60 1 362 1 293 4 128 1 312 1 232 7 16 1 64 2 65 22 211 2 161 1 
2 2 70 2 284 2 24 1 137 1 324 2 328 1 326 1 55 1 30 1 220 1 71 1 330 1 288 1 352 1 290 1 291 1 273 1 121 1 249 1 183 2 362 1 255 2 234 2 259 2 65 1 85 1 84 1 45 2 315 1 162 1 
217 1 2 2 319 1 238 1 170 1 321 1 206 1 265 1 27 1 155 1 344 1 279 1 234 2 259 2 116 1 85 1 84 1 305 2 333 1 
217 1 2 1 319 1 238 1 170 1 321 1 206 1 27 1 155 1 344 1 279 1 234 1 259 1 84 1 85 1 46 1 305 2 
2 1 24 1 264 1 321 1 91 1 157 1 5 1 234 1 259 1 197 1 85 1 84 1 333 1 162 1 
217 1 2 1 319 1 238 1 170 1 321 1 206 1 27 1 155 1 344 1 279 1 234 1 259 1 116 1 85 1 84 1 305 2 333 1 
355 1 
308 1 167 1 350 1 32 1 47 1 98 1 316 1 
171 1 110 1 224 1 225 1 32 1 75 1 98 1 33 1 308 1 102 1 363 1 124 1 365 1 47 2 160 1 235 1 191 1 
283 2 318 2 2 3 237 2 285 2 242 2 56 1 146 2 98 2 99 2 8 1 334 2 149 2 150 2 102 4 205 2 337 1 13 2 259 3 105 2 298 2 18 1 162 2 214 1 21 6 167 1 168 1 24 8 264 1 265 1 171 4 110 5 304 1 224 5 225 4 75 5 32 8 33 12 357 2 308 9 359 3 229 1 186 2 127 6 232 2 234 3 365 4 85 3 84 2 133 1 47 8 316 1 191 3 235 6 
236 1 21 4 195 1 171 2 110 1 72 1 224 1 95 1 113 1 225 2 146 1 75 1 32 3 98 1 99 1 33 6 149 1 357 1 308 5 102 2 181 1 60 1 186 1 127 4 293 1 232 1 365 2 47 4 211 1 191 1 235 3 
237 1 70 1 171 1 26 1 92 1 28 1 111 1 224 1 225 1 348 1 75 1 32 2 147 1 78 1 357 1 308 2 274 1 102 1 250 1 186 2 232 2 255 1 281 1 365 1 189 1 45 1 86 1 161 1 
308 1 102 1 365 1 225 1 32 1 171 1 47 1 98 1 316 1 
149 1 357 1 21 1 308 1 127 1 232 1 146 1 32 2 47 1 99 1 33 2 235 1 
224 1 75 1 47 1 98 1 110 1 191 1 
343 1 214 1 51 1 2 2 24 1 264 2 91 1 325 1 171 2 110 2 224 2 56 1 225 2 32 1 75 2 308 1 102 1 157 1 234 2 259 2 365 2 85 1 84 1 105 1 162 1 191 1 
2 1 284 1 70 3 264 1 24 1 324 2 26 2 173 1 326 1 55 1 92 2 111 2 71 1 94 1 289 1 352 1 119 1 334 1 273 1 249 1 250 1 362 1 234 1 255 2 259 1 83 1 315 1 45 3 84 1 85 1 190 1 162 1 
214 1 21 2 308 1 218 1 102 1 171 1 127 2 225 1 365 1 32 2 105 1 98 2 47 4 33 4 235 2 
267 1 152 1 247 1 
152 1 247 1 49 1 31 1 221 1 
267 1 152 1 247 1 
267 1 152 1 247 1 
188 1 152 1 247 1 
188 1 152 1 247 1 
188 1 152 1 247 1 
152 1 247 1 
287 1 175 1 
357 1 10 1 273 2 193 1 194 2 218 1 284 8 324 4 326 2 362 2 55 2 28 1 71 4 311 1 346 3 232 1 65 4 161 1 78 1 100 1 
10 1 357 1 193 1 194 2 218 1 284 6 28 1 71 3 346 2 232 1 65 3 350 1 161 1 78 1 
357 1 149 1 166 1 273 1 194 1 284 4 324 2 326 1 362 1 55 1 71 2 346 2 232 1 65 2 146 1 99 1 100 1 
357 1 149 1 194 1 284 7 71 4 293 2 346 2 232 1 95 1 64 1 65 3 146 1 211 1 99 1 100 1 
193 1 22 1 194 5 218 1 284 23 324 4 326 2 55 2 28 2 71 12 346 9 95 2 146 2 99 2 78 1 100 4 10 1 149 2 357 3 273 2 227 1 361 1 362 2 293 2 311 2 232 3 64 1 65 11 161 2 
284 1 71 1 293 1 
95 1 284 1 65 1 
149 1 357 1 273 1 166 1 194 2 284 6 205 1 324 2 362 1 326 1 55 1 71 3 346 3 232 1 65 3 146 1 99 1 100 1 
357 1 149 1 273 1 194 1 195 1 284 10 181 1 60 1 324 2 326 1 362 1 55 1 71 4 72 1 141 1 293 1 346 1 232 2 95 1 113 1 65 6 146 2 99 2 211 1 
357 1 194 1 284 6 28 1 71 3 346 2 232 1 65 3 161 1 78 1 100 1 
10 1 273 1 193 1 194 1 284 3 361 1 324 2 326 1 362 1 55 1 28 1 71 2 311 1 346 2 65 1 161 1 100 1 
357 2 273 1 194 3 284 10 324 2 362 1 326 1 55 1 28 2 71 5 141 1 346 5 232 2 65 5 86 1 161 2 78 1 100 2 
273 1 284 2 324 2 326 1 362 1 55 1 141 1 346 1 232 1 65 2 99 1 100 1 
357 1 149 1 273 1 194 1 284 4 324 2 326 1 362 1 55 1 71 2 141 1 346 2 232 1 65 2 146 1 99 1 100 1 
273 3 194 1 284 3 361 1 324 6 326 3 362 3 243 1 55 3 28 1 71 2 311 1 141 1 346 2 65 1 161 1 100 1 
193 1 166 1 194 7 218 1 284 34 324 10 326 5 243 1 55 5 28 3 71 18 141 1 346 12 95 3 268 1 146 3 99 3 78 2 356 1 100 5 10 1 149 3 357 5 273 5 361 1 362 5 311 2 293 4 232 5 64 1 65 16 134 1 211 1 161 3 
193 1 194 2 218 1 284 8 324 2 326 1 55 1 28 1 71 4 141 1 346 2 95 1 113 1 78 1 357 1 10 1 273 1 362 1 293 1 232 1 65 4 211 1 161 1 
193 1 166 1 194 2 218 1 284 11 324 4 326 2 55 2 28 1 71 5 141 1 346 3 95 1 113 1 146 1 99 1 78 1 100 1 357 1 10 1 273 2 362 2 293 2 232 2 64 1 65 6 211 1 161 1 
195 1 194 1 284 11 324 4 326 2 55 2 71 5 72 1 141 1 346 1 95 1 113 1 146 2 99 2 149 1 357 1 273 2 181 1 60 1 362 2 293 1 311 1 232 2 65 6 211 1 
357 1 149 1 273 1 194 1 195 1 284 10 181 1 60 1 324 2 326 1 362 1 55 1 71 4 72 1 141 1 293 1 346 1 232 2 95 1 113 1 65 6 146 2 99 2 211 1 
193 1 194 2 218 1 284 8 324 2 326 1 55 1 28 1 71 4 141 1 346 2 95 1 113 1 78 1 357 1 10 1 273 1 362 1 293 1 232 1 65 4 211 1 161 1 
357 1 149 1 273 1 194 1 195 1 284 10 181 1 60 1 324 2 326 1 362 1 55 1 71 4 72 1 141 1 293 1 346 1 232 2 95 1 113 1 65 6 146 2 99 2 211 1 
166 1 195 1 194 1 284 11 324 6 326 3 55 3 71 5 72 1 141 1 346 1 95 1 113 1 146 2 99 2 149 1 357 1 273 3 181 1 60 1 362 3 293 1 311 1 232 2 65 6 211 1 
195 1 194 2 284 11 324 6 326 3 55 3 243 1 71 5 72 1 141 1 346 2 95 1 113 1 146 2 99 2 149 1 357 1 273 3 181 1 60 1 362 3 293 1 311 1 232 2 65 6 211 1 
357 1 10 2 193 1 194 3 284 7 28 3 71 4 346 6 232 1 65 3 161 3 78 1 100 3 
195 1 194 1 284 11 324 6 326 3 55 3 243 1 71 5 72 1 141 1 346 1 95 1 113 1 146 2 99 2 149 1 357 1 273 3 181 1 60 1 362 3 293 1 311 1 232 2 65 6 211 1 
14 1 255 1 70 1 263 1 45 1 270 1 190 1 
70 1 263 1 4 1 176 1 14 1 255 1 45 1 367 1 270 1 190 1 306 1 9 1 
157 1 2 1 234 1 259 1 24 1 264 1 91 1 350 1 85 1 84 1 162 1 
2 1 70 2 24 1 264 1 61 1 173 1 92 1 111 1 255 1 234 1 259 1 83 1 85 1 45 2 84 1 190 1 162 1 334 1 
2 1 70 2 168 1 24 3 53 1 173 1 92 2 111 1 196 1 349 1 334 2 61 1 229 1 234 1 255 2 259 1 83 1 281 2 84 1 45 2 85 1 190 1 18 1 162 2 
2 1 70 2 168 1 24 3 53 1 92 2 111 1 196 1 349 1 334 2 278 1 61 1 229 1 234 1 255 2 259 1 83 1 281 2 84 1 45 2 85 1 190 1 18 1 162 2 
2 1 70 1 168 1 24 4 26 1 266 1 92 1 242 1 110 1 111 1 224 2 348 1 75 2 147 1 98 1 334 1 359 1 250 1 229 1 13 1 313 1 255 1 234 1 259 1 281 1 189 1 45 1 84 1 85 1 47 1 18 1 162 1 
318 1 2 1 70 1 168 1 24 4 26 1 92 1 242 1 110 1 111 1 224 2 348 1 75 2 147 1 98 1 334 1 359 1 250 1 229 1 13 1 255 1 234 1 259 1 281 1 189 1 45 1 84 1 85 1 47 1 18 1 162 1 
2 1 234 1 259 1 85 1 84 1 228 1 
2 7 264 2 24 3 265 1 183 1 228 1 138 1 344 1 328 1 29 1 222 1 304 1 63 1 234 6 259 7 17 1 84 2 85 3 118 1 334 1 162 2 
317 1 193 1 194 2 2 1 218 1 284 6 70 2 24 1 137 1 265 1 324 4 326 2 173 1 92 1 55 2 28 1 111 1 71 3 330 1 346 2 94 1 352 2 78 1 334 1 119 1 357 1 10 1 273 2 249 2 122 1 61 1 362 2 125 1 338 1 232 1 255 1 234 1 259 1 65 3 83 1 85 1 84 1 45 2 261 1 190 2 161 1 162 1 
283 1 318 1 167 1 2 1 264 1 24 2 171 2 140 1 110 2 242 1 224 3 56 1 225 2 32 1 75 3 98 1 308 1 150 1 102 2 359 1 13 1 234 1 259 1 365 2 47 1 298 1 316 1 191 1 
2 2 24 2 265 1 228 1 337 1 242 1 304 1 234 2 259 2 84 1 85 2 334 1 162 1 
107 1 2 4 264 1 24 1 91 1 265 1 244 1 157 1 234 4 259 4 85 1 84 1 162 1 
2 2 24 1 251 1 29 1 73 1 41 1 234 2 259 2 17 1 84 1 85 2 18 1 334 1 162 1 
2 1 234 1 238 1 259 1 264 1 85 1 84 1 27 1 155 1 305 1 
2 2 24 1 265 1 344 1 328 1 30 1 234 2 259 2 84 1 85 1 162 1 
2 5 264 1 24 3 91 1 265 1 138 1 328 1 222 1 244 1 157 1 234 4 259 5 84 2 85 2 18 1 162 2 
2 5 264 1 24 3 91 1 265 1 328 1 222 1 244 1 157 1 234 4 259 5 132 1 84 2 85 2 18 1 162 2 
2 1 70 2 264 1 24 1 53 1 92 1 111 1 334 1 278 1 61 1 234 1 255 1 259 1 83 1 281 1 84 1 45 2 85 1 190 1 162 1 
2 1 24 1 29 1 304 1 63 1 234 1 259 1 17 1 84 1 85 2 18 1 334 1 162 1 
158 1 180 1 66 1 190 1 68 1 
50 1 180 2 169 1 13 1 292 1 140 1 123 1 196 1 224 2 158 2 281 1 66 1 349 1 314 1 75 2 190 1 47 1 98 1 68 2 
288 1 255 1 158 1 180 1 70 1 66 1 45 1 290 1 220 1 
50 1 66 1 123 1 
163 1 0 1 350 1 286 1 
163 1 254 1 0 1 43 1 286 1 277 1 88 1 
254 1 322 1 276 1 
163 1 0 1 215 1 203 1 52 1 277 3 182 2 286 1 254 3 43 1 341 1 88 1 
163 1 34 1 254 2 0 1 43 1 286 1 277 2 271 1 88 1 
0 1 217 1 238 1 52 1 277 1 62 1 254 1 43 1 257 1 305 1 88 1 
163 1 254 1 0 1 43 1 52 1 277 1 88 1 
163 2 254 1 43 1 52 1 286 1 277 1 88 1 
163 1 0 1 52 1 90 1 277 2 184 1 254 2 364 1 43 2 88 2 
163 1 34 2 0 2 52 1 286 1 277 3 62 1 3 1 112 1 254 3 43 1 297 1 88 1 
163 1 34 1 0 1 217 1 170 1 238 1 52 1 286 1 277 2 155 1 254 2 43 1 305 2 200 1 88 1 
163 1 34 2 0 2 52 1 286 1 277 4 154 1 62 1 3 1 254 4 43 2 271 1 88 2 
163 1 254 1 0 1 43 1 52 1 286 1 277 1 88 1 
163 2 34 2 215 1 0 3 203 1 182 1 286 2 277 4 62 1 3 1 254 4 43 1 340 1 88 1 
163 1 34 1 0 1 52 1 38 1 277 2 286 1 156 1 254 2 43 1 210 1 88 1 
163 1 215 1 0 1 203 2 52 1 277 3 182 2 286 1 254 3 43 1 351 1 88 1 
106 2 0 2 130 1 199 1 
254 1 43 1 52 1 67 1 277 1 88 1 
163 1 34 1 254 2 0 1 43 1 52 1 286 1 277 2 297 1 88 1 
120 1 
163 1 254 1 0 1 43 1 52 1 286 1 277 1 88 1 
34 1 163 1 0 1 52 1 277 3 182 1 286 1 254 3 43 1 297 1 88 1 
0 1 340 1 62 1 3 1 
163 1 0 1 

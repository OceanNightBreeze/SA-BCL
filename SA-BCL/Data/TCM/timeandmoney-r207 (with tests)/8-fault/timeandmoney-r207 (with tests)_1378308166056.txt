#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (129,188,372) (111,169,291) (111,169,291) (111,169,291) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 73 131 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 73 145 287 105 184 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 73 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 73 145 287 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 73 145 287 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 73 145 287 105 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 73 145 287 105 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 365 32 281 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 331 (29,119) (29,119) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (129,188,372) (129,188,372) (129,188,372) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 150 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 365 311 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 365 32 281 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4786 | = null
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3022 | < -> !=
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | RETURN | 5414 | return null
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration; | RETURN | 900 | return null
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 913 | + -> /
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1146 | 1 -> -1
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 0
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3771 | return null
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
161 1 34 1 255 2 256 2 174 1 94 3 168 2 273 1 308 1 45 1 342 1 353 3 202 1 
174 3 273 1 53 1 55 1 85 1 178 2 342 1 364 2 202 1 345 1 161 1 34 2 255 5 256 2 14 1 94 9 39 1 168 2 261 1 70 1 308 6 122 1 45 4 353 9 21 1 144 2 191 2 146 1 
174 3 273 1 53 1 55 1 85 1 178 2 342 1 364 2 202 1 345 1 161 1 34 2 255 5 256 2 14 1 94 9 39 1 168 2 261 1 70 1 308 6 122 1 45 4 353 9 21 1 144 2 191 2 146 1 
174 4 273 1 53 1 55 1 85 1 178 2 342 1 364 2 202 1 345 1 161 1 34 2 255 6 256 2 14 1 94 10 39 1 168 2 261 1 70 1 308 7 122 1 45 5 353 10 21 1 144 2 191 2 146 1 
174 2 273 1 53 1 55 1 85 1 178 2 342 1 364 1 202 1 345 1 161 1 34 2 255 4 256 2 94 7 39 1 168 2 261 1 70 1 308 4 122 1 45 3 353 7 21 1 144 2 191 2 146 1 
161 1 255 3 256 1 174 1 14 1 94 4 39 1 168 1 273 1 308 3 122 1 45 2 178 1 342 1 353 4 191 1 144 1 364 2 
161 1 148 1 255 1 34 1 256 1 94 2 269 1 168 1 273 1 55 1 178 1 342 1 353 2 21 1 253 1 191 1 
174 3 52 1 273 1 53 1 178 1 342 1 364 2 202 1 161 1 34 1 255 5 256 2 14 1 94 9 39 1 168 2 308 7 45 4 122 1 101 1 353 9 144 1 191 1 146 1 
174 3 52 1 273 1 53 1 178 1 342 1 364 2 202 1 161 1 34 1 255 5 256 2 14 1 94 9 39 1 168 2 308 7 45 4 122 1 101 1 353 9 144 1 191 1 146 1 
240 1 292 1 3 1 324 1 128 1 110 1 305 1 170 1 158 1 121 1 276 1 142 1 124 1 103 1 
208 1 
208 1 35 1 124 1 226 1 268 1 108 1 305 2 110 2 
335 2 292 1 240 1 193 1 3 1 106 1 128 1 268 1 339 1 110 5 362 1 158 1 6 1 86 5 276 1 114 1 58 2 181 1 346 1 204 4 35 2 279 1 324 1 67 1 368 2 226 2 98 2 305 5 170 1 208 2 121 1 142 1 263 2 103 1 102 2 172 1 124 2 313 1 
208 1 226 1 96 1 
197 2 208 1 20 1 
170 2 239 1 121 2 292 2 142 2 276 2 3 1 128 2 
266 1 239 1 292 2 3 1 128 3 176 1 338 1 297 1 177 1 29 1 198 2 276 2 113 1 251 1 59 1 64 2 11 1 133 2 9 2 65 1 322 1 36 1 323 1 225 1 170 3 327 1 19 1 331 1 121 2 142 2 262 1 332 1 373 1 333 1 233 2 235 1 376 1 
170 1 158 1 121 1 292 1 240 1 142 1 276 1 3 1 324 1 128 1 
170 1 247 1 208 1 158 1 209 1 142 1 285 1 128 1 226 1 359 1 183 1 305 1 110 1 44 1 
292 1 128 1 226 1 305 2 44 1 110 2 170 1 208 1 121 1 158 1 276 1 142 1 209 1 285 1 183 1 
35 1 124 1 305 1 110 1 318 1 
208 1 35 1 124 1 226 1 268 1 305 2 110 2 298 1 
35 1 305 1 110 1 
64 1 9 1 15 1 175 1 225 1 128 2 176 1 41 1 297 1 170 2 19 1 198 1 331 1 121 1 276 1 142 1 262 1 373 1 235 1 376 1 
292 1 239 1 128 2 352 1 170 2 371 1 158 1 121 1 142 2 276 1 314 1 
74 1 41 1 351 1 
64 1 9 1 239 1 128 1 225 1 176 1 297 1 170 1 198 1 19 1 331 1 262 1 123 1 373 1 235 1 376 1 
239 1 96 1 
170 5 54 1 329 1 301 1 239 1 292 1 121 4 142 5 276 4 15 1 175 2 128 5 359 1 352 1 
170 2 158 1 121 2 142 2 276 2 324 1 128 2 43 1 
170 3 292 1 239 1 121 3 142 3 276 3 175 1 128 3 
170 1 158 1 121 1 142 1 276 1 324 1 128 1 
292 1 128 1 352 1 170 1 121 1 158 1 276 1 142 1 314 1 
238 1 266 1 239 1 292 2 3 1 175 1 128 4 176 1 297 1 177 1 110 1 29 1 198 1 158 1 276 3 59 1 183 1 64 1 133 2 9 1 65 1 322 1 323 1 66 1 15 1 225 1 352 1 44 1 305 1 170 4 327 1 19 1 331 1 121 3 142 3 209 1 262 1 285 1 332 1 373 1 333 1 233 1 235 1 376 1 
170 2 329 1 239 1 121 1 142 2 276 1 175 1 128 2 359 1 
238 1 292 1 15 1 175 2 128 3 352 1 305 1 110 1 44 1 139 1 170 3 208 1 158 1 121 3 276 3 142 3 209 1 285 1 183 1 
292 1 175 1 128 2 41 1 351 1 352 1 170 2 121 2 276 2 142 2 
64 1 9 1 239 1 128 1 225 1 176 1 297 1 170 1 198 1 19 1 331 1 262 1 373 1 235 1 376 1 
64 1 9 1 239 1 128 1 225 1 176 1 155 1 297 1 120 1 170 1 198 1 19 1 262 1 235 1 376 1 
316 1 153 1 336 1 177 1 274 1 223 1 59 1 203 1 133 2 118 1 322 1 65 2 36 2 323 1 205 1 41 2 351 2 98 1 332 1 102 1 333 1 74 2 23 1 233 4 
170 1 158 1 121 1 142 1 276 1 285 1 128 1 43 1 
79 1 354 1 83 1 
219 1 312 1 79 2 243 1 104 1 83 2 
79 1 83 1 
79 1 83 1 
312 1 243 1 
312 1 243 1 
312 1 243 1 
79 1 83 1 126 1 
79 1 83 1 126 1 
79 1 83 1 126 1 
330 1 79 1 83 1 
330 1 79 1 83 1 
330 1 79 1 83 1 
239 1 79 1 78 1 154 1 128 2 294 1 107 1 51 1 83 1 110 1 31 1 276 2 160 1 347 1 38 1 229 1 305 1 170 2 140 1 310 1 121 2 142 2 354 1 75 1 
347 2 91 1 79 2 38 2 95 1 51 3 83 2 229 2 97 1 110 2 305 2 30 1 246 1 219 1 208 1 310 2 282 1 57 2 75 1 
162 1 178 2 144 1 269 1 5 2 
178 1 191 1 144 1 
178 1 191 1 269 1 
162 1 213 1 178 3 144 2 269 1 5 1 
162 1 220 1 178 2 144 1 269 1 5 1 
193 1 4 1 78 1 154 1 336 1 294 1 268 1 110 5 197 3 156 1 86 2 199 1 180 2 58 1 204 3 118 1 35 1 13 1 368 1 37 1 226 1 18 1 17 2 98 1 305 5 328 2 20 1 208 2 263 1 232 1 102 1 124 4 
240 1 292 1 3 1 128 1 110 2 318 1 158 1 276 1 10 1 35 1 324 1 226 1 305 2 170 1 208 1 121 1 283 1 142 1 124 2 103 1 24 1 
4 1 106 1 78 1 336 1 110 3 197 4 156 1 86 2 199 1 180 2 58 1 204 3 118 1 13 1 368 1 226 1 17 1 18 1 305 3 98 1 328 2 208 3 20 2 263 1 102 1 124 2 
151 1 293 1 106 1 4 1 78 2 336 2 110 4 197 7 156 1 86 4 199 1 180 4 58 1 367 1 204 5 118 2 13 1 368 1 226 1 17 2 18 2 305 4 98 2 328 4 208 4 20 3 263 1 102 2 124 3 
275 1 
262 1 210 1 96 1 
262 1 241 1 
19 1 262 1 297 1 
262 1 84 1 
19 1 262 1 
19 1 262 3 221 1 210 2 264 1 297 1 
346 1 65 3 2 1 36 4 92 1 67 1 325 2 304 1 244 1 98 1 274 2 361 1 102 1 172 1 250 1 23 3 233 7 277 1 
2 1 336 3 82 1 177 1 244 5 274 5 361 1 250 2 343 1 277 1 320 1 346 1 133 2 322 1 163 1 65 15 185 1 118 3 36 16 67 2 325 3 304 2 93 1 18 3 258 4 350 3 98 4 207 1 332 1 172 2 102 4 333 1 23 10 233 31 
2 1 295 1 177 2 244 1 274 3 361 1 250 1 343 1 366 1 346 1 133 4 322 2 65 4 36 5 325 2 67 1 304 1 98 1 332 2 102 1 172 1 333 2 23 4 233 9 
346 1 65 3 2 1 36 4 67 1 325 2 304 1 244 1 98 1 274 2 361 1 102 1 172 1 250 1 23 3 233 7 277 1 
346 1 65 3 2 1 36 4 67 1 325 2 304 1 244 1 98 1 274 2 361 1 102 1 172 1 250 1 23 3 233 7 277 1 
176 1 296 1 198 1 341 2 90 1 7 1 64 1 9 1 34 2 256 1 165 1 138 1 94 1 168 1 206 2 69 1 231 1 19 1 353 1 262 1 143 2 235 1 376 1 
291 1 149 1 213 1 176 1 269 1 273 1 111 1 198 1 341 1 178 2 222 1 64 1 9 1 34 1 256 1 94 1 168 1 169 1 206 1 353 1 372 1 143 1 191 1 144 1 235 1 192 1 
291 1 149 1 34 1 256 1 214 1 94 1 168 1 169 1 206 1 273 1 111 1 341 1 372 1 353 1 143 1 
291 1 213 1 149 1 176 1 269 1 198 1 341 1 178 2 342 1 222 1 161 1 64 1 9 1 255 1 34 1 256 1 166 1 94 3 168 1 169 1 206 1 69 1 308 2 353 3 372 1 143 1 191 1 144 1 235 1 192 1 
213 1 176 1 269 1 198 1 341 1 178 2 342 1 222 1 161 1 64 1 9 1 255 1 34 1 166 1 94 2 169 1 206 1 308 2 353 2 372 1 143 1 144 1 191 1 235 1 192 1 
61 1 
193 1 110 3 198 2 247 1 158 1 199 1 159 1 200 1 58 1 64 2 9 2 204 2 165 1 257 1 68 1 349 1 305 3 170 1 19 1 71 1 209 1 262 1 263 1 73 1 357 1 128 1 268 1 176 1 217 1 359 1 86 2 183 1 131 1 134 1 35 2 368 1 136 1 40 1 44 1 231 1 142 1 285 1 235 1 376 2 147 2 
134 1 35 2 357 1 242 1 128 1 268 1 257 1 68 1 108 1 359 1 44 1 110 3 305 3 170 1 247 1 158 1 71 1 209 1 142 1 285 1 183 1 147 2 
134 1 35 1 80 1 357 1 128 1 268 1 226 1 257 1 68 1 108 1 359 1 44 1 110 3 305 3 170 1 247 1 208 1 158 1 71 1 209 1 142 1 285 1 183 1 147 3 
80 1 357 1 128 1 242 1 268 1 108 1 359 1 271 1 110 3 247 1 158 1 183 1 134 1 35 2 68 1 257 1 226 1 305 3 44 1 170 1 208 1 71 1 142 1 209 1 285 1 147 3 
193 1 357 1 128 1 242 2 268 1 108 1 359 1 271 2 110 3 247 1 86 1 158 1 159 1 58 1 115 1 183 1 204 1 134 1 35 3 184 1 368 1 68 1 257 1 136 1 40 1 305 3 44 1 170 1 71 1 142 1 209 1 285 1 263 1 287 1 73 1 145 1 105 1 147 2 
193 1 357 1 128 1 359 1 110 2 247 1 86 1 158 1 159 1 58 1 183 1 204 1 134 1 368 1 68 1 257 1 136 1 40 1 305 2 44 1 170 1 71 1 142 1 209 1 285 1 263 1 73 1 147 2 
193 1 357 1 128 1 359 1 110 2 247 1 86 1 158 1 159 1 58 1 115 1 183 1 204 1 134 1 368 1 68 1 257 1 136 1 40 1 305 2 44 1 170 1 71 1 142 1 209 1 285 1 287 1 263 1 73 1 145 1 147 2 
193 1 357 1 128 1 359 1 110 2 247 1 86 1 158 1 159 1 58 1 115 1 183 1 204 1 134 1 368 1 68 1 257 1 136 1 40 1 305 2 44 1 170 1 71 1 142 1 209 1 285 1 287 1 263 1 73 1 145 1 147 2 
193 1 80 2 317 2 357 1 242 2 128 1 268 2 271 2 359 1 218 1 110 4 197 2 247 1 86 1 158 1 159 2 58 1 344 1 183 1 204 1 134 1 35 4 368 1 226 1 68 1 257 1 136 2 42 1 307 2 305 4 44 1 170 1 208 1 71 1 142 1 209 1 285 1 263 1 73 1 145 1 147 4 
193 1 80 1 357 1 128 1 242 1 359 1 271 1 110 2 247 1 86 1 158 1 159 1 58 1 115 1 183 1 204 1 134 1 35 1 368 1 68 1 257 1 136 1 40 1 305 2 44 1 170 1 71 1 142 1 209 1 285 1 263 1 287 1 73 1 145 1 105 1 147 3 
193 1 80 1 357 1 128 1 242 1 359 1 271 1 110 2 247 1 86 1 158 1 159 1 58 1 115 1 183 1 204 1 134 1 35 1 368 1 68 1 257 1 136 1 40 1 305 2 44 1 170 1 71 1 142 1 209 1 285 1 263 1 287 1 73 1 145 1 105 1 147 3 
193 1 242 2 110 4 197 2 247 1 158 1 159 2 58 1 204 1 257 1 68 1 305 4 307 2 170 1 208 1 71 1 209 1 263 1 73 1 317 2 80 2 357 1 128 1 268 2 359 1 271 2 86 1 183 1 134 1 35 4 368 1 226 1 136 2 42 1 44 1 142 1 285 1 284 1 147 4 
266 1 356 1 214 1 153 1 175 1 128 1 176 1 338 1 177 2 198 3 32 1 276 1 59 2 365 1 64 3 9 3 133 4 11 1 322 2 65 1 323 2 36 1 165 1 369 1 170 1 231 1 281 1 19 1 121 1 142 1 262 1 332 2 333 2 235 1 233 2 376 2 
127 1 292 1 336 1 128 1 177 1 274 1 276 1 59 1 182 1 133 2 322 1 118 1 65 2 323 1 36 1 18 1 41 1 351 1 352 1 98 1 170 1 121 1 142 1 332 1 102 1 74 1 333 1 23 1 233 3 
2 1 239 2 153 1 177 1 274 2 361 1 59 1 346 1 133 2 322 1 65 3 323 1 36 3 67 1 325 1 41 1 351 1 96 1 98 1 332 1 172 1 102 1 333 1 74 1 23 2 233 6 
266 1 239 1 336 2 244 1 177 2 274 1 248 1 59 2 182 1 320 1 11 1 133 4 300 1 65 6 322 2 163 1 118 1 323 1 36 8 16 1 18 2 258 3 41 11 350 3 351 4 98 2 99 1 332 2 102 1 333 2 74 11 23 2 233 14 
266 1 239 1 175 1 128 2 176 1 297 1 177 1 340 1 198 1 276 1 59 1 182 1 321 1 64 1 9 1 133 2 11 1 322 1 65 1 323 1 36 1 15 1 225 1 351 1 170 2 19 1 331 1 121 1 142 1 262 1 123 1 373 1 332 1 333 1 49 1 235 1 233 2 376 1 
150 2 2 1 239 1 336 2 339 1 297 2 244 1 198 1 158 1 59 3 346 1 64 1 11 1 9 1 65 11 118 2 15 1 67 1 119 2 18 2 351 6 306 1 170 3 19 2 121 1 262 2 172 1 74 6 23 5 266 1 175 1 128 3 176 2 177 3 27 2 29 2 274 4 361 1 276 1 89 2 182 1 133 6 322 3 323 3 36 11 225 2 370 1 41 6 98 4 371 1 331 2 142 1 332 3 373 2 102 4 333 3 233 22 235 2 376 1 
133 2 322 1 323 1 36 2 153 1 336 1 41 1 244 1 351 1 177 1 98 1 332 1 74 1 333 1 23 1 59 1 233 2 203 1 
133 2 316 1 322 1 118 1 65 2 323 1 153 1 41 1 351 1 177 1 274 1 332 1 102 1 74 1 333 1 23 1 59 1 233 2 
336 1 153 1 177 1 244 1 274 1 59 1 133 2 322 1 118 1 65 2 36 2 323 1 18 1 41 2 351 2 98 1 332 1 102 1 333 1 74 2 23 2 233 4 
133 2 356 1 322 1 323 1 36 2 336 1 41 1 244 1 351 1 177 1 98 1 332 1 74 1 333 1 23 1 59 1 233 2 203 1 
133 2 356 1 316 1 322 1 118 1 65 2 323 1 41 1 351 1 177 1 274 1 332 1 102 1 74 1 333 1 23 1 59 1 233 2 
356 1 336 1 177 1 244 1 274 1 59 1 133 2 322 1 118 1 65 2 36 2 323 1 18 1 41 2 351 2 98 1 332 1 102 1 333 1 74 2 23 2 233 4 
336 1 177 1 244 1 274 1 59 1 133 2 322 1 118 1 65 2 36 2 323 1 18 1 41 2 351 2 98 1 332 1 102 1 333 1 74 2 23 2 233 4 
266 1 239 1 128 1 176 1 297 1 177 1 29 1 198 1 59 1 64 1 11 1 9 1 133 2 322 1 65 1 36 1 323 1 225 1 170 1 19 1 331 1 262 1 373 1 332 1 333 1 233 2 235 1 376 1 
266 1 239 1 128 1 176 1 297 1 155 1 177 1 198 1 224 1 59 1 64 1 11 1 9 1 133 2 322 1 65 1 36 1 323 1 225 1 120 1 170 1 19 1 262 1 332 1 333 1 233 2 235 1 376 1 
336 1 177 1 244 1 274 1 59 1 182 1 133 2 322 1 118 1 65 2 36 2 323 1 18 1 41 2 351 2 98 1 332 1 102 1 333 1 74 2 23 2 233 4 
331 1 214 1 119 1 29 1 
292 1 336 1 128 1 244 1 177 1 276 1 201 1 59 1 182 1 133 2 65 1 118 1 322 1 323 1 36 2 18 1 41 1 351 1 352 1 98 1 170 1 121 1 142 1 332 1 102 1 333 1 74 1 23 1 233 3 
173 1 2 1 152 4 336 4 295 1 272 1 177 3 244 4 274 4 361 1 343 1 252 1 116 1 8 1 320 3 132 1 346 1 117 1 33 1 133 6 322 3 65 21 163 1 118 4 12 1 36 20 303 1 325 1 67 1 18 4 258 4 350 3 98 5 230 2 100 1 332 3 172 1 102 5 333 3 23 8 289 1 233 41 236 1 
173 1 2 1 152 4 336 4 295 1 272 1 177 4 244 3 274 4 361 1 343 2 252 1 116 1 8 1 320 3 132 1 346 1 117 1 33 1 133 8 322 4 65 18 163 1 118 3 12 1 36 20 303 1 325 1 67 1 18 4 258 4 350 3 98 5 230 2 100 1 332 4 172 1 102 4 333 4 23 7 289 1 233 38 236 1 
173 1 2 1 152 4 336 7 295 1 272 1 177 2 244 7 274 7 361 1 343 1 252 1 116 1 8 1 320 2 132 1 346 1 117 1 33 1 133 4 322 2 65 25 163 2 118 7 36 27 303 1 325 1 67 1 16 2 18 7 258 4 350 4 98 8 230 1 332 2 172 1 102 8 333 2 23 14 289 1 233 52 236 1 
173 1 152 2 336 3 295 1 177 2 244 3 274 3 252 1 363 1 116 2 320 1 132 1 117 1 133 4 322 2 65 10 163 1 118 3 36 9 18 3 258 2 350 1 98 3 230 1 100 1 332 2 102 3 333 2 23 6 233 19 
173 1 152 4 336 3 295 1 272 1 244 2 177 3 274 2 343 2 252 1 116 1 8 1 132 1 320 2 117 2 133 6 33 1 65 12 322 3 118 2 36 14 303 1 18 3 258 2 350 2 98 3 230 2 332 3 102 2 333 3 23 4 289 1 233 26 236 1 
219 1 347 1 310 1 164 1 79 1 38 1 95 1 83 1 229 1 97 1 
31 1 354 1 
347 1 310 1 79 1 38 1 270 1 83 1 319 1 229 1 278 1 
348 1 126 1 
330 1 228 1 104 1 
347 1 91 1 79 1 38 1 95 1 51 2 83 1 229 1 97 1 110 1 305 1 30 1 219 1 208 1 310 1 282 1 57 1 75 1 
347 1 91 1 79 1 38 1 95 1 51 2 83 1 229 1 97 1 110 1 305 1 30 1 219 1 208 1 310 1 282 1 57 1 75 1 
347 1 91 1 79 1 38 1 95 1 51 2 83 1 229 1 97 1 110 1 305 1 30 1 219 1 208 1 310 1 282 1 57 1 75 1 
104 1 348 1 126 1 
104 1 348 1 126 1 
330 1 228 1 
330 1 228 1 104 1 
140 1 160 1 
239 1 79 1 78 1 154 1 128 2 294 1 107 1 51 1 83 1 110 1 30 1 157 1 31 1 276 2 57 1 160 1 347 1 38 1 229 1 305 1 170 2 140 1 310 1 121 2 142 2 124 1 354 1 
266 1 77 1 128 2 176 1 338 2 177 1 198 2 87 1 59 1 365 1 182 1 64 2 9 2 133 2 11 1 322 1 65 1 323 1 36 1 227 1 280 1 369 1 170 2 19 1 142 2 262 1 332 1 333 1 235 1 233 2 237 1 
64 1 9 1 165 1 176 1 296 1 206 1 231 1 19 1 198 1 262 1 375 1 212 1 235 1 376 1 
64 1 9 1 213 1 149 1 176 1 269 1 206 1 188 1 198 1 129 1 178 2 372 1 222 1 191 1 144 1 375 1 235 1 192 1 
64 1 9 1 149 1 129 1 198 1 214 1 372 1 375 1 206 1 192 1 188 1 
64 1 9 1 213 1 149 1 267 1 176 1 269 1 206 1 198 1 129 1 178 2 372 1 222 1 191 1 144 1 235 1 192 1 
171 1 
204 1 193 1 368 1 226 1 362 1 208 1 86 1 263 1 58 1 181 1 
150 1 204 5 335 2 118 2 279 1 336 2 18 2 98 2 197 10 328 5 20 5 208 5 86 5 180 5 102 2 
208 1 35 1 226 1 268 1 305 1 110 1 
193 1 215 1 106 1 176 1 268 2 50 1 217 1 110 3 198 4 86 2 199 2 58 2 200 2 64 4 9 4 204 2 186 2 35 4 165 1 368 2 167 1 349 1 305 3 231 1 19 1 262 1 263 2 235 1 376 2 
362 1 204 1 208 1 86 1 226 1 181 1 96 1 
204 1 86 1 193 1 263 1 368 1 58 1 40 1 
64 1 9 1 204 1 150 1 193 1 241 1 368 1 176 1 297 1 187 1 28 1 19 1 198 1 88 1 262 2 221 1 263 1 58 1 235 2 376 1 
335 2 193 2 336 2 268 1 26 1 272 1 110 1 197 6 86 5 199 1 180 5 200 1 58 2 8 1 320 1 33 1 204 8 35 1 118 2 279 1 303 1 368 2 226 2 18 2 258 1 350 1 305 1 98 2 328 5 20 3 208 5 263 2 102 2 125 1 289 1 
335 2 193 1 240 1 292 1 3 1 128 1 339 1 110 1 158 1 86 2 276 1 58 1 115 1 346 1 204 2 279 1 324 1 67 1 368 1 305 1 98 2 170 1 121 1 142 1 263 1 172 1 102 1 103 1 
266 1 239 1 292 2 3 1 128 3 176 1 297 1 177 1 29 1 198 1 276 2 59 1 64 1 133 2 9 1 65 1 322 1 323 1 225 1 170 3 327 1 19 1 331 1 121 2 142 2 262 1 373 1 332 1 333 1 233 1 235 1 376 1 
204 1 193 1 325 1 368 1 226 2 197 4 328 2 20 2 208 4 86 2 263 1 199 1 180 2 58 1 200 1 
310 1 160 1 38 1 109 1 97 1 
112 1 310 1 38 1 
112 1 310 1 38 1 
112 1 310 1 38 1 
310 1 374 1 38 1 
310 1 374 1 38 1 
310 1 374 1 38 1 
310 1 38 1 
79 1 83 1 
2 1 295 1 177 1 274 2 361 1 320 1 346 1 133 2 65 4 322 1 36 4 325 1 67 1 258 1 350 1 98 1 332 1 102 1 172 1 333 1 23 2 289 1 233 8 
2 1 336 1 295 1 177 2 244 1 274 2 361 1 320 1 346 1 133 4 65 5 322 2 163 1 36 6 325 1 67 1 18 1 258 2 259 1 350 1 98 2 332 2 102 1 172 1 333 2 23 3 289 1 233 11 
2 1 336 2 295 1 272 1 244 1 177 3 274 3 361 1 343 1 320 1 8 1 346 1 133 6 33 1 65 10 322 3 118 2 36 9 303 1 325 1 67 1 18 2 258 1 259 1 350 1 98 3 332 3 172 1 102 3 333 3 23 4 289 1 233 19 
2 1 336 2 295 1 272 1 244 2 177 3 274 3 361 1 343 1 320 1 8 1 346 1 133 6 33 1 65 7 322 3 118 1 36 10 303 1 325 1 67 1 18 2 258 1 259 1 350 1 98 3 332 3 172 1 102 2 333 3 23 5 289 1 233 17 
2 1 295 1 177 1 274 2 361 1 320 1 346 1 133 2 65 4 322 1 36 4 325 1 67 1 258 1 350 1 98 1 332 1 102 1 172 1 333 1 23 2 289 1 233 8 
336 2 295 1 272 1 244 1 177 1 274 1 320 1 8 1 133 2 33 1 65 6 322 1 118 2 36 6 303 1 18 2 258 1 350 1 98 2 332 1 102 2 333 1 23 2 289 1 233 12 
2 1 336 2 295 1 272 1 244 2 177 4 274 3 361 1 343 2 8 1 320 1 346 1 133 8 33 1 65 8 322 4 118 1 36 10 303 1 325 1 67 1 18 2 258 1 259 1 350 1 98 3 332 4 172 1 102 2 333 4 23 5 289 1 233 18 
336 3 295 1 272 1 244 3 177 4 274 3 343 2 8 1 320 1 133 8 33 1 65 7 322 4 118 2 36 9 303 1 18 3 258 1 350 1 98 3 100 1 332 4 102 2 333 4 23 6 289 1 233 16 
346 1 65 4 2 2 36 3 67 3 244 3 98 1 274 3 361 1 102 1 172 3 23 6 233 7 
2 1 336 2 295 1 272 1 244 1 177 4 274 3 361 1 343 2 8 1 320 1 346 1 133 8 33 1 65 8 322 4 118 1 36 10 303 1 325 1 67 1 18 2 258 1 350 1 98 3 100 1 332 4 172 1 102 2 333 4 23 4 289 1 233 18 
346 1 133 2 322 1 65 5 36 5 67 2 295 1 339 1 177 1 244 2 98 2 274 3 332 1 172 2 102 2 333 1 23 5 233 10 
133 2 322 1 36 2 336 1 295 1 177 1 244 1 98 1 332 1 333 1 23 1 233 2 
133 2 65 2 118 1 322 1 36 2 336 1 295 1 18 1 177 1 244 1 98 1 274 1 332 1 102 1 333 1 23 2 233 4 
133 6 65 2 322 3 36 1 67 1 295 1 177 3 244 1 274 1 100 1 332 3 172 1 343 1 333 3 23 2 233 3 355 1 
2 1 336 3 295 1 82 1 177 5 244 5 274 7 361 1 343 2 320 1 346 2 133 10 65 18 322 5 163 1 118 3 36 16 325 1 67 3 93 1 18 3 258 4 259 1 350 3 98 5 207 1 100 1 332 5 172 3 102 5 333 5 23 12 233 34 355 1 
346 1 133 4 65 4 322 2 2 1 36 4 325 1 67 1 244 1 177 2 98 1 274 2 361 1 332 2 102 1 172 1 333 2 343 1 23 3 233 8 
346 1 65 3 2 1 36 3 325 1 67 1 96 1 98 1 274 2 361 1 172 1 102 1 23 2 233 6 
133 2 65 2 118 1 322 1 36 2 336 1 18 1 259 1 177 1 244 1 98 1 274 1 332 1 102 1 333 1 23 2 233 4 
118 1 65 4 163 1 36 3 336 1 18 1 258 2 350 1 244 1 98 1 274 1 102 1 23 2 233 7 320 1 
2 1 336 2 244 4 177 2 274 5 361 1 248 1 343 2 346 1 133 4 163 1 65 12 118 2 322 2 36 11 325 1 67 2 16 1 18 2 258 2 350 2 98 3 332 2 172 2 102 3 333 2 23 9 233 23 355 1 
65 1 258 1 233 1 
36 1 233 1 350 1 
133 2 150 1 322 1 65 3 118 1 36 3 336 1 18 1 177 1 259 1 244 1 98 1 274 2 332 1 102 1 333 1 23 3 233 6 
336 2 295 1 272 1 244 1 177 1 274 1 320 1 8 1 133 2 33 1 65 6 322 1 118 2 36 6 303 1 18 2 258 1 350 1 98 2 332 1 102 2 333 1 23 2 289 1 233 12 
346 1 65 3 36 3 67 1 244 1 98 1 274 1 102 1 172 1 23 2 233 6 
133 2 2 1 65 2 322 1 36 1 67 1 244 1 177 1 274 1 361 1 332 1 172 1 343 1 333 1 23 2 233 3 355 1 
170 1 329 1 309 1 239 1 142 1 128 1 359 1 
239 1 302 1 128 1 326 1 359 1 170 1 260 1 329 1 309 1 142 1 290 1 234 1 
64 1 9 1 1 1 214 1 176 1 297 1 195 1 231 1 299 1 19 1 198 1 262 1 130 1 235 2 376 1 
64 2 9 2 1 1 186 1 337 1 176 1 297 1 195 1 299 1 198 2 19 1 262 1 130 1 235 2 
64 1 9 1 198 1 178 1 222 1 176 1 191 1 269 1 235 1 376 1 
64 1 9 1 198 1 214 1 192 1 
64 1 9 1 198 1 214 1 376 1 
64 1 9 1 198 1 214 1 311 1 365 1 376 1 
231 1 64 1 9 1 19 1 198 1 165 1 262 1 176 1 235 1 96 1 376 1 
64 1 9 1 239 1 175 1 225 1 128 2 176 1 297 1 170 2 19 1 198 1 121 1 276 1 142 1 262 1 373 1 235 1 376 1 
64 1 9 1 186 1 239 1 175 1 225 1 128 2 176 1 25 1 297 2 84 1 170 2 19 2 198 1 158 1 121 1 209 1 276 2 142 2 285 1 262 3 373 1 235 1 
64 2 9 2 186 1 239 1 175 1 225 1 128 2 176 1 194 1 25 1 297 2 155 1 84 1 170 2 19 2 198 2 158 1 121 1 209 1 276 2 142 2 285 1 262 3 235 1 
64 3 0 1 9 3 186 1 35 1 241 1 226 1 176 1 194 1 25 1 297 1 84 1 44 1 110 2 305 2 19 1 198 3 208 1 262 4 210 1 235 1 376 1 63 1 
64 3 9 3 186 1 35 1 241 1 226 1 176 1 194 1 25 1 297 1 84 1 44 1 110 2 305 2 19 1 198 3 208 1 56 1 262 4 210 1 235 1 376 1 
64 1 9 1 198 1 249 1 176 1 235 1 
64 2 9 2 1 1 214 1 176 1 297 1 195 1 281 1 198 2 19 1 32 1 286 1 221 1 262 1 365 1 235 2 376 2 
133 2 214 1 322 1 323 1 175 1 128 1 280 1 177 1 170 1 121 1 276 1 142 1 332 1 333 1 59 1 182 1 
193 2 241 1 268 1 50 1 110 3 360 1 362 1 198 1 86 1 56 1 181 1 58 2 64 1 9 1 204 1 35 2 368 2 226 1 137 1 305 3 44 1 208 1 190 1 262 2 263 2 124 1 210 1 376 1 
64 1 9 1 214 1 176 1 297 1 198 1 19 1 249 1 88 1 221 1 262 2 210 1 235 2 
64 1 9 1 239 1 175 1 225 1 128 2 176 1 297 1 155 1 170 2 19 1 198 1 121 1 276 1 142 1 262 1 235 1 376 1 
64 1 9 1 1 1 186 1 176 1 297 1 195 1 198 1 19 1 286 1 221 1 262 1 235 2 
334 1 76 1 239 1 288 1 216 1 
238 1 334 1 76 2 239 1 226 1 216 2 44 1 110 2 305 2 245 1 208 1 158 1 209 1 285 1 72 1 124 1 288 2 47 1 183 1 
170 1 334 1 76 1 87 1 142 1 77 1 128 1 216 1 237 1 
334 1 72 1 245 1 
161 1 255 1 256 1 342 1 353 1 94 1 168 1 273 1 
161 2 255 3 256 1 174 1 81 1 94 4 168 1 308 2 45 1 342 2 353 4 21 1 22 1 48 1 
161 1 255 1 308 1 256 1 342 1 101 1 353 2 179 1 94 2 168 1 60 1 273 1 
161 1 255 1 256 1 81 1 94 3 168 1 273 1 141 1 353 3 342 1 21 2 48 2 
255 2 135 1 358 1 196 2 
256 1 353 1 94 1 168 1 62 1 273 1 
161 1 255 1 308 1 256 1 342 1 353 2 94 2 168 1 146 1 273 1 
315 1 
161 1 255 1 256 1 342 1 353 1 94 1 168 1 273 1 
161 1 255 1 342 1 96 1 
161 1 255 1 256 1 342 1 353 1 94 1 168 1 
34 1 341 1 94 1 
161 1 255 1 256 1 94 3 81 1 168 1 273 1 353 3 342 1 21 2 211 1 48 1 
161 1 255 1 308 1 256 1 342 1 353 2 94 2 364 1 168 1 
255 1 256 1 45 1 122 1 178 1 353 1 191 1 144 1 94 1 168 1 273 1 
161 1 255 1 256 1 353 1 94 1 168 1 273 1 
161 2 256 1 342 1 353 1 94 1 168 1 273 1 
161 1 255 1 256 2 46 1 353 2 94 2 254 1 168 2 265 1 273 1 
161 1 255 2 256 1 174 1 94 3 168 1 273 1 53 1 308 2 45 1 342 1 353 3 146 1 
161 1 255 1 213 1 256 1 269 1 94 2 168 1 273 1 308 1 178 2 342 1 353 2 189 1 144 1 191 1 
161 1 255 2 256 2 174 1 14 1 94 4 168 2 273 1 308 2 45 1 342 1 353 4 364 1 
161 1 255 1 256 1 94 3 168 1 273 1 308 1 353 3 342 1 21 1 146 1 
255 1 45 1 174 1 22 1 
161 1 255 1 

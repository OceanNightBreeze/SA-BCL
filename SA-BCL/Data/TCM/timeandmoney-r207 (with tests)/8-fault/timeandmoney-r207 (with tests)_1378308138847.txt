#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 7 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 7 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 7 303 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 157 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (19,42) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 315 103 280 48 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONSTANT | 1198 | 0 -> 1
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 1167 | stmt -> ;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> -1
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> ==
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> -1
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z | CONDITION | 731 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4492 | + -> *
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 753 | = null
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
170 1 311 9 4 2 249 2 50 5 9 1 276 1 359 1 301 1 54 1 130 2 344 1 230 1 111 1 234 6 164 2 139 2 20 1 166 1 88 9 266 2 284 3 186 1 285 1 147 1 210 2 67 4 242 1 
170 1 311 9 4 2 249 2 50 5 9 1 276 1 359 1 301 1 54 1 130 2 344 1 230 1 111 1 234 6 139 2 164 2 20 1 166 1 88 9 266 2 284 3 186 1 285 1 147 1 210 2 67 4 242 1 
170 1 311 10 4 2 249 2 50 6 9 1 276 1 359 1 301 1 54 1 130 2 344 1 230 1 111 1 234 7 139 2 164 2 20 1 166 1 88 10 266 2 284 4 186 1 285 1 147 1 210 2 67 5 242 1 
170 1 311 7 4 2 249 2 50 4 9 1 276 1 359 1 301 1 54 1 130 2 344 1 230 1 111 1 234 4 139 2 164 1 166 1 88 7 266 2 284 2 186 1 285 1 147 1 210 2 67 3 242 1 
54 1 130 1 311 4 4 1 234 3 249 1 139 1 164 2 50 3 20 1 166 1 88 4 276 1 284 1 301 1 210 1 147 1 67 2 
54 1 311 2 4 1 111 1 139 1 249 1 50 1 9 1 166 1 88 2 194 1 266 1 106 1 276 1 108 1 210 1 
54 1 311 3 234 1 139 2 50 2 166 1 88 3 266 1 276 1 284 1 186 1 210 2 67 1 
54 1 130 1 84 1 311 9 4 1 98 1 234 7 249 1 164 2 139 2 50 5 20 1 166 1 88 9 266 1 276 1 284 3 301 1 359 1 186 1 147 1 242 1 210 2 67 4 
54 1 130 1 84 1 311 9 4 1 98 1 234 7 249 1 164 2 139 2 50 5 20 1 166 1 88 9 266 1 276 1 284 3 301 1 359 1 186 1 147 1 242 1 210 2 67 4 
191 1 157 1 175 1 
96 2 199 1 175 1 
269 2 63 1 132 2 143 2 300 2 116 2 322 1 258 2 
150 2 269 2 153 1 94 1 27 1 70 1 213 1 355 1 315 2 156 2 76 1 123 1 220 2 103 2 12 1 299 1 300 2 129 1 257 1 258 3 16 1 132 2 321 1 322 1 346 1 140 1 39 1 142 1 63 1 181 1 89 1 143 3 280 1 116 2 205 1 117 1 146 1 
158 1 269 1 63 1 132 1 196 1 143 1 300 1 116 1 323 1 258 1 
269 1 158 1 133 1 177 1 312 1 189 1 191 1 137 1 64 1 298 1 143 1 338 1 175 1 258 1 
269 1 158 1 133 2 132 1 177 1 189 2 191 1 137 1 64 1 298 1 300 1 143 1 116 1 175 1 258 1 
133 1 267 1 189 1 254 1 259 1 
269 1 189 2 154 1 191 1 49 1 300 1 254 1 175 1 256 1 259 1 258 1 158 1 133 2 132 1 196 1 323 1 63 1 143 1 116 1 
133 1 189 1 254 1 
158 1 269 1 133 1 132 1 196 1 189 1 323 1 49 1 63 1 300 1 143 1 116 1 259 1 258 1 
175 1 
269 1 189 2 154 1 191 1 49 1 300 1 254 1 175 1 259 1 258 1 158 1 133 2 132 1 196 1 323 1 63 1 326 1 143 1 116 1 
169 1 269 1 270 2 69 2 172 2 189 5 154 1 191 2 49 1 252 1 52 1 11 5 275 4 300 1 254 2 175 2 258 1 259 2 158 1 132 1 133 5 37 2 196 1 197 1 306 1 198 1 323 1 61 2 19 1 63 1 310 1 22 1 143 1 40 1 116 1 145 1 206 2 42 1 
118 1 269 1 16 1 94 1 271 1 132 1 153 1 70 1 140 1 315 1 39 1 220 1 103 1 181 1 300 1 143 2 280 1 23 1 146 1 258 2 
157 1 322 1 
319 1 269 2 132 1 300 1 143 2 116 1 184 1 322 2 258 2 
0 1 118 1 239 1 
153 1 94 1 16 1 70 1 322 1 140 1 315 1 39 1 220 1 180 1 103 1 181 1 143 1 280 1 146 1 258 1 
319 1 58 1 269 5 343 1 271 2 132 4 312 1 322 1 163 1 300 4 143 5 116 1 23 1 258 5 
158 1 269 2 132 2 143 2 300 2 60 1 323 1 258 2 
269 3 271 1 132 3 143 3 300 3 116 1 322 1 258 3 
158 1 269 1 132 1 143 1 300 1 323 1 258 1 
319 1 158 1 269 1 132 1 143 1 300 1 116 1 184 1 258 1 
150 2 269 3 94 1 153 1 271 1 27 1 70 1 189 1 355 1 293 1 315 1 156 1 76 1 220 1 103 1 298 1 299 1 300 3 257 1 258 4 319 1 158 1 16 1 132 3 133 1 177 1 321 1 322 1 137 1 140 1 39 1 142 1 63 1 115 1 64 1 181 1 89 1 143 4 280 1 116 2 23 1 205 1 117 1 146 1 
269 2 132 1 271 1 312 1 143 2 300 1 322 1 163 1 258 2 
319 1 158 1 269 3 133 1 271 2 132 3 177 1 189 1 137 1 64 1 325 1 115 1 298 1 300 3 143 3 116 1 23 1 175 1 258 3 
0 1 319 1 118 1 269 2 271 1 132 2 300 2 143 2 116 1 258 2 
153 1 94 1 16 1 70 1 322 1 315 1 140 1 39 1 220 1 103 1 181 1 143 1 280 1 146 1 258 1 
94 1 16 1 70 1 29 1 322 1 315 1 140 1 39 1 220 1 103 1 365 1 181 1 143 1 280 1 258 1 
0 2 118 2 270 1 150 2 288 1 27 1 246 1 355 1 76 1 156 4 12 2 299 2 253 1 195 1 257 1 227 1 278 1 37 1 321 1 237 1 142 1 239 2 283 1 369 1 
269 1 158 1 132 1 60 1 137 1 300 1 143 1 258 1 
3 1 100 1 
3 1 100 1 
305 1 279 1 
305 1 279 1 
305 1 279 1 
265 1 3 1 100 1 
265 1 3 1 100 1 
305 1 279 1 332 1 3 2 294 1 100 2 
3 1 277 1 100 1 
265 1 3 1 100 1 
223 1 3 1 100 1 
223 1 3 1 100 1 
223 1 3 1 100 1 
26 1 269 2 133 1 132 2 289 1 188 1 189 1 3 1 112 1 6 1 200 1 322 1 100 1 75 1 364 1 126 1 143 2 300 2 185 1 277 1 80 1 24 1 258 2 304 1 
57 1 131 1 56 1 133 2 189 2 332 1 3 2 112 2 192 2 100 2 324 1 75 2 364 3 102 1 36 1 185 1 175 1 24 2 304 2 
130 1 4 1 249 1 
106 1 4 1 249 1 
130 2 106 1 224 1 351 1 30 1 249 3 
130 1 106 1 224 1 5 1 351 1 249 2 
130 1 106 1 224 2 351 1 249 2 
26 1 270 1 69 1 71 1 96 3 172 1 189 5 154 1 191 1 356 1 333 1 6 1 272 2 273 1 7 1 11 2 275 3 253 1 127 2 254 1 80 1 175 2 259 4 133 5 37 1 199 1 232 2 61 1 21 1 40 1 41 1 369 1 
148 1 270 1 69 2 71 1 96 3 189 7 172 2 154 1 191 1 356 1 6 2 7 1 33 1 11 2 275 3 253 1 127 2 254 4 302 3 175 3 259 5 133 7 37 1 199 1 232 2 61 2 310 1 267 3 40 1 41 1 348 1 369 1 
133 2 71 1 69 1 189 2 172 1 333 1 61 1 7 1 310 1 21 1 275 1 259 1 
133 1 71 1 69 1 189 1 172 1 333 1 61 1 7 1 21 1 310 1 275 1 303 1 
157 1 255 1 140 1 
296 1 140 1 
308 1 
16 1 70 1 140 1 
329 1 140 1 
70 1 140 1 
125 1 16 1 70 1 255 2 201 1 140 3 
68 1 278 3 270 1 37 1 197 1 246 2 306 1 99 1 309 2 156 7 179 1 52 1 12 4 299 3 105 1 318 1 65 1 
68 1 278 3 270 1 37 1 197 1 246 2 306 1 99 1 309 2 156 7 179 1 52 1 12 4 299 3 105 1 318 1 65 1 
68 1 278 3 270 1 37 1 197 1 246 2 306 1 99 1 309 2 156 7 179 1 52 1 336 1 12 4 299 3 105 1 318 1 65 1 
150 2 270 3 246 3 248 1 99 1 73 1 76 1 156 22 52 1 12 11 299 11 105 1 35 1 253 3 318 4 225 1 257 1 278 7 37 3 228 3 306 1 113 1 321 1 233 4 309 1 165 1 179 2 142 1 41 3 369 3 25 1 
68 1 270 1 150 4 291 1 246 3 76 2 156 9 52 1 12 5 105 1 299 4 35 1 318 1 257 2 278 4 37 1 197 1 306 1 321 2 309 2 179 1 142 2 65 1 91 1 
94 1 311 2 4 1 30 1 315 1 249 2 50 1 32 1 220 1 297 1 103 1 106 1 276 1 54 1 130 1 320 1 134 1 231 1 362 1 162 1 234 1 136 1 139 1 39 1 166 1 88 2 266 1 204 1 209 1 210 1 
94 1 311 3 313 1 119 1 4 1 30 1 218 1 315 1 249 2 50 1 32 1 220 1 297 1 103 1 106 1 276 1 54 1 130 1 320 1 134 1 231 1 362 1 162 1 136 1 234 2 139 1 39 1 88 3 266 1 210 1 
94 1 311 2 313 1 119 1 4 1 30 1 315 1 249 2 50 1 220 1 297 1 103 1 106 1 276 1 54 1 130 1 320 1 134 1 362 1 162 1 136 1 234 2 39 1 88 2 266 1 
244 1 1 1 94 1 70 1 311 1 178 1 362 2 218 1 174 1 136 2 140 1 139 1 315 1 39 1 220 1 221 1 103 1 297 2 88 1 266 2 280 1 128 1 210 1 
130 1 94 1 134 1 320 1 311 1 313 1 4 1 231 1 162 1 362 1 30 1 136 1 249 2 139 1 315 1 39 1 32 1 220 1 166 1 103 1 297 1 88 1 266 1 106 1 204 1 210 1 
10 1 
94 2 69 1 71 1 70 2 172 1 189 2 154 1 48 1 174 1 315 2 220 2 78 1 103 2 77 1 104 1 11 1 275 1 254 2 81 1 16 1 133 2 178 1 363 1 61 1 140 2 39 3 236 1 280 2 40 1 
44 1 269 1 353 1 312 1 189 3 154 1 214 1 331 1 247 2 298 1 254 2 338 1 258 1 158 1 133 3 177 1 229 1 137 1 64 1 326 1 143 1 352 1 
44 1 158 1 269 1 152 1 133 3 177 1 189 3 312 1 154 1 331 1 214 1 229 1 247 3 191 1 137 1 64 1 298 1 326 1 143 1 254 1 338 1 175 1 352 1 258 1 
44 1 269 1 353 1 152 1 312 1 189 3 154 1 214 1 331 1 247 3 298 1 254 2 338 1 258 1 158 1 133 3 177 1 229 1 137 1 202 1 64 1 326 1 143 1 352 1 
44 1 93 1 152 2 189 5 154 3 331 1 247 4 190 1 191 1 49 1 8 2 298 1 11 1 300 1 254 7 338 1 339 1 258 2 158 2 110 1 196 1 199 2 61 1 18 1 202 4 63 1 64 1 116 1 168 2 352 1 353 4 269 2 69 1 312 1 172 1 214 1 217 1 275 1 317 2 175 1 132 1 133 5 177 1 229 1 323 1 137 1 238 2 143 2 326 1 40 1 43 1 
44 1 152 2 96 2 189 4 331 1 154 2 247 4 191 1 49 1 8 2 298 1 11 1 300 1 254 4 338 1 339 1 258 2 158 2 196 1 199 2 61 1 202 2 63 1 64 1 116 1 168 2 352 1 269 2 353 2 69 1 312 1 172 1 214 1 217 1 275 1 317 2 175 1 83 1 132 1 133 4 177 1 229 1 323 1 137 1 238 2 143 2 40 1 
44 1 353 2 269 1 152 2 93 1 69 1 312 1 189 4 172 1 154 2 214 1 331 1 247 4 191 1 217 1 8 2 11 1 298 1 275 1 254 4 317 2 338 1 339 1 175 1 258 1 158 1 133 4 177 1 199 2 229 1 18 1 61 1 202 2 137 1 64 1 238 2 143 1 40 1 168 2 352 1 43 1 
44 1 93 1 152 2 189 4 331 1 154 2 247 4 191 1 49 1 8 2 298 1 11 1 300 1 254 4 338 1 339 1 258 2 158 2 196 1 199 2 61 1 18 1 202 2 63 1 64 1 116 1 168 2 352 1 269 2 353 2 69 1 172 1 312 1 214 1 217 1 275 1 317 2 175 1 132 1 133 4 177 1 229 1 323 1 137 1 238 2 40 1 143 2 43 1 
44 1 152 2 96 2 189 4 331 1 154 2 46 1 247 4 191 1 49 1 298 1 11 1 300 1 254 4 338 1 339 1 258 2 158 2 196 1 61 1 18 1 202 2 63 1 64 1 116 1 168 2 352 1 207 2 269 2 353 2 69 1 172 1 312 1 214 1 219 1 275 1 316 1 175 1 132 1 133 4 360 2 177 1 229 1 323 1 137 1 238 2 40 1 143 2 
44 1 152 3 93 1 189 4 331 1 154 2 190 1 247 5 191 1 49 1 8 2 298 1 11 1 300 1 254 5 338 1 339 1 258 2 158 2 196 1 199 2 61 1 18 1 202 3 63 1 64 1 116 1 168 2 352 1 353 3 269 2 69 1 312 1 172 1 214 1 217 1 275 1 317 2 175 1 132 1 133 4 177 1 229 1 323 1 137 1 238 2 143 2 40 1 43 1 
44 1 152 3 93 1 189 4 331 1 154 2 190 1 247 5 191 1 49 1 8 2 298 1 11 1 300 1 254 5 338 1 339 1 258 2 158 2 196 1 199 2 61 1 18 1 202 3 63 1 64 1 116 1 168 2 352 1 353 3 269 2 69 1 312 1 172 1 214 1 217 1 275 1 317 2 175 1 132 1 133 4 177 1 229 1 323 1 137 1 238 2 143 2 40 1 43 1 
44 1 152 1 96 2 189 3 331 1 154 1 247 3 191 1 298 1 11 1 254 2 338 1 339 1 258 1 158 1 61 1 202 1 64 1 168 2 352 1 207 2 269 1 353 1 69 1 312 1 172 1 214 1 275 1 316 1 175 1 83 1 133 3 360 1 177 1 229 1 137 1 238 2 143 1 40 1 
0 1 68 1 118 1 150 2 270 1 27 1 246 2 355 1 76 1 156 6 52 1 12 3 299 3 157 1 257 1 227 1 278 2 37 1 197 1 306 1 321 1 322 2 309 1 142 1 239 1 65 1 
0 4 118 11 150 4 270 1 27 2 97 1 246 1 355 1 248 1 334 1 47 1 76 2 156 14 12 8 299 6 253 2 318 1 129 1 257 2 278 2 37 2 228 3 160 1 113 1 321 2 233 3 322 1 142 2 239 11 41 2 117 1 369 1 187 1 
0 1 269 1 150 2 94 1 153 1 271 1 70 1 27 1 2 1 355 1 47 1 315 1 76 1 156 2 220 1 103 1 12 1 299 1 300 1 129 1 257 1 258 2 16 1 132 1 321 1 322 1 263 1 140 1 39 1 180 1 142 1 181 1 280 1 143 2 23 1 117 1 241 1 146 1 
0 7 150 6 149 2 153 2 94 2 287 2 246 4 47 1 156 20 103 3 52 1 12 10 299 10 300 1 253 2 258 3 257 3 16 2 197 1 306 1 345 1 309 1 114 1 65 1 23 1 117 1 68 1 118 7 270 3 269 1 271 1 27 3 70 2 313 1 355 3 121 2 315 3 76 3 220 3 318 4 129 1 278 8 132 1 37 3 321 3 135 2 322 2 140 2 39 2 142 3 181 2 89 2 239 7 280 1 143 3 41 2 367 1 146 2 369 2 
92 1 269 1 150 4 271 1 94 2 27 2 70 2 290 1 45 1 313 1 355 2 120 1 174 1 315 8 76 2 156 2 220 8 124 1 123 2 103 7 34 1 12 1 299 1 300 1 129 1 227 1 258 1 257 2 55 1 132 1 178 1 321 2 140 3 39 2 142 2 143 1 280 2 117 1 209 1 
0 1 118 1 150 2 269 1 270 1 27 1 246 1 355 1 47 1 76 1 156 3 12 1 299 2 300 1 253 1 257 1 258 1 319 1 278 1 132 1 37 1 321 1 142 1 239 1 143 1 116 1 183 1 41 1 369 1 
0 1 278 1 118 1 150 2 27 1 37 1 355 1 321 1 156 2 76 1 142 1 12 2 239 1 253 1 318 1 283 1 227 1 257 1 
0 1 278 1 118 1 150 2 270 1 27 1 288 1 246 1 355 1 321 1 156 2 76 1 142 1 239 1 299 2 369 1 227 1 257 1 
0 2 118 2 150 2 270 1 27 1 246 1 355 1 76 1 156 4 12 2 299 2 253 1 318 1 257 1 227 1 278 2 37 1 321 1 142 1 239 2 41 1 369 1 
0 1 278 1 118 1 150 2 27 1 37 1 355 1 321 1 156 2 76 1 124 1 142 1 12 2 239 1 253 1 318 1 283 1 257 1 
0 1 278 1 118 1 150 2 270 1 27 1 288 1 246 1 355 1 321 1 156 2 76 1 124 1 142 1 239 1 299 2 369 1 257 1 
0 2 118 2 150 2 270 1 27 1 246 1 355 1 76 1 156 4 124 1 12 2 299 2 253 1 318 1 257 1 278 2 37 1 321 1 142 1 239 2 41 1 369 1 
0 2 278 2 118 2 270 1 150 2 27 1 37 1 246 1 355 1 321 1 76 1 156 4 142 1 12 2 299 2 239 2 253 1 41 1 318 1 369 1 257 1 
150 2 94 1 153 1 70 1 27 1 355 1 315 1 156 2 76 1 220 1 103 1 12 1 299 1 129 1 258 1 257 1 16 1 321 1 322 1 140 1 39 1 142 1 181 1 89 1 280 1 143 1 117 1 146 1 
150 2 94 1 70 1 27 1 29 1 355 1 295 1 315 1 156 2 76 1 220 1 103 1 12 1 299 1 129 1 258 1 257 1 16 1 321 1 322 1 140 1 39 1 365 1 142 1 181 1 280 1 143 1 117 1 
0 2 118 2 150 2 270 1 27 1 246 1 355 1 47 1 76 1 156 4 12 2 299 2 253 1 318 1 257 1 278 2 37 1 321 1 142 1 239 2 41 1 369 1 
0 2 118 2 270 1 150 2 94 1 153 1 287 1 70 1 27 1 246 1 355 1 315 1 156 4 76 1 220 1 103 1 12 2 299 2 253 1 318 1 258 1 257 1 278 2 16 1 37 1 321 1 140 1 39 1 142 1 181 1 239 2 89 1 143 1 41 1 369 1 146 1 209 1 
0 1 118 1 270 1 150 2 269 1 27 1 28 1 355 1 47 1 76 1 156 3 12 2 299 1 300 1 253 1 318 1 257 1 258 1 319 1 278 1 132 1 37 1 321 1 142 1 239 1 143 1 116 1 41 1 369 1 
150 6 246 4 248 3 156 41 52 1 12 20 14 4 13 1 299 21 253 4 337 1 257 3 15 1 260 1 197 1 306 1 113 1 161 1 307 1 309 1 264 2 65 1 268 1 68 1 270 5 314 1 76 3 35 1 358 1 318 4 278 8 37 5 86 1 228 3 321 3 233 4 87 1 142 3 144 1 41 4 182 1 369 4 91 1 
68 1 150 8 270 4 246 4 248 3 314 1 76 4 156 38 52 1 13 1 14 4 12 20 35 2 299 18 253 4 358 1 337 1 318 3 15 1 257 4 278 7 37 5 260 1 86 1 197 1 228 3 306 1 161 1 113 1 321 4 233 4 307 1 309 1 264 2 87 1 142 4 144 1 182 1 41 4 65 1 268 1 369 3 91 1 
68 1 150 4 270 8 97 2 246 7 248 2 76 2 156 52 52 1 13 1 14 4 12 27 35 1 299 25 253 7 358 1 337 1 318 7 15 1 257 2 278 14 37 8 260 1 86 1 197 1 228 4 306 1 113 2 321 2 233 4 307 1 309 1 264 1 87 1 142 2 144 1 182 1 41 7 65 1 268 1 369 7 91 1 
150 4 270 3 246 3 248 1 314 1 76 2 156 19 14 2 12 9 299 10 253 3 358 1 318 3 257 2 278 6 37 3 261 1 86 1 228 1 113 1 321 2 233 2 264 1 87 1 142 2 182 1 41 3 268 2 369 3 91 1 
270 2 150 6 246 2 248 2 76 3 156 26 14 4 12 14 13 1 35 2 299 12 253 3 358 1 337 1 318 2 257 3 15 1 278 4 37 3 260 1 86 1 228 2 321 3 233 2 307 1 264 2 87 1 142 3 144 1 182 2 41 3 268 1 369 2 91 1 
269 2 150 2 94 1 70 1 27 1 45 1 355 1 47 1 315 2 251 1 76 1 156 2 220 2 123 2 103 2 12 1 299 1 79 1 129 1 257 1 258 2 176 1 55 1 85 1 321 1 140 1 39 1 142 1 347 1 143 2 117 1 
130 1 94 1 134 1 313 1 4 1 162 1 30 1 136 1 74 1 249 2 315 2 250 1 39 1 32 1 220 2 103 2 106 1 208 1 209 1 
130 1 94 1 134 1 173 1 313 1 4 1 162 1 30 1 136 1 249 2 315 1 250 1 32 1 39 1 220 1 103 1 106 1 
94 1 70 1 155 1 178 1 136 1 174 1 140 1 315 1 39 1 220 1 103 1 221 1 280 1 208 1 
130 1 94 1 134 1 313 1 4 1 162 1 30 1 136 1 74 1 249 2 315 1 250 1 39 1 32 1 220 1 103 1 106 1 208 1 
368 1 
19 1 11 1 275 1 191 1 157 1 175 1 42 1 
269 1 69 1 96 1 172 1 189 1 154 1 191 1 217 1 49 1 8 1 11 1 275 1 300 1 317 1 254 1 175 1 258 1 158 1 132 1 133 1 196 1 199 1 323 1 61 1 63 1 143 1 40 1 116 1 
149 1 94 1 96 6 189 2 154 1 296 2 103 1 11 3 253 1 254 2 255 1 16 1 199 3 201 1 61 2 64 1 206 1 211 1 212 1 270 1 71 1 70 1 69 2 171 1 172 2 215 1 122 1 315 1 220 1 275 4 222 1 127 3 175 3 133 2 37 1 232 3 138 1 140 4 39 2 40 2 280 1 41 1 369 1 
96 6 189 1 154 1 191 2 248 1 49 1 11 5 13 1 253 2 53 1 300 1 337 1 254 1 109 1 258 1 15 1 158 1 196 1 199 3 61 2 307 1 63 1 116 1 206 2 169 1 269 1 270 2 69 2 71 1 172 2 275 8 127 5 175 5 132 1 133 1 37 2 228 1 232 5 233 1 323 1 236 1 143 1 40 2 144 1 41 2 369 2 
169 1 270 1 269 1 93 1 69 1 172 1 189 1 49 1 52 1 11 2 275 2 300 1 258 1 158 1 133 1 132 1 37 2 196 1 197 1 306 1 323 1 61 1 63 1 143 1 40 1 116 1 145 1 206 2 
19 1 11 1 69 1 275 1 172 1 40 1 191 1 175 1 61 1 
270 1 37 1 96 2 199 1 232 1 11 2 275 1 253 1 41 1 127 1 175 1 369 1 
158 1 269 1 132 1 133 1 196 1 189 1 154 1 191 1 323 1 49 1 63 1 143 1 300 1 116 1 254 1 175 1 258 1 
133 1 71 1 69 1 189 1 172 1 154 1 48 1 61 1 315 2 236 1 220 2 103 2 335 1 77 1 11 1 275 1 280 2 40 1 254 2 
150 2 269 2 153 1 94 1 70 1 27 1 355 1 315 1 156 1 76 1 220 1 103 1 299 1 300 2 258 3 257 1 132 2 16 1 321 1 322 1 140 1 39 1 142 1 63 1 181 1 89 1 280 1 143 3 116 2 205 1 117 1 146 1 
69 1 71 1 96 4 172 1 199 2 191 2 232 2 61 1 309 1 236 1 11 2 275 1 40 1 127 2 175 4 
112 1 101 1 304 1 
112 1 101 1 304 1 
151 1 126 1 107 1 112 1 304 1 
112 1 101 1 304 1 
112 1 226 1 304 1 
112 1 226 1 304 1 
112 1 226 1 304 1 
112 1 304 1 
3 1 100 1 
68 1 270 1 150 2 246 2 248 1 156 8 76 1 52 1 13 1 12 4 299 4 257 1 278 2 37 1 228 1 197 1 306 1 321 1 233 1 309 1 142 1 65 1 91 1 
68 1 270 1 150 4 246 2 248 1 156 11 76 2 52 1 13 1 12 6 299 5 253 1 318 1 257 2 278 3 37 2 197 1 228 1 306 1 113 1 321 2 233 2 309 1 142 2 41 1 65 1 91 1 327 1 
68 1 150 6 270 3 246 3 248 1 156 19 76 3 52 1 13 1 12 9 299 10 35 1 253 2 337 1 318 1 257 3 15 1 278 4 37 3 197 1 228 1 306 1 321 3 233 1 307 1 309 1 142 3 144 1 41 2 65 1 369 2 91 1 327 1 
68 1 150 6 270 2 246 3 248 1 156 17 76 3 52 1 13 1 12 10 35 1 299 7 253 2 337 1 318 2 257 3 15 1 278 5 37 3 197 1 228 1 306 1 321 3 233 1 307 1 309 1 142 3 144 1 41 2 65 1 369 1 91 1 327 1 
68 1 270 1 150 2 246 2 248 1 156 8 76 1 52 1 13 1 12 4 299 4 257 1 278 2 37 1 228 1 197 1 306 1 321 1 233 1 309 1 142 1 65 1 91 1 
150 2 270 2 246 1 248 1 156 12 76 1 13 1 12 6 299 6 253 2 337 1 318 1 257 1 15 1 278 2 37 2 228 1 321 1 233 1 307 1 142 1 144 1 41 2 369 2 91 1 
68 1 150 8 270 2 246 3 248 1 156 18 76 4 52 1 13 1 12 10 299 8 35 2 253 2 337 1 318 2 257 4 15 1 278 5 37 3 197 1 228 1 306 1 321 4 233 1 307 1 309 1 142 4 144 1 41 2 65 1 369 1 91 1 327 1 
150 8 270 2 246 3 248 1 314 1 156 16 76 4 13 1 12 9 299 7 35 2 253 3 337 1 318 3 257 4 15 1 278 6 37 3 228 1 321 4 233 1 307 1 142 4 144 1 41 3 369 2 91 1 
68 2 278 6 270 1 37 1 246 3 197 1 306 3 156 7 52 3 12 3 299 4 65 1 318 3 
68 1 150 8 270 2 246 3 248 1 314 1 156 18 76 4 52 1 13 1 12 10 299 8 35 2 253 2 337 1 318 1 257 4 15 1 278 4 37 3 197 1 228 1 306 1 321 4 233 1 307 1 309 1 142 4 144 1 41 2 65 1 369 1 91 1 
68 1 278 3 270 1 150 4 37 1 197 1 246 2 306 1 321 2 309 1 156 8 76 2 142 2 52 1 12 4 299 4 35 1 318 1 65 1 257 2 
156 6 68 1 278 2 270 1 52 1 12 3 37 1 299 3 197 1 246 2 306 1 65 1 157 1 309 1 
278 2 270 1 150 2 37 1 246 1 321 1 76 1 156 4 142 1 12 2 299 2 253 1 41 1 318 1 369 1 257 1 327 1 
278 2 270 1 37 1 246 1 228 1 248 1 113 1 233 2 156 7 12 3 299 4 253 1 41 1 318 1 369 1 
68 1 270 3 150 4 97 1 246 5 156 23 76 2 52 2 12 11 299 12 35 2 253 2 318 4 257 2 278 9 37 3 197 1 228 2 306 2 160 1 113 1 321 2 233 2 309 1 235 1 142 2 41 2 65 1 369 2 
156 1 299 1 233 1 
156 1 12 1 228 1 
278 3 150 2 149 1 270 1 37 1 246 2 321 1 76 1 156 6 142 1 12 3 299 3 253 1 41 1 318 1 369 1 257 1 327 1 
150 2 270 2 246 1 248 1 156 12 76 1 13 1 12 6 299 6 253 2 337 1 318 1 257 1 15 1 278 2 37 2 228 1 321 1 233 1 307 1 142 1 144 1 41 2 369 2 91 1 
278 2 270 1 37 1 197 1 246 1 306 1 156 6 52 1 12 3 299 3 318 1 
68 1 278 2 150 2 246 1 306 1 321 1 235 1 156 3 76 1 142 1 52 1 12 1 299 2 35 1 318 1 65 1 257 1 
278 5 150 2 270 2 37 2 246 3 197 1 306 2 321 1 76 1 156 10 142 1 52 2 12 5 299 5 318 2 145 1 257 1 91 1 
278 1 150 2 37 1 321 1 76 1 156 2 142 1 12 2 253 1 318 1 91 1 257 1 
278 2 270 1 150 2 37 1 246 1 321 1 76 1 156 4 142 1 12 2 299 2 253 1 41 1 318 1 369 1 91 1 257 1 
278 2 150 6 246 1 306 1 321 3 314 1 235 1 156 3 76 3 142 3 52 1 12 1 35 1 299 2 318 1 91 1 257 3 
68 1 150 10 270 5 246 7 248 1 314 1 73 1 76 5 156 34 52 3 12 16 35 2 299 18 253 3 318 5 225 1 257 5 278 12 37 5 197 2 228 3 306 3 113 1 321 5 233 4 309 1 165 1 235 1 142 5 41 3 65 1 369 3 91 1 327 1 
286 1 269 1 143 1 312 1 322 1 258 1 163 1 
342 1 286 1 269 1 330 1 312 1 322 1 262 1 163 1 193 1 167 1 143 1 258 1 
39 1 220 1 103 1 94 1 70 1 280 1 178 1 157 1 174 1 140 1 315 1 
269 1 16 1 271 1 132 1 94 1 70 1 322 1 140 1 315 1 39 1 220 1 103 1 181 1 300 1 143 2 280 1 146 1 258 2 
158 1 269 2 329 1 16 2 271 1 132 2 94 1 70 2 177 1 322 1 137 1 140 3 315 1 39 1 220 1 103 1 181 1 300 1 143 2 341 1 82 1 146 1 258 2 
269 2 94 1 271 1 329 1 70 2 292 1 29 1 315 2 220 2 103 2 300 1 341 1 82 1 258 2 158 1 132 2 16 2 177 1 322 1 137 1 140 3 39 1 181 1 143 2 
329 1 16 1 133 2 94 1 70 1 95 1 189 2 292 1 191 1 296 1 315 3 140 4 39 1 220 3 103 3 64 1 280 1 254 1 255 1 175 1 341 1 82 1 243 1 
329 1 16 1 133 2 94 1 70 1 189 2 292 1 191 1 296 1 315 3 140 4 39 1 220 3 103 3 64 1 280 1 254 1 255 1 175 1 341 1 82 1 212 1 
39 1 92 1 220 1 103 1 94 1 315 1 
92 1 16 1 94 2 70 2 290 1 45 1 313 1 363 1 201 1 120 1 315 7 140 3 39 3 123 1 220 7 103 6 34 1 280 2 66 1 81 1 209 1 
0 1 150 4 153 1 94 1 287 1 246 2 47 1 156 6 103 1 52 1 12 3 299 3 300 1 258 2 257 2 16 1 197 1 306 1 309 1 65 1 209 1 68 1 118 1 269 1 270 1 271 1 27 2 70 1 355 2 121 1 315 1 76 2 220 1 79 1 278 2 132 1 37 1 321 2 322 2 140 1 39 1 142 2 181 1 89 1 239 1 143 2 146 1 
189 3 154 1 191 2 296 1 49 1 335 1 103 1 52 1 11 5 300 1 254 2 255 1 258 1 259 1 158 1 196 1 197 1 306 1 61 2 19 1 63 1 64 1 116 1 206 2 212 1 169 1 270 2 269 1 69 2 171 1 172 2 215 1 315 1 220 1 275 4 175 2 133 3 132 1 37 2 323 1 138 1 140 2 40 2 280 1 143 1 145 1 42 1 
92 1 16 1 94 1 70 1 201 1 315 2 140 2 39 2 220 2 103 2 255 1 209 1 211 1 
39 1 220 4 103 4 94 1 70 1 280 1 292 1 178 1 350 1 209 1 174 1 140 1 315 4 
16 1 94 1 70 1 363 1 315 2 140 1 39 2 114 1 220 2 103 2 78 1 104 1 341 1 81 1 
39 1 220 1 103 1 94 1 106 1 134 1 280 1 4 1 249 1 315 1 
94 1 70 1 85 1 45 1 313 1 315 2 140 1 39 1 220 2 103 2 209 1 
94 2 70 2 290 1 45 1 178 1 120 1 174 1 315 5 140 3 39 2 220 5 103 4 280 1 350 1 341 1 209 1 
328 1 94 2 70 2 45 1 178 1 120 1 174 1 315 5 140 3 39 2 220 5 103 4 280 1 350 1 341 1 209 1 
269 1 16 1 271 1 132 1 94 1 70 1 29 1 322 1 140 1 315 1 39 1 220 1 103 1 181 1 300 1 143 2 280 1 258 2 
16 1 94 1 70 1 363 1 201 1 315 1 140 1 39 2 220 1 103 1 66 1 341 1 81 1 
141 1 274 1 361 1 72 1 322 1 
158 1 133 2 177 1 189 2 191 1 361 2 72 1 357 1 322 1 31 1 137 1 62 1 141 2 64 1 115 1 274 2 298 1 175 1 259 1 
141 1 269 1 347 1 143 1 361 1 72 1 258 1 251 1 176 1 
357 1 72 1 62 1 
50 1 54 1 276 1 157 1 
50 1 54 1 88 1 311 1 276 1 139 1 210 1 
88 1 266 1 362 1 
50 1 54 1 9 2 245 1 166 1 88 3 354 1 311 3 276 1 349 1 139 1 210 1 
50 1 54 1 88 2 311 2 276 1 234 1 164 1 139 1 210 1 
130 1 311 1 4 1 139 1 249 1 50 1 166 1 88 1 210 1 147 1 67 1 
50 1 166 1 88 1 311 1 276 1 139 1 210 1 
54 1 166 1 88 1 311 1 276 2 139 1 210 1 
311 2 59 1 216 1 139 2 50 1 166 1 88 2 276 1 240 1 210 2 
54 1 311 3 234 2 139 1 50 2 166 1 88 3 276 1 284 1 359 1 210 1 242 1 67 1 
54 1 130 1 311 2 4 1 30 1 234 1 249 2 139 1 50 1 166 1 88 2 106 1 276 1 282 1 210 1 
54 1 311 4 234 2 139 2 164 1 50 2 166 1 20 1 88 4 276 1 284 1 210 2 67 1 
50 1 54 1 166 1 88 1 311 1 276 1 139 1 210 1 
245 1 54 2 311 4 234 2 139 1 38 1 50 3 9 1 88 4 276 2 284 1 349 1 210 1 67 1 
50 1 54 1 166 1 84 1 203 1 88 2 159 1 311 2 276 1 234 1 139 1 210 1 
50 1 54 1 9 2 245 2 166 1 88 3 311 3 276 1 349 1 90 1 139 1 210 1 
50 2 51 1 281 1 366 2 
166 1 88 1 17 1 311 1 139 1 210 1 
50 1 54 1 166 1 88 2 311 2 276 1 234 1 242 1 139 1 210 1 
340 1 
50 1 54 1 166 1 88 1 311 1 276 1 139 1 210 1 
50 1 54 1 9 1 166 1 88 3 311 3 276 1 234 1 242 1 139 1 210 1 
38 1 50 1 284 1 67 1 
50 1 276 1 

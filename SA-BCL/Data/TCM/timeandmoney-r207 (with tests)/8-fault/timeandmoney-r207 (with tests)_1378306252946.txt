#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 78 183 31 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 78 183 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 279 28 34 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 279 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 132 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 88 79 339 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 245 76 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 78 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 78 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 78 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 78 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 78 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 78 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 78 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 132 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 88 79 339 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2585 | return null
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9719 | if (x) -> if (!x)
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5144 | if (x) -> if (!x)
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6018 | = null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration; | RETURN | 694 | return null
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
262 1 261 1 3 1 194 2 150 5 69 9 153 1 223 1 319 2 138 2 344 1 110 1 201 2 345 1 61 3 159 1 89 2 226 2 162 6 41 4 307 1 120 2 187 1 25 1 236 1 237 9 259 1 50 1 
262 1 261 1 3 1 194 2 150 5 69 9 153 1 223 1 319 2 138 2 344 1 110 1 201 2 345 1 61 3 89 2 159 1 226 2 162 6 41 4 307 1 120 2 187 1 25 1 236 1 237 9 259 1 50 1 
262 1 261 1 3 1 194 2 150 6 69 10 153 1 223 1 319 2 138 2 344 1 110 1 201 2 345 1 61 4 89 2 159 1 226 2 162 7 41 5 307 1 120 2 187 1 25 1 236 1 237 10 259 1 50 1 
262 1 261 1 194 2 150 4 69 7 153 1 223 1 319 2 138 2 344 1 110 1 201 1 345 1 61 2 89 2 159 1 226 2 162 4 41 3 307 1 120 2 187 1 25 1 236 1 237 7 259 1 50 1 
262 1 261 1 201 2 110 1 61 1 3 1 159 1 89 1 194 1 226 1 162 3 150 3 41 2 69 4 319 1 120 1 25 1 237 4 
262 1 261 1 138 1 345 1 159 1 255 1 226 1 194 1 150 1 127 1 69 2 269 1 319 1 307 1 120 1 237 2 
262 1 261 1 138 1 61 1 159 1 226 2 150 2 162 1 41 1 69 3 120 2 187 1 237 3 
262 1 261 1 3 1 194 1 150 5 69 9 223 1 319 1 138 1 344 1 201 2 110 1 61 3 159 1 89 1 226 2 346 1 162 7 41 4 75 1 120 2 187 1 25 1 237 9 
262 1 261 1 3 1 194 1 150 5 69 9 223 1 319 1 138 1 344 1 201 2 110 1 61 3 159 1 89 1 226 2 346 1 162 7 41 4 75 1 120 2 187 1 25 1 237 9 
132 1 277 1 184 1 
184 1 258 1 83 2 
158 2 216 1 67 2 48 2 204 2 336 2 189 1 105 2 
1 2 239 2 286 2 216 1 67 2 175 1 54 2 149 1 218 1 129 1 336 2 105 2 136 1 156 1 157 1 200 1 158 3 109 1 297 1 298 1 160 1 112 1 321 1 204 3 205 1 301 1 22 1 93 1 185 1 166 1 233 1 167 1 48 2 81 1 189 1 191 2 122 1 
177 1 158 1 23 1 216 1 67 1 18 1 48 1 204 1 336 1 105 1 
158 1 296 1 277 1 264 1 184 1 18 1 288 1 204 1 105 1 43 1 55 1 292 1 211 1 134 1 
216 1 67 2 288 1 336 2 105 2 177 1 55 1 134 2 14 1 158 2 296 1 277 1 18 2 184 1 204 2 43 1 23 1 211 2 48 2 
70 1 211 1 7 1 33 1 134 1 
305 1 70 1 277 1 184 1 211 2 7 1 134 2 115 1 
70 1 211 1 134 1 
158 1 216 1 67 1 18 1 7 1 204 1 336 1 105 1 177 1 23 1 211 1 134 1 14 1 48 1 
184 1 
305 1 70 1 277 1 184 1 211 2 7 1 134 2 220 1 
274 1 277 1 184 1 7 2 84 1 37 1 337 1 317 1 303 2 305 1 244 2 86 1 290 2 45 1 70 2 117 1 47 1 211 5 134 5 
132 1 189 1 
60 1 158 2 67 1 204 2 336 1 105 2 96 1 48 1 189 2 
106 1 352 1 144 1 
158 1 239 1 286 1 109 1 298 1 112 1 204 1 205 1 93 1 39 1 185 1 167 1 189 1 191 1 200 1 122 1 
60 1 158 5 67 1 62 2 204 5 336 4 105 5 292 1 165 1 232 1 282 1 48 4 100 1 189 1 
302 1 177 1 158 2 18 1 48 2 204 2 336 2 105 2 
158 2 239 1 109 1 286 1 298 1 62 1 112 1 204 2 205 1 336 1 105 1 93 1 185 1 144 1 167 1 48 1 100 1 122 1 191 1 200 1 
158 3 67 1 62 1 48 3 204 3 336 3 189 1 105 3 
177 1 158 1 18 1 48 1 204 1 336 1 105 1 
60 1 158 1 67 1 96 1 18 1 48 1 204 1 336 1 105 1 
1 2 239 1 286 1 216 1 67 2 240 1 54 1 149 1 218 1 288 1 129 1 336 3 105 3 55 1 134 1 157 1 200 1 60 1 158 4 109 1 297 1 296 1 298 1 62 1 18 1 112 1 321 1 204 4 205 1 301 1 43 1 22 1 44 1 93 1 185 1 211 1 166 1 167 1 48 3 100 1 81 1 189 1 122 1 191 1 
158 2 292 1 232 1 62 1 48 1 204 2 336 1 189 1 105 2 
60 1 158 3 296 1 67 1 184 1 18 1 62 2 288 1 204 3 336 3 105 3 43 1 44 1 55 1 64 1 211 1 134 1 48 3 100 1 
60 1 158 2 67 1 62 1 204 2 336 2 105 2 106 1 48 2 144 1 
158 1 239 1 286 1 109 1 298 1 112 1 204 1 205 1 93 1 185 1 167 1 189 1 191 1 200 1 122 1 
158 1 239 1 286 1 109 1 103 1 298 1 217 1 112 1 204 1 205 1 93 1 185 1 167 1 189 1 191 1 
1 2 102 1 149 1 54 4 218 1 9 1 129 1 318 1 199 1 294 1 180 1 295 1 106 2 136 2 157 1 275 1 17 1 321 1 301 1 166 2 352 2 234 1 144 2 310 1 
302 1 158 1 296 1 18 1 48 1 204 1 336 1 105 1 
140 1 
140 1 
304 1 263 1 
304 1 263 1 
304 1 263 1 
140 1 
140 1 
304 1 263 1 140 2 
140 1 
140 1 
140 1 
140 1 
140 1 
78 1 140 1 183 1 31 1 211 1 15 1 134 1 316 1 
78 1 140 1 183 1 15 1 316 1 
89 1 194 1 319 1 
194 1 319 1 127 1 
130 1 89 2 173 1 319 3 57 1 127 1 
270 1 89 1 173 1 319 2 57 1 127 1 
89 1 173 2 319 2 57 1 127 1 
0 1 214 1 102 1 30 1 82 1 7 4 83 3 9 1 317 1 244 1 11 1 197 1 318 1 290 1 70 1 271 1 295 1 134 5 320 2 274 2 277 1 184 2 303 1 305 1 117 3 97 2 211 5 212 2 258 1 98 1 169 1 331 1 
214 3 102 3 215 5 30 2 334 1 68 1 7 7 33 5 83 9 9 3 38 1 317 1 11 1 244 2 197 2 86 1 318 3 12 1 290 2 70 6 271 4 295 3 134 9 274 6 299 1 277 1 184 5 322 1 303 2 305 1 117 8 97 6 211 9 212 6 258 3 
214 1 102 1 30 1 7 2 83 4 9 1 244 1 197 1 290 1 86 1 318 1 271 1 295 1 134 3 320 1 274 2 277 1 184 3 303 1 117 3 97 2 211 3 212 2 258 2 98 1 169 1 
214 2 102 2 30 1 334 1 68 1 7 3 83 7 9 2 38 1 244 1 197 1 290 1 86 1 318 2 271 2 295 2 134 4 320 2 274 4 277 1 184 4 303 1 117 5 97 4 211 4 212 4 258 3 98 1 169 1 
132 1 167 1 35 1 
71 1 167 1 
248 1 
93 1 185 1 167 1 
231 1 167 1 
185 1 167 1 
93 1 185 1 253 1 107 1 167 3 35 2 
265 1 54 7 318 3 245 2 295 1 136 5 59 1 224 1 137 2 76 1 142 2 143 1 94 1 351 1 234 4 166 2 326 1 310 3 
265 1 54 7 318 3 245 2 295 1 136 5 59 1 224 3 137 2 76 1 142 2 143 1 94 1 351 1 234 6 166 2 326 1 310 3 
265 1 54 7 318 3 245 2 295 1 136 5 59 1 224 1 137 2 76 1 142 2 143 1 94 1 116 1 351 1 234 4 166 2 326 1 310 3 
1 2 214 3 238 1 102 3 193 1 53 1 126 1 265 2 149 1 54 33 9 3 129 1 318 6 291 1 245 2 295 4 136 18 157 1 59 2 224 7 137 3 92 1 76 1 142 3 301 1 143 1 94 1 351 1 166 15 234 13 235 3 326 2 188 4 310 6 171 1 
1 4 193 1 265 1 149 2 54 9 129 2 318 3 245 2 295 1 136 6 157 2 59 1 224 2 137 2 19 1 76 1 142 2 301 2 210 1 94 1 351 1 166 3 234 6 326 1 310 4 
262 1 261 1 239 1 332 1 286 1 194 1 333 1 150 1 315 1 151 1 127 1 69 2 128 1 268 1 130 1 40 1 319 2 16 1 138 1 109 1 89 1 159 1 298 1 226 1 162 1 46 1 120 1 237 2 329 1 191 1 
262 1 261 1 239 1 332 1 286 1 194 1 150 1 151 1 127 1 69 3 128 1 268 1 130 1 40 1 319 2 16 1 250 1 138 1 109 1 89 1 298 1 226 1 162 2 347 1 164 1 46 1 120 1 237 3 329 1 191 1 
262 1 261 1 239 1 332 1 286 1 194 1 150 1 151 1 127 1 69 2 128 1 130 1 40 1 319 2 16 1 138 1 109 1 298 1 89 1 162 2 347 1 164 1 237 2 329 1 191 1 
138 2 239 1 109 1 286 1 311 1 298 1 226 1 5 1 151 2 112 1 69 1 281 1 63 1 209 1 185 1 40 2 120 1 167 1 16 2 250 1 237 1 260 1 191 1 
239 1 332 1 286 1 194 1 333 1 151 1 127 1 69 1 128 1 268 1 130 1 40 1 319 2 16 1 138 1 109 1 89 1 159 1 298 1 226 1 164 1 46 1 120 1 237 1 329 1 191 1 
161 1 
172 2 264 1 314 1 83 2 222 1 317 1 55 1 179 2 272 1 134 5 135 2 274 2 276 1 277 1 184 2 18 1 91 2 20 1 279 1 63 1 185 1 65 1 191 2 239 2 286 2 30 1 241 1 195 1 288 1 335 2 105 1 244 1 290 1 70 6 292 1 158 1 109 1 296 1 298 1 111 1 73 4 112 2 204 1 43 1 208 1 303 1 209 1 305 3 117 2 308 2 211 5 350 1 258 2 167 1 353 2 
264 1 314 1 288 1 220 1 105 1 55 1 70 2 292 1 134 3 135 1 158 1 296 1 111 1 18 1 73 2 20 1 204 1 43 1 208 1 305 1 211 3 65 1 
264 1 314 1 288 1 220 1 105 1 55 1 70 1 292 1 134 3 158 1 296 1 111 1 277 1 18 1 73 3 184 1 20 1 204 1 43 1 208 1 305 1 211 3 65 1 353 1 
264 1 314 1 288 1 220 1 335 1 105 1 55 1 70 2 292 1 134 3 135 1 158 1 296 1 111 1 277 1 18 1 73 3 184 1 20 1 204 1 43 1 208 1 305 1 211 3 65 1 353 1 
172 2 264 1 314 1 220 1 222 1 317 1 131 1 55 1 179 2 134 5 135 4 274 1 277 5 18 1 184 5 20 1 91 2 279 1 65 1 186 1 26 1 28 1 288 1 335 4 105 1 244 1 290 1 70 7 292 1 158 1 296 1 111 1 73 6 204 1 43 1 208 1 303 1 305 3 348 1 117 1 308 2 211 5 258 2 353 4 
172 2 264 1 314 1 83 2 222 1 317 1 55 1 179 2 134 4 135 2 274 1 277 1 18 1 184 2 20 1 91 2 279 1 65 1 241 1 288 1 335 2 105 1 244 1 290 1 70 4 292 1 158 1 296 1 111 1 73 4 204 1 43 1 208 1 303 1 305 2 117 1 308 2 211 4 258 2 353 2 
172 2 28 1 264 1 314 1 288 1 335 2 222 1 105 1 317 1 244 1 55 1 290 1 70 4 292 1 179 2 134 4 135 2 274 1 158 1 296 1 277 1 111 1 184 1 18 1 73 4 91 2 20 1 279 1 204 1 43 1 208 1 303 1 305 2 348 1 117 1 308 2 211 4 65 1 258 2 186 1 353 2 
172 2 28 1 264 1 314 1 288 1 335 2 222 1 105 1 317 1 244 1 55 1 290 1 70 4 292 1 179 2 134 4 135 2 274 1 158 1 296 1 277 1 111 1 184 1 18 1 73 4 91 2 20 1 279 1 204 1 43 1 208 1 303 1 305 2 348 1 117 1 308 2 211 4 65 1 258 2 186 1 353 2 
172 1 28 1 264 1 314 1 288 1 34 1 267 1 105 1 317 1 244 1 55 1 290 1 292 1 179 1 340 1 134 2 274 1 158 1 296 1 111 1 18 1 73 2 20 1 279 1 204 1 113 1 43 1 208 1 303 1 117 1 211 2 65 1 
172 2 28 1 264 1 314 1 288 1 222 1 335 3 105 1 317 1 244 1 290 1 55 1 70 5 292 1 179 2 134 4 135 3 274 1 158 1 296 1 277 1 111 1 184 1 18 1 73 5 91 2 20 1 279 1 204 1 43 1 208 1 303 1 305 2 348 1 117 1 308 2 211 4 65 1 258 2 186 1 26 1 353 3 
172 2 28 1 264 1 314 1 288 1 222 1 335 3 105 1 317 1 244 1 290 1 55 1 70 5 292 1 179 2 134 4 135 3 274 1 158 1 296 1 277 1 111 1 184 1 18 1 73 5 91 2 20 1 279 1 204 1 43 1 208 1 303 1 305 2 348 1 117 1 308 2 211 4 65 1 258 2 186 1 26 1 353 3 
172 1 264 1 314 1 288 1 105 1 267 1 317 1 244 1 290 1 55 1 292 1 179 1 340 1 134 2 274 1 158 1 296 1 111 1 18 1 73 2 20 1 279 1 204 1 43 1 208 1 303 1 117 1 211 2 65 1 
1 2 137 1 54 1 149 1 218 1 321 1 129 1 142 1 301 1 318 1 94 1 245 1 132 1 180 1 351 1 234 1 136 1 310 1 157 1 
1 2 214 2 102 2 149 1 54 10 218 1 9 1 129 1 104 1 338 1 85 1 318 2 198 1 106 3 295 1 136 6 157 1 224 1 90 1 92 1 321 1 301 1 234 2 166 4 352 8 144 8 235 2 188 2 310 1 
1 2 239 1 101 1 286 1 149 1 54 2 218 1 129 1 336 1 105 1 39 1 198 1 106 1 156 1 136 1 157 1 200 1 158 2 109 1 181 1 297 1 298 1 62 1 112 1 321 1 204 2 205 1 301 1 93 1 185 1 166 1 167 1 48 1 100 1 189 1 145 1 122 1 191 1 
1 6 214 2 174 2 6 2 54 20 218 3 9 2 129 3 176 2 318 5 58 1 136 11 224 1 137 2 18 1 62 1 141 1 321 3 142 2 22 2 93 2 94 1 185 2 234 6 144 6 100 1 191 1 239 1 102 2 286 1 149 3 336 1 105 1 245 2 198 1 106 6 295 3 156 1 157 3 200 2 158 3 109 2 297 1 298 2 74 2 112 1 76 1 204 3 205 2 207 1 301 3 351 1 166 9 352 6 48 1 167 2 310 5 122 2 
1 4 239 6 286 5 175 1 315 1 149 2 54 2 218 2 129 2 336 1 266 1 105 1 339 1 289 1 180 1 156 1 136 1 157 2 108 1 158 1 109 2 88 1 297 1 298 2 62 1 112 2 204 1 321 2 301 2 63 1 209 1 185 2 164 1 79 1 166 1 48 1 167 3 330 1 191 6 
1 2 214 1 102 1 67 1 149 1 54 3 218 1 9 1 129 1 336 1 105 1 318 1 198 1 106 1 295 1 136 1 157 1 60 1 158 1 321 1 204 1 301 1 349 1 234 1 352 1 166 2 144 1 48 1 310 1 
1 2 275 1 102 1 54 2 149 1 218 1 321 1 129 1 301 1 318 1 180 1 106 1 234 1 352 1 144 1 136 2 157 1 224 1 
1 2 54 2 149 1 218 1 321 1 9 1 129 1 301 1 199 1 180 1 106 1 295 1 234 1 352 1 166 2 144 1 310 1 157 1 
1 2 214 1 102 1 149 1 54 4 218 1 9 1 129 1 318 1 180 1 106 2 295 1 136 2 157 1 224 1 321 1 301 1 352 2 234 2 166 2 144 2 310 1 
1 2 275 1 102 1 54 2 149 1 218 1 321 1 129 1 266 1 301 1 318 1 106 1 234 1 352 1 144 1 136 2 157 1 224 1 
1 2 54 2 149 1 218 1 321 1 9 1 129 1 266 1 301 1 199 1 106 1 295 1 234 1 352 1 166 2 144 1 310 1 157 1 
1 2 214 1 102 1 149 1 54 4 218 1 9 1 129 1 266 1 318 1 106 2 295 1 136 2 157 1 224 1 321 1 301 1 352 2 234 2 166 2 144 2 310 1 
1 2 214 1 102 1 54 4 149 1 218 1 9 1 129 1 318 1 106 2 295 1 136 2 157 1 224 1 321 1 301 1 352 2 234 2 166 2 144 2 310 1 
1 2 239 1 286 1 54 2 149 1 218 1 129 1 136 1 156 1 157 1 200 1 158 1 109 1 297 1 298 1 112 1 204 1 321 1 205 1 301 1 22 1 93 1 185 1 166 1 167 1 189 1 122 1 191 1 
1 2 239 1 286 1 103 1 148 1 217 1 54 2 149 1 218 1 129 1 136 1 156 1 157 1 158 1 109 1 297 1 298 1 112 1 204 1 321 1 205 1 301 1 93 1 185 1 166 1 167 1 189 1 191 1 
1 2 214 1 102 1 149 1 54 4 218 1 9 1 129 1 318 1 198 1 106 2 295 1 136 2 157 1 224 1 321 1 301 1 352 2 234 2 166 2 144 2 310 1 
1 2 214 1 102 1 239 1 286 1 54 4 315 1 149 1 218 1 9 1 129 1 176 1 318 1 295 1 106 2 136 2 157 1 224 1 200 1 158 1 109 1 298 1 204 1 321 1 205 1 301 1 22 1 93 1 185 1 166 2 234 2 352 2 144 2 167 1 310 1 122 1 191 1 
1 2 214 1 102 1 67 1 149 1 54 3 218 1 9 1 129 1 336 1 105 1 318 1 198 1 295 1 106 1 136 2 157 1 224 1 60 1 158 1 321 1 228 1 204 1 301 1 166 1 234 1 352 1 48 1 144 1 
284 1 1 4 214 3 102 3 29 1 52 2 53 1 287 1 149 2 54 19 9 3 129 2 318 3 133 1 295 3 342 1 136 9 157 2 224 3 19 1 92 1 301 2 324 1 24 2 166 10 234 6 235 1 188 2 213 1 310 3 
284 2 1 6 214 3 102 3 193 2 52 1 29 1 287 1 53 2 149 3 54 26 9 2 129 3 318 3 56 1 295 2 342 2 249 1 136 14 157 3 224 2 254 1 19 1 300 1 301 3 306 1 257 1 24 4 234 4 166 12 235 2 213 1 188 2 310 2 
284 1 1 6 214 4 102 4 193 1 52 1 29 1 53 3 287 1 149 3 54 37 9 4 129 3 318 5 245 1 56 1 295 4 249 1 342 2 136 18 157 3 224 4 137 1 254 1 19 1 300 1 92 1 142 1 301 3 324 1 94 1 306 1 257 1 24 4 351 1 166 19 234 8 235 3 188 4 213 1 310 4 190 1 
284 1 1 8 214 4 102 4 193 2 52 1 29 1 53 3 287 1 149 4 54 34 9 3 129 4 318 5 245 1 56 1 295 3 249 1 342 2 136 18 157 4 224 3 137 1 254 1 19 1 300 1 92 1 142 1 301 4 324 1 94 1 306 1 257 1 24 4 351 1 166 16 234 7 235 3 188 4 213 1 310 4 190 1 
284 1 1 4 214 7 102 7 193 1 52 1 29 1 53 2 287 1 149 2 54 48 9 7 129 2 318 8 245 1 56 1 295 7 249 1 342 1 136 25 157 2 224 7 137 1 254 1 90 2 19 1 300 1 92 2 142 1 301 2 94 1 306 1 257 1 24 4 351 1 166 23 234 14 235 4 188 4 213 1 310 7 
1 2 239 2 286 2 175 2 149 1 54 2 218 1 129 1 105 2 178 1 289 1 198 1 156 1 136 1 157 1 158 2 109 1 88 1 297 1 298 1 321 1 204 2 301 1 229 1 256 1 185 1 118 1 166 1 167 1 27 1 191 2 
239 2 332 1 109 1 286 2 89 1 298 1 194 1 315 1 127 1 219 1 151 1 130 1 164 1 46 1 319 2 247 1 343 1 329 1 191 2 
239 1 332 1 286 1 109 1 89 1 298 1 194 1 127 1 151 1 280 1 130 1 164 1 46 1 319 2 343 1 329 1 191 1 
239 1 109 1 286 1 311 1 298 1 112 1 219 1 151 1 21 1 63 1 209 1 185 1 167 1 191 1 
239 1 332 1 286 1 109 1 89 1 298 1 194 1 127 1 219 1 151 1 130 1 164 1 46 1 319 2 247 1 343 1 329 1 191 1 
328 1 
274 1 117 1 132 1 277 1 47 1 184 1 337 1 
83 1 222 1 317 1 244 1 290 1 70 1 134 1 274 1 277 1 184 2 91 1 303 1 305 1 117 1 308 1 211 1 258 1 
2 2 214 2 313 1 6 2 8 1 315 1 83 12 9 2 317 4 10 2 55 2 318 2 272 1 134 5 274 8 182 1 277 2 184 8 93 3 185 3 231 2 97 6 191 3 285 2 66 2 239 3 102 2 286 3 30 2 35 2 196 2 337 1 244 4 290 4 70 5 71 3 295 2 341 2 251 2 253 1 109 3 298 4 112 1 77 1 303 4 163 1 305 3 117 9 47 1 211 5 212 6 167 10 258 6 168 2 
214 2 102 2 53 1 30 1 243 1 83 6 9 2 317 2 244 2 290 2 318 2 70 1 56 1 295 2 272 1 249 1 134 1 251 1 274 5 254 1 277 2 184 5 300 1 323 1 303 2 305 1 257 1 117 8 97 5 211 1 212 5 258 3 235 1 168 2 188 1 
274 2 137 1 76 1 142 1 317 1 303 1 244 1 318 1 348 1 290 1 117 2 245 1 295 1 211 1 134 1 168 1 
274 1 277 1 184 1 337 1 317 1 303 1 244 1 290 1 117 1 47 1 
274 5 214 2 102 2 184 5 6 1 83 10 9 2 318 2 117 5 97 5 295 2 212 5 258 5 168 2 251 1 
305 1 70 1 277 1 184 1 211 1 134 1 
239 4 286 4 30 2 195 1 8 2 317 1 244 2 86 1 290 2 70 4 272 2 134 3 274 2 252 1 109 1 276 1 298 1 112 2 77 1 303 2 63 1 305 2 209 1 185 1 117 2 211 3 167 1 283 1 191 4 
1 2 239 1 286 1 216 1 67 2 54 1 149 1 218 1 129 1 336 2 105 2 157 1 200 1 158 3 109 1 297 1 298 1 112 1 204 3 321 1 205 1 301 1 22 1 93 1 185 1 166 1 48 2 167 1 81 1 189 1 191 1 122 1 
274 2 277 2 30 1 265 1 184 4 83 4 317 1 303 1 244 1 290 1 117 1 97 2 212 2 272 1 258 2 
78 1 316 1 
78 1 316 1 
78 1 316 1 
78 1 316 1 
78 1 316 1 
78 1 316 1 
78 1 316 1 
78 1 316 1 
140 1 
1 4 193 1 149 2 54 10 129 2 318 3 245 2 295 1 136 6 157 2 224 3 137 2 76 1 142 2 301 2 94 1 351 1 234 6 166 4 310 3 
137 1 318 1 94 1 245 1 132 1 351 1 54 1 234 1 136 1 310 1 142 1 
1 2 214 1 102 1 149 1 54 4 9 1 221 1 129 1 301 1 318 1 295 1 166 2 234 2 136 2 310 1 157 1 224 1 
214 1 102 1 53 1 54 7 92 1 9 1 318 1 295 1 166 4 234 2 235 1 188 2 136 3 310 1 224 1 
1 2 214 2 102 2 193 1 54 18 149 1 9 2 129 1 338 1 318 5 245 2 295 3 136 10 157 1 224 2 137 2 90 1 92 1 76 1 142 2 301 1 94 1 351 1 166 8 234 6 235 2 188 2 310 4 
54 1 166 1 188 1 
54 1 235 1 136 1 
1 2 214 1 102 1 6 1 149 1 54 6 221 1 9 1 129 1 301 1 318 1 295 1 166 3 234 3 136 3 310 2 157 1 224 1 
1 2 214 2 102 2 53 1 54 12 149 1 9 2 129 1 318 2 56 1 295 2 249 1 136 6 157 1 224 1 254 1 19 1 300 1 301 1 257 1 166 6 234 2 235 1 188 1 310 1 
318 1 245 1 54 1 136 1 
137 1 1 2 123 1 193 1 54 3 149 1 129 1 142 1 301 1 94 1 351 1 234 2 166 2 136 1 310 1 157 1 224 1 
1 2 137 1 19 1 149 1 54 7 76 1 129 1 142 1 301 1 318 2 245 1 295 1 234 4 166 3 136 4 310 2 157 1 224 2 
1 2 102 1 19 1 149 1 54 2 129 1 301 1 318 1 234 1 136 2 157 1 224 1 
1 2 214 1 102 1 19 1 149 1 54 4 9 1 129 1 301 1 318 1 295 1 166 2 234 2 136 2 310 1 157 1 224 1 
1 6 137 1 193 1 123 1 19 1 54 3 149 3 129 3 142 1 301 3 324 1 166 2 234 2 136 1 310 1 157 3 224 1 
1 8 238 1 214 2 102 2 193 1 53 1 126 1 149 4 54 24 221 1 9 2 129 4 318 5 291 1 245 2 295 3 136 13 157 4 224 4 137 2 19 1 76 1 142 2 301 4 324 1 94 1 351 1 166 11 234 8 235 3 188 3 310 4 
1 2 53 1 54 8 149 1 129 1 318 3 245 2 295 1 249 1 136 5 157 1 224 1 137 2 19 1 76 1 142 2 301 1 94 1 351 1 166 3 234 4 235 1 188 1 310 3 
1 4 214 1 102 1 53 1 54 11 149 2 221 1 129 2 318 4 245 2 295 1 249 1 136 7 157 2 224 2 137 2 19 1 92 1 76 1 142 2 301 2 94 1 351 1 166 4 234 5 235 1 188 2 310 3 
1 6 214 2 102 2 193 1 53 1 54 19 149 3 221 1 9 2 129 3 318 5 245 2 56 1 295 3 249 1 136 10 157 3 224 2 137 2 254 1 19 1 300 1 76 1 142 2 301 3 94 1 257 1 351 1 166 9 234 6 235 1 188 1 310 4 
1 6 214 2 102 2 193 1 53 1 54 17 149 3 221 1 9 1 129 3 318 5 245 2 56 1 295 2 249 1 136 11 157 3 224 4 137 2 254 1 19 1 300 1 76 1 142 2 301 3 94 1 257 1 351 1 166 6 234 8 235 1 188 1 310 4 
1 2 53 1 54 8 149 1 129 1 318 3 245 2 295 1 249 1 136 5 157 1 224 1 137 2 19 1 76 1 142 2 301 1 94 1 351 1 166 3 234 4 235 1 188 1 310 3 
1 2 214 2 102 2 53 1 54 12 149 1 9 2 129 1 318 2 56 1 295 2 249 1 136 6 157 1 224 1 254 1 19 1 300 1 301 1 257 1 166 6 234 2 235 1 188 1 310 1 
1 8 214 2 102 2 193 2 53 1 54 18 149 4 221 1 9 1 129 4 318 5 245 2 56 1 295 2 249 1 136 11 157 4 224 2 137 2 254 1 19 1 300 1 76 1 142 2 301 4 94 1 257 1 351 1 166 7 234 6 235 1 188 1 310 4 
1 8 214 3 102 3 193 2 53 1 54 16 149 4 9 2 129 4 318 3 56 1 295 2 249 1 136 9 157 4 224 3 254 1 19 1 300 1 301 4 324 1 257 1 166 7 234 6 235 1 188 1 310 3 
137 2 54 6 76 1 142 2 94 1 318 3 245 2 295 1 351 1 166 2 234 6 136 4 310 3 224 3 
1 8 214 2 102 2 193 2 53 1 54 18 149 4 9 1 129 4 318 5 245 2 56 1 295 2 249 1 136 11 157 4 224 2 137 2 254 1 19 1 300 1 76 1 142 2 301 4 324 1 94 1 257 1 351 1 166 7 234 6 235 1 188 1 310 4 
158 1 95 1 292 1 232 1 204 1 189 1 105 1 
225 1 158 1 32 1 242 1 227 1 204 1 105 1 230 1 95 1 292 1 232 1 189 1 
63 1 209 1 185 1 239 1 109 1 286 1 132 1 298 1 167 1 112 1 191 1 
158 2 239 1 286 1 109 1 298 1 62 1 112 1 204 2 205 1 336 1 105 1 93 1 185 1 167 1 48 1 189 1 191 1 122 1 
285 1 158 2 239 1 286 1 109 1 296 1 298 1 18 1 62 1 8 1 204 2 205 1 336 2 43 1 105 2 93 2 185 2 231 1 167 3 48 1 189 1 191 1 122 1 
285 1 239 2 124 1 286 2 217 1 8 1 336 2 105 2 158 2 109 1 296 1 298 1 62 1 18 1 204 2 205 1 43 1 93 2 185 2 231 1 48 1 167 3 189 1 191 2 
285 1 239 3 124 1 286 3 8 1 35 1 55 1 70 1 71 1 134 2 273 1 109 1 298 1 277 1 184 1 112 1 93 1 185 1 231 1 211 2 325 1 167 4 191 3 
285 1 239 3 124 1 286 3 109 1 277 1 298 1 184 1 8 1 112 1 35 1 93 1 55 1 185 1 70 1 231 1 71 1 211 2 341 1 134 2 167 4 191 3 
330 1 
108 1 239 5 253 1 286 4 109 2 88 1 125 1 202 1 298 3 203 1 315 1 112 2 339 1 93 1 185 2 164 1 79 1 167 3 330 1 191 5 
1 4 174 1 315 1 54 6 218 2 129 2 176 1 318 3 136 4 224 1 137 2 18 1 62 1 321 2 142 2 22 1 93 1 185 1 94 1 234 4 27 1 191 1 239 1 286 1 149 2 336 1 105 1 198 1 245 2 295 1 157 2 200 1 158 2 109 1 298 1 204 2 76 1 205 1 301 2 207 1 351 1 166 2 48 1 167 1 310 3 122 1 
2 1 239 1 286 1 7 1 35 1 196 1 337 1 317 2 244 2 10 1 290 2 55 1 70 2 71 1 341 1 134 3 274 1 277 1 184 1 112 1 77 1 303 2 305 1 117 1 47 1 211 3 167 2 191 1 
330 1 
239 4 124 1 286 4 109 1 312 1 298 1 315 1 112 1 63 1 209 1 185 1 167 1 191 4 
239 2 286 2 109 1 125 1 202 1 146 1 298 2 8 1 93 1 185 1 293 1 167 1 170 1 191 2 
239 1 109 1 286 1 298 1 194 1 319 1 127 1 112 1 329 1 191 1 
185 1 239 2 109 1 164 1 286 2 88 1 298 1 118 1 315 1 167 1 191 2 
239 5 108 1 286 4 109 2 312 1 88 1 298 2 8 1 315 1 112 1 63 1 209 1 185 2 79 1 167 3 191 5 
192 1 239 5 108 1 286 4 109 2 312 1 88 1 298 2 8 1 315 1 112 1 63 1 209 1 185 2 167 3 191 5 
158 2 239 1 286 1 109 1 298 1 62 1 217 1 112 1 204 2 205 1 336 1 105 1 93 1 185 1 167 1 48 1 189 1 191 1 
239 1 253 1 286 1 109 1 125 1 202 1 298 2 203 1 8 1 93 1 185 1 167 1 191 1 
154 1 51 1 4 1 119 1 189 1 
51 2 216 1 4 2 67 1 7 1 288 1 336 1 105 1 154 2 177 1 55 1 72 1 134 2 14 1 158 1 296 1 277 1 18 2 184 1 204 1 43 1 44 1 23 1 211 2 119 1 48 1 121 1 80 1 189 1 
51 1 158 1 4 1 204 1 105 1 229 1 178 1 256 1 119 1 
119 1 121 1 80 1 
262 1 261 1 132 1 150 1 
262 1 261 1 226 1 120 1 150 1 69 1 237 1 
138 1 16 1 237 1 
261 1 262 1 345 2 159 1 226 1 150 1 69 3 114 1 246 1 120 1 327 1 237 3 
262 1 261 1 201 1 226 1 120 1 150 1 162 1 69 2 237 2 
110 1 89 1 159 1 194 1 319 1 226 1 120 1 150 1 41 1 69 1 237 1 
262 1 159 1 226 1 120 1 150 1 69 1 237 1 
262 2 261 1 159 1 226 1 120 1 69 1 237 1 
262 1 155 1 159 1 278 1 226 2 120 2 150 1 87 1 69 2 237 2 
262 1 261 1 344 1 61 1 159 1 226 1 162 2 150 2 41 1 69 3 223 1 120 1 237 3 
262 1 261 1 159 1 89 1 226 1 194 1 150 1 162 1 127 1 69 2 130 1 319 2 13 1 120 1 237 2 
262 1 261 1 201 1 3 1 61 1 159 1 226 2 162 2 150 2 41 1 69 4 120 2 237 4 
262 1 261 1 159 1 226 1 120 1 150 1 69 1 237 1 
262 2 261 2 345 1 61 1 226 1 162 2 150 3 41 1 69 4 36 1 114 1 120 1 327 1 237 4 
262 1 261 1 139 1 159 1 226 1 147 1 150 1 162 1 69 2 75 1 120 1 237 2 
261 1 262 1 345 2 159 1 226 1 150 1 69 3 114 2 120 1 99 1 327 1 237 3 
150 2 309 1 42 2 49 1 
159 1 226 1 120 1 69 1 152 1 237 1 
262 1 261 1 344 1 159 1 226 1 120 1 150 1 162 1 69 2 237 2 
206 1 
262 1 261 1 159 1 226 1 120 1 150 1 69 1 237 1 
261 1 262 1 344 1 345 1 159 1 226 1 162 1 150 1 69 3 120 1 237 3 
61 1 150 1 41 1 36 1 
262 1 150 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (64,225) (64,225) (21,309) 117 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 115 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 360 370 196 231 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 360 370 196 231 76 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 115 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 321 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5368 | stmt -> ;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1069 | == -> !=
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | RETURN | 1989 | return null
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | ASSIGN | 1192 | = null
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> <=
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 838 | = null
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | RETURN | 891 | return null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11832 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
347 6 50 1 143 1 304 1 207 2 82 2 98 1 5 9 209 1 354 5 37 1 58 1 101 2 171 1 194 3 265 1 172 2 12 9 238 1 176 2 240 2 16 1 366 1 241 1 90 1 138 2 48 1 300 4 
347 6 50 1 143 1 304 1 207 2 82 2 98 1 5 9 209 1 354 5 37 1 58 1 101 2 171 1 194 3 265 1 172 2 12 9 238 1 176 2 240 2 16 1 366 1 241 1 90 1 138 2 48 1 300 4 
347 7 50 1 143 1 304 1 207 2 82 2 98 1 5 10 209 1 354 6 37 1 58 1 101 2 171 1 194 4 265 1 172 2 12 10 238 1 176 2 240 2 16 1 366 1 241 1 90 1 138 2 48 1 300 5 
347 4 143 1 304 1 207 2 82 2 98 1 5 7 209 1 354 4 37 1 58 1 101 2 171 1 194 2 265 1 172 2 12 7 238 1 176 1 240 2 16 1 366 1 241 1 90 1 138 2 48 1 300 3 
347 3 50 1 304 1 176 2 240 1 207 1 241 1 82 1 5 4 354 3 138 1 37 1 300 2 58 1 101 1 194 1 265 1 12 4 
304 1 240 1 32 1 132 1 207 1 82 1 5 2 90 1 354 1 138 1 58 1 170 1 265 1 238 1 12 2 172 1 
347 1 304 1 240 2 207 2 5 3 354 2 300 1 58 1 171 1 194 1 265 1 12 3 172 1 
94 1 347 7 50 1 304 1 207 2 98 1 82 1 5 9 209 1 354 5 37 1 58 1 101 1 194 3 171 1 265 1 172 1 12 9 176 2 240 2 241 1 136 1 138 1 300 4 
94 1 347 7 50 1 304 1 207 2 98 1 82 1 5 9 209 1 354 5 37 1 58 1 101 1 194 3 171 1 265 1 172 1 12 9 176 2 240 2 241 1 136 1 138 1 300 4 
269 1 296 1 39 1 
296 1 317 1 173 2 
192 2 146 2 251 2 206 2 134 2 359 1 84 1 157 2 
251 2 95 2 188 1 118 2 303 2 206 2 258 1 84 1 192 3 146 2 147 1 308 1 8 1 333 1 124 1 212 1 264 1 87 1 359 1 268 1 292 1 272 1 43 1 295 1 17 2 134 2 20 1 157 3 47 1 201 1 275 1 276 1 248 1 26 1 182 2 225 1 140 1 
192 1 146 1 251 1 319 1 14 1 206 1 189 1 134 1 359 1 157 1 
269 1 29 1 2 1 14 1 296 1 155 1 52 1 157 1 146 1 192 1 202 1 299 1 181 1 357 1 
269 1 29 1 251 1 2 1 14 1 206 1 296 1 134 1 52 1 157 1 146 1 192 1 202 2 299 1 357 2 
202 1 302 1 31 1 357 1 358 1 
269 1 174 1 202 2 31 1 357 2 296 1 358 1 239 1 
202 1 31 1 357 1 
251 1 14 1 154 1 206 1 189 1 134 1 157 1 146 1 192 1 202 1 319 1 357 1 358 1 359 1 
296 1 
269 1 174 1 202 2 31 1 357 2 296 1 358 1 226 1 
269 1 174 1 92 1 116 1 65 1 31 2 329 1 296 1 145 2 46 1 202 5 72 1 340 1 357 5 28 1 358 2 114 1 40 2 106 2 
39 1 84 1 
251 1 119 1 206 1 134 1 157 2 84 2 146 2 192 2 320 1 
169 1 232 1 315 1 
268 1 95 1 188 1 118 1 295 1 17 1 166 1 258 1 20 1 84 1 157 1 192 1 47 1 308 1 8 1 87 1 
95 1 118 1 17 1 323 1 20 1 
192 3 146 3 251 3 206 3 230 1 134 1 84 1 157 3 
192 1 146 1 251 1 319 1 14 1 206 1 157 1 
192 1 146 1 251 1 320 1 119 1 14 1 206 1 134 1 157 1 
192 1 146 1 251 1 320 1 206 1 323 1 134 1 157 1 
192 2 146 2 251 1 206 1 230 1 155 1 84 1 227 1 157 2 
323 1 
251 2 206 2 230 1 134 1 232 1 157 2 169 1 146 2 192 2 320 1 
268 1 95 1 188 1 118 1 295 1 17 1 258 1 20 1 84 1 157 1 192 1 47 1 308 1 8 1 87 1 
268 1 95 1 118 1 295 1 17 1 242 1 258 1 20 1 84 1 157 1 192 1 47 1 260 1 8 1 87 1 
303 2 232 2 169 2 331 1 286 1 124 1 211 1 212 2 264 1 315 2 195 1 62 1 216 1 15 1 43 1 201 1 298 1 276 1 275 2 247 1 248 1 27 1 182 4 369 1 
192 1 146 1 251 1 2 1 25 1 14 1 206 1 157 1 
251 2 14 1 206 2 230 1 134 1 157 2 84 1 146 2 192 2 320 1 263 1 323 1 
192 2 146 2 251 2 319 1 25 1 14 1 206 2 157 2 
259 1 121 1 
259 1 121 1 
245 1 44 1 
245 1 44 1 
245 1 44 1 
259 1 121 1 122 1 
44 1 259 2 245 1 121 2 261 1 312 1 128 1 
259 1 121 1 220 1 
259 1 121 1 122 1 
259 1 121 1 122 1 
259 1 121 1 191 1 
259 1 121 1 191 1 
259 1 121 1 191 1 
214 3 293 2 296 1 259 2 273 1 178 2 202 2 261 1 121 2 53 1 54 1 332 1 75 1 341 1 357 2 343 1 281 2 11 2 60 2 
251 2 206 2 84 1 259 1 146 2 192 2 121 1 285 1 53 1 235 1 123 1 357 1 266 1 60 1 214 1 293 1 157 2 178 1 202 1 23 1 220 1 281 1 324 1 186 1 
138 1 101 1 82 1 
138 1 132 1 82 1 
164 1 101 2 132 1 69 1 82 3 42 1 
74 1 164 1 101 1 132 1 82 2 42 1 
164 2 101 1 132 1 82 2 42 1 
116 3 31 1 34 1 145 1 235 1 123 1 55 1 86 2 357 5 236 1 358 4 103 1 40 1 173 3 361 2 106 1 174 1 269 1 65 2 15 1 130 1 296 2 317 1 202 5 298 1 24 2 322 1 27 1 369 1 114 1 324 1 345 1 
92 1 116 8 302 5 204 1 31 6 79 5 305 1 34 2 145 2 235 4 86 6 357 9 193 1 213 1 236 3 358 7 40 2 173 9 361 6 106 2 269 1 174 1 65 6 15 3 45 1 296 5 130 1 317 3 156 1 202 9 298 3 322 2 27 3 369 3 114 1 
92 1 116 3 34 1 145 1 235 1 86 2 357 3 358 2 236 1 103 1 40 1 361 2 173 4 106 1 269 1 15 1 65 2 296 3 317 2 202 3 298 1 24 1 322 1 27 1 369 1 345 1 
92 1 116 5 305 1 34 1 145 1 235 2 86 4 357 4 193 1 213 1 358 3 236 2 40 1 103 1 173 7 361 4 106 1 269 1 15 2 65 4 296 4 317 3 202 4 298 2 24 2 322 1 27 2 369 2 345 1 
87 1 39 1 83 1 
294 1 87 1 
165 1 
295 1 87 1 
47 1 295 1 150 1 224 1 87 3 83 2 
47 1 295 1 87 1 
63 1 87 1 
62 3 271 1 153 1 15 1 66 1 18 1 243 1 71 1 275 3 27 1 280 1 223 1 211 2 313 1 182 7 212 4 91 2 
62 3 271 1 153 1 15 1 66 1 18 1 243 1 71 1 275 3 27 1 280 1 223 1 211 2 313 1 182 7 212 4 91 2 
62 3 271 1 153 1 15 1 66 1 18 1 243 1 71 1 246 1 275 3 27 1 280 1 223 1 211 2 313 1 182 7 212 4 91 2 
303 2 33 1 257 1 353 3 234 1 313 2 211 5 264 1 212 16 236 3 314 1 360 4 62 10 153 1 271 2 15 4 198 1 43 1 66 2 18 1 243 1 71 1 201 1 298 3 276 1 275 15 223 2 280 5 27 4 182 31 369 3 370 1 301 1 91 3 
254 1 303 4 33 1 211 3 313 1 264 2 212 5 62 4 271 1 15 1 43 2 66 1 18 1 243 1 201 2 71 1 276 2 275 4 27 1 342 1 223 1 280 1 182 9 91 2 
347 1 95 1 118 1 96 1 304 1 255 1 350 1 207 1 258 1 82 2 5 2 120 1 354 1 8 1 311 1 58 1 101 1 265 1 104 1 88 1 12 2 172 1 240 1 17 1 132 1 69 1 111 1 138 1 73 1 184 1 
95 1 347 2 118 1 1 1 96 1 255 1 350 1 207 1 258 1 82 2 5 3 120 1 354 1 8 1 58 1 101 1 265 1 88 1 12 3 172 1 362 1 240 1 17 1 132 1 69 1 111 1 138 1 73 1 184 1 139 1 
95 1 347 2 118 1 1 1 96 1 255 1 350 1 258 1 82 2 5 2 120 1 354 1 8 1 58 1 101 1 265 1 88 1 172 1 12 2 362 1 17 1 132 1 69 1 111 1 138 1 
95 1 118 1 96 2 306 1 258 1 207 1 5 1 120 2 8 1 57 1 87 1 12 1 172 2 61 1 197 1 240 1 295 1 67 1 17 1 20 1 22 1 111 2 139 1 
95 1 118 1 96 1 304 1 255 1 350 1 207 1 258 1 82 2 5 1 120 1 8 1 101 1 104 1 88 1 12 1 172 1 362 1 240 1 17 1 132 1 69 1 111 1 138 1 73 1 184 1 
102 1 
95 2 2 1 144 1 145 1 52 1 146 1 192 1 99 2 8 1 148 2 56 2 152 1 336 2 106 1 61 1 13 1 14 1 65 2 295 1 107 1 296 2 17 2 19 2 155 1 20 2 157 1 202 5 299 1 114 1 29 1 346 2 116 2 118 2 31 6 306 1 258 1 351 1 307 1 36 1 357 5 87 1 40 1 173 2 41 1 269 1 174 3 175 2 363 1 131 4 317 2 274 1 181 1 322 1 279 1 326 1 
29 1 2 1 31 2 144 1 351 1 52 1 192 1 146 1 357 3 41 1 174 1 175 1 14 1 131 2 155 1 157 1 202 3 299 1 274 1 181 1 226 1 326 1 
29 1 2 1 31 1 144 1 351 1 52 1 192 1 146 1 357 3 41 1 269 1 174 1 14 1 131 3 296 1 155 1 19 1 157 1 202 3 299 1 274 1 181 1 226 1 326 1 
29 1 346 1 2 1 31 2 144 1 351 1 52 1 192 1 146 1 357 3 41 1 174 1 269 1 175 1 14 1 131 3 296 1 155 1 19 1 157 1 202 3 299 1 274 1 181 1 226 1 326 1 
2 1 144 1 145 1 52 1 192 1 146 1 99 2 148 2 56 2 336 2 106 1 13 1 14 1 65 1 296 5 155 1 19 4 157 1 200 1 202 5 299 1 114 1 344 1 29 1 346 4 116 1 31 7 351 1 35 1 357 5 40 1 41 1 174 3 269 5 175 4 363 1 131 6 133 1 317 2 274 1 221 1 181 1 226 1 326 1 
29 1 346 2 116 1 2 1 31 4 144 1 145 1 351 1 52 1 146 1 192 1 99 2 148 2 56 2 357 4 152 1 40 1 173 2 336 2 41 1 106 1 269 1 174 2 175 2 13 1 363 1 14 1 65 1 296 2 131 4 19 2 155 1 317 2 157 1 202 4 299 1 274 1 181 1 114 1 326 1 
29 1 346 2 116 1 2 1 31 4 144 1 145 1 351 1 52 1 35 1 192 1 146 1 99 2 148 2 56 2 357 4 40 1 336 2 41 1 106 1 269 1 174 2 175 2 13 1 363 1 14 1 65 1 296 1 131 4 19 2 155 1 317 2 157 1 200 1 202 4 299 1 274 1 221 1 181 1 114 1 326 1 
29 1 346 2 116 1 2 1 31 4 144 1 145 1 351 1 52 1 35 1 192 1 146 1 99 2 148 2 56 2 357 4 40 1 336 2 41 1 106 1 269 1 174 2 175 2 13 1 363 1 14 1 65 1 296 1 131 4 19 2 155 1 317 2 157 1 200 1 202 4 299 1 274 1 221 1 181 1 114 1 326 1 
29 1 346 2 116 1 348 2 2 1 31 4 144 1 97 1 145 1 351 1 52 1 35 1 192 1 146 1 148 2 357 4 40 1 335 1 173 2 336 2 41 1 106 1 269 1 174 2 175 2 363 1 14 1 65 1 296 1 131 4 19 2 155 1 157 1 318 1 202 4 299 1 274 1 181 1 160 2 114 1 326 1 
29 1 116 1 346 3 2 1 31 5 144 1 145 1 351 1 52 1 35 1 192 1 146 1 99 2 148 2 56 2 357 4 40 1 336 2 41 1 106 1 269 1 174 2 175 3 13 1 363 1 14 1 65 1 296 1 131 5 133 1 155 1 19 3 317 2 157 1 200 1 202 4 299 1 274 1 221 1 181 1 114 1 326 1 
29 1 116 1 346 3 2 1 31 5 144 1 145 1 351 1 52 1 35 1 192 1 146 1 99 2 148 2 56 2 357 4 40 1 336 2 41 1 106 1 269 1 174 2 175 3 13 1 363 1 14 1 65 1 296 1 131 5 133 1 155 1 19 3 317 2 157 1 200 1 202 4 299 1 274 1 221 1 181 1 114 1 326 1 
29 1 346 2 116 1 348 2 2 1 31 4 144 1 145 1 97 1 351 1 52 1 146 1 192 1 148 2 357 4 152 1 40 1 173 2 336 2 41 1 106 1 269 1 174 2 175 2 363 1 14 1 65 1 296 1 131 4 19 2 155 1 157 1 202 4 299 1 274 1 181 1 160 2 114 1 326 1 
303 2 232 1 84 2 169 1 286 1 124 1 313 1 211 2 264 1 212 3 39 1 315 1 62 2 15 1 43 1 66 1 18 1 243 1 201 1 71 1 276 1 275 3 248 1 27 1 182 6 91 1 
0 1 303 4 232 11 257 1 84 1 169 4 353 3 333 1 262 1 356 1 124 2 211 1 264 2 212 8 236 2 360 3 59 1 315 11 62 2 15 2 43 2 201 2 137 1 298 1 275 6 276 2 248 1 280 1 27 1 182 14 369 2 370 1 140 1 
337 1 303 2 43 1 244 1 201 1 137 1 275 1 276 1 248 1 333 1 124 1 182 2 212 1 264 1 323 1 140 1 
117 1 95 1 118 1 64 1 303 2 43 1 17 1 20 1 201 1 137 1 275 1 276 1 309 1 248 1 333 1 124 1 182 1 264 1 225 1 323 1 
251 1 95 3 142 1 118 3 303 4 206 1 230 1 306 1 258 1 192 1 146 1 286 1 8 1 311 1 333 1 124 2 264 2 212 1 87 1 61 1 272 1 43 2 295 1 17 3 20 1 157 1 201 2 276 2 275 1 248 2 112 1 182 2 115 1 140 1 
251 1 303 2 206 1 232 1 283 1 169 1 146 1 192 1 124 1 211 1 264 1 236 1 212 1 315 1 62 1 15 1 43 1 134 1 157 1 201 1 137 1 298 1 320 1 276 1 275 2 248 1 27 1 369 1 182 3 
62 1 303 2 15 1 43 1 232 1 169 1 201 1 286 1 276 1 247 1 248 1 280 1 124 1 182 2 369 1 264 1 212 2 315 1 
62 1 216 1 303 2 43 1 232 1 169 1 201 1 298 1 286 1 276 1 275 2 248 1 124 1 27 1 211 1 182 2 264 1 315 1 
303 2 232 2 169 2 286 1 124 1 211 1 212 2 236 1 264 1 315 2 62 2 15 1 43 1 201 1 298 1 276 1 275 2 248 1 280 1 27 1 369 1 182 4 
62 1 303 2 15 1 43 1 232 1 169 1 201 1 276 1 247 1 248 1 112 1 280 1 124 1 182 2 369 1 264 1 212 2 315 1 
62 1 216 1 303 2 43 1 232 1 169 1 201 1 298 1 276 1 275 2 248 1 112 1 124 1 27 1 211 1 182 2 264 1 315 1 
303 2 232 2 169 2 124 1 211 1 212 2 236 1 264 1 315 2 62 2 15 1 43 1 201 1 298 1 276 1 275 2 248 1 112 1 280 1 27 1 369 1 182 4 
62 2 303 2 15 1 43 1 232 2 169 2 201 1 298 1 275 2 276 1 248 1 27 1 280 1 124 1 211 1 369 1 182 4 264 1 236 1 212 2 315 2 
188 1 95 1 118 1 303 2 258 1 84 1 192 1 308 1 8 1 333 1 124 1 212 1 264 1 87 1 268 1 43 1 295 1 17 1 20 1 157 1 47 1 201 1 276 1 275 1 248 1 182 2 225 1 140 1 
95 1 228 1 118 1 303 2 258 1 84 1 192 1 260 1 8 1 333 1 124 1 212 1 264 1 87 1 268 1 43 1 295 1 17 1 242 1 20 1 157 1 47 1 201 1 276 1 275 1 248 1 182 2 140 1 
303 2 232 2 169 2 124 1 211 1 212 2 236 1 264 1 315 2 62 2 15 1 43 1 201 1 137 1 298 1 276 1 275 2 248 1 280 1 27 1 369 1 182 4 
188 1 95 1 118 1 303 2 232 2 258 1 169 2 192 1 308 1 8 1 311 1 124 1 211 1 212 2 264 1 236 1 87 1 315 2 268 1 62 2 64 1 15 1 43 1 295 1 17 1 157 1 47 1 201 1 298 1 275 2 276 1 248 1 27 1 280 1 182 4 369 1 225 1 
251 1 303 2 206 1 232 1 146 1 192 1 169 1 124 1 264 1 236 1 212 2 315 1 62 1 15 1 43 1 134 1 157 1 201 1 298 1 137 1 320 1 275 1 276 1 248 1 222 1 27 1 280 1 369 1 182 3 
229 1 303 4 256 1 231 1 257 1 353 1 211 2 264 2 212 6 236 2 360 2 290 1 62 3 215 1 15 2 43 2 109 1 201 2 298 2 276 2 275 7 76 1 342 1 280 1 27 2 182 13 369 2 113 1 370 1 
290 1 215 1 229 2 303 2 43 1 231 2 201 1 353 1 276 1 275 3 342 1 76 1 182 5 212 2 264 1 370 2 360 2 196 1 
229 1 303 4 231 1 257 1 353 1 211 1 9 1 264 2 212 6 236 2 360 2 290 1 62 2 215 1 15 2 43 2 109 1 201 2 298 2 276 2 275 7 76 1 342 1 280 1 27 2 182 13 369 2 113 1 370 1 
229 1 303 4 231 1 257 1 353 1 211 1 9 1 264 2 212 6 236 2 360 2 290 1 62 2 215 1 15 2 43 2 109 1 201 2 298 2 276 2 275 7 76 1 342 1 280 1 27 2 182 13 369 2 113 1 370 1 
229 1 303 2 231 1 257 1 353 2 262 1 313 1 211 3 264 1 212 10 236 2 360 3 196 1 290 1 62 5 215 1 15 3 43 1 66 1 18 1 243 1 71 1 201 1 298 2 276 1 275 10 76 1 342 1 280 2 27 3 182 20 369 2 370 2 91 1 
259 1 273 1 178 1 261 1 121 1 293 1 341 1 281 1 199 1 60 1 
23 1 220 1 
177 1 259 1 178 1 121 1 287 1 293 1 149 1 281 1 60 1 
214 2 293 1 296 1 259 1 273 1 202 1 178 1 261 1 121 1 53 1 332 1 75 1 341 1 357 1 343 1 281 1 11 1 60 1 
214 2 293 1 296 1 259 1 273 1 202 1 178 1 261 1 121 1 53 1 332 1 75 1 341 1 357 1 343 1 281 1 11 1 60 1 
214 2 293 1 296 1 259 1 273 1 202 1 178 1 261 1 121 1 53 1 332 1 75 1 341 1 357 1 343 1 281 1 11 1 60 1 
122 1 6 1 128 1 
122 1 6 1 128 1 
277 1 191 1 
277 1 191 1 128 1 
285 1 266 1 
251 2 206 2 84 1 192 2 259 1 146 2 121 1 285 1 235 1 123 1 332 1 357 1 358 1 11 1 266 1 60 1 214 1 293 1 367 1 157 2 202 1 178 1 23 1 220 1 281 1 324 1 186 1 
122 1 6 1 
277 1 191 1 128 1 
95 2 142 1 118 2 303 2 282 1 258 1 81 1 192 2 146 2 8 1 333 1 124 1 264 1 212 1 87 1 10 1 291 1 272 2 43 1 295 1 17 2 157 2 201 1 137 1 158 1 276 1 275 1 248 1 182 2 49 1 140 1 
95 2 30 1 118 2 96 1 255 1 51 1 132 1 17 2 69 1 258 1 82 2 138 1 8 1 311 1 101 1 184 1 161 1 88 1 362 1 
95 1 118 1 96 1 255 1 132 1 17 1 69 1 190 1 258 1 82 2 138 1 8 1 101 1 184 1 161 1 88 1 362 1 
61 1 95 1 118 1 96 1 295 1 51 1 67 1 17 1 306 1 258 1 20 1 7 1 8 1 87 1 
95 1 30 1 118 1 96 1 255 1 51 1 132 1 17 1 69 1 258 1 82 2 138 1 8 1 101 1 184 1 161 1 88 1 362 1 
252 1 
269 1 116 1 72 1 65 1 296 1 28 1 39 1 
269 1 174 1 116 1 13 1 31 1 65 1 296 2 145 1 317 1 202 1 99 1 357 1 56 1 114 1 40 1 173 1 106 1 
141 2 95 3 4 1 145 4 52 2 8 3 100 2 289 1 236 2 106 4 63 2 15 2 65 8 294 3 338 2 295 3 17 3 296 8 108 2 21 2 20 1 202 5 72 1 110 2 298 2 27 2 249 1 28 1 114 4 116 9 118 3 31 5 167 1 258 4 83 2 355 2 36 1 311 1 85 1 86 6 357 5 87 10 40 4 361 6 173 12 269 2 174 3 364 2 317 6 47 3 180 2 322 2 224 1 369 2 
116 7 145 1 233 1 352 1 353 1 86 5 236 2 40 1 173 6 361 5 360 1 196 1 106 1 269 1 65 4 15 2 296 4 317 3 298 2 159 1 27 2 369 2 370 1 114 1 77 1 
141 1 116 2 251 1 206 1 189 1 145 1 192 1 146 1 357 1 313 1 40 1 359 1 106 1 14 1 15 2 65 2 154 1 66 1 108 2 134 1 157 1 202 1 71 1 319 1 221 1 27 1 114 1 371 1 
269 1 116 1 65 1 296 1 145 1 72 1 28 1 114 1 40 1 106 1 
141 1 116 5 15 2 65 5 296 5 108 2 317 5 298 2 180 1 86 5 27 2 369 2 236 2 361 5 173 10 
269 1 174 1 202 1 31 1 357 1 296 1 
92 1 95 4 116 2 118 4 31 4 80 1 306 1 167 2 258 1 145 2 8 1 36 2 357 3 289 1 87 1 40 2 106 2 174 2 61 1 65 2 295 1 107 1 17 4 20 2 202 3 278 1 322 2 279 1 114 1 
95 1 251 2 188 1 118 1 303 2 206 2 258 1 84 1 192 3 146 2 308 1 8 1 333 1 124 1 264 1 87 1 359 1 268 1 43 1 295 1 17 1 134 2 20 1 157 3 47 1 201 1 275 1 276 1 248 1 26 1 182 1 225 1 
269 2 116 1 65 2 296 4 145 1 317 2 36 1 86 2 322 1 114 1 40 1 173 4 361 2 91 1 106 1 
281 1 297 1 60 1 
273 1 281 1 105 1 266 1 60 1 
281 1 297 1 60 1 
281 1 297 1 60 1 
281 1 135 1 60 1 
281 1 135 1 60 1 
281 1 135 1 60 1 
281 1 60 1 
259 1 121 1 
62 3 303 4 15 1 43 2 66 1 33 1 18 1 243 1 71 1 201 2 275 4 276 2 27 1 280 1 182 8 211 2 313 1 212 4 264 2 91 1 
243 1 71 1 62 2 275 3 15 1 27 1 66 1 182 6 211 2 313 1 212 3 39 1 18 1 91 1 
62 2 303 2 15 1 43 1 201 1 298 1 179 1 275 2 276 1 27 1 280 1 211 1 369 1 182 4 264 1 236 1 212 2 
62 2 15 1 257 1 298 1 353 1 275 4 27 1 280 1 211 1 182 7 369 1 212 3 236 1 370 1 360 2 
303 4 33 2 257 1 353 2 262 1 356 1 313 2 211 5 125 1 236 2 212 11 264 2 360 2 62 9 15 3 43 2 66 2 18 1 243 1 71 1 201 2 298 2 275 12 276 2 280 4 27 3 369 2 182 23 91 1 
275 1 182 1 360 1 
353 1 182 1 212 1 
62 3 303 2 15 1 43 1 201 1 298 1 179 1 180 1 276 1 275 3 280 1 27 1 182 6 369 1 211 2 264 1 236 1 212 3 
303 2 233 1 352 1 353 1 211 1 264 1 212 6 236 2 360 1 196 1 62 2 15 2 43 1 201 1 298 2 275 6 276 1 159 1 280 1 342 1 27 2 182 12 369 2 370 1 77 1 
71 1 62 2 275 3 15 1 280 1 66 1 27 1 211 1 313 1 182 6 212 3 
62 2 303 2 43 1 66 1 33 1 18 1 243 1 201 1 275 2 276 1 280 1 211 1 313 1 125 1 182 3 212 1 264 1 
62 5 303 2 15 2 43 1 66 2 201 1 71 1 276 1 275 5 342 1 280 2 27 2 313 2 211 3 182 10 264 1 212 5 371 1 
201 1 62 1 276 1 303 2 15 1 43 1 280 1 342 1 182 2 369 1 212 2 264 1 
62 2 303 2 15 1 43 1 201 1 298 1 275 2 276 1 27 1 342 1 280 1 211 1 369 1 182 4 264 1 236 1 212 2 
62 2 303 6 43 3 66 1 33 1 109 1 201 3 275 2 276 3 342 1 280 1 125 1 182 3 313 1 211 1 264 3 212 1 
303 10 33 2 257 1 353 3 313 3 125 1 211 7 264 5 212 16 236 3 314 1 360 4 62 12 15 5 198 1 43 5 66 3 18 1 243 1 71 2 109 1 201 5 298 3 179 1 275 18 276 5 342 1 280 5 27 5 182 34 369 3 370 1 301 1 91 1 
303 2 353 1 313 1 211 2 264 1 212 4 360 1 196 1 62 2 15 1 43 1 66 1 18 1 243 1 201 1 71 1 275 4 276 1 27 1 342 1 182 8 370 1 91 1 
303 4 257 1 353 1 211 2 313 1 264 2 212 6 236 1 360 2 196 1 62 3 15 2 43 2 66 1 18 1 243 1 71 1 201 2 179 1 275 5 276 2 27 1 342 1 280 1 182 11 369 1 370 1 91 1 
303 4 233 1 352 1 353 1 264 2 212 6 236 2 360 1 196 1 62 1 15 2 43 2 201 2 298 2 179 1 275 7 276 2 159 1 342 1 27 2 280 1 182 13 369 2 370 1 77 1 
303 6 33 1 233 1 352 1 353 1 313 1 211 3 264 3 212 10 236 2 360 1 196 1 62 5 15 3 43 3 66 1 18 1 243 1 71 1 201 3 298 1 179 1 275 7 276 3 159 1 280 2 342 1 27 2 182 17 369 2 370 1 77 1 91 1 
303 2 353 1 313 1 211 2 264 1 212 4 360 1 196 1 62 2 15 1 43 1 66 1 18 1 243 1 201 1 71 1 275 4 276 1 27 1 342 1 182 8 370 1 91 1 
303 2 233 1 352 1 353 1 211 1 264 1 212 6 236 2 360 1 196 1 62 2 15 2 43 1 201 1 298 2 275 6 276 1 159 1 280 1 342 1 27 2 182 12 369 2 370 1 77 1 
303 6 33 1 233 1 352 1 353 1 264 3 212 7 236 2 360 1 196 1 62 1 15 2 43 3 201 3 298 1 179 1 275 5 276 3 159 1 342 1 27 1 280 1 182 12 369 2 370 1 77 1 
303 6 33 1 233 1 352 1 353 1 211 2 264 3 212 7 236 2 360 1 196 1 62 4 15 2 43 3 201 3 109 1 298 1 275 5 276 3 159 1 280 2 342 1 27 1 182 12 369 2 370 1 77 1 
62 6 15 1 66 3 18 2 243 1 71 1 275 4 27 1 280 3 182 7 313 3 211 3 212 3 
303 6 33 1 233 1 352 1 353 1 264 3 212 7 236 2 360 1 196 1 62 1 15 2 43 3 201 3 109 1 298 1 275 5 276 3 159 1 342 1 27 1 280 1 182 12 369 2 370 1 77 1 
192 1 146 1 203 1 155 1 84 1 157 1 227 1 
93 1 270 1 155 1 84 1 157 1 146 1 192 1 38 1 203 1 185 1 187 1 227 1 
61 1 95 1 118 1 8 1 295 1 17 1 87 1 306 1 39 1 258 1 20 1 
268 1 251 1 95 1 188 1 118 1 295 1 206 1 230 1 17 1 258 1 20 1 84 1 157 2 47 1 146 1 192 2 8 1 87 1 
29 1 188 1 95 1 251 1 118 1 2 1 206 2 230 1 167 1 258 1 84 1 192 2 146 2 355 1 8 1 87 3 268 1 63 1 14 1 295 2 17 1 157 2 47 2 
29 1 95 2 251 1 118 2 2 1 206 2 230 1 167 1 258 1 84 1 192 2 146 2 355 1 8 1 87 3 268 1 63 1 14 1 365 1 295 2 17 2 242 1 157 2 47 2 
95 3 118 3 31 1 208 1 167 1 258 1 83 1 52 1 355 1 8 1 357 2 126 1 87 4 269 1 63 1 294 1 365 1 295 1 17 3 296 1 20 1 47 1 202 2 
269 1 95 3 63 1 118 3 31 1 294 1 365 1 295 1 296 1 17 3 258 1 167 1 20 1 52 1 83 1 47 1 202 2 110 1 355 1 8 1 357 2 87 4 
95 1 118 1 8 1 78 1 17 1 258 1 
95 2 118 2 295 1 349 1 17 2 258 2 20 1 47 1 8 1 311 1 310 1 224 1 87 1 127 1 115 1 
188 1 95 1 230 1 232 1 146 1 192 2 8 1 62 2 291 1 64 1 15 1 295 1 66 1 17 1 18 1 157 2 243 1 201 2 71 1 248 2 27 1 251 1 118 1 303 4 206 1 258 1 84 2 169 1 308 1 309 1 311 1 124 2 313 1 211 2 264 2 212 3 87 1 315 1 268 1 43 2 47 1 137 1 276 2 275 3 182 6 225 1 91 1 
116 1 95 1 118 1 31 2 145 2 83 1 52 1 357 3 100 1 289 1 358 1 87 2 40 2 106 2 269 1 174 1 65 1 294 1 364 1 296 1 17 1 20 1 21 1 202 3 72 1 110 1 28 1 114 2 
95 2 118 2 78 1 295 1 17 2 258 2 83 1 47 1 8 1 311 1 85 1 224 1 87 2 
61 1 95 4 118 4 365 1 295 1 17 4 306 1 258 1 70 1 20 1 8 1 311 1 87 1 
95 2 118 2 295 1 17 2 368 1 167 1 258 2 330 1 47 1 8 1 310 1 87 1 127 1 237 1 
95 1 138 1 118 1 8 1 255 1 132 1 17 1 258 1 82 1 20 1 
95 2 118 2 8 1 311 1 295 1 17 2 87 1 282 1 10 1 258 1 362 1 
61 1 129 1 95 5 118 5 295 2 17 4 306 1 282 1 167 1 258 2 70 1 20 1 339 1 8 2 311 1 87 3 
61 1 95 5 118 5 253 1 295 2 17 4 306 1 282 1 167 1 258 2 70 1 20 1 339 1 8 2 311 1 87 3 
268 1 251 1 95 1 118 1 295 1 206 1 230 1 17 1 258 1 242 1 20 1 84 1 157 2 47 1 146 1 192 2 8 1 87 1 
95 1 118 1 295 1 349 1 17 1 167 1 258 2 47 1 8 1 310 1 224 1 87 1 127 1 
218 1 81 1 157 1 284 1 146 1 192 1 158 1 183 1 49 1 
321 1 218 1 68 1 
284 1 163 1 218 1 183 1 
284 1 163 1 202 1 321 1 218 1 357 1 205 1 183 1 68 1 358 1 
354 1 58 1 39 1 265 1 
354 1 240 1 58 1 265 1 207 1 12 1 5 1 
111 1 172 1 12 1 
354 1 328 1 304 1 240 1 58 1 334 1 265 1 207 1 238 2 12 3 267 1 5 3 
347 1 354 1 176 1 240 1 58 1 265 1 207 1 12 2 5 2 
354 1 138 1 300 1 304 1 240 1 101 1 241 1 207 1 82 1 12 1 5 1 
354 1 304 1 240 1 265 1 207 1 12 1 5 1 
304 1 240 1 58 1 265 2 207 1 12 1 5 1 
304 1 240 2 316 1 207 2 5 2 354 1 288 1 151 1 265 1 12 2 
347 2 304 1 240 1 207 1 98 1 5 3 209 1 354 2 300 1 58 1 194 1 265 1 12 3 
347 1 327 1 304 1 240 1 132 1 69 1 207 1 82 2 5 2 354 1 138 1 58 1 101 1 265 1 12 2 
347 2 50 1 304 1 176 1 240 2 207 2 5 4 354 2 300 1 58 1 194 1 265 1 12 4 
354 1 304 1 240 1 58 1 265 1 207 1 12 1 5 1 
347 2 240 1 207 1 5 4 354 3 210 1 300 1 334 1 58 2 194 1 265 2 238 1 12 4 267 1 
347 1 304 1 217 1 240 1 207 1 5 2 168 1 136 1 354 1 58 1 265 1 12 2 
304 1 240 1 207 1 5 3 354 1 334 1 58 1 325 1 265 1 12 3 238 2 267 2 
89 1 354 2 3 1 250 2 
304 1 240 1 207 1 12 1 162 1 5 1 
347 1 354 1 304 1 240 1 58 1 265 1 207 1 98 1 12 2 5 2 
219 1 
354 1 304 1 240 1 58 1 265 1 207 1 12 1 5 1 
347 1 354 1 304 1 240 1 58 1 265 1 207 1 98 1 238 1 12 3 5 3 
354 1 210 1 300 1 194 1 
354 1 265 1 

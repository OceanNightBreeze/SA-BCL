#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver2()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver10()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 131 53 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 131 53 67 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 131 64 34 304 (4,321) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 42 293 14 (122,259) (122,259) 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 42 293 14 (122,259) (122,259) 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 42 293 14 (122,259) (122,259) 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 131 221 18 329 234 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 131 93 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 232 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 131 221 90 96 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 131 53 264 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 131 53 314 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 131 53 219 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 131 64 34 276 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 131 64 34 304 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 131 64 34 276 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 131 64 34 304 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 131 64 34 276 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 131 64 34 276 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 131 53 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 131 53 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 131 64 34 276 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 131 64 34 276 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 131 64 34 276 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 131 22 103 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 131 22 103 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 131 22 103 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 131 22 103 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 131 22 103 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 131 53 219 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 131 53 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 42 293 14 138 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 232 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 131 64 34 276 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 131 221 18 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 131 221 90 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V ERROR java.lang.NullPointerException 131 221 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 131 354 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 131 221 18 54 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 131 64 137 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 131 208 
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 42 293 14 138 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 131 64 34 276 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 42 293 14 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 131 221 18 329 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 131 221 18 54 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 131 221 18 54 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 131 221 18 54 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 131 221 18 54 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 131 221 18 54 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 131 221 18 54 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 131 221 18 54 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 131 221 18 54 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 42 293 14 (122,259) (122,259) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 131 221 18 54 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 42 293 14 (122,259) (122,259) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5772 | 0 -> -1
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | ASSIGN | 1327 | = null
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 3884 | return null
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> -1
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1756 | stmt -> ;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3641 | stmt -> ;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | STATEMENT | 3006 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONDITION | 867 | while (x) -> while (!x)
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
152 2 153 1 249 1 190 1 167 2 8 2 113 7 114 7 353 1 23 1 258 1 118 1 355 3 46 1 47 3 312 1 361 2 49 4 173 1 223 1 340 1 52 2 143 1 145 2 55 1 292 1 214 1 184 2 
152 2 153 1 249 1 190 1 167 2 8 2 113 7 114 7 353 1 23 1 258 1 118 1 355 3 46 1 47 3 312 1 361 2 49 4 173 1 223 1 340 1 52 2 143 1 145 2 55 1 292 1 214 1 184 2 
152 2 153 1 249 1 190 1 167 2 8 2 113 7 114 7 353 1 23 1 258 1 118 1 355 3 46 1 47 3 312 1 361 2 49 4 173 1 223 1 340 1 52 2 143 1 145 2 55 1 292 1 214 1 184 2 
152 2 153 1 190 1 167 2 8 2 113 7 114 7 353 1 23 1 258 1 118 1 355 4 46 1 47 3 312 1 361 2 49 4 173 1 223 1 340 1 52 2 143 1 145 2 55 1 292 1 214 1 184 2 
47 1 152 1 361 1 49 1 249 1 190 1 340 1 8 1 114 2 113 2 23 1 145 1 292 1 118 1 355 1 46 1 184 1 
29 1 361 1 61 1 190 1 143 1 167 1 8 1 114 2 113 2 23 1 145 1 55 1 333 1 355 1 46 1 184 1 
47 1 153 1 49 1 190 1 52 1 167 1 114 3 113 3 23 1 145 2 355 2 46 1 184 2 
152 1 153 1 249 1 190 1 135 1 167 1 8 1 68 1 113 7 114 7 23 1 118 1 355 3 46 1 47 3 49 5 361 1 173 1 340 1 52 2 145 2 292 1 214 1 184 2 
152 1 153 1 249 1 190 1 135 1 167 1 8 1 68 1 113 7 114 7 23 1 118 1 355 3 46 1 47 3 49 5 361 1 173 1 340 1 52 2 145 2 292 1 214 1 184 2 
232 1 204 1 144 1 
273 1 204 1 302 2 
108 2 278 1 290 2 60 1 156 2 160 2 146 2 105 2 
108 2 156 2 160 3 250 1 3 1 251 1 274 1 301 1 334 1 24 1 305 2 199 1 278 1 261 2 74 1 263 2 75 2 126 1 125 1 205 1 53 1 32 1 224 1 290 3 177 1 131 1 146 2 244 1 104 1 105 2 229 1 58 1 246 1 
108 1 278 1 235 1 290 1 156 1 76 1 160 1 300 1 146 1 105 1 
28 1 299 1 160 1 76 1 204 1 328 1 144 1 290 1 70 1 82 1 146 1 236 1 83 1 319 1 
108 1 156 1 299 2 160 1 76 1 204 1 328 1 144 1 290 1 70 1 146 1 236 1 83 2 105 1 319 1 
297 1 299 1 83 1 339 1 288 1 
364 1 12 1 299 2 83 2 339 1 204 1 288 1 144 1 
299 1 83 1 288 1 
278 1 108 1 299 1 156 1 76 1 160 1 300 1 339 1 235 1 290 1 146 1 83 1 148 1 105 1 
204 1 
332 1 12 1 299 2 83 2 339 1 204 1 288 1 144 1 
48 1 270 2 109 1 311 1 158 1 110 1 12 1 299 5 313 2 339 2 204 1 288 2 144 1 330 2 102 1 35 1 10 1 83 5 106 1 
60 1 232 1 
108 1 38 1 60 1 156 1 76 1 160 2 287 1 290 2 146 2 105 1 151 1 
239 1 321 1 72 1 
261 1 60 1 263 1 160 1 125 1 274 1 301 1 32 1 207 1 290 1 334 1 24 1 104 1 305 1 229 1 58 1 
108 1 261 1 357 1 321 1 263 1 160 2 125 1 274 1 301 1 32 1 290 2 334 1 146 1 104 1 24 1 105 1 305 1 229 1 58 1 245 1 
108 3 290 3 60 1 156 1 160 3 146 3 105 3 245 1 
108 1 290 1 76 1 160 1 300 1 146 1 105 1 
108 1 156 1 160 1 76 1 287 1 290 1 146 1 105 1 151 1 
108 3 156 2 299 1 160 4 250 1 3 1 274 1 301 1 328 1 67 1 70 1 334 1 236 1 24 1 305 1 199 1 278 1 261 1 357 1 263 1 75 2 76 1 125 1 205 1 242 1 53 1 32 1 224 1 290 4 177 1 131 1 146 3 244 1 104 1 83 1 105 3 229 1 58 1 151 1 245 1 319 1 246 1 
108 1 28 1 290 2 60 1 160 2 51 1 146 2 105 1 245 1 
108 3 357 1 156 1 299 1 76 1 160 3 204 1 242 1 328 1 78 1 290 3 70 1 236 1 146 3 83 1 105 3 151 1 245 2 319 1 
239 1 108 2 321 1 156 1 160 2 290 2 146 2 105 2 245 1 151 1 
261 1 60 1 263 1 160 1 125 1 274 1 301 1 32 1 290 1 334 1 24 1 104 1 305 1 58 1 229 1 
261 1 60 1 263 1 160 1 125 1 301 1 32 1 290 1 334 1 24 1 104 1 305 1 133 1 294 1 229 1 
75 2 250 1 3 1 4 1 64 1 224 1 177 1 34 1 304 1 131 1 244 1 183 1 246 1 
108 1 290 1 76 1 160 1 146 1 105 1 165 1 319 1 
108 4 28 1 357 1 290 5 60 1 156 1 160 5 51 1 146 5 2 1 105 4 151 1 245 2 366 1 
108 2 290 2 76 1 160 2 300 1 146 2 165 1 105 2 
327 1 192 1 
327 1 192 1 
159 1 351 1 
159 1 351 1 
159 1 351 1 
349 1 327 1 192 1 
327 1 192 1 200 1 
295 1 159 1 179 1 351 1 327 2 192 2 
349 1 327 1 192 1 
349 1 327 1 192 1 
308 1 327 1 192 1 
308 1 327 1 192 1 
308 1 327 1 192 1 
87 1 282 1 299 2 172 1 162 2 220 2 19 2 204 1 192 2 327 2 342 1 7 1 79 2 193 3 130 1 179 1 83 2 230 2 139 1 
108 2 60 1 299 1 160 2 95 1 162 1 220 1 289 1 192 1 327 1 7 1 79 1 193 1 290 2 345 1 347 1 147 1 146 2 83 1 105 2 92 1 277 1 230 1 200 1 
8 1 152 1 361 1 
8 1 361 1 61 1 
8 3 152 2 155 1 61 1 180 1 41 1 
8 2 152 1 136 1 155 1 61 1 41 1 
8 2 152 1 155 2 61 1 41 1 
16 2 270 1 248 1 109 3 158 2 110 1 299 5 188 1 273 1 64 1 302 3 330 1 276 1 45 2 116 1 119 2 201 1 12 1 313 1 95 1 339 4 204 2 288 1 97 1 144 1 362 1 363 1 34 1 345 1 347 1 83 5 216 1 
320 1 16 6 248 1 270 2 109 8 297 5 158 6 299 9 110 1 188 3 350 1 273 3 64 3 302 9 330 2 276 3 45 6 116 3 237 1 335 1 201 2 12 1 313 2 338 5 339 7 204 5 288 6 144 1 362 2 99 1 34 3 102 1 347 4 83 9 56 1 
16 2 270 1 109 3 299 3 158 2 188 1 273 2 64 1 302 4 330 1 276 1 116 1 45 2 119 1 201 1 313 1 339 2 204 3 97 1 144 1 362 1 34 1 102 1 347 1 83 3 216 1 
16 4 270 1 109 5 299 4 158 4 188 2 350 1 273 3 64 2 302 7 330 1 276 2 45 4 116 2 119 2 201 1 313 1 339 3 204 4 97 1 144 1 362 1 99 1 34 2 102 1 347 2 83 4 56 1 216 1 
256 1 232 1 229 1 
331 1 229 1 
30 1 
104 1 229 1 
256 2 9 1 104 1 24 1 266 1 229 3 
104 1 24 1 229 1 
189 1 229 1 
122 1 42 1 233 1 91 1 14 1 318 1 293 1 71 1 259 1 27 1 94 1 
122 1 42 1 233 1 91 1 14 1 318 1 293 1 71 1 259 1 27 1 94 1 
122 1 42 1 233 1 91 1 31 1 14 1 318 1 293 1 71 1 259 1 27 1 94 1 
18 1 318 1 131 1 71 1 221 1 233 2 91 1 234 1 27 1 329 1 
75 2 250 1 3 1 233 1 91 1 224 1 344 1 177 1 318 1 131 1 71 1 27 1 93 1 
152 1 40 1 61 1 164 1 112 1 190 1 191 1 301 1 167 1 8 2 113 2 114 2 23 1 334 1 305 1 355 1 46 1 73 1 222 1 261 1 263 1 49 1 361 1 13 1 145 1 101 1 180 1 213 1 247 1 184 1 
152 1 272 1 40 1 61 1 164 1 190 1 191 1 301 1 167 1 8 2 113 3 114 3 334 1 169 1 305 1 355 1 46 1 73 1 222 1 261 1 263 1 361 1 49 2 13 1 98 1 145 1 180 1 213 1 247 1 184 1 
152 1 272 1 40 1 61 1 164 1 190 1 191 1 301 1 167 1 8 2 113 2 114 2 334 1 169 1 305 1 355 1 46 1 222 1 261 1 263 1 49 2 361 1 13 1 180 1 247 1 
261 1 281 1 263 1 40 2 77 1 125 1 301 1 13 2 98 1 167 2 114 1 113 1 145 1 210 1 334 1 212 1 104 1 305 1 229 1 247 2 36 1 231 1 184 1 
152 1 40 1 61 1 164 1 112 1 191 1 301 1 167 1 8 2 113 1 114 1 23 1 334 1 169 1 305 1 73 1 222 1 261 1 263 1 361 1 13 1 145 1 180 1 213 1 247 1 184 1 
157 1 
0 1 187 1 270 1 271 1 322 1 273 1 43 1 328 1 330 1 6 1 334 1 236 1 201 1 12 2 283 1 288 4 341 1 206 1 290 1 291 1 211 1 346 1 146 1 104 1 107 1 109 2 158 2 299 4 110 1 160 1 301 1 20 1 302 1 70 1 305 2 261 2 28 1 263 2 77 1 313 1 76 1 125 2 80 1 82 1 228 1 132 1 83 4 229 1 319 1 36 1 268 1 269 1 185 3 
0 1 28 1 12 1 299 3 322 1 76 1 160 1 288 2 20 1 328 1 332 1 70 1 290 1 291 1 82 1 236 1 146 1 83 3 319 1 268 1 185 2 269 1 
299 3 160 1 322 1 20 1 328 1 332 1 70 1 236 1 28 1 12 1 76 1 204 1 288 1 144 1 290 1 291 1 82 1 146 1 228 1 83 3 319 1 268 1 269 1 185 3 
0 1 299 3 160 1 322 1 20 1 328 1 332 1 70 1 236 1 28 1 12 1 76 1 204 1 288 2 144 1 290 1 291 1 82 1 146 1 228 1 83 3 319 1 268 1 107 1 269 1 185 3 
0 4 270 1 271 1 322 1 273 2 324 1 328 1 330 1 6 2 332 1 236 1 336 1 12 3 286 1 204 5 288 7 206 2 144 5 290 1 291 1 211 1 146 1 346 2 107 4 296 1 109 1 299 5 110 1 158 1 160 1 20 1 70 1 28 1 76 1 313 1 129 1 80 2 82 1 228 4 83 5 319 1 268 1 185 6 269 1 
0 2 187 1 270 1 109 1 271 1 158 1 110 1 299 4 160 1 322 1 273 2 20 1 302 2 328 1 330 1 6 2 70 1 236 1 28 1 12 2 313 1 76 1 204 2 288 4 206 2 144 1 80 2 290 1 291 1 211 1 82 1 346 2 146 1 228 2 83 4 319 1 107 2 268 1 269 1 185 4 
0 2 270 1 109 1 271 1 158 1 299 4 110 1 160 1 322 1 273 2 324 1 20 1 328 1 330 1 6 2 70 1 236 1 28 1 12 2 76 1 313 1 286 1 204 1 288 4 206 2 144 1 129 1 80 2 290 1 291 1 211 1 82 1 346 2 146 1 228 2 83 4 319 1 107 2 268 1 269 1 185 4 
0 2 270 1 109 1 271 1 158 1 299 4 110 1 160 1 322 1 273 2 324 1 20 1 328 1 330 1 6 2 70 1 236 1 28 1 12 2 76 1 313 1 286 1 204 1 288 4 206 2 144 1 129 1 80 2 290 1 291 1 211 1 82 1 346 2 146 1 228 2 83 4 319 1 107 2 268 1 269 1 185 4 
0 2 270 1 109 1 158 1 299 4 110 1 160 1 322 1 20 1 302 2 328 1 330 1 6 2 275 2 70 1 115 1 236 1 28 1 12 2 76 1 313 1 202 1 204 1 288 4 144 1 343 2 129 1 80 2 290 1 291 1 81 1 211 1 82 1 146 1 228 2 83 4 319 1 107 2 268 1 269 1 185 4 
0 3 270 1 109 1 271 1 296 1 158 1 110 1 299 4 160 1 322 1 273 2 324 1 20 1 328 1 330 1 6 2 70 1 236 1 28 1 12 2 313 1 76 1 286 1 204 1 288 5 206 2 144 1 129 1 80 2 290 1 291 1 211 1 82 1 346 2 146 1 228 3 83 4 319 1 268 1 107 3 269 1 185 5 
0 3 270 1 109 1 271 1 296 1 158 1 110 1 299 4 160 1 322 1 273 2 324 1 20 1 328 1 330 1 6 2 70 1 236 1 28 1 12 2 313 1 76 1 286 1 204 1 288 5 206 2 144 1 129 1 80 2 290 1 291 1 211 1 82 1 346 2 146 1 228 3 83 4 319 1 268 1 107 3 269 1 185 5 
0 2 270 1 187 1 322 1 328 1 330 1 6 2 275 2 236 1 12 2 204 1 288 4 144 1 343 2 290 1 291 1 211 1 146 1 107 2 109 1 299 4 110 1 158 1 160 1 20 1 302 2 70 1 115 1 28 1 76 1 313 1 80 2 82 1 228 2 83 4 319 1 268 1 185 4 269 1 
122 1 75 2 232 1 250 1 3 1 42 1 224 1 14 1 177 1 293 1 244 1 259 1 183 1 246 1 
224 1 177 1 75 2 96 1 131 1 250 1 3 1 244 1 90 1 221 1 246 1 21 1 
108 1 357 1 75 2 160 1 250 1 3 1 53 1 21 1 224 1 290 1 264 1 177 1 131 1 146 1 244 1 105 1 245 1 246 1 
108 1 261 1 357 1 263 1 75 2 160 1 125 1 250 1 3 1 314 1 53 1 21 1 224 1 290 1 177 1 131 1 146 1 244 1 305 1 105 1 245 1 246 1 
261 1 219 1 263 1 75 2 125 1 250 1 3 1 91 1 53 1 5 1 224 1 177 1 318 1 131 1 227 1 244 1 305 1 246 1 
108 1 260 1 75 2 156 1 188 1 160 1 250 1 3 1 64 1 91 1 21 1 224 1 290 1 34 1 177 1 276 1 116 1 318 1 131 1 146 1 244 1 105 1 151 1 246 1 
239 1 321 1 75 2 188 1 63 1 250 1 323 1 3 1 91 2 224 1 177 1 255 1 116 1 318 2 244 1 183 1 246 1 72 1 
224 1 34 1 177 1 75 2 304 1 131 1 250 1 3 1 244 1 64 1 246 1 183 1 
239 1 321 1 75 2 188 1 250 1 3 1 64 1 91 2 224 1 34 1 177 1 276 1 116 1 318 2 131 1 244 1 183 1 246 1 72 1 
239 1 321 1 75 2 188 1 63 1 250 1 323 1 3 1 91 2 5 1 224 1 177 1 255 1 116 1 318 2 244 1 246 1 72 1 
5 1 224 1 34 1 177 1 75 2 304 1 131 1 250 1 3 1 244 1 64 1 246 1 
239 1 321 1 75 2 188 1 250 1 3 1 64 1 91 2 5 1 224 1 34 1 177 1 276 1 116 1 318 2 131 1 244 1 246 1 72 1 
239 1 321 1 75 2 188 1 250 1 3 1 64 1 91 2 224 1 34 1 177 1 276 1 116 1 318 2 131 1 244 1 246 1 72 1 
261 1 263 1 75 2 160 1 125 1 250 1 3 1 274 1 301 1 53 1 32 1 224 1 290 1 177 1 334 1 131 1 244 1 24 1 104 1 305 1 229 1 58 1 246 1 199 1 
37 1 261 1 263 1 75 2 125 1 250 1 3 1 53 1 224 1 177 1 131 1 244 1 305 1 246 1 
239 1 321 1 75 2 188 1 250 1 3 1 64 1 91 2 21 1 224 1 34 1 177 1 276 1 116 1 318 2 131 1 244 1 246 1 72 1 
321 1 188 1 160 1 250 1 3 1 64 1 274 1 301 1 91 2 276 1 116 1 334 1 24 1 305 1 72 1 199 1 239 1 261 1 263 1 75 2 32 1 224 1 290 1 34 1 177 1 101 1 318 2 131 1 244 1 104 1 58 1 229 1 246 1 217 1 
108 1 321 1 156 1 160 1 188 1 250 1 3 1 64 1 91 2 21 1 276 1 116 1 72 1 239 1 75 2 224 1 290 1 34 1 177 1 178 1 318 2 131 1 146 1 244 1 105 1 151 1 246 1 
224 1 22 1 337 1 39 1 177 1 344 1 75 2 103 1 131 1 250 1 3 1 303 1 
224 1 22 1 337 1 39 1 177 1 344 1 75 2 103 1 131 1 250 1 3 1 303 1 
224 1 22 1 337 1 39 1 177 1 344 1 75 2 103 1 131 1 250 1 3 1 303 1 
224 1 22 1 337 1 39 1 177 1 344 1 75 2 103 1 131 1 250 1 3 1 303 1 
224 1 22 1 337 1 39 1 177 1 344 1 75 2 103 1 131 1 250 1 3 1 303 1 
121 1 79 1 282 1 172 1 179 1 162 1 220 1 230 1 327 1 192 1 
277 1 200 1 
79 1 141 1 195 1 162 1 220 1 174 1 230 1 327 1 192 1 
87 1 282 1 299 1 172 1 162 1 220 1 19 1 204 1 192 1 327 1 7 1 79 1 193 2 130 1 179 1 83 1 230 1 139 1 
87 1 282 1 299 1 172 1 162 1 220 1 19 1 204 1 192 1 327 1 7 1 79 1 193 2 130 1 179 1 83 1 230 1 139 1 
87 1 282 1 299 1 172 1 162 1 220 1 19 1 204 1 192 1 327 1 7 1 79 1 193 2 130 1 179 1 83 1 230 1 139 1 
295 1 349 1 315 1 
295 1 349 1 315 1 
241 1 308 1 
295 1 241 1 308 1 
92 1 289 1 
108 2 60 1 299 1 160 2 95 1 162 1 220 1 339 1 19 1 289 1 192 1 327 1 193 1 79 1 176 1 290 2 345 1 146 2 347 1 147 1 83 1 105 2 92 1 277 1 230 1 200 1 139 1 
349 1 315 1 
295 1 241 1 308 1 
279 1 218 1 219 1 75 2 160 2 250 1 127 1 3 1 91 1 53 1 166 1 21 1 224 1 290 2 177 1 318 1 131 1 146 2 227 1 244 1 246 1 
261 2 152 1 263 2 361 1 61 1 191 1 301 1 13 1 8 2 101 1 334 1 180 1 169 1 348 1 213 1 305 2 215 1 59 1 222 1 
261 1 152 1 263 1 361 1 61 1 191 1 301 1 13 1 8 2 334 1 180 1 169 1 181 1 213 1 305 1 215 1 222 1 
261 1 263 1 77 1 125 1 301 1 13 1 100 1 334 1 212 1 348 1 104 1 305 1 229 1 36 1 
261 1 152 1 263 1 361 1 61 1 191 1 301 1 13 1 8 2 334 1 180 1 169 1 348 1 213 1 305 1 215 1 59 1 222 1 
197 1 
109 1 158 1 232 1 35 1 204 1 106 1 144 1 
270 1 109 1 271 1 158 1 110 1 299 1 273 1 302 1 330 1 12 1 313 1 204 2 288 1 206 1 144 1 346 1 83 1 
270 2 188 1 273 3 325 1 326 1 330 2 331 2 276 1 334 2 45 3 236 1 201 1 12 1 204 3 288 2 209 1 104 1 15 1 16 3 109 4 110 2 299 2 158 3 64 1 301 1 253 1 302 6 256 1 116 1 24 1 305 1 306 1 354 1 261 1 263 1 313 2 125 1 34 1 226 1 265 1 83 2 266 1 229 4 
186 1 16 5 270 2 109 8 18 1 299 1 110 2 158 5 111 1 188 2 163 1 273 3 64 2 221 1 302 6 330 2 276 2 45 5 116 2 201 1 310 1 12 1 283 1 313 2 204 5 128 1 288 1 144 2 54 1 33 1 34 2 317 1 265 2 182 1 83 1 
108 1 270 1 109 2 110 1 299 1 158 2 156 1 160 1 188 2 300 1 64 1 330 1 235 1 137 1 138 1 278 1 76 1 313 1 286 1 128 1 14 1 290 1 265 2 146 1 293 1 83 1 148 1 105 1 
270 1 109 1 110 1 158 1 313 1 204 1 330 1 144 1 35 1 106 1 
16 2 109 2 158 2 188 1 273 2 64 1 204 2 302 4 34 1 276 1 116 1 45 2 
299 1 12 1 83 1 204 1 288 1 144 1 
270 2 109 2 154 1 110 1 158 2 299 3 62 2 301 2 66 1 43 1 330 2 334 3 24 1 305 4 26 1 201 2 309 1 261 4 140 1 263 4 12 2 313 2 283 2 77 1 125 2 288 4 102 1 132 1 104 2 83 3 149 1 229 2 267 1 36 1 
108 2 156 2 160 3 250 1 3 1 274 1 301 1 334 1 24 1 305 1 199 1 278 1 261 1 263 1 75 2 125 1 205 1 53 1 32 1 224 1 290 3 177 1 131 1 146 2 244 1 104 1 105 2 58 1 229 1 246 1 
16 2 270 1 109 1 158 2 110 1 313 1 283 1 273 2 204 4 302 4 330 1 144 2 45 2 71 1 201 1 
123 1 220 1 230 1 
365 1 172 1 220 1 289 1 230 1 
123 1 220 1 230 1 
123 1 220 1 230 1 
254 1 220 1 230 1 
254 1 220 1 230 1 
254 1 220 1 230 1 
220 1 230 1 
327 1 192 1 
122 1 75 2 250 1 3 1 89 1 42 1 14 1 224 1 177 1 293 1 259 1 138 1 
14 1 122 1 232 1 293 1 42 1 259 1 
360 1 75 2 188 1 250 1 3 1 64 1 91 2 224 1 177 1 34 1 276 1 116 1 318 2 131 1 
18 1 131 1 221 1 
131 1 90 1 221 1 
131 1 221 1 
111 1 318 1 91 1 
131 1 354 1 
54 1 224 1 18 1 177 1 344 1 75 2 131 1 250 1 3 1 221 1 
188 1 318 1 131 1 64 1 91 1 137 1 
208 1 131 1 
14 1 293 1 42 1 138 1 
75 2 188 1 250 1 63 1 3 1 323 1 91 2 224 1 344 1 177 1 116 1 318 2 
75 2 188 1 250 1 3 1 64 1 91 2 224 1 344 1 177 1 34 1 276 1 116 1 318 2 131 1 
14 1 224 1 177 1 344 1 75 2 250 1 293 1 3 1 42 1 
224 3 18 1 360 1 177 3 344 1 75 6 117 1 131 1 250 3 3 3 221 1 329 1 
54 1 224 1 18 1 177 1 344 1 75 2 131 1 250 1 3 1 221 1 
54 1 224 2 18 1 344 1 177 2 360 1 75 4 131 1 250 2 3 2 221 1 
54 1 224 1 18 1 177 1 344 1 75 2 131 1 250 1 3 1 221 1 
54 1 224 1 18 1 177 1 344 1 75 2 131 1 250 1 3 1 221 1 
54 1 224 1 18 1 177 1 344 1 75 2 131 1 250 1 3 1 221 1 
54 1 224 1 18 1 177 1 344 1 75 2 131 1 250 1 3 1 221 1 
54 1 224 2 18 1 360 1 177 2 344 1 75 4 131 1 250 2 3 2 221 1 
54 1 224 2 18 1 344 1 177 2 75 4 117 1 131 1 250 2 3 2 221 1 
14 1 122 1 293 1 42 1 259 1 
54 1 224 2 18 1 344 1 177 2 75 4 117 1 131 1 250 2 3 2 221 1 
28 1 290 1 69 1 60 1 160 1 51 1 146 1 
28 1 356 1 60 1 171 1 161 1 160 1 51 1 44 1 69 1 290 1 194 1 146 1 
261 1 263 1 334 1 77 1 232 1 125 1 104 1 305 1 301 1 229 1 36 1 
108 1 261 1 60 1 263 1 160 2 125 1 301 1 32 1 290 2 334 1 146 1 104 1 24 1 105 1 305 1 229 1 245 1 58 1 
108 2 60 1 160 2 189 1 62 1 301 1 70 1 334 1 24 2 305 1 261 1 263 1 76 1 32 1 290 2 146 2 104 2 105 1 58 1 245 1 229 3 319 1 150 1 
108 2 60 1 160 2 189 1 62 1 301 1 70 1 334 1 24 2 305 2 261 2 263 2 240 1 76 1 32 1 290 2 146 2 104 2 105 1 294 1 245 1 229 3 319 1 150 1 
299 2 189 1 62 1 301 1 331 1 256 1 334 1 236 1 24 1 305 3 261 3 280 1 358 1 263 3 240 1 125 1 204 1 288 1 144 1 83 2 104 1 229 4 150 1 
261 3 263 3 240 1 299 2 189 1 125 1 62 1 325 1 204 1 301 1 288 1 144 1 331 1 256 1 334 1 236 1 104 1 24 1 83 2 305 3 150 1 229 4 
261 1 263 1 334 1 305 1 57 1 301 1 
88 1 261 7 74 1 359 1 263 7 125 2 1 1 301 2 316 1 101 1 168 1 334 3 169 1 24 1 104 2 57 1 305 6 266 1 149 1 229 3 26 1 
108 1 218 1 160 2 250 2 3 2 274 1 42 1 301 1 21 1 334 1 24 1 305 1 259 1 25 1 199 1 122 1 261 1 263 1 75 4 32 1 14 1 224 2 290 2 177 2 101 1 146 1 293 1 244 2 104 1 105 1 229 1 245 1 58 1 246 2 217 1 
270 2 109 1 158 1 110 2 299 3 325 1 253 1 330 2 331 1 256 1 236 1 305 1 261 1 263 1 12 1 313 2 125 1 339 1 204 1 288 2 144 1 209 1 226 1 35 1 83 3 229 2 106 1 267 1 
261 2 263 2 301 1 101 1 256 1 334 2 24 1 104 1 57 1 305 2 15 1 266 1 229 2 
261 4 262 1 263 4 240 1 77 1 125 1 301 1 101 1 334 1 104 1 305 4 229 1 36 1 
309 1 17 1 261 2 263 2 140 1 62 1 301 1 334 2 24 1 104 1 305 2 149 1 229 1 26 1 
8 1 261 1 263 1 361 1 61 1 334 1 125 1 305 1 301 1 222 1 
261 2 263 2 101 1 334 1 1 1 169 1 104 1 305 2 301 1 229 1 65 1 
261 5 262 1 263 5 359 1 77 1 62 1 125 1 1 1 301 2 101 1 334 2 168 1 104 2 305 4 229 3 36 1 
261 5 262 1 263 5 77 1 62 1 125 1 1 1 301 2 101 1 334 2 168 1 104 2 305 4 229 3 307 1 36 1 
108 1 261 1 60 1 263 1 160 2 125 1 301 1 32 1 290 2 334 1 146 1 104 1 24 1 105 1 305 1 229 1 245 1 294 1 
261 1 263 1 62 1 301 1 316 1 334 2 24 1 104 1 305 1 266 1 149 1 229 1 26 1 
279 1 290 1 160 1 146 1 127 1 84 1 352 1 166 1 86 1 
238 1 170 1 352 1 
60 1 284 1 84 1 352 1 86 1 
60 1 299 2 76 1 124 1 284 2 339 1 204 1 352 1 242 1 328 1 144 1 70 1 236 1 83 2 170 1 238 1 84 2 319 1 86 2 
232 1 190 1 355 1 46 1 
113 1 114 1 145 1 190 1 355 1 46 1 184 1 
167 1 113 1 40 1 
190 1 175 1 114 3 113 3 23 1 145 1 243 1 55 2 11 1 355 1 184 1 46 1 
113 2 114 2 145 1 49 1 190 1 118 1 355 1 46 1 184 1 
47 1 152 1 361 1 8 1 114 1 113 1 23 1 145 1 292 1 355 1 184 1 
113 1 114 1 145 1 23 1 190 1 355 1 184 1 
113 1 114 1 145 1 23 1 190 2 46 1 184 1 
113 2 114 2 145 2 23 1 298 1 134 1 196 1 190 1 355 1 184 2 
47 1 49 2 190 1 173 1 52 1 114 3 113 3 23 1 145 1 214 1 355 2 46 1 184 1 
152 1 361 1 49 1 61 1 190 1 285 1 8 2 114 2 113 2 23 1 145 1 180 1 355 1 46 1 184 1 
47 1 49 2 190 1 142 1 52 1 114 4 113 4 23 1 145 2 118 1 355 2 46 1 184 2 
113 1 114 1 145 1 23 1 190 1 355 1 46 1 184 1 
47 1 49 2 249 1 190 2 52 1 175 1 114 4 113 4 145 1 55 1 11 1 355 3 46 2 184 1 
49 1 190 1 135 1 114 2 113 2 23 1 145 1 198 1 355 1 85 1 184 1 46 1 
175 1 113 3 114 3 145 1 23 1 55 2 257 1 190 1 11 2 355 1 46 1 184 1 
225 1 50 2 355 2 120 1 
113 1 114 1 145 1 23 1 252 1 184 1 
113 2 114 2 145 1 23 1 49 1 190 1 214 1 355 1 46 1 184 1 
203 1 
113 1 114 1 145 1 23 1 190 1 355 1 46 1 184 1 
49 1 190 1 114 3 113 3 23 1 145 1 55 1 214 1 355 1 184 1 46 1 
47 1 249 1 355 1 52 1 
190 1 355 1 

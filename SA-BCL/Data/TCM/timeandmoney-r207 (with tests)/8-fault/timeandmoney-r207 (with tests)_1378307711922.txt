#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (132,202,362) (10,175,292) (10,175,292) (10,175,292) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 375 295 148 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 73 (222,301) (222,301) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (132,202,362) (132,202,362) (132,202,362) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 346 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (206,320) (206,320) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V ERROR java.lang.NullPointerException (206,320) 168 
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (206,320) 168 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 375 242 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (206,320) (206,320) 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 772 | 0 -> -1
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration; | RETURN | 900 | return null
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1145 | return null
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1647 | return null
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1132 | stmt -> ;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 6874 | = null
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9373 | stmt -> ;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:isZero()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
24 1 215 3 26 1 2 2 314 1 357 1 272 2 193 5 9 1 102 1 172 2 360 2 197 9 79 1 135 1 369 1 17 2 110 1 328 9 183 1 210 2 332 4 20 6 140 1 354 1 336 2 355 1 66 1 
24 1 215 3 26 1 2 2 314 1 357 1 272 2 193 5 9 1 102 1 172 2 360 2 197 9 79 1 135 1 369 1 17 2 110 1 328 9 183 1 210 2 332 4 20 6 140 1 354 1 336 2 355 1 66 1 
24 1 215 4 26 1 2 2 314 1 357 1 272 2 193 6 9 1 102 1 172 2 360 2 197 10 79 1 135 1 369 1 17 2 110 1 328 10 183 1 210 2 332 5 20 7 140 1 354 1 336 2 355 1 66 1 
24 1 215 2 26 1 2 1 314 1 357 1 272 2 193 4 9 1 102 1 172 2 360 2 197 7 135 1 369 1 17 2 110 1 328 7 183 1 210 2 332 3 20 4 140 1 354 1 336 2 355 1 66 1 
24 1 215 1 79 1 135 1 2 2 110 1 17 1 328 4 272 1 193 3 210 1 172 1 20 3 332 2 197 4 354 1 336 1 66 1 
24 1 135 1 369 1 36 1 110 1 17 1 328 2 18 1 193 1 272 1 183 1 19 1 172 1 360 1 197 2 336 1 
24 1 215 1 26 1 135 1 110 1 17 2 328 3 193 2 332 1 20 1 360 1 197 3 336 2 
24 1 215 3 26 1 2 2 357 1 193 5 272 1 172 1 360 1 197 9 79 1 135 1 180 1 229 1 17 2 110 1 328 9 210 1 332 4 20 7 140 1 354 1 336 2 66 1 
24 1 215 3 26 1 2 2 357 1 193 5 272 1 172 1 360 1 197 9 79 1 135 1 180 1 229 1 17 2 110 1 328 9 210 1 332 4 20 7 140 1 354 1 336 2 66 1 
276 1 196 1 6 1 
157 2 196 1 72 1 
42 2 371 1 231 2 80 2 361 2 90 1 123 2 57 2 
190 1 284 1 49 1 268 2 313 1 95 2 239 1 169 1 123 2 218 1 99 2 73 1 359 1 361 2 246 2 29 1 279 1 225 1 198 1 76 1 57 2 322 1 227 2 80 3 326 1 301 1 109 1 40 1 331 1 42 2 371 1 231 3 260 1 307 1 87 1 90 1 308 1 
80 1 123 1 182 1 42 1 371 1 84 1 231 1 361 1 224 1 57 1 
356 1 249 1 80 1 290 1 96 1 54 1 245 1 231 1 276 1 196 1 224 1 199 1 57 1 31 1 
356 1 80 1 290 1 96 2 123 1 54 2 42 1 245 1 231 1 276 1 196 1 361 1 224 1 57 1 31 1 
319 1 96 1 54 1 77 1 144 1 
214 1 276 1 196 1 319 1 96 2 44 1 54 2 77 1 
319 1 96 1 54 1 
80 1 96 1 123 1 182 1 54 1 42 1 371 1 84 1 231 1 125 1 361 1 224 1 57 1 77 1 
196 1 
276 1 196 1 319 1 96 2 44 1 345 1 54 2 77 1 
201 1 248 1 315 2 253 1 96 5 50 1 122 2 54 5 302 1 293 2 275 1 170 1 276 1 196 1 319 2 142 1 321 1 44 1 77 2 
90 1 6 1 
34 1 311 1 80 2 81 1 123 1 42 1 231 2 361 1 224 1 90 1 57 2 
107 1 297 1 7 1 
310 1 190 1 80 1 95 1 109 1 218 1 99 1 73 1 231 1 359 1 260 1 307 1 90 1 246 1 29 1 76 1 
190 1 80 2 108 1 95 1 109 1 123 1 218 1 99 1 73 1 231 2 359 1 260 1 62 1 361 1 307 1 29 1 246 1 76 1 57 1 297 1 
311 1 80 3 123 3 42 1 231 3 62 1 361 3 224 1 90 1 57 3 
231 1 80 1 361 1 224 1 123 1 57 1 182 1 
34 1 80 1 81 1 123 1 42 1 231 1 361 1 224 1 57 1 
190 1 356 1 284 1 49 1 268 1 313 1 95 1 239 1 290 1 96 1 169 1 123 3 218 1 54 1 99 1 73 1 245 1 359 1 361 3 224 1 29 1 246 1 225 1 104 1 76 1 57 3 31 1 227 2 80 4 108 1 326 1 301 1 109 1 81 1 40 1 331 1 42 2 371 1 231 4 260 1 62 1 307 1 90 1 65 1 
231 2 80 2 62 1 361 1 90 1 207 1 123 1 199 1 57 2 
356 1 80 3 108 1 290 1 96 1 81 1 123 3 54 1 42 1 245 1 231 3 196 1 62 2 361 3 224 1 154 1 104 1 57 3 31 1 
80 2 107 1 81 1 123 2 42 1 231 2 62 1 361 2 57 2 297 1 
190 1 80 1 95 1 109 1 218 1 99 1 73 1 231 1 359 1 260 1 307 1 90 1 246 1 29 1 76 1 
69 1 80 1 95 1 109 1 218 1 99 1 231 1 359 1 344 1 260 1 307 1 90 1 246 1 29 1 76 1 
284 1 49 1 267 1 268 4 70 1 313 1 286 1 269 1 239 1 121 1 169 1 7 2 279 2 225 1 347 1 227 2 297 2 107 2 181 1 327 1 331 2 232 1 188 1 63 1 
231 1 80 1 361 1 224 1 290 1 123 1 57 1 365 1 
311 1 80 2 123 2 81 1 42 1 231 2 62 1 361 2 224 1 90 1 57 2 
231 2 80 2 361 2 224 1 123 2 57 2 365 1 182 1 
41 1 306 1 
41 1 306 1 
158 1 115 1 
158 1 115 1 
158 1 115 1 
41 1 306 1 316 1 
41 1 306 1 316 1 
41 1 306 1 316 1 
41 1 58 1 306 1 
41 2 158 1 115 1 306 2 27 1 317 1 
41 1 306 1 130 1 
41 1 306 1 130 1 
41 1 306 1 130 1 
283 1 251 2 325 1 300 1 27 1 348 2 96 2 54 2 41 2 8 2 28 1 306 2 116 2 196 1 86 2 75 1 45 1 213 1 264 3 
35 1 59 1 58 1 80 2 270 1 96 1 348 1 271 1 123 2 54 1 41 1 258 1 8 1 231 2 103 1 306 1 116 1 361 2 86 1 352 1 90 1 57 2 213 1 264 1 
210 1 172 1 272 1 
172 1 18 1 272 1 
210 2 172 3 333 1 21 1 18 1 273 1 
210 1 172 2 333 1 21 1 18 1 149 1 
210 1 172 2 333 1 21 2 18 1 
216 1 70 1 72 1 315 1 288 1 289 1 358 2 121 1 96 5 122 1 98 2 54 5 243 1 293 1 170 2 103 1 276 1 196 2 319 1 77 4 33 1 15 2 248 1 254 1 181 1 258 1 157 3 188 1 352 1 142 3 44 1 266 1 
288 1 289 1 96 6 98 2 54 6 293 1 196 3 57 1 15 2 248 1 258 2 157 3 211 1 160 1 212 1 266 1 216 1 70 1 72 1 315 1 121 1 122 1 123 1 170 2 125 1 276 1 361 1 319 4 224 1 77 5 80 1 181 1 182 1 42 1 371 1 231 1 84 1 188 1 189 3 142 3 44 1 144 3 
216 1 70 1 72 2 315 1 289 1 358 1 96 3 121 1 122 1 98 2 54 3 243 1 293 1 170 2 276 1 196 3 77 2 33 1 15 2 181 1 302 1 258 1 157 4 188 1 142 3 266 1 
216 2 71 1 70 2 72 3 315 1 289 1 358 2 96 4 121 2 122 1 98 4 54 4 293 1 243 1 170 4 276 1 196 4 77 3 33 1 15 4 181 2 302 1 258 2 157 7 305 1 372 1 188 2 142 5 266 1 
294 1 359 1 6 1 
359 1 353 1 
120 1 
359 1 109 1 
294 2 370 1 359 3 307 1 334 1 109 1 
359 1 307 1 109 1 
68 1 359 1 
133 1 366 1 268 7 70 1 286 3 205 1 181 1 327 2 208 1 257 2 349 1 331 3 330 1 150 1 195 1 335 1 279 4 
133 1 366 1 268 7 70 1 286 3 205 1 181 1 327 2 208 1 257 2 349 1 331 3 330 1 150 1 195 1 335 1 279 4 
133 1 366 1 268 7 70 1 286 3 205 1 181 1 327 2 53 1 208 1 257 2 349 1 331 3 330 1 150 1 195 1 335 1 279 4 
163 3 284 1 216 3 268 31 70 4 286 10 94 1 239 1 121 3 169 1 341 4 124 1 241 1 150 2 195 2 12 1 279 16 225 1 227 2 133 1 366 2 205 2 181 4 327 5 38 1 208 1 349 1 303 1 257 3 330 1 331 15 188 3 335 5 46 1 
284 1 268 9 70 2 286 3 239 1 169 1 150 1 195 1 225 1 279 5 227 2 133 1 366 1 205 1 181 2 327 2 280 1 208 1 257 1 331 4 330 1 233 1 261 1 335 1 
164 1 202 1 105 1 238 1 165 1 167 1 110 1 17 1 328 1 292 1 10 1 360 1 175 1 197 1 336 1 
24 1 164 1 119 1 165 1 238 1 95 1 167 1 218 1 193 1 272 1 273 1 292 1 99 1 100 1 10 1 172 2 360 1 197 3 246 1 202 1 367 1 135 1 17 1 328 3 18 1 210 1 20 2 260 1 89 1 336 1 
24 1 164 1 165 1 95 1 167 1 218 1 193 1 273 1 272 1 99 1 100 1 10 1 172 2 360 1 197 2 246 1 202 1 367 1 135 1 328 2 18 1 210 1 20 2 260 1 89 1 
164 2 23 1 119 1 165 2 95 1 147 1 167 2 218 1 221 1 99 1 359 1 360 2 197 1 246 1 76 1 204 1 17 1 109 1 328 1 260 1 186 1 282 1 336 1 
164 1 165 1 238 1 95 1 167 1 218 1 272 1 292 1 273 1 99 1 100 1 10 1 172 2 360 1 175 1 197 1 246 1 202 1 17 1 110 1 328 1 18 1 210 1 260 1 89 1 336 1 
85 1 
146 2 95 2 192 1 290 1 96 5 54 5 99 2 293 1 342 1 56 1 245 1 196 2 152 2 246 2 199 1 57 1 247 2 248 1 249 1 106 4 109 1 155 1 113 2 157 2 260 1 162 1 266 1 265 1 23 1 356 1 72 2 315 1 122 1 218 1 221 1 274 2 170 2 276 1 359 1 129 2 319 6 224 1 76 2 176 1 31 1 134 1 80 1 230 1 231 1 235 1 142 2 376 1 377 1 44 3 143 2 
356 1 134 1 106 2 249 1 80 1 290 1 96 3 54 3 342 1 274 1 230 1 245 1 231 1 319 2 224 1 44 1 345 1 162 1 199 1 57 1 31 1 176 1 
356 1 134 1 146 1 106 3 249 1 80 1 290 1 96 3 54 3 342 1 230 1 245 1 231 1 276 1 196 1 319 1 224 1 44 1 345 1 162 1 199 1 57 1 31 1 176 1 
356 1 146 1 290 1 96 3 54 3 342 1 274 1 245 1 276 1 196 1 319 2 224 1 345 1 57 1 199 1 176 1 31 1 134 1 80 1 249 1 106 3 113 1 230 1 231 1 44 1 162 1 
47 1 146 3 290 1 192 1 96 5 54 5 342 1 293 1 245 1 196 1 152 2 345 1 199 1 57 2 247 2 248 1 106 5 249 1 111 1 113 4 262 1 162 1 265 1 117 1 356 1 72 2 315 1 122 1 123 1 274 4 170 1 125 1 276 1 361 1 319 7 129 2 224 2 31 1 176 1 134 1 80 2 182 1 42 1 230 1 371 1 84 1 231 2 185 1 142 1 44 3 143 2 
146 2 290 1 192 1 96 4 54 4 293 1 342 1 56 1 245 1 196 2 152 2 57 1 199 1 247 2 248 1 106 4 249 1 113 2 157 2 162 1 265 1 356 1 72 2 315 1 122 1 274 2 170 1 276 1 129 2 319 4 224 1 31 1 176 1 134 1 80 1 230 1 231 1 142 1 44 2 143 2 
47 1 356 1 146 2 72 2 315 1 192 1 290 1 96 4 122 1 54 4 342 1 293 1 274 2 170 1 245 1 276 1 196 1 319 4 152 2 129 2 224 1 57 1 199 1 176 1 31 1 247 2 134 1 248 1 80 1 249 1 106 4 113 2 230 1 231 1 262 1 142 1 44 2 143 2 162 1 117 1 265 1 
47 1 356 1 146 2 72 2 315 1 192 1 290 1 96 4 122 1 54 4 342 1 293 1 274 2 170 1 245 1 276 1 196 1 319 4 152 2 129 2 224 1 57 1 199 1 176 1 31 1 247 2 134 1 248 1 80 1 249 1 106 4 113 2 230 1 231 1 262 1 142 1 44 2 143 2 162 1 117 1 265 1 
356 1 146 2 166 2 287 1 315 1 192 1 290 1 96 4 122 1 54 4 342 1 293 1 274 2 170 1 245 1 276 1 196 1 319 4 129 2 224 1 57 1 199 1 176 1 31 1 298 1 247 2 134 1 248 1 80 1 249 1 106 4 113 2 230 1 157 2 231 1 142 1 161 2 44 2 162 1 22 1 117 1 
47 1 356 1 146 3 72 2 315 1 192 1 290 1 96 4 122 1 54 4 293 1 342 1 274 3 170 1 245 1 276 1 196 1 152 2 129 2 319 5 224 1 57 1 199 1 176 1 31 1 247 2 248 1 134 1 80 1 249 1 106 5 113 3 230 1 231 1 262 1 185 1 142 1 44 2 143 2 162 1 117 1 265 1 
47 1 356 1 146 3 72 2 315 1 192 1 290 1 96 4 122 1 54 4 293 1 342 1 274 3 170 1 245 1 276 1 196 1 152 2 129 2 319 5 224 1 57 1 199 1 176 1 31 1 247 2 248 1 134 1 80 1 249 1 106 5 113 3 230 1 231 1 262 1 185 1 142 1 44 2 143 2 162 1 117 1 265 1 
356 1 146 2 166 2 315 1 192 1 290 1 96 4 122 1 54 4 342 1 293 1 274 2 56 1 170 1 245 1 276 1 196 1 319 4 129 2 224 1 199 1 57 1 176 1 31 1 298 1 247 2 248 1 134 1 249 1 80 1 106 4 113 2 230 1 157 2 231 1 142 1 161 2 44 2 162 1 
284 1 49 1 268 6 313 1 286 2 70 1 239 1 6 1 169 1 7 1 150 1 225 1 279 3 297 1 227 2 133 1 366 1 107 1 181 1 327 2 208 1 257 1 330 1 331 3 232 1 90 2 
163 3 25 1 284 2 49 2 216 2 268 14 286 2 313 1 70 2 94 1 239 2 121 2 291 1 169 2 341 3 7 11 55 1 225 2 279 8 322 1 227 4 297 11 60 1 107 4 181 1 327 1 156 1 303 1 40 1 331 6 188 1 335 1 90 1 
190 1 310 1 49 1 284 1 268 2 313 1 95 1 239 1 339 1 169 1 123 1 218 1 99 1 55 1 73 1 359 1 74 1 361 1 29 1 246 1 76 1 225 1 279 1 57 1 322 1 227 2 368 1 80 2 107 1 108 1 109 1 40 1 331 1 231 2 260 1 62 1 307 1 90 1 
190 2 284 3 49 3 3 1 286 8 95 3 239 3 97 1 99 3 7 7 55 1 150 1 246 3 57 1 297 7 14 2 107 7 108 1 301 2 109 2 208 1 257 1 62 1 260 2 307 2 216 2 268 20 313 3 70 3 121 2 123 1 169 3 218 2 222 2 73 2 359 2 361 1 29 2 76 1 225 3 279 10 322 1 227 6 78 2 133 1 366 1 80 3 181 3 327 4 40 1 136 2 330 1 331 10 231 3 137 1 89 1 188 2 335 4 90 2 
23 1 145 1 284 2 49 2 268 2 313 2 95 3 239 2 123 1 169 2 148 1 218 1 221 1 99 3 295 1 359 1 361 1 246 3 76 2 225 2 279 1 198 1 57 1 322 1 227 4 105 1 80 1 109 1 114 1 40 1 331 1 231 1 232 1 62 1 260 1 375 1 
284 1 49 1 216 1 268 3 286 1 313 1 70 1 239 1 121 1 169 1 123 1 7 1 55 1 361 1 225 1 279 1 57 1 297 1 227 2 200 1 80 1 107 1 181 1 327 1 81 1 42 1 331 2 231 1 188 1 
49 1 284 1 267 1 268 2 286 1 313 1 70 1 107 1 239 1 121 1 169 1 7 1 232 1 335 1 225 1 279 2 297 1 227 2 
49 1 284 1 268 2 286 1 313 1 107 1 239 1 181 1 327 1 169 1 7 1 331 2 232 1 188 1 63 1 225 1 297 1 227 2 
49 1 284 1 216 1 268 4 286 2 313 1 70 1 107 2 181 1 239 1 327 1 121 1 169 1 7 2 331 2 232 1 188 1 335 1 225 1 279 2 297 2 227 2 
145 1 49 1 284 1 267 1 268 2 286 1 313 1 70 1 107 1 239 1 121 1 169 1 7 1 335 1 225 1 279 2 297 1 227 2 
145 1 49 1 284 1 268 2 286 1 313 1 107 1 239 1 181 1 327 1 169 1 7 1 331 2 188 1 63 1 225 1 297 1 227 2 
145 1 49 1 284 1 216 1 268 4 286 2 313 1 70 1 107 2 181 1 239 1 327 1 121 1 169 1 7 2 331 2 188 1 335 1 225 1 279 2 297 2 227 2 
49 1 284 1 216 1 268 4 286 2 313 1 70 1 107 2 181 1 239 1 327 1 121 1 169 1 7 2 331 2 188 1 335 1 225 1 279 2 297 2 227 2 
190 1 49 1 284 1 268 2 313 1 95 1 239 1 169 1 218 1 99 1 73 1 359 1 29 1 246 1 279 1 76 1 225 1 322 1 227 2 80 1 301 1 109 1 40 1 331 1 231 1 260 1 307 1 90 1 
69 1 49 1 284 1 268 2 313 1 95 1 239 1 169 1 218 1 99 1 359 1 344 1 29 1 246 1 279 1 76 1 225 1 322 1 227 2 80 1 109 1 40 1 83 1 331 1 231 1 260 1 307 1 90 1 
49 1 284 1 216 1 268 4 286 2 313 1 70 1 107 2 181 1 239 1 327 1 121 1 169 1 7 2 55 1 331 2 188 1 335 1 225 1 279 2 297 2 227 2 
222 1 105 1 73 1 301 1 
284 1 49 1 216 1 268 3 286 1 313 1 70 1 239 1 121 1 5 1 169 1 123 1 7 1 55 1 361 1 225 1 279 2 57 1 227 2 297 1 80 1 107 1 181 1 81 1 331 1 42 1 231 1 188 1 335 1 
163 1 0 1 284 2 216 3 268 19 70 3 286 6 94 1 239 2 121 3 169 2 341 2 101 1 173 1 11 2 194 1 225 2 279 9 227 4 250 1 181 3 327 3 303 1 304 1 331 10 138 1 233 1 43 2 188 3 335 3 
163 2 0 2 284 3 216 3 268 26 285 1 286 4 70 3 239 3 4 1 121 3 169 3 341 2 241 2 244 1 11 1 173 1 194 2 225 3 279 14 13 1 227 6 323 1 250 1 181 2 327 2 304 1 303 2 331 12 233 1 43 4 188 2 335 2 67 1 
0 2 1 1 284 3 286 8 285 1 94 1 239 3 4 1 341 4 241 1 244 1 150 1 11 1 194 1 13 1 250 1 208 1 304 1 303 3 257 1 67 1 163 3 216 4 268 41 70 5 121 4 169 3 173 1 279 20 225 3 227 6 133 1 323 1 366 1 181 5 327 4 331 21 330 1 233 1 138 1 188 4 43 4 335 4 
163 3 0 2 1 1 284 4 216 4 268 38 285 1 70 5 286 7 94 1 239 4 4 1 121 4 169 4 341 4 241 2 244 1 150 1 11 1 173 1 194 1 225 4 279 20 13 1 227 8 133 1 366 1 323 1 250 1 181 4 327 4 208 1 257 1 303 3 304 1 330 1 331 18 138 1 233 1 43 4 188 3 335 3 67 1 
163 4 0 1 284 2 216 7 268 52 285 1 70 8 286 14 94 2 239 2 4 1 121 7 169 2 341 4 241 1 244 1 150 1 11 1 173 1 194 1 225 2 279 27 13 1 227 4 133 1 366 1 323 1 250 1 60 2 181 8 327 7 208 1 257 1 303 2 304 1 330 1 331 25 233 1 43 4 188 7 335 7 67 1 
41 1 8 1 28 1 306 1 116 1 217 1 86 1 27 1 348 1 45 1 
58 1 271 1 
41 1 8 1 203 1 306 1 116 1 86 1 348 1 131 1 61 1 
283 1 251 1 300 1 27 1 96 1 348 1 54 1 41 1 8 1 28 1 306 1 116 1 196 1 86 1 75 1 45 1 213 1 264 2 
283 1 251 1 300 1 27 1 96 1 348 1 54 1 41 1 8 1 28 1 306 1 116 1 196 1 86 1 75 1 45 1 213 1 264 2 
283 1 251 1 300 1 27 1 96 1 348 1 54 1 41 1 8 1 28 1 306 1 116 1 196 1 86 1 75 1 45 1 213 1 264 2 
82 1 317 1 316 1 
82 1 317 1 316 1 
130 1 118 1 
130 1 317 1 118 1 
59 1 270 1 
96 1 270 1 271 1 123 2 54 1 8 1 103 1 361 2 75 1 57 2 77 1 35 1 58 1 59 1 80 2 251 1 348 1 41 1 258 1 231 2 306 1 116 1 374 1 86 1 352 1 90 1 264 1 
82 1 316 1 
130 1 317 1 118 1 
237 1 49 1 284 1 268 2 313 1 95 2 239 1 338 1 169 1 218 1 99 2 55 1 359 1 246 2 225 1 364 1 279 1 198 2 57 2 322 1 227 2 80 2 109 1 114 1 40 1 331 1 231 2 260 1 234 1 375 1 141 1 
202 1 105 1 132 1 238 1 277 1 95 1 362 1 167 1 89 1 246 1 99 1 
202 1 238 1 95 1 167 1 18 1 218 1 272 1 273 1 99 1 100 1 210 1 172 2 260 1 362 1 89 1 263 1 246 1 
23 1 95 1 147 1 167 1 109 1 218 1 221 1 99 1 343 1 359 1 277 1 260 1 246 1 76 1 
202 1 132 1 238 1 95 1 167 1 18 1 218 1 272 1 273 1 99 1 100 1 210 1 172 2 277 1 260 1 362 1 89 1 246 1 
91 1 
275 1 201 1 170 1 276 1 196 1 142 1 6 1 
72 1 315 1 96 1 122 1 54 1 293 1 170 1 276 1 196 2 152 1 319 1 248 1 157 1 142 1 44 1 143 1 265 1 
95 1 96 5 340 2 98 6 54 5 99 1 293 4 294 2 245 2 196 8 246 1 346 1 105 1 201 1 15 6 248 4 252 2 109 1 157 12 260 2 159 2 307 1 353 3 266 2 216 2 70 2 72 6 315 4 121 2 122 4 218 1 220 2 275 1 170 8 276 2 359 6 319 5 76 1 226 2 178 2 37 2 181 2 39 1 136 2 187 1 235 1 334 1 188 2 142 9 44 3 337 1 
163 1 216 2 70 2 72 3 315 2 4 1 96 1 51 1 121 2 122 2 98 5 341 1 54 1 293 2 244 1 170 5 276 2 196 5 319 1 13 1 299 1 15 5 178 1 323 1 248 2 252 2 181 2 303 1 157 6 235 1 188 2 142 8 44 1 67 1 266 1 
70 2 315 1 96 1 122 1 123 1 54 1 293 1 150 1 170 2 125 1 361 1 224 1 57 1 178 1 366 1 248 1 80 1 252 2 181 1 182 1 208 1 42 1 371 1 231 1 84 1 261 1 262 1 142 2 
201 1 248 1 315 1 122 1 293 1 275 1 170 1 276 1 196 1 142 1 
15 5 178 1 216 2 70 2 72 5 252 2 181 2 121 2 98 5 136 1 170 5 157 10 196 5 188 2 142 5 
276 1 196 1 319 1 96 1 44 1 54 1 
23 1 95 4 315 2 96 3 122 2 218 1 54 3 221 1 99 4 293 2 170 2 151 1 359 1 319 4 153 1 246 4 76 2 248 1 109 1 302 1 281 2 260 1 187 1 235 2 376 1 142 2 377 1 44 2 266 2 
190 1 284 1 49 1 268 1 313 1 95 1 239 1 169 1 123 2 218 1 99 1 73 1 359 1 361 2 246 1 29 1 76 1 225 1 57 2 227 2 80 3 326 1 301 1 109 1 40 1 331 1 42 2 371 1 231 3 260 1 307 1 90 1 
15 2 248 1 72 2 315 1 122 1 98 2 257 1 293 1 157 4 170 2 276 2 196 4 235 1 142 1 266 1 
116 1 139 1 86 1 
116 1 139 1 86 1 
116 1 139 1 86 1 
28 1 59 1 116 1 278 1 86 1 
116 1 16 1 86 1 
116 1 16 1 86 1 
116 1 16 1 86 1 
116 1 86 1 
41 1 306 1 
133 1 284 2 366 1 268 8 70 1 286 3 181 1 239 2 327 2 169 2 208 1 257 1 241 1 331 4 330 1 150 1 335 1 279 4 225 2 227 4 
133 1 366 1 268 6 286 2 70 1 181 1 327 2 6 1 208 1 257 1 331 3 330 1 150 1 279 3 
284 1 216 1 268 4 286 2 70 1 181 1 239 1 327 1 121 1 169 1 112 1 331 2 188 1 335 1 225 1 279 2 227 2 
163 1 216 1 268 7 70 1 286 2 94 1 181 1 327 1 121 1 341 2 303 1 331 4 188 1 335 1 279 3 
163 2 25 1 216 2 284 2 268 23 286 9 70 3 94 1 239 2 121 2 169 2 341 2 241 2 150 2 223 1 279 11 225 2 227 4 133 1 366 2 60 1 181 3 327 5 208 1 257 1 330 1 331 12 188 2 335 4 
331 1 268 1 341 1 
163 1 268 1 279 1 
284 1 216 1 268 6 70 1 286 3 239 1 181 1 121 1 327 2 169 1 112 1 136 1 331 3 188 1 335 1 225 1 279 3 227 2 
163 1 284 1 216 2 268 12 70 2 286 2 239 1 121 2 4 1 169 1 341 1 244 1 225 1 279 6 13 1 227 2 323 1 181 2 327 1 303 1 331 6 233 1 188 2 335 1 67 1 
366 1 268 6 70 1 286 2 181 1 327 1 208 1 331 3 150 1 335 1 279 3 
133 1 366 1 284 1 268 3 286 2 239 1 327 1 169 1 241 1 331 2 330 1 150 1 223 1 335 1 279 1 225 1 227 2 
284 1 366 2 268 10 286 5 70 2 239 1 181 2 327 3 169 1 208 1 331 5 150 2 233 1 261 1 335 2 225 1 279 5 227 2 
284 1 268 2 70 1 286 1 239 1 121 1 169 1 233 1 335 1 225 1 279 2 227 2 
284 1 216 1 268 4 286 2 70 1 181 1 239 1 327 1 121 1 169 1 331 2 233 1 188 1 335 1 225 1 279 2 227 2 
284 3 366 1 268 3 286 2 239 3 327 1 169 3 241 1 331 2 150 1 223 1 138 1 233 1 335 1 225 3 279 1 227 6 
163 3 284 5 216 3 268 34 70 5 286 12 94 1 239 5 121 3 169 5 341 4 124 1 241 2 150 3 223 1 12 1 225 5 279 16 227 10 133 1 366 3 181 5 327 7 208 2 112 1 257 1 303 1 330 1 331 18 138 1 233 1 188 3 335 5 46 1 
163 1 284 1 268 8 70 1 286 2 239 1 169 1 341 1 150 1 225 1 279 4 227 2 133 1 323 1 366 1 181 1 327 2 208 1 257 1 303 1 331 4 330 1 233 1 
163 1 284 2 216 1 268 11 70 2 286 3 94 1 239 2 121 1 169 2 341 2 150 1 225 2 279 6 227 4 133 1 366 1 323 1 181 1 327 2 208 1 112 1 257 1 303 1 330 1 331 5 233 1 335 1 
163 1 284 3 216 2 268 19 70 3 286 4 239 3 121 2 4 1 169 3 341 1 241 1 244 1 150 1 225 3 279 9 13 1 227 6 133 1 366 1 323 1 181 3 327 3 208 1 112 1 257 1 303 1 330 1 331 10 233 1 188 2 335 1 67 1 
163 1 284 3 216 2 268 17 70 3 286 5 239 3 121 2 4 1 169 3 341 1 241 1 244 1 150 1 225 3 279 10 13 1 227 6 133 1 366 1 323 1 181 2 327 3 208 1 112 1 257 1 303 1 330 1 331 7 233 1 188 1 335 2 67 1 
163 1 284 1 268 8 70 1 286 2 239 1 169 1 341 1 150 1 225 1 279 4 227 2 133 1 323 1 366 1 181 1 327 2 208 1 257 1 303 1 331 4 330 1 233 1 
163 1 284 1 216 2 268 12 70 2 286 2 239 1 121 2 4 1 169 1 341 1 244 1 225 1 279 6 13 1 227 2 323 1 181 2 327 1 303 1 331 6 233 1 188 2 335 1 67 1 
163 1 284 4 216 2 268 18 70 3 286 5 239 4 4 1 121 2 169 4 341 1 241 2 244 1 150 1 225 4 279 10 13 1 227 8 133 1 366 1 323 1 181 2 327 3 208 1 112 1 257 1 303 1 330 1 331 8 233 1 188 1 335 2 67 1 
163 1 284 4 216 3 268 16 70 3 286 6 239 4 4 1 121 3 169 4 341 1 241 2 244 1 225 4 279 9 13 1 227 8 323 1 181 2 327 3 303 1 331 7 233 1 138 1 188 2 335 3 67 1 
133 2 366 3 268 7 286 6 70 1 181 1 327 3 208 1 331 4 330 1 150 3 335 3 279 3 
163 1 284 4 216 2 268 18 70 3 286 4 239 4 4 1 121 2 169 4 341 1 241 2 244 1 150 1 225 4 279 10 13 1 227 8 133 1 366 1 323 1 181 2 327 3 208 1 257 1 303 1 330 1 331 8 233 1 138 1 188 1 335 1 67 1 
231 1 171 1 80 1 90 1 207 1 57 1 199 1 
177 1 191 1 80 1 240 1 207 1 209 1 171 1 231 1 90 1 199 1 57 1 309 1 
23 1 359 1 260 1 95 1 109 1 246 1 6 1 76 1 218 1 221 1 99 1 
190 1 80 2 95 1 109 1 123 1 218 1 99 1 231 2 359 1 260 1 62 1 361 1 307 1 90 1 29 1 246 1 76 1 57 1 
190 1 68 1 95 1 290 1 123 2 218 1 99 1 359 3 127 1 361 1 224 1 246 1 29 1 57 2 31 1 80 2 109 2 281 1 231 2 62 1 260 1 307 2 90 1 
68 1 69 1 95 2 290 1 123 2 218 1 219 1 99 2 359 3 127 1 361 1 224 1 246 2 29 1 57 2 31 1 80 2 109 2 281 1 231 2 62 1 260 1 307 2 90 1 
68 1 92 1 95 3 96 2 218 1 219 1 54 2 99 3 294 1 245 1 359 4 276 1 127 1 196 1 319 1 246 3 76 1 109 1 281 1 260 1 307 1 353 1 64 1 
68 1 95 3 96 2 109 1 218 1 219 1 54 2 99 3 281 1 245 1 294 1 276 1 359 4 127 1 196 1 260 1 319 1 307 1 353 1 246 3 76 1 226 1 
179 1 260 1 95 1 246 1 218 1 99 1 
95 1 206 1 109 1 218 1 99 1 359 1 373 1 260 2 334 1 307 1 320 1 246 1 76 1 
105 1 284 1 49 1 80 1 313 1 239 1 123 1 169 1 55 1 231 1 62 1 361 1 364 1 225 1 57 1 227 2 
95 1 315 2 96 3 122 2 340 1 54 3 99 1 293 2 275 1 170 1 294 1 245 1 276 1 359 2 196 1 319 2 246 1 76 1 77 1 226 1 201 1 248 2 37 1 159 1 187 1 142 1 353 1 44 1 
105 1 179 1 95 1 109 1 39 1 218 1 99 1 294 1 359 2 260 2 334 1 307 1 246 1 
105 1 312 1 95 1 168 1 109 1 218 1 221 1 99 1 359 1 373 1 260 2 320 1 307 1 246 1 76 1 
312 1 95 1 168 1 109 1 218 1 99 1 137 1 359 1 373 1 260 2 307 1 320 1 246 1 
172 1 260 1 95 1 246 1 18 1 76 1 218 1 272 1 100 1 99 1 
105 1 95 1 89 1 246 1 99 1 
105 1 95 1 246 1 76 1 99 1 
242 1 105 1 95 1 375 1 246 1 76 1 99 1 
69 1 80 2 95 1 109 1 123 1 218 1 99 1 231 2 359 1 260 1 62 1 361 1 307 1 90 1 29 1 246 1 76 1 57 1 
95 1 206 1 109 1 218 1 99 1 281 1 359 1 373 1 260 2 334 1 307 1 320 1 246 1 
80 1 338 1 329 1 259 1 231 1 234 1 88 1 141 1 57 1 
126 1 228 1 329 1 
259 1 93 1 88 1 90 1 329 1 
356 1 93 2 228 1 290 1 96 2 329 1 54 2 245 1 259 2 276 1 126 1 196 1 184 1 224 1 88 2 90 1 104 1 31 1 77 1 
24 1 135 1 6 1 193 1 
24 1 135 1 197 1 17 1 328 1 336 1 193 1 
165 1 360 1 197 1 
236 1 24 1 135 1 110 1 17 1 328 3 193 1 183 2 174 1 197 3 336 1 30 1 
24 1 135 1 2 1 20 1 197 2 17 1 328 2 336 1 193 1 
110 1 17 1 328 1 193 1 272 1 210 1 172 1 332 1 197 1 354 1 336 1 
24 1 197 1 17 1 110 1 328 1 336 1 193 1 
24 2 135 1 197 1 17 1 110 1 328 1 336 1 
24 1 48 1 110 1 17 2 328 2 193 1 296 1 197 2 336 2 378 1 
24 1 215 1 135 1 357 1 110 1 17 1 328 3 193 2 20 2 332 1 140 1 197 3 336 1 
24 1 135 1 324 1 110 1 17 1 18 1 328 2 193 1 273 1 272 1 210 1 172 2 20 1 197 2 336 1 
24 1 215 1 79 1 135 1 2 1 110 1 17 2 328 4 193 2 20 2 332 1 197 4 336 2 
24 1 135 1 197 1 17 1 110 1 328 1 336 1 193 1 
236 1 24 2 215 1 135 2 17 1 328 4 193 3 256 1 183 1 174 1 20 2 332 1 197 4 336 1 
24 1 135 1 20 1 180 1 197 2 52 1 17 1 110 1 328 2 336 1 193 1 32 1 
236 1 24 1 135 1 110 1 17 1 328 3 193 1 183 2 174 2 128 1 197 3 336 1 
318 1 363 1 255 2 193 2 
351 1 197 1 17 1 110 1 328 1 336 1 
24 1 135 1 20 1 140 1 197 2 17 1 110 1 328 2 336 1 193 1 
350 1 
24 1 135 1 197 1 17 1 110 1 328 1 336 1 193 1 
24 1 183 1 135 1 20 1 140 1 197 3 17 1 110 1 328 3 336 1 193 1 
215 1 20 1 332 1 197 1 328 1 193 1 
24 1 193 1 

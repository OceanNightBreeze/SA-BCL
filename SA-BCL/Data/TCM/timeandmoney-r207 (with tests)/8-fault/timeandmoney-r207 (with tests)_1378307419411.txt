#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (201,291) (201,291) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (201,291) (201,291) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (201,291) (201,291) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (201,291) (201,291) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 103 (15,303,377) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 345 129 20 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.ClassCastException (70,77) 90 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.ClassCastException (70,77) 258 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.ClassCastException (70,77) 258 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.ClassCastException (70,77) 90 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3137 | = null
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | STATEMENT | 3734 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | RETURN | 994 | return null
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> %
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z | STATEMENT | 1492 | stmt -> ;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONSTANT | 6207 | 1 -> 0
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 821 | < -> !=
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6199 | = null
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
52 1 206 1 165 1 291 1 151 1 279 1 336 1 218 1 13 1 340 1 201 1 235 1 49 1 
52 1 206 1 165 1 291 1 201 1 340 1 151 1 336 1 279 1 235 1 218 1 49 1 13 1 
52 1 206 1 165 1 291 1 201 1 340 1 151 1 336 1 279 1 235 1 218 1 49 1 13 1 
52 1 206 1 165 1 291 1 201 1 340 1 151 1 336 1 279 1 235 1 218 1 49 1 13 1 
52 1 250 1 206 1 93 2 165 1 151 4 279 1 153 1 193 1 141 1 245 3 19 2 156 1 340 4 235 1 47 1 110 1 50 3 
52 1 250 1 206 1 65 1 151 2 38 1 279 1 336 1 218 1 107 1 245 1 353 1 340 2 235 1 47 1 110 1 
250 1 206 2 93 1 151 3 279 2 336 1 153 1 155 1 245 2 340 3 235 1 47 1 50 1 
93 4 165 1 336 1 193 1 141 1 337 1 171 1 245 5 19 2 340 9 47 1 50 7 52 1 250 1 206 2 151 9 279 2 153 3 155 1 285 1 156 1 235 1 110 1 192 1 
93 4 165 1 336 1 193 1 141 1 337 1 171 1 245 5 19 2 340 9 47 1 50 7 52 1 250 1 206 2 151 9 279 2 153 3 155 1 285 1 156 1 235 1 110 1 192 1 
30 1 257 1 259 1 
257 1 260 1 272 2 
0 2 134 2 143 2 307 1 113 2 162 2 331 1 184 2 
0 2 64 1 134 2 18 1 307 1 113 3 140 1 270 2 114 1 310 1 7 1 9 1 172 1 143 3 76 1 365 1 120 2 54 1 149 1 298 1 209 1 278 1 230 1 58 1 184 2 126 1 86 2 352 1 256 1 87 2 31 2 162 2 163 1 331 1 378 1 214 1 335 1 
0 1 277 1 134 1 21 1 208 1 143 1 113 1 162 1 331 1 184 1 
205 1 17 1 228 1 113 1 184 1 361 1 257 1 21 1 143 1 259 1 221 1 312 1 289 1 62 1 
0 1 205 1 134 1 17 1 228 2 113 1 184 1 257 1 21 1 143 1 259 1 312 2 162 1 289 1 62 1 
305 1 137 1 293 1 312 1 228 1 
305 1 257 1 137 1 259 1 138 1 312 2 228 2 261 1 
305 1 312 1 228 1 
0 1 277 1 134 1 208 1 137 1 228 1 113 1 184 1 21 1 143 1 312 1 162 1 331 1 247 1 
257 1 
305 1 297 1 257 1 137 1 259 1 138 1 312 2 228 2 
178 2 305 2 94 1 136 1 137 2 138 1 228 5 349 1 231 1 29 2 322 1 375 1 257 1 23 1 186 1 274 1 259 1 312 5 264 2 
30 1 307 1 
0 1 134 1 113 2 307 2 195 1 184 2 143 2 330 1 162 1 
269 1 252 1 10 1 
54 1 298 1 209 1 18 1 307 1 113 1 270 1 114 1 126 1 310 1 7 1 31 1 9 1 143 1 364 1 120 1 
0 1 134 1 54 1 298 1 209 1 18 1 269 1 113 2 270 1 114 1 301 1 184 1 126 1 310 1 7 1 9 1 31 1 143 2 88 1 120 1 
0 4 134 4 268 1 113 5 307 1 195 1 301 1 184 5 143 5 88 2 221 1 160 1 162 1 223 1 
0 2 277 1 134 2 21 1 143 2 347 1 113 2 184 2 
0 3 134 3 143 3 88 1 307 1 113 3 162 1 184 3 
0 1 277 1 134 1 21 1 143 1 113 1 184 1 
0 1 134 1 21 1 143 1 330 1 113 1 162 1 195 1 184 1 
63 1 0 3 64 1 134 3 17 1 18 1 307 1 114 1 139 1 113 4 270 1 195 1 310 1 7 1 9 1 21 1 172 1 143 4 312 1 76 1 365 1 120 1 205 1 54 1 149 1 298 1 209 1 228 1 58 1 301 1 184 3 126 1 86 1 352 1 87 2 31 1 88 1 162 2 289 1 163 1 62 1 331 1 378 1 335 1 
0 1 134 1 143 2 88 1 221 1 307 1 113 2 223 1 184 2 
0 3 205 1 134 3 369 1 17 1 228 1 113 3 139 1 195 1 301 1 184 3 257 1 21 1 143 3 88 2 312 1 162 1 289 1 62 1 
0 2 134 2 269 1 252 1 113 2 195 1 184 2 143 2 88 1 162 1 
54 1 298 1 209 1 18 1 307 1 113 1 270 1 114 1 310 1 126 1 7 1 31 1 9 1 143 1 120 1 
54 1 298 1 209 1 18 1 307 1 113 1 270 1 126 1 115 1 7 1 31 1 9 1 143 1 236 1 120 1 
368 1 64 1 227 1 278 2 269 2 252 2 168 1 58 1 170 1 185 1 86 4 352 1 32 1 87 2 363 1 234 1 146 1 76 1 175 1 10 2 365 1 378 1 335 2 248 1 
0 1 134 1 21 1 143 1 347 1 113 1 62 1 184 1 
15 1 306 1 
15 1 306 1 
103 1 377 1 
103 1 377 1 
103 1 377 1 
15 1 306 1 34 1 
15 1 306 1 34 1 
15 1 103 1 306 1 377 1 
15 1 306 1 303 1 
15 1 306 1 34 1 
15 1 306 1 191 1 
15 1 306 1 191 1 
15 1 306 1 191 1 
0 2 134 2 356 1 95 1 306 1 307 1 113 2 359 1 143 2 312 1 24 1 74 1 246 1 51 1 207 1 105 1 348 1 228 1 184 2 303 1 323 1 284 1 15 1 327 1 
355 1 207 2 356 2 306 2 105 1 96 1 228 2 281 1 70 1 323 2 15 2 284 2 257 1 327 3 158 1 343 1 354 2 312 2 174 1 
52 1 165 1 110 1 
52 1 110 1 107 1 
52 3 165 2 142 1 100 1 107 1 254 1 
52 2 165 1 142 1 99 1 107 1 254 1 
52 2 165 1 142 2 107 1 254 1 
305 1 95 1 137 4 138 1 168 1 243 2 272 3 102 1 312 5 294 2 74 1 178 1 124 1 81 1 348 1 228 5 231 3 29 1 185 1 322 2 59 2 325 1 32 1 257 2 186 1 109 1 234 1 259 1 130 1 260 1 132 1 264 1 
0 1 305 1 134 1 66 1 137 2 68 1 113 1 21 1 143 1 293 1 312 2 247 1 277 1 12 1 208 1 228 2 184 1 257 1 259 1 162 1 331 1 
137 2 168 1 243 1 272 4 274 1 312 3 294 2 74 1 178 1 124 1 81 1 228 3 231 3 29 1 185 1 322 2 59 2 325 1 257 3 32 1 109 1 234 1 259 1 130 1 260 2 264 1 
137 3 168 2 243 2 272 7 274 1 312 4 294 4 74 2 177 1 275 1 178 1 124 1 81 1 228 4 82 1 231 5 29 1 185 2 322 4 59 4 325 1 257 4 32 2 109 1 234 2 259 1 130 2 260 3 264 1 
30 1 251 1 126 1 
379 1 126 1 
33 1 
54 1 9 1 126 1 
216 1 126 1 
9 1 126 1 
54 1 9 1 251 2 27 1 313 1 126 3 
290 1 91 2 278 4 152 1 168 1 83 1 185 1 84 1 86 7 45 1 108 1 363 3 342 1 188 1 146 2 314 1 335 3 
290 1 91 2 278 4 152 1 168 1 83 1 185 1 84 1 86 7 45 1 108 1 363 3 342 1 188 1 146 2 314 1 335 3 
290 1 91 2 278 4 152 1 168 1 83 1 185 1 84 1 219 1 86 7 108 1 45 1 363 3 342 1 188 1 146 2 314 1 335 3 
91 3 290 5 64 1 168 4 242 4 45 2 342 1 363 10 76 1 146 5 365 1 314 1 276 1 26 1 249 1 152 1 278 16 83 2 229 1 300 3 253 1 185 4 84 2 86 31 108 1 326 1 87 2 32 3 234 3 188 2 130 3 333 1 378 1 335 15 
91 2 290 1 64 2 168 1 45 1 363 4 76 2 146 3 365 2 314 1 278 5 152 1 106 1 253 1 83 1 185 1 84 1 86 9 108 1 87 4 211 1 188 1 378 2 335 4 
165 1 336 1 270 1 217 1 69 1 100 1 245 1 273 1 292 1 7 1 73 1 340 2 8 1 47 1 75 1 50 1 120 1 11 1 52 2 250 1 206 1 151 2 209 1 279 1 107 1 351 1 60 1 31 1 235 1 110 1 
165 1 336 1 270 1 217 1 69 1 100 1 360 1 245 1 292 1 72 1 7 1 73 1 340 3 47 1 75 1 50 2 120 1 11 1 52 2 250 1 206 1 151 3 209 1 279 1 107 1 351 1 60 1 233 1 31 1 110 1 
165 1 336 1 270 1 217 1 69 1 100 1 360 1 245 1 72 1 7 1 73 1 340 2 47 1 75 1 50 2 120 1 11 1 52 2 250 1 151 2 209 1 107 1 351 1 31 1 110 1 
18 1 336 2 270 1 7 1 73 2 340 1 9 1 48 1 204 1 120 1 11 2 344 1 148 1 206 1 151 1 209 1 279 1 154 1 302 1 126 1 351 2 233 1 31 1 
52 2 206 1 165 1 151 1 209 1 336 1 279 1 217 1 270 1 69 1 100 1 107 1 292 1 60 1 351 1 72 1 7 1 8 1 340 1 31 1 73 1 235 1 75 1 110 1 120 1 11 1 
271 1 
240 1 37 1 138 3 194 1 198 2 41 1 338 1 7 1 9 1 46 2 143 1 296 1 295 2 344 1 345 1 148 1 205 1 209 1 299 1 157 1 257 2 259 1 16 1 260 2 62 1 264 1 267 2 305 6 17 1 18 2 270 2 113 1 272 2 361 1 71 1 21 1 312 5 221 1 120 2 121 2 178 1 81 1 228 5 320 2 231 2 29 1 184 1 322 2 126 1 85 2 31 2 127 4 186 1 128 1 289 1 
305 2 240 1 17 1 37 1 138 1 113 1 41 1 198 1 338 1 361 1 21 1 143 1 221 1 312 3 205 1 297 1 228 3 184 1 127 2 16 1 289 1 62 1 
305 1 240 1 17 1 37 1 138 1 113 1 41 1 338 1 361 1 21 1 143 1 221 1 312 3 205 1 297 1 228 3 184 1 85 1 127 3 257 1 16 1 259 1 289 1 62 1 
305 2 240 1 17 1 37 1 138 1 113 1 41 1 198 1 338 1 361 1 21 1 143 1 221 1 312 3 295 1 205 1 297 1 228 3 184 1 85 1 127 3 257 1 16 1 259 1 289 1 62 1 
240 1 37 1 138 3 198 4 41 1 97 1 338 1 143 1 46 2 295 4 205 1 345 1 297 1 56 1 257 5 16 1 259 5 260 2 62 1 264 1 267 2 305 7 17 1 113 1 309 1 361 1 21 1 312 5 221 1 121 2 178 1 228 5 231 1 320 2 184 1 29 1 322 1 85 4 286 1 127 6 186 1 128 1 129 1 289 1 
240 1 37 1 138 2 41 1 198 2 338 1 143 1 46 2 295 2 296 1 205 1 345 1 257 2 16 1 259 1 260 2 62 1 264 1 267 2 305 4 17 1 113 1 272 2 361 1 21 1 221 1 312 4 121 2 178 1 228 4 231 1 320 2 184 1 29 1 322 1 85 2 127 4 186 1 128 1 289 1 
267 2 305 4 240 1 17 1 37 1 138 2 113 1 198 2 41 1 97 1 338 1 361 1 21 1 46 2 143 1 221 1 312 4 295 2 121 2 345 1 205 1 178 1 228 4 320 2 231 1 184 1 29 1 322 1 85 2 286 1 257 1 127 4 186 1 259 1 128 1 16 1 129 1 260 2 289 1 62 1 264 1 
267 2 305 4 240 1 17 1 37 1 138 2 113 1 198 2 41 1 97 1 338 1 361 1 21 1 46 2 143 1 221 1 312 4 295 2 121 2 345 1 205 1 178 1 228 4 320 2 231 1 184 1 29 1 322 1 85 2 286 1 257 1 127 4 186 1 259 1 128 1 16 1 129 1 260 2 289 1 62 1 264 1 
267 1 240 1 17 1 37 1 113 1 41 1 338 1 361 1 21 1 20 1 46 1 143 1 221 1 312 2 205 1 345 1 228 2 184 1 127 2 16 1 129 1 289 1 62 1 
267 2 305 5 240 1 17 1 37 1 138 2 113 1 41 1 198 3 97 1 309 1 338 1 361 1 21 1 46 2 143 1 221 1 312 4 295 3 121 2 345 1 205 1 178 1 228 4 320 2 231 1 29 1 184 1 322 1 85 3 286 1 257 1 127 5 186 1 259 1 128 1 16 1 129 1 260 2 289 1 62 1 264 1 
267 2 305 5 240 1 17 1 37 1 138 2 113 1 41 1 198 3 97 1 309 1 338 1 361 1 21 1 46 2 143 1 221 1 312 4 295 3 121 2 345 1 205 1 178 1 228 4 320 2 231 1 29 1 184 1 322 1 85 3 286 1 257 1 127 5 186 1 259 1 128 1 16 1 129 1 260 2 289 1 62 1 264 1 
267 1 305 1 240 1 17 1 37 1 138 1 113 1 196 1 41 1 272 1 338 1 361 1 21 1 46 1 143 1 312 3 221 1 296 1 345 1 205 1 178 1 228 3 231 1 321 1 29 1 184 1 322 1 127 2 186 1 16 1 289 1 62 1 213 1 264 1 
91 1 64 1 269 1 307 2 168 1 170 1 363 2 76 1 146 2 365 1 10 1 314 1 152 1 278 3 252 1 83 1 58 1 185 1 30 1 86 6 108 1 352 1 87 2 188 1 378 1 335 3 
290 1 64 2 269 11 307 1 168 2 242 3 101 1 362 1 363 2 146 1 76 2 365 2 10 11 26 1 316 1 278 8 318 1 252 4 230 1 300 3 229 1 58 1 185 1 86 14 352 2 288 1 87 4 32 2 234 1 130 2 163 1 378 2 335 6 
0 1 134 1 64 1 18 1 307 1 114 1 270 1 113 2 357 1 310 1 101 1 7 1 9 1 143 2 117 1 76 1 364 1 365 1 120 1 54 1 298 1 346 1 209 1 278 1 252 1 230 1 58 1 301 1 184 1 126 1 86 2 352 1 31 1 87 2 88 1 163 1 378 1 335 1 
91 1 0 1 290 4 134 1 42 2 101 1 7 2 9 2 143 3 146 4 10 7 149 2 54 2 55 2 298 2 209 2 152 1 252 7 301 1 58 3 108 1 352 3 163 1 64 3 18 1 269 7 307 2 270 3 113 3 114 2 168 3 310 2 72 1 220 2 363 8 76 3 365 3 314 1 120 3 179 1 278 10 125 2 83 1 230 1 184 1 185 3 126 2 86 20 31 3 87 6 32 2 88 1 234 2 188 1 89 1 189 1 130 2 378 3 335 10 
0 1 134 1 64 2 241 1 18 2 113 1 270 7 170 1 273 1 44 1 72 1 7 2 9 2 143 1 76 2 365 2 120 8 367 1 344 1 148 1 78 1 209 2 278 1 371 1 183 1 230 1 58 2 184 1 126 3 86 2 352 2 31 8 87 4 88 1 187 1 163 1 378 2 214 2 335 1 
0 1 64 1 134 1 269 1 113 1 195 1 168 1 101 1 143 1 363 1 146 1 76 1 10 1 365 1 278 1 280 1 252 1 58 1 184 1 185 1 86 3 352 1 87 2 32 1 234 1 130 1 162 1 378 1 335 2 
290 1 64 1 278 2 269 1 252 1 168 1 58 1 170 1 86 2 352 1 87 2 32 1 363 1 76 1 10 1 365 1 175 1 378 1 
64 1 227 1 269 1 252 1 58 1 170 1 185 1 86 2 352 1 87 2 363 1 234 1 146 1 76 1 10 1 365 1 378 1 335 2 
290 1 64 1 269 2 168 1 170 1 363 2 76 1 146 1 365 1 10 2 278 2 252 2 58 1 185 1 86 4 352 1 32 1 87 2 234 1 130 1 378 1 335 2 
290 1 64 1 278 2 269 1 252 1 168 1 58 1 86 2 352 1 87 2 32 1 363 1 187 1 76 1 10 1 365 1 175 1 378 1 
64 1 227 1 269 1 252 1 58 1 185 1 86 2 352 1 87 2 363 1 187 1 234 1 146 1 76 1 10 1 365 1 378 1 335 2 
290 1 64 1 269 2 168 1 363 2 76 1 146 1 365 1 10 2 278 2 252 2 58 1 185 1 86 4 352 1 32 1 87 2 187 1 234 1 130 1 378 1 335 2 
290 1 64 1 269 2 168 1 363 2 76 1 146 1 365 1 10 2 278 2 252 2 58 1 185 1 86 4 352 1 32 1 87 2 234 1 130 1 378 1 335 2 
64 1 18 1 307 1 114 1 270 1 113 1 310 1 7 1 9 1 143 1 76 1 365 1 120 1 54 1 149 1 298 1 209 1 278 1 230 1 58 1 126 1 86 2 352 1 31 1 87 2 163 1 378 1 335 1 
64 1 18 1 307 1 270 1 113 1 115 1 7 1 9 1 143 1 76 1 365 1 120 1 54 1 298 1 209 1 278 1 319 1 230 1 58 1 126 1 86 2 352 1 31 1 87 2 236 1 163 1 378 1 335 1 
290 1 64 1 269 2 168 1 101 1 363 2 76 1 146 1 365 1 10 2 278 2 252 2 58 1 185 1 86 4 352 1 32 1 87 2 234 1 130 1 378 1 335 2 
290 1 64 1 269 2 114 1 270 1 113 1 168 1 310 1 273 1 7 1 9 1 143 1 363 2 146 1 76 1 10 2 365 1 120 1 54 1 149 1 298 1 55 1 209 1 278 2 252 2 58 1 185 1 126 1 86 4 352 1 32 1 31 1 87 2 234 1 130 1 378 1 335 2 
290 1 0 1 64 1 134 1 269 1 113 1 195 1 168 1 101 1 143 1 363 1 76 1 365 1 10 1 226 1 278 2 252 1 58 1 184 1 185 1 86 3 352 1 87 2 32 1 234 1 130 1 162 1 378 1 335 1 
290 3 35 1 64 2 135 1 168 3 242 2 202 1 363 6 146 3 76 2 365 2 26 1 278 9 182 2 57 1 300 1 229 1 350 1 185 3 86 19 232 1 87 4 32 3 234 3 211 1 131 2 130 3 133 1 378 2 335 10 
290 2 35 1 64 3 135 1 39 1 40 1 168 3 242 2 363 4 146 2 76 3 224 1 365 3 119 1 366 1 26 2 278 14 182 1 57 1 253 2 300 2 350 2 185 2 283 1 86 26 232 2 87 6 32 3 234 2 211 1 131 4 130 3 378 3 335 12 
290 4 91 1 35 1 135 1 40 1 39 1 242 4 197 1 146 4 152 1 57 1 300 3 253 1 350 1 108 1 211 1 64 3 168 5 363 8 76 3 365 3 224 1 314 1 119 1 366 1 26 3 278 20 182 1 229 1 83 1 185 5 283 1 86 41 232 2 32 4 87 6 234 4 188 1 130 4 131 4 378 3 133 1 335 21 
91 1 290 3 35 1 64 4 135 1 39 1 40 1 168 5 197 1 242 4 363 7 146 4 76 4 224 1 365 4 314 1 119 1 366 1 26 3 152 1 278 20 182 1 57 1 83 1 253 2 300 3 229 1 350 1 283 1 185 4 86 38 232 2 108 1 87 8 32 4 234 3 188 1 211 1 131 4 130 4 133 1 378 4 335 18 
91 1 290 7 35 1 64 2 135 1 39 1 40 1 168 8 242 4 362 2 363 14 146 7 76 2 224 1 365 2 314 1 119 1 366 1 26 2 152 1 278 27 182 1 57 1 83 1 253 1 300 4 229 2 350 1 283 1 185 8 86 52 232 1 108 1 87 4 32 7 234 7 188 1 211 1 131 4 130 7 378 2 335 25 
284 1 15 1 355 1 207 1 356 1 306 1 174 1 70 1 244 1 323 1 
24 1 303 1 
199 1 284 1 15 1 207 1 173 1 356 1 306 1 118 1 323 1 
258 1 34 1 
77 1 191 1 90 1 
355 1 207 1 356 1 105 1 306 1 228 1 281 1 70 1 323 1 15 1 284 1 257 1 327 2 158 1 343 1 354 1 312 1 174 1 
355 1 207 1 356 1 105 1 306 1 228 1 281 1 70 1 323 1 15 1 284 1 257 1 327 2 158 1 343 1 354 1 312 1 174 1 
355 1 207 1 356 1 105 1 306 1 228 1 281 1 70 1 323 1 15 1 284 1 257 1 327 2 158 1 343 1 354 1 312 1 174 1 
77 1 258 1 34 1 
77 1 258 1 34 1 
191 1 90 1 
77 1 191 1 90 1 
246 1 359 1 
0 2 134 2 356 1 137 1 95 1 306 1 307 1 113 2 359 1 143 2 341 1 343 1 312 1 24 1 74 1 246 1 51 1 207 1 348 1 228 1 184 2 303 1 323 1 284 1 15 1 327 1 354 1 
64 1 241 1 166 1 113 2 270 2 101 1 7 1 9 1 143 2 76 1 365 1 225 1 120 2 209 1 278 1 371 1 230 1 58 1 184 2 126 1 86 2 352 1 31 2 87 2 212 1 163 1 262 1 378 1 215 1 214 2 335 1 
52 2 165 1 209 1 270 2 217 1 69 1 100 1 107 1 374 1 273 1 292 1 72 1 7 1 31 2 328 1 110 1 176 1 120 2 11 1 
52 2 165 1 180 1 209 1 270 1 217 1 69 1 100 1 107 1 374 1 292 1 72 1 7 1 31 1 110 1 120 1 11 1 
148 1 209 1 18 1 270 1 154 1 358 1 126 1 7 1 9 1 31 1 328 1 120 1 11 1 344 1 
52 2 165 1 209 1 270 1 217 1 69 1 100 1 107 1 374 1 292 1 72 1 7 1 31 1 328 1 110 1 176 1 120 1 11 1 
324 1 
30 1 375 1 257 1 23 1 259 1 231 1 322 1 
305 1 138 1 272 1 312 1 121 1 178 1 228 1 320 1 231 1 29 1 322 1 257 2 186 1 128 1 259 1 260 1 264 1 
238 2 138 3 194 1 43 1 42 2 7 4 9 3 294 6 203 2 54 3 150 2 209 3 251 2 59 6 255 2 257 8 259 2 260 6 61 2 264 4 305 5 216 2 17 2 18 1 270 3 168 2 272 12 273 1 311 2 23 1 312 5 222 2 313 1 25 1 120 3 178 4 315 1 81 2 228 5 231 9 29 4 282 2 126 10 322 8 185 2 375 1 287 1 31 3 32 2 329 1 186 4 234 2 130 2 379 3 
305 1 238 2 39 1 40 1 138 1 194 1 168 2 242 1 272 6 312 1 294 5 119 1 366 1 53 1 26 1 178 2 81 1 228 1 300 1 231 8 14 1 29 2 282 1 283 1 322 5 185 2 59 5 257 5 32 2 186 2 234 2 259 2 130 2 260 3 264 2 
0 1 238 2 134 1 113 1 168 2 21 1 143 1 312 1 314 1 247 1 277 1 178 1 208 1 228 1 83 1 231 2 29 1 184 1 282 1 322 2 185 1 286 1 186 1 188 1 159 1 162 1 331 1 264 1 
178 1 231 1 29 1 322 1 375 1 257 1 186 1 23 1 259 1 264 1 
238 2 168 2 231 5 282 1 42 1 322 5 272 10 185 2 59 5 32 2 257 5 234 2 294 5 130 2 260 5 
305 1 257 1 259 1 312 1 138 1 228 1 
305 4 18 2 138 2 270 4 194 2 308 1 169 1 71 1 7 1 9 1 274 1 312 3 120 4 344 1 148 1 178 2 209 1 299 1 81 2 228 3 231 2 29 2 126 1 322 2 287 1 31 4 329 2 186 1 264 2 
0 2 64 1 134 2 18 1 307 1 270 1 113 3 114 1 310 1 7 1 172 1 9 1 143 3 76 1 365 1 120 1 149 1 54 1 298 1 209 1 58 1 184 2 126 1 86 1 352 1 87 2 31 1 162 2 163 1 331 1 378 1 335 1 
91 1 178 1 81 1 194 1 231 1 29 1 272 4 322 2 59 2 257 4 186 1 259 2 294 2 260 2 264 1 
284 1 207 1 2 1 
284 1 207 1 2 1 
237 1 284 1 207 1 174 1 246 1 
284 1 207 1 2 1 
284 1 207 1 28 1 
284 1 207 1 28 1 
284 1 207 1 28 1 
284 1 207 1 
15 1 306 1 
91 1 290 1 64 2 278 4 152 1 168 1 253 1 83 1 185 1 86 8 108 1 87 4 363 3 188 1 146 2 76 2 365 2 314 1 378 2 335 4 
91 1 152 1 278 3 83 1 168 1 185 1 30 1 86 6 108 1 363 2 188 1 146 2 314 1 335 3 
290 1 64 1 278 2 210 1 168 1 185 1 86 4 87 2 32 1 234 1 363 2 146 1 76 1 130 1 365 1 378 1 335 2 
290 1 26 1 278 3 300 1 229 1 168 1 242 2 185 1 86 7 32 1 234 1 363 2 146 1 130 1 335 4 
91 1 290 4 64 2 168 3 242 2 4 1 362 1 363 9 146 5 76 2 365 2 314 1 152 1 278 11 83 2 229 1 300 2 253 2 185 3 86 23 108 1 32 2 288 1 87 4 234 2 188 2 130 2 378 2 335 12 
86 1 242 1 335 1 
86 1 278 1 300 1 
290 1 64 1 278 3 210 1 168 1 42 1 185 1 86 6 87 2 32 1 363 3 234 1 76 1 130 1 146 2 365 1 378 1 335 3 
290 1 64 1 40 1 39 1 168 2 242 1 363 2 76 1 146 1 365 1 119 1 366 1 26 1 278 6 300 1 283 1 185 2 86 12 87 2 32 2 234 2 211 1 130 2 378 1 335 6 
290 1 278 3 168 1 83 1 185 1 86 6 363 2 188 1 146 1 314 1 335 3 
290 1 64 1 278 1 152 1 83 1 253 1 4 1 86 3 108 1 87 2 363 2 188 1 146 1 76 1 365 1 378 1 335 2 
290 2 64 1 278 5 83 2 168 2 185 2 86 10 87 2 363 5 211 1 159 1 188 2 76 1 146 3 365 1 314 1 378 1 335 5 
290 1 64 1 278 2 168 1 86 2 87 2 32 1 363 1 211 1 76 1 365 1 378 1 
290 1 64 1 278 2 168 1 185 1 86 4 87 2 32 1 234 1 363 2 211 1 146 1 76 1 130 1 365 1 378 1 335 2 
290 1 64 3 278 1 253 1 83 1 4 1 86 3 87 6 363 2 211 1 188 1 76 3 146 1 365 3 133 1 378 3 335 2 
91 1 290 5 64 5 168 5 4 1 242 4 363 12 76 5 146 7 365 5 314 2 26 1 249 1 152 1 278 16 83 3 253 2 210 1 300 3 229 1 185 5 86 34 108 1 326 1 87 10 32 3 234 3 188 3 211 1 130 3 333 1 133 1 378 5 335 18 
91 1 64 1 168 1 242 1 363 2 76 1 146 2 365 1 314 1 26 1 278 4 152 1 300 1 83 1 185 1 283 1 86 8 108 1 87 2 211 1 188 1 378 1 335 4 
91 1 290 1 64 2 168 2 242 2 363 3 146 2 76 2 365 2 314 1 26 1 152 1 278 6 83 1 210 1 300 1 229 1 185 1 283 1 86 11 108 1 87 4 32 1 188 1 211 1 130 1 378 2 335 5 
91 1 290 1 64 3 40 1 39 1 168 3 242 1 363 4 76 3 146 3 365 3 314 1 119 1 366 1 26 1 152 1 278 9 83 1 210 1 300 1 253 1 283 1 185 3 86 19 108 1 87 6 32 2 234 2 188 1 211 1 130 2 378 3 335 10 
91 1 290 2 64 3 40 1 39 1 168 3 242 1 363 5 76 3 146 3 365 3 314 1 119 1 366 1 26 1 152 1 278 10 83 1 210 1 253 1 300 1 283 1 185 2 86 17 108 1 87 6 32 2 234 1 188 1 211 1 130 2 378 3 335 7 
91 1 64 1 168 1 242 1 363 2 76 1 146 2 365 1 314 1 26 1 278 4 152 1 300 1 83 1 185 1 283 1 86 8 108 1 87 2 211 1 188 1 378 1 335 4 
290 1 64 1 40 1 39 1 168 2 242 1 363 2 76 1 146 1 365 1 119 1 366 1 26 1 278 6 300 1 283 1 185 2 86 12 87 2 32 2 234 2 211 1 130 2 378 1 335 6 
91 1 290 2 64 4 39 1 40 1 168 3 242 1 363 5 76 4 146 3 365 4 314 1 119 1 366 1 26 1 152 1 278 10 83 1 210 1 300 1 253 2 283 1 185 2 86 18 108 1 87 8 32 2 234 1 188 1 211 1 130 2 378 4 335 8 
290 3 64 4 39 1 40 1 168 3 242 1 363 6 76 4 146 3 365 4 119 1 366 1 26 1 278 9 300 1 253 2 283 1 185 2 86 16 87 8 32 3 234 2 211 1 130 3 378 4 133 1 335 7 
290 3 152 1 278 3 83 3 168 1 185 1 86 7 108 2 363 6 188 3 146 3 314 1 335 4 
91 1 290 1 64 4 39 1 40 1 168 3 242 1 363 4 76 4 146 3 365 4 314 1 119 1 366 1 26 1 152 1 278 10 83 1 300 1 253 2 283 1 185 2 86 18 108 1 87 8 32 2 234 1 188 1 211 1 130 2 378 4 133 1 335 8 
80 1 143 1 221 1 307 1 113 1 223 1 184 1 
122 1 239 1 80 1 307 1 113 1 3 1 184 1 143 1 221 1 190 1 223 1 266 1 
148 1 30 1 7 1 9 1 31 1 209 1 18 1 270 1 120 1 126 1 344 1 
0 1 134 1 54 1 298 1 209 1 18 1 307 1 113 2 270 1 184 1 126 1 310 1 7 1 9 1 31 1 143 2 88 1 120 1 
0 1 134 2 216 1 307 1 270 1 113 2 310 1 7 1 9 2 21 1 143 2 203 1 120 1 54 2 298 1 209 1 184 2 126 3 31 1 329 1 88 1 289 1 62 1 
0 1 134 2 216 1 307 1 270 2 113 2 115 1 7 1 9 2 21 1 143 2 203 1 120 2 54 2 298 1 209 1 373 1 184 2 126 3 31 2 329 1 88 1 289 1 62 1 
305 1 216 1 17 1 18 1 270 3 98 1 7 1 9 1 312 2 203 1 120 3 79 1 54 1 209 1 251 1 228 2 373 1 126 4 31 3 257 1 329 1 259 1 379 1 
216 1 305 1 54 1 17 1 209 1 18 1 251 1 228 2 270 3 373 1 126 4 7 1 257 1 9 1 31 3 329 1 259 1 312 2 222 1 203 1 120 3 379 1 
7 1 31 1 209 1 270 1 120 1 367 1 
78 1 54 1 36 1 209 2 18 2 270 6 371 1 183 1 126 3 273 1 44 1 72 1 200 1 7 3 31 7 9 2 313 1 214 1 120 7 367 1 265 1 
91 1 0 1 134 1 64 2 166 1 269 1 307 2 113 2 270 1 114 1 168 1 310 1 101 1 273 1 7 1 9 1 220 1 143 2 363 2 146 2 76 2 10 1 365 2 314 1 120 1 54 1 149 1 298 1 55 1 209 1 278 3 152 1 252 1 83 1 58 2 184 1 185 1 126 1 86 6 108 1 352 2 87 4 31 1 88 1 188 1 378 2 335 3 
305 2 17 1 137 1 18 1 138 1 270 1 311 1 23 1 312 3 222 1 120 1 178 2 150 1 251 1 228 3 231 1 29 2 322 1 126 2 375 1 287 1 257 1 31 1 186 2 259 1 61 1 264 2 379 1 
54 1 209 1 251 1 270 2 43 1 126 2 273 1 7 2 31 2 9 1 313 1 120 2 367 1 
148 1 209 1 18 1 270 4 373 1 126 1 273 1 7 1 22 1 31 4 9 1 120 4 344 1 
111 1 54 1 209 1 270 2 126 1 200 1 7 2 31 2 9 1 329 1 189 1 164 1 120 2 265 1 
52 1 7 1 31 1 209 1 18 1 270 1 110 1 69 1 107 1 120 1 
209 1 270 2 371 1 126 1 273 1 72 1 7 1 31 2 9 1 225 1 120 2 
148 1 78 1 209 2 18 1 270 4 371 1 126 3 273 1 44 1 7 2 22 1 31 5 9 2 329 1 120 5 344 1 
148 1 78 1 209 2 18 1 67 1 270 4 371 1 126 3 273 1 7 2 22 1 31 5 9 2 329 1 120 5 344 1 
0 1 134 1 54 1 298 1 209 1 18 1 307 1 113 2 270 1 184 1 126 1 115 1 7 1 9 1 31 1 143 2 88 1 120 1 
54 1 36 1 209 1 270 1 126 1 200 1 7 2 31 1 9 1 329 1 313 1 120 1 265 1 
1 1 304 1 339 1 104 1 307 1 
304 1 1 2 205 1 92 1 17 1 137 1 317 1 228 2 307 1 139 1 339 2 257 1 21 1 259 1 312 2 104 2 147 1 289 1 62 1 
304 1 1 1 143 1 104 1 113 1 212 1 184 1 262 1 215 1 
304 1 92 1 317 1 
245 1 30 1 250 1 47 1 
245 1 250 1 206 1 340 1 151 1 279 1 47 1 
351 1 340 1 336 1 
206 1 250 1 123 1 151 3 279 1 245 1 6 1 340 3 353 2 235 1 144 1 47 1 
245 1 19 1 250 1 206 1 340 2 151 2 279 1 47 1 50 1 
52 1 206 1 93 1 165 1 151 1 279 1 245 1 156 1 340 1 235 1 110 1 
245 1 206 1 340 1 151 1 279 1 235 1 47 1 
250 1 206 1 340 1 151 1 279 1 235 1 47 2 
245 1 206 2 340 2 151 2 279 2 235 1 47 1 145 1 372 1 167 1 
250 1 206 1 93 1 151 3 279 1 153 1 337 1 245 2 340 3 235 1 47 1 50 2 192 1 
52 2 250 1 206 1 165 1 151 2 279 1 107 1 100 1 245 1 340 2 235 1 47 1 161 1 110 1 50 1 
250 1 206 2 93 1 151 4 279 2 153 1 141 1 245 2 19 1 340 4 235 1 47 1 50 2 
245 1 250 1 206 1 340 1 151 1 279 1 235 1 47 1 
250 2 206 1 93 1 123 1 151 4 279 1 153 1 245 3 353 1 340 4 116 1 144 1 47 2 50 2 
245 1 250 1 206 1 340 2 151 2 112 1 279 1 235 1 47 1 50 1 332 1 171 1 
206 1 250 1 123 2 151 3 279 1 245 1 340 3 353 2 235 1 144 1 47 1 263 1 
245 2 5 1 376 1 370 2 
206 1 340 1 151 1 181 1 279 1 235 1 
245 1 250 1 206 1 340 2 151 2 279 1 235 1 47 1 50 1 337 1 
334 1 
245 1 250 1 206 1 340 1 151 1 279 1 235 1 47 1 
245 1 250 1 206 1 353 1 340 3 151 3 279 1 235 1 47 1 50 1 337 1 
245 1 93 1 116 1 153 1 
245 1 47 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException 339 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 174 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 174 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 118 (0,297) (0,297) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 118 (0,297) (0,297) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 118 (0,297) (0,297) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 118 (0,297) (0,297) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 57 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 118 (13,225) (13,225) 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException (86,296) 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 270 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (128,367) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (86,296) 131 307 (130,178) (130,178) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 632 | if (x) -> if (!x)
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2771 | return null
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3437 | = null
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money; | RETURN | 2770 | return null
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | ASSIGN | 1327 | = null
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1088 | = null
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | CONDITION | 739 | if (x) -> if (!x)
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
339 1 205 1 
205 1 174 1 
205 1 174 1 
0 1 118 1 205 1 297 1 
0 1 118 1 205 1 297 1 
0 1 118 1 205 1 297 1 
0 1 118 1 205 1 297 1 
205 1 57 1 
44 1 225 1 118 1 205 1 13 1 206 1 
141 1 122 1 17 1 146 1 298 1 183 1 116 1 59 1 119 1 172 1 27 1 107 1 247 1 336 1 
355 1 
337 1 103 1 59 1 151 1 119 2 355 1 152 1 336 2 
337 1 260 1 273 1 167 2 355 1 123 1 76 2 125 1 359 1 137 1 70 1 103 1 59 2 119 5 62 1 152 2 64 2 336 5 43 1 
337 1 275 1 355 1 
52 1 93 1 341 1 96 1 317 1 229 1 252 1 298 2 135 1 183 2 116 2 231 1 280 1 281 2 140 2 81 2 166 1 141 1 122 2 353 2 303 1 17 2 264 1 169 1 20 1 171 2 333 1 23 1 88 1 289 1 27 2 107 1 246 1 
116 1 141 1 122 1 17 1 146 1 27 1 107 1 298 1 247 1 183 1 
337 1 141 1 133 1 56 1 17 1 355 1 241 1 298 1 329 1 320 1 6 1 119 1 27 1 336 1 
337 1 122 1 141 1 133 1 56 1 17 1 355 1 298 1 329 1 6 1 183 1 116 1 119 2 27 1 336 2 
59 1 233 1 119 1 152 1 336 1 
337 1 103 1 59 1 94 1 119 2 355 1 152 1 336 2 
119 1 152 1 336 1 
355 1 285 2 277 1 
116 2 122 2 341 1 17 2 27 2 107 1 298 2 183 2 
122 1 341 2 17 2 124 1 85 1 298 2 183 1 116 1 27 2 
131 1 86 1 367 1 
52 1 141 1 272 1 353 1 341 1 96 1 135 1 281 1 246 1 140 1 
52 1 15 1 353 1 96 1 17 1 86 1 298 1 135 1 126 1 183 1 116 1 281 1 27 1 140 1 
341 1 275 1 
15 2 122 1 341 1 17 5 85 1 241 1 298 5 321 1 183 4 126 1 116 4 363 1 219 1 27 5 
116 2 141 1 17 2 84 1 146 1 27 2 298 2 183 2 
116 3 122 1 15 1 341 1 17 3 27 3 298 3 183 3 
116 1 141 1 17 1 146 1 27 1 298 1 183 1 
116 1 141 1 122 1 17 1 124 1 27 1 85 1 298 1 183 1 
52 1 93 1 341 1 133 1 56 1 96 1 229 1 252 1 298 3 6 1 135 1 183 3 116 3 280 1 281 1 119 1 140 1 81 2 122 2 15 1 141 1 353 1 303 1 17 3 264 1 85 1 171 1 329 1 126 1 333 1 360 1 88 1 23 1 289 1 244 1 27 3 107 1 336 1 
116 1 15 1 341 1 17 2 27 2 241 1 298 2 321 1 183 1 
122 1 141 1 15 2 133 1 56 1 17 3 355 1 85 1 298 3 329 1 6 1 126 1 183 3 116 3 104 1 119 1 244 1 27 3 336 1 
15 1 122 1 17 2 85 1 298 2 86 1 183 2 116 2 27 2 367 1 
52 1 141 1 353 1 341 1 96 1 135 1 281 1 246 1 140 1 
353 1 239 1 341 1 17 1 31 1 298 1 135 1 308 1 8 1 281 1 60 1 12 1 207 1 153 1 140 1 
81 2 128 1 166 2 131 2 93 1 198 1 295 1 264 1 229 2 296 1 202 1 86 2 171 4 252 1 22 1 280 1 88 1 61 1 289 1 234 1 163 1 28 1 269 1 367 2 
116 1 141 1 56 1 17 1 84 1 27 1 298 1 183 1 
194 1 365 1 352 1 
138 1 14 1 145 1 192 1 365 2 352 2 
365 1 352 1 
365 1 352 1 
145 1 192 1 
145 1 192 1 
145 1 192 1 
227 1 365 1 352 1 
227 1 365 1 352 1 
227 1 365 1 352 1 
236 1 365 1 352 1 
236 1 365 1 352 1 
236 1 365 1 352 1 
194 1 196 1 341 1 180 1 298 2 183 2 116 2 253 1 98 1 161 1 232 1 119 1 301 1 164 1 352 1 17 2 356 1 149 1 71 1 218 1 365 1 27 2 245 1 336 1 
262 1 212 1 95 1 355 1 356 1 253 3 98 2 149 2 346 2 361 1 138 1 119 2 301 2 365 2 164 2 284 1 165 1 352 2 336 2 
332 1 44 2 327 2 206 1 220 1 
332 1 44 1 292 1 
44 1 206 1 292 1 
332 2 44 3 327 1 206 1 220 1 302 1 
332 1 338 1 44 2 327 1 206 1 220 1 
1 1 318 1 277 1 5 1 183 1 59 4 137 3 61 1 234 1 64 1 326 2 141 1 17 1 190 2 146 1 285 3 68 1 22 1 103 1 70 2 152 1 27 1 107 1 247 1 108 1 336 5 337 1 198 1 298 1 76 1 116 1 161 1 119 5 122 1 167 1 47 1 263 2 355 2 125 1 172 1 
1 1 318 1 277 1 5 1 183 1 59 4 137 3 61 1 233 2 234 1 64 1 326 2 141 1 17 1 146 1 285 3 22 1 103 1 70 2 152 3 27 1 107 1 247 1 108 1 336 5 337 1 111 1 198 1 344 1 298 1 76 1 116 1 161 1 119 5 122 1 167 1 263 2 355 2 125 1 172 1 127 2 
337 1 1 1 198 1 298 1 277 1 76 1 5 1 183 1 116 1 59 2 137 3 161 1 61 1 119 3 234 1 62 1 64 1 326 2 141 1 122 1 167 1 47 1 17 1 263 2 355 2 146 1 190 1 285 3 68 1 22 1 70 2 172 1 27 1 107 1 247 1 108 1 336 3 
167 1 47 1 76 1 68 1 119 1 62 1 64 1 336 1 270 1 
208 1 
8 1 275 1 366 1 
8 1 313 1 
8 1 60 1 207 1 
8 1 215 1 
8 1 60 1 
8 3 60 1 92 1 201 1 366 2 207 1 
178 1 166 4 130 1 179 1 295 2 229 3 307 2 171 7 7 1 22 1 102 1 87 1 50 1 255 1 234 1 348 1 257 1 28 3 
178 1 130 1 179 2 226 1 198 3 200 1 295 5 229 15 342 1 252 1 5 3 7 2 280 1 11 4 255 1 61 3 234 4 348 2 257 2 38 1 81 2 210 1 166 16 264 1 307 3 171 31 242 1 147 3 22 4 102 5 87 1 88 1 72 1 28 10 
210 1 81 4 224 1 178 1 130 1 166 5 179 1 295 3 264 2 229 4 307 2 171 9 252 2 7 1 22 1 102 1 117 1 280 2 87 1 88 2 234 1 348 1 257 1 28 4 
166 4 130 1 178 1 179 1 295 2 229 3 307 2 171 7 7 1 22 1 102 1 87 1 255 1 234 1 348 1 257 1 28 3 
166 4 130 1 178 1 179 1 295 2 229 3 307 2 171 7 7 1 22 1 102 1 87 1 255 1 234 1 348 1 257 1 28 3 
53 1 314 1 30 1 114 1 31 1 33 1 181 2 58 1 276 1 135 1 8 1 281 1 60 1 37 1 235 2 237 2 140 1 261 1 239 1 353 1 328 1 271 1 222 2 
353 1 281 1 340 1 205 1 235 1 140 1 
353 1 281 1 205 1 235 1 99 1 140 1 
53 1 340 1 31 1 181 1 276 1 160 1 281 1 254 1 37 1 235 1 206 1 237 1 302 1 140 1 351 1 188 1 44 2 353 1 239 1 328 3 357 1 306 2 100 1 101 1 332 1 150 1 173 1 292 1 222 1 271 3 
340 1 31 1 181 1 160 1 281 1 235 1 206 1 237 1 140 1 351 1 302 1 188 1 44 2 353 1 239 1 328 2 357 1 306 2 100 1 101 1 332 1 150 1 292 1 222 1 271 2 
40 1 
55 1 316 1 133 1 56 1 58 1 277 2 135 2 320 1 6 1 8 1 9 2 137 2 60 1 281 2 323 2 64 1 140 2 239 1 141 1 189 1 17 1 285 2 241 1 329 1 103 3 70 2 25 2 73 1 152 6 27 1 108 1 336 5 337 1 31 1 32 1 294 1 298 1 158 1 76 1 119 5 256 1 162 4 79 1 82 2 261 1 353 2 304 1 167 1 46 1 214 2 354 2 355 2 125 1 310 1 311 2 
133 1 316 1 56 1 294 1 298 1 320 1 6 1 256 1 119 3 162 2 141 1 46 1 17 1 214 1 241 1 329 1 103 1 151 1 73 1 152 2 27 1 336 3 
337 1 133 1 316 1 56 1 294 1 298 1 320 1 6 1 256 1 119 3 162 3 141 1 46 1 17 1 355 1 241 1 329 1 103 1 151 1 25 1 73 1 152 1 27 1 336 3 
337 1 133 1 316 1 56 1 294 1 298 1 320 1 6 1 323 1 256 1 119 3 162 3 141 1 46 1 17 1 214 1 355 1 241 1 329 1 103 1 151 1 25 1 73 1 152 2 27 1 336 3 
56 1 133 1 316 1 277 2 6 1 320 1 137 1 9 2 323 4 64 1 141 1 17 1 329 1 241 1 103 3 70 1 151 1 25 4 73 1 152 7 27 1 336 5 337 5 197 1 32 1 294 1 343 1 35 1 298 1 76 1 159 1 119 5 256 1 162 6 79 1 82 2 167 1 46 1 214 4 354 2 355 5 125 1 311 2 89 1 
56 1 133 1 316 1 277 2 6 1 320 1 137 1 9 2 323 2 64 1 141 1 17 1 285 2 329 1 241 1 70 1 103 2 25 2 73 1 152 4 27 1 336 4 337 1 32 1 294 1 298 1 76 1 119 4 256 1 162 4 79 1 82 2 167 1 304 1 46 1 214 2 354 2 355 2 125 1 311 2 
337 1 197 1 133 1 316 1 56 1 32 1 294 1 343 1 35 1 277 2 298 1 76 1 320 1 6 1 9 2 137 1 323 2 256 1 119 4 162 4 79 1 64 1 82 2 141 1 167 1 46 1 214 2 17 1 354 2 355 1 241 1 329 1 125 1 103 2 70 1 311 2 25 2 73 1 152 4 27 1 336 4 
337 1 197 1 133 1 316 1 56 1 32 1 294 1 343 1 35 1 277 2 298 1 76 1 320 1 6 1 9 2 137 1 323 2 256 1 119 4 162 4 79 1 64 1 82 2 141 1 167 1 46 1 214 2 17 1 354 2 355 1 241 1 329 1 125 1 103 2 70 1 311 2 25 2 73 1 152 4 27 1 336 4 
337 1 197 1 274 1 133 1 316 1 56 1 32 1 294 1 298 1 76 1 320 1 6 1 230 1 9 2 137 1 323 2 256 1 119 4 162 4 64 1 141 1 167 1 46 1 214 2 17 1 19 1 355 1 285 2 241 1 329 1 243 2 125 1 103 2 70 1 311 2 25 2 26 2 73 1 152 4 27 1 336 4 
337 1 197 1 133 1 316 1 56 1 32 1 294 1 35 1 343 1 277 2 298 1 76 1 320 1 6 1 9 2 137 1 323 3 256 1 119 4 162 5 79 1 64 1 82 2 141 1 167 1 46 1 17 1 214 3 354 2 355 1 241 1 329 1 125 1 103 2 70 1 311 2 89 1 25 3 73 1 152 5 27 1 336 4 
337 1 197 1 133 1 316 1 56 1 32 1 294 1 35 1 343 1 277 2 298 1 76 1 320 1 6 1 9 2 137 1 323 3 256 1 119 4 162 5 79 1 64 1 82 2 141 1 167 1 46 1 17 1 214 3 354 2 355 1 241 1 329 1 125 1 103 2 70 1 311 2 89 1 25 3 73 1 152 5 27 1 336 4 
274 1 56 1 133 1 316 1 6 1 320 1 137 1 9 2 323 2 64 1 141 1 17 1 285 2 329 1 241 1 243 2 70 1 103 2 26 2 25 2 73 1 152 4 27 1 336 4 337 1 32 1 294 1 298 1 76 1 119 4 256 1 162 4 167 1 304 1 46 1 214 2 355 1 125 1 311 2 
109 1 93 2 340 1 31 2 58 1 229 1 298 1 252 2 135 2 183 1 116 1 8 3 231 1 281 7 280 2 60 2 99 1 163 1 39 1 140 8 81 4 261 1 15 1 239 2 353 8 65 1 166 1 16 1 17 1 264 2 169 2 171 2 333 1 88 2 312 1 364 1 289 2 27 1 177 1 
131 1 93 1 198 1 295 1 229 2 252 1 298 1 5 1 183 1 116 1 280 1 61 1 234 1 80 1 81 2 122 1 166 1 17 1 264 1 85 1 86 1 67 1 171 3 22 1 88 1 289 1 27 1 28 1 367 1 
81 2 166 2 131 1 93 1 264 1 86 1 171 2 252 1 22 1 102 1 280 1 88 1 61 1 289 1 163 1 28 1 269 1 367 1 
81 2 131 1 93 1 198 1 295 1 264 1 229 2 202 1 86 1 171 2 252 1 280 1 88 1 289 1 234 1 163 1 28 1 367 1 
93 1 131 2 198 1 295 1 229 2 252 1 5 1 280 1 61 1 234 1 163 1 81 2 166 2 264 1 171 4 86 2 22 1 102 1 88 1 289 1 28 2 367 2 
81 2 65 1 166 2 131 1 93 1 264 1 86 1 171 2 252 1 22 1 102 1 280 1 88 1 61 1 289 1 28 1 269 1 367 1 
81 2 65 1 131 1 93 1 198 1 295 1 264 1 229 2 202 1 86 1 171 2 252 1 280 1 88 1 289 1 234 1 28 1 367 1 
93 1 131 2 198 1 295 1 229 2 252 1 5 1 280 1 61 1 234 1 81 2 166 2 65 1 264 1 171 4 86 2 22 1 102 1 88 1 289 1 28 2 367 2 
93 1 131 2 198 1 295 1 229 2 252 1 5 1 280 1 61 1 234 1 81 2 166 2 264 1 171 4 86 2 22 1 102 1 88 1 289 1 28 2 367 2 
52 1 93 1 341 1 96 1 229 1 252 1 135 1 231 1 281 1 280 1 140 1 81 2 166 1 353 1 141 1 303 1 264 1 171 2 333 1 88 1 289 1 246 1 
81 2 141 1 353 1 93 1 341 1 264 1 229 1 171 1 252 1 135 1 216 1 281 1 280 1 333 1 88 1 289 1 246 1 140 1 
93 1 131 2 198 1 295 1 229 2 252 1 5 1 280 1 61 1 234 1 80 1 81 2 166 2 264 1 171 4 86 2 22 1 102 1 88 1 289 1 28 2 367 2 
52 1 93 1 198 1 131 1 96 1 295 1 229 2 252 1 5 1 281 1 280 1 61 1 120 1 234 1 99 1 140 1 81 2 353 1 166 1 303 1 264 1 86 1 171 3 22 1 88 1 289 1 28 1 367 1 
198 1 93 1 131 1 229 1 252 1 298 1 5 1 183 1 116 1 280 1 61 1 234 1 80 1 81 2 122 1 166 2 17 1 264 1 85 1 171 3 86 1 22 1 102 1 88 1 362 1 289 1 27 1 28 1 367 1 
178 1 130 1 179 1 93 1 131 1 341 2 275 1 295 2 229 3 252 1 280 1 234 1 348 1 163 1 81 2 166 3 264 1 307 1 86 1 171 6 22 1 87 1 88 1 289 1 28 2 367 1 
195 1 93 2 131 11 198 1 341 1 295 1 229 6 252 2 115 1 5 2 231 1 280 2 11 3 77 1 61 2 234 1 38 1 80 1 81 4 166 8 264 2 171 14 86 11 147 3 22 2 102 1 333 1 88 2 289 1 72 1 106 1 28 2 367 4 
52 1 272 1 93 1 341 1 96 1 319 1 229 1 252 1 298 1 135 1 183 1 116 1 231 1 281 1 280 1 283 1 80 1 140 1 81 2 353 1 15 1 166 1 17 1 264 1 171 2 126 1 333 1 88 1 289 1 27 1 335 1 367 1 
52 1 93 2 96 1 134 1 229 1 252 2 298 1 135 1 183 1 116 1 280 2 281 1 120 1 186 1 80 1 42 1 140 1 81 4 15 1 353 1 303 1 17 1 264 2 171 1 126 1 333 1 88 2 289 2 27 1 
198 3 155 1 3 1 295 3 229 10 252 2 5 3 136 1 10 1 117 1 280 2 11 2 282 1 61 3 325 2 234 3 38 1 81 4 166 9 143 1 264 2 171 19 191 2 147 1 22 3 102 3 88 2 72 1 267 1 28 6 
129 1 198 2 155 2 295 2 229 12 252 3 299 1 5 3 136 1 10 1 117 1 280 3 11 2 282 2 61 3 325 1 234 2 258 1 38 2 238 1 210 2 81 6 166 14 83 1 264 3 171 26 191 4 147 2 22 3 102 2 88 3 175 1 267 1 28 4 
129 1 130 1 178 1 179 1 3 1 229 21 5 4 10 1 136 1 280 3 11 4 282 1 61 4 234 5 325 1 238 1 147 3 191 4 22 5 102 4 72 1 28 8 198 4 155 2 295 4 252 3 299 1 117 1 348 1 38 3 258 1 121 1 81 6 210 1 166 20 83 1 264 3 307 1 171 41 87 1 88 3 267 1 175 1 
178 1 130 1 129 1 179 1 198 3 155 2 3 1 295 4 229 18 299 1 252 4 5 4 136 1 10 1 117 1 280 4 11 4 282 1 61 4 325 1 234 4 348 1 258 1 38 3 121 1 238 1 210 2 81 8 166 20 83 1 264 4 307 1 171 38 191 4 147 3 22 5 102 3 87 1 88 4 72 1 175 1 267 1 28 7 
195 2 178 1 130 1 129 1 179 1 198 7 155 1 295 7 229 25 299 1 252 2 5 7 136 1 10 1 117 1 280 2 11 4 282 1 61 7 325 1 234 8 348 1 258 1 38 2 210 1 238 1 81 4 166 27 83 1 264 2 307 1 171 52 191 4 147 4 22 8 102 7 87 1 88 2 72 2 175 1 267 1 28 14 
98 1 149 1 347 1 138 1 95 1 301 1 164 1 365 1 165 1 352 1 
194 1 71 1 
187 1 98 1 149 1 105 1 301 1 164 1 365 1 21 1 352 1 
262 1 212 1 95 1 355 1 356 1 253 2 98 1 149 1 346 1 361 1 138 1 119 1 301 1 365 1 164 1 165 1 336 1 352 1 
262 1 212 1 95 1 355 1 356 1 253 2 98 1 149 1 346 1 361 1 138 1 119 1 301 1 365 1 164 1 165 1 336 1 352 1 
262 1 212 1 95 1 355 1 356 1 253 2 98 1 149 1 346 1 361 1 138 1 119 1 301 1 365 1 164 1 165 1 336 1 352 1 
14 1 227 1 63 1 
14 1 227 1 63 1 
223 1 236 1 
223 1 14 1 236 1 
196 1 218 1 
194 1 196 1 341 1 180 1 298 2 183 2 253 1 116 2 59 1 98 1 346 1 161 1 232 1 119 1 301 1 164 1 352 1 17 2 149 1 361 1 71 1 218 1 365 1 27 2 245 1 221 1 336 1 
227 1 63 1 
223 1 14 1 236 1 
93 1 31 1 229 1 298 2 252 1 8 1 231 1 60 1 280 1 281 2 80 1 140 2 81 2 239 1 353 2 166 1 16 1 213 1 17 2 264 1 169 2 171 2 148 1 333 1 88 1 24 1 334 1 289 1 27 2 177 1 154 1 
110 1 261 1 239 1 353 1 31 1 33 1 58 1 135 1 8 1 60 1 281 1 300 1 140 1 222 1 
188 1 44 2 110 1 239 1 353 1 340 1 31 1 69 1 332 1 281 1 217 1 254 1 206 1 292 1 302 1 140 1 222 1 351 1 
188 1 44 2 110 1 239 1 353 2 340 1 31 1 69 1 332 1 281 2 217 1 254 1 99 1 206 1 292 1 302 1 140 2 222 1 351 1 
188 1 44 2 353 1 239 1 340 1 31 1 144 1 332 1 281 1 217 1 254 1 206 1 292 1 302 1 140 1 222 1 351 1 
293 1 
260 1 337 1 167 1 355 1 76 1 125 1 359 1 70 1 137 1 64 1 
198 2 211 1 263 5 355 5 4 2 285 10 358 1 277 5 5 2 22 2 70 5 137 5 61 2 234 2 326 5 
337 1 103 1 119 1 355 1 152 1 336 1 
54 1 55 1 31 1 58 1 76 2 135 2 278 1 8 1 137 2 60 1 185 1 281 4 119 3 62 1 64 2 140 4 261 1 239 1 353 4 167 2 142 2 189 2 125 1 310 1 70 2 103 2 152 4 108 2 336 3 
337 1 260 1 359 1 137 1 70 1 275 1 355 1 
337 1 277 1 76 1 137 1 119 1 79 1 64 1 82 1 167 1 354 1 355 2 285 1 125 1 70 1 103 1 152 1 336 1 
313 3 4 2 228 2 97 2 277 6 135 1 6 2 5 2 8 10 137 9 185 1 60 3 281 3 61 2 234 2 99 1 64 4 326 6 140 3 239 4 142 1 189 1 66 2 285 12 22 2 103 3 70 8 152 5 193 2 108 2 336 5 337 2 248 2 112 1 198 2 31 3 201 1 76 4 119 5 259 1 207 3 260 1 353 3 167 4 168 2 211 3 263 6 355 8 215 2 358 2 125 4 359 1 265 1 366 2 
337 2 129 1 198 2 199 1 4 2 299 1 277 3 76 2 5 2 137 8 11 1 61 2 119 1 234 2 258 1 38 1 64 2 326 5 238 1 167 2 83 1 211 1 189 1 263 5 355 5 285 6 125 2 147 1 22 2 103 1 70 5 49 1 152 1 108 1 336 1 
179 1 4 2 35 1 298 1 76 1 345 1 183 1 116 1 137 2 119 1 234 1 348 1 64 1 141 1 122 1 167 1 211 1 17 1 146 1 125 1 22 2 70 2 87 1 172 1 27 1 107 1 247 1 336 1 
52 1 93 1 341 1 96 1 229 1 298 2 252 1 135 1 183 2 116 2 281 1 280 1 140 1 81 2 353 1 122 2 303 1 17 2 264 1 171 1 333 1 23 1 88 1 289 1 27 2 107 1 
337 2 167 1 263 2 189 1 355 4 285 4 307 1 277 2 76 1 125 1 70 2 137 1 64 1 108 1 326 2 
196 1 249 1 301 1 164 1 165 1 
75 1 301 1 164 1 
75 1 301 1 164 1 
75 1 301 1 164 1 
301 1 291 1 164 1 
301 1 291 1 164 1 
301 1 291 1 164 1 
301 1 164 1 
365 1 352 1 
81 2 166 5 179 2 264 1 295 3 229 5 252 1 171 10 345 1 22 2 117 1 102 2 280 1 87 1 88 1 234 2 348 2 28 5 
81 2 166 2 264 1 252 1 171 2 22 1 117 1 102 1 280 1 88 1 61 1 28 1 
81 2 166 2 198 1 295 1 264 1 229 2 252 1 171 4 5 1 22 1 117 1 102 1 280 1 88 1 61 1 234 1 28 2 
210 1 81 6 166 1 179 1 3 1 264 3 295 1 229 2 171 3 252 3 117 1 102 1 280 3 88 3 139 1 348 1 28 2 
178 1 130 1 179 3 198 3 3 1 200 1 295 7 342 1 229 18 252 5 5 3 117 1 280 5 11 4 61 3 139 1 234 5 348 3 38 1 210 2 81 10 166 16 264 5 307 1 171 34 242 1 286 1 147 3 22 5 102 5 87 2 88 5 72 1 28 12 
81 2 178 1 130 1 166 4 179 1 295 2 264 1 229 4 307 1 252 1 299 1 171 8 147 1 22 1 117 1 280 1 87 1 11 1 88 1 234 1 348 1 38 1 28 2 
178 1 130 1 179 1 295 2 229 5 299 1 252 2 5 1 117 1 280 2 11 2 61 1 234 1 348 1 38 1 81 4 166 6 264 2 307 1 171 11 286 1 147 1 22 2 102 1 87 1 88 2 72 1 28 3 
178 1 130 1 129 1 179 1 198 2 295 3 229 10 299 1 252 3 5 2 117 1 280 3 11 1 61 2 234 3 348 1 38 1 258 1 238 1 81 6 210 1 166 9 83 1 264 3 307 1 171 19 286 1 147 1 22 3 102 1 87 1 88 3 28 4 
178 1 130 1 129 1 179 1 198 1 295 3 229 7 299 1 252 3 5 2 117 1 280 3 11 1 61 2 234 2 348 1 38 1 258 1 210 1 81 6 238 1 166 10 83 1 264 3 307 1 171 17 286 1 147 1 22 3 102 2 87 1 88 3 28 5 
81 2 178 1 130 1 166 4 179 1 295 2 264 1 229 4 307 1 252 1 299 1 171 8 147 1 22 1 117 1 280 1 87 1 11 1 88 1 234 1 348 1 38 1 28 2 
129 1 198 2 295 1 229 6 299 1 252 1 5 2 117 1 280 1 11 1 61 2 234 2 38 1 258 1 81 2 238 1 166 6 83 1 264 1 171 12 147 1 22 2 102 1 88 1 28 2 
178 1 130 1 129 1 179 1 198 1 295 3 229 8 299 1 252 4 5 2 117 1 280 4 11 1 61 2 234 2 348 1 258 1 38 1 238 1 81 8 210 2 166 10 83 1 264 4 307 1 171 18 286 1 147 1 22 3 102 2 87 1 88 4 28 5 
129 1 198 2 3 1 295 3 229 7 299 1 252 4 5 3 117 1 280 4 11 1 61 3 234 2 258 1 38 1 238 1 81 8 210 2 166 9 83 1 264 4 171 16 147 1 22 3 102 3 88 4 28 6 
130 1 178 2 166 3 179 3 295 3 229 4 171 7 22 1 102 3 87 1 234 1 348 3 28 6 
178 1 130 1 129 1 179 1 198 1 3 1 295 3 229 8 299 1 252 4 5 2 117 1 280 4 11 1 61 2 234 2 348 1 258 1 38 1 238 1 81 8 210 2 166 10 83 1 264 4 307 1 171 18 147 1 22 3 102 1 87 1 88 4 28 4 
81 4 210 1 166 4 130 1 178 1 179 1 295 2 264 2 229 4 307 1 171 8 252 2 22 1 102 1 280 2 87 1 88 2 234 1 348 1 28 3 
22 1 166 3 178 1 130 1 87 1 179 1 275 1 234 1 295 2 348 1 229 3 307 1 171 6 28 2 
81 2 166 2 198 1 295 1 264 1 229 2 252 1 171 4 5 1 286 1 22 1 102 1 280 1 88 1 61 1 234 1 28 2 
166 3 198 1 295 1 229 4 171 7 5 1 147 1 22 1 102 1 11 2 61 1 234 1 72 1 38 1 28 2 
195 1 178 1 130 1 179 2 198 2 295 5 229 12 252 2 5 2 280 2 11 2 61 2 234 3 139 1 348 2 210 2 81 4 166 11 264 2 307 1 171 23 147 2 22 3 102 4 87 1 88 2 72 1 106 1 28 9 
11 1 229 1 171 1 
166 1 171 1 147 1 
81 2 166 3 198 1 264 1 295 2 229 3 252 1 358 1 171 6 5 1 286 1 22 1 102 2 280 1 88 1 61 1 234 1 28 4 
129 1 198 2 295 1 229 6 299 1 252 1 5 2 117 1 280 1 11 1 61 2 234 2 38 1 258 1 81 2 238 1 166 6 83 1 264 1 171 12 147 1 22 2 102 1 88 1 28 2 
166 3 179 1 295 1 229 3 171 6 22 1 102 1 87 1 234 1 348 1 28 2 
210 1 81 2 166 1 178 1 130 1 179 1 295 1 264 1 229 2 171 3 252 1 102 1 280 1 88 1 139 1 348 1 28 2 
341 1 17 1 240 1 27 1 298 1 241 1 321 1 
2 1 132 1 341 1 17 1 240 1 241 1 298 1 321 1 78 1 27 1 51 1 74 1 
261 1 239 1 353 4 31 1 58 1 135 1 8 1 281 4 60 1 99 1 176 1 29 1 140 4 
209 1 45 1 353 2 113 1 239 2 142 1 31 1 8 1 288 1 281 2 60 1 268 1 207 1 140 2 
44 1 239 1 353 1 281 1 31 1 206 1 292 1 135 1 351 1 140 1 
353 2 239 1 16 1 340 1 31 1 8 1 281 2 60 1 24 1 99 1 140 2 
109 1 261 1 353 5 239 2 16 1 142 1 31 2 58 1 135 1 8 3 281 4 60 2 99 1 39 1 176 1 140 5 
261 1 353 5 239 2 16 1 142 1 31 2 58 1 135 1 36 1 8 3 281 4 60 2 99 1 39 1 176 1 140 5 
239 1 15 1 353 1 341 1 17 2 31 1 298 2 135 1 183 1 8 1 116 1 60 1 281 1 12 1 27 1 207 1 153 1 140 1 
209 1 353 1 239 2 142 1 31 1 201 1 8 1 288 1 184 1 281 1 60 1 207 1 140 1 
353 2 112 1 239 2 31 1 201 1 8 2 281 2 60 1 312 1 99 1 366 1 207 1 140 2 
8 1 261 1 239 1 60 1 353 1 281 1 31 1 275 1 58 1 135 1 140 1 
141 1 15 1 353 1 341 1 17 1 96 1 298 1 135 1 183 1 116 1 281 1 27 1 246 1 140 1 
141 1 15 1 353 1 341 1 142 1 17 1 96 1 298 1 183 1 116 1 281 1 27 1 246 1 140 1 
341 1 56 1 31 1 298 2 183 2 116 1 8 3 281 2 60 2 12 1 207 2 140 2 353 2 15 1 239 1 141 1 168 1 142 1 17 2 215 1 329 1 27 2 29 1 153 1 
337 1 313 1 31 1 157 1 6 1 135 1 8 4 281 3 204 1 60 1 119 2 207 1 140 3 353 3 239 1 168 1 142 1 355 1 215 1 152 1 366 1 29 1 336 2 
337 1 248 1 313 1 239 1 353 3 168 1 142 1 31 1 355 1 215 1 135 1 6 1 8 4 60 1 281 3 119 2 152 1 366 1 29 1 207 1 336 2 140 3 
239 1 353 1 281 1 31 1 312 1 140 1 
109 1 209 1 353 7 239 3 16 1 340 1 31 2 169 1 201 1 135 2 8 3 288 1 184 1 281 6 60 2 312 1 364 1 99 1 39 1 207 1 140 7 
52 1 178 1 130 1 131 1 179 1 93 2 341 2 96 1 295 1 229 2 252 2 298 1 183 1 116 1 280 2 281 1 234 1 120 1 348 1 99 1 186 1 80 1 140 1 81 4 166 3 15 1 353 1 303 1 213 1 17 1 264 2 307 1 86 1 171 5 22 1 87 1 88 2 289 2 27 1 28 1 
337 1 248 1 313 1 228 1 97 1 135 1 76 2 6 1 8 2 137 1 59 1 281 1 185 1 119 3 64 2 140 1 260 1 353 1 167 2 66 1 355 1 125 2 359 1 70 1 103 1 152 2 366 1 336 3 
141 1 315 1 341 1 17 1 48 2 330 1 298 1 148 1 334 1 27 1 246 1 154 1 
337 1 315 1 156 1 133 1 56 1 182 1 298 2 6 1 183 1 116 1 59 1 119 2 122 1 141 2 17 2 18 1 48 2 355 1 146 1 330 1 329 1 148 1 334 1 172 1 244 1 27 2 107 1 247 1 154 1 336 2 
315 1 330 1 
18 1 48 1 182 1 
203 1 205 1 
53 1 328 4 357 2 306 2 250 1 276 1 203 1 101 3 160 2 90 1 290 1 324 1 350 1 271 4 
203 1 287 1 205 1 328 1 170 1 306 1 271 1 279 1 
203 1 90 1 205 1 328 1 350 1 266 1 271 1 
101 2 91 1 251 1 41 2 
205 1 
203 1 322 1 205 1 328 1 306 1 271 1 
349 1 
205 1 
203 1 90 1 205 1 328 1 271 1 
203 1 101 1 324 1 250 1 
101 1 357 1 
101 1 160 1 275 1 357 1 
101 1 160 1 53 1 328 1 357 1 276 1 271 1 
181 1 237 1 271 1 
203 1 90 1 205 1 290 1 328 1 350 1 271 1 
101 1 160 1 53 1 328 2 357 1 306 1 276 1 331 1 271 2 
205 1 
205 1 
205 1 
205 1 34 1 
328 2 306 2 250 1 203 1 101 1 309 1 322 1 205 1 324 1 271 2 
44 1 205 1 206 1 
328 2 305 1 306 2 250 1 331 1 203 1 101 1 205 1 324 1 271 2 

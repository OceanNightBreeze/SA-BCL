#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 85 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 85 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 85 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 85 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 85 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 85 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 85 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 85 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | STATEMENT | 3734 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> -1
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1062 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 4723 | return null
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 866 | stmt -> ;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7629 | return null
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z | OPERATOR | 1612 | || -> &&
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6510 | stmt -> ;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 2 241 5 105 6 309 2 312 1 28 1 362 1 108 2 177 9 315 9 180 1 163 1 250 1 34 2 346 3 208 2 132 2 9 1 369 4 372 1 142 1 214 2 65 1 96 1 237 1 215 1 97 1 174 1 
0 2 241 5 105 6 309 2 312 1 28 1 362 1 108 2 177 9 315 9 180 1 163 1 250 1 34 2 346 3 132 2 208 2 9 1 369 4 372 1 142 1 214 2 65 1 96 1 237 1 215 1 97 1 174 1 
0 2 241 6 105 7 309 2 312 1 28 1 362 1 108 2 177 10 315 10 180 1 163 1 250 1 34 2 346 4 132 2 208 2 9 1 369 5 372 1 142 1 214 2 65 1 96 1 237 1 215 1 97 1 174 1 
0 2 241 4 105 4 309 2 312 1 28 1 362 1 108 2 177 7 315 7 180 1 163 1 250 1 34 1 346 2 132 2 208 2 9 1 369 3 372 1 142 1 214 2 65 1 237 1 215 1 97 1 174 1 
208 1 132 1 0 1 241 3 369 2 105 3 312 1 108 1 362 1 177 4 315 4 180 1 214 1 96 1 237 1 250 1 34 2 346 1 
208 1 241 1 0 1 124 1 229 1 372 1 309 1 362 1 108 1 289 1 28 1 177 2 315 2 180 1 214 1 250 1 
208 2 0 2 241 2 369 1 105 1 309 1 362 1 177 3 315 3 180 1 97 1 250 1 346 1 
0 2 241 5 105 7 309 1 312 1 362 1 108 1 177 9 315 9 180 1 250 1 7 1 34 2 346 3 208 2 132 1 369 4 188 1 214 1 65 1 237 1 96 1 215 1 97 1 
0 2 241 5 105 7 309 1 312 1 362 1 108 1 177 9 315 9 180 1 250 1 7 1 34 2 346 3 208 2 132 1 369 4 188 1 214 1 65 1 237 1 96 1 215 1 97 1 
85 1 
353 1 134 1 364 2 
72 2 325 1 373 1 173 2 374 2 278 2 341 2 379 2 
72 2 175 1 199 1 1 1 308 2 311 1 79 2 29 1 341 2 245 1 179 1 265 1 266 1 86 2 319 1 295 1 183 1 252 1 347 1 167 1 370 1 254 1 325 1 138 1 274 1 373 1 190 1 374 2 64 1 94 1 301 1 378 2 218 2 173 3 279 1 278 3 379 2 
72 1 68 1 325 1 173 1 11 1 374 1 278 1 341 1 203 1 379 1 
72 1 259 1 90 1 306 1 348 1 2 1 339 1 203 1 353 1 290 1 156 1 236 1 173 1 278 1 
72 1 90 1 306 1 348 2 339 1 374 1 341 1 203 1 353 1 290 1 156 1 236 2 173 1 278 1 379 1 
111 1 236 1 329 1 348 1 226 1 
353 1 111 1 133 1 236 2 329 1 348 2 339 1 101 1 
111 1 236 1 348 1 
72 1 348 1 325 1 11 1 374 1 341 1 203 1 236 1 68 1 329 1 69 1 173 1 278 1 379 1 
353 1 
353 1 111 1 236 2 329 1 356 1 348 2 339 1 101 1 
111 2 166 1 283 1 268 2 39 2 168 1 348 5 339 1 340 1 353 1 158 1 236 5 159 1 329 2 6 2 320 1 101 1 251 1 332 1 
85 1 
72 2 373 2 374 1 44 1 341 1 354 1 173 2 278 2 379 1 
328 1 271 1 238 1 
148 1 175 1 252 1 199 1 1 1 308 1 274 1 373 1 311 1 190 1 64 1 266 1 378 1 218 1 173 1 278 1 
72 1 252 1 175 1 199 1 136 1 271 1 1 1 153 1 308 1 274 1 311 1 190 1 374 1 64 1 266 1 378 1 218 1 173 2 278 2 379 1 
72 3 153 1 373 1 173 3 374 3 278 3 341 1 379 3 
72 1 68 1 173 1 374 1 278 1 203 1 379 1 
72 1 354 1 173 1 374 1 278 1 44 1 341 1 203 1 379 1 
72 3 175 1 199 1 1 1 77 1 306 1 153 1 308 1 311 1 79 1 29 1 341 2 203 1 290 1 156 1 245 1 266 1 86 2 319 1 295 1 183 1 252 1 228 1 167 1 90 1 136 1 370 1 254 1 348 1 325 1 274 1 373 1 190 1 374 3 64 1 236 1 94 1 354 1 378 1 218 1 173 4 279 1 278 4 379 3 
72 2 185 1 153 1 373 1 173 2 2 1 374 1 278 2 379 1 
72 3 136 1 22 1 90 1 306 1 77 1 348 1 153 2 374 3 341 1 203 1 353 1 290 1 156 1 236 1 354 1 173 3 278 3 379 3 
72 2 271 1 153 1 374 2 341 1 354 1 173 2 238 1 278 2 379 2 
175 1 252 1 199 1 1 1 308 1 274 1 373 1 311 1 190 1 64 1 266 1 378 1 218 1 173 1 278 1 
175 1 252 1 199 1 1 1 308 1 373 1 311 1 190 1 64 1 194 1 378 1 218 1 173 1 278 1 50 1 
76 1 338 1 79 4 29 1 204 1 245 1 162 1 86 2 319 1 295 1 87 1 183 1 322 1 271 2 38 1 324 1 254 1 172 1 328 2 301 2 49 1 238 2 279 2 197 1 
156 1 72 1 66 1 173 1 374 1 278 1 203 1 379 1 
72 5 185 1 136 1 125 1 153 2 373 1 2 1 275 1 374 4 341 1 354 1 173 5 278 5 379 4 
72 2 66 1 68 1 173 2 374 2 278 2 203 1 379 2 
210 1 191 1 
210 1 191 1 
239 1 93 1 
239 1 93 1 
239 1 93 1 
302 1 210 1 191 1 
302 1 210 1 191 1 
302 1 210 1 191 1 
210 1 47 1 191 1 
210 1 307 1 191 1 
253 1 210 2 70 1 239 1 191 2 93 1 
210 1 47 1 191 1 
210 1 47 1 191 1 
91 2 210 2 150 2 261 1 232 2 348 2 286 2 141 1 191 2 154 1 157 1 353 1 144 1 236 2 376 1 344 3 70 1 131 1 280 2 
72 2 258 1 150 1 307 1 286 1 262 1 61 1 344 1 131 1 267 1 91 1 210 1 232 1 348 1 373 1 374 2 191 1 13 1 236 1 173 2 278 2 195 1 379 2 17 1 
132 1 214 1 108 1 
214 1 229 1 108 1 
132 2 84 1 229 1 219 1 357 1 108 3 
132 1 84 1 229 1 129 1 219 1 108 2 
132 1 84 2 229 1 219 1 108 2 
258 1 21 1 76 1 339 1 243 2 364 3 158 2 291 2 128 1 6 1 162 1 251 1 111 1 267 1 134 1 268 1 38 1 39 1 324 1 137 1 348 5 300 1 168 3 115 1 13 1 352 2 353 2 236 5 329 4 101 1 147 1 71 1 
52 1 21 2 76 3 56 1 310 1 339 1 243 6 340 1 364 9 158 6 205 1 6 2 162 3 226 5 251 1 111 6 134 3 268 2 38 3 39 2 189 1 324 3 137 3 348 9 300 1 168 8 13 4 352 6 213 1 353 5 236 9 329 7 217 5 101 1 147 2 
21 1 76 1 339 1 243 2 340 1 364 4 291 1 158 2 6 1 162 1 134 2 268 1 39 1 38 1 348 3 168 3 137 1 324 1 115 1 13 1 352 2 353 3 236 3 329 2 147 1 71 1 
52 1 21 1 76 2 310 1 339 1 243 4 340 1 364 7 291 2 158 4 6 1 162 2 134 3 268 1 39 1 38 2 348 4 168 5 137 2 324 2 115 1 13 2 352 4 213 1 353 4 236 4 329 3 147 1 71 1 
85 1 
199 1 127 1 
73 1 
199 1 311 1 
199 3 104 2 24 1 311 1 15 1 190 1 
199 1 311 1 190 1 
199 1 343 1 
322 2 35 1 297 1 89 1 113 1 324 1 337 2 26 1 79 7 247 1 83 1 67 1 301 4 162 1 87 3 279 3 121 1 
322 2 35 1 297 1 89 1 113 1 324 1 337 2 26 1 79 7 247 1 83 1 67 1 301 4 162 1 87 3 279 3 121 1 
322 2 35 1 323 1 297 1 89 1 113 1 324 1 337 2 26 1 79 7 247 1 83 1 67 1 301 4 162 1 87 3 279 3 121 1 
76 3 337 3 26 2 79 31 29 1 247 1 83 5 366 1 109 1 86 2 162 4 319 1 295 1 181 1 87 10 35 1 227 3 322 5 297 2 89 1 38 3 113 1 254 1 137 3 324 4 92 1 42 4 351 1 67 2 301 16 117 1 279 15 240 1 121 2 
337 2 26 1 79 9 361 1 29 2 83 1 247 1 162 1 86 4 319 2 295 2 345 1 87 4 322 3 297 1 89 1 113 1 324 1 254 2 67 1 301 5 117 1 279 4 121 1 
241 1 0 1 175 1 105 1 221 1 308 1 309 1 78 1 58 1 362 1 108 2 177 2 60 1 315 2 180 1 294 1 250 1 132 1 208 1 229 1 270 1 350 1 64 1 143 1 214 1 355 1 218 1 378 1 357 1 303 1 
241 1 0 1 175 1 54 1 105 2 221 1 308 1 309 1 58 1 108 2 177 3 60 1 315 3 180 1 250 1 132 1 208 1 229 1 270 1 140 1 350 1 64 1 143 1 214 1 355 1 377 1 218 1 378 1 357 1 303 1 
241 1 175 1 105 2 221 1 308 1 309 1 58 1 108 2 177 2 60 1 315 2 180 1 250 1 132 1 229 1 140 1 350 1 64 1 214 1 355 1 377 1 218 1 378 1 357 1 303 1 
102 1 208 1 0 1 175 1 199 1 37 1 54 1 1 1 221 2 308 1 272 1 309 2 311 1 64 1 177 1 235 1 315 1 60 2 355 2 216 1 378 1 218 1 321 1 
0 1 175 1 221 1 308 1 309 1 78 1 58 1 362 1 108 2 177 1 60 1 315 1 132 1 208 1 229 1 270 1 350 1 64 1 143 1 214 1 355 1 377 1 218 1 378 1 357 1 303 1 
135 1 
51 1 102 1 242 1 199 1 284 1 151 2 1 2 2 1 339 1 287 1 59 1 203 1 290 1 156 1 158 2 5 2 6 1 62 1 296 2 251 1 111 6 168 2 348 5 114 2 64 1 353 2 119 1 218 2 173 1 72 1 175 1 259 1 359 2 21 1 306 1 308 2 311 1 364 2 263 1 178 1 318 1 134 2 268 1 90 1 187 1 39 1 235 1 236 5 45 4 98 1 378 2 331 2 100 2 101 3 278 1 
72 1 242 1 259 1 359 1 306 1 2 1 287 1 203 1 263 1 178 1 290 1 156 1 62 1 111 2 90 1 348 3 236 3 45 2 356 1 173 1 278 1 101 1 
72 1 242 1 259 1 306 1 2 1 287 1 339 1 203 1 263 1 178 1 290 1 156 1 62 1 111 1 90 1 348 3 353 1 236 3 45 3 356 1 173 1 278 1 100 1 101 1 
72 1 242 1 259 1 359 1 151 1 306 1 2 1 287 1 339 1 203 1 263 1 178 1 290 1 156 1 62 1 111 2 90 1 348 3 353 1 236 3 45 3 356 1 173 1 101 1 278 1 100 1 
72 1 242 1 198 1 259 1 284 1 359 4 151 4 306 1 222 1 2 1 339 5 287 1 203 1 263 1 178 1 290 1 156 1 158 1 81 1 5 2 6 1 62 1 296 2 251 1 111 7 134 2 268 1 186 1 90 1 39 1 168 1 348 5 114 2 353 5 236 5 45 6 48 1 356 1 119 1 331 2 173 1 100 4 101 3 278 1 
51 1 72 1 242 1 259 1 359 2 284 1 151 2 306 1 2 1 339 1 287 1 364 2 203 1 263 1 178 1 290 1 156 1 158 1 5 2 62 1 6 1 296 2 251 1 111 4 134 2 268 1 90 1 39 1 168 1 348 4 114 2 353 2 236 4 45 4 119 1 331 2 173 1 100 2 101 2 278 1 
72 1 242 1 259 1 359 2 284 1 151 2 306 1 222 1 2 1 339 1 287 1 203 1 263 1 178 1 290 1 156 1 158 1 5 2 6 1 62 1 296 2 251 1 111 4 134 2 268 1 90 1 186 1 39 1 168 1 348 4 114 2 353 1 236 4 45 4 48 1 119 1 331 2 173 1 100 2 101 2 278 1 
72 1 242 1 259 1 359 2 284 1 151 2 306 1 222 1 2 1 339 1 287 1 203 1 263 1 178 1 290 1 156 1 158 1 5 2 6 1 62 1 296 2 251 1 111 4 134 2 268 1 90 1 186 1 39 1 168 1 348 4 114 2 353 1 236 4 45 4 48 1 119 1 331 2 173 1 100 2 101 2 278 1 
72 1 242 1 259 1 359 2 151 2 306 1 2 1 339 1 287 1 364 2 203 1 263 1 126 2 178 1 290 1 156 1 158 1 5 2 293 1 6 1 62 1 164 1 251 1 111 4 268 1 90 1 39 1 168 1 348 4 255 1 353 1 236 4 45 4 48 1 119 1 331 2 173 1 100 2 101 2 278 1 334 2 
72 1 242 1 259 1 198 1 284 1 359 3 151 3 306 1 222 1 2 1 339 1 287 1 203 1 263 1 178 1 290 1 156 1 158 1 5 2 6 1 62 1 296 2 251 1 111 5 134 2 268 1 90 1 186 1 39 1 168 1 348 4 114 2 353 1 236 4 45 5 48 1 119 1 331 2 173 1 101 2 278 1 100 3 
72 1 242 1 259 1 198 1 284 1 359 3 151 3 306 1 222 1 2 1 339 1 287 1 203 1 263 1 178 1 290 1 156 1 158 1 5 2 6 1 62 1 296 2 251 1 111 5 134 2 268 1 90 1 186 1 39 1 168 1 348 4 114 2 353 1 236 4 45 5 48 1 119 1 331 2 173 1 101 2 278 1 100 3 
51 1 72 1 242 1 259 1 359 2 151 2 306 1 2 1 339 1 287 1 364 2 203 1 263 1 126 2 178 1 290 1 156 1 158 1 5 2 293 1 62 1 6 1 251 1 111 4 268 1 90 1 39 1 168 1 348 4 353 1 236 4 45 4 119 1 331 2 173 1 100 2 101 2 278 1 334 2 
245 1 85 1 86 2 254 1 319 1 295 1 183 1 29 1 197 1 
76 1 79 14 29 2 245 1 83 1 366 1 86 4 319 2 162 1 295 2 87 2 225 1 183 2 322 1 227 3 347 1 167 1 211 1 271 11 38 2 254 2 137 2 324 2 373 1 42 3 328 11 301 8 330 1 16 1 238 4 358 1 279 6 240 1 
148 1 72 1 175 1 199 1 1 1 308 1 153 1 311 1 79 2 29 1 245 1 266 1 319 1 86 2 249 1 295 1 183 1 252 1 167 1 347 1 136 1 211 1 254 1 274 1 169 1 373 1 190 1 374 1 64 1 301 1 218 1 378 1 173 2 238 1 278 2 279 1 18 1 379 1 
53 2 199 2 1 1 337 1 153 1 244 1 245 3 247 1 162 3 295 3 207 2 8 2 252 2 347 1 167 1 211 1 113 1 254 3 64 2 67 1 301 10 218 3 173 3 72 1 175 2 76 2 308 3 26 1 311 2 79 20 29 3 30 1 83 4 266 2 86 6 319 3 87 8 183 3 322 4 89 1 136 1 271 7 38 2 139 1 137 2 324 3 274 2 373 2 374 1 190 2 94 2 328 7 377 1 378 3 238 7 279 10 278 3 333 2 379 1 
72 1 102 1 175 2 199 3 23 1 1 2 153 1 308 8 311 2 79 2 224 1 176 1 29 2 245 2 265 2 294 1 86 4 319 2 295 2 183 2 368 1 184 1 347 1 167 1 40 1 254 2 349 1 374 1 64 2 235 1 301 1 377 1 218 8 378 7 173 1 278 1 279 1 197 1 379 1 
72 1 305 1 76 1 79 3 341 1 29 1 245 1 86 2 319 1 162 1 295 1 87 1 183 1 322 1 271 1 211 1 38 1 254 1 137 1 324 1 374 1 328 1 354 1 301 1 173 1 238 1 278 1 279 2 379 1 
271 1 38 1 254 1 324 1 79 2 29 1 245 1 83 1 328 1 301 2 319 1 86 2 295 1 49 1 87 1 238 1 183 1 197 1 
322 1 271 1 76 1 254 1 79 2 29 1 204 1 245 1 328 1 319 1 86 2 162 1 295 1 87 1 238 1 183 1 279 2 197 1 
76 1 79 4 29 1 245 1 83 1 86 2 319 1 162 1 295 1 87 2 183 1 322 1 38 1 271 2 324 1 137 1 254 1 328 2 301 2 238 2 279 2 197 1 
271 1 38 1 254 1 324 1 79 2 176 1 29 1 245 1 83 1 328 1 301 2 319 1 86 2 295 1 49 1 87 1 238 1 183 1 
322 1 271 1 76 1 254 1 79 2 176 1 29 1 204 1 245 1 328 1 319 1 86 2 162 1 295 1 87 1 238 1 183 1 279 2 
322 1 76 1 271 2 38 1 254 1 137 1 324 1 79 4 176 1 29 1 245 1 83 1 328 2 301 2 162 1 319 1 86 2 295 1 87 2 238 2 279 2 183 1 
322 1 76 1 271 2 38 1 254 1 137 1 324 1 79 4 29 1 245 1 83 1 328 2 301 2 162 1 319 1 86 2 295 1 87 2 238 2 279 2 183 1 
175 1 199 1 1 1 308 1 311 1 79 2 29 1 245 1 266 1 319 1 86 2 295 1 183 1 252 1 347 1 167 1 254 1 274 1 373 1 190 1 64 1 94 1 301 1 218 1 378 1 173 1 278 1 279 1 
175 1 199 1 1 1 308 1 311 1 79 2 29 1 245 1 319 1 86 2 295 1 183 1 252 1 112 1 347 1 167 1 254 1 373 1 190 1 64 1 301 1 194 1 218 1 378 1 173 1 50 1 278 1 279 1 
322 1 76 1 271 2 211 1 38 1 254 1 137 1 324 1 79 4 29 1 245 1 83 1 328 2 301 2 162 1 319 1 86 2 295 1 87 2 238 2 279 2 183 1 
175 1 199 1 76 1 308 1 311 1 79 4 29 1 245 1 83 1 266 1 162 1 294 1 319 1 86 2 295 1 87 2 183 1 322 1 252 1 271 2 38 1 324 1 254 1 137 1 274 1 190 1 64 1 328 2 94 1 301 2 218 1 378 1 173 1 238 2 279 2 278 1 333 1 
72 1 76 1 79 3 341 1 29 1 245 1 83 1 162 1 86 2 319 1 295 1 87 1 183 1 211 1 38 1 271 1 254 1 273 1 137 1 324 1 374 1 328 1 354 1 301 2 173 1 238 1 279 1 278 1 379 1 
149 1 55 1 76 3 25 1 57 1 79 19 155 1 29 2 83 3 366 1 86 4 319 2 162 3 295 2 345 1 87 6 322 3 227 1 38 3 254 2 137 3 324 3 326 2 42 2 301 9 99 1 120 2 279 10 240 1 196 1 
74 1 200 1 55 1 76 2 201 1 25 2 57 1 79 26 155 1 29 3 83 2 162 2 86 6 319 3 295 3 87 4 345 1 322 2 227 2 38 3 254 3 137 3 324 3 41 1 326 1 42 2 212 1 234 1 301 14 117 2 279 12 120 4 196 2 240 2 
200 1 55 1 201 1 337 1 57 1 155 1 247 1 162 5 295 3 345 1 113 1 254 3 212 1 67 1 301 20 117 1 120 4 74 1 360 1 76 4 25 1 26 1 79 41 29 3 83 4 366 1 319 3 86 6 87 8 227 3 322 4 89 1 38 4 324 5 137 4 41 1 42 4 326 1 234 1 99 1 279 21 196 2 240 3 
74 1 360 1 200 1 55 1 76 3 201 1 337 1 26 1 25 1 57 1 79 38 155 1 29 4 247 1 83 3 366 1 86 8 319 4 162 4 295 4 345 1 87 7 322 4 227 3 89 1 38 4 113 1 254 4 137 4 324 5 41 1 326 1 42 4 212 1 234 1 67 1 301 20 117 2 99 1 120 4 279 18 240 3 196 2 
74 1 200 1 55 1 76 7 201 1 337 1 26 1 25 1 57 1 79 52 155 1 29 2 247 1 83 7 366 2 86 4 319 2 162 8 295 2 345 1 87 14 322 7 227 4 89 1 38 7 113 1 254 2 137 7 324 8 41 1 326 1 42 4 212 1 234 1 67 1 301 27 117 1 120 4 358 2 279 25 240 2 196 1 
157 1 144 1 248 1 91 1 150 1 210 1 232 1 70 1 286 1 191 1 
61 1 307 1 
82 1 91 1 150 1 210 1 161 1 14 1 232 1 286 1 191 1 
91 1 210 1 150 1 232 1 348 1 286 1 141 1 191 1 154 1 157 1 353 1 144 1 236 1 376 1 344 2 70 1 131 1 280 1 
91 1 210 1 150 1 232 1 348 1 286 1 141 1 191 1 154 1 157 1 353 1 144 1 236 1 376 1 344 2 70 1 131 1 280 1 
91 1 210 1 150 1 232 1 348 1 286 1 141 1 191 1 154 1 157 1 353 1 144 1 236 1 376 1 344 2 70 1 131 1 280 1 
316 1 253 1 302 1 
316 1 253 1 302 1 
253 1 47 1 277 1 
47 1 277 1 
262 1 195 1 
258 1 72 2 150 1 307 1 286 1 262 1 154 1 61 1 344 1 267 1 298 1 91 1 210 1 232 1 348 1 373 1 191 1 374 2 13 1 236 1 329 1 173 2 278 2 280 1 195 1 17 1 379 2 
316 1 302 1 
47 1 277 1 
72 2 175 1 199 1 75 1 308 2 311 1 79 2 29 1 245 1 265 2 160 1 319 1 86 2 295 1 183 1 368 1 184 1 347 1 167 1 211 1 254 1 170 1 64 1 43 1 301 1 218 2 378 2 173 2 220 1 278 2 279 1 
132 1 175 1 229 1 63 1 270 1 221 1 336 1 308 2 58 1 64 1 108 2 171 1 214 1 377 1 294 1 378 2 218 2 357 1 303 1 
132 1 175 1 229 1 63 1 270 1 221 1 308 1 58 1 64 1 108 2 214 1 4 1 377 1 378 1 218 1 357 1 303 1 
102 1 175 1 199 1 1 1 221 1 308 1 311 1 64 1 171 1 235 1 216 1 378 1 218 1 282 1 
132 1 175 1 229 1 63 1 270 1 221 1 336 1 308 1 58 1 64 1 108 2 171 1 214 1 377 1 378 1 218 1 357 1 303 1 
46 1 
85 1 
111 1 134 1 268 1 284 1 39 1 348 1 168 1 114 1 339 1 364 1 353 2 236 1 158 1 6 1 296 1 101 1 251 1 
88 1 175 1 199 2 268 1 269 1 39 1 1 1 308 1 311 1 190 1 64 2 127 1 6 1 378 1 218 1 15 1 251 1 
74 1 21 1 200 1 76 2 201 1 339 2 288 1 243 5 364 6 158 5 318 1 6 2 162 2 251 2 111 1 227 1 134 3 268 2 39 2 38 2 348 1 168 8 137 2 324 2 42 1 192 1 212 1 352 5 353 5 234 1 236 1 95 2 257 1 101 1 240 1 
72 1 26 1 222 1 288 1 341 1 203 1 158 2 247 1 6 1 162 1 251 1 268 1 39 1 299 1 348 1 324 2 168 2 325 1 11 1 374 1 236 1 95 1 67 1 68 1 69 1 173 1 278 1 379 1 
283 1 268 1 39 1 168 1 339 1 353 1 158 1 6 1 320 1 251 1 
8 1 134 5 38 2 76 2 137 2 324 2 168 5 288 1 243 5 352 5 364 10 353 5 158 5 95 2 162 2 
353 1 111 1 236 1 348 1 339 1 101 1 
102 1 175 1 199 1 21 2 1 2 308 4 311 1 59 1 340 1 158 2 318 2 6 2 130 1 251 1 111 4 10 2 268 2 187 1 39 2 168 2 348 3 64 1 235 1 193 1 327 1 236 3 218 4 378 4 101 2 
72 2 175 1 199 1 1 1 308 1 311 1 79 1 29 1 341 2 245 1 266 1 86 2 319 1 295 1 183 1 252 1 167 1 370 1 254 1 325 1 274 1 373 1 374 2 190 1 64 1 94 1 218 1 378 1 173 3 279 1 278 3 379 2 
134 2 268 1 21 1 39 1 337 1 168 1 339 2 243 2 352 2 364 4 353 4 158 2 318 1 6 1 251 1 
116 1 150 1 232 1 
116 1 150 1 232 1 
116 1 150 1 232 1 
150 1 232 1 313 1 
144 1 264 1 150 1 232 1 195 1 
150 1 232 1 313 1 
150 1 232 1 313 1 
150 1 232 1 
210 1 191 1 
322 2 89 1 113 1 337 1 324 1 254 2 26 1 79 8 29 2 247 1 83 1 67 1 301 4 117 1 162 1 319 2 86 4 295 2 87 3 279 4 
85 1 
322 1 76 1 38 1 254 1 137 1 324 1 79 4 29 1 83 1 301 2 292 1 162 1 319 1 86 2 295 1 87 2 279 2 
322 1 227 1 76 1 38 1 137 1 324 1 42 2 79 7 83 1 301 3 366 1 162 1 87 2 279 4 240 1 
76 2 337 1 26 2 79 23 29 2 247 1 83 4 366 1 162 3 319 2 86 4 295 2 87 9 206 1 227 2 322 5 89 1 38 2 113 1 324 3 137 2 254 2 42 2 67 2 301 11 117 2 16 1 279 12 358 1 
79 1 42 1 279 1 
227 1 301 1 79 1 
8 1 322 2 38 1 76 1 254 1 137 1 324 1 79 6 29 1 83 1 301 3 292 1 86 2 319 1 162 1 295 1 87 3 279 3 
74 1 200 1 76 2 201 1 79 12 29 1 83 1 86 2 319 1 162 2 295 1 345 1 87 2 227 1 322 1 38 2 254 1 137 2 324 2 42 1 212 1 234 1 301 6 279 6 240 1 
322 1 324 1 26 1 79 6 247 1 83 1 67 1 301 3 162 1 87 2 279 3 
322 1 89 1 113 1 254 1 26 1 79 3 29 1 83 1 67 1 301 1 117 1 319 1 86 2 295 1 87 2 206 1 279 2 
322 1 299 1 324 2 26 1 79 8 247 1 83 1 67 1 301 4 162 2 87 2 279 4 
38 1 254 1 324 1 79 2 29 1 83 1 301 2 319 1 86 2 295 1 345 1 87 1 
322 1 76 1 38 1 254 1 137 1 324 1 79 4 29 1 83 1 301 2 162 1 319 1 86 2 295 1 87 2 345 1 279 2 
322 1 254 3 26 1 79 3 29 3 83 1 67 1 301 1 117 1 319 3 86 6 295 3 99 1 206 1 345 1 87 2 279 2 
76 3 337 1 26 3 79 34 29 5 247 2 83 5 366 1 292 1 86 10 319 5 162 5 295 5 206 1 181 1 345 1 87 12 227 3 322 7 89 1 38 3 113 1 254 5 137 3 324 5 92 1 42 4 351 1 67 3 301 16 117 2 99 1 279 18 240 1 
201 1 337 1 26 1 79 8 29 1 247 1 162 1 86 2 319 1 295 1 345 1 87 2 227 1 322 2 89 1 113 1 324 1 254 1 42 1 67 1 301 4 279 4 240 1 
201 1 337 1 26 1 79 11 29 2 247 1 83 1 366 1 292 1 162 1 86 4 319 2 295 2 345 1 87 3 322 2 227 1 89 1 38 1 113 1 254 2 137 1 324 2 42 2 67 1 301 6 279 5 240 1 
74 1 200 1 76 2 201 1 337 1 26 1 79 19 29 3 247 1 83 1 292 1 86 6 319 3 162 3 295 3 345 1 87 4 227 1 322 3 89 1 38 2 113 1 254 3 137 2 324 3 42 1 212 1 234 1 67 1 301 9 117 1 279 10 240 1 
74 1 200 1 76 1 201 1 337 1 26 1 79 17 29 3 247 1 83 2 292 1 86 6 319 3 162 2 295 3 345 1 87 5 227 1 322 3 89 1 38 2 113 1 254 3 137 2 324 3 42 1 212 1 234 1 67 1 301 10 117 1 279 7 240 1 
201 1 337 1 26 1 79 8 29 1 247 1 162 1 86 2 319 1 295 1 345 1 87 2 227 1 322 2 89 1 113 1 324 1 254 1 42 1 67 1 301 4 279 4 240 1 
74 1 200 1 76 2 201 1 79 12 29 1 83 1 86 2 319 1 162 2 295 1 345 1 87 2 227 1 322 1 38 2 254 1 137 2 324 2 42 1 212 1 234 1 301 6 279 6 240 1 
74 1 200 1 76 1 201 1 337 1 26 1 79 18 29 4 247 1 83 2 292 1 86 8 319 4 162 2 295 4 345 1 87 5 227 1 322 3 89 1 38 2 113 1 254 4 137 2 324 3 42 1 212 1 234 1 67 1 301 10 117 2 279 8 240 1 
74 1 200 1 76 2 201 1 79 16 29 4 83 3 86 8 319 4 162 2 295 4 345 1 87 6 227 1 322 3 38 3 254 4 137 3 324 3 42 1 212 1 234 1 301 9 117 2 99 1 279 7 240 1 
322 3 89 2 113 1 324 1 26 3 79 7 83 3 247 1 67 3 301 3 162 1 87 6 279 4 
74 1 200 1 76 1 201 1 337 1 26 1 79 18 29 4 247 1 83 1 86 8 319 4 162 2 295 4 345 1 87 4 227 1 322 3 89 1 38 2 113 1 254 4 137 2 324 3 42 1 212 1 234 1 67 1 301 10 117 2 99 1 279 8 240 1 
72 1 185 1 103 1 373 1 173 1 2 1 278 1 
72 1 123 1 185 1 335 1 103 1 373 1 2 1 314 1 145 1 367 1 173 1 278 1 
85 1 1 1 308 1 218 1 378 1 
72 1 252 1 175 1 199 1 1 1 153 1 308 1 373 1 311 1 190 1 374 1 64 1 266 1 378 1 218 1 173 2 278 2 379 1 
72 2 175 1 199 3 308 1 153 1 311 2 203 1 290 1 156 1 266 1 343 1 10 1 252 1 373 1 374 2 190 2 276 1 64 1 218 1 378 1 173 2 278 2 379 1 
72 2 175 1 199 3 308 2 153 1 311 2 203 1 290 1 156 1 365 1 343 1 10 1 252 1 373 1 374 2 190 2 276 1 64 1 218 2 378 2 173 2 50 1 278 2 379 1 
175 1 199 4 104 1 285 1 1 1 306 1 308 3 311 1 339 1 365 1 127 1 343 1 32 1 111 1 10 1 348 2 276 1 190 1 64 1 353 1 236 2 218 3 378 3 
111 1 19 1 10 1 175 1 199 4 104 1 1 1 306 1 348 2 308 3 311 1 339 1 190 1 276 1 64 1 353 1 236 2 365 1 343 1 127 1 378 3 218 3 
175 1 308 1 218 1 378 1 349 1 64 1 
175 2 199 3 23 1 1 2 40 1 308 7 349 1 311 2 80 1 233 1 224 1 190 1 64 3 265 1 31 1 377 1 294 1 378 6 218 7 15 1 368 1 
53 1 199 1 153 1 337 1 245 2 247 1 294 1 162 1 295 2 252 1 211 1 113 1 254 2 64 1 67 1 301 3 218 1 173 2 220 1 72 1 175 1 308 1 311 1 26 1 79 6 29 2 266 1 86 4 319 2 87 2 183 2 322 2 89 1 271 1 324 1 274 1 373 2 374 1 190 1 94 1 328 1 378 1 238 1 278 2 279 3 333 1 379 1 
19 1 283 1 199 2 104 1 1 1 306 1 308 1 339 1 158 1 317 1 127 1 6 2 320 1 251 2 111 2 268 2 39 2 168 1 348 3 375 1 353 1 327 1 236 3 329 1 218 1 378 1 101 1 122 1 
175 1 199 2 104 1 269 1 308 2 349 1 311 1 190 1 64 2 294 1 378 2 218 2 15 1 
102 1 175 1 199 1 1 1 308 4 311 1 64 1 363 1 235 1 365 1 294 1 378 4 218 4 
10 1 175 1 199 1 152 1 308 2 311 1 80 1 233 1 190 1 64 2 244 1 246 1 378 2 218 2 
214 1 175 1 229 1 1 1 308 1 218 1 378 1 64 1 108 1 303 1 
175 1 199 1 75 1 308 2 311 1 64 1 377 1 294 1 378 2 218 2 368 1 
102 1 10 1 175 2 199 3 23 1 1 1 308 5 311 2 224 1 64 2 363 1 235 1 294 1 378 4 218 5 368 1 
102 1 10 1 175 2 199 3 1 1 308 5 311 2 224 1 64 2 363 1 235 1 294 1 378 4 218 5 281 1 368 1 
72 1 252 1 175 1 199 1 1 1 153 1 308 1 373 1 311 1 190 1 374 1 64 1 378 1 218 1 173 2 278 2 50 1 379 1 
10 1 175 1 199 1 308 1 311 1 80 1 233 1 190 1 64 2 31 1 378 1 218 1 15 1 
20 1 231 1 373 1 27 1 165 1 
20 1 90 1 231 2 306 1 77 1 348 2 107 1 373 1 339 1 27 2 203 1 353 1 156 1 290 1 236 2 118 1 329 1 182 1 165 2 
72 1 20 1 27 1 170 1 43 1 160 1 173 1 278 1 165 1 
20 1 107 1 182 1 
85 1 
208 1 241 1 315 1 0 1 180 1 250 1 177 1 
60 1 309 1 177 1 
208 1 241 1 0 1 304 1 372 2 256 1 3 1 362 1 177 3 315 3 180 1 250 1 
208 1 241 1 315 2 0 1 180 1 105 1 250 1 34 1 177 2 
208 1 132 1 0 1 241 1 369 1 362 1 108 1 177 1 315 1 214 1 237 1 
208 1 241 1 315 1 0 1 250 1 362 1 177 1 
208 1 315 1 0 1 180 1 250 2 362 1 177 1 
208 2 241 1 0 2 371 1 12 1 362 1 177 2 315 2 250 1 33 1 
208 1 0 1 241 2 369 1 105 2 362 1 177 3 315 3 180 1 65 1 215 1 250 1 346 1 
208 1 132 1 241 1 0 1 229 1 105 1 223 1 108 2 362 1 177 2 315 2 180 1 214 1 250 1 357 1 
208 2 0 2 241 2 369 1 105 2 362 1 177 4 315 4 180 1 96 1 250 1 34 1 346 1 
208 1 241 1 315 1 0 1 180 1 250 1 362 1 177 1 
208 1 0 1 241 3 304 1 369 1 105 2 372 1 256 1 177 4 342 1 315 4 180 2 250 2 346 1 
208 1 241 1 0 1 105 1 202 1 362 1 177 2 315 2 180 1 146 1 250 1 7 1 
208 1 241 1 0 1 36 1 304 1 372 2 256 2 362 1 177 3 315 3 180 1 250 1 
241 2 209 2 106 1 110 1 
208 1 315 1 0 1 230 1 362 1 177 1 
208 1 241 1 315 2 0 1 180 1 105 1 215 1 250 1 362 1 177 2 
260 1 
208 1 241 1 315 1 0 1 180 1 250 1 362 1 177 1 
208 1 0 1 241 1 105 1 372 1 362 1 177 3 315 3 180 1 215 1 250 1 
342 1 241 1 369 1 346 1 
241 1 250 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 199 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 48 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 30 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (173,250) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 149 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (251,320) (251,320) 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 4 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 275 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 275 81 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 257 97 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 272 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 272 297 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 77 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 77 248 169 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 77 248 169 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 77 248 13 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 272 297 188 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 272 297 188 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 77 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 199 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (251,320) (251,320) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (251,320) (251,320) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (251,320) (251,320) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 149 296 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 199 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 220 (241,307) 64 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 165 269 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 54 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (69,196) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (71,92) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (1,286) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z | OPERATOR | 4136 | && -> ||
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 941 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6370 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1674 | return null
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification; | RETURN | 587 | return null
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 758 | = null
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> -1
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
133 1 298 1 139 1 40 9 91 5 96 1 212 2 213 1 215 4 178 2 314 2 183 1 101 1 273 1 103 2 58 1 104 2 155 2 23 1 230 2 116 9 117 3 70 1 282 1 245 6 166 1 127 1 128 1 
133 1 298 1 139 1 40 9 91 5 96 1 212 2 213 1 215 4 178 2 314 2 183 1 101 1 273 1 103 2 58 1 104 2 155 2 23 1 230 2 116 9 117 3 70 1 282 1 245 6 166 1 127 1 128 1 
133 1 298 1 139 1 40 10 91 6 96 1 212 2 213 1 215 5 178 2 314 2 183 1 101 1 273 1 103 2 58 1 104 2 155 2 23 1 230 2 116 10 117 4 70 1 282 1 245 7 166 1 127 1 128 1 
133 1 298 1 40 7 91 4 96 1 212 2 213 1 215 3 178 1 314 2 183 1 101 1 273 1 103 2 58 1 104 2 155 2 23 1 230 2 116 7 117 2 70 1 282 1 245 4 166 1 127 1 128 1 
104 1 133 1 155 1 230 1 139 1 40 4 91 3 117 1 116 4 70 1 212 1 215 2 245 3 166 1 178 2 101 1 103 1 127 1 
104 1 23 1 230 1 109 1 40 2 91 1 116 2 29 1 70 1 285 1 212 1 166 1 314 1 273 1 103 1 127 1 
230 2 40 3 91 2 116 3 117 1 70 1 282 1 215 1 245 1 166 1 314 1 103 2 127 1 
133 1 298 1 40 9 139 1 91 5 45 1 145 1 212 1 215 4 178 2 314 1 101 1 103 2 104 1 155 1 230 2 117 3 116 9 70 1 282 1 245 7 166 1 127 1 128 1 
133 1 298 1 40 9 139 1 91 5 45 1 145 1 212 1 215 4 178 2 314 1 101 1 103 2 104 1 155 1 230 2 117 3 116 9 70 1 282 1 245 7 166 1 127 1 128 1 
199 1 
318 1 12 1 158 1 125 1 261 1 35 1 93 1 21 1 276 1 242 1 263 1 
318 1 65 1 158 1 261 1 93 1 263 1 242 1 98 1 125 1 21 1 82 1 276 2 
163 1 276 1 
163 1 276 1 
276 1 
163 1 276 1 
163 1 276 1 
163 1 42 1 34 1 335 1 224 1 276 2 
204 1 199 1 
225 1 204 2 65 1 158 2 261 2 98 1 53 1 21 2 82 1 
32 1 15 1 250 1 
1 1 204 1 105 1 168 1 301 1 114 1 261 1 175 1 281 1 10 1 325 2 51 1 180 1 331 1 17 1 20 1 102 2 21 1 223 2 
1 1 105 1 107 1 168 1 189 1 65 1 158 1 114 1 261 2 175 1 281 1 10 1 325 1 98 1 51 1 331 1 250 1 102 1 21 2 223 1 
225 1 204 1 106 1 107 2 189 1 65 4 159 1 158 5 261 5 12 1 98 4 56 1 21 5 82 1 
98 2 214 1 179 1 65 2 158 2 125 1 261 2 21 2 
204 1 107 1 98 3 65 3 158 3 261 3 21 3 82 1 
98 1 214 1 65 1 158 1 125 1 261 1 21 1 
225 1 98 1 53 1 65 1 158 1 125 1 261 1 21 1 82 1 
318 1 225 1 107 1 189 1 65 2 158 2 261 2 44 1 93 1 242 1 263 1 98 2 48 1 125 1 21 2 276 1 82 1 
204 1 12 1 106 1 107 1 98 1 65 1 158 2 261 2 21 2 
318 1 107 1 189 1 65 1 158 1 261 1 44 1 93 1 263 1 242 1 30 1 98 1 125 1 21 1 276 1 
225 1 107 1 98 2 15 1 65 2 158 2 250 1 261 2 21 2 82 1 
1 1 204 1 105 1 168 1 114 1 261 1 175 1 10 1 281 1 325 1 51 1 331 1 102 1 21 1 223 1 
152 1 204 1 105 1 168 1 261 1 92 1 175 1 10 1 281 1 325 1 51 1 331 1 102 1 21 1 223 1 
148 1 173 1 
98 1 179 1 65 1 158 1 125 1 261 1 21 1 242 1 
119 1 55 1 
119 1 55 1 
332 1 160 1 
332 1 160 1 
332 1 160 1 
119 1 110 1 55 1 
119 1 73 1 55 1 
119 2 300 1 16 1 55 2 332 1 160 1 
119 1 110 1 55 1 
119 1 110 1 55 1 
119 1 47 1 55 1 
119 1 47 1 55 1 
119 1 47 1 55 1 
62 1 187 1 138 1 65 1 158 1 261 1 143 1 119 1 149 1 98 1 287 1 246 1 55 1 21 1 276 1 
62 1 187 2 320 1 138 2 234 1 143 2 119 2 283 1 287 2 246 2 55 2 251 1 276 2 
104 1 212 1 155 1 
104 1 212 1 285 1 
104 3 63 1 155 2 285 1 66 1 79 1 
104 2 63 1 155 1 285 1 270 1 66 1 
104 2 63 2 155 1 285 1 66 1 
163 1 4 1 276 1 
163 1 247 1 276 1 
42 1 304 1 163 1 121 1 329 1 34 1 271 1 224 1 335 1 276 2 275 1 
304 1 42 1 121 1 329 1 34 1 271 1 81 1 224 1 335 1 275 1 276 1 
14 1 199 1 175 1 
244 1 175 1 
266 1 
331 1 175 1 281 1 
115 1 175 1 
175 1 281 1 
131 1 14 2 331 1 184 1 175 3 281 1 
36 2 253 1 279 3 231 1 137 2 86 1 235 3 43 1 322 1 243 1 265 1 193 4 176 1 123 7 80 1 59 1 186 1 
36 2 253 1 279 3 231 1 137 2 86 1 235 3 43 1 322 1 243 1 265 1 193 4 176 1 123 7 80 1 59 1 186 1 
36 2 253 1 279 3 231 1 86 1 137 2 235 3 43 1 322 1 243 1 11 1 265 1 193 4 176 1 123 7 80 1 59 1 186 1 
36 3 295 2 84 1 253 2 3 4 7 2 6 4 86 1 137 3 207 2 259 4 43 2 46 1 265 2 176 5 177 1 222 1 59 1 186 2 227 1 278 1 231 1 279 8 111 1 235 12 157 2 237 1 322 2 243 1 192 4 193 19 165 1 33 4 123 31 80 5 334 2 
36 3 295 2 253 1 231 1 279 4 6 4 7 2 86 1 137 2 235 4 157 1 207 2 43 1 322 1 265 1 193 5 176 1 99 1 76 1 123 9 80 1 59 1 334 2 186 1 
132 1 134 1 136 1 168 1 171 1 88 1 40 2 91 1 90 1 212 1 267 1 314 1 102 1 103 1 223 1 104 2 105 1 155 1 230 1 25 1 238 1 116 2 70 1 325 1 285 1 245 1 166 1 290 1 79 1 127 1 
132 1 134 1 136 1 168 1 88 1 40 3 91 1 90 1 212 1 267 1 314 1 102 1 103 1 223 1 104 2 105 1 277 1 155 1 230 1 24 1 232 1 25 1 116 3 70 1 325 1 285 1 245 2 290 1 79 1 127 1 
134 1 136 1 168 1 88 1 40 2 91 1 90 1 212 1 314 1 102 1 223 1 104 2 105 1 277 1 155 1 24 1 25 1 116 2 70 1 325 1 285 1 245 2 290 1 79 1 127 1 
153 1 105 1 168 1 135 1 136 2 229 1 230 1 8 1 232 1 88 2 40 1 190 1 112 1 90 2 175 1 116 1 281 1 10 1 325 1 314 2 103 1 102 1 223 1 
132 1 134 1 136 1 168 1 171 1 88 1 40 1 90 1 212 1 267 1 314 1 102 1 103 1 223 1 104 2 105 1 277 1 155 1 230 1 25 1 116 1 325 1 285 1 166 1 290 1 79 1 
233 1 
257 1 42 1 260 1 10 1 325 1 97 1 121 1 34 1 271 1 102 1 335 1 223 1 276 1 
318 1 203 1 38 1 158 1 141 1 261 1 93 1 242 1 263 1 12 1 272 1 125 1 252 1 35 1 316 1 21 1 276 2 
318 1 203 1 38 1 158 1 141 1 261 1 93 1 242 1 263 1 12 1 311 1 125 1 252 1 35 1 316 1 21 1 276 2 
318 1 297 1 203 1 38 1 158 1 141 1 261 1 93 1 242 1 263 1 12 1 272 1 125 1 252 1 35 1 316 1 21 1 276 2 
276 1 
203 1 170 1 38 1 206 1 42 1 260 1 141 1 261 1 93 1 263 1 12 1 52 1 316 1 150 1 21 1 276 2 318 1 156 1 158 1 242 1 121 1 77 1 34 1 35 1 252 1 125 1 335 1 
203 1 169 1 170 1 38 1 206 1 87 1 42 1 260 1 261 1 141 1 93 1 263 1 12 1 52 1 316 1 150 1 21 1 276 2 318 1 156 1 158 1 242 1 121 1 77 1 248 1 34 1 35 1 252 1 125 1 335 1 
203 1 169 1 170 1 38 1 206 1 87 1 42 1 260 1 261 1 141 1 93 1 263 1 12 1 52 1 316 1 150 1 21 1 276 2 318 1 156 1 158 1 242 1 121 1 77 1 248 1 34 1 35 1 252 1 125 1 335 1 
203 1 170 1 38 1 206 1 41 1 42 1 260 1 261 1 141 1 93 1 263 1 264 1 12 1 13 1 316 1 21 1 276 2 318 1 156 1 158 1 242 1 194 1 121 1 77 1 248 1 34 1 35 1 252 1 125 1 335 1 
318 1 297 1 203 1 188 1 38 1 158 1 141 1 261 1 93 1 242 1 263 1 12 1 272 1 125 1 252 1 35 1 316 1 21 1 276 2 
318 1 297 1 203 1 188 1 38 1 158 1 141 1 261 1 93 1 242 1 263 1 12 1 272 1 125 1 252 1 35 1 316 1 21 1 276 2 
203 1 170 1 38 1 206 1 41 1 42 1 260 1 141 1 261 1 93 1 263 1 12 1 316 1 21 1 276 2 318 1 156 1 158 1 242 1 194 1 121 1 77 1 34 1 35 1 252 1 125 1 335 1 
148 1 199 1 
295 2 204 1 2 1 3 2 7 2 6 4 207 2 259 3 43 1 9 1 46 1 15 3 176 1 268 2 312 1 222 1 22 1 279 1 111 1 235 6 192 2 193 8 32 11 122 1 165 1 33 3 330 1 200 1 123 14 250 11 80 2 334 2 
1 1 295 1 204 1 2 1 168 1 6 2 7 1 89 1 207 1 261 2 175 1 10 1 98 1 15 1 51 1 268 1 17 1 102 1 185 1 223 1 21 2 105 1 107 1 189 1 65 1 235 1 114 1 158 1 281 1 324 1 325 1 193 1 122 1 200 1 330 1 331 1 123 2 334 1 
1 2 2 1 168 2 3 2 7 3 6 6 86 1 261 3 175 2 10 1 265 1 98 1 15 5 268 3 102 1 21 3 186 1 105 2 107 1 189 1 108 2 279 2 114 2 281 2 192 2 193 10 32 6 122 3 200 1 123 18 36 2 295 3 204 2 39 1 137 1 207 3 43 2 307 2 309 2 51 2 222 1 59 1 223 1 60 2 231 1 235 8 65 1 236 1 158 1 325 1 327 2 330 1 331 2 250 6 80 3 334 3 
295 1 2 1 168 2 301 2 7 1 6 2 5 1 207 1 261 1 175 3 10 2 211 1 148 1 98 1 268 1 218 1 102 7 21 1 223 8 153 1 105 2 277 1 107 1 229 1 65 1 235 1 158 1 280 1 238 1 240 1 281 2 72 1 325 8 193 1 122 1 328 1 330 1 123 2 334 1 
295 1 3 1 7 1 6 2 207 1 261 1 98 1 268 1 21 1 225 1 65 1 158 1 192 1 193 1 122 1 200 1 289 1 123 1 80 1 334 1 82 1 
148 1 
148 1 
148 1 
295 1 0 1 279 1 6 2 7 1 207 1 240 1 192 1 193 2 32 1 122 1 176 1 15 1 268 1 123 2 250 1 80 1 334 1 
36 1 295 1 299 1 279 1 6 2 7 1 235 2 207 1 43 1 240 1 32 1 122 1 15 1 268 1 123 2 250 1 222 1 334 1 
295 1 3 1 6 2 7 1 207 1 240 1 192 1 193 2 32 1 122 1 15 1 268 1 123 2 250 1 80 1 334 1 
295 1 3 1 6 2 7 1 207 1 192 1 193 2 32 1 122 1 15 1 268 1 123 2 250 1 80 1 334 1 
1 1 295 1 204 1 2 1 168 1 6 2 7 1 207 1 261 1 175 1 10 1 51 1 268 1 102 1 223 1 21 1 105 1 235 1 114 1 281 1 325 1 193 1 327 1 122 1 330 1 331 1 123 2 334 1 
295 1 204 1 2 1 168 1 6 2 7 1 207 1 92 1 261 1 175 1 10 1 51 1 268 1 18 1 102 1 223 1 21 1 152 1 105 1 235 1 281 1 325 1 193 1 122 1 330 1 331 1 123 2 334 1 
295 1 3 1 6 2 7 1 207 1 192 1 193 2 32 1 122 1 15 1 268 1 200 1 123 2 250 1 80 1 334 1 
1 1 295 1 168 1 3 1 6 2 7 1 207 1 261 1 175 1 15 1 51 1 268 1 102 1 223 1 21 1 60 1 105 1 114 1 238 1 281 1 192 1 325 1 193 2 32 1 327 1 122 1 331 1 123 2 250 1 80 1 334 1 
295 1 3 1 7 1 6 2 207 1 43 1 261 1 98 1 268 1 222 1 21 1 225 1 235 1 65 1 158 1 192 1 193 2 32 1 122 1 198 1 200 1 123 3 80 1 250 1 334 1 82 1 
295 2 3 7 7 2 6 4 207 2 259 4 43 1 144 1 308 1 46 2 176 5 99 1 269 1 221 2 222 1 57 1 279 5 27 1 111 2 235 9 161 1 118 1 162 1 192 7 193 21 31 1 165 2 33 4 78 1 123 30 124 1 80 7 293 1 126 1 334 2 
295 1 3 2 7 1 6 2 207 1 259 2 43 1 144 1 308 1 310 1 99 1 269 1 221 2 222 1 57 1 27 1 235 7 161 2 118 2 162 1 192 2 193 9 31 1 165 2 33 2 78 1 123 16 80 2 124 1 334 1 
295 2 3 7 7 2 6 4 207 2 259 4 43 2 144 1 308 1 46 2 310 1 176 5 99 1 269 1 221 3 222 2 57 1 279 5 27 1 111 2 235 12 161 1 118 1 162 1 192 7 193 22 31 1 165 2 33 4 78 1 123 34 124 1 80 7 126 1 334 2 
295 2 3 7 7 2 6 4 207 2 259 4 43 2 144 1 308 1 46 2 310 1 176 5 99 1 269 1 221 3 222 2 57 1 279 5 27 1 111 2 235 12 161 1 118 1 162 1 192 7 193 22 31 1 165 2 33 4 78 1 123 34 124 1 80 7 126 1 334 2 
36 1 295 1 3 7 7 1 6 2 137 1 86 1 207 1 259 4 43 3 144 1 308 1 46 2 265 1 310 1 176 6 99 1 269 1 221 3 222 2 57 1 59 1 186 1 231 1 279 7 27 1 111 2 235 14 161 1 118 1 162 1 192 7 193 25 31 1 165 2 33 4 78 1 123 39 124 1 80 8 334 1 
255 1 138 1 143 1 119 1 287 1 246 1 55 1 288 1 19 1 274 1 
73 1 284 1 
119 1 154 1 75 1 246 1 287 1 138 1 55 1 143 1 294 1 
110 1 321 1 
146 1 300 1 47 1 
62 1 187 2 320 1 138 1 234 1 143 1 119 1 283 1 287 1 246 1 55 1 251 1 276 1 
62 1 187 2 320 1 138 1 234 1 143 1 119 1 283 1 287 1 246 1 55 1 251 1 276 1 
62 1 187 2 320 1 138 1 234 1 143 1 119 1 283 1 287 1 246 1 55 1 251 1 276 1 
300 1 110 1 321 1 
300 1 110 1 321 1 
146 1 47 1 
146 1 300 1 47 1 
140 1 292 1 
296 1 119 1 283 1 163 1 187 1 149 1 246 1 287 1 234 1 138 1 55 1 143 1 276 1 
295 1 2 1 168 1 301 2 6 2 7 1 5 1 85 1 207 1 208 1 261 2 175 1 306 1 268 1 102 2 317 1 223 2 21 2 105 1 26 1 235 1 158 2 281 1 325 2 193 1 122 1 328 1 200 1 330 1 123 2 334 1 
104 2 105 1 277 1 155 1 168 1 25 1 88 1 302 1 238 1 325 2 212 1 285 1 267 1 49 1 290 1 79 1 102 2 202 1 223 2 
104 2 105 1 277 1 155 1 168 1 25 1 88 1 325 1 212 1 285 1 267 1 49 1 100 1 290 1 79 1 102 1 223 1 
153 1 105 1 130 1 168 1 229 1 8 1 88 1 175 1 281 1 10 1 325 1 102 1 202 1 223 1 
104 2 105 1 277 1 155 1 168 1 25 1 88 1 302 1 325 1 212 1 285 1 267 1 49 1 290 1 79 1 102 1 202 1 223 1 
249 1 
196 1 206 1 199 1 69 1 
121 1 52 1 206 1 42 1 34 1 260 1 150 1 335 1 
105 2 131 1 168 1 64 1 42 1 260 1 175 2 241 1 281 1 10 1 325 1 121 1 244 1 216 1 220 1 331 1 34 1 271 1 102 1 335 1 223 1 
121 1 165 1 206 1 33 1 269 1 42 1 34 1 259 1 260 1 335 1 
206 1 87 1 42 1 260 1 210 1 265 1 121 1 54 1 34 1 80 1 335 1 59 1 276 1 186 1 
196 1 206 1 42 1 34 1 260 1 335 1 
192 1 3 1 206 1 80 1 
325 1 102 1 223 1 10 1 
121 1 206 1 42 1 34 1 271 1 260 1 209 1 335 1 
246 1 138 1 61 1 
217 1 246 1 138 1 219 1 140 1 
246 1 138 1 61 1 
246 1 138 1 61 1 
246 1 138 1 142 1 
246 1 138 1 142 1 
246 1 138 1 142 1 
246 1 138 1 
119 1 55 1 
36 2 295 2 279 3 6 4 7 2 231 1 137 1 86 1 235 4 207 2 157 1 43 1 265 1 193 4 176 1 123 8 80 1 59 1 334 2 186 1 
36 2 231 1 279 2 137 1 86 1 235 3 43 1 265 1 193 3 199 1 123 6 80 1 59 1 186 1 
295 1 3 1 6 2 7 1 207 1 192 1 193 2 74 1 123 2 80 1 334 1 
3 2 279 2 111 1 235 2 259 2 46 1 192 2 193 6 165 1 176 2 33 2 123 8 80 2 
36 6 295 2 3 2 6 4 7 2 137 1 86 1 207 2 259 2 43 3 46 1 265 4 176 6 54 1 312 1 59 2 186 4 227 1 279 12 231 1 111 1 235 13 157 2 192 2 193 16 33 2 123 29 80 5 334 2 
33 1 235 1 123 1 
193 1 123 1 259 1 
3 1 279 1 235 1 309 1 192 1 193 3 176 1 123 4 80 1 
295 1 3 2 7 1 6 2 207 1 259 1 176 1 99 1 269 1 57 1 279 1 27 1 235 2 162 1 192 2 193 6 165 1 33 1 123 8 80 2 124 1 334 1 
36 1 279 2 235 3 43 1 265 1 193 3 176 1 123 6 80 1 59 1 186 1 
36 1 227 1 295 1 279 2 6 2 7 1 231 1 86 1 235 2 157 1 207 1 265 1 193 1 176 1 123 3 334 1 186 1 
36 1 265 1 193 2 279 1 235 3 54 1 123 5 43 1 80 1 59 1 186 1 
295 1 6 2 7 1 279 1 207 1 192 1 193 2 176 1 99 1 123 2 80 1 334 1 
295 1 3 1 279 1 6 2 7 1 235 2 207 1 43 1 192 1 193 2 176 1 99 1 123 4 80 1 222 1 334 1 
227 1 295 3 36 1 6 6 7 3 279 2 235 2 157 1 207 3 265 1 193 1 176 1 99 1 123 3 126 1 334 3 186 1 
36 4 295 5 84 1 3 4 7 5 6 10 137 1 86 1 207 5 259 4 43 5 46 1 265 3 176 6 99 1 222 3 59 2 186 3 227 1 278 1 231 1 279 10 111 1 235 19 157 2 237 1 192 4 193 20 74 1 165 1 33 4 123 39 80 6 126 1 334 5 
295 1 36 2 7 1 6 2 137 1 86 1 207 1 259 1 43 1 265 1 99 1 269 1 59 1 186 1 231 1 279 2 235 4 193 4 165 1 33 1 123 8 80 1 334 1 
295 2 3 4 7 2 6 4 207 2 259 2 43 3 46 1 176 2 99 1 269 1 57 1 222 3 279 2 27 1 111 1 235 9 162 1 192 4 193 11 74 1 165 1 33 2 123 20 124 1 80 4 334 2 
295 2 3 2 7 2 6 4 207 2 259 1 176 1 99 1 269 1 57 1 279 1 27 1 235 2 162 1 192 2 193 6 74 1 165 1 33 1 123 8 80 2 124 1 334 2 
295 2 3 2 7 2 6 4 207 2 259 1 43 1 99 1 269 1 57 1 222 1 27 1 235 4 162 1 192 2 193 6 74 1 165 1 33 1 123 10 80 2 124 1 334 2 
295 1 36 2 7 1 6 2 137 1 86 1 207 1 259 1 43 1 265 1 99 1 269 1 59 1 186 1 231 1 279 2 235 4 193 4 165 1 33 1 123 8 80 1 334 1 
295 1 3 2 7 1 6 2 207 1 259 1 176 1 99 1 269 1 57 1 279 1 27 1 235 2 162 1 192 2 193 6 165 1 33 1 123 8 80 2 124 1 334 1 
295 2 3 2 7 2 6 4 207 2 259 1 43 1 99 1 269 1 57 1 222 1 27 1 235 4 162 1 192 2 193 6 74 1 165 1 33 1 123 10 80 2 124 1 334 2 
295 2 3 2 7 2 6 4 207 2 259 1 43 1 176 1 99 1 269 1 57 1 222 1 279 1 27 1 235 4 162 1 192 2 193 6 165 1 33 1 123 10 80 2 124 1 334 2 126 1 
36 3 231 1 279 6 86 2 235 4 43 1 265 3 193 3 176 3 123 7 80 1 59 1 186 3 
295 2 3 2 7 2 6 4 207 2 259 1 43 1 99 1 269 1 57 1 222 1 27 1 235 4 162 1 192 2 193 6 165 1 33 1 123 10 80 2 124 1 334 2 126 1 
204 1 12 1 106 1 228 1 158 1 261 1 21 1 
204 1 106 1 228 1 319 1 113 1 158 1 261 1 12 1 326 1 181 1 167 1 21 1 
153 1 105 1 325 1 168 1 229 1 199 1 175 1 102 1 223 1 281 1 10 1 
1 1 204 1 105 1 107 1 168 1 65 1 158 1 261 2 175 1 281 1 10 1 325 1 98 1 51 1 331 1 102 1 21 2 223 1 
1 1 204 1 168 1 305 1 261 2 175 3 93 1 98 2 51 1 102 1 223 1 21 2 105 1 107 1 65 1 158 2 115 1 281 2 242 1 325 1 197 1 331 2 125 1 
204 1 168 1 92 1 305 1 261 2 175 3 93 1 147 1 98 2 51 1 102 2 223 2 21 2 105 1 107 1 65 1 158 2 115 1 281 2 242 1 325 2 197 1 331 2 125 1 
71 1 325 1 244 1 305 1 175 1 102 1 223 1 276 1 
325 1 244 1 286 1 305 1 175 1 102 1 223 1 276 1 
105 1 72 1 325 1 168 1 102 1 223 1 
105 3 277 1 131 1 168 2 301 1 256 1 280 1 238 1 175 3 10 2 281 2 72 1 211 1 325 7 328 1 50 1 218 1 331 1 201 1 102 6 223 7 
36 2 295 2 1 1 204 2 168 1 6 4 7 2 137 1 86 1 207 2 208 1 43 1 261 2 175 1 307 1 265 1 98 1 15 1 51 1 268 2 102 1 59 1 21 2 223 1 186 1 60 1 105 1 107 1 279 2 231 1 235 3 65 1 158 1 114 1 238 1 281 1 325 1 193 3 32 1 122 2 327 1 200 1 331 1 123 6 250 1 80 1 334 2 
163 1 276 1 
105 2 131 1 168 1 238 1 175 2 281 1 72 1 325 2 14 1 216 1 331 1 102 2 223 2 
153 1 105 1 168 1 229 1 238 1 175 1 10 1 281 1 325 4 120 1 147 1 102 4 223 4 
105 2 168 1 256 1 174 1 305 1 175 1 281 1 325 2 164 1 195 1 331 1 201 1 102 2 223 2 
104 1 105 1 325 1 212 1 285 1 168 1 25 1 102 1 223 1 10 1 
105 1 277 1 168 1 238 1 175 1 281 1 325 2 328 1 102 2 223 2 317 1 
153 1 105 2 168 2 229 1 305 1 238 1 280 1 175 3 10 1 281 2 325 5 211 1 120 1 328 1 102 4 223 5 
153 1 105 2 168 2 229 1 305 1 238 1 175 3 10 1 323 1 281 2 325 5 211 1 120 1 328 1 102 4 223 5 
204 1 105 1 107 1 168 1 65 1 158 1 261 2 92 1 175 1 281 1 10 1 325 1 98 1 51 1 331 1 102 1 21 2 223 1 
105 2 131 1 168 1 256 1 305 1 175 1 281 1 325 1 50 1 331 1 201 1 102 1 223 1 
85 1 26 1 158 1 261 1 306 1 94 1 313 1 291 1 21 1 
129 1 205 1 313 1 
204 1 313 1 291 1 68 1 94 1 
318 1 129 1 204 1 205 1 303 1 44 1 93 1 68 2 242 1 94 2 263 1 163 1 313 1 291 2 125 1 276 2 
199 1 91 1 70 1 127 1 
230 1 40 1 91 1 116 1 103 1 70 1 127 1 
136 1 40 1 314 1 
95 1 23 2 254 1 230 1 166 1 40 3 182 1 91 1 116 3 103 1 70 1 127 1 
230 1 245 1 178 1 40 2 91 1 116 2 103 1 70 1 127 1 
104 1 155 1 230 1 40 1 91 1 116 1 212 1 215 1 166 1 101 1 103 1 
230 1 166 1 40 1 91 1 116 1 103 1 70 1 
230 1 166 1 40 1 116 1 103 1 70 2 127 1 
226 1 230 2 166 1 258 1 40 2 91 1 116 2 103 2 262 1 70 1 
298 1 230 1 40 3 91 2 116 3 117 1 70 1 215 1 245 2 166 1 103 1 127 1 128 1 
104 2 155 1 230 1 40 2 91 1 116 2 70 1 285 1 212 1 245 1 166 1 79 1 103 1 333 1 127 1 
230 2 40 4 139 1 91 2 116 4 117 1 70 1 215 1 245 2 166 1 178 1 103 2 127 1 
230 1 166 1 40 1 91 1 116 1 103 1 70 1 127 1 
23 1 254 1 230 1 40 4 67 1 91 3 116 4 117 1 70 2 95 1 215 1 245 2 103 1 127 2 
37 1 83 1 230 1 40 2 91 1 116 2 45 1 70 1 245 1 166 1 103 1 127 1 
95 1 23 2 254 2 230 1 166 1 40 3 91 1 239 1 116 3 103 1 70 1 127 1 
315 1 91 2 191 2 151 1 
230 1 166 1 28 1 40 1 116 1 103 1 
230 1 245 1 166 1 40 2 91 1 116 2 103 1 70 1 127 1 128 1 
172 1 
230 1 166 1 40 1 91 1 116 1 103 1 70 1 127 1 
23 1 230 1 245 1 166 1 40 3 91 1 116 3 103 1 128 1 70 1 127 1 
215 1 67 1 91 1 117 1 
91 1 70 1 

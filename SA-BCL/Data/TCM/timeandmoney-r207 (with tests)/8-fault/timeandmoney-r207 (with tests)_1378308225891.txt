#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 148 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 2411 | < -> ==
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4987 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4918 | > -> <
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 893 | = null
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | OPERATOR | 4163 | / -> %
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10082 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 3884 | return null
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1506 | if (x) -> if (!x)
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
228 6 150 1 67 2 281 1 108 1 197 9 283 2 202 1 330 1 233 2 71 1 333 4 288 1 292 1 96 2 114 2 141 1 249 2 161 1 162 1 269 9 315 1 83 3 348 5 252 2 318 1 172 1 125 1 
228 6 150 1 67 2 281 1 108 1 197 9 283 2 202 1 330 1 233 2 71 1 333 4 288 1 292 1 96 2 114 2 141 1 249 2 161 1 162 1 269 9 315 1 83 3 348 5 252 2 318 1 172 1 125 1 
228 7 150 1 67 2 281 1 108 1 197 10 283 2 202 1 330 1 233 2 71 1 333 5 288 1 292 1 96 2 114 2 141 1 249 2 161 1 162 1 269 10 315 1 83 4 348 6 252 2 318 1 172 1 125 1 
228 4 150 1 67 2 281 1 108 1 197 7 283 1 330 1 233 2 71 1 333 3 288 1 292 1 96 2 114 2 141 1 249 2 161 1 162 1 269 7 315 1 83 2 348 4 252 2 318 1 172 1 125 1 
228 3 150 1 114 1 67 1 197 4 283 2 161 1 202 1 162 1 269 4 233 1 71 1 83 1 315 1 333 2 348 3 252 1 96 1 
150 1 114 1 20 1 197 2 281 1 141 1 342 1 249 1 162 1 269 2 233 1 315 1 348 1 252 1 26 1 96 1 
228 1 150 1 197 3 249 1 162 1 269 3 315 1 83 1 333 1 348 2 252 2 318 1 96 2 
228 7 150 1 67 1 197 9 283 2 202 1 233 1 71 1 333 4 292 1 95 1 96 2 364 1 114 1 249 1 161 1 162 1 269 9 83 3 315 1 348 5 252 2 318 1 125 1 
228 7 150 1 67 1 197 9 283 2 202 1 233 1 71 1 333 4 292 1 95 1 96 2 364 1 114 1 249 1 161 1 162 1 269 9 83 3 315 1 348 5 252 2 318 1 125 1 
103 1 201 1 59 1 
6 1 
154 2 279 2 87 1 186 1 41 2 42 2 239 2 291 2 
279 2 87 1 41 2 42 2 355 1 1 1 44 1 231 1 70 1 22 1 204 1 206 1 235 1 154 3 285 1 307 1 48 2 239 3 238 1 264 2 291 2 136 1 98 1 186 1 296 1 52 2 244 1 368 1 218 2 369 2 370 1 120 1 84 1 121 1 63 1 278 1 19 1 
154 1 279 1 87 1 41 1 42 1 286 1 239 1 282 1 291 1 352 1 
246 1 102 1 201 1 59 1 191 1 154 1 23 1 223 1 239 1 155 1 50 1 65 1 291 1 352 1 
279 1 42 1 41 1 102 1 201 1 59 1 191 1 154 1 23 1 239 1 155 2 65 2 50 1 291 1 352 1 
113 1 155 1 65 1 40 1 51 1 
113 1 155 2 65 2 201 1 343 1 3 1 40 1 59 1 
113 1 155 1 65 1 
279 1 87 1 42 1 41 1 282 1 110 1 154 1 286 1 239 1 155 1 65 1 291 1 40 1 352 1 
201 1 
113 1 155 2 143 1 65 2 201 1 343 1 40 1 59 1 
298 1 257 1 200 1 201 1 190 1 343 1 232 1 58 1 261 1 119 1 59 1 331 2 132 2 113 2 155 5 65 5 184 2 137 1 40 2 
279 1 41 1 52 1 244 1 266 1 1 1 367 1 204 1 235 1 154 2 369 1 285 1 120 1 48 1 63 1 239 2 136 1 291 1 278 1 209 1 
186 1 103 1 
279 1 42 1 41 1 186 2 260 1 154 2 239 2 64 1 291 2 
314 1 308 1 209 1 
186 1 52 1 244 1 1 1 204 1 235 1 154 1 369 1 285 1 120 1 48 1 63 1 239 1 360 1 278 1 136 1 
154 3 279 3 42 1 186 1 41 3 239 3 367 1 291 3 
154 1 279 1 41 1 286 1 239 1 291 1 352 1 
154 1 279 1 41 1 42 1 239 1 64 1 291 1 260 1 352 1 
279 3 87 1 42 2 41 3 355 1 1 1 44 1 70 1 22 1 204 1 206 1 235 1 154 4 285 1 23 1 307 1 48 1 238 1 239 4 361 1 155 1 289 1 50 1 264 2 136 1 291 3 98 1 186 1 296 1 52 1 244 1 266 1 367 1 102 1 218 1 191 1 369 1 120 1 121 1 63 1 64 1 65 1 278 1 352 1 
154 2 279 1 186 1 41 1 223 1 239 2 367 1 226 1 291 2 
279 3 42 1 41 3 311 1 266 1 367 2 102 1 201 1 191 1 154 3 23 1 64 1 239 3 155 1 65 1 289 1 50 1 291 3 352 1 
279 2 42 1 41 2 367 1 314 1 154 2 64 1 239 2 291 2 209 1 
186 1 52 1 244 1 1 1 204 1 235 1 154 1 369 1 285 1 120 1 48 1 63 1 239 1 278 1 136 1 
186 1 52 1 244 1 176 1 1 1 204 1 235 1 154 1 369 1 274 1 120 1 48 1 63 1 239 1 136 1 
323 1 44 1 70 2 22 1 90 1 206 1 72 1 91 1 335 1 307 1 237 1 25 1 308 2 264 2 209 2 98 1 185 1 297 1 247 1 368 2 218 4 144 1 314 2 121 1 
154 1 279 1 41 1 239 1 230 1 50 1 291 1 352 1 
279 4 41 4 42 1 186 1 266 1 367 2 154 5 223 1 239 5 64 1 122 1 171 1 226 1 291 5 
154 2 279 2 41 2 286 1 239 2 230 1 291 2 352 1 
220 1 97 1 
220 1 97 1 
0 1 213 1 
0 1 213 1 
0 1 213 1 
7 1 220 1 97 1 
189 1 220 1 97 1 
0 1 213 1 2 1 267 1 220 2 97 2 
7 1 220 1 97 1 
7 1 220 1 97 1 
325 1 220 1 97 1 
325 1 220 1 97 1 
325 1 220 1 97 1 
99 1 321 3 309 1 250 1 2 1 201 1 220 2 145 2 208 2 130 1 11 2 24 1 300 2 155 2 65 2 253 1 363 2 18 1 97 2 
279 2 321 1 41 2 208 1 154 2 239 2 155 1 291 2 363 1 97 1 295 1 186 1 76 1 250 1 189 1 344 1 163 1 220 1 145 1 11 1 38 1 372 1 350 1 65 1 
114 1 67 1 233 1 
114 1 20 1 233 1 
129 1 100 1 67 2 20 1 293 1 233 3 
129 1 100 1 67 1 20 1 68 1 233 2 
129 2 100 1 67 1 20 1 233 2 
354 1 43 1 257 1 198 2 201 2 306 1 232 2 331 1 91 1 335 1 132 1 4 1 113 1 6 3 155 5 184 1 29 1 336 2 74 1 185 1 298 3 188 1 343 1 163 1 144 1 59 1 37 1 38 1 251 2 350 1 65 5 40 4 
43 3 257 1 89 1 201 5 232 6 261 1 153 5 332 1 331 2 91 3 335 3 287 1 132 2 4 3 113 6 6 9 155 9 184 2 290 1 29 2 336 6 51 5 74 2 185 3 298 8 343 1 144 3 59 1 38 4 37 1 317 1 251 6 39 1 65 9 40 7 
43 1 198 1 201 3 306 1 232 2 261 1 331 1 91 1 335 1 132 1 4 2 155 3 6 4 184 1 29 1 336 2 74 1 185 1 298 3 188 1 59 1 144 1 38 1 251 2 65 3 40 2 
43 2 198 2 201 4 306 1 232 4 261 1 332 1 331 1 91 2 335 2 287 1 132 1 4 3 6 7 155 4 184 1 290 1 29 1 336 4 74 1 185 2 298 5 188 1 59 1 144 2 38 2 251 4 65 4 40 3 
236 1 103 1 204 1 
14 1 204 1 
302 1 
120 1 204 1 
236 2 75 1 120 1 244 1 204 3 353 1 
120 1 244 1 204 1 
243 1 204 1 
280 1 297 2 366 1 368 4 55 1 178 1 70 3 179 1 118 1 218 7 90 3 144 1 270 1 335 1 182 1 210 2 320 1 
280 1 297 2 366 1 368 4 55 1 178 1 70 3 179 1 118 1 218 7 90 3 144 1 270 1 335 1 182 1 210 2 320 1 
280 1 297 2 366 1 368 4 55 1 178 1 70 3 179 1 118 1 218 7 90 3 144 1 270 1 181 1 335 1 182 1 210 2 320 1 
322 1 140 1 216 1 368 2 178 2 118 1 218 4 70 2 192 1 148 1 93 1 210 1 294 1 
322 1 280 1 44 1 178 1 179 1 70 5 22 1 90 5 206 1 335 2 182 1 264 2 242 1 210 1 98 1 366 1 297 3 368 6 33 1 55 2 218 11 118 1 144 2 270 1 193 1 
228 1 174 1 150 1 67 1 20 1 197 2 256 1 177 1 1 1 233 2 48 1 5 1 136 1 293 1 96 1 114 1 158 1 52 1 159 1 160 1 249 1 9 1 217 1 162 1 269 2 369 1 315 1 60 1 348 1 252 1 
173 1 228 2 174 1 150 1 67 1 20 1 197 3 256 1 177 1 1 1 233 2 48 1 5 1 136 1 293 1 96 1 114 1 52 1 160 1 249 1 9 1 217 1 162 1 269 3 164 1 369 1 60 1 348 1 252 1 301 1 
173 1 228 2 174 1 150 1 20 1 67 1 197 2 256 1 1 1 233 2 48 1 136 1 293 1 114 1 52 1 160 1 249 1 9 1 217 1 162 1 269 2 369 1 60 1 348 1 301 1 
197 1 256 2 1 1 199 1 204 1 235 1 46 1 207 1 48 1 136 1 96 1 310 1 52 1 160 2 249 2 9 2 269 1 56 1 164 1 369 1 120 1 252 1 17 1 
173 1 174 1 67 1 20 1 197 1 256 1 177 1 1 1 233 2 48 1 5 1 136 1 293 1 96 1 114 1 158 1 52 1 160 1 249 1 9 1 217 1 269 1 369 1 315 1 60 1 252 1 
248 1 
66 1 257 1 1 2 199 1 203 1 204 2 232 1 235 2 331 1 48 2 132 1 113 2 155 2 184 1 136 3 211 1 74 1 52 2 244 1 298 1 343 1 219 1 369 2 167 1 120 2 12 1 65 2 16 1 17 1 
154 1 23 1 113 2 239 1 155 3 50 1 291 1 338 2 187 1 246 1 215 1 77 1 78 1 102 1 79 1 143 1 343 1 191 1 275 1 223 1 65 3 352 1 
201 1 154 1 23 1 113 1 239 1 155 3 50 1 291 1 338 3 187 1 246 1 215 1 78 1 102 1 79 1 143 1 343 1 191 1 59 1 271 1 275 1 223 1 65 3 352 1 
201 1 154 1 23 1 113 2 239 1 155 3 50 1 291 1 338 3 187 1 246 1 215 1 77 1 78 1 102 1 54 1 143 1 79 1 343 1 191 1 59 1 271 1 275 1 223 1 65 3 352 1 
107 1 175 1 109 1 257 1 201 5 205 2 232 1 329 1 331 1 154 1 23 1 132 1 4 2 113 7 239 1 155 5 184 1 50 1 28 1 135 1 291 1 338 6 187 1 298 1 246 1 215 1 77 4 78 1 102 1 54 4 79 1 143 1 343 3 59 5 191 1 271 4 168 2 346 1 222 2 275 1 223 1 65 5 194 2 352 1 
232 1 329 1 331 1 132 1 4 2 239 1 6 2 50 1 184 1 135 1 291 1 338 4 187 1 246 1 298 1 102 1 54 2 343 2 191 1 59 1 65 4 194 2 352 1 257 1 201 1 205 2 154 1 23 1 113 4 155 4 215 1 77 2 78 1 79 1 271 2 168 2 36 1 275 1 222 2 223 1 
175 1 107 1 109 1 257 1 201 1 205 2 232 1 329 1 331 1 154 1 23 1 132 1 113 4 4 2 239 1 155 4 50 1 184 1 135 1 291 1 338 4 187 1 298 1 246 1 77 2 215 1 54 2 78 1 102 1 79 1 343 2 59 1 191 1 271 2 168 2 222 2 275 1 223 1 65 4 194 2 352 1 
175 1 107 1 109 1 257 1 201 1 205 2 232 1 329 1 331 1 154 1 23 1 132 1 113 4 4 2 239 1 155 4 50 1 184 1 135 1 291 1 338 4 187 1 298 1 246 1 77 2 215 1 54 2 78 1 102 1 79 1 343 2 59 1 191 1 271 2 168 2 222 2 275 1 223 1 65 4 194 2 352 1 
109 1 257 1 201 1 205 2 232 1 329 1 180 1 331 1 154 1 23 1 132 1 113 4 239 1 6 2 155 4 50 1 184 1 73 1 291 1 338 4 187 1 298 1 246 1 77 2 215 1 54 2 78 1 102 1 79 1 343 2 59 1 191 1 271 2 345 2 222 2 275 1 223 1 85 1 65 4 352 1 149 2 
107 1 175 1 109 1 257 1 201 1 205 2 232 1 329 1 331 1 154 1 23 1 132 1 4 2 113 5 239 1 155 4 184 1 50 1 28 1 135 1 291 1 338 5 187 1 298 1 246 1 215 1 77 3 78 1 102 1 54 3 79 1 343 2 59 1 191 1 271 3 168 2 222 2 275 1 223 1 65 4 194 2 352 1 
107 1 175 1 109 1 257 1 201 1 205 2 232 1 329 1 331 1 154 1 23 1 132 1 4 2 113 5 239 1 155 4 184 1 50 1 28 1 135 1 291 1 338 5 187 1 298 1 246 1 215 1 77 3 78 1 102 1 54 3 79 1 343 2 59 1 191 1 271 3 168 2 222 2 275 1 223 1 65 4 194 2 352 1 
257 1 205 1 232 1 329 1 180 1 331 1 154 1 23 1 132 1 239 1 6 1 155 2 184 1 50 1 291 1 338 2 187 1 298 1 246 1 215 1 78 1 102 1 79 1 191 1 36 1 222 1 275 1 223 1 65 2 352 1 149 1 
280 1 44 1 179 1 70 3 22 1 90 2 206 1 307 1 335 1 25 1 308 1 182 1 264 2 209 1 210 1 98 1 186 2 366 1 297 2 368 3 218 6 270 1 144 1 314 1 121 1 103 1 
86 2 43 4 44 2 70 9 90 4 22 2 206 2 359 2 91 4 307 1 335 4 308 16 264 4 94 1 294 1 209 16 98 2 140 4 185 2 186 1 296 1 297 2 368 13 55 2 312 1 218 22 144 2 314 6 35 1 192 4 370 1 316 1 121 2 
279 1 41 1 1 1 326 1 44 1 111 1 70 1 204 1 22 1 235 1 206 1 154 2 285 1 307 1 48 1 239 2 360 1 94 1 264 2 136 1 291 1 98 1 186 1 52 1 296 1 244 1 245 1 266 1 367 1 368 1 218 2 369 1 314 1 370 1 120 1 121 1 63 1 278 1 
173 1 279 1 280 1 41 1 43 2 1 2 44 3 179 1 90 8 235 1 285 2 91 2 335 3 48 3 182 1 239 3 238 2 94 1 291 1 136 2 98 3 185 2 186 2 296 1 52 3 297 4 244 2 55 4 144 3 63 2 15 2 196 2 151 1 70 10 22 3 204 2 206 3 154 3 307 3 308 7 27 1 264 6 362 2 210 1 209 7 366 1 266 1 367 1 368 10 218 20 313 1 82 2 270 1 369 3 314 7 370 1 120 2 121 3 278 2 
173 1 279 1 41 1 127 1 1 2 44 2 231 2 199 1 70 1 204 3 22 2 235 2 206 2 154 1 307 2 25 1 48 7 239 1 241 1 264 4 291 1 136 2 8 1 98 2 31 1 52 8 296 1 159 1 101 1 367 1 368 1 218 2 165 1 369 8 370 1 120 2 121 2 225 1 17 1 
279 1 41 1 42 1 356 1 43 1 44 1 70 2 90 1 22 1 206 1 154 1 91 1 307 1 335 1 308 1 239 1 264 2 94 1 291 1 209 1 98 1 185 1 297 1 368 1 218 3 144 1 314 1 121 1 64 1 
98 1 247 1 44 1 368 2 55 1 218 2 90 1 22 1 206 1 314 1 91 1 307 1 335 1 121 1 308 1 25 1 264 2 209 1 
98 1 323 1 185 1 297 1 44 1 218 2 70 2 90 1 22 1 206 1 144 1 314 1 307 1 121 1 308 1 25 1 264 2 209 1 
43 1 44 1 70 2 22 1 90 2 206 1 91 1 335 1 307 1 25 1 308 2 264 2 209 2 98 1 185 1 297 1 368 2 55 1 218 4 144 1 314 2 121 1 
98 1 127 1 247 1 44 1 368 2 55 1 218 2 90 1 22 1 206 1 314 1 91 1 307 1 335 1 121 1 308 1 264 2 209 1 
98 1 323 1 185 1 297 1 127 1 44 1 218 2 70 2 90 1 22 1 206 1 144 1 314 1 307 1 121 1 308 1 264 2 209 1 
127 1 43 1 44 1 70 2 22 1 90 2 206 1 91 1 335 1 307 1 308 2 264 2 209 2 98 1 185 1 297 1 368 2 55 1 218 4 144 1 314 2 121 1 
98 1 185 1 297 1 43 1 44 1 368 2 55 1 70 2 218 4 90 2 22 1 144 1 206 1 314 2 91 1 307 1 335 1 121 1 308 2 264 2 209 2 
1 1 44 1 70 1 204 1 22 1 235 1 206 1 154 1 285 1 307 1 48 1 238 1 239 1 264 2 136 1 98 1 186 1 52 1 296 1 244 1 368 1 218 2 369 1 370 1 120 1 121 1 63 1 278 1 
176 1 1 1 44 1 70 1 204 1 22 1 235 1 206 1 154 1 358 1 307 1 48 1 239 1 264 2 136 1 98 1 186 1 52 1 296 1 244 1 368 1 218 2 369 1 370 1 120 1 274 1 121 1 63 1 
43 1 44 1 70 2 22 1 90 2 206 1 91 1 335 1 307 1 308 2 264 2 94 1 209 2 98 1 185 1 297 1 368 2 55 1 218 4 144 1 314 2 121 1 
43 1 1 1 44 1 70 2 90 2 204 1 22 1 206 1 154 1 285 1 91 1 335 1 307 1 308 2 48 1 238 1 239 1 264 2 136 1 209 2 98 1 185 1 52 1 297 1 244 1 159 1 368 2 55 1 218 4 144 1 314 2 369 1 120 1 121 1 63 1 15 1 278 1 
279 1 41 1 42 1 43 1 44 1 70 1 90 1 22 1 206 1 154 1 91 1 307 1 335 1 308 1 239 1 264 2 94 1 291 1 209 1 98 1 185 1 368 2 55 1 117 1 218 3 144 1 314 1 121 1 64 1 
86 1 195 1 322 2 255 1 126 3 305 1 43 5 44 2 327 1 70 17 90 6 22 2 128 1 206 2 262 1 359 1 131 1 334 1 91 5 335 5 47 1 134 1 264 4 337 1 294 3 30 2 156 1 98 2 140 4 185 4 297 2 368 19 55 4 218 36 57 1 144 4 192 4 193 1 
195 1 322 2 255 1 126 2 305 1 43 3 44 2 327 1 70 12 90 3 22 2 128 1 206 2 262 1 334 1 91 3 335 3 47 1 134 1 264 4 337 1 294 2 30 1 156 1 98 2 140 2 185 3 297 1 368 12 55 2 218 24 57 1 144 3 192 2 193 1 
195 1 322 2 255 1 126 2 305 1 43 3 44 1 327 1 70 12 90 4 22 1 128 1 206 1 262 1 334 1 91 3 335 3 47 1 134 1 264 2 294 2 30 1 156 1 98 1 140 2 185 3 297 2 368 12 55 2 218 24 57 1 144 3 192 2 193 1 
195 1 322 2 126 2 305 1 43 3 44 2 327 1 70 12 90 3 22 2 128 1 206 2 262 1 334 1 91 3 335 3 47 1 134 1 264 4 337 1 294 2 30 1 156 1 98 2 140 2 185 3 297 1 368 12 55 2 218 24 57 1 144 3 192 2 193 1 123 1 
86 2 195 1 322 2 255 1 126 2 305 1 43 6 44 1 327 1 70 18 90 6 22 1 128 2 206 1 262 1 334 1 359 2 91 6 335 6 47 1 134 1 264 2 30 2 156 1 294 2 98 1 140 4 185 5 297 3 368 20 55 3 218 38 57 1 144 5 192 4 193 1 
208 1 130 1 11 1 24 1 2 1 363 1 254 1 220 1 145 1 97 1 
76 1 189 1 
208 1 272 1 11 1 341 1 80 1 363 1 220 1 145 1 97 1 
99 1 321 2 309 1 250 1 2 1 201 1 220 1 145 1 208 1 130 1 11 1 24 1 300 1 155 1 65 1 253 1 363 1 97 1 
99 1 321 2 309 1 250 1 2 1 201 1 220 1 145 1 208 1 130 1 11 1 24 1 300 1 155 1 65 1 253 1 363 1 97 1 
99 1 321 2 309 1 250 1 2 1 201 1 220 1 145 1 208 1 130 1 11 1 24 1 300 1 155 1 65 1 253 1 363 1 97 1 
273 1 267 1 7 1 
273 1 267 1 7 1 
325 1 142 1 
325 1 142 1 267 1 
295 1 372 1 
279 2 321 1 41 2 154 2 208 1 239 2 155 1 291 2 363 1 97 1 309 1 295 1 186 1 76 1 189 1 344 1 163 1 220 1 145 1 11 1 38 1 372 1 221 1 350 1 300 1 65 1 40 1 
273 1 7 1 
325 1 142 1 267 1 
1 1 259 1 44 1 231 2 328 1 70 1 204 1 112 1 22 1 206 1 154 2 307 1 48 2 239 2 94 1 264 2 136 1 291 2 8 1 98 1 31 1 52 2 296 1 368 1 218 2 369 2 370 1 120 1 121 1 373 1 170 1 
173 1 174 1 114 1 265 1 67 1 20 1 52 2 159 1 177 1 1 1 160 1 217 1 233 2 369 2 146 1 48 2 136 1 293 1 124 1 
173 1 174 1 114 1 67 1 20 1 52 1 177 1 160 1 1 1 217 1 233 2 369 1 48 1 136 1 293 1 319 1 124 1 
52 1 229 1 1 1 160 1 199 1 204 1 235 1 369 1 207 1 146 1 120 1 48 1 136 1 17 1 
173 1 174 1 114 1 265 1 67 1 20 1 52 1 177 1 160 1 1 1 217 1 233 2 369 1 146 1 48 1 136 1 293 1 124 1 
115 1 
298 1 103 1 201 1 232 1 137 1 58 1 59 1 
257 1 201 1 232 1 331 1 132 1 4 1 113 1 6 1 155 1 184 1 135 1 298 1 343 1 59 1 168 1 65 1 194 1 
196 1 324 1 43 1 257 2 258 1 1 1 232 3 204 4 152 1 235 1 331 2 236 1 91 1 335 1 48 1 132 2 113 2 6 2 155 2 184 2 136 2 336 2 74 1 157 1 75 1 52 1 244 1 298 2 116 1 343 1 34 1 191 1 369 1 120 1 347 1 251 2 14 2 65 2 
86 1 305 1 257 1 43 4 327 1 232 7 331 1 262 1 359 1 91 4 335 4 132 1 6 5 184 1 134 1 336 8 294 1 140 2 185 4 298 11 57 1 144 4 192 2 251 8 
279 1 87 1 107 1 42 1 41 1 357 1 257 1 282 1 110 1 179 1 232 2 331 1 154 1 335 2 286 1 132 1 239 1 155 1 184 1 242 1 291 1 138 2 366 1 298 2 270 1 144 1 65 1 352 1 
298 1 257 1 201 1 232 1 58 1 331 1 59 1 132 1 184 1 137 1 
185 1 298 2 43 1 201 2 232 2 144 1 91 1 335 1 251 2 4 2 6 4 336 2 
113 1 155 1 65 1 201 1 343 1 59 1 
66 1 257 1 1 2 199 1 203 1 69 1 204 2 232 1 331 1 235 2 132 1 48 2 113 2 155 1 184 1 136 3 211 1 74 1 52 2 244 1 298 1 343 1 219 1 369 2 167 1 120 2 12 1 65 1 16 1 17 1 
279 2 87 1 41 2 42 2 355 1 1 1 44 1 70 1 22 1 204 1 235 1 206 1 154 3 285 1 307 1 48 1 239 3 238 1 264 2 291 2 136 1 98 1 186 1 296 1 52 1 244 1 218 1 369 1 120 1 121 1 63 1 278 1 
74 1 66 1 298 1 257 1 201 1 232 1 331 1 59 1 132 1 6 1 184 1 336 1 
11 1 349 1 145 1 
130 1 295 1 11 1 49 1 145 1 
11 1 349 1 145 1 
11 1 349 1 145 1 
11 1 45 1 145 1 
11 1 45 1 145 1 
11 1 45 1 145 1 
11 1 145 1 
220 1 97 1 
322 1 305 1 43 2 44 1 327 1 70 4 22 1 90 2 206 1 262 1 91 2 335 2 134 1 264 2 294 1 98 1 140 1 185 1 297 1 368 7 55 1 218 11 57 1 144 1 192 1 193 1 
322 1 305 1 43 2 44 2 327 1 70 4 22 2 90 2 206 2 262 1 91 2 335 2 134 1 264 4 294 1 98 2 140 1 185 1 297 1 368 7 55 1 218 11 57 1 144 1 192 1 193 1 104 1 
86 1 322 1 305 1 43 4 44 2 327 1 70 12 22 2 90 4 206 2 262 1 359 1 91 4 335 4 134 1 264 4 294 1 98 2 140 2 185 4 297 2 368 11 55 2 218 23 57 1 144 4 192 2 193 1 104 1 
86 1 322 1 305 1 43 4 44 2 327 1 70 9 22 2 90 4 206 2 262 1 359 1 91 4 335 4 134 1 264 4 294 1 98 2 140 2 185 3 297 2 368 12 55 2 218 21 57 1 144 3 192 2 193 1 104 1 
322 1 305 1 43 2 44 1 327 1 70 4 22 1 90 2 206 1 262 1 91 2 335 2 134 1 264 2 294 1 98 1 140 1 185 1 297 1 368 7 55 1 218 11 57 1 144 1 192 1 193 1 
86 1 305 1 43 4 44 1 327 1 70 11 22 1 90 4 206 1 262 1 359 1 91 4 335 4 134 1 264 2 294 1 98 1 140 2 185 4 297 2 368 11 55 2 218 22 57 1 144 4 192 2 193 1 
86 1 322 2 305 1 43 4 44 2 327 1 70 10 22 2 90 4 206 2 262 1 359 1 91 4 335 4 134 1 264 4 294 1 98 2 140 2 185 3 297 2 368 12 55 2 218 22 57 1 144 3 192 2 193 1 104 1 
43 1 44 2 70 4 22 2 90 1 206 2 262 1 359 1 91 1 335 1 264 4 294 1 337 1 98 2 140 2 185 1 297 1 368 3 218 7 144 1 192 1 193 1 
280 2 366 3 297 3 368 3 55 3 70 4 218 7 179 3 90 6 144 1 270 1 335 1 182 1 
43 1 44 2 70 4 22 2 90 1 206 2 262 1 359 1 91 1 335 1 264 4 294 1 337 1 98 2 140 2 185 1 297 1 368 3 218 7 144 1 192 1 193 1 
322 1 280 1 44 1 179 1 70 5 22 1 90 4 206 1 335 2 182 1 264 2 242 1 98 1 366 1 297 2 368 5 55 2 218 10 270 1 144 2 
280 1 366 1 297 2 368 3 70 3 179 1 218 6 90 2 270 1 144 1 335 1 103 1 182 1 210 1 
98 1 185 1 297 1 43 1 44 1 368 2 55 1 70 2 218 4 90 2 22 1 144 1 206 1 91 1 335 1 104 1 264 2 
86 1 140 2 185 2 297 1 43 2 368 6 55 1 70 6 218 12 90 2 144 2 192 2 359 1 91 2 335 2 294 1 
86 1 322 1 280 1 43 2 179 1 70 10 90 5 91 2 359 1 335 4 182 1 242 1 140 2 185 2 366 1 297 3 368 10 55 2 218 20 312 1 270 1 144 4 192 2 
140 1 218 1 70 1 
192 1 368 1 218 1 
98 1 196 1 185 1 297 2 43 1 44 1 368 3 55 1 70 3 218 6 22 1 90 3 206 1 144 1 91 1 335 1 104 1 264 2 
86 1 305 1 43 4 44 1 327 1 70 11 22 1 90 4 206 1 262 1 359 1 91 4 335 4 134 1 264 2 294 1 98 1 140 2 185 4 297 2 368 11 55 2 218 22 57 1 144 4 192 2 193 1 
366 1 297 1 368 3 55 1 218 6 70 3 179 1 90 2 270 1 144 1 335 1 
322 1 93 1 218 1 70 1 
98 1 366 2 297 3 44 1 368 5 55 2 179 2 218 10 70 5 22 1 90 5 206 1 270 1 144 2 335 2 193 1 264 2 242 1 
98 1 44 1 368 2 55 1 218 2 22 1 90 1 206 1 91 1 335 1 193 1 264 2 
98 1 185 1 297 1 43 1 44 1 368 2 55 1 70 2 218 4 90 2 22 1 144 1 206 1 91 1 335 1 193 1 264 2 
98 2 322 1 366 1 297 1 44 2 368 1 55 1 70 2 218 3 179 1 22 2 90 2 206 2 93 1 193 1 264 4 337 1 
322 1 280 1 44 3 179 1 70 7 90 4 22 3 206 3 335 2 93 1 182 1 264 6 242 1 294 1 337 1 98 3 140 1 297 2 366 1 216 1 368 6 55 2 218 13 144 2 270 1 192 1 193 1 104 1 
154 1 186 1 53 1 239 1 223 1 291 1 226 1 
365 1 186 1 21 1 53 1 10 1 154 1 223 1 239 1 13 1 240 1 226 1 291 1 
369 1 120 1 52 1 48 1 103 1 1 1 199 1 136 1 17 1 204 1 235 1 
279 1 186 1 41 1 52 1 244 1 1 1 367 1 204 1 235 1 154 2 369 1 285 1 120 1 48 1 63 1 239 2 136 1 291 1 
279 2 41 1 1 1 204 3 154 2 285 1 48 1 239 2 50 1 263 1 243 1 291 2 136 1 139 1 186 1 52 1 244 2 367 1 102 1 369 1 120 2 63 1 352 1 
279 2 41 1 176 1 1 1 204 3 154 2 48 2 239 2 50 1 263 1 243 1 291 2 136 1 139 1 186 1 52 2 244 2 367 1 102 1 369 2 120 2 63 1 351 1 352 1 
139 1 52 3 244 1 1 1 201 1 204 4 235 1 59 1 191 1 369 3 236 1 120 1 147 1 48 3 113 1 224 1 155 2 14 1 263 1 65 2 243 1 136 1 351 1 
139 1 157 1 52 3 244 1 1 1 201 1 204 4 235 1 59 1 191 1 369 3 236 1 120 1 48 3 113 1 155 2 14 1 263 1 65 2 243 1 136 1 351 1 
369 1 52 1 48 1 1 1 241 1 136 1 
173 1 75 1 31 1 52 7 244 1 159 1 101 1 1 2 231 1 204 3 219 1 165 1 235 2 369 7 166 1 120 2 12 1 48 6 225 1 241 1 136 3 
279 1 280 1 41 1 1 1 44 2 179 1 90 2 285 1 335 1 48 1 182 1 238 1 239 2 94 1 291 1 136 1 98 2 186 2 52 1 244 1 297 2 144 1 63 1 15 1 259 1 70 3 22 2 204 1 206 2 154 2 307 2 308 1 264 4 210 1 209 1 366 1 159 1 367 1 368 3 218 6 82 1 270 1 314 1 369 1 120 1 121 2 278 1 
324 1 257 2 258 1 201 1 69 1 232 1 152 1 204 2 235 1 331 2 236 1 48 1 132 2 113 2 155 3 184 2 137 1 157 1 52 1 298 1 343 1 58 1 59 1 191 1 369 1 14 1 65 3 40 1 
75 1 52 2 244 1 159 1 116 1 1 1 204 2 236 1 369 2 120 1 48 2 241 1 136 2 
52 4 32 1 159 1 1 1 199 1 204 1 235 1 369 4 120 1 48 4 136 1 17 1 351 1 
139 1 52 2 244 1 1 1 204 1 219 1 369 2 167 1 120 1 12 1 48 2 27 1 16 1 136 2 
369 1 174 1 114 1 20 1 52 1 48 1 1 1 136 1 233 1 235 1 
173 1 52 2 31 1 159 1 1 1 112 1 204 1 369 2 120 1 48 2 136 1 
139 1 52 5 31 1 32 1 159 1 101 1 1 2 199 1 204 3 235 1 369 5 120 2 48 4 225 1 17 1 136 2 
139 1 52 5 31 1 32 1 159 1 101 1 1 2 199 1 204 3 235 1 369 5 120 2 48 4 133 1 17 1 136 2 
279 1 186 1 41 1 52 1 244 1 176 1 1 1 367 1 204 1 235 1 154 2 369 1 120 1 48 1 63 1 239 2 136 1 291 1 
139 1 75 1 52 1 244 1 1 1 204 1 219 1 369 1 166 1 120 1 12 1 48 1 136 2 
106 1 328 1 268 1 154 1 373 1 239 1 170 1 105 1 291 1 
106 1 62 1 183 1 
106 1 186 1 105 1 268 1 303 1 
106 1 186 1 102 1 201 1 268 2 59 1 191 1 234 1 23 1 62 1 155 2 183 1 50 1 65 2 289 1 105 2 40 1 303 2 352 1 
150 1 348 1 103 1 162 1 
150 1 197 1 348 1 252 1 162 1 269 1 96 1 
256 1 249 1 269 1 
212 1 150 1 197 3 141 2 81 1 269 3 162 1 315 1 61 1 348 1 252 1 96 1 
228 1 150 1 197 2 348 1 283 1 252 1 162 1 269 2 96 1 
114 1 67 1 197 1 161 1 269 1 233 1 315 1 333 1 348 1 252 1 96 1 
315 1 150 1 197 1 348 1 252 1 269 1 96 1 
315 1 150 2 197 1 252 1 162 1 269 1 96 1 
150 1 88 1 197 2 269 2 299 1 315 1 348 1 92 1 252 2 96 2 
228 2 150 1 197 3 162 1 269 3 315 1 83 1 333 1 348 2 252 1 292 1 96 1 125 1 
228 1 150 1 114 1 20 1 67 1 197 2 304 1 162 1 269 2 233 2 315 1 348 1 252 1 293 1 96 1 
228 2 150 1 197 4 283 1 202 1 162 1 269 4 315 1 83 1 333 1 348 2 252 2 96 2 
315 1 150 1 197 1 348 1 252 1 162 1 269 1 96 1 
228 2 150 2 197 4 339 1 141 1 81 1 162 2 269 4 83 1 333 1 61 1 348 3 252 1 96 1 
228 1 150 1 197 2 340 1 214 1 269 2 162 1 315 1 348 1 252 1 96 1 95 1 
315 1 150 1 61 2 371 1 197 3 348 1 141 2 252 1 81 1 162 1 269 3 96 1 
169 1 348 2 284 2 277 1 
315 1 197 1 276 1 252 1 269 1 96 1 
228 1 315 1 150 1 197 2 348 1 252 1 292 1 162 1 269 2 96 1 
227 1 
315 1 150 1 197 1 348 1 252 1 162 1 269 1 96 1 
228 1 150 1 197 3 141 1 269 3 162 1 315 1 348 1 252 1 292 1 96 1 
83 1 333 1 339 1 348 1 
150 1 348 1 

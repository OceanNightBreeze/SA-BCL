#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | CONDITION | 1071 | if (x) -> if (!x)
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 11341 | stmt -> ;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | RETURN | 6823 | return null
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1326 | if (x) -> if (!x)
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z | CONSTANT | 5248 | 0 -> -1
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1894 | return null
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 2
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
209 1 312 1 270 1 33 2 34 1 73 1 215 1 101 6 2 1 235 1 103 1 160 9 340 3 6 2 164 2 189 1 132 1 48 1 257 5 260 1 54 2 226 1 347 1 373 9 200 4 60 2 230 2 143 2 
209 1 312 1 270 1 33 2 34 1 73 1 215 1 101 6 2 1 235 1 103 1 160 9 340 3 6 2 164 2 189 1 132 1 48 1 257 5 260 1 54 2 226 1 347 1 373 9 200 4 60 2 230 2 143 2 
209 1 312 1 270 1 33 2 34 1 73 1 215 1 101 7 2 1 235 1 103 1 160 10 340 4 6 2 164 2 189 1 132 1 48 1 257 6 260 1 54 2 226 1 347 1 373 10 200 5 60 2 230 2 143 2 
209 1 312 1 270 1 33 2 34 1 73 1 215 1 101 4 2 1 103 1 160 7 340 2 6 1 164 2 189 1 132 1 48 1 257 4 260 1 54 2 226 1 347 1 373 7 200 3 60 2 230 2 143 2 
209 1 270 1 257 3 33 1 101 3 2 1 54 1 235 1 226 1 373 4 103 1 200 2 160 4 340 1 6 2 230 1 164 1 143 1 
48 1 257 1 270 1 34 1 33 1 134 1 2 1 54 1 226 1 373 2 160 2 89 1 60 1 164 1 143 1 96 1 
270 1 257 2 33 2 101 1 2 1 226 1 373 3 200 1 160 3 60 1 340 1 164 2 132 1 
312 1 209 1 270 1 33 2 101 7 2 1 17 1 235 1 103 1 160 9 340 3 239 1 6 2 164 2 132 1 257 5 54 1 226 1 347 1 373 9 200 4 60 1 230 1 143 1 
312 1 209 1 270 1 33 2 101 7 2 1 17 1 235 1 103 1 160 9 340 3 239 1 6 2 164 2 132 1 257 5 54 1 226 1 347 1 373 9 200 4 60 1 230 1 143 1 
148 1 161 1 179 1 
277 2 161 1 141 1 
210 2 325 2 263 2 9 1 154 2 364 2 32 1 285 2 
210 2 115 1 116 1 35 2 154 2 153 2 214 1 119 1 364 2 39 1 184 1 316 1 317 1 124 2 368 1 5 1 80 1 7 1 285 2 325 3 224 1 25 2 308 1 112 1 199 1 26 1 263 3 9 1 354 1 229 1 204 1 92 1 93 2 232 1 250 1 32 1 251 1 
210 1 313 1 325 1 263 1 9 1 154 1 346 1 364 1 293 1 285 1 
325 1 242 1 148 1 149 1 170 1 197 1 364 1 225 1 57 1 3 1 263 1 161 1 59 1 293 1 
210 1 325 1 242 2 148 1 154 1 170 1 197 1 364 1 225 1 57 2 263 1 161 1 59 1 293 1 285 1 
40 1 57 1 242 1 264 1 173 1 
40 1 57 2 242 2 148 1 161 1 198 1 296 1 173 1 
40 1 57 1 242 1 
210 1 313 1 325 1 242 1 154 1 346 1 364 1 173 1 57 1 9 1 263 1 293 1 109 1 285 1 
161 1 
210 1 313 1 148 1 154 1 364 1 40 1 161 1 109 1 285 1 325 1 242 2 328 1 346 1 173 1 57 2 9 1 263 1 293 1 296 1 
146 1 147 1 242 5 148 1 51 2 173 2 57 5 40 2 137 1 237 1 265 1 138 2 158 1 161 1 238 1 220 2 14 1 163 1 296 1 
179 1 32 1 
210 1 325 2 151 1 154 1 364 2 263 2 113 1 32 2 285 1 
193 1 341 1 295 1 
324 1 325 1 35 1 224 1 153 1 214 1 308 1 39 1 184 1 317 1 124 1 263 1 204 1 229 1 5 1 32 1 
210 1 318 1 325 3 263 3 154 3 364 3 32 1 285 3 
313 1 325 1 263 1 154 1 364 1 293 1 285 1 
210 1 325 1 263 1 151 1 113 1 154 1 364 1 293 1 285 1 
98 1 210 2 116 1 35 1 214 1 154 3 153 1 74 1 119 1 364 3 184 1 39 1 316 1 317 1 318 1 124 1 5 1 80 1 7 1 285 3 325 4 242 1 224 1 25 1 170 1 308 1 197 1 225 1 112 1 199 1 26 1 57 1 263 4 9 1 59 1 354 1 229 1 204 1 113 1 93 2 232 1 293 1 32 1 358 1 
325 2 318 1 352 1 263 2 149 1 154 1 364 2 32 1 285 1 
210 1 98 1 325 3 242 1 336 1 154 3 170 1 74 1 197 1 364 3 225 1 57 1 318 2 263 3 161 1 59 1 113 1 293 1 285 3 
210 1 325 2 154 2 364 2 318 1 263 2 113 1 341 1 295 1 285 2 
325 1 35 1 224 1 153 1 214 1 308 1 39 1 184 1 317 1 124 1 263 1 204 1 229 1 5 1 32 1 
325 1 35 1 70 1 224 1 153 1 214 1 308 1 182 1 184 1 124 1 263 1 204 1 229 1 5 1 32 1 
116 1 233 1 213 1 37 1 38 1 119 1 102 1 338 1 368 2 341 2 7 2 193 2 25 4 244 1 290 1 112 1 26 1 354 1 203 1 356 1 93 2 232 1 295 2 145 1 
325 1 263 1 376 1 154 1 170 1 364 1 293 1 285 1 
325 2 35 1 224 1 214 1 154 1 153 1 308 1 74 1 364 1 184 1 39 1 317 1 318 1 124 1 263 2 229 1 204 1 341 1 5 1 285 1 
210 1 325 5 149 1 154 4 74 1 364 5 123 1 318 2 352 1 263 5 159 1 113 1 32 1 285 4 
313 1 325 2 263 2 376 1 154 2 364 2 293 1 285 2 
195 1 144 1 
195 1 144 1 
298 1 348 1 
298 1 348 1 
298 1 348 1 
339 1 195 1 144 1 
195 1 357 1 144 1 
20 1 298 1 195 2 129 1 348 1 144 2 
339 1 195 1 144 1 
339 1 195 1 144 1 
195 1 65 1 144 1 
195 1 65 1 144 1 
195 1 65 1 144 1 
359 2 210 1 313 1 362 1 152 1 154 1 364 1 302 1 322 2 109 1 285 1 325 1 50 1 242 2 286 1 195 2 346 1 86 2 57 2 27 2 263 1 9 1 28 2 377 1 139 1 30 1 293 1 144 2 
359 1 325 2 306 1 242 1 152 1 195 1 315 1 154 2 364 2 121 1 86 1 87 1 57 1 278 1 27 1 263 2 28 1 322 1 334 1 256 1 357 1 32 1 144 1 285 2 
54 1 230 1 143 1 
134 1 54 1 143 1 
360 1 36 1 281 1 134 1 230 2 54 3 
360 1 36 1 134 1 230 1 83 1 54 2 
360 2 36 1 134 1 230 1 54 2 
146 2 147 3 148 1 213 1 37 1 121 1 156 1 216 1 102 1 40 1 277 3 161 2 42 2 220 1 256 1 167 1 306 1 242 5 370 2 51 1 171 1 111 1 329 2 290 1 173 4 57 5 138 1 265 1 90 1 206 1 141 1 296 1 
210 1 146 4 147 6 148 1 213 2 154 1 37 2 156 2 102 2 40 5 161 4 220 2 256 4 108 1 109 1 165 1 51 2 346 1 171 2 173 6 57 8 9 1 263 1 264 4 265 1 176 1 313 1 234 1 364 1 183 1 18 1 277 6 237 1 285 1 325 1 242 8 370 4 288 4 290 2 329 4 138 2 90 1 206 2 141 2 293 1 296 1 
146 2 147 3 148 1 213 1 37 1 156 1 102 1 277 4 237 1 161 3 42 1 220 1 256 1 167 1 242 3 370 2 51 1 171 1 111 1 290 1 329 2 173 2 57 3 138 1 206 1 141 2 
210 1 146 2 147 3 148 1 213 1 154 1 37 1 156 1 102 1 161 3 42 1 220 1 256 2 109 1 167 1 51 1 171 1 346 1 111 1 173 2 57 3 263 1 9 1 313 1 234 1 364 1 183 1 18 1 277 4 237 1 285 1 325 1 242 3 370 2 290 1 329 2 138 1 206 1 141 2 293 1 
273 1 5 1 179 1 
5 1 294 1 
355 1 
5 1 224 1 
69 1 273 2 229 1 5 3 224 1 283 1 
229 1 5 1 224 1 
5 1 212 1 
82 1 326 1 133 1 233 3 169 1 25 7 37 1 38 2 102 1 309 1 105 1 10 1 4 2 368 4 323 1 7 3 142 1 
82 1 326 1 133 1 233 3 169 1 25 7 37 1 38 2 102 1 309 1 105 1 10 1 4 2 368 4 323 1 7 3 142 1 
82 1 326 1 133 1 233 3 169 1 25 7 37 1 38 2 102 1 309 1 105 1 10 1 4 2 368 4 248 1 323 1 7 3 142 1 
211 1 116 1 233 10 99 4 213 3 37 4 38 5 119 1 102 4 366 3 105 1 4 3 368 16 79 1 81 1 323 2 7 15 82 2 326 1 133 5 169 2 25 31 171 3 84 1 290 3 112 1 309 1 330 1 58 1 10 2 12 1 93 2 142 1 232 1 
116 2 233 4 37 1 38 3 119 2 102 1 105 1 4 2 368 5 323 1 7 4 110 1 82 1 133 1 169 1 25 9 84 1 112 2 309 1 88 1 10 1 93 4 232 2 142 1 
67 1 270 1 33 1 35 1 101 1 153 1 214 1 2 1 217 1 124 1 281 1 41 1 160 2 21 1 164 1 257 1 49 1 134 1 52 1 54 2 226 1 373 2 262 1 228 1 311 1 204 1 60 1 230 1 208 1 143 1 
67 1 270 1 33 1 35 1 153 1 101 2 214 1 2 1 217 1 124 1 281 1 41 1 160 3 164 1 305 1 257 1 49 1 23 1 134 1 54 2 373 3 262 1 228 1 311 1 204 1 60 1 230 1 381 1 208 1 143 1 
67 1 270 1 35 1 153 1 101 2 214 1 2 1 217 1 124 1 281 1 41 1 160 2 305 1 257 1 49 1 23 1 134 1 54 2 373 2 311 1 204 1 60 1 230 1 208 1 143 1 
33 1 35 1 178 1 153 1 214 1 217 2 124 1 160 1 41 2 5 1 131 1 164 1 224 1 308 1 261 1 373 1 332 1 291 1 204 1 311 2 60 2 381 1 62 1 
305 1 67 1 49 1 33 1 35 1 134 1 214 1 52 1 153 1 54 2 226 1 373 1 262 1 217 1 228 1 124 1 281 1 160 1 41 1 204 1 311 1 60 1 230 1 208 1 164 1 143 1 
46 1 
146 2 297 2 147 2 148 1 35 2 149 1 150 1 153 2 214 1 40 6 3 1 161 2 220 1 5 1 162 2 43 2 47 1 258 1 259 4 51 1 224 1 223 1 307 1 261 1 308 2 170 1 225 1 57 5 227 1 263 1 265 1 59 1 11 2 62 1 271 1 181 1 364 1 277 2 124 2 78 2 125 1 369 1 325 1 191 2 242 5 287 2 192 1 197 1 245 1 138 1 204 1 206 1 141 2 293 1 296 3 
149 1 364 1 40 2 3 1 369 1 47 1 325 1 258 1 242 3 191 1 259 2 307 1 328 1 170 1 197 1 225 1 227 1 57 3 263 1 59 1 293 1 296 1 
149 1 148 1 364 1 40 1 3 1 161 1 369 1 47 1 325 1 258 1 242 3 259 3 287 1 307 1 170 1 328 1 197 1 225 1 227 1 57 3 263 1 59 1 293 1 296 1 
297 1 149 1 364 1 40 2 3 1 369 1 47 1 325 1 258 1 242 3 191 1 259 3 287 1 307 1 328 1 170 1 197 1 225 1 227 1 57 3 263 1 59 1 293 1 296 1 
210 1 146 1 297 4 147 1 148 1 149 1 154 1 100 1 40 7 3 1 161 1 220 1 162 2 43 2 109 1 47 1 258 1 259 4 51 1 307 1 170 1 346 1 225 1 57 5 227 1 9 1 263 2 265 1 59 1 11 2 13 1 313 1 364 2 78 2 125 1 128 1 369 1 22 1 285 1 325 2 191 4 242 5 287 2 192 1 328 1 197 1 136 1 138 1 141 2 293 2 296 3 
146 1 297 2 147 1 148 1 149 1 150 1 364 1 40 4 277 2 3 1 78 2 161 2 125 1 220 1 162 2 43 2 369 1 47 1 258 1 325 1 191 2 242 4 287 2 259 4 192 1 51 1 307 1 170 1 197 1 225 1 227 1 57 4 263 1 138 1 265 1 59 1 11 2 141 2 293 1 296 2 
146 1 297 2 147 1 148 1 149 1 100 1 364 1 40 4 3 1 78 2 161 1 125 1 220 1 128 1 162 2 43 2 369 1 47 1 325 1 258 1 191 2 242 4 287 2 259 4 192 1 51 1 307 1 170 1 197 1 225 1 227 1 57 4 136 1 263 1 265 1 138 1 59 1 11 2 141 2 293 1 296 2 
146 1 297 2 147 1 148 1 149 1 100 1 364 1 40 4 3 1 78 2 161 1 125 1 220 1 128 1 162 2 43 2 369 1 47 1 325 1 258 1 191 2 242 4 287 2 259 4 192 1 51 1 307 1 170 1 197 1 225 1 227 1 57 4 136 1 263 1 265 1 138 1 59 1 11 2 141 2 293 1 296 2 
146 1 297 2 147 1 148 1 149 1 118 2 274 1 100 1 364 1 40 4 277 2 3 1 161 1 220 1 255 1 43 2 369 1 47 1 325 1 258 1 191 2 242 4 287 2 259 4 192 1 51 1 307 1 170 1 197 1 225 1 227 1 57 4 202 1 263 1 265 1 138 1 59 1 11 2 293 1 296 2 269 2 
146 1 297 3 147 1 148 1 149 1 100 1 364 1 40 5 3 1 78 2 161 1 125 1 220 1 128 1 162 2 43 2 369 1 22 1 47 1 325 1 258 1 242 4 191 3 259 5 287 3 192 1 51 1 307 1 170 1 197 1 225 1 227 1 57 4 136 1 263 1 138 1 265 1 59 1 11 2 141 2 293 1 296 2 
146 1 297 3 147 1 148 1 149 1 100 1 364 1 40 5 3 1 78 2 161 1 125 1 220 1 128 1 162 2 43 2 369 1 22 1 47 1 325 1 258 1 242 4 191 3 259 5 287 3 192 1 51 1 307 1 170 1 197 1 225 1 227 1 57 4 136 1 263 1 138 1 265 1 59 1 11 2 141 2 293 1 296 2 
146 1 297 2 147 1 148 1 149 1 150 1 118 2 364 1 40 4 277 2 3 1 161 1 220 1 43 2 369 1 47 1 258 1 325 1 191 2 242 4 287 2 259 4 192 1 51 1 307 1 170 1 197 1 225 1 227 1 57 4 263 1 202 1 138 1 265 1 59 1 11 2 293 1 296 2 269 2 
116 1 233 2 179 1 37 1 38 2 119 1 102 1 105 1 4 1 341 1 368 3 7 3 82 1 193 1 169 1 25 6 244 1 112 1 309 1 26 1 354 1 93 2 142 1 232 1 295 1 32 2 
116 2 233 2 99 3 213 1 37 2 38 1 119 2 102 1 366 3 106 1 341 11 368 8 80 1 79 1 7 6 190 1 133 1 193 11 222 1 25 14 171 2 290 2 112 2 56 1 26 1 354 2 12 1 93 4 232 2 250 1 32 1 295 4 97 1 
66 1 361 1 116 1 35 1 214 1 153 1 154 1 74 1 119 1 364 1 184 1 39 1 317 1 124 1 318 1 5 1 368 1 80 1 7 1 285 1 324 1 190 1 325 2 224 1 25 2 308 1 112 1 26 1 263 2 229 1 204 1 354 1 93 2 29 1 232 1 32 1 295 1 250 1 
35 1 153 1 154 1 214 2 213 2 37 3 38 4 102 3 39 2 105 1 4 1 5 2 341 7 107 2 7 10 169 1 224 2 308 1 171 2 112 3 309 1 263 3 354 3 229 2 353 2 232 3 116 3 233 5 74 1 364 1 119 3 75 2 184 2 317 2 124 1 318 1 319 2 368 10 80 1 285 1 190 1 82 1 325 3 133 1 193 7 25 20 290 2 199 2 26 3 201 1 204 2 93 6 95 1 142 1 32 2 250 1 295 7 
115 2 116 2 117 1 35 7 154 1 214 2 153 8 364 1 119 2 318 1 124 8 5 3 368 1 80 1 188 1 21 1 7 1 285 1 305 1 325 1 344 1 327 1 224 2 25 2 308 2 261 1 244 1 112 2 26 2 263 1 310 1 204 2 354 2 93 4 232 2 62 1 64 1 382 1 250 1 
210 1 325 1 263 1 113 1 154 1 282 1 364 1 285 1 
116 1 233 1 133 1 193 1 25 2 37 1 244 1 119 1 290 1 112 1 26 1 354 1 203 1 341 1 368 2 93 2 232 1 295 1 
116 1 233 1 193 1 25 2 213 1 38 1 244 1 119 1 102 1 112 1 26 1 354 1 341 1 93 2 356 1 7 2 232 1 295 1 
116 1 233 2 213 1 37 1 38 1 119 1 102 1 368 2 341 2 7 2 133 1 193 2 25 4 171 1 244 1 290 1 112 1 26 1 354 1 93 2 232 1 295 2 
116 1 233 1 133 1 327 1 193 1 25 2 37 1 119 1 290 1 112 1 26 1 354 1 203 1 341 1 368 2 93 2 232 1 295 1 
116 1 233 1 327 1 193 1 25 2 213 1 38 1 119 1 102 1 112 1 26 1 354 1 341 1 93 2 356 1 7 2 232 1 295 1 
116 1 233 2 213 1 37 1 38 1 119 1 102 1 368 2 341 2 7 2 327 1 133 1 193 2 25 4 171 1 290 1 112 1 26 1 354 1 93 2 232 1 295 2 
116 1 233 2 213 1 37 1 38 1 119 1 102 1 368 2 341 2 7 2 133 1 193 2 25 4 171 1 290 1 112 1 26 1 354 1 93 2 232 1 295 2 
116 1 35 1 214 1 153 1 119 1 184 1 39 1 317 1 124 1 368 1 5 1 80 1 7 1 325 1 224 1 25 2 308 1 199 1 112 1 26 1 263 1 229 1 204 1 354 1 93 2 232 1 250 1 32 1 
116 1 35 1 70 1 214 1 153 1 182 1 119 1 184 1 124 1 368 1 5 1 80 1 7 1 130 1 325 1 224 1 25 2 308 1 112 1 26 1 263 1 229 1 204 1 354 1 93 2 232 1 250 1 32 1 
116 1 233 2 213 1 37 1 38 1 119 1 102 1 368 2 341 2 7 2 190 1 133 1 193 2 25 4 171 1 290 1 112 1 26 1 354 1 93 2 232 1 295 2 
116 1 233 2 35 1 213 1 214 1 153 1 37 1 38 1 75 1 119 1 102 1 184 1 39 1 317 1 124 1 341 2 368 2 5 1 7 2 21 1 325 1 133 1 193 2 224 1 25 4 171 1 290 1 199 1 112 1 26 1 263 1 229 1 204 1 354 1 93 2 232 1 295 2 
210 1 116 1 233 1 213 1 154 1 37 1 119 1 364 1 102 1 368 2 341 1 7 1 285 1 190 1 325 1 133 1 193 1 25 3 171 1 290 1 112 1 26 1 263 1 113 1 354 1 267 1 93 2 232 1 295 1 
335 1 116 3 233 8 99 4 180 1 155 1 275 1 213 4 37 5 38 4 119 3 102 5 104 4 366 3 186 1 105 1 187 2 4 1 368 20 79 1 7 21 343 1 82 1 110 1 133 4 169 1 25 41 171 4 372 1 84 1 290 4 112 3 309 1 350 1 351 1 12 3 91 1 268 1 380 1 93 6 142 1 231 1 232 3 
335 1 116 4 233 7 99 4 180 1 155 1 275 1 213 3 37 5 38 4 119 4 102 4 104 4 366 3 186 1 105 1 187 2 4 1 368 20 79 1 7 18 343 1 82 1 110 1 133 3 169 1 25 38 171 4 372 1 84 2 290 4 112 4 309 1 350 1 351 1 12 3 91 1 268 1 380 1 93 8 142 1 231 1 232 4 
335 1 116 2 233 14 99 4 180 1 155 1 275 1 213 7 37 8 38 7 119 2 102 8 104 4 366 4 186 1 105 1 187 1 4 1 368 27 79 2 7 25 343 1 82 1 110 1 133 7 222 2 169 1 25 52 171 7 84 1 372 1 290 7 112 2 309 1 351 1 12 2 91 1 380 1 93 4 142 1 231 1 232 2 
335 1 116 2 233 6 99 2 275 1 213 3 37 3 38 3 119 2 120 1 102 3 104 2 366 1 187 1 368 9 79 1 7 10 343 1 110 1 133 3 25 19 171 3 290 3 112 2 350 1 351 2 12 1 91 1 93 4 232 2 
335 1 116 3 233 4 99 2 180 1 275 1 155 1 213 2 37 3 38 2 119 3 102 2 104 4 366 2 186 1 187 2 368 14 7 12 343 2 110 1 133 2 25 26 171 3 372 1 84 2 290 3 112 3 351 1 12 2 91 1 380 1 93 6 232 3 231 1 
359 1 27 1 218 1 28 1 195 1 129 1 55 1 221 1 86 1 144 1 
357 1 87 1 
359 1 27 1 28 1 205 1 127 1 195 1 301 1 86 1 144 1 
359 1 210 1 313 1 362 1 152 1 154 1 364 1 302 1 322 2 109 1 285 1 325 1 50 1 242 1 286 1 195 1 346 1 86 1 57 1 27 1 263 1 9 1 28 1 377 1 139 1 30 1 293 1 144 1 
359 1 210 1 313 1 362 1 152 1 154 1 364 1 302 1 322 2 109 1 285 1 325 1 50 1 242 1 286 1 195 1 346 1 86 1 57 1 27 1 263 1 9 1 28 1 377 1 139 1 30 1 293 1 144 1 
359 1 210 1 313 1 362 1 152 1 154 1 364 1 302 1 322 2 109 1 285 1 325 1 50 1 242 1 286 1 195 1 346 1 86 1 57 1 27 1 263 1 9 1 28 1 377 1 139 1 30 1 293 1 144 1 
339 1 20 1 378 1 
339 1 20 1 378 1 
44 1 65 1 
20 1 44 1 65 1 
278 1 334 1 
359 1 325 2 306 1 242 1 50 1 195 1 154 2 315 1 364 2 121 1 86 1 87 1 173 1 57 1 157 1 278 1 27 1 263 2 28 1 322 1 139 1 334 1 256 1 357 1 32 1 285 2 144 1 
339 1 378 1 
20 1 44 1 65 1 
115 2 116 1 35 2 214 1 153 2 119 1 364 2 254 1 124 2 126 1 5 1 368 1 80 1 188 1 7 1 284 1 190 1 325 2 194 1 224 1 25 2 243 1 112 1 26 1 263 2 310 1 204 1 354 1 93 2 232 1 250 1 
305 1 67 1 49 1 35 2 134 1 214 1 153 2 54 2 262 1 124 2 281 1 41 1 204 1 219 1 61 1 230 1 21 1 45 1 143 1 
305 1 67 1 49 1 35 1 134 1 153 1 214 1 54 2 365 1 262 1 124 1 281 1 41 1 204 1 230 1 45 1 143 1 
35 1 224 1 71 1 214 1 153 1 308 1 261 1 124 1 291 1 41 1 204 1 5 1 219 1 62 1 
305 1 67 1 49 1 35 1 134 1 153 1 214 1 54 2 262 1 124 1 281 1 41 1 204 1 219 1 61 1 230 1 45 1 143 1 
276 1 
146 1 137 1 147 1 148 1 161 1 179 1 163 1 
146 1 242 1 147 1 148 1 51 1 57 1 40 1 277 1 78 1 265 1 138 1 161 2 125 1 220 1 162 1 141 1 296 1 
146 8 147 9 148 2 35 3 212 2 299 2 214 3 153 3 213 2 37 2 102 2 40 5 161 8 5 10 220 4 107 2 163 1 304 2 51 4 223 1 224 3 308 1 171 2 57 5 8 2 265 4 59 2 229 3 63 1 68 1 177 1 273 2 77 2 277 12 367 1 124 3 185 2 280 3 321 2 21 1 283 1 242 5 370 6 329 6 290 2 137 1 246 1 138 4 204 4 206 2 249 2 141 6 294 3 296 3 
146 5 147 8 148 2 99 1 155 1 213 2 37 2 102 2 40 1 277 6 366 1 280 1 185 2 186 1 161 5 220 2 242 1 370 5 51 2 223 1 171 2 372 1 329 5 290 2 57 1 349 1 138 2 265 2 12 1 206 1 380 1 15 1 141 3 231 1 296 1 
210 1 313 1 146 2 147 2 154 1 37 2 364 1 102 1 280 1 185 2 105 1 220 1 109 1 285 1 166 1 325 1 82 1 242 1 51 1 169 1 346 1 57 1 136 1 263 1 9 1 138 1 265 1 293 1 
146 1 147 1 148 1 51 1 137 1 265 1 138 1 161 1 220 1 163 1 
146 5 147 5 370 5 213 2 37 2 171 2 290 2 329 5 102 2 277 10 280 1 185 2 161 5 107 1 141 5 
57 1 40 1 242 1 148 1 161 1 296 1 
146 2 271 1 147 2 35 4 72 1 214 1 181 1 153 4 40 4 303 1 124 4 237 1 5 1 220 2 242 3 51 2 224 1 223 2 308 2 261 1 57 3 246 2 138 2 265 1 204 1 206 2 62 1 63 1 296 2 
210 2 116 1 35 1 153 1 154 2 214 1 364 2 119 1 39 1 184 1 316 1 317 1 124 1 5 1 80 1 7 1 285 2 325 3 224 1 25 1 308 1 112 1 199 1 26 1 263 3 9 1 204 1 229 1 354 1 93 2 232 1 32 1 
146 2 147 1 370 2 148 2 51 1 223 1 329 2 277 4 265 1 138 1 161 4 4 1 220 1 206 1 141 2 
27 1 314 1 86 1 
27 1 334 1 55 1 207 1 86 1 
27 1 314 1 86 1 
27 1 314 1 86 1 
27 1 253 1 86 1 
27 1 253 1 86 1 
27 1 253 1 86 1 
27 1 86 1 
195 1 144 1 
116 2 233 2 99 1 155 1 213 1 37 2 38 1 119 2 102 1 366 1 186 1 368 7 7 4 110 1 133 1 25 11 171 2 84 1 372 1 290 2 112 2 12 1 93 4 380 1 232 2 231 1 
116 3 233 3 99 2 155 1 213 1 37 3 38 1 119 3 102 1 366 1 186 1 368 9 79 1 7 5 110 1 133 2 25 14 171 3 84 1 372 1 290 3 112 3 12 1 380 1 93 6 94 1 232 3 231 1 
116 3 233 4 99 1 155 1 213 2 37 3 38 3 119 3 102 3 366 1 186 1 105 1 4 1 368 9 7 10 82 1 110 1 133 1 169 1 25 19 171 2 372 1 84 1 290 2 112 3 309 1 12 1 93 6 380 1 94 1 142 1 232 3 231 1 
116 3 233 5 99 1 155 1 213 1 37 3 38 3 119 3 102 2 366 1 186 1 105 1 4 1 368 10 7 7 82 1 110 1 133 2 169 1 25 17 171 2 84 1 372 1 290 2 112 3 309 1 12 1 93 6 380 1 94 1 142 1 232 3 231 1 
116 2 233 2 99 1 155 1 213 1 37 2 38 1 119 2 102 1 366 1 186 1 368 7 7 4 110 1 133 1 25 11 171 2 84 1 372 1 290 2 112 2 12 1 93 4 380 1 232 2 231 1 
116 1 233 2 99 1 155 1 213 2 37 2 38 1 119 1 102 2 366 1 186 1 368 6 7 6 110 1 133 1 25 12 171 2 372 1 290 2 112 1 12 1 93 2 380 1 232 1 231 1 
116 4 233 5 99 1 155 1 213 1 37 3 38 3 119 4 102 2 366 1 186 1 105 1 4 1 368 10 7 8 82 1 110 1 133 2 169 1 25 18 171 2 372 1 84 2 290 2 112 4 309 1 12 1 380 1 93 8 94 1 142 1 232 4 231 1 
116 4 233 6 99 1 155 1 213 2 37 3 38 3 119 4 102 2 366 1 186 1 368 9 7 7 110 1 133 3 25 16 171 3 372 1 84 2 290 3 112 4 350 1 12 1 380 1 93 8 232 4 231 1 
309 2 82 3 105 1 133 3 233 6 368 3 169 3 25 7 37 1 38 3 7 4 142 1 102 1 
116 4 233 4 99 1 155 1 213 1 37 3 38 3 119 4 102 2 366 1 186 1 105 1 4 1 368 10 7 8 82 1 110 1 133 1 169 1 25 18 171 2 372 1 84 2 290 2 112 4 309 1 350 1 12 1 380 1 93 8 142 1 232 4 231 1 
82 1 116 2 133 1 233 3 169 1 25 8 37 1 38 2 119 2 84 1 102 1 112 2 309 1 105 1 4 1 368 4 93 4 7 4 232 2 142 1 
309 1 82 1 105 1 233 2 4 1 368 3 169 1 179 1 25 6 37 1 38 2 7 3 142 1 102 1 
116 1 233 2 133 1 213 1 25 4 37 1 38 1 171 1 119 1 102 1 290 1 112 1 368 2 93 2 94 1 7 2 232 1 
133 1 233 2 99 2 213 1 25 7 37 1 38 1 171 1 102 1 290 1 366 1 12 1 368 3 79 1 7 4 
116 2 233 9 272 1 99 2 213 2 37 3 38 5 119 2 102 3 366 2 105 1 106 1 4 1 368 11 79 1 7 12 82 2 133 4 222 1 169 2 25 23 171 2 84 2 290 2 112 2 309 1 93 4 142 1 232 2 
99 1 25 1 7 1 
366 1 368 1 25 1 
116 1 133 2 233 4 25 6 213 1 37 1 171 1 38 2 119 1 290 1 102 1 112 1 368 3 93 2 94 1 107 1 7 3 232 1 
116 1 233 2 99 1 155 1 213 2 37 2 38 1 119 1 102 2 366 1 186 1 368 6 7 6 110 1 133 1 25 12 171 2 372 1 290 2 112 1 12 1 93 2 380 1 232 1 231 1 
82 1 133 1 233 2 105 1 169 1 368 3 25 6 37 1 38 1 7 3 102 1 
82 1 116 1 133 1 233 2 272 1 169 1 25 3 38 1 84 1 119 1 112 1 309 1 368 1 93 2 7 2 232 1 142 1 
166 1 82 1 233 3 133 1 169 1 25 8 37 2 38 2 102 2 105 1 368 4 7 4 
110 1 116 1 133 1 233 1 25 2 37 1 119 1 290 1 112 1 368 2 93 2 232 1 
110 1 116 1 233 2 133 1 213 1 25 4 37 1 38 1 171 1 119 1 102 1 290 1 112 1 368 2 93 2 7 2 232 1 
110 1 82 1 116 3 272 1 233 2 133 1 169 1 25 3 38 1 84 1 119 3 112 3 350 1 368 1 93 6 7 2 232 3 
211 1 116 5 272 1 233 12 99 4 213 3 37 5 38 7 119 5 102 5 366 3 105 2 4 1 368 16 79 1 7 18 82 3 110 1 133 5 169 3 25 34 171 3 84 2 290 3 112 5 309 1 58 1 330 1 350 1 12 1 93 10 94 1 142 1 232 5 
325 1 263 1 352 1 149 1 320 1 364 1 32 1 
325 1 149 1 363 1 337 1 85 1 364 1 331 1 352 1 263 1 320 1 32 1 241 1 
124 1 35 1 204 1 5 1 224 1 179 1 214 1 153 1 261 1 308 1 62 1 
325 2 35 1 224 1 154 1 153 1 214 1 308 1 364 1 184 1 317 1 318 1 124 1 263 2 229 1 204 1 5 1 32 1 285 1 
35 1 212 1 214 1 153 1 154 1 364 2 184 1 317 1 124 1 318 1 5 3 304 1 285 2 325 2 224 2 170 1 225 1 246 1 263 2 204 1 229 2 293 1 32 1 
35 2 70 1 212 1 214 1 153 2 154 1 364 2 184 1 124 2 318 1 5 3 304 1 285 2 325 2 224 2 170 1 225 1 246 1 263 2 204 1 229 2 31 1 293 1 32 1 
242 2 148 1 35 3 345 1 273 1 212 1 224 1 153 3 214 1 308 1 57 2 40 1 246 1 124 3 175 1 161 1 59 1 229 1 204 1 5 4 31 1 304 1 294 1 
242 2 148 1 35 3 273 1 212 1 224 1 153 3 214 1 308 1 57 2 40 1 246 1 124 3 161 1 59 1 229 1 204 1 321 1 5 4 31 1 304 1 294 1 
124 1 35 1 204 1 214 1 153 1 64 1 
305 1 115 1 117 1 344 1 35 6 224 2 135 1 153 7 214 2 308 2 124 7 174 1 292 1 229 1 204 3 5 3 188 1 21 1 283 1 64 1 382 1 
35 1 153 1 154 1 214 1 37 1 38 2 102 1 39 1 254 1 105 1 4 1 5 1 341 1 7 3 224 1 169 1 112 2 309 1 263 2 354 2 229 1 232 2 116 2 233 2 75 1 364 1 119 2 184 1 317 1 124 1 318 1 319 1 368 3 21 1 285 1 190 1 325 2 82 1 193 1 25 6 199 1 26 2 204 1 93 4 142 1 295 1 32 2 
146 1 147 1 148 1 35 1 273 1 153 1 77 1 40 2 124 1 161 1 321 1 220 2 5 2 163 1 242 3 51 2 308 1 173 1 57 3 137 1 8 1 138 2 265 2 59 1 249 1 63 1 294 1 296 1 
35 2 177 1 273 1 224 1 153 2 214 1 124 2 229 1 204 2 5 2 21 1 283 1 64 1 
35 4 224 1 153 4 214 1 308 1 261 1 124 4 247 1 204 1 5 1 21 1 31 1 62 1 
35 2 252 1 224 1 135 1 153 2 214 1 246 1 374 1 124 2 174 1 333 1 229 1 204 2 5 1 
67 1 124 1 35 1 134 1 204 1 214 1 153 1 308 1 54 1 143 1 
305 1 124 2 35 2 204 1 5 1 224 1 214 1 153 2 188 1 21 1 284 1 
35 4 344 1 117 1 224 2 153 5 214 2 261 1 308 1 246 1 124 5 247 1 204 2 5 3 188 1 21 1 62 1 
35 4 117 1 224 2 153 5 214 2 261 1 308 1 172 1 246 1 124 5 247 1 204 2 5 3 188 1 21 1 62 1 
325 2 35 1 70 1 224 1 154 1 153 1 214 1 308 1 364 1 184 1 318 1 124 1 263 2 229 1 204 1 5 1 32 1 285 1 
35 1 224 1 135 1 153 1 214 1 246 1 124 1 174 1 292 1 229 1 204 2 5 1 283 1 
19 1 379 1 289 1 342 1 32 1 
98 1 242 2 148 1 24 1 289 2 170 1 197 1 225 1 173 1 57 2 19 2 279 1 266 1 161 1 59 1 379 2 342 1 293 1 32 1 
19 1 325 1 263 1 126 1 194 1 289 1 243 1 364 1 342 1 
266 1 24 1 342 1 
257 1 270 1 179 1 2 1 
257 1 270 1 33 1 160 1 2 1 164 1 373 1 
217 1 60 1 373 1 
257 1 270 1 33 1 34 2 196 1 2 1 226 1 373 3 160 3 140 1 114 1 164 1 
257 1 270 1 33 1 160 2 101 1 2 1 6 1 164 1 373 2 
200 1 209 1 257 1 33 1 160 1 54 1 230 1 164 1 143 1 226 1 373 1 
257 1 270 1 33 1 160 1 164 1 226 1 373 1 
270 2 33 1 160 1 2 1 164 1 226 1 373 1 
236 1 33 1 160 1 240 1 164 1 226 1 373 1 
312 1 270 1 257 2 33 1 101 2 2 1 226 1 347 1 373 3 200 1 160 3 340 1 164 1 
257 1 270 1 168 1 33 1 134 1 101 1 2 1 54 2 226 1 373 2 281 1 160 2 230 1 164 1 143 1 
270 1 257 2 33 2 101 2 2 1 235 1 226 1 373 4 200 1 160 4 340 1 6 1 164 2 
257 1 270 1 33 1 160 1 2 1 164 1 226 1 373 1 
270 2 257 3 34 1 33 1 101 2 300 1 2 2 373 4 200 1 160 4 340 1 140 1 114 1 164 1 
257 1 270 1 33 1 101 1 0 1 2 1 17 1 226 1 373 2 375 1 160 2 164 1 
16 1 257 1 270 1 33 1 34 2 2 1 226 1 373 3 160 3 140 1 114 2 164 1 
122 1 257 2 1 2 76 1 
33 1 160 1 53 1 164 1 226 1 373 1 
312 1 257 1 270 1 33 1 160 2 101 1 2 1 164 1 226 1 373 2 
371 1 
257 1 270 1 33 1 160 1 2 1 164 1 226 1 373 1 
312 1 257 1 270 1 34 1 33 1 160 3 101 1 2 1 164 1 226 1 373 3 
200 1 257 1 340 1 300 1 
257 1 270 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (27,200) (27,200) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (27,200) (27,200) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (27,200) (27,200) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (27,200) (27,200) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 288 348 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 288 348 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 104 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 363 198 254 232 94 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 363 198 254 232 94 36 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 363 198 254 232 94 36 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 97 210 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 363 198 254 232 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 363 198 254 232 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 363 198 254 232 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3823 | + -> >>>
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification; | RETURN | 587 | return null
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 4723 | return null
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7152 | return null
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4784 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2022 | = null
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11572 | if (x) -> if (!x)
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money; | ASSIGN | 1235 | = null
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
116 2 288 1 252 1 15 1 153 1 316 1 101 3 242 2 364 1 22 1 123 2 352 3 219 1 
200 1 116 1 101 1 242 1 27 1 22 1 131 1 352 1 219 1 
200 1 116 1 101 1 242 1 27 1 22 1 131 1 352 1 219 1 
200 1 116 1 101 1 242 1 27 1 22 1 131 1 352 1 219 1 
200 1 116 1 101 1 242 1 27 1 22 1 131 1 352 1 219 1 
116 1 162 1 252 3 15 1 16 1 153 2 316 1 101 4 242 1 359 1 322 1 364 1 145 1 71 1 370 2 123 3 352 4 219 1 
116 1 101 1 288 1 348 1 242 1 352 1 219 1 
116 1 101 1 288 1 348 1 242 1 352 1 219 1 
116 1 162 1 187 1 316 1 131 1 112 1 101 2 242 1 81 1 364 1 22 1 71 1 123 1 352 2 219 1 46 1 
0 1 73 1 270 1 26 1 197 1 211 1 58 1 356 1 296 1 244 1 171 1 265 1 146 1 284 1 
11 1 
296 2 11 1 0 2 164 1 270 1 305 1 39 1 85 1 
11 1 87 2 47 1 0 5 270 2 130 1 39 1 165 2 135 1 296 5 155 1 68 1 360 1 305 1 8 1 245 2 9 1 52 1 85 2 
11 1 104 1 39 1 
11 1 136 2 108 1 
73 1 24 1 244 2 211 2 146 2 265 2 58 2 356 2 
24 1 325 2 225 2 1 1 340 1 199 1 31 1 280 1 258 1 234 1 265 2 268 2 53 1 73 1 312 1 314 1 355 1 74 1 211 2 119 1 58 2 120 2 356 2 142 1 99 1 295 1 215 2 321 1 365 1 276 1 244 3 82 1 368 1 323 1 146 3 191 1 148 1 
73 1 26 1 244 1 171 1 211 1 146 1 265 1 58 1 356 1 284 1 
11 1 0 1 39 1 341 1 294 1 296 1 80 1 69 1 244 1 171 1 23 1 265 1 146 1 109 1 
11 1 0 2 211 1 39 1 58 1 356 1 294 1 296 2 69 1 244 1 171 1 23 1 265 1 146 1 109 1 
78 1 296 1 0 1 270 1 85 1 
296 2 11 1 0 2 32 1 270 1 305 1 39 1 85 1 
296 1 0 1 85 1 
237 1 24 2 25 1 211 1 58 1 356 1 244 2 265 2 146 2 
196 1 289 1 337 1 
24 1 325 1 225 1 314 1 1 1 74 1 119 1 239 1 199 1 280 1 258 1 295 1 244 1 323 1 146 1 268 1 
325 1 225 1 314 1 1 1 289 1 74 1 119 1 58 1 199 1 258 1 356 1 280 1 295 1 347 1 168 1 244 2 323 1 265 1 146 2 268 1 
24 1 104 1 
347 1 24 1 244 3 211 1 146 3 265 3 58 3 356 3 
26 1 244 1 171 1 146 1 265 1 58 1 356 1 
237 1 25 1 244 1 171 1 211 1 146 1 265 1 58 1 356 1 
0 1 224 1 24 1 325 1 225 1 1 1 25 1 199 1 258 1 31 1 280 1 347 1 69 1 234 1 265 3 268 1 53 1 285 1 73 1 312 1 314 1 74 1 211 2 119 1 58 3 120 2 356 3 142 1 294 1 99 1 295 1 296 1 215 1 321 1 244 4 168 1 171 1 368 1 323 1 23 1 146 4 191 1 148 1 109 1 
80 1 347 1 24 1 33 1 244 2 146 2 265 2 58 1 356 1 
11 1 0 1 224 1 25 1 211 1 58 3 356 3 317 1 294 1 296 1 347 2 69 1 168 1 244 3 171 1 23 1 265 3 146 3 109 1 
25 1 211 1 289 1 58 2 356 2 347 1 244 2 265 2 146 2 337 1 
24 1 325 1 225 1 1 1 314 1 74 1 119 1 199 1 280 1 258 1 295 1 244 1 323 1 146 1 268 1 
24 1 325 1 225 1 1 1 314 1 74 1 119 1 199 1 280 1 49 1 295 1 244 1 282 1 146 1 268 1 
196 1 312 1 289 1 152 1 291 1 120 2 99 1 154 1 215 2 321 1 361 1 234 2 173 1 191 1 337 1 60 1 148 1 53 1 184 1 
244 1 171 1 146 1 265 1 58 1 356 1 124 1 109 1 
24 1 25 1 211 1 58 4 356 4 80 1 42 1 347 2 33 1 203 1 244 5 168 1 265 5 146 5 
26 1 244 2 171 1 146 2 265 2 58 2 356 2 124 1 
345 1 334 1 44 1 
345 2 301 1 188 1 48 1 44 2 65 1 
345 1 44 1 
345 1 44 1 
301 1 65 1 
301 1 65 1 
301 1 65 1 
345 1 209 1 44 1 
345 1 209 1 44 1 
345 1 209 1 44 1 
79 1 345 1 44 1 
79 1 345 1 44 1 
79 1 345 1 44 1 
192 1 0 1 222 1 24 1 29 1 64 1 257 1 345 1 259 1 265 2 308 1 160 1 95 1 76 1 58 2 356 2 213 1 296 1 334 1 362 1 103 1 244 2 146 2 44 1 
11 1 0 2 222 2 126 1 56 1 88 1 76 2 48 1 111 1 296 2 345 2 20 1 362 2 103 3 44 2 308 1 267 2 160 2 269 1 
335 1 322 1 30 2 71 2 112 1 
162 1 322 1 71 1 
162 1 71 1 112 1 
335 1 322 2 30 1 71 3 112 1 281 1 
100 1 335 1 322 1 30 1 71 2 112 1 
87 1 0 5 130 1 29 1 198 1 154 1 66 1 201 1 259 1 136 3 179 2 305 1 306 1 263 2 7 1 8 2 9 3 115 2 11 2 95 1 236 1 329 1 270 4 39 1 165 1 296 5 43 1 363 1 173 1 245 1 108 1 85 1 
296 1 0 1 270 1 38 1 
87 1 0 3 29 1 198 1 154 1 66 1 201 1 179 2 136 4 306 1 263 1 8 2 9 3 115 2 52 1 11 3 270 2 329 1 39 1 165 1 296 3 43 1 363 1 173 1 245 1 108 2 
87 1 0 4 127 1 90 1 29 2 198 2 154 2 66 1 201 1 136 7 179 4 306 1 263 2 8 4 9 5 115 4 52 1 11 4 270 3 329 2 39 1 165 1 296 4 43 1 363 2 173 2 245 1 45 1 108 3 
367 1 
314 1 104 1 19 1 
295 1 314 1 
314 3 74 1 2 1 19 2 295 1 350 1 367 1 
295 1 314 1 74 1 
314 1 147 1 
314 1 261 1 
329 1 118 1 339 1 152 3 315 2 18 1 154 1 166 1 241 1 215 7 319 1 260 1 336 1 365 4 234 3 183 1 184 2 161 1 
150 3 229 1 339 1 152 10 63 4 198 3 132 1 154 4 234 15 183 2 53 1 161 1 184 5 185 1 329 4 118 1 315 3 40 1 120 2 240 1 18 2 99 1 166 1 241 2 215 31 319 5 321 1 363 3 365 16 336 2 170 1 84 1 173 3 191 1 
329 1 118 1 339 1 152 4 315 2 120 4 18 1 99 2 154 1 166 1 241 1 215 9 319 1 321 2 243 1 336 1 365 5 84 1 327 1 234 4 191 2 183 1 53 2 184 3 
329 1 118 1 339 1 152 3 315 2 18 1 154 1 166 1 241 1 215 7 319 1 336 1 365 4 234 3 183 1 184 2 161 1 
329 1 118 1 339 1 152 3 315 2 18 1 154 1 166 1 241 1 215 7 319 1 336 1 365 4 234 3 183 1 184 2 161 1 
125 1 225 1 325 1 1 1 299 1 199 1 280 1 5 2 262 2 180 1 182 1 268 1 352 1 116 1 314 1 57 1 332 2 295 1 101 1 242 1 22 2 217 1 149 1 
116 1 162 1 325 1 225 1 1 1 89 1 290 1 199 1 112 1 332 1 41 1 281 1 5 1 101 1 216 1 242 1 322 1 137 1 262 1 22 1 71 2 59 1 268 1 352 1 286 1 219 1 
225 1 325 1 252 1 1 1 89 1 199 1 112 1 281 1 5 1 262 1 71 2 268 1 352 2 286 1 116 1 162 1 75 1 290 1 316 1 332 1 41 1 101 2 242 1 216 1 322 1 364 1 22 1 59 1 123 1 219 1 
225 1 325 1 252 2 1 1 199 1 112 1 281 1 5 1 137 1 262 1 180 1 71 2 268 1 352 3 286 1 116 1 353 1 162 1 290 1 316 1 332 1 41 1 101 3 242 1 216 1 322 1 364 1 22 1 59 1 123 1 
225 1 325 1 252 2 1 1 199 1 112 1 281 1 5 1 137 1 262 1 71 2 268 1 352 2 286 1 353 1 162 1 290 1 316 1 332 1 101 2 216 1 322 1 364 1 22 1 123 1 
371 1 
194 1 87 1 0 4 324 5 278 3 151 1 130 1 110 2 341 1 93 1 346 1 302 2 69 1 303 2 158 3 349 1 305 2 8 1 265 1 9 1 266 1 159 1 35 1 11 1 39 1 98 1 165 1 272 1 294 1 296 4 80 1 169 2 244 1 83 1 171 1 23 1 245 1 146 1 175 3 108 2 109 1 85 5 
194 1 87 1 0 4 324 5 278 3 151 1 130 1 110 2 341 1 93 1 346 1 302 2 69 1 303 2 158 3 349 1 305 2 8 1 265 1 9 1 266 1 159 1 35 1 11 1 39 1 98 1 165 1 272 1 294 1 296 4 80 1 169 2 244 1 83 1 171 1 23 1 245 1 146 1 175 3 108 2 109 1 85 5 
87 1 324 4 0 4 278 2 130 1 93 1 136 2 8 1 9 1 11 1 98 1 294 1 296 4 244 1 23 1 146 1 245 1 109 1 248 1 110 2 341 1 346 1 69 1 158 2 305 2 265 1 266 1 307 2 159 1 35 1 39 1 165 1 80 1 274 1 169 2 171 1 369 2 175 2 85 4 
87 1 0 5 324 4 325 2 225 2 278 2 1 1 130 1 280 2 93 1 136 2 8 2 51 1 9 2 11 2 57 1 98 1 294 1 295 1 296 5 143 1 244 1 23 1 245 1 146 1 108 2 109 1 194 1 110 2 199 1 341 1 201 1 67 1 346 1 302 2 69 1 303 2 158 2 305 3 265 1 266 1 268 2 159 1 35 1 314 1 39 1 165 1 274 1 80 1 169 2 366 1 171 1 217 1 175 2 85 6 
35 1 324 2 0 3 164 1 278 1 98 1 341 1 294 1 296 3 93 1 80 1 69 1 244 1 171 1 305 1 23 1 265 1 146 1 266 1 159 1 85 2 109 1 
0 3 324 3 341 1 93 1 69 1 305 1 265 1 266 1 159 1 35 1 11 1 164 1 98 1 39 1 294 1 296 3 80 1 244 1 171 1 23 1 146 1 175 1 85 1 109 1 
0 3 324 3 278 1 341 1 93 1 69 1 158 1 305 1 265 1 266 1 159 1 35 1 11 1 164 1 98 1 39 1 294 1 296 3 80 1 244 1 171 1 23 1 146 1 175 1 109 1 85 2 
87 1 324 6 0 5 278 4 130 1 93 1 8 1 9 1 11 5 98 1 294 1 296 5 244 1 23 1 146 1 245 1 108 2 109 1 194 1 151 1 110 2 341 1 346 1 302 2 69 1 303 2 158 4 349 1 304 1 305 3 265 1 266 1 159 1 35 1 164 1 39 5 165 1 272 1 80 1 169 2 171 1 83 1 175 4 85 7 
87 1 324 4 0 4 278 2 130 1 93 1 136 2 8 1 9 1 11 2 98 1 294 1 296 4 244 1 23 1 146 1 245 1 108 2 109 1 194 1 110 2 341 1 346 1 302 2 69 1 303 2 158 2 305 2 265 1 266 1 159 1 35 1 39 1 165 1 80 1 274 1 169 2 171 1 175 2 85 4 
194 1 87 1 0 4 324 4 278 2 130 1 110 2 341 1 93 1 346 1 302 2 69 1 303 2 158 2 349 1 305 2 8 1 265 1 9 1 266 1 159 1 35 1 11 1 39 1 98 1 165 1 272 1 294 1 296 4 80 1 169 2 244 1 83 1 171 1 23 1 146 1 245 1 175 2 108 2 85 4 109 1 
194 1 87 1 0 4 324 4 278 2 130 1 110 2 341 1 93 1 346 1 302 2 69 1 303 2 158 2 349 1 305 2 8 1 265 1 9 1 266 1 159 1 35 1 11 1 39 1 98 1 165 1 272 1 294 1 296 4 80 1 169 2 244 1 83 1 171 1 23 1 146 1 245 1 175 2 108 2 85 4 109 1 
248 1 87 1 0 4 324 4 278 2 129 1 130 1 110 2 341 1 93 1 346 1 136 2 69 1 158 2 305 2 8 1 265 1 307 2 9 1 266 1 159 1 35 1 11 1 39 1 98 1 165 1 294 1 296 4 80 1 167 1 169 2 244 1 83 1 171 1 23 1 146 1 245 1 369 2 175 2 85 4 109 1 
250 1 225 8 325 8 227 1 1 2 255 1 199 2 280 2 4 1 347 1 137 1 70 1 204 1 265 1 234 1 268 7 53 2 314 3 312 2 355 1 57 1 75 1 291 1 58 1 120 4 356 1 99 2 295 2 215 2 321 2 244 1 365 1 276 2 368 1 146 1 144 1 217 1 191 2 148 2 
196 1 25 1 152 1 198 1 154 1 265 1 234 2 141 1 53 1 184 1 329 1 312 1 289 1 211 1 58 1 120 2 356 1 99 1 215 3 321 1 121 1 363 1 244 1 365 1 146 1 173 1 191 1 337 1 148 1 
196 1 24 2 152 2 339 1 154 1 234 3 53 1 184 2 329 1 312 1 289 1 118 1 315 1 291 1 120 2 18 1 99 1 166 1 241 1 215 6 321 1 365 3 104 1 191 1 337 1 148 1 
150 3 196 13 24 1 229 1 152 2 63 4 198 3 154 1 234 7 53 2 186 1 329 3 312 1 355 1 331 1 289 13 17 1 40 2 120 4 99 2 215 17 319 2 321 2 121 1 363 3 365 10 368 1 173 1 191 2 106 1 337 3 148 2 
24 1 225 1 325 1 1 1 199 1 258 1 280 1 347 1 265 1 234 1 268 1 53 1 354 1 314 1 312 1 355 1 74 1 119 1 239 1 58 1 293 1 120 2 356 1 99 1 214 1 295 1 215 2 321 1 121 1 244 2 168 1 365 1 323 1 368 1 146 2 191 1 337 1 148 1 
225 1 325 1 1 1 280 1 234 2 53 2 329 1 289 2 58 1 142 1 99 2 295 1 244 2 146 2 191 2 337 2 148 2 251 1 196 2 152 2 198 1 199 1 258 1 347 1 300 1 113 1 265 1 268 1 163 1 312 2 314 1 74 1 119 1 120 4 356 1 215 5 319 2 121 1 321 2 363 1 168 1 365 3 368 1 323 1 220 1 
196 1 329 1 312 1 289 1 152 1 28 1 291 1 120 2 99 1 215 2 319 1 321 1 363 1 365 2 191 1 337 1 148 1 53 1 
196 1 312 1 289 1 152 1 291 1 120 2 99 1 154 1 215 2 321 1 173 1 234 2 191 1 337 1 60 1 148 1 53 1 184 1 
196 2 152 2 198 1 154 1 234 2 53 1 184 1 329 1 312 1 289 2 291 1 120 2 99 1 215 4 319 1 321 1 363 1 365 2 173 1 191 1 337 2 148 1 
196 1 329 1 312 1 289 1 152 1 28 1 120 2 99 1 215 2 319 1 321 1 363 1 70 1 365 2 191 1 337 1 148 1 53 1 
196 1 312 1 289 1 152 1 120 2 99 1 154 1 215 2 321 1 70 1 173 1 234 2 191 1 337 1 60 1 148 1 53 1 184 1 
196 1 329 1 312 1 289 1 152 1 198 1 120 2 99 1 215 2 319 1 321 1 363 1 70 1 365 2 191 1 337 1 148 1 53 1 
196 1 329 1 312 1 289 1 152 1 198 1 120 2 99 1 215 2 319 1 321 1 363 1 365 2 191 1 337 1 148 1 53 1 
24 1 225 1 325 1 1 1 199 1 258 1 280 1 234 1 268 1 53 1 314 1 312 1 355 1 74 1 119 1 120 2 142 1 99 1 295 1 215 2 321 1 365 1 244 1 323 1 368 1 146 1 191 1 148 1 
24 1 225 1 325 1 1 1 199 1 280 1 49 1 282 1 234 1 268 1 53 1 13 1 314 1 312 1 355 1 74 1 119 1 120 2 99 1 295 1 215 2 321 1 365 1 244 1 368 1 146 1 191 1 148 1 
196 1 329 1 312 1 289 1 152 1 198 1 120 2 99 1 215 2 319 1 121 1 321 1 363 1 365 2 191 1 337 1 148 1 53 1 
196 1 225 1 325 1 1 1 152 1 198 1 199 1 258 1 113 1 268 1 53 1 329 1 314 1 312 1 289 1 74 1 119 1 75 1 120 2 142 1 99 1 295 1 215 2 319 1 321 1 363 1 365 2 244 1 323 1 146 1 191 1 337 1 148 1 
196 1 25 1 152 1 198 1 265 1 53 1 329 1 312 1 211 1 289 1 58 1 120 2 356 1 99 1 215 2 319 1 321 1 121 1 363 1 244 1 365 2 21 1 146 1 191 1 337 1 148 1 
221 1 150 1 229 1 152 6 63 2 231 1 198 3 154 3 327 1 234 10 53 2 184 3 328 1 94 1 36 1 330 2 329 3 97 2 210 1 40 1 120 4 99 2 215 19 319 3 321 2 363 3 365 9 173 3 191 2 107 1 
150 2 94 2 36 1 329 1 330 2 229 2 254 1 63 2 198 1 231 1 120 2 232 1 99 1 134 1 215 11 321 1 363 1 365 6 327 1 234 5 191 1 107 2 53 1 
221 1 150 3 229 3 152 3 254 1 63 4 231 1 198 3 232 1 134 1 154 2 50 1 327 1 234 12 53 2 184 1 94 1 36 1 330 3 329 3 97 1 210 1 40 1 120 4 99 2 215 24 319 2 321 2 363 3 365 12 173 2 191 2 107 2 
221 1 150 3 229 3 152 4 254 1 63 4 231 1 198 3 232 1 134 1 154 2 50 1 327 1 234 12 53 2 184 2 94 1 36 1 330 3 329 3 97 1 210 1 40 1 120 4 99 2 215 24 319 2 321 2 363 3 365 12 173 2 191 2 107 2 
150 4 229 2 339 1 152 12 254 1 63 4 231 1 198 6 232 1 134 1 154 7 327 1 234 21 53 2 184 6 287 1 94 1 12 1 36 1 330 2 329 7 97 1 210 1 118 1 315 1 17 2 40 2 120 4 18 1 99 2 166 1 241 1 215 44 319 6 321 2 363 6 298 1 365 23 84 1 173 6 191 2 107 1 
358 1 345 1 222 1 362 1 56 1 88 1 76 1 48 1 44 1 160 1 
192 1 334 1 
195 1 345 1 222 1 362 1 76 1 114 1 44 1 189 1 160 1 
209 1 157 1 
79 1 188 1 72 1 
11 1 0 1 222 1 126 1 56 1 88 1 76 1 48 1 111 1 296 1 345 1 362 1 103 2 44 1 308 1 267 1 160 1 269 1 
11 1 0 1 222 1 126 1 56 1 88 1 76 1 48 1 111 1 296 1 345 1 362 1 103 2 44 1 308 1 267 1 160 1 269 1 
11 1 0 1 222 1 126 1 56 1 88 1 76 1 48 1 111 1 296 1 345 1 362 1 103 2 44 1 308 1 267 1 160 1 269 1 
209 1 157 1 188 1 
209 1 157 1 188 1 
79 1 72 1 
79 1 188 1 72 1 
64 1 257 1 
192 1 0 1 222 1 24 1 29 1 64 1 257 1 342 1 345 1 259 1 265 2 267 1 269 1 160 1 95 1 270 1 76 1 58 2 356 2 213 1 296 1 334 1 362 1 244 2 103 1 146 2 44 1 
225 2 325 2 1 1 230 1 256 1 199 1 4 1 265 2 234 1 181 1 268 2 53 1 314 1 313 1 312 1 355 1 120 2 99 1 357 1 295 1 215 2 121 1 321 1 244 2 365 1 276 2 368 1 146 2 144 1 191 1 148 1 
325 1 225 1 1 1 314 1 208 1 57 1 199 1 280 1 295 1 5 1 326 1 217 1 268 1 149 1 
162 1 325 1 225 1 1 1 208 1 199 1 112 1 133 1 41 1 281 1 5 1 216 1 322 1 137 1 71 2 268 1 61 1 286 1 
162 1 325 2 225 2 1 1 208 1 75 1 199 1 112 1 133 1 41 1 281 1 5 1 216 1 322 1 137 1 71 2 268 2 61 1 286 1 
162 1 325 1 225 1 1 1 199 1 112 1 3 1 41 1 281 1 5 1 216 1 322 1 137 1 71 2 268 1 61 1 286 1 
253 1 
135 1 11 1 87 1 360 1 130 1 39 1 8 1 245 1 9 1 165 1 
11 5 251 1 329 2 198 2 154 2 363 2 179 5 136 10 172 2 8 5 173 2 9 5 115 5 108 5 277 1 
296 1 11 1 0 1 305 1 39 1 85 1 
87 2 0 3 225 4 325 4 1 1 130 1 199 1 280 2 201 2 67 2 305 2 51 1 8 2 9 2 52 1 268 4 207 1 314 1 271 2 57 1 165 2 295 1 296 3 297 1 366 1 245 2 217 1 218 1 85 4 
135 1 11 1 360 1 104 1 39 1 8 1 9 1 
24 1 225 1 325 1 1 1 199 1 280 1 31 1 258 1 234 1 265 2 268 1 53 1 73 1 314 1 312 1 211 2 74 1 119 1 58 2 120 2 356 2 142 1 99 1 295 1 215 1 321 1 244 3 368 1 323 1 146 3 191 1 148 1 
87 1 11 4 315 1 130 1 39 2 165 1 201 1 67 1 136 4 179 2 8 2 245 1 9 1 115 2 108 2 
11 2 87 1 194 1 0 1 130 1 39 1 165 1 296 1 302 1 136 1 303 1 305 1 245 1 8 1 9 1 108 1 85 1 
87 1 325 1 225 1 1 2 314 2 74 1 130 1 165 1 199 1 280 1 91 1 295 1 261 1 350 1 245 1 268 1 86 1 
150 1 87 1 229 1 130 1 63 1 254 1 198 2 232 1 134 1 154 2 136 4 179 5 8 4 9 6 115 5 287 1 11 2 12 1 329 2 165 1 363 2 245 1 173 2 108 2 
87 1 0 1 26 1 197 1 130 1 339 1 154 1 178 1 8 2 265 1 9 2 284 1 73 1 329 2 211 1 165 1 58 1 272 1 356 1 18 1 296 1 241 1 244 1 171 1 146 1 172 2 245 1 277 1 
222 1 362 1 56 1 64 1 235 1 
222 1 362 1 62 1 
222 1 362 1 62 1 
222 1 362 1 62 1 
222 1 362 1 212 1 
222 1 362 1 212 1 
222 1 362 1 212 1 
222 1 362 1 
345 1 44 1 
329 2 152 5 339 1 120 2 18 2 99 1 154 2 178 1 241 2 215 10 319 2 321 1 365 5 327 1 234 5 191 1 53 1 184 3 
329 1 152 1 120 2 99 1 215 2 319 1 321 1 363 1 365 2 327 1 191 1 53 1 
329 1 152 2 198 1 120 2 99 1 154 1 215 4 319 1 321 1 363 1 365 2 327 1 234 2 173 1 191 1 53 1 184 1 
221 1 14 1 152 2 120 6 18 1 99 3 215 3 241 1 319 1 321 3 365 1 84 1 327 1 234 2 191 3 53 3 184 1 
221 1 150 3 229 1 339 2 152 12 63 4 198 3 132 1 154 5 327 1 234 18 53 5 184 7 185 1 14 1 329 5 118 1 315 1 40 1 292 1 120 10 18 3 99 5 166 1 241 3 215 34 319 5 321 5 363 3 365 16 170 1 84 2 173 3 191 5 
150 1 229 1 152 2 339 1 63 1 232 1 154 1 327 1 234 4 53 1 184 2 329 1 118 1 315 1 120 2 18 1 99 1 166 1 215 8 241 1 321 1 365 4 191 1 
150 1 229 1 339 1 152 3 63 2 198 1 232 1 154 1 327 1 234 5 53 2 184 2 329 2 118 1 315 1 40 1 120 4 292 1 18 1 99 2 166 1 241 1 215 11 319 1 321 2 363 1 365 6 191 2 
150 1 329 1 229 1 254 1 63 1 198 1 120 2 99 1 232 1 134 1 215 5 321 1 363 1 365 3 327 1 234 2 191 1 53 1 
150 1 229 1 152 2 63 1 254 1 198 2 232 1 134 1 154 1 327 1 234 4 53 3 184 1 287 1 12 1 329 2 292 1 120 6 99 3 215 11 319 1 321 3 363 2 365 7 84 1 173 1 191 3 
150 1 229 1 152 2 339 1 63 1 232 1 154 1 327 1 234 4 53 1 184 2 329 1 118 1 315 1 120 2 18 1 99 1 166 1 215 8 241 1 321 1 365 4 191 1 
150 1 229 1 152 2 63 1 254 1 198 2 232 1 134 1 154 2 327 1 234 6 53 1 184 1 287 1 12 1 329 2 120 2 99 1 215 12 319 1 321 1 363 2 365 6 173 2 191 1 
150 1 329 1 229 1 254 1 63 1 198 1 120 4 292 1 99 2 232 1 134 1 215 5 321 2 363 1 365 3 327 1 234 2 191 2 53 2 
221 1 150 1 229 1 152 4 63 1 254 1 198 2 232 1 134 1 154 1 327 1 234 5 53 4 184 2 287 1 12 1 329 2 120 8 99 4 215 12 319 2 321 4 363 2 365 7 84 2 173 1 191 4 
329 1 118 1 152 6 339 1 18 3 154 1 166 2 215 7 241 3 319 3 365 3 234 4 184 3 
150 1 221 1 329 1 229 1 254 1 63 1 198 1 120 4 99 2 232 1 134 1 215 5 321 2 363 1 365 3 327 1 234 2 191 2 53 2 
329 1 118 1 315 1 339 1 152 3 120 4 18 1 99 2 154 1 166 1 215 8 241 1 319 1 321 2 365 4 84 1 234 4 191 2 53 2 184 2 
329 1 118 1 315 1 152 2 339 1 18 1 154 1 166 1 241 1 215 6 365 3 104 1 234 3 184 2 
329 1 152 2 198 1 292 1 120 2 99 1 154 1 215 4 319 1 321 1 363 1 365 2 234 2 173 1 191 1 53 1 184 1 
150 1 329 1 229 1 152 2 63 2 40 1 198 1 154 1 215 7 319 1 363 1 365 3 173 1 234 4 184 1 
150 2 339 1 152 9 63 2 198 2 154 3 234 12 53 2 184 5 14 1 329 3 331 1 118 1 315 1 17 1 40 1 120 4 18 2 99 2 166 1 241 2 215 23 319 4 321 2 363 2 365 11 84 2 173 2 191 2 
215 1 234 1 63 1 
150 1 215 1 365 1 
251 1 329 1 152 3 198 1 120 2 292 1 99 1 154 1 215 6 319 1 321 1 363 1 365 3 234 3 173 1 191 1 53 1 184 2 
150 1 229 1 152 2 63 1 254 1 198 2 232 1 134 1 154 2 327 1 234 6 53 1 184 1 287 1 12 1 329 2 120 2 99 1 215 12 319 1 321 1 363 2 365 6 173 2 191 1 
329 1 339 1 152 2 18 1 154 1 215 6 241 1 319 1 365 3 234 3 184 1 
14 1 118 1 152 2 120 2 18 1 99 1 166 1 241 1 215 3 319 1 321 1 365 1 84 1 234 2 191 1 53 1 184 1 
24 1 311 1 318 1 80 1 33 1 102 1 244 1 138 1 265 1 146 1 140 1 351 1 
80 1 24 1 33 1 244 1 102 1 146 1 265 1 
223 1 325 4 225 4 1 1 314 1 57 1 75 1 199 1 280 1 295 1 156 1 217 1 268 4 
249 1 176 1 325 2 225 2 314 1 1 2 117 1 271 1 74 1 199 1 295 1 246 1 105 1 268 2 
162 1 225 1 325 1 1 1 71 1 199 1 268 1 280 1 112 1 286 1 
295 1 4 1 225 2 325 2 1 1 314 1 313 1 137 1 75 1 199 1 268 2 
223 1 325 5 225 5 314 3 1 2 271 1 57 1 75 1 255 1 199 2 280 1 4 1 295 2 204 1 217 1 268 4 
223 1 325 5 225 5 314 3 1 2 271 1 57 1 75 1 199 2 280 1 4 1 295 2 204 1 217 1 268 4 10 1 
295 1 225 1 325 1 1 1 314 1 57 1 104 1 217 1 199 1 268 1 280 1 
24 1 325 1 225 1 314 1 1 1 74 1 119 1 58 1 199 1 356 1 280 1 49 1 295 1 347 1 244 2 265 1 146 2 268 1 
325 1 225 1 314 1 1 2 271 1 74 1 199 1 344 1 295 1 350 1 246 1 105 1 268 1 
24 1 325 1 225 1 314 1 1 1 74 1 119 1 58 1 199 1 356 1 280 1 258 1 295 1 347 1 244 2 265 1 146 2 268 1 
24 1 225 1 325 1 1 1 199 1 258 1 177 1 347 1 265 2 268 1 314 3 271 1 74 2 119 1 58 1 356 2 295 2 244 2 171 1 23 1 146 2 147 1 109 1 
24 1 225 2 325 2 1 1 199 1 177 1 49 1 156 1 347 1 265 2 268 2 314 3 271 1 74 2 119 1 58 1 356 2 295 2 244 2 171 1 23 1 146 2 147 1 109 1 
11 1 0 2 325 3 225 3 1 1 314 4 74 1 271 1 39 1 199 1 280 1 177 1 333 1 19 1 295 1 296 2 156 1 69 1 261 1 122 1 147 1 268 3 85 1 
11 1 0 2 325 3 225 3 1 1 314 4 74 1 271 1 39 1 199 1 280 1 177 1 19 1 295 1 296 2 156 1 320 1 69 1 261 1 147 1 268 3 85 1 
225 1 325 1 1 1 227 1 199 1 268 1 
250 1 325 7 225 7 227 1 314 3 1 3 74 1 75 1 255 1 199 2 280 2 344 1 4 1 295 2 137 1 276 1 204 1 350 1 246 1 105 1 268 6 
225 1 325 1 1 1 178 1 234 7 53 2 184 4 329 3 289 1 58 1 142 1 18 2 99 2 295 1 241 2 244 2 146 2 191 2 337 1 148 2 196 1 24 3 152 5 339 2 256 1 199 1 258 1 154 3 300 1 347 1 113 1 265 1 268 1 312 2 314 1 74 1 118 1 75 1 119 1 315 1 120 4 356 1 273 1 166 1 215 14 319 1 121 1 321 2 365 7 171 1 323 1 
87 2 0 3 325 1 225 1 128 1 228 1 130 2 280 1 135 1 69 1 261 1 305 1 8 1 9 1 268 1 11 1 309 1 207 1 270 1 314 2 39 1 165 2 19 1 296 3 320 1 360 1 245 2 85 2 
325 2 225 2 227 1 314 2 1 2 74 1 75 1 199 1 19 1 295 1 350 1 268 2 86 1 
96 1 24 1 264 1 283 1 190 1 
247 1 11 1 0 2 96 2 224 1 24 1 270 1 226 1 39 1 294 1 190 1 296 2 69 1 171 1 23 1 139 1 283 2 264 2 109 1 
96 1 244 1 230 1 283 1 146 1 265 1 181 1 357 1 190 1 
226 1 139 1 190 1 
116 1 101 1 242 1 364 1 123 1 316 1 352 1 219 1 
116 1 54 1 37 1 252 2 15 1 153 1 316 2 343 1 101 4 242 1 364 2 123 3 352 4 46 1 
116 1 338 1 252 1 316 1 101 2 242 1 364 1 202 1 34 1 123 1 352 2 219 1 
116 1 54 2 37 1 279 1 316 1 101 3 242 1 364 1 123 1 352 3 219 1 46 2 
238 2 55 1 205 1 123 2 
116 1 101 1 242 1 310 1 352 1 219 1 
116 1 101 2 206 1 242 1 364 1 252 1 123 1 316 1 352 2 219 1 
233 1 
116 1 101 1 242 1 364 1 123 1 316 1 352 1 219 1 
364 1 104 1 123 1 316 1 
116 1 101 1 242 1 364 1 123 1 316 1 352 1 
262 1 22 1 352 1 
116 1 54 1 37 1 316 1 101 3 242 1 275 1 364 1 123 1 352 3 219 1 46 2 
116 1 101 2 242 1 364 1 252 1 123 1 316 1 370 1 352 2 
116 1 162 1 153 1 101 1 242 1 359 1 322 1 71 1 123 1 352 1 219 1 
116 1 101 1 242 1 364 1 123 1 352 1 219 1 
116 1 101 1 242 1 364 2 316 1 352 1 219 1 
116 2 77 1 101 2 242 2 364 1 6 1 123 1 174 1 352 2 219 1 
116 1 193 1 206 1 252 2 15 1 153 1 316 1 101 3 242 1 364 1 123 2 352 3 219 1 
116 1 162 1 252 1 316 1 112 1 92 1 281 1 101 2 242 1 322 1 364 1 71 2 123 1 352 2 219 1 
116 2 252 2 15 1 153 1 316 1 101 4 242 2 364 1 145 1 370 1 123 2 352 4 219 1 
116 1 206 1 252 1 316 1 101 3 242 1 364 1 123 1 352 3 219 1 46 1 
15 1 153 1 123 1 343 1 
364 1 123 1 

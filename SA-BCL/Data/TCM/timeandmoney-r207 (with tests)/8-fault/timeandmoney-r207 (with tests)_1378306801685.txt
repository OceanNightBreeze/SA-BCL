#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (115,210) 263 (5,90) (5,90) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (115,210) 263 (5,90) (5,90) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (115,210) 263 (5,90) (5,90) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (115,210) 263 (5,90) (5,90) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (35,238,284,355) (35,238,284,355) 107 4 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (35,238,284,355) (35,238,284,355) 107 4 96 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (35,238,284,355) (35,238,284,355) 107 4 96 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (76,303) (76,303) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (76,303) 36 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (76,303) (76,303) 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (35,238,284,355) (35,238,284,355) 107 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (35,238,284,355) (35,238,284,355) 107 39 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1788 | return null
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | OPERATOR | 1659 | < -> >
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | ASSIGN | 4735 | = null
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1079 | > -> ==
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> ==
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1400 | 1 -> 0
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 7053 | = null
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 881 | 0 -> 1
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
263 1 5 1 74 1 355 1 21 1 35 1 101 1 210 1 90 1 149 1 284 1 
263 1 5 1 74 1 355 1 21 1 35 1 101 1 210 1 90 1 149 1 284 1 
263 1 5 1 74 1 355 1 21 1 35 1 101 1 210 1 90 1 149 1 284 1 
263 1 5 1 74 1 355 1 21 1 35 1 101 1 210 1 90 1 149 1 284 1 
74 1 355 1 238 1 21 1 35 1 4 1 284 2 107 1 
286 1 355 1 74 2 129 1 28 1 67 1 91 1 133 1 347 1 21 1 35 1 101 1 270 1 335 1 149 1 284 2 
355 2 74 3 28 1 238 1 115 1 203 1 347 1 21 1 35 2 270 2 149 1 284 3 308 1 
355 2 74 6 96 1 238 5 115 1 203 2 4 1 21 1 35 2 270 2 181 1 162 1 82 1 149 1 284 7 308 2 107 1 
355 2 74 6 96 1 238 5 115 1 203 2 4 1 21 1 35 2 270 2 181 1 162 1 82 1 149 1 284 7 308 2 107 1 
65 1 260 1 106 1 
65 1 6 1 281 2 
47 2 75 1 113 2 319 2 186 1 361 2 99 2 116 2 
309 1 128 1 75 1 245 2 265 1 249 1 313 1 99 3 268 2 251 2 291 1 8 1 80 2 37 1 314 1 186 1 234 1 161 1 233 1 361 2 41 1 317 1 16 1 363 1 343 1 113 3 344 1 319 2 255 1 277 1 301 1 116 2 47 2 323 2 258 1 330 1 261 1 
47 1 198 1 75 1 200 1 113 1 319 1 312 1 361 1 99 1 116 1 
243 1 274 1 254 1 65 1 113 1 319 1 77 1 192 1 312 1 99 1 139 1 283 1 150 1 106 1 
243 1 274 2 254 1 65 1 113 1 319 1 192 2 312 1 99 1 116 1 47 1 139 1 361 1 150 1 106 1 
274 1 169 1 154 1 192 1 327 1 
362 1 274 2 65 1 169 1 246 1 192 2 327 1 106 1 
274 1 192 1 327 1 
274 1 75 1 113 1 319 1 192 1 312 1 99 1 116 1 47 1 198 1 169 1 200 1 140 1 361 1 
65 1 
362 1 274 2 65 1 342 1 169 1 192 2 327 1 106 1 
362 1 274 5 297 1 244 1 65 1 152 2 89 1 192 5 20 1 3 1 69 2 45 1 145 1 169 2 324 1 327 2 106 1 339 2 95 1 
186 1 260 1 
113 2 319 2 172 1 99 2 116 1 47 1 94 1 186 2 361 1 
81 1 137 1 194 1 
363 1 245 1 343 1 113 1 344 1 249 1 99 1 250 1 251 1 8 1 323 1 258 1 186 1 233 1 41 1 317 1 
84 1 363 1 130 1 245 1 343 1 344 1 113 2 319 1 249 1 99 2 47 1 251 1 8 1 81 1 258 1 323 1 233 1 361 1 41 1 317 1 
47 3 130 1 113 3 319 3 186 1 361 3 99 3 116 1 
47 1 198 1 113 1 319 1 312 1 361 1 99 1 
47 1 113 1 319 1 94 1 312 1 172 1 361 1 99 1 116 1 
309 1 243 1 128 1 130 1 75 1 245 1 265 1 249 1 312 1 313 1 99 4 266 1 268 1 251 1 291 1 8 1 34 1 80 2 314 1 186 1 233 1 161 1 139 1 361 3 41 1 317 1 84 1 274 1 254 1 363 1 343 1 344 1 113 4 319 3 255 1 277 1 192 1 301 1 116 2 47 3 258 1 323 1 94 1 150 1 
47 1 130 1 113 2 247 1 319 2 186 1 77 1 361 1 99 2 
84 1 274 1 243 1 254 1 65 1 130 2 113 3 319 3 192 1 312 1 99 3 116 1 266 1 47 3 94 1 139 1 150 1 361 3 125 1 
47 2 130 1 81 1 113 2 319 2 94 1 194 1 361 2 99 2 116 1 
363 1 245 1 343 1 113 1 344 1 249 1 99 1 251 1 8 1 323 1 258 1 186 1 233 1 41 1 317 1 
363 1 245 1 113 1 344 1 249 1 99 1 251 1 8 1 323 1 336 1 258 1 186 1 141 1 41 1 317 1 
309 1 128 1 131 1 265 1 31 1 156 1 313 1 268 4 291 2 178 1 80 2 179 1 137 2 81 2 277 1 194 2 301 1 119 1 372 1 304 1 22 1 377 1 325 1 261 2 
47 1 113 1 319 1 139 1 312 1 361 1 99 1 202 1 
84 1 130 2 113 5 247 1 319 5 77 1 99 5 116 1 47 4 348 1 10 1 94 1 186 1 361 4 
47 2 198 1 113 2 319 2 312 1 361 2 99 2 202 1 
278 1 337 1 
278 1 337 1 
276 1 368 1 
276 1 368 1 
276 1 368 1 
278 1 214 1 337 1 
278 1 214 1 337 1 
278 1 214 1 337 1 
278 1 190 1 337 1 
278 1 337 1 170 1 
278 2 276 1 29 1 337 2 104 1 368 1 
278 1 190 1 337 1 
278 1 190 1 337 1 
274 2 65 1 228 2 241 2 192 2 302 1 197 2 278 2 219 2 147 1 269 1 102 3 294 1 148 1 124 1 14 1 337 2 104 1 126 2 
228 1 332 1 99 2 359 1 269 1 102 1 186 1 361 2 337 1 212 1 274 1 240 1 113 2 319 2 192 1 68 1 197 1 47 2 219 1 278 1 92 1 201 1 126 1 170 1 
109 1 286 1 129 1 
286 1 129 1 335 1 
109 2 286 3 335 1 232 1 338 1 174 1 
109 1 286 2 335 1 232 1 338 1 205 1 
109 1 286 2 335 1 232 2 338 1 
152 1 332 1 31 1 3 3 157 1 359 1 6 1 179 1 180 1 339 1 106 1 362 1 318 2 191 1 274 5 65 2 66 1 240 1 89 1 366 1 192 5 20 2 69 1 117 2 119 1 169 4 72 1 281 3 122 2 377 1 327 1 227 1 
244 1 152 2 332 4 154 5 31 3 3 8 176 1 177 1 33 1 6 3 179 3 63 1 106 1 339 2 362 1 191 2 274 9 65 5 66 2 89 1 366 3 192 9 20 6 69 2 117 6 346 5 119 3 169 7 281 9 122 6 377 3 350 1 327 6 329 1 227 1 
244 1 152 1 332 1 31 1 3 3 157 1 6 2 179 1 180 1 106 1 339 1 191 1 318 1 274 3 65 3 66 1 192 3 366 1 20 2 69 1 117 2 119 1 169 2 122 2 281 4 377 1 
244 1 152 1 332 2 31 2 3 5 157 1 177 1 6 3 179 2 180 1 106 1 339 1 191 1 318 2 274 4 65 4 66 1 192 4 366 2 20 4 69 1 117 4 119 2 169 3 281 7 122 4 377 2 350 1 329 1 
8 1 23 1 260 1 
8 1 155 1 
248 1 
8 1 317 1 
8 3 23 2 272 1 30 1 41 1 317 1 
8 1 41 1 317 1 
8 1 365 1 
111 1 131 2 156 3 322 1 118 1 119 1 267 1 268 7 291 3 360 1 93 1 51 1 377 1 328 1 379 2 261 4 108 1 
111 1 131 2 156 3 322 1 118 1 119 1 267 1 268 7 291 3 360 1 93 1 51 1 377 1 328 1 379 2 261 4 108 1 
111 1 131 2 156 3 322 1 118 1 119 1 267 1 268 7 291 3 360 1 136 1 93 1 51 1 377 1 328 1 108 1 379 2 261 4 
309 1 128 1 131 5 153 3 2 1 265 1 31 3 288 1 156 10 313 1 358 4 267 2 268 31 291 15 360 1 80 2 179 3 38 1 108 1 83 1 111 1 166 1 366 3 322 5 370 1 118 1 119 4 93 2 51 2 377 4 328 2 351 1 261 16 379 3 
309 2 128 2 131 3 265 2 288 1 156 4 313 2 267 1 268 9 291 4 360 1 80 4 108 1 164 1 322 1 118 1 119 1 280 1 93 1 51 1 377 1 328 1 261 5 379 2 
286 2 129 1 74 2 355 1 28 1 245 1 231 1 56 1 98 1 174 1 251 1 35 1 270 1 335 1 296 1 109 1 17 1 363 1 238 1 112 1 364 1 193 1 347 1 21 1 323 1 258 1 149 1 284 2 378 1 26 1 
286 2 129 1 74 3 355 1 28 1 245 1 56 1 98 1 174 1 251 1 11 1 35 1 270 1 60 1 335 1 296 1 109 1 363 1 238 2 112 1 364 1 193 1 347 1 220 1 323 1 258 1 149 1 284 3 378 1 26 1 
286 2 74 2 129 1 28 1 245 1 56 1 98 1 174 1 251 1 11 1 270 1 335 1 109 1 363 1 238 2 112 1 364 1 193 1 347 1 220 1 323 1 258 1 149 1 284 2 378 1 
74 1 355 1 245 1 1 1 56 2 249 1 98 2 251 1 334 1 8 1 35 1 60 1 138 1 105 1 237 1 211 1 317 1 363 1 258 1 323 1 149 2 284 1 378 2 
286 2 129 1 74 1 355 1 245 1 231 1 56 1 98 1 174 1 251 1 11 1 35 1 335 1 296 1 109 1 363 1 112 1 364 1 193 1 21 1 323 1 258 1 149 1 284 1 378 1 26 1 
287 1 
285 1 243 1 152 1 245 2 1 1 249 2 3 2 58 1 99 1 251 2 6 2 8 1 9 1 13 2 295 1 106 1 339 1 110 2 254 1 65 2 66 1 113 1 20 2 69 1 168 2 121 2 222 1 258 1 353 1 77 1 312 1 175 2 32 1 79 1 182 1 184 2 139 1 237 1 317 1 273 2 362 3 274 5 44 1 275 1 363 1 239 1 89 1 319 1 192 5 371 4 281 2 323 2 283 1 150 1 327 6 
362 1 243 1 274 3 44 1 275 1 254 1 342 1 113 1 319 1 192 3 77 1 312 1 175 1 99 1 371 2 79 1 9 1 139 1 295 1 150 1 283 1 327 2 
362 1 243 1 274 3 44 1 275 1 254 1 65 1 342 1 113 1 319 1 192 3 77 1 312 1 99 1 371 3 79 1 9 1 13 1 139 1 295 1 150 1 283 1 327 1 106 1 
362 1 243 1 274 3 44 1 275 1 254 1 65 1 342 1 113 1 319 1 192 3 77 1 312 1 175 1 99 1 371 3 168 1 79 1 9 1 13 1 139 1 295 1 150 1 283 1 327 2 106 1 
243 1 152 1 3 1 99 1 6 2 9 1 13 4 295 1 106 5 339 1 64 1 110 2 254 1 65 5 342 1 113 1 20 1 69 1 168 4 121 2 77 1 312 1 356 1 175 4 79 1 182 1 184 2 139 1 236 1 189 1 362 3 273 2 274 5 44 1 275 1 239 1 89 1 319 1 192 5 371 6 146 1 150 1 283 1 327 7 
243 1 285 1 152 1 3 1 99 1 6 2 9 1 13 2 295 1 339 1 106 1 110 2 254 1 65 2 113 1 20 1 69 1 168 2 121 2 77 1 312 1 175 2 79 1 182 1 184 2 139 1 273 2 362 2 274 4 44 1 275 1 239 1 89 1 319 1 192 4 371 4 281 2 150 1 283 1 327 4 
243 1 152 1 77 1 3 1 312 1 356 1 175 2 99 1 6 2 9 1 79 1 13 2 182 1 184 2 139 1 189 1 295 1 236 1 106 1 339 1 362 2 273 2 110 2 44 1 274 4 254 1 275 1 65 1 239 1 89 1 113 1 319 1 192 4 20 1 69 1 371 4 168 2 121 2 283 1 150 1 327 4 
243 1 152 1 77 1 3 1 312 1 356 1 175 2 99 1 6 2 9 1 79 1 13 2 182 1 184 2 139 1 189 1 295 1 236 1 106 1 339 1 362 2 273 2 110 2 44 1 274 4 254 1 275 1 65 1 239 1 89 1 113 1 319 1 192 4 20 1 69 1 371 4 168 2 121 2 283 1 150 1 327 4 
243 1 152 1 77 1 3 1 312 1 175 2 99 1 9 1 79 1 13 2 184 2 139 1 189 1 295 1 106 1 15 1 339 1 362 2 273 2 44 1 274 4 254 1 275 1 65 1 239 1 215 2 165 1 89 1 113 1 114 2 319 1 192 4 20 1 69 1 371 4 168 2 120 1 281 2 283 1 150 1 327 4 
243 1 152 1 77 1 3 1 356 1 312 1 99 1 175 3 6 2 9 1 79 1 182 1 13 3 184 2 139 1 189 1 295 1 236 1 106 1 339 1 362 2 273 2 110 2 44 1 274 4 64 1 254 1 275 1 65 1 239 1 89 1 113 1 319 1 192 4 20 1 69 1 371 5 168 3 121 2 283 1 150 1 327 5 
243 1 152 1 77 1 3 1 356 1 312 1 99 1 175 3 6 2 9 1 79 1 182 1 13 3 184 2 139 1 189 1 295 1 236 1 106 1 339 1 362 2 273 2 110 2 44 1 274 4 64 1 254 1 275 1 65 1 239 1 89 1 113 1 319 1 192 4 20 1 69 1 371 5 168 3 121 2 283 1 150 1 327 5 
243 1 285 1 152 1 3 1 99 1 9 1 13 2 295 1 339 1 106 1 254 1 65 1 165 1 215 2 113 1 114 2 20 1 69 1 168 2 77 1 312 1 175 2 79 1 184 2 139 1 273 2 362 2 274 4 44 1 275 1 239 1 89 1 319 1 192 4 371 4 281 2 150 1 283 1 327 4 
309 1 128 1 131 2 265 1 156 2 313 1 267 1 268 6 291 3 360 1 80 2 81 1 137 1 186 2 108 1 277 1 194 1 301 1 118 1 119 1 51 1 325 1 377 1 260 1 261 3 379 1 
309 2 128 2 131 1 153 3 2 1 265 2 31 2 156 2 313 2 358 3 100 1 268 14 291 6 134 1 292 1 80 4 179 1 137 11 81 11 186 1 83 1 255 1 277 2 366 2 194 4 322 1 301 1 119 2 373 1 377 1 225 1 330 1 261 8 
309 1 171 1 128 1 130 1 245 1 265 1 249 1 99 2 313 1 206 1 250 1 251 1 268 2 291 1 8 1 80 2 186 1 233 1 187 1 361 1 41 1 317 1 84 1 363 1 343 1 344 1 113 2 319 1 277 1 255 1 194 1 301 1 47 1 373 1 258 1 323 1 330 1 261 1 
245 3 249 1 57 2 333 2 156 8 204 2 99 3 251 3 290 2 291 10 8 2 11 1 161 2 108 1 343 2 113 3 344 2 255 1 301 3 118 1 119 3 258 2 261 10 309 3 128 3 27 1 354 1 130 1 131 4 265 3 31 2 313 3 267 1 268 20 360 1 80 6 179 2 137 7 81 7 271 1 186 2 233 2 361 1 41 2 317 2 84 1 363 2 319 1 277 3 366 2 194 7 322 4 47 1 373 1 323 3 51 1 377 3 330 1 379 1 
251 1 86 1 245 1 323 1 249 1 
309 1 128 1 131 1 265 1 31 1 156 1 313 1 99 1 268 3 291 2 80 2 179 1 81 1 137 1 361 1 316 1 113 1 319 1 277 1 366 1 194 1 116 1 301 1 47 1 119 1 373 1 94 1 377 1 261 1 
309 1 128 1 277 1 265 1 194 1 31 1 156 1 322 1 313 1 301 1 119 1 268 2 178 1 80 2 81 1 137 1 325 1 261 2 
309 1 128 1 131 1 277 1 265 1 194 1 156 1 313 1 301 1 268 2 304 1 291 2 80 2 179 1 81 1 137 1 325 1 377 1 
309 1 128 1 131 1 265 1 31 1 156 2 313 1 268 4 291 2 80 2 179 1 137 2 81 2 366 1 277 1 194 2 322 1 301 1 119 1 325 1 377 1 261 2 
86 1 
86 1 
86 1 
309 1 128 1 131 1 265 1 31 1 156 2 313 1 268 4 291 2 80 2 179 1 137 2 81 2 366 1 277 1 194 2 322 1 301 1 119 1 377 1 261 2 
309 1 128 1 245 1 265 1 249 1 99 1 313 1 268 2 251 1 291 1 8 1 80 2 186 1 233 1 161 1 41 1 317 1 363 1 343 1 344 1 113 1 277 1 255 1 301 1 258 1 323 1 330 1 261 1 
309 1 128 1 245 1 265 1 249 1 99 1 313 1 268 2 251 1 291 1 8 1 80 2 336 1 186 1 141 1 41 1 317 1 363 1 344 1 113 1 277 1 255 1 301 1 258 1 306 1 323 1 330 1 261 1 
309 1 128 1 131 1 265 1 31 1 156 2 313 1 268 4 291 2 80 2 179 1 137 2 81 2 366 1 277 1 194 2 322 1 301 1 119 1 373 1 377 1 261 2 
309 1 128 1 131 1 245 1 265 1 31 1 156 2 57 1 99 1 313 1 268 4 251 1 291 2 8 1 80 2 179 1 81 2 137 2 233 1 161 1 41 1 317 1 17 1 363 1 343 1 344 1 113 1 277 1 366 1 194 2 322 1 301 1 119 1 258 1 323 1 377 1 261 2 
309 1 128 1 265 1 31 1 156 1 313 1 99 1 268 3 291 1 80 2 179 1 137 1 81 1 361 1 113 1 319 1 277 1 366 1 194 1 322 1 116 1 301 1 47 1 119 1 49 1 373 1 94 1 377 1 261 2 
309 2 128 2 331 2 131 3 153 1 55 1 2 1 265 2 31 3 156 6 313 2 358 2 268 19 291 10 80 4 179 3 83 1 164 1 19 2 299 1 366 3 345 1 322 3 119 3 221 1 375 1 50 1 24 1 377 3 261 9 
309 3 128 3 331 4 131 2 153 2 55 1 265 3 288 2 31 3 156 4 313 3 158 1 358 2 268 26 291 12 293 1 80 6 179 2 61 1 83 2 164 1 19 1 299 2 366 3 218 1 345 2 322 2 196 1 119 3 349 1 50 1 24 1 377 2 261 14 
309 3 128 3 331 4 131 4 153 3 55 1 2 1 265 3 288 1 31 4 156 8 313 3 158 1 358 4 267 1 268 41 291 21 360 1 293 1 80 6 179 4 61 1 108 1 83 3 164 1 19 1 299 2 366 4 218 1 345 1 367 1 322 4 196 1 118 1 119 5 349 1 375 1 50 1 24 1 51 1 377 5 379 1 261 20 
309 4 128 4 331 4 131 4 153 3 55 1 2 1 265 4 288 2 31 4 156 7 313 4 158 1 358 4 267 1 268 38 291 18 360 1 293 1 80 8 179 3 61 1 108 1 83 3 164 1 19 1 299 2 366 4 218 1 345 1 367 1 322 3 196 1 118 1 119 5 349 1 375 1 50 1 24 1 51 1 377 4 379 1 261 20 
309 2 128 2 331 4 131 7 153 4 55 1 2 2 265 2 288 1 31 7 156 14 313 2 158 1 358 4 267 1 268 52 291 25 360 1 293 1 292 2 80 4 179 7 61 1 108 1 83 2 164 1 19 1 299 1 366 7 218 1 345 1 322 7 196 1 118 1 119 8 349 1 50 1 24 1 51 1 377 8 379 1 261 27 
219 1 278 1 228 1 229 1 14 1 337 1 104 1 302 1 197 1 126 1 
212 1 170 1 
219 1 278 1 228 1 374 1 257 1 320 1 337 1 197 1 126 1 
274 1 65 1 228 1 241 1 192 1 302 1 197 1 278 1 219 1 269 1 102 2 294 1 148 1 124 1 14 1 337 1 104 1 126 1 
274 1 65 1 228 1 241 1 192 1 302 1 197 1 278 1 219 1 269 1 102 2 294 1 148 1 124 1 14 1 337 1 104 1 126 1 
274 1 65 1 228 1 241 1 192 1 302 1 197 1 278 1 219 1 269 1 102 2 294 1 148 1 124 1 14 1 337 1 104 1 126 1 
43 1 214 1 29 1 
43 1 214 1 29 1 
25 1 190 1 
29 1 25 1 190 1 
201 1 68 1 
228 1 332 1 99 2 359 1 102 1 186 1 361 2 337 1 212 1 274 1 240 1 113 2 241 1 319 2 192 1 68 1 256 1 197 1 219 1 278 1 47 2 92 1 169 1 201 1 148 1 126 1 170 1 
43 1 214 1 
29 1 25 1 190 1 
53 1 309 1 128 1 0 1 245 2 265 1 357 1 99 2 313 1 251 2 268 2 291 1 8 1 80 2 40 1 317 1 16 2 363 1 113 2 319 2 277 1 255 1 369 1 301 1 373 1 258 1 323 2 282 1 307 1 330 1 261 1 
109 1 286 2 17 1 129 1 363 1 112 1 245 2 311 1 193 1 174 1 289 1 251 2 208 1 11 1 335 1 258 1 323 2 296 1 378 1 
109 1 286 2 129 1 363 1 87 1 112 1 245 1 193 1 174 1 251 1 208 1 11 1 335 1 323 1 258 1 296 1 378 1 
363 1 245 1 1 1 249 1 144 1 289 1 251 1 8 1 334 1 258 1 323 1 378 1 237 1 317 1 
109 1 286 2 129 1 363 1 112 1 245 1 311 1 193 1 174 1 289 1 251 1 208 1 11 1 335 1 258 1 323 1 296 1 378 1 
103 1 
297 1 65 1 324 1 20 1 3 1 260 1 106 1 
152 1 3 1 6 1 182 1 339 1 106 1 362 1 110 1 274 1 65 2 89 1 192 1 20 1 69 1 121 1 281 1 327 1 
152 4 245 3 54 1 155 3 249 1 3 9 333 2 58 1 251 3 160 2 8 10 6 6 62 2 253 2 106 2 339 4 17 1 297 1 66 2 65 8 216 2 298 1 217 1 20 8 69 4 117 6 119 2 23 2 258 4 122 6 224 2 226 2 30 1 31 2 179 2 185 2 315 1 41 3 317 3 362 3 274 5 363 3 89 4 365 2 192 5 366 2 48 2 323 3 281 12 324 1 377 2 326 1 150 2 327 5 
152 2 153 1 31 2 3 8 58 1 158 1 358 1 293 1 6 3 179 2 61 1 235 1 339 2 106 2 362 1 83 1 163 1 274 1 66 1 65 5 216 1 89 2 192 1 366 2 20 5 69 2 117 5 196 1 119 2 48 2 349 1 281 6 122 5 377 2 327 1 
152 1 75 1 312 1 356 1 3 2 99 1 267 1 360 1 140 1 361 1 339 1 274 1 216 1 89 1 113 1 319 1 192 1 143 1 20 2 69 1 116 1 119 2 47 1 48 2 198 1 200 1 51 1 377 1 
297 1 152 1 65 1 89 1 20 1 3 1 69 1 324 1 339 1 106 1 
65 5 216 1 366 2 31 2 20 5 333 1 3 5 117 5 119 2 48 2 6 5 179 2 122 5 281 10 377 2 
362 1 274 1 65 1 192 1 327 1 106 1 
127 1 244 1 353 1 152 2 245 4 1 1 249 2 3 2 58 2 251 4 8 1 135 1 315 2 339 2 237 1 317 1 362 2 274 3 363 1 66 2 89 1 217 1 192 3 20 2 69 2 222 1 258 1 323 4 327 4 
309 1 128 1 75 1 245 1 265 1 249 1 313 1 99 3 268 1 251 1 291 1 8 1 80 2 314 1 186 1 161 1 233 1 361 2 41 1 317 1 363 1 343 1 113 3 344 1 319 2 255 1 277 1 116 2 301 1 47 2 323 1 258 1 
152 1 66 1 65 4 89 1 20 2 3 1 69 1 58 1 117 2 6 2 122 2 281 4 339 1 106 2 379 1 
219 1 142 1 126 1 
219 1 142 1 126 1 
219 1 142 1 126 1 
219 1 209 1 126 1 
219 1 123 1 68 1 14 1 126 1 
219 1 209 1 126 1 
219 1 209 1 126 1 
219 1 126 1 
278 1 337 1 
309 2 128 2 131 2 265 2 288 1 156 3 322 1 313 2 118 1 119 1 267 1 268 8 291 4 360 1 80 4 51 1 377 1 379 1 261 4 108 1 
131 2 156 2 118 1 267 1 119 1 268 6 291 3 360 1 51 1 377 1 260 1 379 1 108 1 261 3 
309 1 128 1 131 1 265 1 366 1 31 1 156 2 322 1 313 1 119 1 268 4 291 2 80 2 179 1 71 1 377 1 261 2 
83 1 131 1 153 1 2 1 366 1 31 1 156 2 322 1 358 2 119 1 268 7 291 4 179 1 377 1 261 3 
309 2 128 2 131 5 153 2 2 1 265 2 31 2 288 2 156 9 313 2 358 2 267 2 268 23 291 12 134 1 360 1 292 1 80 4 179 2 12 1 108 1 366 2 322 4 118 1 119 3 51 2 377 3 379 1 261 11 
268 1 291 1 358 1 
268 1 153 1 261 1 
309 1 128 1 131 2 265 1 366 1 31 1 333 1 156 3 322 1 313 1 119 1 268 6 291 3 80 2 71 1 179 1 377 1 261 3 
309 1 128 1 131 1 153 1 265 1 31 2 156 2 313 1 158 1 358 1 268 12 291 6 293 1 80 2 179 2 61 1 83 1 164 1 366 2 322 1 196 1 119 2 349 1 377 2 261 6 
131 1 156 2 322 1 119 1 267 1 268 6 291 3 360 1 51 1 377 1 261 3 
309 1 128 1 131 1 265 1 288 1 156 2 322 1 313 1 118 1 267 1 268 3 291 2 80 2 12 1 51 1 261 1 108 1 
309 1 128 1 164 1 131 3 265 1 143 1 156 5 322 2 313 1 267 2 119 2 268 10 291 5 360 1 80 2 51 2 377 2 261 5 
309 1 164 1 128 1 265 1 31 1 156 1 322 1 313 1 119 1 268 2 80 2 261 2 
309 1 164 1 128 1 131 1 265 1 366 1 31 1 156 2 322 1 313 1 119 1 268 4 291 2 80 2 179 1 377 1 261 2 
309 3 164 1 128 3 131 1 265 3 288 1 156 2 322 1 313 3 267 1 268 3 291 2 80 6 12 1 375 1 51 1 261 1 
309 5 128 5 131 7 153 3 2 1 265 5 288 2 31 3 156 12 313 5 358 4 267 3 268 34 291 18 360 2 80 10 179 3 12 1 38 1 108 1 83 1 164 1 166 1 366 3 322 5 118 1 119 5 71 1 375 1 51 3 377 5 379 1 351 1 261 16 
309 1 128 1 131 2 153 1 265 1 156 2 313 1 358 1 267 1 268 8 291 4 360 1 80 2 108 1 83 1 164 1 118 1 119 1 349 1 51 1 377 1 379 1 261 4 
309 2 128 2 131 2 153 1 2 1 265 2 31 1 156 3 313 2 358 2 267 1 268 11 291 5 360 1 80 4 108 1 83 1 164 1 366 1 322 1 118 1 119 2 349 1 71 1 51 1 377 1 379 1 261 6 
309 3 128 3 131 3 153 1 265 3 31 2 288 1 156 4 313 3 158 1 358 1 267 1 268 19 291 10 360 1 293 1 80 6 179 2 61 1 108 1 83 1 164 1 366 2 322 1 196 1 118 1 119 3 71 1 349 1 51 1 377 3 379 1 261 9 
309 3 128 3 131 3 153 1 265 3 288 1 31 2 156 5 313 3 158 1 358 1 267 1 268 17 291 7 360 1 293 1 80 6 179 1 61 1 108 1 83 1 164 1 366 2 322 2 196 1 118 1 119 3 71 1 349 1 51 1 377 2 379 1 261 10 
309 1 128 1 131 2 153 1 265 1 156 2 313 1 358 1 267 1 268 8 291 4 360 1 80 2 108 1 83 1 164 1 118 1 119 1 349 1 51 1 377 1 379 1 261 4 
309 1 128 1 131 1 153 1 265 1 31 2 156 2 313 1 158 1 358 1 268 12 291 6 293 1 80 2 179 2 61 1 83 1 164 1 366 2 322 1 196 1 119 2 349 1 377 2 261 6 
309 4 128 4 131 3 153 1 265 4 31 2 288 2 156 5 313 4 158 1 358 1 267 1 268 18 291 8 360 1 293 1 80 8 179 1 61 1 108 1 83 1 164 1 366 2 322 2 196 1 118 1 119 3 349 1 71 1 51 1 377 2 379 1 261 10 
309 4 128 4 131 3 153 1 265 4 31 3 288 2 156 6 313 4 158 1 358 1 268 16 291 7 293 1 80 8 179 2 61 1 83 1 164 1 366 3 322 3 196 1 119 3 349 1 375 1 377 2 261 9 
131 3 156 6 322 3 118 1 267 3 119 1 268 7 291 4 360 1 51 3 377 1 108 2 261 3 
309 4 128 4 131 3 153 1 265 4 31 2 288 2 156 4 313 4 158 1 358 1 267 1 268 18 291 8 360 1 293 1 80 8 179 1 61 1 108 1 83 1 164 1 366 2 322 1 196 1 118 1 119 3 349 1 375 1 51 1 377 2 379 1 261 10 
113 1 319 1 247 1 186 1 77 1 97 1 99 1 
85 1 113 1 310 1 247 1 319 1 97 1 77 1 321 1 99 1 279 1 376 1 186 1 
251 1 363 1 8 1 245 1 1 1 258 1 323 1 249 1 260 1 237 1 317 1 
130 1 363 1 245 1 344 1 113 2 319 1 249 1 99 2 47 1 251 1 8 1 258 1 323 1 186 1 233 1 361 1 41 1 317 1 
243 1 130 1 245 1 312 1 99 2 251 1 8 3 186 1 233 1 139 1 62 1 361 2 315 1 41 2 317 2 363 1 113 2 344 1 319 2 365 1 47 1 323 1 258 1 
73 1 243 1 130 1 245 2 312 1 99 2 251 2 8 3 336 1 186 1 139 1 62 1 361 2 315 1 41 2 317 2 363 1 113 2 344 1 319 2 365 1 47 1 323 2 258 1 
73 1 245 3 155 1 249 1 251 3 8 4 62 1 315 1 41 1 106 1 317 1 274 2 363 1 65 1 18 1 365 1 192 2 242 1 23 1 323 3 258 1 150 1 327 1 
73 1 274 2 65 1 363 1 245 3 365 1 192 2 249 1 155 1 251 3 8 4 23 1 258 1 323 3 185 1 62 1 150 1 315 1 327 1 41 1 106 1 317 1 
251 1 213 1 363 1 245 1 258 1 323 1 
251 1 363 1 8 1 76 1 245 1 258 1 323 1 30 1 249 1 41 1 303 1 317 1 
309 2 128 2 130 1 131 2 245 1 265 2 156 2 57 1 204 1 357 1 99 2 313 2 267 1 268 6 251 1 291 3 360 1 8 1 80 4 81 1 137 1 186 2 161 1 233 1 361 1 41 1 108 1 317 1 17 1 363 1 343 1 344 1 113 2 319 1 277 2 194 1 301 2 118 1 119 1 47 1 373 1 258 1 323 1 51 1 377 1 379 1 261 3 
152 2 245 1 249 1 155 1 3 1 251 1 8 2 185 1 253 1 106 1 339 2 362 1 274 3 297 1 65 1 89 2 217 1 192 3 20 1 69 2 169 1 23 1 323 1 324 1 224 1 150 1 327 2 226 1 
213 1 17 1 363 1 245 2 54 1 30 1 251 2 8 2 23 1 323 2 258 2 41 1 317 1 
73 1 17 1 363 1 245 4 1 1 249 1 251 4 8 1 258 1 323 4 42 1 237 1 317 1 
251 1 363 1 8 1 36 1 245 1 258 1 323 1 271 1 41 1 46 1 303 1 317 1 
251 1 286 1 129 1 363 1 245 1 335 1 258 1 323 1 193 1 249 1 
251 2 17 1 363 1 8 1 11 1 245 2 258 1 323 2 307 1 369 1 317 1 
341 1 17 1 363 2 245 4 1 1 230 1 249 1 369 1 251 5 8 3 323 5 258 2 315 1 42 1 237 1 317 2 
17 1 363 2 245 4 1 1 230 1 249 1 369 1 251 5 8 3 59 1 323 5 258 2 315 1 42 1 237 1 317 2 
130 1 363 1 245 1 344 1 113 2 319 1 249 1 99 2 47 1 251 1 8 1 258 1 323 1 336 1 186 1 361 1 41 1 317 1 
251 1 363 1 8 1 76 1 245 1 258 1 323 1 30 1 315 1 41 1 303 1 317 1 
264 1 186 1 52 1 259 1 352 1 
262 1 243 1 274 2 254 1 65 1 264 2 192 2 312 1 132 1 266 1 159 1 169 1 186 1 139 1 52 1 150 1 259 2 106 1 352 2 
0 1 113 1 319 1 99 1 282 1 52 1 40 1 259 1 352 1 
159 1 52 1 132 1 
347 1 28 1 270 1 260 1 
347 1 74 1 355 1 28 1 35 1 270 1 284 1 
74 1 56 1 149 1 
355 1 74 3 28 1 173 1 70 1 133 2 347 1 21 1 35 1 270 1 188 1 284 3 
74 1 355 1 238 1 35 1 284 2 107 1 
109 1 286 1 355 1 74 1 129 1 21 1 35 1 270 1 284 1 151 1 308 1 
347 1 74 1 355 1 21 1 35 1 270 1 284 1 
347 2 74 1 355 1 28 1 21 1 35 1 284 1 
355 2 74 2 207 1 347 1 21 1 35 2 270 1 252 1 223 1 284 2 
355 1 74 3 28 1 238 2 203 1 347 1 21 1 35 1 270 2 162 1 82 1 284 3 308 1 
109 1 286 2 355 1 74 2 129 1 28 1 238 1 174 1 347 1 7 1 21 1 35 1 270 1 335 1 284 2 
74 1 355 1 238 1 21 1 35 1 39 1 284 2 107 1 
347 1 74 1 355 1 28 1 21 1 35 1 270 1 284 1 
74 4 355 1 28 2 238 2 203 1 173 1 133 1 347 2 199 1 35 1 270 3 188 1 284 4 308 1 
355 1 74 2 238 1 28 1 88 1 347 1 21 1 35 1 270 1 183 1 181 1 284 2 
355 1 74 3 28 1 167 1 173 2 133 2 347 1 21 1 35 1 270 1 188 1 284 3 
340 1 270 2 305 1 300 2 
74 1 355 1 21 1 35 1 195 1 284 1 
347 1 74 2 355 1 28 1 238 1 21 1 35 1 270 1 162 1 284 2 
78 1 
347 1 74 1 355 1 28 1 21 1 35 1 270 1 284 1 
355 1 74 3 238 1 28 1 133 1 347 1 21 1 35 1 270 1 162 1 284 3 
199 1 270 1 203 1 308 1 
347 1 270 1 

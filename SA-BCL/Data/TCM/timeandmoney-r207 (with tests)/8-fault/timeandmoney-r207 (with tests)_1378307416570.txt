#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArithmeticException 58 315 (258,311) (258,311) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArithmeticException 58 315 (258,311) (258,311) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArithmeticException 58 315 (258,311) (258,311) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArithmeticException 58 315 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArithmeticException 58 315 146 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArithmeticException 58 315 146 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 234 93 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 101 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3000 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1356 | return null
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12227 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1058 | = null
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3831 | 1 -> -1
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | CONSTANT | 2875 | 0 -> -1
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONSTANT | 6207 | 1 -> 0
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 2635 | stmt -> ;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
277 1 209 1 58 2 160 1 333 1 20 7 104 1 128 7 213 2 302 2 311 1 79 1 258 1 49 4 178 1 229 2 290 3 315 1 34 1 28 2 253 2 223 3 123 2 36 1 264 1 
277 1 209 1 58 2 160 1 333 1 20 7 104 1 128 7 213 2 311 1 302 2 79 1 258 1 49 4 178 1 229 2 290 3 315 1 34 1 28 2 253 2 223 3 123 2 36 1 264 1 
277 1 209 1 58 2 160 1 333 1 20 7 104 1 128 7 213 2 311 1 302 2 79 1 258 1 49 4 178 1 229 2 290 3 315 1 34 1 28 2 253 2 223 3 123 2 36 1 264 1 
277 1 209 1 333 1 160 1 20 7 213 2 78 1 311 1 79 1 80 1 258 1 49 4 290 3 315 1 28 2 123 2 223 4 264 1 58 2 128 7 104 1 302 2 178 1 229 2 34 1 253 2 36 1 
277 1 58 1 20 2 104 1 128 2 213 1 302 1 49 1 229 1 290 1 315 1 123 1 223 1 264 1 
58 1 20 2 104 1 128 2 213 1 268 1 78 1 79 1 80 1 13 1 14 1 229 1 28 1 223 1 123 1 36 1 
20 3 104 1 128 3 213 2 78 1 80 1 49 1 178 1 229 2 290 1 28 1 253 1 223 2 
277 1 209 1 58 1 20 7 104 1 128 7 213 2 302 1 312 1 49 5 178 1 229 2 290 3 315 1 146 1 34 1 28 1 253 2 123 1 223 3 264 1 
277 1 209 1 58 1 20 7 104 1 128 7 213 2 302 1 312 1 49 5 178 1 229 2 290 3 315 1 146 1 34 1 28 1 253 2 123 1 223 3 264 1 
360 1 280 1 215 1 
246 1 215 1 364 2 
260 2 150 2 191 2 240 2 284 2 29 1 77 1 350 2 
232 1 41 1 114 1 1 1 162 1 284 3 77 1 142 1 338 1 260 2 238 1 117 1 191 2 240 2 292 1 193 1 222 1 29 1 168 1 368 1 367 1 150 2 343 1 10 1 350 3 227 1 323 1 270 1 12 1 159 2 177 1 203 1 17 2 205 2 307 1 328 2 37 2 
260 1 150 1 359 1 191 1 240 1 173 1 284 1 77 1 269 1 350 1 
359 1 360 1 284 1 129 1 350 1 105 1 215 1 260 1 144 1 98 1 305 1 206 1 251 1 296 1 
150 1 359 1 360 1 284 1 129 1 105 2 350 1 215 1 260 1 144 1 98 2 191 1 240 1 206 1 251 1 
98 1 189 1 319 1 198 1 105 1 
98 2 189 1 198 1 360 1 291 1 105 2 122 1 215 1 
98 1 189 1 105 1 
150 1 359 1 198 1 173 1 284 1 77 1 269 1 105 1 350 1 260 1 98 1 191 1 240 1 119 1 
215 1 
98 2 189 1 198 1 360 1 291 1 322 1 105 2 215 1 
247 1 98 2 198 1 93 1 234 1 214 1 105 2 317 1 143 1 
280 1 29 1 
150 1 111 1 284 2 63 1 350 2 260 2 191 1 240 1 29 2 
136 1 54 1 224 1 
10 1 284 1 350 1 142 1 323 1 270 1 203 1 238 1 220 1 17 1 205 1 193 1 29 1 328 1 168 1 367 1 
150 1 9 1 10 1 284 2 142 1 323 1 350 2 270 1 260 1 238 1 203 1 67 1 240 1 17 1 205 1 193 1 328 1 54 1 168 1 367 1 
260 3 150 3 191 1 67 1 240 3 284 3 29 1 350 3 
260 1 150 1 359 1 240 1 284 1 269 1 350 1 
260 1 150 1 111 1 359 1 191 1 240 1 284 1 63 1 350 1 
232 1 111 1 359 1 1 1 46 1 162 1 284 4 77 1 142 1 260 3 238 1 144 1 117 1 98 1 190 1 191 2 240 3 193 1 222 1 29 1 168 1 368 1 367 1 150 3 343 1 10 1 9 1 129 1 323 1 350 4 105 1 227 1 12 1 270 1 159 1 203 1 206 1 67 1 251 1 17 1 205 1 307 1 328 1 37 2 
260 2 150 1 240 1 67 1 284 2 29 1 350 2 296 1 124 1 
150 3 111 1 210 1 359 1 9 1 46 1 284 3 129 1 105 1 350 3 215 1 260 3 144 1 98 1 191 1 67 2 240 3 206 1 251 1 
150 2 111 1 284 2 350 2 260 2 191 1 67 1 240 2 54 1 224 1 
10 1 284 1 350 1 323 1 142 1 270 1 203 1 238 1 17 1 205 1 193 1 29 1 328 1 168 1 367 1 
102 1 284 1 350 1 202 1 323 1 142 1 270 1 203 1 238 1 17 1 205 1 193 1 29 1 328 1 367 1 
232 2 136 2 162 1 140 1 96 1 117 1 292 2 222 1 54 2 7 1 297 1 368 1 224 2 195 1 8 1 370 1 343 1 126 1 87 1 159 4 228 1 132 1 307 1 37 2 
260 1 150 1 359 1 240 1 129 1 284 1 350 1 22 1 
150 4 111 1 9 1 284 5 163 1 350 5 260 5 191 1 67 2 240 4 29 1 296 1 330 1 124 1 
260 2 150 2 359 1 240 2 284 2 269 1 350 2 22 1 
261 1 11 1 
261 1 11 1 
289 1 192 1 
289 1 192 1 
289 1 192 1 
261 1 11 1 352 1 
261 1 374 1 11 1 
57 1 289 1 306 1 261 2 192 1 11 2 
261 1 11 1 352 1 
261 1 11 1 352 1 
261 1 89 1 11 1 
261 1 89 1 11 1 
261 1 89 1 11 1 
265 1 318 2 125 2 161 3 11 2 139 2 286 1 337 1 105 2 303 1 215 1 98 2 239 2 306 1 261 2 241 1 252 1 35 2 121 1 
150 2 266 1 151 1 318 1 161 1 374 1 11 1 86 1 284 2 286 1 139 1 350 2 105 1 81 1 260 2 98 1 239 1 261 1 240 2 316 1 69 1 29 1 342 1 35 1 
58 1 302 1 123 1 
58 1 123 1 13 1 
226 1 243 1 83 1 302 2 123 3 13 1 
243 1 285 1 83 1 302 1 123 2 13 1 
243 2 302 1 83 1 123 2 13 1 
73 2 360 1 184 1 140 1 214 1 186 1 3 1 364 3 215 2 48 2 98 5 189 1 221 1 316 1 291 1 342 1 317 1 245 2 195 1 8 1 370 1 246 1 247 1 344 2 198 4 346 1 105 5 304 1 106 1 108 1 69 1 134 3 
73 6 360 1 140 3 214 2 186 1 143 1 364 9 215 5 48 6 98 9 53 1 189 6 341 1 221 1 366 1 291 1 342 4 317 2 245 6 195 3 8 3 370 3 246 3 84 1 247 2 31 1 373 1 319 5 198 7 105 9 304 2 106 3 107 5 108 2 134 8 
73 2 360 1 184 1 214 1 140 1 143 1 215 3 364 4 48 2 98 3 342 1 317 1 195 1 245 2 8 1 370 1 246 2 247 1 344 1 198 2 346 1 105 3 304 1 106 1 108 1 134 3 
73 4 360 1 184 1 214 1 140 2 143 1 215 4 364 7 48 4 98 4 53 1 366 1 342 2 317 1 245 4 195 2 8 2 370 2 246 3 247 1 31 1 344 2 346 1 198 3 105 4 304 1 106 2 108 1 134 5 
212 1 280 1 142 1 
199 1 142 1 
40 1 
142 1 367 1 
40 1 212 2 300 1 142 3 274 1 193 1 367 1 
193 1 142 1 367 1 
211 1 142 1 
8 1 196 1 232 3 126 2 175 1 185 1 87 3 272 1 159 7 275 1 314 1 5 1 6 1 292 4 329 2 263 1 195 1 
8 1 196 1 232 3 126 2 175 1 185 1 87 3 272 1 159 7 275 1 314 1 5 1 6 1 292 4 329 2 263 1 195 1 
8 1 196 1 232 3 126 2 175 1 185 1 87 3 351 1 272 1 159 7 275 1 314 1 5 1 6 1 292 4 329 2 263 1 195 1 
232 15 42 1 183 1 162 1 140 3 185 2 116 4 5 1 314 5 6 1 292 16 170 1 263 1 368 1 195 4 196 1 8 4 369 1 370 3 343 1 172 1 126 5 348 1 60 3 175 2 87 10 272 2 159 31 106 3 275 2 307 1 90 1 329 3 37 2 
232 4 162 2 185 1 314 1 6 1 292 5 368 2 263 1 195 1 8 1 196 1 343 2 172 1 126 3 301 1 175 1 87 4 272 1 159 9 275 1 68 1 307 2 329 2 37 4 
39 1 331 1 20 2 283 1 213 1 78 1 80 1 49 1 238 1 147 1 28 1 223 1 169 1 123 2 171 1 58 1 226 1 128 2 104 1 302 1 201 1 130 1 325 1 13 1 203 1 229 1 66 1 205 1 17 1 328 1 
331 1 20 3 213 1 78 1 80 1 49 2 50 1 238 1 147 1 28 1 223 1 169 1 123 2 171 1 58 1 320 1 226 1 128 3 302 1 201 1 130 1 325 1 13 1 203 1 229 1 66 1 205 1 17 1 327 1 328 1 
331 1 20 2 78 1 80 1 49 2 238 1 28 1 147 1 223 1 123 2 171 1 320 1 58 1 226 1 128 2 302 1 130 1 325 1 13 1 203 1 66 1 205 1 17 1 327 1 328 1 
20 1 213 1 335 1 142 1 363 1 238 1 50 1 147 2 28 2 244 1 367 1 171 2 128 1 62 1 64 1 270 1 130 2 203 1 229 1 205 1 17 1 328 1 180 1 
331 1 20 1 283 1 213 1 238 1 147 1 28 1 169 1 123 2 171 1 58 1 226 1 128 1 104 1 302 1 201 1 130 1 325 1 13 1 203 1 229 1 66 1 205 1 17 1 327 1 328 1 
82 1 
135 2 332 2 181 1 279 1 2 2 284 1 186 1 142 1 4 1 48 2 238 1 144 1 98 5 189 6 99 1 291 3 100 2 296 1 246 2 247 1 153 1 62 1 105 5 350 1 353 1 304 1 203 1 204 4 305 1 17 2 205 2 206 1 251 1 19 1 110 1 208 2 113 1 359 1 360 1 214 1 363 1 215 2 216 1 364 2 260 1 365 2 317 1 367 1 225 1 129 1 270 2 88 2 377 1 328 2 134 2 
110 1 359 1 279 1 2 1 284 1 4 1 260 1 144 1 98 3 189 2 291 1 296 1 129 1 350 1 105 3 322 1 353 1 377 1 204 2 305 1 206 1 251 1 
110 1 332 1 359 1 279 1 360 1 284 1 4 1 215 1 260 1 144 1 98 3 189 1 291 1 296 1 129 1 350 1 105 3 322 1 353 1 377 1 204 3 305 1 206 1 251 1 
110 1 208 1 332 1 359 1 279 1 2 1 360 1 284 1 4 1 215 1 260 1 144 1 98 3 189 2 291 1 296 1 129 1 322 1 350 1 105 3 353 1 377 1 204 3 305 1 206 1 251 1 
135 2 332 4 279 1 2 4 284 1 186 1 287 1 4 1 48 1 144 1 98 5 340 1 189 7 99 1 291 3 100 2 296 1 247 1 246 2 59 1 350 1 105 5 353 1 204 6 15 1 305 1 251 1 206 1 19 1 109 1 110 1 208 4 359 1 360 5 214 1 215 5 260 1 365 2 317 1 129 1 322 1 88 2 377 1 134 1 
135 2 332 2 279 1 2 2 284 1 186 1 4 1 48 1 144 1 98 4 99 1 189 4 291 2 100 2 296 1 247 1 246 2 350 1 105 4 353 1 204 4 305 1 251 1 206 1 19 1 110 1 208 2 359 1 360 1 214 1 364 2 216 1 215 2 260 1 365 2 317 1 129 1 88 2 377 1 134 1 
135 2 110 1 332 2 208 2 359 1 279 1 360 1 2 2 284 1 214 1 186 1 215 1 4 1 48 1 260 1 144 1 98 4 340 1 189 4 365 2 99 1 291 2 100 2 296 1 317 1 246 2 247 1 59 1 129 1 350 1 105 4 88 2 353 1 377 1 204 4 15 1 305 1 206 1 251 1 19 1 134 1 
135 2 110 1 332 2 208 2 359 1 279 1 360 1 2 2 284 1 214 1 186 1 215 1 4 1 48 1 260 1 144 1 98 4 340 1 189 4 365 2 99 1 291 2 100 2 296 1 317 1 246 2 247 1 59 1 129 1 350 1 105 4 88 2 353 1 377 1 204 4 15 1 305 1 206 1 251 1 19 1 134 1 
110 1 101 1 359 1 279 1 129 1 284 1 105 2 350 1 353 1 4 1 260 1 144 1 377 1 98 2 204 2 305 1 251 1 206 1 296 1 
135 2 110 1 208 3 332 3 359 1 279 1 360 1 2 3 284 1 214 1 186 1 215 1 4 1 48 1 260 1 144 1 98 4 340 1 365 2 99 1 189 5 291 2 100 2 296 1 317 1 246 2 247 1 59 1 129 1 350 1 105 4 88 2 353 1 377 1 15 1 204 5 305 1 206 1 251 1 19 1 134 1 109 1 
135 2 110 1 208 3 332 3 359 1 279 1 360 1 2 3 284 1 214 1 186 1 215 1 4 1 48 1 260 1 144 1 98 4 340 1 365 2 99 1 189 5 291 2 100 2 296 1 317 1 246 2 247 1 59 1 129 1 350 1 105 4 88 2 353 1 377 1 15 1 204 5 305 1 206 1 251 1 19 1 134 1 109 1 
135 2 332 2 279 1 2 2 284 1 186 1 4 1 48 1 144 1 98 4 189 4 291 2 296 1 247 1 350 1 105 4 157 2 353 1 204 4 305 1 251 1 206 1 19 1 110 1 208 2 359 1 360 1 310 1 214 1 364 2 216 1 215 1 260 1 219 2 317 1 129 1 88 2 377 1 134 1 
232 3 136 1 280 1 162 1 185 1 117 1 6 1 292 3 222 1 29 2 54 1 7 1 224 1 263 1 368 1 195 1 196 1 8 1 343 1 126 2 87 2 272 1 159 6 307 1 329 1 37 2 
92 1 232 6 136 11 42 1 114 1 1 1 162 2 140 2 116 3 117 2 314 1 292 8 222 1 29 1 54 11 368 2 224 4 55 1 195 2 8 1 343 2 370 1 126 1 348 1 174 1 60 3 87 2 324 1 273 1 159 14 106 2 307 2 37 4 
232 1 114 1 1 1 236 1 76 1 162 1 284 2 142 1 260 1 238 1 220 1 117 1 240 1 292 1 193 1 222 1 29 1 168 1 367 1 224 1 368 1 150 1 343 1 10 1 9 1 323 1 350 2 270 1 324 1 159 2 203 1 205 1 17 1 67 1 328 1 307 1 37 2 207 1 
232 10 136 7 278 1 1 1 284 3 140 2 185 1 142 2 238 2 6 1 240 1 292 10 193 2 295 2 54 7 195 3 196 1 8 3 150 1 343 3 9 1 10 2 350 3 12 2 159 20 203 2 106 2 205 3 17 3 67 1 307 3 114 1 162 3 164 2 256 2 23 1 260 1 166 1 117 3 314 4 222 3 29 2 168 2 263 1 368 3 367 2 224 7 370 2 372 2 126 4 323 2 270 1 324 1 87 8 272 1 327 1 328 3 329 1 37 6 
39 1 232 1 44 1 114 1 74 1 1 1 282 1 284 1 162 2 142 3 363 1 338 2 24 1 260 1 165 1 238 2 117 2 52 1 240 1 292 1 222 2 7 1 368 2 367 2 150 1 343 2 62 1 350 1 270 2 159 2 203 2 67 1 205 8 17 7 327 1 328 8 307 2 71 1 37 4 
136 1 111 1 232 2 162 1 284 1 140 1 260 1 117 1 191 1 240 1 293 1 292 1 222 1 54 1 224 1 368 1 195 1 150 1 8 1 343 1 370 1 126 1 350 1 87 1 324 1 159 3 106 1 307 1 37 2 
136 1 343 1 162 1 140 1 87 1 159 2 117 1 314 1 132 1 292 2 222 1 307 1 54 1 7 1 224 1 37 2 368 1 195 1 
8 1 136 1 343 1 370 1 232 2 126 1 162 1 87 1 159 2 228 1 117 1 222 1 307 1 54 1 7 1 224 1 37 2 368 1 
136 2 232 2 162 1 140 1 117 1 314 1 292 2 222 1 54 2 7 1 368 1 224 2 195 1 8 1 343 1 370 1 126 1 87 2 159 4 106 1 307 1 37 2 
136 1 343 1 282 1 162 1 140 1 87 1 159 2 117 1 314 1 132 1 292 2 222 1 307 1 54 1 224 1 37 2 368 1 195 1 
8 1 136 1 343 1 370 1 232 2 126 1 282 1 162 1 87 1 159 2 228 1 117 1 222 1 307 1 54 1 224 1 37 2 368 1 
136 2 232 2 282 1 162 1 140 1 117 1 314 1 292 2 222 1 54 2 368 1 224 2 195 1 8 1 343 1 370 1 126 1 87 2 159 4 106 1 307 1 37 2 
8 1 232 2 370 1 136 2 343 1 126 1 162 1 140 1 87 2 159 4 106 1 117 1 314 1 292 2 222 1 307 1 54 2 224 2 37 2 368 1 195 1 
232 1 114 1 1 1 284 1 162 1 142 1 238 1 117 1 292 1 193 1 222 1 29 1 168 1 367 1 368 1 343 1 10 1 323 1 350 1 12 1 270 1 159 2 203 1 205 1 17 1 328 1 307 1 37 2 
102 1 284 1 350 1 142 1 202 1 323 1 270 1 203 1 238 1 17 1 205 1 193 1 328 1 133 1 367 1 
136 2 232 2 162 1 140 1 117 1 314 1 292 2 222 1 54 2 368 1 224 2 195 1 8 1 343 1 370 1 126 1 324 1 87 2 159 4 106 1 307 1 37 2 
232 2 136 2 39 1 284 1 162 1 140 1 142 1 238 1 117 1 314 1 292 2 193 1 222 1 54 2 168 1 224 2 367 1 368 1 195 1 8 1 370 1 343 1 372 1 126 1 10 1 323 1 350 1 87 2 12 1 159 4 203 1 106 1 205 1 17 1 328 1 307 1 37 2 
232 1 111 1 136 1 162 1 284 1 140 1 288 1 260 1 117 1 314 1 191 1 240 1 292 2 222 1 54 1 368 1 224 1 195 1 8 1 150 1 370 1 343 1 350 1 87 1 324 1 159 3 106 1 307 1 37 2 
232 10 72 1 42 1 334 2 162 2 140 3 116 2 314 3 292 9 262 1 149 1 368 2 195 3 8 3 343 2 370 3 299 1 126 3 348 1 349 1 60 1 375 1 87 6 159 19 106 3 68 1 356 2 378 1 307 2 37 4 
232 12 72 1 334 1 162 2 140 3 97 1 116 2 218 1 314 1 292 14 368 2 56 1 195 3 8 2 343 2 370 2 172 1 299 1 126 1 348 2 249 1 154 1 349 2 60 2 176 1 87 2 375 2 159 26 106 3 68 1 356 4 378 1 307 2 37 4 
232 21 72 1 42 1 334 1 162 3 140 4 336 1 185 1 97 1 116 4 218 1 314 4 6 1 292 20 149 1 263 1 368 3 56 1 195 5 196 1 8 5 343 3 370 4 172 1 299 1 126 4 348 3 249 1 154 1 349 2 60 3 176 1 375 1 87 8 272 1 159 41 106 4 68 1 356 4 378 1 307 3 329 1 37 6 
232 18 42 1 334 1 140 4 336 1 185 1 97 1 6 1 292 20 149 1 195 5 56 1 8 4 196 1 343 3 299 1 348 3 249 1 349 2 154 1 60 3 159 38 106 4 68 1 356 4 307 3 72 1 162 3 116 4 218 1 314 2 368 3 263 1 370 3 172 1 126 4 176 1 87 6 375 1 272 1 378 1 329 1 37 6 
232 24 72 1 42 2 334 1 162 1 140 7 185 1 97 1 116 4 218 1 314 6 6 1 292 26 263 1 368 1 56 1 55 2 195 8 196 1 8 8 343 1 370 7 299 1 126 7 348 2 249 1 154 1 349 1 60 4 176 1 375 1 87 13 272 1 159 50 106 7 68 1 356 3 378 1 307 1 329 1 37 2 
265 1 318 1 239 1 306 1 261 1 11 1 252 1 139 1 35 1 120 1 
151 1 374 1 
318 1 239 1 261 1 118 1 127 1 11 1 61 1 139 1 35 1 
265 1 318 1 125 1 161 2 11 1 286 1 139 1 337 1 105 1 303 1 215 1 98 1 239 1 306 1 261 1 241 1 252 1 35 1 
265 1 318 1 125 1 161 2 11 1 286 1 139 1 337 1 105 1 303 1 215 1 98 1 239 1 306 1 261 1 241 1 252 1 35 1 
265 1 318 1 125 1 161 2 11 1 286 1 139 1 337 1 105 1 303 1 215 1 98 1 239 1 306 1 261 1 241 1 252 1 35 1 
57 1 235 1 352 1 
57 1 235 1 352 1 
89 1 0 1 
57 1 89 1 0 1 
266 1 81 1 
161 1 284 2 75 1 139 1 81 1 260 2 98 1 239 1 261 1 240 2 316 1 29 1 342 1 150 2 125 1 318 1 151 1 266 1 198 1 11 1 374 1 86 1 350 2 303 1 105 1 69 1 35 1 
235 1 352 1 
57 1 89 1 0 1 
232 1 114 1 309 1 1 1 284 2 162 1 142 1 257 1 338 2 24 1 260 2 238 1 165 1 117 1 292 1 222 1 367 1 368 1 343 1 248 1 200 1 350 2 324 1 159 2 203 1 205 2 17 2 355 1 328 2 307 1 37 2 
39 1 58 1 226 1 302 1 130 1 13 1 325 1 339 1 238 1 203 1 66 1 17 2 205 2 327 1 328 2 379 1 123 2 169 1 276 1 
58 1 226 1 302 1 130 1 13 1 325 1 203 1 238 1 66 1 17 1 205 1 327 1 194 1 328 1 379 1 123 2 169 1 
62 1 142 1 270 1 130 1 363 1 339 1 238 1 203 1 17 1 205 1 70 1 328 1 244 1 367 1 
58 1 226 1 302 1 130 1 13 1 325 1 339 1 238 1 203 1 66 1 17 1 205 1 327 1 328 1 379 1 123 2 169 1 276 1 
197 1 
48 1 371 1 360 1 280 1 134 1 215 1 254 1 
360 1 214 1 186 1 364 1 215 2 48 1 98 1 99 1 365 1 189 1 291 1 100 1 317 1 246 1 247 1 105 1 134 1 
39 1 233 2 182 2 140 2 142 10 186 4 48 8 51 1 238 4 144 2 98 5 188 2 189 5 291 3 193 3 148 2 245 6 195 2 8 2 247 4 246 6 199 3 250 2 105 5 304 2 203 3 106 2 17 3 205 3 254 1 358 2 211 2 212 2 73 6 360 2 214 4 256 2 364 12 215 8 167 2 317 4 367 3 85 1 370 2 371 1 267 1 225 1 270 1 274 1 326 2 230 1 328 3 134 9 91 1 
233 2 73 5 360 2 281 1 214 2 140 2 186 2 97 1 364 6 215 5 116 1 48 5 167 1 98 1 218 1 189 1 291 1 317 2 245 5 56 1 195 2 8 2 247 2 246 3 370 2 348 1 225 1 154 1 60 1 105 1 176 1 65 1 304 1 106 2 134 8 
233 2 359 1 284 1 214 1 77 1 185 1 186 1 48 2 260 1 167 1 98 1 191 1 240 1 119 1 317 1 195 2 196 1 8 1 150 1 247 1 173 1 269 1 350 1 105 1 272 1 15 1 16 1 134 2 
247 1 371 1 360 1 214 1 186 1 215 1 48 1 134 1 317 1 254 1 
8 2 246 5 370 2 233 2 73 5 140 2 256 1 364 10 215 5 48 5 106 2 167 1 134 5 195 2 245 5 
98 1 189 1 360 1 291 1 105 1 215 1 
113 1 214 2 142 1 186 1 143 1 363 1 48 2 217 1 238 1 98 3 189 4 291 2 317 2 367 1 247 2 267 2 153 1 225 2 62 1 105 3 270 2 304 2 203 1 205 4 17 4 18 1 230 1 328 4 134 2 
232 1 1 1 162 1 284 3 77 1 142 1 260 2 238 1 117 1 191 2 240 2 193 1 222 1 29 1 168 1 368 1 367 1 150 2 343 1 10 1 350 3 227 1 323 1 270 1 12 1 159 1 203 1 205 1 17 1 307 1 328 1 37 2 
246 2 247 1 73 2 360 2 225 1 214 1 186 1 364 4 215 4 48 2 304 1 329 1 134 1 317 1 245 2 
294 1 139 1 35 1 
242 1 252 1 139 1 35 1 81 1 
294 1 139 1 35 1 
294 1 139 1 35 1 
308 1 139 1 35 1 
308 1 139 1 35 1 
308 1 139 1 35 1 
139 1 35 1 
261 1 11 1 
8 1 196 1 232 4 343 2 172 1 126 2 162 2 185 1 87 3 272 1 159 8 314 1 6 1 292 4 307 2 329 1 37 4 368 2 263 1 195 1 
196 1 8 1 232 3 126 2 280 1 185 1 87 2 272 1 159 6 6 1 292 3 329 1 263 1 195 1 
8 1 232 2 370 1 343 1 126 1 162 1 155 1 140 1 87 2 159 4 106 1 314 1 292 2 307 1 37 2 368 1 195 1 
8 1 370 1 232 4 126 1 42 1 348 1 60 1 140 1 87 2 159 7 116 2 106 1 314 1 292 3 195 1 
92 1 232 12 42 1 162 2 362 1 140 2 185 2 116 2 314 4 6 1 292 11 263 1 368 2 195 3 55 1 196 1 8 3 370 2 343 2 172 2 126 5 60 2 87 9 272 2 159 23 106 2 307 2 329 1 37 4 
116 1 232 1 159 1 
292 1 60 1 159 1 
8 1 343 1 232 3 370 1 126 2 162 1 155 1 140 1 256 1 87 3 159 6 106 1 314 1 292 3 307 1 368 1 37 2 195 1 
232 6 162 1 140 2 97 1 116 1 218 1 314 1 292 6 368 1 56 1 195 2 8 2 343 1 370 2 126 1 348 1 154 1 60 1 176 1 87 2 159 12 106 2 68 1 307 1 37 2 
196 1 8 1 232 3 126 1 185 1 87 2 272 1 159 6 314 1 292 3 195 1 
232 2 343 1 172 1 126 1 362 1 162 1 185 1 87 2 272 1 159 3 314 1 6 1 292 1 307 1 37 2 368 1 263 1 
196 1 8 2 343 1 232 5 126 3 162 1 185 2 87 5 272 2 159 10 314 2 68 1 16 1 292 5 307 1 368 1 37 2 195 2 
343 1 162 1 140 1 87 1 159 2 314 1 68 1 292 2 307 1 37 2 368 1 195 1 
8 1 232 2 370 1 343 1 126 1 162 1 140 1 87 2 159 4 106 1 314 1 68 1 292 2 307 1 37 2 368 1 195 1 
232 2 343 3 172 1 126 1 362 1 162 3 185 1 87 2 272 1 159 3 314 1 68 1 292 1 307 3 149 1 37 6 368 3 
232 18 42 1 183 1 362 1 162 5 140 3 185 3 116 4 314 5 6 1 292 16 149 1 170 1 263 1 368 5 195 5 196 2 369 1 8 5 343 5 370 3 172 2 126 7 348 1 60 3 155 1 87 12 272 3 159 34 106 3 68 1 307 5 329 1 37 10 
232 4 162 1 185 1 116 1 6 1 292 4 368 1 263 1 195 1 56 1 8 1 196 1 343 1 126 2 348 1 60 1 87 2 272 1 159 8 68 1 307 1 329 1 37 2 
232 5 42 1 162 2 140 1 185 1 116 2 314 1 6 1 292 6 263 1 368 2 56 1 195 2 8 1 196 1 343 2 126 2 348 1 60 1 155 1 87 3 272 1 159 11 106 1 68 1 307 2 329 1 37 4 
232 10 162 3 140 2 185 1 97 1 116 1 218 1 314 1 6 1 292 9 263 1 368 3 56 1 195 3 196 1 8 3 343 3 370 2 172 1 126 3 348 1 154 1 60 1 155 1 176 1 87 4 272 1 159 19 106 2 68 1 307 3 329 1 37 6 
232 4 162 2 140 2 97 1 116 1 218 1 292 7 368 2 56 1 195 2 8 1 343 2 370 1 126 1 348 1 154 1 60 1 155 1 176 1 87 1 159 11 106 2 68 1 307 2 37 4 
232 4 162 1 185 1 116 1 6 1 292 4 368 1 263 1 195 1 56 1 8 1 196 1 343 1 126 2 348 1 60 1 87 2 272 1 159 8 68 1 307 1 329 1 37 2 
232 6 162 1 140 2 97 1 116 1 218 1 314 1 292 6 368 1 56 1 195 2 8 2 343 1 370 2 126 1 348 1 154 1 60 1 176 1 87 2 159 12 106 2 68 1 307 1 37 2 
232 5 162 3 140 2 97 1 116 1 218 1 292 7 368 3 56 1 195 2 8 1 343 3 370 1 172 1 126 1 348 1 154 1 60 1 155 1 176 1 87 1 159 12 106 2 68 1 307 3 37 6 
232 5 162 3 140 2 97 1 116 1 218 1 314 2 292 7 149 1 368 3 56 1 195 2 8 1 343 3 370 1 172 1 126 2 348 1 154 1 60 1 176 1 87 4 159 12 106 2 68 1 307 3 37 6 
8 1 196 1 232 4 126 3 185 3 87 6 272 3 159 7 314 3 6 2 292 3 263 1 195 1 
232 5 162 3 140 2 97 1 116 1 218 1 292 7 149 1 368 3 56 1 195 2 8 1 343 3 370 1 172 1 126 1 348 1 154 1 60 1 176 1 87 1 159 12 106 2 68 1 307 3 37 6 
260 1 284 1 29 1 350 1 95 1 296 1 124 1 
260 1 32 1 179 1 284 1 357 1 29 1 350 1 95 1 141 1 231 1 296 1 124 1 
238 1 203 1 205 1 17 1 280 1 62 1 328 1 142 1 270 1 363 1 367 1 
150 1 284 2 142 1 323 1 350 2 270 1 260 1 238 1 203 1 67 1 240 1 17 1 205 1 193 1 29 1 328 1 168 1 367 1 
211 1 359 1 182 1 284 2 142 3 260 2 238 1 240 1 193 2 29 1 168 1 367 2 150 2 267 1 129 1 350 2 323 1 203 1 205 1 17 1 67 1 251 1 328 1 
211 1 359 1 182 1 284 2 94 1 142 3 260 2 238 1 240 1 193 2 29 1 367 2 150 2 267 1 129 1 202 1 350 2 323 1 203 1 205 2 17 2 67 1 251 1 328 2 
211 1 267 1 212 1 182 1 199 1 360 1 94 1 105 2 142 4 270 1 215 1 144 1 238 1 203 1 98 2 189 1 17 3 205 3 193 1 27 1 328 3 30 1 367 1 
211 1 267 1 212 1 182 1 199 1 360 1 94 1 105 2 142 4 270 1 215 1 144 1 238 1 203 1 98 2 188 1 189 1 17 3 205 3 193 1 328 3 367 1 
238 1 203 1 205 1 17 1 44 1 328 1 
39 1 44 1 74 1 138 1 142 3 270 2 156 1 338 1 165 1 274 1 203 2 238 3 354 1 52 1 17 6 205 7 327 1 193 1 328 7 71 1 367 2 
39 1 232 3 136 1 284 2 142 1 185 1 238 1 240 1 6 1 292 3 193 1 295 1 54 1 195 1 150 1 196 1 8 1 343 2 10 1 350 2 12 1 159 6 203 1 205 1 17 1 67 1 307 2 309 1 162 2 260 1 117 2 222 2 29 2 168 1 224 1 368 2 367 1 263 1 372 1 126 2 323 1 324 1 87 2 272 1 328 1 329 1 37 4 
358 1 212 1 360 1 214 2 186 2 142 2 215 1 48 1 144 1 98 3 188 1 189 2 291 1 148 1 317 2 247 2 371 1 198 1 199 1 105 3 270 1 326 1 205 1 17 1 230 1 328 1 134 1 254 1 
39 1 212 1 44 1 142 2 274 1 203 1 238 2 17 2 205 2 193 1 328 2 91 1 367 1 
39 1 94 1 62 1 142 1 270 1 363 1 131 1 238 1 203 1 17 4 205 4 328 4 367 1 
152 1 267 1 345 1 138 1 142 1 156 1 166 1 203 1 238 2 17 2 205 2 193 1 328 2 367 1 
238 1 203 1 58 1 205 1 17 1 328 1 123 1 270 1 13 1 325 1 
39 1 142 1 257 1 165 1 203 1 238 1 17 2 205 2 327 1 328 2 367 1 
39 1 267 1 62 1 142 3 270 1 363 1 131 1 165 1 203 2 238 2 52 1 17 4 205 5 328 5 71 1 367 2 
39 1 267 1 321 1 62 1 142 3 270 1 363 1 131 1 165 1 203 2 238 2 52 1 17 4 205 5 328 5 367 2 
150 1 284 2 142 1 323 1 350 2 202 1 270 1 260 1 238 1 203 1 67 1 240 1 17 1 205 1 193 1 29 1 328 1 367 1 
267 1 138 1 142 1 156 1 274 1 203 1 238 2 354 1 17 1 205 1 193 1 328 1 367 1 
260 1 38 1 26 1 248 1 355 1 200 1 284 1 350 1 255 1 
26 1 43 1 47 1 
38 1 112 1 26 1 29 1 255 1 
38 2 112 2 359 1 43 1 198 1 360 1 46 1 129 1 105 2 255 2 215 1 47 1 187 1 144 1 26 1 98 2 251 1 206 1 29 1 
280 1 78 1 223 1 80 1 
229 1 20 1 128 1 213 1 78 1 223 1 80 1 
128 1 28 1 147 1 
20 3 104 1 128 3 213 1 237 1 78 1 79 2 80 1 158 1 229 1 145 1 223 1 
49 1 277 1 229 1 20 2 128 2 213 1 78 1 223 1 80 1 
229 1 290 1 58 1 20 1 128 1 104 1 213 1 302 1 123 1 223 1 264 1 
229 1 20 1 128 1 104 1 213 1 223 1 80 1 
229 1 20 1 128 1 104 1 213 1 78 1 80 2 
20 2 104 1 128 2 213 2 137 1 80 1 313 1 25 1 229 2 223 1 
209 1 20 3 104 1 128 3 213 1 78 1 80 1 49 2 229 1 290 1 34 1 253 1 223 2 
58 1 20 2 361 1 226 1 104 1 128 2 213 1 78 1 302 1 80 1 13 1 49 1 229 1 223 1 123 2 
277 1 20 4 104 1 128 4 213 2 78 1 80 1 259 1 49 2 229 2 290 1 253 1 223 2 
229 1 20 1 128 1 104 1 213 1 78 1 223 1 80 1 
20 4 128 4 213 1 78 2 79 1 80 2 158 1 376 1 49 2 229 1 290 1 145 1 253 1 223 3 
20 2 45 1 104 1 128 2 21 1 213 1 78 1 80 1 312 1 49 1 229 1 223 1 
20 3 104 1 128 3 213 1 78 1 79 2 80 1 158 1 115 1 229 1 145 2 223 1 
347 1 103 1 223 2 271 2 
229 1 33 1 20 1 128 1 104 1 213 1 
49 1 209 1 229 1 20 2 128 2 104 1 213 1 78 1 223 1 80 1 
298 1 
229 1 20 1 128 1 104 1 213 1 78 1 223 1 80 1 
49 1 209 1 229 1 20 3 128 3 104 1 213 1 78 1 223 1 79 1 80 1 
376 1 290 1 253 1 223 1 
223 1 80 1 

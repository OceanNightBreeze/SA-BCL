#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 53 194 118 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 53 194 118 237 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 53 194 118 (1,81) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 53 194 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 53 194 118 (1,81) (1,81) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 53 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 256 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 53 97 132 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 302 274 16 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 53 194 118 (1,81) (1,81) 179 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 53 194 118 237 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 53 24 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 53 24 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 53 24 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 53 24 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 53 24 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration; | RETURN | 3400 | return null
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4503 | 0 -> 1
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 8735 | || -> &&
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1071 | stmt -> ;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3019 | 0 -> 1
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 827 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7622 | stmt -> ;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
85 2 40 2 205 1 2 1 295 1 4 9 121 2 253 1 50 1 59 1 96 5 258 1 262 9 263 1 307 2 309 3 19 2 137 4 104 2 270 1 145 1 29 1 149 1 80 1 281 1 111 2 155 1 113 6 
85 2 40 2 205 1 2 1 295 1 4 9 121 2 253 1 50 1 59 1 96 5 258 1 262 9 263 1 307 2 309 3 19 2 137 4 104 2 270 1 145 1 29 1 149 1 80 1 281 1 111 2 155 1 113 6 
85 2 40 2 205 1 2 1 295 1 4 10 121 2 253 1 50 1 59 1 96 6 258 1 262 10 263 1 307 2 309 4 19 2 137 5 104 2 270 1 145 1 29 1 149 1 80 1 281 1 111 2 155 1 113 7 
85 2 40 2 205 1 2 1 295 1 4 7 121 2 50 1 59 1 96 4 258 1 262 7 263 1 307 2 309 2 19 2 137 3 104 1 270 1 145 1 29 1 149 1 80 1 281 1 111 2 155 1 113 4 
85 1 19 1 137 2 40 1 205 1 104 2 4 4 121 1 253 1 29 1 149 1 59 1 96 3 111 1 262 4 263 1 113 3 309 1 
85 1 19 1 4 2 121 1 92 1 149 1 80 1 96 1 59 1 326 1 111 1 281 1 262 2 263 1 264 1 307 1 
85 2 19 2 137 1 4 3 149 1 59 1 96 2 258 1 262 3 263 1 113 1 307 1 309 1 
85 2 40 1 205 1 4 9 121 1 44 1 253 1 59 1 96 5 258 1 262 9 263 1 307 1 309 3 19 2 137 4 104 2 270 1 145 1 29 1 149 1 111 1 113 7 37 1 
85 2 40 1 205 1 4 9 121 1 44 1 253 1 59 1 96 5 258 1 262 9 263 1 307 1 309 3 19 2 137 4 104 2 270 1 145 1 29 1 149 1 111 1 113 7 37 1 
279 1 112 1 159 1 
14 2 319 1 159 1 
53 1 194 1 118 1 
53 1 194 1 118 1 237 1 
53 1 194 1 118 1 81 1 
186 1 105 1 106 1 124 1 192 1 74 1 172 1 304 1 224 1 286 1 283 1 112 1 159 1 84 1 
53 1 194 1 
162 1 229 1 186 1 105 1 315 1 
150 1 88 1 229 1 186 2 105 2 315 1 112 1 159 1 
229 1 186 1 105 1 
53 1 194 1 1 1 118 1 186 1 105 1 315 1 81 1 
159 1 
150 1 229 1 186 2 105 2 315 1 112 1 328 1 159 1 
312 1 186 5 167 2 229 2 315 2 105 5 143 1 211 1 213 2 109 1 150 1 112 1 60 2 62 1 158 1 289 1 329 1 159 1 225 1 
71 1 83 1 
71 1 83 1 
27 1 90 1 
27 1 90 1 
27 1 90 1 
184 1 71 1 83 1 
68 1 71 1 83 1 
226 1 236 1 27 1 90 1 71 2 83 2 
184 1 71 1 83 1 
184 1 71 1 83 1 
13 1 71 1 83 1 
13 1 71 1 83 1 
13 1 71 1 83 1 
53 1 195 1 313 1 257 1 186 1 219 1 105 1 71 1 83 1 99 1 100 1 
226 1 267 1 313 2 42 1 186 2 105 2 189 1 71 2 255 1 193 1 195 3 257 2 219 1 156 2 238 1 99 2 83 2 159 1 100 2 
40 1 121 1 111 1 
121 1 111 1 326 1 
278 1 40 2 107 1 249 1 111 3 326 1 
277 1 278 1 40 1 249 1 111 2 326 1 
278 1 40 1 249 2 111 2 326 1 
39 1 116 1 246 1 294 1 167 1 6 1 120 1 170 1 213 1 51 1 303 1 220 1 14 3 60 1 177 1 260 1 261 2 134 1 22 2 185 2 229 1 186 5 105 5 315 4 319 1 143 2 323 1 150 1 109 3 112 1 289 1 159 2 
162 5 116 2 246 3 6 4 167 2 206 1 48 1 170 3 299 5 213 2 51 1 303 3 220 2 223 1 14 9 60 2 260 3 261 6 62 1 134 3 185 6 229 6 186 9 188 1 105 9 315 7 319 3 143 6 276 1 150 1 109 8 112 1 287 1 289 1 159 5 
116 1 246 1 167 1 6 1 120 1 170 1 213 1 303 1 220 1 177 1 60 1 14 4 260 1 261 2 62 1 134 1 22 1 185 2 186 3 315 2 105 3 319 2 143 2 109 3 112 1 159 3 
116 1 246 2 167 1 6 2 120 1 48 1 170 2 213 1 303 2 220 1 223 1 14 7 60 1 177 1 260 2 261 4 62 1 134 2 22 2 185 4 186 4 188 1 105 4 315 3 319 3 143 4 109 5 112 1 159 4 
279 1 221 1 130 1 298 1 254 1 
221 1 168 1 
122 1 
161 1 34 1 221 1 
65 1 221 1 
34 1 221 1 
161 1 269 1 34 1 221 3 298 2 70 1 
20 2 86 1 311 1 245 3 187 1 250 1 47 1 316 1 170 1 49 1 212 4 77 7 196 3 303 1 154 1 36 2 242 1 
20 2 86 1 311 1 245 3 187 1 250 1 47 1 316 1 170 1 49 1 212 4 77 7 196 3 303 1 154 1 36 2 242 1 
20 2 86 1 311 1 245 3 187 1 250 1 47 1 316 1 170 1 49 1 212 4 77 7 216 1 196 3 303 1 154 1 36 2 242 1 
77 1 296 1 187 2 154 1 49 1 212 1 36 1 
86 1 164 4 245 4 3 1 248 1 250 1 47 1 170 1 49 1 212 5 55 2 303 1 20 3 311 1 139 2 187 1 316 1 191 2 31 1 77 9 196 4 200 2 36 2 242 1 
85 1 40 1 166 2 43 1 4 2 121 1 252 1 297 1 9 1 11 1 12 1 96 1 59 1 126 1 262 2 263 1 307 1 308 1 135 1 227 1 19 1 317 1 231 1 232 1 107 1 149 1 197 2 111 2 326 1 113 1 160 2 
85 1 292 1 40 1 166 1 43 1 4 3 121 1 252 1 297 1 9 1 11 1 93 1 12 1 96 1 126 1 262 3 263 1 180 1 307 1 308 1 19 1 317 1 232 1 107 1 149 1 197 1 326 1 111 2 113 2 160 1 
292 1 40 1 166 1 43 1 4 2 121 1 252 1 297 1 9 1 11 1 96 1 126 1 262 2 263 1 180 1 307 1 308 1 232 1 107 1 149 1 197 1 326 1 111 2 113 2 160 1 
85 1 293 1 166 1 4 1 297 1 252 2 9 1 54 1 93 1 11 2 58 1 218 1 126 2 221 1 262 1 307 2 18 1 19 1 310 1 233 1 197 1 34 1 160 1 
135 1 85 1 19 1 292 1 40 1 43 1 166 1 4 1 121 1 297 1 252 1 317 1 9 1 232 1 11 1 12 1 107 1 197 1 59 1 111 2 326 1 126 1 262 1 308 1 307 1 160 1 
275 1 
166 2 5 2 167 1 89 2 169 1 8 1 10 1 9 1 94 2 172 1 14 2 181 1 266 2 186 5 271 1 105 5 106 1 192 1 32 1 197 2 34 1 109 2 286 1 283 1 112 1 289 1 116 1 297 1 124 1 213 1 214 2 54 2 218 1 127 1 221 1 128 4 304 1 224 1 60 1 133 1 310 1 64 1 314 1 229 6 142 2 66 1 319 2 143 2 74 1 76 1 150 3 153 2 159 2 160 2 84 1 
169 1 8 1 124 1 172 1 128 2 224 1 304 1 64 1 314 1 271 1 186 3 229 2 105 3 142 1 106 1 74 1 192 1 150 1 286 1 283 1 328 1 84 1 
169 1 89 1 8 1 124 1 172 1 128 3 224 1 304 1 64 1 314 1 229 1 271 1 186 3 105 3 106 1 74 1 192 1 150 1 286 1 283 1 112 1 328 1 84 1 159 1 
169 1 89 1 8 1 124 1 172 1 128 3 224 1 304 1 64 1 314 1 271 1 186 3 229 2 105 3 142 1 106 1 74 1 192 1 150 1 286 1 283 1 153 1 112 1 328 1 84 1 159 1 
5 2 167 1 207 1 89 4 169 1 8 1 124 1 213 1 214 2 94 2 172 1 128 6 224 1 304 1 60 1 133 1 266 2 136 1 64 1 314 1 271 1 229 7 186 5 105 5 142 4 69 1 106 1 319 2 143 1 192 1 74 1 32 1 78 1 109 1 150 3 199 1 286 1 283 1 153 4 112 5 328 1 289 1 159 5 84 1 
5 2 167 1 89 2 169 1 8 1 124 1 213 1 214 2 94 2 172 1 127 1 128 4 304 1 224 1 14 2 60 1 133 1 266 2 64 1 314 1 229 4 271 1 186 4 105 4 142 2 106 1 319 2 143 1 192 1 74 1 32 1 150 2 109 1 153 2 286 1 283 1 112 1 289 1 159 2 84 1 
5 2 167 1 89 2 169 1 8 1 124 1 213 1 214 2 94 2 172 1 128 4 224 1 304 1 60 1 133 1 266 2 136 1 64 1 314 1 229 4 271 1 186 4 105 4 142 2 69 1 106 1 319 2 143 1 74 1 192 1 32 1 78 1 150 2 109 1 153 2 286 1 283 1 112 1 289 1 159 1 84 1 
5 2 167 1 89 2 169 1 8 1 124 1 213 1 214 2 94 2 172 1 128 4 224 1 304 1 60 1 133 1 266 2 136 1 64 1 314 1 229 4 271 1 186 4 105 4 142 2 69 1 106 1 319 2 143 1 74 1 192 1 32 1 78 1 150 2 109 1 153 2 286 1 283 1 112 1 289 1 159 1 84 1 
64 1 314 1 186 2 271 1 105 2 169 1 106 1 8 1 124 1 192 1 74 1 256 1 172 1 128 2 283 1 304 1 224 1 286 1 84 1 
5 2 167 1 207 1 169 1 89 3 8 1 124 1 213 1 214 2 94 2 172 1 128 5 224 1 304 1 60 1 133 1 266 2 136 1 64 1 314 1 271 1 186 4 229 5 105 4 142 3 69 1 106 1 319 2 143 1 74 1 192 1 32 1 78 1 150 2 109 1 286 1 283 1 153 3 112 1 289 1 159 1 84 1 
5 2 167 1 207 1 169 1 89 3 8 1 124 1 213 1 214 2 94 2 172 1 128 5 224 1 304 1 60 1 133 1 266 2 136 1 64 1 314 1 271 1 186 4 229 5 105 4 142 3 69 1 106 1 319 2 143 1 74 1 192 1 32 1 78 1 150 2 109 1 286 1 283 1 153 3 112 1 289 1 159 1 84 1 
165 2 5 2 167 1 89 2 169 1 8 1 124 1 213 1 214 2 172 1 127 1 128 4 304 1 224 1 14 2 60 1 61 2 64 1 314 1 103 1 229 4 271 1 186 4 105 4 142 2 106 1 143 1 192 1 74 1 32 1 150 2 109 1 153 2 286 1 283 1 112 1 289 1 159 1 84 1 
117 2 164 4 245 10 246 3 3 1 170 3 300 2 212 9 215 2 55 2 56 1 302 1 57 1 303 3 260 3 134 3 20 3 268 1 139 2 274 1 191 2 30 1 148 1 75 1 77 19 196 6 152 1 200 2 82 1 242 3 
117 1 203 1 245 12 164 6 246 3 248 2 3 1 170 2 300 4 212 14 55 3 56 1 215 2 302 2 303 3 260 2 16 1 134 3 20 2 23 1 139 3 274 2 191 3 30 2 148 2 75 1 77 26 324 1 196 4 200 3 82 1 201 1 242 2 38 1 
86 1 245 21 164 6 246 4 3 1 248 1 250 1 170 5 91 1 260 4 16 1 20 4 23 1 274 3 191 3 30 2 196 8 200 3 201 1 36 1 38 1 203 1 117 1 47 1 212 20 300 4 56 1 55 3 215 4 57 1 302 3 303 5 134 4 311 1 139 3 316 1 75 1 148 1 77 41 324 1 152 1 82 1 242 4 
86 1 117 1 203 1 164 8 245 18 246 4 248 2 3 1 250 1 47 1 170 4 91 1 300 4 212 20 215 4 55 4 56 1 302 3 57 1 303 5 260 3 16 1 134 4 311 1 20 4 23 1 139 4 316 1 274 3 191 4 30 2 148 1 75 1 77 38 324 1 196 7 152 1 200 4 82 1 36 1 201 1 242 3 38 1 
86 1 117 1 203 1 164 4 245 25 246 7 248 1 3 1 250 1 47 1 46 2 170 8 300 4 212 27 215 4 55 2 56 1 302 4 57 2 303 8 260 7 16 1 134 7 311 1 20 7 23 1 139 2 316 1 274 2 191 2 30 1 148 1 75 1 77 52 324 1 196 14 200 2 82 1 36 1 201 1 242 7 38 1 
226 1 313 1 42 1 257 1 259 1 189 1 71 1 83 1 99 1 100 1 
68 1 123 1 
102 1 313 1 257 1 144 1 71 1 83 1 99 1 100 1 243 1 
184 1 217 1 
13 1 140 1 236 1 
226 1 313 1 42 1 186 1 105 1 189 1 71 1 255 1 193 1 195 2 257 1 219 1 156 1 238 1 99 1 83 1 159 1 100 1 
226 1 313 1 42 1 186 1 105 1 189 1 71 1 255 1 193 1 195 2 257 1 219 1 156 1 238 1 99 1 83 1 159 1 100 1 
226 1 313 1 42 1 186 1 105 1 189 1 71 1 255 1 193 1 195 2 257 1 219 1 156 1 238 1 99 1 83 1 159 1 100 1 
184 1 217 1 236 1 
184 1 217 1 236 1 
13 1 140 1 
13 1 140 1 236 1 
272 1 251 1 
313 1 294 1 6 1 186 1 272 1 315 1 105 1 251 1 68 1 71 1 123 1 53 1 323 1 195 1 257 1 97 1 156 1 132 1 238 1 99 1 83 1 100 1 
244 1 164 2 245 1 41 1 166 2 297 1 9 1 210 1 212 1 55 1 221 1 224 2 129 1 227 2 139 1 67 1 320 1 192 2 191 1 77 2 108 1 197 2 34 1 200 1 286 2 288 1 239 1 327 1 160 2 290 1 202 1 
292 1 40 1 166 2 43 1 121 1 297 1 231 1 9 1 11 1 95 1 12 1 107 1 197 2 111 2 326 1 35 1 160 2 308 1 114 1 
292 1 40 1 166 1 43 1 119 1 121 1 297 1 9 1 11 1 12 1 107 1 197 1 111 2 326 1 160 1 308 1 114 1 
21 1 310 1 166 1 297 1 9 1 54 1 11 1 197 1 34 1 58 1 218 1 221 1 35 1 160 1 
292 1 40 1 166 1 43 1 121 1 297 1 9 1 11 1 95 1 12 1 107 1 197 1 111 2 326 1 35 1 160 1 308 1 114 1 
52 1 
279 1 109 1 112 1 143 1 158 1 159 1 225 1 
167 1 213 1 94 1 60 1 14 1 133 1 266 1 229 1 186 1 105 1 319 1 143 1 109 1 150 1 112 1 289 1 159 2 
161 3 163 1 246 2 166 3 167 4 168 3 170 2 10 1 9 3 14 12 261 6 260 2 15 1 98 2 183 2 185 6 186 5 105 5 25 1 190 2 197 3 109 9 34 3 282 2 112 2 289 4 115 1 116 2 297 4 298 2 213 4 54 1 303 2 221 10 305 1 60 4 225 1 134 2 138 2 65 2 229 5 319 6 231 1 70 1 143 8 72 2 79 2 150 3 235 2 157 2 158 1 160 3 84 2 159 8 
185 1 167 1 319 1 143 1 274 1 213 1 215 1 302 1 109 1 60 1 14 2 261 1 289 1 16 1 159 1 
86 1 1 1 118 1 186 1 167 1 105 1 47 1 316 1 170 1 143 1 213 1 53 1 194 1 78 1 109 2 303 1 60 1 81 1 179 1 289 1 98 2 
167 1 143 1 213 1 109 1 60 1 112 1 289 1 158 1 159 1 225 1 
246 2 185 5 319 5 143 5 170 2 190 1 109 5 303 2 14 10 261 5 260 2 98 2 183 1 159 5 134 2 
150 1 186 1 229 1 105 1 112 1 159 1 
161 1 116 1 166 3 7 1 167 2 297 3 9 2 10 1 213 2 54 2 218 1 221 2 305 1 60 2 62 1 15 1 182 1 265 1 310 1 229 2 186 2 105 2 66 1 321 1 143 1 76 1 197 3 34 2 109 1 150 1 285 1 289 1 160 3 
53 1 194 1 118 1 237 1 
116 1 185 2 167 1 319 2 143 2 10 1 213 1 109 1 14 4 60 1 112 2 261 2 36 1 289 1 159 4 
175 1 257 1 100 1 
0 1 257 1 251 1 189 1 100 1 
175 1 257 1 100 1 
175 1 257 1 100 1 
257 1 131 1 100 1 
257 1 131 1 100 1 
257 1 131 1 100 1 
257 1 100 1 
71 1 83 1 
20 2 311 1 86 1 245 4 164 4 139 2 248 1 250 1 47 1 316 1 170 1 212 4 191 2 55 2 77 8 196 3 303 1 200 2 36 1 242 1 
311 1 86 1 20 2 245 3 250 1 47 1 316 1 170 1 212 3 279 1 77 6 196 2 303 1 36 1 
20 1 245 2 164 2 246 1 139 1 230 1 170 1 212 2 191 1 55 1 77 4 196 2 303 1 200 1 260 1 242 1 134 1 
20 1 245 4 246 1 170 1 274 1 212 3 215 2 77 7 196 2 302 1 57 1 303 1 260 1 242 1 134 1 
86 2 245 12 164 4 246 2 248 2 250 1 47 1 46 1 170 3 212 11 215 2 55 2 57 1 302 2 303 3 260 2 134 2 311 1 20 5 139 2 316 2 318 1 146 1 191 2 77 23 196 9 200 2 36 1 242 4 
215 1 77 1 245 1 
77 1 302 1 212 1 
20 2 164 2 245 3 246 1 139 1 230 1 170 1 212 3 191 1 55 1 77 6 196 3 303 1 200 1 260 1 183 1 242 1 134 1 
245 6 164 2 203 1 246 2 3 1 170 2 212 6 215 1 55 1 302 1 303 2 260 2 16 1 134 2 20 1 139 1 23 1 274 1 191 1 77 12 324 1 196 2 200 1 242 1 38 1 
86 1 20 1 245 3 47 1 316 1 170 1 212 3 77 6 196 2 303 1 242 1 
20 1 86 1 311 1 245 2 164 2 248 1 139 1 250 1 316 1 318 1 212 1 191 1 55 1 77 3 196 2 200 1 242 1 
86 2 20 3 164 2 245 5 139 1 3 1 47 1 316 2 170 2 212 5 191 1 55 1 77 10 196 5 303 2 200 1 179 1 242 2 
164 2 246 1 3 1 139 1 212 2 191 1 55 1 77 2 196 1 303 1 200 1 242 1 
20 1 245 2 164 2 246 1 3 1 139 1 170 1 212 2 191 1 55 1 77 4 196 2 303 1 200 1 260 1 242 1 134 1 
86 1 20 1 245 2 164 6 248 1 3 1 139 3 318 1 316 1 212 1 191 3 55 3 77 3 196 2 152 1 200 3 242 1 
86 2 245 14 164 8 246 3 248 1 3 1 250 1 47 1 171 1 170 4 212 13 215 4 55 4 302 3 57 1 303 4 260 3 134 3 311 1 20 5 139 4 230 1 316 2 274 1 191 4 77 27 280 1 196 10 110 1 152 1 200 4 36 1 242 5 
86 1 245 4 164 2 3 1 250 1 47 1 170 1 212 4 215 1 55 1 302 1 303 1 16 1 311 1 20 2 139 1 316 1 274 1 191 1 77 8 196 2 200 1 36 1 
86 1 245 5 164 4 246 1 3 1 250 1 47 1 170 1 212 6 215 2 55 2 302 1 57 1 303 2 16 1 134 1 20 2 311 1 139 2 230 1 316 1 274 1 191 2 77 11 196 3 200 2 36 1 242 1 
86 1 245 10 164 6 203 1 246 2 3 1 248 1 250 1 47 1 170 3 212 9 215 1 55 3 302 1 303 3 260 2 16 1 134 2 311 1 20 3 23 1 139 3 230 1 316 1 274 1 191 3 77 19 324 1 196 4 200 3 36 1 242 1 38 1 
86 1 245 7 164 6 203 1 246 2 248 1 3 1 250 1 47 1 170 2 212 10 215 1 55 3 302 1 303 3 260 1 16 1 134 2 311 1 20 3 139 3 23 1 230 1 316 1 274 1 191 3 77 17 324 1 196 5 200 3 36 1 242 2 38 1 
86 1 245 4 164 2 3 1 250 1 47 1 170 1 212 4 215 1 55 1 302 1 303 1 16 1 311 1 20 2 139 1 316 1 274 1 191 1 77 8 196 2 200 1 36 1 
245 6 164 2 203 1 246 2 3 1 170 2 212 6 215 1 55 1 302 1 303 2 260 2 16 1 134 2 20 1 139 1 23 1 274 1 191 1 77 12 324 1 196 2 200 1 242 1 38 1 
86 1 203 1 245 8 164 8 246 2 3 1 248 2 250 1 47 1 170 2 212 10 215 1 55 4 302 1 303 3 260 1 16 1 134 2 311 1 20 3 23 1 139 4 230 1 316 1 274 1 191 4 77 18 324 1 196 5 200 4 36 1 242 2 38 1 
203 1 245 7 164 8 246 3 3 1 248 2 170 2 212 9 215 1 55 4 302 1 303 3 260 2 16 1 134 3 20 3 23 1 139 4 274 1 191 4 77 16 324 1 196 6 200 4 152 1 242 3 38 1 
311 1 86 3 20 3 245 4 250 2 47 1 316 3 170 1 212 3 77 7 196 6 303 1 242 3 
86 1 203 1 245 8 164 8 246 2 3 1 248 2 250 1 47 1 170 2 212 10 215 1 55 4 302 1 303 3 260 1 16 1 134 2 311 1 20 3 23 1 139 4 316 1 274 1 191 4 77 18 324 1 196 4 200 4 152 1 36 1 242 1 38 1 
247 1 198 1 33 1 286 1 224 1 106 1 192 1 
204 1 247 1 106 1 73 1 192 1 198 1 33 1 224 1 286 1 176 1 306 1 63 1 
54 1 310 1 279 1 166 1 197 1 34 1 218 1 221 1 297 1 9 1 160 1 
53 1 24 1 
53 1 24 1 
53 1 24 1 
161 1 166 3 168 1 297 1 45 1 298 1 9 1 54 1 174 1 221 4 305 1 65 1 229 1 186 2 105 2 197 3 34 1 235 1 284 1 112 1 160 3 84 1 159 1 
161 1 65 1 166 3 186 2 229 1 105 2 168 1 297 1 298 1 9 1 54 1 174 1 197 3 34 1 235 1 221 4 112 1 305 1 157 1 159 1 84 1 160 3 
166 1 197 1 297 1 9 1 209 1 160 1 
227 1 161 1 292 1 41 1 166 7 297 3 208 1 231 1 70 1 321 1 209 1 9 2 28 1 54 2 197 6 234 1 34 2 125 1 221 3 182 1 160 7 
53 1 24 1 
166 1 167 2 168 1 298 1 213 2 54 1 221 2 60 2 15 1 225 1 186 3 229 2 105 3 315 1 143 1 72 1 197 1 79 1 109 1 150 1 282 1 112 1 157 1 158 1 289 2 159 1 160 1 84 1 
161 1 166 2 25 1 297 2 231 1 298 1 70 1 209 1 9 1 197 2 34 1 221 2 160 2 
310 1 166 4 297 1 231 1 9 1 54 1 174 1 197 4 34 1 218 1 221 1 160 4 330 1 
265 1 161 1 166 2 297 2 321 1 9 1 197 2 34 1 221 1 285 1 305 1 240 1 182 1 160 2 
54 1 166 1 197 1 121 1 111 1 326 1 297 1 9 1 308 1 160 1 
292 1 41 1 166 2 297 1 231 1 210 1 9 1 197 2 34 1 221 1 160 2 
310 1 41 1 166 5 297 2 231 1 9 2 28 1 54 1 197 4 34 2 218 1 125 1 221 3 305 1 160 5 330 1 
310 1 41 1 166 5 297 2 231 1 9 2 28 1 54 1 197 4 34 2 218 1 221 3 305 1 241 1 160 5 330 1 
53 1 24 1 
161 1 166 1 297 2 208 1 70 1 321 1 9 1 197 1 34 1 221 1 305 1 182 1 160 1 
279 1 149 1 96 1 263 1 
85 1 19 1 149 1 96 1 4 1 262 1 263 1 
252 1 262 1 307 1 
85 1 19 1 291 1 4 3 301 1 149 1 80 2 96 1 59 1 262 3 178 1 263 1 
85 1 19 1 149 1 104 1 96 1 4 2 262 2 263 1 113 1 
85 1 19 1 137 1 40 1 205 1 4 1 121 1 59 1 96 1 111 1 262 1 
85 1 19 1 149 1 96 1 4 1 59 1 262 1 
85 1 19 1 149 2 4 1 59 1 262 1 263 1 
85 2 19 2 141 1 4 2 273 1 149 1 96 1 59 1 325 1 262 2 
85 1 19 1 137 1 4 3 270 1 145 1 149 1 59 1 96 2 262 3 263 1 113 2 309 1 
85 1 19 1 40 1 228 1 4 2 121 1 107 1 149 1 96 1 59 1 326 1 111 2 262 2 263 1 113 1 
85 2 19 2 137 1 104 1 4 4 253 1 149 1 59 1 96 2 262 4 263 1 113 2 309 1 
85 1 19 1 149 1 96 1 4 1 59 1 262 1 263 1 
85 1 19 1 291 1 137 1 4 4 149 2 173 1 80 1 96 3 262 4 178 1 263 2 113 2 309 1 
85 1 101 1 19 1 4 2 149 1 96 1 59 1 262 2 113 1 263 1 17 1 37 1 
85 1 19 1 291 1 87 1 4 3 149 1 80 2 96 1 59 1 262 3 178 2 263 1 
96 2 222 1 26 1 147 2 
85 1 19 1 151 1 4 1 59 1 262 1 
85 1 19 1 149 1 96 1 4 2 59 1 145 1 262 2 263 1 113 1 
322 1 
85 1 19 1 149 1 96 1 4 1 59 1 262 1 263 1 
85 1 19 1 4 3 145 1 149 1 80 1 59 1 96 1 262 3 113 1 263 1 
137 1 173 1 96 1 309 1 
149 1 96 1 

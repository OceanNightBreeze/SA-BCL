#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 231 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10137 | stmt -> ;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | CONSTANT | 4016 | 1 -> -1
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | ASSIGN | 464 | = null
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6348 | stmt -> ;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 3127 | = null
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4503 | 0 -> 1
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3665 | if (x) -> if (!x)
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
51 2 139 1 187 4 284 1 260 1 21 1 22 2 265 1 201 1 320 6 226 2 44 9 227 2 270 3 325 1 174 2 229 2 230 1 250 1 295 1 328 2 273 1 355 1 299 1 274 1 334 5 110 1 32 9 
51 2 139 1 187 4 284 1 260 1 21 1 22 2 265 1 201 1 320 6 226 2 44 9 227 2 270 3 325 1 174 2 229 2 230 1 250 1 295 1 328 2 273 1 355 1 299 1 274 1 334 5 110 1 32 9 
51 2 139 1 187 5 284 1 260 1 21 1 22 2 265 1 201 1 320 7 226 2 44 10 227 2 270 4 325 1 174 2 229 2 230 1 250 1 295 1 328 2 273 1 355 1 299 1 274 1 334 6 110 1 32 10 
51 2 187 3 284 1 260 1 21 1 22 1 265 1 201 1 320 4 226 2 44 7 227 2 270 2 325 1 174 2 229 2 230 1 250 1 295 1 328 2 273 1 355 1 299 1 274 1 334 4 110 1 32 7 
51 1 320 3 139 1 226 1 227 1 44 4 270 1 187 2 229 1 230 1 260 1 328 1 21 1 355 1 22 2 334 3 265 1 32 4 
226 1 227 1 44 2 229 1 174 1 98 1 284 1 260 1 328 1 86 1 355 1 334 1 49 1 110 1 265 1 32 2 
320 1 226 2 227 2 44 3 270 1 187 1 174 1 250 1 260 1 355 1 334 2 265 1 32 3 
51 1 139 1 187 4 308 1 260 1 21 1 22 2 265 1 320 7 226 2 44 9 227 2 270 3 174 1 229 1 230 1 250 1 273 1 328 1 254 1 355 1 299 1 334 5 32 9 
51 1 139 1 187 4 308 1 260 1 21 1 22 2 265 1 320 7 226 2 44 9 227 2 270 3 174 1 229 1 230 1 250 1 273 1 328 1 254 1 355 1 299 1 334 5 32 9 
240 1 140 1 282 1 
195 1 140 1 291 2 
177 1 354 2 55 1 321 2 348 2 30 2 122 2 114 2 
163 2 280 1 305 1 341 1 97 1 306 1 309 2 115 1 100 1 55 1 286 2 263 1 200 1 40 1 122 3 26 1 319 1 321 2 348 2 269 1 173 1 171 1 127 1 177 1 354 2 30 2 302 1 160 2 212 1 335 1 162 1 50 1 257 1 112 1 336 2 114 3 33 1 
354 1 55 1 56 1 321 1 348 1 30 1 223 1 122 1 278 1 114 1 
258 1 123 1 321 1 169 1 140 1 282 1 283 1 14 1 56 1 219 1 71 1 121 1 122 1 114 1 
123 2 348 1 321 1 169 1 140 1 282 1 283 2 354 1 56 1 219 1 71 1 30 1 121 1 122 1 114 1 
123 1 131 1 16 1 135 1 283 1 
123 2 131 1 140 1 215 1 135 1 282 1 275 1 283 2 
123 1 135 1 283 1 
123 1 348 1 321 1 283 1 145 1 55 1 354 1 131 1 56 1 30 1 223 1 122 1 278 1 114 1 
140 1 
123 2 131 1 140 1 255 1 215 1 135 1 282 1 283 2 
123 5 339 2 140 1 215 1 282 1 106 2 18 1 283 5 4 1 234 2 131 2 47 1 196 1 135 2 181 1 113 1 238 1 224 1 268 1 
177 2 354 1 348 1 321 2 30 1 111 1 122 2 114 2 108 1 
177 1 347 1 354 3 348 1 321 3 30 3 122 3 114 3 
354 1 56 1 321 1 30 1 122 1 278 1 114 1 
354 1 56 1 321 1 348 1 30 1 111 1 122 1 114 1 108 1 
163 1 280 1 305 1 306 1 309 1 283 1 115 1 100 1 55 1 263 1 286 1 56 1 219 1 287 1 200 1 40 1 121 1 122 4 26 1 319 1 347 1 123 1 348 2 321 3 169 1 269 1 171 1 176 1 127 1 177 1 354 3 158 1 71 1 30 3 160 1 212 1 335 1 50 1 111 1 257 1 112 1 336 2 114 4 33 1 
177 1 14 1 354 1 347 1 321 2 30 1 183 1 122 2 114 2 
347 2 123 1 348 1 321 3 169 1 140 1 176 1 283 1 354 3 56 1 70 1 219 1 71 1 30 3 287 1 111 1 121 1 122 3 114 3 
347 1 348 1 321 2 354 2 133 1 30 2 150 1 111 1 122 2 114 2 
163 1 127 1 177 1 263 1 286 1 160 1 50 1 335 1 112 1 257 1 122 1 114 1 26 1 33 1 319 1 
163 1 127 1 177 1 263 1 286 1 236 1 160 1 335 1 112 1 257 1 213 1 122 1 114 1 33 1 319 1 
280 1 78 1 305 1 309 4 99 1 218 1 262 1 100 1 20 1 57 1 220 1 38 1 149 1 150 2 200 1 40 1 41 1 269 1 173 2 68 2 133 2 159 1 212 2 336 2 
354 1 56 1 169 1 321 1 30 1 148 1 122 1 114 1 
177 1 240 1 
347 1 163 1 321 1 127 1 354 1 263 1 286 1 30 1 287 1 160 1 150 1 335 1 50 1 257 1 112 1 122 2 114 2 26 1 319 1 33 1 
163 1 127 1 46 1 177 1 263 1 286 1 160 1 50 1 335 1 257 1 112 1 122 1 114 1 26 1 33 1 319 1 
133 1 150 1 68 1 
347 2 321 5 348 1 85 1 14 1 354 4 177 1 30 4 287 1 161 1 111 1 183 1 122 5 114 5 
354 2 56 1 321 2 30 2 148 1 122 2 278 1 114 2 
35 1 134 1 272 1 
134 1 272 1 167 1 
134 1 272 1 167 1 
134 1 272 1 167 1 
134 1 272 1 
134 1 272 1 
96 1 337 1 
96 1 337 1 
96 1 337 1 
35 1 134 1 272 1 
35 1 134 1 272 1 
134 1 272 1 310 1 
315 1 134 2 90 1 96 1 272 2 337 1 
123 2 140 1 172 2 107 1 272 2 283 2 252 1 232 3 315 1 178 1 134 2 209 1 73 1 37 2 358 2 304 1 136 2 94 2 152 1 
189 1 281 1 283 1 310 1 193 1 79 1 198 1 122 2 123 1 321 2 349 1 172 1 272 1 232 1 177 1 354 2 179 1 30 2 134 1 73 1 358 1 136 1 94 1 114 2 
51 1 204 1 332 2 229 2 49 1 
51 1 229 1 328 1 
229 1 49 1 328 1 
204 1 51 2 332 1 229 3 49 1 307 1 
204 1 51 1 117 1 332 1 229 2 49 1 
339 1 140 2 215 1 282 1 17 2 18 2 283 5 99 1 5 2 195 1 220 1 196 3 38 1 149 1 198 1 291 3 224 1 203 1 123 5 225 1 349 1 28 1 106 1 13 1 234 1 156 1 131 4 179 1 303 1 210 1 135 1 180 2 
76 1 339 2 16 5 140 5 215 1 342 1 282 1 17 6 18 6 241 5 283 9 166 1 99 3 5 6 195 3 220 3 196 8 38 3 149 3 198 4 291 9 224 1 123 9 225 2 228 1 29 1 106 2 13 3 156 1 234 2 131 7 47 1 303 2 135 6 279 1 
339 1 140 3 282 1 17 2 283 3 18 2 99 1 5 2 195 2 220 1 196 3 38 1 149 1 198 1 291 4 203 1 123 3 225 1 28 1 106 1 234 1 13 1 131 2 47 1 303 1 180 1 
339 1 140 4 342 1 282 1 17 4 283 4 18 4 99 2 5 4 195 3 220 2 196 5 38 2 149 2 198 2 291 7 203 1 123 4 225 1 228 1 28 1 106 1 234 1 13 2 131 3 47 1 303 1 180 2 279 1 
335 1 257 1 
340 1 104 2 63 1 311 1 335 1 257 2 319 1 
240 1 104 1 257 1 
1 1 257 1 
63 1 
335 1 257 1 319 1 
257 1 143 1 
77 1 78 3 323 1 186 1 173 4 294 1 309 7 99 1 262 2 233 1 298 1 313 1 212 3 149 1 222 1 290 1 359 2 137 1 
0 1 77 1 78 10 280 1 186 2 305 1 190 4 309 31 99 4 262 5 313 1 316 1 220 3 317 1 38 3 222 5 149 4 200 1 40 1 58 1 290 1 102 1 202 1 124 3 323 2 173 16 294 2 66 1 233 2 13 3 212 15 137 1 359 3 336 2 
77 1 280 2 78 4 186 1 305 2 309 9 99 1 261 1 262 3 19 1 149 1 222 1 200 2 40 2 290 1 323 1 173 5 294 1 66 1 233 1 212 4 359 2 137 1 336 4 
77 1 78 3 323 1 186 1 173 4 294 1 309 7 99 1 262 2 233 1 313 1 212 3 149 1 222 1 290 1 359 2 137 1 
77 1 78 3 323 1 186 1 173 4 294 1 309 7 99 1 262 2 233 1 313 1 212 3 149 1 222 1 290 1 359 2 137 1 
15 2 163 1 52 1 286 1 263 1 314 1 101 1 226 1 44 1 227 1 322 2 105 1 174 2 127 1 12 1 351 1 31 2 356 1 160 1 335 1 257 1 32 1 33 1 
51 1 15 1 163 1 141 1 307 1 168 1 116 1 286 1 221 1 118 1 265 1 266 1 226 1 44 1 227 1 322 1 174 1 229 2 127 1 328 1 31 1 160 1 49 1 32 1 184 1 33 1 
51 1 15 1 163 1 307 1 260 1 168 1 116 1 286 1 221 1 119 1 118 1 265 1 266 1 320 1 226 1 44 2 227 1 322 1 174 1 229 2 127 1 328 1 355 1 31 1 160 1 334 1 49 1 32 2 184 1 33 1 
51 1 15 1 163 1 52 1 141 1 307 1 260 1 168 1 116 1 286 1 345 1 221 1 118 1 266 1 320 2 226 1 44 3 227 1 322 1 174 1 229 2 127 1 328 1 355 1 31 1 160 1 334 1 49 1 32 3 33 1 
15 1 163 1 51 1 141 1 307 1 260 1 168 1 116 1 286 1 345 1 118 1 320 2 44 2 322 1 174 1 229 2 127 1 328 1 355 1 31 1 160 1 334 1 49 1 32 2 33 1 
344 1 
163 2 185 1 339 1 215 1 283 2 18 1 286 2 263 2 314 1 196 1 246 1 62 1 42 1 319 1 224 1 123 2 225 1 105 1 106 1 9 1 127 3 327 1 234 1 300 1 160 2 135 2 335 2 257 2 33 2 
258 1 123 2 169 1 321 1 283 2 312 1 14 1 56 1 219 1 71 1 331 1 120 1 121 1 122 1 114 1 
14 1 258 1 312 1 123 2 56 1 169 1 219 1 321 1 71 1 331 1 120 1 283 2 121 1 122 1 114 1 
14 1 258 1 312 1 123 2 56 1 169 1 219 1 321 1 71 1 331 1 120 1 283 2 121 1 122 1 114 1 
258 1 123 3 169 1 321 1 215 1 283 3 312 1 14 1 56 1 219 1 71 1 255 1 331 1 135 1 120 1 121 1 122 1 114 1 
258 1 123 2 169 1 339 1 321 1 106 1 283 2 234 1 312 1 14 1 56 1 219 1 71 1 331 1 120 1 121 1 122 1 114 1 224 1 
14 1 258 1 312 1 123 2 56 1 169 1 219 1 321 1 71 1 331 1 120 1 283 2 121 1 122 1 114 1 
14 1 258 1 312 1 123 2 56 1 169 1 219 1 321 1 71 1 331 1 120 1 283 2 121 1 122 1 114 1 
14 1 258 1 312 1 123 2 56 1 169 1 219 1 321 1 71 1 331 1 120 1 283 2 121 1 122 1 114 1 
14 1 258 1 312 1 123 2 56 1 169 1 219 1 321 1 71 1 331 1 120 1 283 2 121 1 122 1 114 1 
14 1 258 1 312 1 123 2 56 1 169 1 219 1 321 1 71 1 331 1 120 1 283 2 121 1 122 1 114 1 
258 1 123 2 169 1 339 1 321 1 106 1 283 2 234 1 312 1 14 1 56 1 219 1 71 1 331 1 120 1 121 1 122 1 114 1 224 1 
78 1 280 1 269 1 305 1 173 2 309 2 99 1 68 1 100 1 133 1 159 1 220 1 222 1 150 1 40 1 200 1 41 1 336 2 
78 1 280 1 269 1 305 1 309 2 218 1 262 1 68 1 100 1 133 1 159 1 38 1 150 1 149 1 212 2 40 1 200 1 336 2 
280 1 78 2 305 1 309 4 99 1 262 1 100 1 220 1 38 1 150 2 222 1 149 1 200 1 40 1 269 1 173 2 13 1 68 2 133 2 159 1 212 2 336 2 
78 1 280 1 269 1 305 1 173 2 309 2 99 1 68 1 100 1 157 1 133 1 220 1 222 1 150 1 40 1 200 1 41 1 336 2 
78 1 280 1 269 1 305 1 309 2 218 1 262 1 68 1 100 1 157 1 133 1 38 1 150 1 149 1 212 2 40 1 200 1 336 2 
280 1 78 2 305 1 309 4 99 1 262 1 100 1 220 1 38 1 150 2 222 1 149 1 200 1 40 1 269 1 173 2 13 1 68 2 157 1 133 2 212 2 336 2 
280 1 78 2 305 1 309 4 99 1 262 1 100 1 220 1 38 1 150 2 222 1 149 1 200 1 40 1 269 1 173 2 13 1 68 2 133 2 212 2 336 2 
163 1 280 1 305 1 97 1 306 1 309 2 100 1 286 1 263 1 40 1 200 1 122 1 26 1 319 1 269 1 173 1 171 1 127 1 177 1 160 1 212 1 335 1 50 1 112 1 257 1 336 2 114 1 33 1 
163 1 280 1 305 1 97 1 306 1 309 2 100 1 286 1 263 1 40 1 200 1 122 1 319 1 269 1 173 1 350 1 127 1 177 1 236 1 160 1 212 1 335 1 112 1 257 1 213 1 336 2 114 1 33 1 
280 1 78 2 305 1 309 4 99 1 262 1 100 1 220 1 346 1 38 1 150 2 222 1 149 1 200 1 40 1 269 1 173 2 13 1 68 2 133 2 212 2 336 2 
163 1 78 2 280 1 305 1 309 4 99 1 262 1 100 1 286 1 220 1 38 1 149 1 222 1 150 2 119 1 40 1 200 1 61 1 122 1 26 1 319 1 269 1 173 2 171 1 127 1 68 2 13 1 133 2 160 1 212 2 50 1 335 1 112 1 257 1 336 2 114 1 33 1 
78 1 280 1 305 1 309 3 99 1 100 1 220 1 38 1 346 1 149 1 222 1 150 1 200 1 40 1 122 1 348 1 321 1 269 1 173 2 13 1 68 1 109 1 354 1 133 1 30 1 212 1 111 1 336 2 114 1 
77 1 240 1 280 1 78 2 305 1 309 6 99 1 262 2 100 1 150 1 149 1 200 1 40 1 290 1 323 1 269 1 173 3 294 1 68 1 177 2 133 1 159 1 212 3 137 1 359 1 336 2 
0 1 78 2 280 2 305 2 97 1 306 1 190 4 309 17 99 3 262 1 100 2 220 3 346 1 38 1 222 1 150 13 149 1 200 2 40 2 58 2 289 1 81 1 124 3 84 1 269 1 173 10 68 13 13 3 177 1 87 1 133 4 212 7 336 4 
163 1 280 1 305 1 97 1 306 1 309 2 100 1 286 1 263 1 287 1 23 1 346 1 40 1 200 1 122 2 26 1 319 1 347 1 321 1 269 1 173 1 127 1 46 1 177 1 354 1 133 1 30 1 48 1 160 1 212 1 335 1 50 1 257 1 112 1 336 2 338 1 114 2 33 1 
163 3 77 1 78 8 305 3 306 1 309 20 262 4 263 1 220 2 38 2 222 4 40 3 122 3 319 2 321 1 323 1 269 3 171 2 173 10 127 2 13 2 177 2 133 7 50 2 335 2 137 1 336 6 280 3 97 1 141 1 99 3 100 3 286 3 287 1 346 1 24 2 149 3 150 7 200 3 290 1 61 2 247 1 26 2 347 1 27 1 248 1 293 2 294 1 253 2 68 7 354 1 30 1 160 3 212 10 112 2 257 2 359 1 114 3 33 2 
163 8 280 2 305 2 341 2 97 1 141 1 306 1 309 2 100 2 286 8 263 2 314 1 147 1 119 1 200 2 40 2 122 1 347 1 103 1 321 1 154 1 269 2 173 1 105 1 127 2 128 1 353 1 354 1 329 1 157 1 30 1 159 1 160 7 212 1 335 2 257 3 336 4 114 1 33 2 
78 1 280 1 305 1 309 3 99 1 262 1 100 1 220 1 346 1 38 1 150 1 149 1 200 1 40 1 122 1 348 1 321 1 269 1 292 1 173 1 68 1 13 1 354 1 133 1 30 1 212 2 111 1 336 2 114 1 
0 1 280 2 78 6 305 2 53 1 217 2 190 2 309 19 99 3 262 3 19 1 243 1 146 2 220 3 264 1 38 3 222 3 149 3 200 2 40 2 58 1 267 1 124 1 170 1 173 9 67 1 13 3 130 1 212 10 336 4 
0 2 78 4 280 3 305 3 53 1 217 4 309 26 190 2 99 3 262 2 19 1 146 1 220 3 264 2 244 1 38 2 222 2 149 2 200 3 40 3 267 1 124 2 205 1 324 1 173 14 126 1 66 2 251 1 67 2 13 3 130 1 212 12 75 1 336 6 
0 3 77 1 78 8 305 3 309 44 217 4 262 4 220 5 264 2 38 4 222 4 40 3 267 1 124 3 323 1 170 1 173 22 324 1 126 1 13 5 130 1 91 1 137 1 336 6 280 3 53 1 190 5 99 6 19 1 146 1 244 1 149 5 58 2 200 3 290 1 205 1 294 1 251 1 66 1 67 1 212 22 75 1 359 1 
0 3 77 1 280 4 78 8 305 4 53 1 217 4 190 5 309 43 99 6 262 5 19 1 146 1 220 5 264 2 244 1 38 4 222 3 149 5 200 4 40 4 58 2 290 1 267 1 124 3 205 1 170 1 323 1 324 1 173 22 294 1 126 1 66 2 251 1 67 1 13 5 130 1 91 1 212 21 75 1 359 1 137 1 336 8 
0 2 77 1 280 2 78 14 305 2 53 1 217 4 190 4 309 52 99 8 262 7 19 1 146 1 220 7 264 1 244 1 38 7 222 7 149 8 200 2 40 2 58 2 290 1 267 1 124 4 205 1 84 2 323 1 324 1 173 27 294 1 126 1 66 1 251 1 67 1 13 7 130 1 212 25 75 1 359 1 137 1 336 4 
315 1 134 1 172 1 358 1 304 1 107 1 272 1 136 1 94 1 235 1 
330 1 134 1 172 1 358 1 199 1 165 1 272 1 136 1 94 1 
193 1 310 1 
123 1 140 1 172 1 107 1 283 1 272 1 252 1 232 2 315 1 178 1 134 1 73 1 37 1 358 1 304 1 136 1 94 1 152 1 
123 1 140 1 172 1 107 1 283 1 272 1 252 1 232 2 315 1 178 1 134 1 73 1 37 1 358 1 304 1 136 1 94 1 152 1 
123 1 140 1 172 1 107 1 283 1 272 1 252 1 232 2 315 1 178 1 134 1 73 1 37 1 358 1 304 1 136 1 94 1 152 1 
132 1 35 1 90 1 
132 1 35 1 90 1 
167 1 129 1 
90 1 167 1 129 1 
79 1 281 1 
123 1 131 1 134 1 172 1 358 1 283 1 272 1 136 1 231 1 94 1 
132 1 35 1 
90 1 167 1 129 1 
163 2 280 1 188 1 305 1 341 2 164 1 97 1 306 1 309 2 100 1 286 2 34 1 346 1 40 1 200 1 122 2 103 1 321 2 154 1 269 1 173 1 326 1 127 1 160 2 212 1 335 1 257 1 276 1 336 2 114 2 33 1 
163 1 322 1 105 1 127 1 343 1 263 1 286 1 314 1 89 1 160 1 335 1 257 1 101 1 33 1 
51 1 163 1 322 1 229 2 141 1 307 1 155 1 127 1 343 1 168 1 328 1 286 1 160 1 221 1 49 1 118 1 245 1 33 1 
51 1 163 2 322 1 229 2 141 1 307 1 155 1 127 1 343 1 168 1 328 1 286 2 160 2 221 1 49 1 119 1 118 1 245 1 33 1 
51 1 163 1 249 1 322 1 229 2 141 1 307 1 127 1 168 1 328 1 286 1 160 1 221 1 49 1 118 1 245 1 33 1 
93 1 
339 1 140 1 106 1 282 1 18 1 234 1 196 1 181 1 238 1 224 1 
240 1 140 1 196 1 282 1 181 1 18 1 238 1 
339 1 140 2 215 1 3 1 282 1 18 1 283 1 195 1 196 1 291 1 224 1 123 1 106 1 234 1 357 1 333 1 135 1 
163 3 215 3 1 3 5 6 263 1 220 2 38 2 119 1 39 2 121 2 319 3 224 4 225 2 123 5 7 1 8 1 271 2 11 2 127 4 234 4 13 2 135 5 181 1 335 3 182 2 277 1 238 1 95 2 339 4 140 8 340 1 282 2 17 6 283 5 18 8 99 2 143 2 285 2 286 3 195 6 196 9 149 2 288 1 246 1 60 2 291 12 104 2 106 4 253 2 352 1 207 2 160 3 257 10 33 3 
0 1 339 2 140 5 215 1 2 1 282 2 17 5 283 1 190 1 18 5 99 2 5 5 195 3 220 2 196 8 244 1 38 2 149 2 246 1 60 1 291 6 224 2 225 1 123 1 124 1 205 1 106 2 126 1 251 1 234 2 13 2 301 1 135 1 75 1 182 2 
339 1 283 1 18 2 99 2 145 1 55 1 56 1 196 2 149 1 223 1 60 1 290 1 122 1 224 1 123 1 348 1 321 1 323 1 175 1 106 1 294 1 234 1 354 1 30 1 211 1 182 2 278 1 114 1 
140 5 17 5 18 5 99 2 253 1 5 5 13 2 195 5 220 2 196 5 38 2 149 2 60 1 182 2 291 10 
123 1 140 1 215 1 135 1 282 1 283 1 
163 2 185 1 339 1 215 1 18 1 283 1 286 2 263 2 314 1 196 1 246 1 62 1 42 1 319 1 224 1 225 1 123 1 105 1 8 1 106 1 9 1 127 3 327 1 234 1 300 1 160 2 135 2 335 2 257 2 33 2 
163 1 280 1 305 1 306 1 309 1 115 1 100 1 55 1 286 1 263 1 200 1 40 1 122 3 26 1 319 1 321 2 348 2 269 1 171 1 127 1 177 1 354 2 30 2 160 1 212 1 50 1 335 1 112 1 257 1 336 2 114 3 33 1 
225 1 339 1 140 4 106 1 282 2 17 2 18 2 5 2 234 1 195 2 196 1 246 1 359 1 291 4 224 1 
194 1 358 1 94 1 
358 1 54 1 94 1 
358 1 54 1 94 1 
358 1 54 1 94 1 
358 1 94 1 
134 1 272 1 
194 1 358 1 94 1 
194 1 358 1 94 1 
79 1 358 1 304 1 94 1 151 1 
77 1 78 3 280 2 323 1 173 4 305 2 294 1 309 8 99 1 66 1 262 2 149 1 212 4 222 1 40 2 200 2 290 1 359 1 137 1 336 4 
77 1 240 1 78 2 323 1 173 3 294 1 309 6 99 1 262 2 212 3 149 1 290 1 359 1 137 1 
78 2 280 1 305 1 173 2 309 4 99 1 262 1 13 1 208 1 220 1 38 1 212 2 149 1 222 1 40 1 200 1 336 2 
0 1 124 1 78 2 173 3 190 2 309 7 99 1 262 1 13 1 220 1 38 1 149 1 212 4 222 1 58 1 
77 1 78 9 280 2 305 2 309 23 190 2 99 3 262 5 191 1 220 2 38 2 222 4 149 3 58 1 40 2 200 2 290 1 289 1 124 2 84 1 323 2 173 11 294 2 66 2 13 2 212 12 359 1 137 1 336 4 
212 1 309 1 190 1 
124 1 173 1 309 1 
280 1 78 3 305 1 173 3 309 6 99 1 253 1 262 2 13 1 208 1 220 1 38 1 212 3 222 1 149 1 200 1 40 1 336 2 
0 1 280 1 78 2 305 1 309 12 190 1 99 2 262 1 19 1 220 2 38 2 244 1 222 1 149 2 200 1 40 1 124 1 205 1 173 6 126 1 251 1 13 2 212 6 75 1 336 2 
78 2 323 1 173 3 294 1 309 6 99 1 262 1 149 1 212 3 222 1 290 1 
77 1 78 2 280 1 323 1 173 1 305 1 294 1 309 3 66 1 262 1 191 1 222 1 212 2 40 1 200 1 137 1 336 2 
0 1 77 1 78 2 280 1 305 1 309 11 190 2 99 2 262 2 19 1 220 1 149 1 200 1 40 1 58 1 290 1 124 1 323 1 173 6 294 1 126 1 13 1 212 5 359 1 137 1 336 2 
0 1 77 1 280 2 78 3 305 2 309 11 190 2 99 2 262 2 19 1 220 1 149 1 222 1 200 2 40 2 58 1 290 1 124 1 323 1 173 6 294 1 126 1 13 1 208 1 212 5 359 1 137 1 336 4 
0 1 77 1 280 3 78 4 305 3 309 19 190 1 99 3 262 3 19 1 220 2 244 1 38 2 222 1 149 3 200 3 40 3 290 1 124 1 205 1 323 1 173 9 294 1 126 1 251 1 66 1 13 2 208 1 212 10 75 1 359 1 137 1 336 6 
0 1 77 1 280 3 78 5 305 3 309 17 190 1 99 3 262 3 19 1 220 2 38 1 244 1 222 2 149 2 200 3 40 3 290 1 124 1 205 1 323 1 173 10 294 1 126 1 66 1 251 1 13 2 208 1 212 7 75 1 359 1 137 1 336 6 
0 1 77 1 78 2 280 1 305 1 309 11 190 2 99 2 262 2 19 1 220 1 149 1 200 1 40 1 58 1 290 1 124 1 323 1 173 6 294 1 126 1 13 1 212 5 359 1 137 1 336 2 
0 1 280 1 78 2 305 1 309 12 190 1 99 2 262 1 19 1 220 2 38 2 244 1 222 1 149 2 200 1 40 1 124 1 205 1 173 6 126 1 251 1 13 2 212 6 75 1 336 2 
0 1 77 1 280 4 78 5 305 4 309 18 190 1 99 3 262 3 19 1 220 2 244 1 38 1 222 2 149 2 200 4 40 4 290 1 124 1 205 1 323 1 173 10 294 1 126 1 251 1 66 2 13 2 208 1 212 8 75 1 359 1 137 1 336 8 
0 1 280 4 78 6 305 4 309 16 190 1 99 3 262 3 19 1 220 3 244 1 38 2 222 3 149 2 200 4 40 4 124 1 205 1 170 1 173 9 126 1 251 1 66 2 13 3 212 7 75 1 336 8 
77 2 78 6 323 3 173 3 294 3 309 7 99 1 262 3 212 4 149 1 222 3 290 1 137 1 
0 1 77 1 280 4 78 4 305 4 309 18 190 1 99 3 262 3 19 1 220 2 244 1 38 1 222 1 149 2 200 4 40 4 290 1 124 1 205 1 323 1 170 1 173 10 294 1 126 1 251 1 66 2 13 2 212 8 75 1 359 1 137 1 336 8 
78 6 323 2 173 6 175 1 294 2 309 12 99 2 262 3 222 3 212 6 149 2 290 1 
280 1 78 1 305 1 173 2 309 2 99 1 19 1 220 1 222 1 40 1 200 1 336 2 
78 2 280 1 305 1 173 2 309 4 99 1 262 1 19 1 13 1 220 1 38 1 212 2 149 1 222 1 40 1 200 1 336 2 
280 3 78 2 170 1 323 1 305 3 173 1 294 1 309 3 66 1 191 1 262 1 19 1 212 2 222 1 40 3 200 3 336 6 
0 1 77 1 280 5 78 12 305 5 190 4 309 34 99 5 191 1 262 7 19 1 316 1 220 3 38 3 222 5 149 5 200 5 40 5 58 1 290 2 202 1 102 1 124 3 323 3 170 1 173 16 294 3 66 2 13 3 208 1 212 18 359 1 137 1 336 10 
177 1 14 1 321 1 122 1 183 1 144 1 114 1 
321 1 216 1 142 1 144 1 242 1 177 1 14 1 6 1 59 1 183 1 122 1 114 1 
163 4 105 1 10 1 127 1 263 1 286 4 314 1 160 4 256 1 119 1 335 1 257 1 33 1 
163 1 286 1 263 1 314 1 240 1 105 1 160 1 335 1 257 1 127 1 33 1 
347 1 163 1 321 1 127 1 177 1 354 1 263 1 286 1 30 1 160 1 335 1 50 1 257 1 112 1 122 2 114 2 319 1 33 1 
163 1 143 1 286 1 56 1 39 1 122 2 319 2 347 1 321 2 169 1 127 1 352 1 177 1 354 2 71 1 30 1 160 1 50 1 335 2 112 1 257 3 114 2 33 1 
163 2 143 1 286 2 56 1 39 1 122 2 319 2 347 1 321 2 169 1 10 1 127 1 352 1 177 1 354 2 236 1 71 1 30 1 160 2 335 2 112 1 257 3 114 2 33 1 
163 3 140 1 1 1 282 1 283 2 143 1 286 3 263 1 39 1 121 1 319 1 123 2 104 1 10 1 127 1 352 1 160 3 135 1 92 1 74 1 335 1 257 4 33 1 
163 3 123 2 140 1 104 1 1 1 282 1 10 1 283 2 143 1 127 1 352 1 263 1 286 3 207 1 160 3 135 1 39 1 335 1 257 4 121 1 319 1 33 1 
163 1 286 1 160 1 147 1 127 1 33 1 
163 7 185 1 340 1 154 1 341 1 259 1 141 1 127 3 128 1 353 1 329 1 263 2 286 7 300 1 147 1 160 6 119 1 335 2 257 3 319 1 33 2 
163 1 77 1 78 2 280 2 305 2 309 6 99 1 262 2 100 2 286 1 34 1 346 1 150 1 149 1 119 1 40 2 200 2 290 1 61 1 122 2 26 1 319 1 347 1 321 1 323 1 269 2 173 3 171 1 293 1 294 1 127 1 68 1 177 2 354 1 133 1 30 1 160 1 212 3 335 1 50 1 257 1 112 1 359 1 137 1 336 4 114 2 33 1 
163 1 339 2 140 1 215 1 1 1 282 1 18 1 283 3 285 1 263 1 286 1 196 1 121 1 224 2 123 3 104 1 8 1 271 1 106 2 234 2 131 1 207 1 160 1 135 2 181 1 257 2 238 1 95 1 
163 2 104 1 340 1 127 2 286 2 147 1 160 2 119 1 335 1 257 2 277 1 319 1 33 1 
163 2 27 1 185 1 9 1 127 2 352 1 286 2 300 1 160 2 335 1 257 1 62 1 319 1 33 1 
163 5 154 1 105 1 127 2 128 1 352 1 353 1 263 1 286 5 314 1 160 4 256 1 119 1 335 2 257 3 33 2 
163 5 154 1 105 1 127 2 128 1 352 1 263 1 286 5 314 1 88 1 160 4 256 1 119 1 335 2 257 3 33 2 
163 1 286 1 263 1 160 1 229 1 49 1 127 1 168 1 328 1 33 1 
163 2 154 1 164 1 141 1 127 1 286 2 160 2 119 1 335 1 257 1 33 1 
347 1 163 1 321 1 127 1 177 1 354 1 263 1 286 1 236 1 30 1 160 1 335 1 257 1 112 1 122 2 114 2 319 1 33 1 
163 1 185 1 340 1 259 1 127 2 352 1 286 1 300 1 160 1 335 1 257 1 319 1 33 1 
82 1 43 1 321 1 153 1 188 1 326 1 276 1 122 1 114 1 
153 1 36 1 80 1 
177 1 82 1 43 1 153 1 197 1 
82 2 123 2 43 2 169 1 140 1 153 1 282 1 176 1 283 2 177 1 131 1 56 1 219 1 71 1 36 1 197 2 80 1 318 1 121 1 
355 1 226 1 44 1 227 1 334 1 265 1 260 1 32 1 
320 1 355 1 299 1 226 1 44 2 227 1 334 1 265 1 260 1 32 2 
192 1 
355 1 226 1 44 1 227 1 334 1 265 1 260 1 32 1 
240 1 355 1 334 1 260 1 
355 1 226 1 44 1 227 1 334 1 260 1 32 1 
44 1 31 1 174 1 
355 1 226 1 44 3 227 1 206 1 237 1 334 1 284 2 45 1 265 1 260 1 32 3 
320 1 355 1 22 1 226 1 44 2 227 1 334 1 260 1 32 2 
51 1 21 1 226 1 44 1 227 1 187 1 229 1 334 1 265 1 32 1 328 1 
355 1 226 1 44 1 227 1 334 1 265 1 32 1 
355 2 226 1 44 1 227 1 265 1 260 1 32 1 
125 1 226 2 227 2 44 2 355 1 72 1 334 1 25 1 265 1 32 2 
320 2 226 1 227 1 44 3 270 1 187 1 260 1 273 1 355 1 299 1 334 2 265 1 32 3 
214 1 51 1 320 1 226 1 227 1 44 2 229 2 307 1 260 1 328 1 355 1 334 1 49 1 265 1 32 2 
320 2 139 1 226 2 227 2 44 4 270 1 187 1 260 1 355 1 22 1 334 2 265 1 32 4 
320 1 299 1 355 1 226 1 44 3 227 1 334 1 284 1 265 1 260 1 32 3 
270 1 187 1 334 1 296 1 
355 1 334 1 
320 2 226 1 44 4 227 1 206 1 270 1 187 1 284 1 45 1 260 2 296 1 355 2 334 3 32 4 
239 1 320 1 226 1 227 1 44 2 308 1 260 1 297 1 355 1 334 1 265 1 32 2 
226 1 227 1 44 3 206 2 64 1 284 2 45 1 260 1 355 1 334 1 265 1 32 3 
69 1 334 2 65 1 138 2 
83 1 226 1 44 1 227 1 265 1 32 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 75 210 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11832 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | STATEMENT | 5650 | stmt -> ;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3455 | < -> >
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4623 | == -> !=
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 8735 | || -> &&
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | STATEMENT | 1159 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1132 | stmt -> ;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
264 1 114 1 43 1 284 2 314 5 316 4 31 1 288 2 269 9 341 1 96 2 320 1 345 2 150 1 228 6 370 3 298 1 132 1 79 2 328 9 235 1 330 1 237 1 374 1 157 1 302 2 306 2 242 1 
264 1 114 1 43 1 284 2 314 5 316 4 31 1 288 2 269 9 341 1 96 2 320 1 345 2 150 1 228 6 370 3 298 1 132 1 79 2 328 9 235 1 330 1 237 1 374 1 157 1 302 2 306 2 242 1 
264 1 114 1 43 1 284 2 314 6 316 5 31 1 288 2 269 10 341 1 96 2 320 1 345 2 150 1 228 7 370 4 298 1 132 1 79 2 328 10 235 1 330 1 237 1 374 1 157 1 302 2 306 2 242 1 
264 1 114 1 43 1 284 2 314 4 316 3 31 1 288 1 269 7 341 1 96 2 345 2 150 1 228 4 370 2 298 1 132 1 79 2 328 7 235 1 330 1 237 1 374 1 157 1 302 2 306 2 242 1 
345 1 228 3 370 1 43 1 314 3 284 1 298 1 79 1 316 2 328 4 31 1 235 1 302 1 288 2 269 4 96 1 320 1 242 1 
223 1 345 1 150 1 114 1 43 1 314 1 298 1 79 1 328 2 235 1 302 1 222 1 269 2 111 1 306 1 96 1 
345 2 228 1 370 1 43 1 314 2 298 1 316 1 328 3 235 1 330 1 269 3 306 1 96 2 
356 1 43 1 314 5 284 1 316 4 31 1 288 2 269 9 96 2 320 1 345 2 228 7 370 3 231 1 298 1 79 1 328 9 330 1 235 1 237 1 374 1 302 1 306 1 242 1 
356 1 43 1 314 5 284 1 316 4 31 1 288 2 269 9 96 2 320 1 345 2 228 7 370 3 231 1 298 1 79 1 328 9 330 1 235 1 237 1 374 1 302 1 306 1 242 1 
176 1 45 1 39 1 
45 1 60 2 97 1 
41 2 368 1 335 2 51 2 191 2 287 1 266 2 59 2 
41 2 0 1 63 1 2 1 191 2 169 1 266 3 267 1 335 2 119 1 287 1 120 1 146 2 121 1 365 1 221 1 202 1 367 1 368 1 322 2 342 1 51 3 295 1 253 1 179 2 154 1 208 1 104 2 183 1 38 1 56 1 186 2 20 1 258 1 279 1 378 1 59 2 
41 1 368 1 26 1 335 1 51 1 191 1 266 1 291 1 59 1 234 1 
162 1 51 1 226 1 266 1 325 1 103 1 42 1 326 1 234 1 117 1 335 1 45 1 366 1 39 1 
41 1 162 2 191 1 51 1 226 2 266 1 325 1 103 1 42 1 234 1 335 1 45 1 366 1 59 1 39 1 
162 1 323 1 226 1 364 1 281 1 
162 2 93 1 323 1 45 1 226 2 364 1 137 1 39 1 
162 1 226 1 364 1 
368 1 41 1 26 1 162 1 323 1 191 1 51 1 226 1 266 1 173 1 234 1 335 1 291 1 59 1 
45 1 
162 2 323 1 45 1 226 2 364 1 137 1 6 1 39 1 
148 2 162 5 86 1 323 2 226 5 137 1 232 2 296 1 145 1 45 1 338 1 268 1 364 2 251 1 147 1 352 2 280 1 39 1 81 1 
161 1 41 1 322 1 342 1 51 2 169 1 154 1 267 1 266 2 104 1 283 1 335 1 120 1 365 1 121 1 146 1 159 1 378 1 59 1 367 1 
176 1 287 1 
41 1 190 1 51 2 191 1 266 2 335 2 144 1 287 2 59 1 
99 1 36 1 283 1 
262 1 322 1 342 1 51 1 169 1 154 1 266 1 267 1 104 1 287 1 120 1 146 1 121 1 365 1 378 1 367 1 
272 1 161 2 41 4 51 5 191 1 266 5 326 1 335 5 144 1 287 1 159 1 59 4 48 1 123 1 
41 2 26 1 335 2 51 2 266 2 156 1 59 2 234 1 
161 1 41 3 335 3 191 1 51 3 287 1 266 3 59 3 
41 1 26 1 335 1 51 1 266 1 59 1 234 1 
41 1 190 1 335 1 144 1 51 1 191 1 266 1 59 1 234 1 
41 3 161 1 162 1 63 1 2 1 191 2 169 1 267 1 266 4 42 1 144 1 335 3 287 1 120 1 365 1 121 1 146 1 366 1 202 1 367 1 368 1 342 1 322 1 51 4 295 1 226 1 253 1 179 1 154 1 325 1 208 1 103 1 104 1 209 1 183 1 234 1 38 1 56 1 186 2 159 1 279 1 378 1 59 3 82 1 
272 1 41 1 161 1 335 2 51 2 287 1 266 2 59 1 326 1 
161 2 41 3 162 1 191 1 51 3 226 1 266 3 325 1 103 1 42 1 234 1 144 1 335 3 45 1 366 1 159 1 59 3 308 1 82 1 
161 1 41 2 191 1 51 2 266 2 36 1 283 1 144 1 335 2 59 2 
322 1 342 1 51 1 169 1 154 1 266 1 267 1 104 1 287 1 120 1 146 1 121 1 365 1 378 1 367 1 
322 1 51 1 169 1 266 1 267 1 104 1 334 1 287 1 120 1 146 1 259 1 121 1 365 1 378 1 367 1 
2 1 265 1 283 2 67 1 318 1 119 2 202 1 224 1 99 2 75 1 295 1 253 1 153 1 179 3 208 1 36 2 371 1 183 1 56 1 256 1 186 2 301 1 241 1 
41 1 335 1 51 1 266 1 42 1 59 1 156 1 234 1 
211 1 204 1 
211 1 204 1 
46 1 192 1 
46 1 192 1 
46 1 192 1 
377 1 211 1 204 1 
211 1 204 1 213 1 
46 1 192 1 139 1 211 2 61 1 204 2 
377 1 211 1 204 1 
377 1 211 1 204 1 
211 1 290 1 204 1 
211 1 290 1 204 1 
211 1 290 1 204 1 
41 2 162 1 177 1 51 2 226 1 167 1 16 1 76 1 35 1 102 1 171 1 266 2 9 1 335 2 286 1 285 1 287 1 305 1 211 1 59 2 50 1 292 1 204 1 213 1 
310 1 162 2 226 2 16 1 102 3 372 1 9 2 45 1 286 2 285 2 109 1 376 1 303 1 211 2 340 1 292 2 61 1 204 2 22 2 
79 1 302 1 284 1 
79 1 302 1 111 1 
329 1 152 1 302 3 111 1 71 1 284 2 
152 1 302 2 111 1 71 1 239 1 284 1 
152 1 302 2 111 1 71 2 284 1 
162 5 86 2 245 2 4 1 137 1 167 1 140 2 359 1 318 1 45 2 268 1 364 1 70 1 50 1 97 1 148 1 323 4 75 1 226 5 232 1 296 2 256 1 210 1 80 1 305 1 189 2 352 1 60 3 39 1 134 1 261 1 
263 1 162 9 86 6 245 6 137 1 167 4 216 1 140 6 281 5 249 1 29 1 338 1 318 3 45 5 364 6 268 1 70 2 97 3 148 2 323 7 75 3 226 9 232 2 127 5 130 1 296 5 256 3 210 3 80 1 352 2 58 1 60 9 39 1 134 2 
162 3 86 2 4 1 245 2 167 1 140 2 359 1 45 3 338 1 318 1 70 1 97 2 148 1 323 2 75 1 226 3 232 1 296 2 256 1 210 1 189 1 352 1 39 1 60 4 134 1 
263 1 162 4 86 4 245 4 4 1 167 2 216 1 140 4 249 1 359 1 45 4 338 1 318 2 70 1 97 3 148 1 323 3 75 2 226 4 232 1 296 3 256 2 210 2 189 2 352 1 39 1 60 7 134 1 
176 1 105 1 367 1 
215 1 367 1 
106 1 
120 1 169 1 367 1 
196 1 367 1 
169 1 367 1 
125 1 120 1 169 1 105 2 91 1 367 3 
149 2 153 3 178 1 179 7 54 1 180 1 183 3 350 1 182 1 238 1 318 1 301 2 304 1 119 4 94 1 95 1 271 1 
149 2 153 3 178 1 179 7 54 1 180 1 183 3 350 1 182 1 238 1 318 1 301 2 304 1 119 4 94 1 95 1 271 1 
149 2 153 3 178 1 179 7 54 1 180 1 181 1 183 3 350 1 182 1 238 1 318 1 301 2 304 1 94 1 119 4 95 1 271 1 
244 1 2 1 165 1 282 1 198 1 362 4 318 6 94 1 119 19 95 5 202 1 270 1 271 1 149 2 346 1 75 3 178 1 153 17 179 34 254 3 54 2 180 2 208 1 349 1 350 5 183 15 182 2 56 1 256 3 210 3 238 3 186 2 301 8 304 9 307 1 
2 2 138 1 217 1 318 1 119 5 94 1 202 2 95 1 270 1 149 2 153 4 178 1 179 9 208 2 180 1 54 1 182 1 183 4 350 1 56 2 238 1 186 4 301 3 304 1 
27 1 246 1 170 1 7 1 267 1 43 1 314 1 284 1 11 1 146 1 121 1 269 2 96 1 15 1 322 1 345 1 151 1 228 1 104 1 276 1 298 1 79 1 328 2 329 1 235 1 300 1 188 1 302 2 306 1 111 1 
27 1 3 1 246 1 170 1 7 1 267 1 43 1 314 1 284 1 11 1 32 1 146 1 121 1 269 3 96 1 322 1 345 1 228 2 104 1 348 1 276 1 298 1 79 1 329 1 328 3 300 1 188 1 302 2 306 1 111 1 
27 1 3 1 246 1 7 1 267 1 43 1 314 1 284 1 32 1 146 1 121 1 269 2 322 1 228 2 104 1 276 1 298 1 79 1 328 2 329 1 300 1 188 1 302 2 306 1 111 1 
27 2 169 1 357 1 267 1 7 2 65 1 317 1 199 1 146 1 121 1 269 1 96 1 367 1 322 1 345 1 324 1 104 1 348 1 184 1 328 1 188 2 378 1 306 2 
27 1 3 1 246 1 170 1 7 1 267 1 284 1 11 1 146 1 121 1 269 1 96 1 15 1 322 1 345 1 104 1 276 1 79 1 328 1 329 1 235 1 300 1 188 1 302 2 306 1 111 1 
77 1 
86 2 87 4 137 3 88 1 248 1 42 1 8 1 335 1 45 2 146 2 97 2 148 1 294 1 51 1 104 2 103 1 296 2 297 1 55 1 21 1 352 1 353 2 60 2 162 5 311 2 169 1 357 1 267 1 266 1 218 1 172 1 115 2 117 1 364 6 268 1 121 1 366 1 72 2 367 1 175 2 322 2 226 5 273 1 232 1 325 1 128 1 326 1 184 1 234 1 327 2 375 2 133 1 378 2 39 1 134 1 
175 1 162 3 51 1 87 2 226 3 137 1 88 1 6 1 325 1 266 1 103 1 42 1 218 1 326 1 234 1 297 1 55 1 117 1 335 1 133 1 364 2 366 1 
162 3 51 1 87 3 226 3 137 1 88 1 6 1 325 1 266 1 103 1 42 1 218 1 326 1 234 1 297 1 55 1 117 1 335 1 133 1 45 1 364 1 366 1 353 1 39 1 
162 3 87 3 311 1 137 1 88 1 6 1 266 1 218 1 42 1 335 1 117 1 45 1 364 2 366 1 175 1 51 1 226 3 325 1 103 1 326 1 234 1 297 1 55 1 133 1 353 1 39 1 
86 1 87 6 137 3 88 1 6 1 42 1 8 1 335 1 45 5 13 1 201 1 97 2 148 1 294 1 51 1 155 1 103 1 296 1 297 1 55 1 352 1 353 4 162 5 311 4 266 1 218 1 115 2 117 1 364 7 118 1 268 1 366 1 72 2 175 4 226 5 325 1 232 1 326 1 234 1 327 2 133 1 375 2 39 5 243 1 
162 4 86 1 311 2 87 4 137 2 88 1 266 1 218 1 42 1 8 1 115 2 117 1 335 1 45 2 364 4 268 1 366 1 72 2 97 2 175 2 148 1 294 1 51 1 226 4 273 1 232 1 325 1 103 1 326 1 296 1 234 1 327 2 297 1 55 1 375 2 133 1 352 1 353 2 39 1 60 2 
162 4 86 1 311 2 87 4 137 2 88 1 266 1 8 1 218 1 42 1 115 2 335 1 117 1 45 1 13 1 364 4 118 1 268 1 366 1 72 2 97 2 175 2 148 1 294 1 51 1 226 4 232 1 325 1 103 1 326 1 296 1 234 1 327 2 297 1 55 1 375 2 133 1 352 1 353 2 39 1 243 1 
162 4 86 1 311 2 87 4 137 2 88 1 266 1 8 1 218 1 42 1 115 2 335 1 117 1 45 1 13 1 364 4 118 1 268 1 366 1 72 2 97 2 175 2 148 1 294 1 51 1 226 4 232 1 325 1 103 1 326 1 296 1 234 1 327 2 297 1 55 1 375 2 133 1 352 1 353 2 39 1 243 1 
160 1 162 4 86 1 311 2 87 4 137 2 88 1 193 1 141 2 266 1 218 1 42 1 335 1 117 1 142 1 45 1 13 1 364 4 268 1 366 1 72 2 175 2 98 2 148 1 294 1 51 1 226 4 232 1 325 1 103 1 326 1 296 1 234 1 297 1 55 1 375 2 133 1 352 1 353 2 39 1 60 2 
162 4 86 1 87 5 311 3 137 2 88 1 266 1 8 1 218 1 42 1 115 2 335 1 117 1 45 1 13 1 268 1 118 1 364 5 366 1 72 2 97 2 175 3 148 1 294 1 51 1 226 4 155 1 232 1 325 1 103 1 326 1 296 1 234 1 327 2 297 1 55 1 375 2 133 1 352 1 353 3 39 1 243 1 
162 4 86 1 87 5 311 3 137 2 88 1 266 1 8 1 218 1 42 1 115 2 335 1 117 1 45 1 13 1 268 1 118 1 364 5 366 1 72 2 97 2 175 3 148 1 294 1 51 1 226 4 155 1 232 1 325 1 103 1 326 1 296 1 234 1 327 2 297 1 55 1 375 2 133 1 352 1 353 3 39 1 243 1 
162 4 86 1 311 2 87 4 137 2 88 1 193 1 141 2 266 1 218 1 42 1 117 1 335 1 45 1 364 4 268 1 366 1 72 2 175 2 98 2 148 1 294 1 51 1 226 4 273 1 232 1 325 1 103 1 326 1 296 1 234 1 297 1 55 1 375 2 133 1 352 1 353 2 39 1 60 2 
176 1 224 1 99 1 149 1 2 1 295 1 153 2 253 1 178 1 179 6 54 1 208 1 36 1 283 1 183 3 350 1 56 1 238 1 318 1 301 2 186 2 119 3 94 1 287 2 95 1 202 1 
163 1 2 2 282 1 283 11 362 3 318 2 119 8 287 1 202 2 99 11 295 2 75 1 153 2 253 1 179 13 101 1 275 1 274 1 254 3 208 2 36 4 183 5 56 2 256 2 210 2 186 4 301 1 20 1 304 1 260 1 279 1 307 1 
41 1 161 1 262 1 163 1 2 1 169 1 267 1 266 2 92 1 335 1 119 1 287 1 120 1 365 1 121 1 146 1 202 1 367 1 342 1 322 1 51 2 295 1 253 1 179 2 154 1 104 1 208 1 36 1 183 1 299 1 56 1 186 2 20 1 351 1 159 1 378 1 279 1 59 1 
41 1 3 1 2 3 283 7 44 1 335 1 94 1 287 2 146 3 339 2 95 1 202 3 342 2 149 1 99 7 51 3 295 3 253 3 153 8 347 1 154 2 54 1 104 3 208 3 350 1 56 3 256 2 210 2 301 4 20 1 304 4 159 1 59 1 161 1 163 1 169 2 266 3 267 2 315 1 360 2 318 3 119 10 120 2 121 2 365 2 73 2 367 2 322 3 75 2 178 1 179 18 36 7 183 8 38 2 238 1 186 6 279 1 378 1 240 2 
41 1 161 1 3 1 2 2 312 1 169 2 357 1 266 1 267 2 28 1 335 1 361 1 119 1 121 2 146 8 221 2 319 1 202 2 321 1 205 1 367 3 224 1 322 7 151 1 51 1 369 1 295 2 253 2 179 2 104 8 208 2 183 1 184 1 56 2 186 4 20 1 378 2 279 1 59 1 
41 1 163 1 191 1 2 1 266 1 283 1 144 1 335 1 318 1 119 1 202 1 34 1 99 1 51 1 295 1 75 1 153 1 253 1 179 2 208 1 36 1 183 1 56 1 256 1 210 1 301 1 186 2 59 1 
224 1 99 1 2 1 295 1 153 1 253 1 179 2 265 1 208 1 36 1 283 1 56 1 256 1 186 2 318 1 304 1 119 2 202 1 
224 1 99 1 2 1 295 1 75 1 153 1 253 1 179 1 208 1 36 1 283 1 183 1 56 1 301 1 186 2 202 1 241 1 
2 1 283 2 318 1 119 2 202 1 224 1 99 2 295 1 75 1 253 1 153 2 179 3 208 1 36 2 183 1 256 1 56 1 210 1 186 2 301 1 304 1 
99 1 369 1 2 1 295 1 153 1 253 1 179 2 265 1 208 1 36 1 283 1 56 1 256 1 186 2 318 1 304 1 119 2 202 1 
99 1 369 1 2 1 295 1 75 1 153 1 253 1 179 1 208 1 36 1 283 1 183 1 56 1 301 1 186 2 202 1 241 1 
2 1 283 2 318 1 119 2 202 1 99 2 369 1 295 1 75 1 253 1 153 2 179 3 208 1 36 2 183 1 256 1 56 1 210 1 186 2 301 1 304 1 
99 2 2 1 75 1 295 1 153 2 253 1 179 3 208 1 36 2 283 2 183 1 56 1 256 1 210 1 301 1 186 2 318 1 304 1 119 2 202 1 
2 1 169 1 267 1 266 1 119 1 287 1 120 1 365 1 121 1 146 1 202 1 367 1 342 1 322 1 51 1 295 1 253 1 179 2 154 1 104 1 208 1 183 1 38 1 56 1 186 2 20 1 378 1 279 1 
2 1 169 1 267 1 266 1 334 1 119 1 287 1 120 1 365 1 121 1 146 1 202 1 367 1 293 1 322 1 51 1 295 1 253 1 179 2 104 1 208 1 183 1 56 1 186 2 20 1 259 1 378 1 279 1 
163 1 2 1 283 2 318 1 119 2 202 1 99 2 295 1 75 1 253 1 153 2 179 3 208 1 36 2 183 1 256 1 56 1 210 1 186 2 301 1 304 1 
2 1 169 1 267 1 266 1 283 2 318 1 119 2 120 1 365 1 121 1 146 1 202 1 73 1 367 1 342 1 322 1 99 2 151 1 51 1 75 1 295 1 153 2 253 1 179 3 154 1 104 1 208 1 36 2 183 1 38 1 256 1 56 1 210 1 301 1 186 2 304 1 
40 1 41 1 163 1 191 1 2 1 266 1 283 1 144 1 335 1 318 1 119 2 202 1 99 1 51 1 75 1 295 1 253 1 179 3 208 1 36 1 183 1 56 1 256 1 210 1 186 2 59 1 
85 1 333 2 2 2 164 4 217 1 282 1 337 1 362 4 318 2 119 11 202 2 227 1 75 2 153 3 179 21 254 3 208 2 277 1 183 10 131 1 56 2 256 2 210 2 19 1 186 4 257 1 301 1 304 2 331 1 307 3 355 1 
85 1 333 2 2 2 164 4 217 1 282 1 337 1 362 4 318 2 119 11 202 2 227 1 75 2 153 4 179 21 254 3 208 2 277 1 183 10 131 1 56 2 256 2 210 2 19 1 186 4 257 1 301 2 304 2 331 1 307 3 355 1 
333 1 2 1 164 4 217 1 282 2 362 4 318 8 94 3 119 27 95 3 202 1 149 3 227 1 75 5 178 3 153 13 179 46 101 2 254 4 54 3 208 1 277 1 350 3 183 19 131 1 56 1 256 5 210 5 238 3 19 1 186 2 257 1 301 8 304 5 331 1 307 2 355 1 
85 1 333 1 2 2 164 2 217 1 282 1 362 2 318 3 119 9 289 1 202 2 227 1 75 3 153 6 179 16 254 1 208 2 277 1 183 7 56 2 256 3 210 3 19 2 186 4 257 1 301 3 304 3 307 1 355 1 
333 2 2 1 164 4 217 1 362 2 318 1 119 8 202 1 75 1 227 2 179 15 254 2 208 1 183 7 277 1 131 1 56 1 256 1 210 1 186 2 257 1 19 1 331 1 307 2 355 1 
310 1 285 1 286 1 376 1 211 1 66 1 292 1 61 1 9 1 204 1 
76 1 213 1 
30 1 285 1 286 1 110 1 211 1 292 1 9 1 204 1 83 1 
62 1 377 1 
139 1 290 1 207 1 
310 1 162 1 226 1 16 1 102 2 372 1 9 1 45 1 286 1 285 1 109 1 376 1 303 1 211 1 292 1 61 1 204 1 22 1 
310 1 162 1 226 1 16 1 102 2 372 1 9 1 45 1 286 1 285 1 109 1 376 1 303 1 211 1 292 1 61 1 204 1 22 1 
310 1 162 1 226 1 16 1 102 2 372 1 9 1 45 1 286 1 285 1 109 1 376 1 303 1 211 1 292 1 61 1 204 1 22 1 
62 1 377 1 139 1 
62 1 377 1 139 1 
290 1 207 1 
139 1 290 1 207 1 
35 1 171 1 
41 2 162 1 167 1 90 1 266 2 171 1 9 1 335 2 285 1 286 1 287 1 292 1 50 1 204 1 51 2 323 1 177 1 226 1 76 1 102 1 35 1 109 1 305 1 211 1 59 2 22 1 213 1 
163 1 2 1 169 1 64 1 267 1 266 2 197 1 335 2 12 1 361 1 119 1 121 1 146 2 221 2 319 1 202 1 122 1 367 1 322 2 51 2 295 1 253 1 179 2 104 2 208 1 78 1 183 1 56 1 186 2 20 1 279 1 
322 2 3 1 151 1 195 1 267 1 7 1 104 2 276 1 284 1 79 1 11 1 329 1 300 1 302 2 363 1 121 1 146 2 111 1 49 1 
214 1 322 1 3 1 7 1 267 1 104 1 276 1 284 1 79 1 11 1 329 1 300 1 302 2 363 1 146 1 121 1 111 1 
322 1 169 1 195 1 357 1 267 1 7 1 104 1 358 1 184 1 199 1 121 1 146 1 378 1 367 1 
322 1 3 1 195 1 267 1 7 1 104 1 276 1 284 1 79 1 11 1 329 1 300 1 302 2 363 1 146 1 121 1 111 1 49 1 
1 1 
176 1 86 1 45 1 147 1 280 1 39 1 296 1 
148 1 162 1 86 1 226 1 137 1 232 1 8 1 296 1 115 1 327 1 45 2 364 1 268 1 352 1 39 1 60 1 97 1 
86 8 245 6 137 3 194 2 140 6 91 1 336 2 45 8 200 1 146 2 147 1 252 1 97 6 148 4 151 1 53 2 104 2 105 2 296 7 18 2 256 2 210 2 158 2 352 4 60 12 112 2 162 5 215 3 169 1 267 2 318 2 268 4 364 5 120 1 121 1 366 2 367 6 322 2 226 5 75 2 232 4 128 1 129 1 185 2 236 1 378 1 280 1 39 2 240 2 134 2 
41 1 26 1 191 1 86 2 245 2 140 2 266 1 173 1 335 1 362 1 45 2 268 1 291 1 97 1 368 1 148 1 51 1 254 1 232 1 128 1 234 1 296 2 131 1 185 1 352 1 332 1 59 1 39 1 60 2 307 1 134 1 112 1 
41 1 26 1 162 1 86 2 191 1 266 1 173 1 335 1 318 2 268 1 118 1 95 1 291 1 368 1 148 1 51 1 346 1 226 1 232 1 54 1 350 1 234 1 296 2 185 2 238 1 352 1 59 1 112 1 
148 1 86 1 232 1 296 1 45 1 268 1 147 1 352 1 280 1 39 1 
86 5 245 5 75 2 140 5 296 3 185 2 256 2 210 2 318 2 45 5 240 1 60 10 112 1 97 5 
162 1 45 1 226 1 364 1 137 1 39 1 
23 1 162 3 86 2 137 2 169 1 357 1 267 1 248 1 338 1 268 1 364 4 121 1 146 4 74 2 367 1 148 2 322 4 226 3 232 2 104 4 128 2 184 1 296 2 17 1 236 1 21 1 352 2 378 2 134 2 
41 2 63 1 2 1 191 2 169 1 266 3 267 1 335 2 287 1 120 1 146 1 121 1 365 1 202 1 367 1 368 1 322 1 342 1 51 3 295 1 253 1 179 1 154 1 208 1 104 1 183 1 38 1 56 1 186 2 279 1 378 1 59 2 
148 1 149 1 86 2 245 2 140 2 232 1 128 1 296 1 45 4 268 1 352 1 60 4 39 2 97 2 134 1 
285 1 174 1 9 1 
285 1 376 1 206 1 35 1 9 1 
285 1 174 1 9 1 
285 1 174 1 9 1 
285 1 247 1 9 1 
285 1 247 1 9 1 
285 1 247 1 9 1 
285 1 9 1 
211 1 204 1 
2 2 166 1 217 1 10 1 362 1 318 5 94 1 119 14 95 2 202 2 270 1 149 1 346 1 75 1 178 1 153 9 179 23 52 1 254 1 54 2 208 2 350 2 183 9 131 1 56 2 256 2 210 2 238 3 186 4 301 5 304 4 354 1 307 1 
2 3 166 1 217 1 282 1 10 1 362 2 318 4 94 1 119 12 95 1 202 3 270 1 149 1 344 1 75 1 178 1 153 5 179 19 52 1 254 1 54 1 208 3 350 1 183 7 131 1 56 3 256 3 210 3 238 1 186 6 301 3 304 2 354 1 307 1 
2 2 217 1 318 3 362 1 119 8 94 1 202 2 95 2 149 1 344 1 346 1 178 1 153 4 179 15 254 1 54 2 208 2 183 7 350 2 131 1 56 2 238 3 186 4 301 3 304 1 307 1 
2 2 217 1 318 3 362 1 119 8 94 1 202 2 95 2 149 1 344 1 346 1 178 1 153 7 179 15 254 1 54 2 208 2 183 7 350 2 131 1 56 2 238 3 186 4 301 4 304 3 307 1 
2 2 166 1 217 1 10 1 362 1 318 5 94 1 119 14 95 2 202 2 270 1 149 1 346 1 75 1 178 1 153 9 179 23 52 1 254 1 54 2 208 2 350 2 183 9 131 1 56 2 256 2 210 2 238 3 186 4 301 5 304 4 354 1 307 1 
2 1 179 2 217 1 254 1 208 1 183 1 131 1 56 1 186 2 362 1 119 1 202 1 307 1 
344 1 2 2 179 2 254 1 217 1 208 2 183 1 131 1 56 2 186 4 362 1 119 1 202 2 307 1 
85 1 2 2 179 2 254 1 217 1 208 2 183 1 131 1 56 2 186 4 362 1 119 1 202 2 307 1 
178 1 153 6 179 7 54 1 183 4 350 3 238 1 301 3 318 1 94 2 304 3 119 3 95 3 
85 1 2 2 179 2 254 1 217 1 208 2 183 1 131 1 56 2 186 4 362 1 119 1 202 2 307 1 
149 1 2 2 153 3 178 1 179 8 54 1 208 2 183 4 350 1 56 2 238 1 318 1 301 2 186 4 119 4 304 1 94 1 202 2 95 1 270 1 
176 1 149 1 178 1 153 2 179 6 54 1 183 3 350 1 238 1 301 2 318 1 94 1 119 3 95 1 
344 1 2 1 75 1 153 2 179 3 208 1 183 1 56 1 256 1 210 1 301 1 186 2 318 1 119 2 304 1 202 1 
75 1 153 2 179 6 254 1 282 1 183 3 256 1 210 1 301 1 362 2 318 1 119 3 304 1 307 1 
2 2 282 1 318 3 362 2 94 1 119 11 95 2 202 2 270 2 124 1 149 1 75 2 178 1 153 9 179 21 275 1 101 1 254 2 54 1 208 2 350 2 183 10 256 2 56 2 210 2 238 1 301 5 186 4 304 4 
362 1 179 1 183 1 
119 1 179 1 254 1 
344 1 2 1 75 1 153 3 179 5 208 1 183 2 56 1 256 1 210 1 186 2 318 1 301 2 119 3 304 1 202 1 240 1 
2 1 179 2 217 1 254 1 208 1 183 1 131 1 56 1 186 2 362 1 119 1 202 1 307 1 
153 2 179 6 54 1 183 3 350 1 238 1 318 1 301 1 119 3 304 1 95 1 
124 1 2 1 153 2 178 1 179 3 208 1 350 1 183 2 56 1 301 1 186 2 119 1 304 1 94 1 95 1 202 1 270 1 
2 1 346 1 153 5 179 10 217 1 208 1 54 1 350 2 183 5 56 1 238 2 186 2 301 3 318 2 304 2 119 5 202 1 95 2 
2 1 153 1 179 2 217 1 208 1 56 1 256 1 186 2 318 1 119 2 304 1 202 1 
2 1 75 1 153 2 179 3 217 1 208 1 183 1 56 1 256 1 210 1 301 1 186 2 318 1 119 2 304 1 202 1 
124 1 85 1 2 3 153 2 179 3 217 1 208 3 183 2 350 1 56 3 186 6 301 1 304 1 119 1 202 3 95 1 270 1 
85 1 2 4 165 1 217 1 282 1 198 1 362 4 318 4 94 1 119 13 95 2 202 4 270 1 149 1 344 1 75 3 178 1 153 10 179 24 254 3 54 1 208 4 349 1 350 2 183 11 56 4 256 3 210 3 238 1 186 8 301 5 304 5 307 1 
272 1 335 1 225 1 51 1 287 1 266 1 326 1 
272 1 225 1 51 1 168 1 126 1 266 1 326 1 335 1 187 1 287 1 278 1 212 1 
176 1 322 1 169 1 121 1 146 1 357 1 267 1 104 1 378 1 184 1 367 1 
161 1 41 1 322 1 51 2 169 1 154 1 267 1 266 2 104 1 335 1 287 1 120 1 365 1 146 1 121 1 378 1 59 1 367 1 
41 2 161 1 169 2 266 2 267 1 196 1 42 1 335 2 143 1 287 1 120 2 121 1 146 1 365 1 74 1 367 3 322 1 51 2 154 1 325 1 104 1 234 1 59 1 
41 2 161 1 169 2 266 2 267 1 196 1 42 1 335 2 143 1 287 1 120 2 121 1 146 2 365 1 74 1 367 3 322 2 51 2 325 1 104 2 255 1 234 1 259 1 59 1 
41 1 26 1 162 1 191 1 215 1 266 1 173 1 335 1 45 1 146 1 291 1 74 1 367 1 368 1 322 1 51 1 226 1 104 1 234 1 107 1 59 1 39 1 
322 3 162 2 226 2 215 1 169 1 194 1 267 1 196 1 104 3 255 1 105 1 143 1 45 1 364 1 120 1 146 3 121 1 366 1 378 1 39 1 74 1 367 4 
322 1 121 1 146 1 267 1 104 1 205 1 
24 1 322 6 3 1 151 1 312 1 169 2 267 3 104 7 91 1 28 1 120 1 146 7 121 2 221 1 319 1 378 2 321 1 205 1 136 1 367 3 84 1 
41 1 161 1 163 1 2 2 169 1 267 1 266 2 283 1 335 1 318 1 119 3 94 1 287 2 120 1 365 1 121 1 146 1 339 1 95 1 202 2 122 1 73 1 367 1 322 1 342 1 99 1 149 1 51 2 151 1 295 2 153 2 178 1 253 2 179 6 154 1 54 1 208 2 104 1 36 1 183 3 350 1 38 1 56 2 238 1 301 2 186 4 59 1 
162 3 86 1 215 1 137 1 194 1 336 1 45 1 268 2 364 2 146 1 147 1 366 1 367 2 322 1 148 2 323 1 226 3 232 2 104 1 105 1 296 1 18 1 236 1 158 1 378 1 352 2 280 1 39 1 
322 1 169 1 267 2 104 1 105 1 91 1 106 1 129 1 120 1 146 1 121 1 205 1 367 2 
116 1 322 4 151 1 169 1 121 1 146 4 357 1 267 1 104 4 378 1 255 1 184 1 367 1 
24 1 322 2 25 1 169 1 347 1 267 2 104 2 120 1 146 2 220 1 121 1 74 1 367 1 84 1 
79 1 322 1 302 1 121 1 146 1 267 1 111 1 104 1 378 1 276 1 
322 2 3 1 151 1 169 1 121 1 146 2 267 1 319 1 104 2 78 1 367 1 
322 4 151 1 312 1 169 2 357 1 267 2 104 5 184 1 28 1 116 1 146 5 121 2 319 1 378 1 74 1 367 3 
322 4 151 1 89 1 169 2 357 1 267 2 104 5 184 1 28 1 116 1 146 5 121 2 319 1 378 1 74 1 367 3 
161 1 41 1 322 1 51 2 169 1 267 1 266 2 104 1 335 1 287 1 120 1 365 1 146 1 259 1 121 1 378 1 59 1 367 1 
24 1 322 1 169 1 267 2 104 1 91 1 120 1 146 1 121 1 74 1 136 1 367 1 84 1 
113 1 108 1 287 1 313 1 33 1 
162 2 323 1 113 2 226 2 325 1 313 1 103 1 42 1 234 1 373 1 108 2 45 1 287 1 366 1 57 1 69 1 33 2 39 1 82 1 
197 1 335 1 51 1 12 1 108 1 64 1 266 1 313 1 33 1 
373 1 313 1 69 1 
298 1 176 1 43 1 314 1 
298 1 328 1 345 1 269 1 43 1 96 1 314 1 
27 1 306 1 269 1 
343 1 345 1 114 2 43 1 37 1 314 1 298 1 328 3 250 1 235 1 269 3 96 1 
298 1 328 2 345 1 228 1 288 1 269 2 43 1 96 1 314 1 
79 1 316 1 328 1 345 1 235 1 302 1 269 1 96 1 284 1 314 1 242 1 
298 1 328 1 345 1 235 1 269 1 96 1 314 1 
298 2 328 1 345 1 235 1 269 1 43 1 96 1 
298 1 328 2 345 2 235 1 5 1 68 1 269 2 96 2 314 1 379 1 
345 1 228 2 370 1 43 1 314 2 298 1 316 1 328 3 235 1 237 1 374 1 269 3 96 1 
345 1 228 1 43 1 314 1 284 1 298 1 79 1 328 2 329 1 235 1 302 2 47 1 111 1 269 2 96 1 
345 2 228 2 370 1 43 1 314 2 298 1 316 1 328 4 235 1 288 1 269 4 96 2 320 1 
298 1 328 1 345 1 235 1 269 1 43 1 96 1 314 1 
343 1 345 1 228 2 114 1 370 1 43 2 314 3 298 2 316 1 250 1 328 4 203 1 269 4 96 1 
298 1 328 2 345 1 235 1 228 1 229 1 356 1 14 1 269 2 43 1 96 1 314 1 
343 2 345 1 114 2 43 1 314 1 298 1 250 1 328 3 235 1 219 1 269 3 96 1 
230 2 314 2 135 1 309 1 
328 1 100 1 345 1 235 1 269 1 96 1 
298 1 328 2 345 1 235 1 374 1 228 1 269 2 43 1 96 1 314 1 
233 1 
298 1 328 1 345 1 235 1 269 1 43 1 96 1 314 1 
298 1 328 3 345 1 235 1 374 1 228 1 114 1 269 3 43 1 96 1 314 1 
316 1 370 1 203 1 314 1 
298 1 314 1 

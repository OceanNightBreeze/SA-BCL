#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 107 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 109 162 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> -1
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1079 | > -> ==
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration; | RETURN | 1684 | return null
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1711 | stmt -> ;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | CONSTANT | 2573 | 0 -> 1
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 4096 | stmt -> ;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1071 | stmt -> ;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
23 1 357 1 306 2 257 1 231 1 341 1 139 1 310 1 68 1 287 1 144 2 293 3 318 1 124 4 346 1 267 2 153 9 12 1 351 2 38 5 158 6 271 1 195 1 325 2 375 1 164 2 198 2 277 9 
23 1 357 1 306 2 257 1 231 1 341 1 139 1 310 1 68 1 287 1 144 2 293 3 318 1 124 4 346 1 267 2 153 9 12 1 351 2 38 5 158 6 271 1 195 1 375 1 325 2 164 2 198 2 277 9 
23 1 357 1 306 2 257 1 231 1 341 1 139 1 310 1 68 1 287 1 144 2 293 4 318 1 124 5 346 1 267 2 153 10 12 1 351 2 38 6 158 7 271 1 195 1 375 1 325 2 164 2 198 2 277 10 
23 1 357 1 306 2 257 1 231 1 341 1 139 1 310 1 68 1 287 1 144 2 293 2 318 1 124 3 346 1 267 2 153 7 12 1 351 2 38 4 158 4 271 1 375 1 325 1 164 2 198 2 277 7 
124 2 346 1 267 1 153 4 351 1 12 1 38 3 231 1 158 3 310 1 287 1 195 1 325 2 164 1 198 1 144 1 293 1 277 4 
346 1 306 1 153 2 26 1 38 1 351 1 231 1 341 1 310 1 362 1 274 1 375 1 164 1 198 1 144 1 277 2 
23 1 124 1 346 1 306 1 153 3 351 2 38 2 231 1 158 1 310 1 164 2 293 1 277 3 
23 1 306 1 257 1 231 1 310 1 287 1 260 1 117 1 144 1 293 3 124 4 346 1 267 1 153 9 351 2 38 5 12 1 158 7 271 1 325 2 195 1 164 2 198 1 277 9 
23 1 306 1 257 1 231 1 310 1 287 1 260 1 117 1 144 1 293 3 124 4 346 1 267 1 153 9 351 2 38 5 12 1 158 7 271 1 325 2 195 1 164 2 198 1 277 9 
212 1 334 1 13 1 
123 2 148 1 13 1 
259 2 374 2 354 2 348 2 370 2 135 1 42 2 80 1 
279 1 48 2 229 1 307 1 232 1 4 1 233 1 113 2 259 2 361 1 261 2 99 1 100 1 290 1 367 1 9 1 118 1 237 1 103 2 317 1 319 1 149 2 348 2 216 1 370 3 176 1 42 2 80 1 324 1 82 1 374 3 354 2 251 1 252 1 135 1 85 1 46 1 
259 1 374 1 354 1 296 1 348 1 370 1 298 1 33 1 42 1 80 1 
25 1 228 1 370 1 284 1 13 1 212 1 352 1 259 1 374 1 219 1 222 1 33 1 188 1 202 1 
25 1 348 1 370 1 284 2 13 1 42 1 212 1 259 1 354 1 374 1 219 2 222 1 33 1 188 1 202 1 
95 1 295 1 219 1 284 1 182 1 
212 1 295 1 219 2 206 1 142 1 284 2 182 1 13 1 
295 1 219 1 284 1 
296 1 348 1 298 1 370 1 284 1 182 1 80 1 42 1 259 1 354 1 374 1 219 1 98 1 33 1 
13 1 
212 1 36 1 295 1 219 2 206 1 284 2 182 1 13 1 
74 1 295 2 206 1 60 1 150 2 350 1 151 1 284 5 182 2 13 1 212 1 161 1 219 5 365 1 6 1 327 2 305 1 133 2 342 1 
334 1 135 1 
348 1 370 2 42 1 259 2 374 2 354 1 55 1 187 1 135 2 
270 1 312 1 178 1 
317 1 149 1 216 1 370 1 176 1 232 1 360 1 113 1 374 1 100 1 290 1 135 1 9 1 118 1 46 1 103 1 
259 3 354 1 374 3 273 1 348 3 370 3 135 1 42 3 
259 1 374 1 296 1 348 1 370 1 33 1 42 1 
259 1 374 1 354 1 55 1 348 1 370 1 33 1 187 1 42 1 
25 1 279 1 48 2 229 1 284 1 232 1 4 1 233 1 113 1 259 3 361 1 261 1 99 1 100 1 290 1 33 1 367 1 187 1 9 1 118 1 188 1 237 1 103 1 58 1 317 1 319 1 149 1 216 1 348 3 370 4 176 1 42 3 80 1 245 1 354 2 374 4 219 1 220 1 273 1 222 1 135 1 85 1 46 1 202 1 
259 2 374 2 130 1 348 1 273 1 228 1 370 2 135 1 42 1 
58 1 25 1 348 3 370 3 210 1 284 1 13 1 42 3 259 3 245 1 354 1 374 3 219 1 273 2 222 1 33 1 187 1 188 1 202 1 
348 2 370 2 42 2 270 1 259 2 354 1 374 2 273 1 312 1 187 1 
317 1 149 1 216 1 370 1 176 1 232 1 113 1 374 1 100 1 290 1 135 1 118 1 9 1 46 1 103 1 
317 1 149 1 370 1 176 1 232 1 113 1 374 1 15 1 356 1 100 1 290 1 135 1 118 1 9 1 103 1 
48 2 3 1 229 1 285 1 112 1 359 1 52 1 4 2 233 1 361 1 261 4 312 2 237 1 190 1 319 1 154 1 270 2 82 2 376 1 45 1 178 2 275 1 110 1 85 1 
25 1 259 1 374 1 348 1 347 1 370 1 33 1 42 1 
58 1 317 1 149 1 216 1 348 1 370 2 176 1 232 1 42 1 113 1 270 1 259 1 374 2 273 1 100 1 290 1 9 1 118 1 46 1 103 1 
58 1 348 4 228 1 370 5 339 1 40 1 42 4 259 5 374 5 354 1 130 1 273 2 187 1 135 1 
259 2 374 2 296 1 347 1 348 2 370 2 33 1 42 2 
24 1 308 1 
24 1 308 1 
16 1 371 1 
16 1 371 1 
16 1 371 1 
24 1 197 1 308 1 
24 1 197 1 308 1 
24 1 320 1 308 1 
24 2 16 1 49 1 108 1 308 2 371 1 
24 1 197 1 308 1 
141 1 24 1 308 1 
141 1 24 1 308 1 
141 1 24 1 308 1 
146 2 24 2 369 2 173 1 239 3 207 1 49 1 138 2 284 2 308 2 13 1 53 1 373 2 302 1 219 2 221 2 7 1 276 1 134 1 
24 1 138 1 284 1 308 1 93 1 211 1 168 1 259 2 146 1 348 2 239 1 370 2 320 1 157 1 42 2 373 1 218 1 374 2 219 1 128 1 221 1 65 1 135 1 134 1 
267 1 198 1 144 1 
26 1 198 1 144 1 
14 1 358 1 227 1 267 2 26 1 198 3 
358 1 84 1 227 1 267 1 26 1 198 2 
358 2 267 1 227 1 26 1 198 2 
206 1 283 2 284 5 258 1 338 2 359 1 182 4 52 1 286 1 211 1 212 1 168 1 235 1 120 1 73 1 123 3 37 1 148 1 295 1 60 2 150 1 350 1 157 1 301 1 13 2 61 2 219 5 327 1 376 1 305 3 133 1 110 1 
0 5 180 1 284 9 338 6 182 7 286 1 52 3 95 5 98 1 6 1 295 6 296 1 148 3 348 1 298 1 150 2 60 6 350 1 300 1 157 4 13 5 301 3 61 6 354 1 196 1 19 1 305 8 110 3 206 1 258 2 359 3 212 1 114 1 259 1 363 1 33 1 120 2 123 9 370 1 42 1 80 1 374 1 219 9 327 2 376 3 133 2 
283 1 284 3 258 1 338 2 359 1 182 2 52 1 212 1 6 1 120 1 73 1 123 4 37 1 148 2 150 1 60 2 157 1 13 3 301 1 61 2 219 3 327 1 376 1 305 3 133 1 110 1 
180 1 283 2 284 4 258 1 338 4 359 2 182 3 52 2 212 1 363 1 6 1 120 1 73 1 123 8 37 1 148 4 150 1 60 4 300 1 157 2 13 5 301 2 61 4 219 4 327 1 376 2 305 5 133 1 110 2 
294 1 334 1 9 1 
234 1 9 1 
169 1 
9 1 118 1 
294 2 317 1 272 1 246 1 9 3 118 1 
317 1 9 1 118 1 
292 1 9 1 
35 2 66 1 253 1 3 3 181 1 11 1 4 3 52 1 159 1 82 4 247 1 261 7 376 1 45 2 20 1 119 1 223 1 
35 2 66 1 253 1 3 3 181 1 11 1 4 3 52 1 159 1 82 4 247 1 261 7 376 1 45 2 20 1 119 1 223 1 
35 2 66 1 253 1 266 1 3 3 181 1 11 1 4 3 52 1 159 1 82 4 247 1 261 7 376 1 45 2 20 1 119 1 223 1 
66 5 86 1 253 1 48 2 3 10 181 1 229 1 359 3 4 15 52 4 233 1 361 1 261 31 115 1 314 1 119 2 70 4 72 1 35 3 11 2 159 2 301 3 322 1 82 16 247 2 83 1 329 3 376 4 304 1 45 5 20 1 223 1 110 3 85 1 
66 1 253 1 48 4 3 4 181 1 229 2 52 1 4 4 233 2 361 2 261 9 119 1 35 2 191 1 11 1 159 1 160 1 82 5 247 1 376 1 304 1 45 3 20 1 85 2 
205 1 306 1 26 1 230 1 231 1 232 1 113 1 310 1 288 1 170 1 313 1 100 1 144 1 103 1 346 1 149 1 297 1 267 1 153 2 38 1 351 1 39 1 244 1 158 1 64 1 14 1 164 1 198 2 200 1 277 2 
205 1 91 1 306 1 26 1 230 1 92 1 232 1 113 1 310 1 288 1 313 1 100 1 144 1 103 1 59 1 346 1 149 1 297 1 267 1 153 3 38 1 351 1 39 1 244 1 158 2 14 1 164 1 198 2 200 1 277 3 
205 1 306 1 91 1 26 1 230 1 92 1 232 1 113 1 310 1 288 1 313 1 100 1 144 1 103 1 346 1 149 1 297 1 267 1 153 2 38 1 244 1 158 2 14 1 198 2 277 2 
335 1 59 1 205 2 344 1 174 1 306 2 149 1 176 1 153 1 351 1 230 2 232 1 94 1 113 1 186 1 288 2 165 1 164 1 100 1 9 1 118 1 277 1 103 1 
205 1 297 1 306 1 91 1 149 1 267 1 26 1 153 1 351 1 230 1 244 1 39 1 232 1 231 1 113 1 288 1 14 1 170 1 313 1 164 1 100 1 198 2 144 1 200 1 277 1 103 1 
172 1 
228 1 284 5 232 1 5 2 100 1 8 2 9 1 188 1 343 1 103 2 148 2 295 6 149 2 349 1 60 2 150 1 350 1 156 1 13 2 352 1 353 1 165 1 305 2 21 2 22 1 201 2 202 1 25 1 206 3 255 2 27 1 309 1 113 2 212 1 259 1 366 1 33 1 118 1 120 1 123 2 174 1 370 1 176 2 321 2 75 1 76 1 269 2 79 1 374 1 219 5 127 4 328 1 327 1 222 1 133 1 
25 1 206 1 228 1 284 3 259 1 366 1 33 1 188 1 36 1 295 2 349 1 370 1 76 1 156 1 79 1 352 1 374 1 219 3 127 2 222 1 21 1 202 1 
25 1 206 1 228 1 284 3 212 1 259 1 366 1 33 1 188 1 36 1 295 1 349 1 370 1 76 1 269 1 156 1 79 1 13 1 352 1 374 1 219 3 127 3 222 1 202 1 
25 1 206 1 228 1 284 3 212 1 259 1 366 1 33 1 188 1 36 1 295 2 349 1 370 1 76 1 321 1 269 1 156 1 79 1 13 1 352 1 374 1 219 3 127 3 222 1 21 1 202 1 
333 1 228 1 284 5 5 2 188 1 8 2 343 1 295 7 148 2 349 1 150 1 60 1 350 1 156 1 13 5 352 1 305 1 21 4 199 1 201 2 202 1 203 1 25 1 206 3 255 2 309 1 212 5 259 1 262 1 366 1 33 1 36 1 370 1 321 4 76 1 269 4 78 1 79 1 374 1 127 6 219 5 222 1 327 1 133 1 
228 1 284 4 5 2 188 1 8 2 343 1 148 2 295 4 349 1 150 1 60 1 350 1 156 1 13 2 352 1 305 1 21 2 201 2 202 1 25 1 206 2 255 2 309 1 212 1 259 1 366 1 33 1 123 2 370 1 76 1 321 2 269 2 79 1 374 1 127 4 219 4 222 1 327 1 328 1 133 1 
203 1 25 1 206 2 255 2 228 1 284 4 309 1 212 1 259 1 5 2 366 1 33 1 8 2 188 1 343 1 295 4 148 2 349 1 60 1 150 1 370 1 350 1 321 2 76 1 269 2 78 1 156 1 79 1 13 1 352 1 374 1 219 4 127 4 222 1 327 1 305 1 21 2 133 1 199 1 201 2 202 1 
203 1 25 1 206 2 255 2 228 1 284 4 309 1 212 1 259 1 5 2 366 1 33 1 8 2 188 1 343 1 295 4 148 2 349 1 60 1 150 1 370 1 350 1 321 2 76 1 269 2 78 1 156 1 79 1 13 1 352 1 374 1 219 4 127 4 222 1 327 1 305 1 21 2 133 1 199 1 201 2 202 1 
25 1 206 2 228 1 284 4 212 1 259 1 97 1 5 2 366 1 33 1 263 1 188 1 343 1 123 2 147 2 295 4 349 1 175 2 60 1 150 1 370 1 268 1 350 1 321 2 76 1 269 2 156 1 79 1 13 1 352 1 374 1 219 4 127 4 222 1 327 1 305 1 21 2 133 1 199 1 201 2 202 1 
203 1 333 1 25 1 206 2 255 2 228 1 284 4 309 1 212 1 259 1 5 2 366 1 33 1 8 2 188 1 343 1 148 2 295 5 349 1 60 1 150 1 370 1 350 1 76 1 321 3 269 3 78 1 156 1 79 1 13 1 352 1 374 1 219 4 127 5 327 1 222 1 305 1 133 1 21 3 199 1 201 2 202 1 
203 1 333 1 25 1 206 2 255 2 228 1 284 4 309 1 212 1 259 1 5 2 366 1 33 1 8 2 188 1 343 1 148 2 295 5 349 1 60 1 150 1 370 1 350 1 76 1 321 3 269 3 78 1 156 1 79 1 13 1 352 1 374 1 219 4 127 5 327 1 222 1 305 1 133 1 21 3 199 1 201 2 202 1 
228 1 284 4 5 2 188 1 343 1 147 2 295 4 349 1 150 1 60 1 350 1 156 1 13 1 352 1 305 1 21 2 201 2 202 1 25 1 206 2 212 1 259 1 366 1 33 1 123 2 370 1 175 2 268 1 76 1 321 2 269 2 79 1 374 1 127 4 219 4 222 1 327 1 328 1 133 1 
35 1 334 1 253 1 319 1 48 2 3 2 181 1 229 1 285 1 4 3 52 1 159 1 233 1 270 1 82 3 361 1 261 6 312 1 376 1 45 2 178 1 20 1 135 2 119 1 237 1 85 1 
66 1 47 1 279 1 48 4 3 2 50 1 229 2 28 1 359 1 4 6 52 2 233 2 361 2 261 14 312 4 115 1 70 3 237 1 319 2 301 2 270 11 324 1 63 1 82 8 83 1 329 3 331 1 376 1 45 1 178 11 135 1 110 2 85 2 
279 1 48 2 282 1 229 1 28 1 232 1 360 1 4 1 113 1 233 1 259 1 361 1 261 2 312 1 100 1 290 1 291 1 9 1 118 1 237 1 103 1 58 1 317 1 104 1 149 1 319 1 216 1 348 1 370 2 176 1 42 1 324 1 374 2 82 1 273 1 135 1 46 1 85 1 
88 1 89 1 90 2 279 1 91 1 48 6 3 8 181 1 229 3 232 2 4 10 52 3 233 3 340 2 100 2 290 2 9 2 145 2 237 3 103 3 58 1 149 3 348 1 159 1 301 2 194 1 20 1 110 2 66 4 253 1 28 1 359 2 113 3 259 1 361 3 261 20 312 7 367 2 119 1 118 2 215 2 35 1 317 2 319 3 216 2 370 3 176 1 42 1 270 7 324 1 374 3 82 10 273 1 376 3 45 4 178 7 135 2 85 3 46 2 
87 1 279 1 91 1 48 4 229 2 307 2 285 1 232 2 4 1 113 7 233 2 259 1 361 2 261 2 56 1 100 2 9 3 118 2 237 2 103 8 149 8 319 2 174 1 348 1 370 1 176 2 105 1 42 1 64 1 324 1 374 1 82 1 273 1 355 1 248 1 165 1 132 1 109 1 85 2 
48 2 3 1 229 1 28 1 359 1 52 1 4 2 233 1 259 1 361 1 261 3 312 1 236 1 187 1 237 1 319 1 348 1 370 1 301 1 42 1 270 1 354 1 374 1 82 1 376 1 45 1 178 1 110 1 85 1 
66 1 319 1 48 2 3 1 229 1 154 1 285 1 52 1 233 1 270 1 361 1 82 2 261 2 312 1 178 1 110 1 237 1 85 1 
190 1 319 1 48 2 3 1 229 1 285 1 359 1 4 2 233 1 270 1 361 1 261 2 312 1 376 1 45 1 178 1 237 1 85 1 
66 1 48 2 3 2 229 1 285 1 359 1 52 1 4 2 233 1 361 1 261 4 312 2 237 1 319 1 301 1 270 2 82 2 376 1 45 1 178 2 110 1 85 1 
66 1 319 1 48 2 3 1 229 1 154 1 52 1 233 1 270 1 361 1 82 2 261 2 312 1 355 1 178 1 110 1 237 1 85 1 
190 1 319 1 48 2 3 1 229 1 359 1 4 2 233 1 270 1 361 1 261 2 312 1 355 1 376 1 45 1 178 1 237 1 85 1 
66 1 48 2 3 2 229 1 359 1 52 1 4 2 233 1 361 1 261 4 312 2 237 1 319 1 301 1 270 2 82 2 355 1 376 1 45 1 178 2 110 1 85 1 
66 1 319 1 48 2 3 2 229 1 359 1 4 2 301 1 52 1 233 1 270 2 361 1 82 2 261 4 312 2 376 1 45 1 178 2 110 1 237 1 85 1 
279 1 48 2 229 1 232 1 4 1 113 1 233 1 361 1 261 2 100 1 290 1 367 1 118 1 9 1 237 1 103 1 317 1 149 1 319 1 216 1 370 1 176 1 324 1 82 1 374 1 135 1 46 1 85 1 
279 1 48 2 229 1 232 1 4 1 113 1 233 1 361 1 261 2 100 1 290 1 118 1 9 1 237 1 103 1 317 1 149 1 319 1 370 1 176 1 324 1 82 1 374 1 163 1 15 1 356 1 135 1 85 1 
66 1 48 2 3 2 229 1 28 1 359 1 52 1 4 2 233 1 361 1 261 4 312 2 237 1 319 1 301 1 270 2 82 2 376 1 45 1 178 2 110 1 85 1 
66 1 90 1 48 2 3 2 229 1 359 1 232 1 4 2 52 1 113 1 233 1 361 1 261 4 312 2 100 1 290 1 367 1 118 1 9 1 237 1 103 1 317 1 149 1 319 1 216 1 370 1 301 1 270 2 64 1 82 2 374 1 376 1 45 1 178 2 110 1 46 1 85 1 
66 1 48 2 3 1 229 1 28 1 359 1 4 1 52 1 233 1 259 1 361 1 311 1 261 3 312 1 187 1 237 1 319 1 348 1 370 1 301 1 42 1 270 1 354 1 374 1 82 2 376 1 178 1 110 1 85 1 
66 3 254 2 281 1 48 4 3 6 51 1 229 2 359 3 4 10 52 3 233 2 361 2 261 19 115 1 69 1 70 2 316 2 345 1 191 1 372 1 301 3 82 9 129 1 83 1 326 1 329 1 376 3 45 3 110 3 85 2 
66 2 254 1 48 6 3 4 51 2 229 3 166 1 359 2 4 12 52 3 233 3 54 1 361 3 261 26 69 2 115 2 101 1 70 2 316 4 265 1 191 1 152 1 372 1 301 3 82 14 129 1 326 1 329 2 304 2 376 2 249 1 45 2 110 3 85 3 
66 4 253 1 254 1 281 1 48 6 256 1 3 8 181 1 51 1 229 3 166 1 359 4 4 21 52 5 233 3 54 1 361 3 261 41 115 3 69 2 101 1 119 1 70 4 316 4 35 1 265 1 191 1 152 1 159 1 372 1 301 4 82 20 129 1 83 1 326 1 329 3 304 1 249 1 376 5 45 4 20 1 110 4 85 3 
66 3 253 1 254 1 281 1 48 8 256 1 3 7 181 1 51 1 229 4 166 1 359 3 4 18 52 5 233 4 54 1 361 4 261 38 115 3 69 2 101 1 119 1 70 4 316 4 35 1 265 1 191 1 152 1 159 1 372 1 301 4 82 20 129 1 83 1 326 1 329 3 304 2 249 1 376 4 45 4 20 1 110 4 85 4 
66 7 253 1 254 1 48 4 3 14 181 1 51 1 229 2 166 1 359 7 4 25 52 8 233 2 54 1 361 2 261 52 115 2 69 1 101 1 119 1 70 4 316 4 35 1 265 1 191 1 152 1 159 1 372 1 301 7 63 2 82 27 129 1 83 2 326 1 329 4 304 1 249 1 376 8 45 7 20 1 110 7 85 2 
146 1 24 1 204 1 221 1 49 1 138 1 308 1 276 1 53 1 373 1 
320 1 93 1 
146 1 24 1 96 1 221 1 138 1 308 1 67 1 136 1 373 1 
146 1 24 1 369 1 173 1 239 2 49 1 138 1 284 1 308 1 13 1 53 1 373 1 302 1 219 1 221 1 7 1 276 1 134 1 
146 1 24 1 369 1 173 1 239 2 49 1 138 1 284 1 308 1 13 1 53 1 373 1 302 1 219 1 221 1 7 1 276 1 134 1 
146 1 24 1 369 1 173 1 239 2 49 1 138 1 284 1 308 1 13 1 53 1 373 1 302 1 219 1 221 1 7 1 276 1 134 1 
278 1 197 1 108 1 
278 1 197 1 108 1 
141 1 243 1 
141 1 108 1 243 1 
65 1 218 1 
146 1 24 1 369 1 173 1 348 2 239 1 370 2 320 1 138 1 284 1 308 1 93 1 157 1 182 1 41 1 42 2 218 1 211 1 373 1 168 1 259 2 374 2 219 1 128 1 221 1 65 1 135 1 
278 1 197 1 
141 1 108 1 243 1 
279 1 1 1 280 1 48 2 208 1 229 1 307 2 28 1 232 1 4 1 233 1 113 2 184 1 259 2 361 1 261 2 100 1 9 1 118 1 237 1 103 2 149 2 319 1 370 2 324 1 374 2 82 1 248 1 377 1 109 1 85 1 
205 1 91 1 149 2 2 1 267 1 26 1 244 1 232 1 113 2 185 1 64 1 14 1 313 1 100 1 198 2 144 1 200 1 34 1 103 2 
205 1 91 1 149 1 2 1 267 1 26 1 244 1 232 1 113 1 14 1 313 1 100 1 198 2 144 1 332 1 200 1 103 1 
205 1 149 1 174 1 176 1 192 1 232 1 94 1 113 1 165 1 100 1 9 1 118 1 34 1 103 1 
205 1 91 1 149 1 2 1 267 1 26 1 244 1 232 1 113 1 185 1 14 1 313 1 100 1 198 2 144 1 200 1 34 1 103 1 
238 1 
212 1 334 1 161 1 365 1 60 1 305 1 13 1 
206 1 255 1 284 1 309 1 212 1 8 1 123 1 148 1 295 1 60 1 150 1 350 1 13 2 219 1 327 1 305 1 133 1 
284 5 338 6 232 2 52 2 57 1 234 3 143 1 100 1 9 6 188 2 145 2 103 2 294 2 10 2 295 5 148 6 149 2 150 4 60 8 350 4 155 2 13 8 301 2 61 6 64 1 161 1 303 2 107 1 305 9 110 2 206 3 27 1 167 2 359 2 113 2 212 2 213 2 365 1 31 2 116 1 118 1 120 2 317 1 123 12 176 1 272 1 219 5 327 4 376 2 131 1 133 4 224 2 
206 1 27 1 284 1 338 5 166 1 359 2 52 2 212 2 54 1 31 1 115 1 101 1 120 1 70 1 10 2 123 6 295 1 148 3 150 2 60 5 299 1 152 1 350 2 13 5 301 2 61 5 219 1 44 1 327 2 329 1 249 1 376 2 305 8 133 2 110 2 
203 1 253 1 284 1 52 2 259 1 98 1 31 1 33 1 119 1 10 2 296 1 348 1 370 1 150 1 60 2 298 1 350 1 77 1 159 1 80 1 42 1 374 1 354 1 219 1 327 1 376 1 305 2 133 1 
150 1 60 1 350 1 13 1 212 1 161 1 365 1 327 1 305 1 133 1 
10 2 123 10 148 5 60 5 338 5 359 2 301 2 52 2 13 5 61 5 31 1 376 2 305 5 145 1 110 2 
212 1 219 1 295 1 206 1 284 1 13 1 
206 2 27 2 284 3 232 1 113 2 289 1 57 2 6 1 100 1 143 1 9 1 118 1 120 2 103 2 295 4 149 2 174 1 150 2 60 2 176 2 350 1 75 1 353 1 219 3 17 1 327 2 165 1 305 2 133 2 
279 1 48 2 229 1 232 1 4 1 233 1 113 1 259 2 361 1 261 1 99 1 100 1 290 1 367 1 118 1 9 1 237 1 103 1 317 1 149 1 319 1 348 2 216 1 370 3 176 1 42 2 80 1 374 3 354 2 135 1 85 1 46 1 
35 1 123 4 148 2 60 2 150 1 350 1 27 1 338 2 13 4 61 2 212 2 327 1 305 1 133 1 120 1 
138 1 29 1 373 1 
138 1 29 1 373 1 
140 1 138 1 53 1 218 1 373 1 
138 1 29 1 373 1 
18 1 138 1 373 1 
18 1 138 1 373 1 
18 1 138 1 373 1 
138 1 373 1 
24 1 308 1 
35 1 66 1 253 1 48 4 3 3 181 1 229 2 52 1 4 4 159 1 233 2 82 4 361 2 261 8 376 1 304 1 45 2 20 1 119 1 85 2 
35 1 334 1 253 1 3 2 181 1 4 3 159 1 52 1 82 3 261 6 376 1 45 2 20 1 119 1 
66 1 48 2 3 2 229 1 359 1 4 2 301 1 52 1 233 1 361 1 82 2 261 4 376 1 45 1 110 1 85 1 137 1 
66 1 3 2 359 1 4 4 301 1 52 1 82 3 261 7 83 1 115 1 329 1 376 1 45 1 110 1 70 2 
66 4 253 1 48 4 3 9 181 1 50 1 229 2 359 2 52 3 4 12 233 2 361 2 261 23 119 2 70 2 71 1 35 1 159 2 301 2 63 1 82 11 83 1 329 2 376 3 304 2 45 5 20 1 110 2 85 2 
261 1 4 1 70 1 
82 1 261 1 329 1 
66 1 48 2 3 3 229 1 359 1 4 3 301 1 52 1 233 1 361 1 82 3 261 6 376 1 45 2 145 1 110 1 85 1 137 1 
66 1 48 2 3 2 191 1 152 1 229 1 166 1 359 2 52 2 301 2 4 6 233 1 54 1 82 6 361 1 261 12 115 1 329 1 376 2 249 1 45 1 101 1 110 2 85 1 70 1 
66 1 253 1 3 2 52 1 4 3 159 1 82 3 261 6 376 1 45 1 119 1 
66 1 48 2 3 2 181 1 229 1 159 1 4 2 233 1 82 1 361 1 261 3 304 1 45 1 20 1 119 1 71 1 85 1 
66 2 253 1 48 2 191 1 3 5 229 1 77 1 159 2 4 5 52 2 233 1 361 1 82 5 261 10 376 2 45 3 119 2 85 1 
66 1 48 2 191 1 3 1 229 1 52 1 233 1 361 1 82 2 261 2 110 1 85 1 
66 1 48 2 3 2 191 1 229 1 359 1 4 2 301 1 52 1 233 1 361 1 82 2 261 4 376 1 45 1 110 1 85 1 
66 1 281 1 48 6 191 1 3 2 229 3 4 2 159 1 233 3 361 3 82 1 261 3 304 1 45 1 119 1 71 1 85 3 
86 1 66 5 253 2 281 1 48 10 3 12 181 1 229 5 359 3 4 18 52 5 233 5 361 5 261 34 314 1 115 1 119 3 71 1 70 4 72 1 35 1 191 1 159 3 301 3 82 16 83 1 329 3 304 2 376 5 45 7 20 1 110 3 85 5 137 1 
253 1 48 2 3 2 181 1 229 1 52 1 4 4 233 1 54 1 361 1 261 8 115 1 119 1 70 1 35 1 191 1 159 1 82 4 329 1 376 1 45 2 20 1 85 1 
66 1 253 1 48 4 3 3 181 1 229 2 4 5 52 2 233 2 54 1 361 2 261 11 115 1 119 1 70 2 35 1 191 1 159 1 301 1 82 6 83 1 329 1 376 1 45 2 20 1 110 1 85 2 137 1 
66 1 253 1 48 6 3 4 181 1 229 3 166 1 359 2 4 10 52 3 233 3 54 1 361 3 261 19 115 1 101 1 119 1 70 1 35 1 191 1 152 1 159 1 301 2 82 9 329 1 249 1 376 3 304 1 45 3 20 1 110 2 85 3 137 1 
66 2 253 1 48 6 3 5 181 1 229 3 166 1 359 1 4 7 52 3 233 3 54 1 361 3 261 17 115 1 101 1 119 1 70 1 35 1 191 1 152 1 159 1 301 2 82 10 329 1 304 1 249 1 376 2 45 3 20 1 110 2 85 3 137 1 
253 1 48 2 3 2 181 1 229 1 52 1 4 4 233 1 54 1 361 1 261 8 115 1 119 1 70 1 35 1 191 1 159 1 82 4 329 1 376 1 45 2 20 1 85 1 
66 1 48 2 3 2 191 1 152 1 229 1 166 1 359 2 52 2 301 2 4 6 233 1 54 1 82 6 361 1 261 12 115 1 329 1 376 2 249 1 45 1 101 1 110 2 85 1 70 1 
66 2 253 1 48 8 3 5 181 1 229 4 166 1 359 1 4 8 52 3 233 4 54 1 361 4 261 18 115 1 101 1 119 1 70 1 35 1 191 1 152 1 159 1 301 2 82 10 329 1 249 1 376 2 304 2 45 3 20 1 110 2 85 4 137 1 
66 3 48 8 281 1 3 6 229 4 166 1 359 2 4 7 52 3 233 4 54 1 361 4 261 16 115 1 101 1 70 1 191 1 152 1 301 3 82 9 329 1 249 1 376 2 304 2 45 3 110 3 85 4 
66 3 253 1 3 6 181 2 4 4 159 3 52 1 82 3 261 7 376 1 45 3 20 1 119 3 
66 1 253 1 48 8 281 1 3 4 181 1 229 4 166 1 359 1 4 8 52 3 233 4 54 1 361 4 261 18 115 1 101 1 119 1 70 1 35 1 191 1 152 1 159 1 301 2 82 10 329 1 249 1 376 2 304 2 45 3 20 1 110 2 85 4 
259 1 374 1 225 1 130 1 370 1 228 1 135 1 
122 1 225 1 228 1 370 1 125 1 217 1 259 1 374 1 130 1 250 1 32 1 135 1 
334 1 174 1 149 1 165 1 176 1 100 1 232 1 9 1 118 1 103 1 113 1 
317 1 149 1 348 1 216 1 370 2 176 1 232 1 42 1 113 1 259 1 374 2 273 1 100 1 290 1 135 1 9 1 118 1 103 1 
259 1 374 1 348 1 273 1 370 1 57 1 42 1 
259 1 374 1 348 1 273 1 370 1 57 1 42 1 
219 1 57 1 284 1 
219 1 57 1 284 1 
87 1 149 1 100 1 232 1 103 1 113 1 
317 1 87 1 91 1 149 7 336 1 209 1 176 2 307 1 232 3 105 1 113 6 64 1 272 1 56 1 100 2 132 1 109 1 118 2 9 3 368 1 103 7 
90 1 253 1 48 4 3 2 208 1 181 1 229 2 28 1 232 1 4 3 52 1 233 2 113 1 340 1 259 1 361 2 261 6 312 1 100 1 290 1 367 1 119 1 9 1 118 1 237 2 103 1 35 1 317 1 319 2 149 1 348 1 216 1 370 2 159 1 42 1 270 1 64 1 82 3 374 2 273 1 376 1 45 2 178 1 20 1 135 2 85 2 46 1 
206 1 284 3 182 1 113 1 212 1 213 1 365 1 234 1 143 1 9 2 188 1 103 1 294 1 295 2 149 1 60 1 150 2 176 1 350 2 155 1 13 1 161 1 219 3 303 1 327 2 305 1 133 2 224 1 
294 1 317 1 87 1 149 2 232 2 113 2 64 1 272 1 116 1 100 1 118 1 9 2 103 2 
149 4 174 1 176 1 242 1 232 1 113 4 323 1 64 1 165 1 100 1 118 1 9 1 103 4 
317 1 88 1 149 1 336 1 209 1 232 2 113 1 364 1 30 1 57 1 100 1 118 1 9 1 103 1 
149 1 313 1 176 1 26 1 100 1 198 1 144 1 232 1 103 1 113 1 
64 1 1 1 91 1 149 2 100 1 232 1 9 1 118 1 109 1 103 2 113 2 
174 1 149 4 176 1 242 1 232 2 105 1 113 3 64 1 57 1 165 1 100 2 132 1 109 1 118 2 9 3 103 4 
174 1 149 4 176 1 242 1 232 2 113 3 64 1 162 1 57 1 165 1 100 2 132 1 109 1 118 2 9 3 103 4 
317 1 149 1 348 1 370 2 176 1 232 1 42 1 113 1 259 1 374 2 273 1 356 1 100 1 290 1 135 1 9 1 118 1 103 1 
57 1 
184 1 259 1 62 1 374 1 280 1 370 1 315 1 241 1 377 1 
43 1 315 1 264 1 
62 1 111 1 315 1 241 1 135 1 
25 1 240 1 111 2 284 2 241 2 182 1 13 1 212 1 43 1 62 2 245 1 219 2 222 1 315 1 33 1 135 1 188 1 264 1 202 1 
310 1 334 1 346 1 38 1 
310 1 346 1 164 1 153 1 38 1 351 1 277 1 
306 1 230 1 277 1 
226 1 346 1 153 3 337 1 38 1 351 1 231 1 177 1 341 2 310 1 164 1 277 3 
310 1 346 1 325 1 164 1 153 2 38 1 351 1 158 1 277 2 
124 1 267 1 164 1 153 1 38 1 12 1 351 1 198 1 144 1 231 1 277 1 
310 1 164 1 153 1 38 1 351 1 231 1 277 1 
310 2 346 1 164 1 153 1 351 1 231 1 277 1 
179 1 193 1 153 2 38 1 351 2 231 1 310 1 164 2 378 1 277 2 
124 1 346 1 153 3 351 1 257 1 38 2 231 1 158 2 310 1 271 1 164 1 293 1 277 3 
346 1 267 1 26 1 153 2 38 1 351 1 231 1 158 1 126 1 310 1 14 1 164 1 198 2 144 1 277 2 
310 1 124 1 346 1 325 1 195 1 164 2 153 4 38 2 351 2 293 1 158 2 231 1 277 4 
310 1 346 1 164 1 153 1 38 1 351 1 231 1 277 1 
124 1 346 2 337 1 153 4 351 1 38 3 158 2 177 1 341 1 81 1 310 2 164 1 293 1 277 4 
346 1 153 2 38 1 351 1 231 1 158 1 310 1 260 1 106 1 164 1 330 1 277 2 
346 1 153 3 337 2 38 1 351 1 231 1 177 1 341 2 310 1 164 1 277 3 189 1 
171 1 38 2 183 2 121 1 
164 1 153 1 351 1 231 1 102 1 277 1 
310 1 346 1 164 1 153 2 38 1 257 1 351 1 158 1 231 1 277 2 
214 1 
310 1 346 1 164 1 153 1 38 1 351 1 231 1 277 1 
346 1 153 3 351 1 38 1 257 1 158 1 231 1 341 1 310 1 164 1 277 3 
81 1 124 1 38 1 293 1 
310 1 38 1 
